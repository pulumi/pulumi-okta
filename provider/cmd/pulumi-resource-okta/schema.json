{
    "name": "okta",
    "description": "A Pulumi package for creating and managing okta resources.",
    "keywords": [
        "pulumi",
        "okta"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`okta` Terraform Provider](https://github.com/okta/terraform-provider-okta).",
    "repository": "https://github.com/pulumi/pulumi-okta",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiToken": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "backoff": {
                "type": "boolean",
                "description": "Use exponential back off strategy for rate limits.\n"
            },
            "baseUrl": {
                "type": "string",
                "description": "The Okta url. (Use 'oktapreview.com' for Okta testing)\n"
            },
            "clientId": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "logLevel": {
                "type": "integer",
                "description": "providers log level. Minimum is 1 (TRACE), and maximum is 5 (ERROR)\n"
            },
            "maxRetries": {
                "type": "integer",
                "description": "maximum number of retries to attempt before erroring out.\n"
            },
            "maxWaitSeconds": {
                "type": "integer",
                "description": "maximum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.\n"
            },
            "minWaitSeconds": {
                "type": "integer",
                "description": "minimum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.\n"
            },
            "orgName": {
                "type": "string",
                "description": "The organization to manage in Okta.\n"
            },
            "parallelism": {
                "type": "integer",
                "description": "Number of concurrent requests to make within a resource where bulk operations are not possible. Take note of\nhttps://developer.okta.com/docs/api/getting_started/rate-limits.\n"
            },
            "privateKey": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "requestTimeout": {
                "type": "integer",
                "description": "Timeout for single request (in seconds) which is made to Okta, the default is `0` (means no limit is set). The maximum\nvalue can be `300`.\n"
            },
            "scopes": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "API Token granting privileges to Okta API.\n"
            }
        }
    },
    "types": {
        "okta:app/AutoLoginUser:AutoLoginUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scope"
                    ]
                }
            }
        },
        "okta:app/BasicAuthUser:BasicAuthUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the Application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scope"
                    ]
                }
            }
        },
        "okta:app/BookmarkUser:BookmarkUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the Application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scope"
                    ]
                }
            }
        },
        "okta:app/OAuthGroupsClaim:OAuthGroupsClaim": {
            "properties": {
                "filterType": {
                    "type": "string",
                    "description": "Groups claim filter. Can only be set if type is `\"FILTER\"`. Valid values: `\"EQUALS\"`, `\"STARTS_WITH\"`, `\"CONTAINS\"`, `\"REGEX\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the claim that will be used in the token.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Groups claim type. Valid values: `\"FILTER\"`, `\"EXPRESSION\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Value of the claim. Can be an Okta Expression Language statement that evaluates at the time the token is minted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "type",
                "value"
            ]
        },
        "okta:app/OAuthJwk:OAuthJwk": {
            "properties": {
                "e": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kid": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kty": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "n": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "kid",
                "kty"
            ]
        },
        "okta:app/OAuthUser:OAuthUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scope"
                    ]
                }
            }
        },
        "okta:app/SamlAttributeStatement:SamlAttributeStatement": {
            "properties": {
                "filterType": {
                    "type": "string",
                    "description": "Type of group attribute filter. Valid values are: `\"STARTS_WITH\"`, `\"EQUALS\"`, `\"CONTAINS\"`, or `\"REGEX\"`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filterValue": {
                    "type": "string",
                    "description": "Filter value to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute statement.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": "The attribute namespace. It can be set to `\"urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified\"`, `\"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\"`, or `\"urn:oasis:names:tc:SAML:2.0:attrname-format:basic\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of attribute statement value. Valid values are: `\"EXPRESSION\"` or `\"GROUP\"`. Default is `\"EXPRESSION\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "okta:app/SamlUser:SamlUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "id of application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scope"
                    ]
                }
            }
        },
        "okta:app/SecurePasswordStoreUser:SecurePasswordStoreUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scope"
                    ]
                }
            }
        },
        "okta:app/SwaUser:SwaUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scope"
                    ]
                }
            }
        },
        "okta:app/ThreeFieldUser:ThreeFieldUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scope"
                    ]
                }
            }
        },
        "okta:app/UserSchemaArrayOneOf:UserSchemaArrayOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "value mapping to member of `enum`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:app/UserSchemaOneOf:UserSchemaOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "value mapping to member of `enum`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:app/getSamlAttributeStatement:getSamlAttributeStatement": {
            "properties": {
                "filterType": {
                    "type": "string",
                    "description": "Type of group attribute filter.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filterValue": {
                    "type": "string",
                    "description": "Filter value to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute statement.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": "The attribute namespace.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of attribute statement value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filterType",
                "filterValue",
                "name",
                "namespace",
                "type",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:auth/getServerScopesScope:getServerScopesScope": {
            "properties": {
                "consent": {
                    "type": "string",
                    "description": "Indicates whether a consent dialog is needed for the Scope\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "default": {
                    "type": "boolean",
                    "description": "Whether the Scope is a default Scope\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Scope\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "description": "Name of the end user displayed in a consent dialog box\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "ID of the Scope\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataPublish": {
                    "type": "string",
                    "description": "Whether the Scope should be included in the metadata\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Scope\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "system": {
                    "type": "boolean",
                    "description": "Whether Okta created the Scope\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "consent",
                "default",
                "description",
                "displayName",
                "id",
                "metadataPublish",
                "name",
                "system"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:deprecated/AuthLoginAppUser:AuthLoginAppUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scope"
                    ]
                }
            }
        },
        "okta:deprecated/BookmarkAppUser:BookmarkAppUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scope"
                    ]
                }
            }
        },
        "okta:deprecated/OauthAppGroupsClaim:OauthAppGroupsClaim": {
            "properties": {
                "filterType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "type",
                "value"
            ]
        },
        "okta:deprecated/OauthAppJwk:OauthAppJwk": {
            "properties": {
                "e": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kid": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kty": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "n": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "kid",
                "kty"
            ]
        },
        "okta:deprecated/OauthAppUser:OauthAppUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scope"
                    ]
                }
            }
        },
        "okta:deprecated/SamlAppAttributeStatement:SamlAppAttributeStatement": {
            "properties": {
                "filterType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filterValue": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "okta:deprecated/SamlAppUser:SamlAppUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scope"
                    ]
                }
            }
        },
        "okta:deprecated/SecurePasswordStoreAppUser:SecurePasswordStoreAppUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scope"
                    ]
                }
            }
        },
        "okta:deprecated/SignonPolicyRuleFactorSequence:SignonPolicyRuleFactorSequence": {
            "properties": {
                "primaryCriteriaFactorType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "primaryCriteriaProvider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secondaryCriterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/SignonPolicyRuleFactorSequenceSecondaryCriteria:SignonPolicyRuleFactorSequenceSecondaryCriteria"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "primaryCriteriaFactorType",
                "primaryCriteriaProvider"
            ]
        },
        "okta:deprecated/SignonPolicyRuleFactorSequenceSecondaryCriteria:SignonPolicyRuleFactorSequenceSecondaryCriteria": {
            "properties": {
                "factorType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "factorType",
                "provider"
            ]
        },
        "okta:deprecated/SwaAppUser:SwaAppUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scope"
                    ]
                }
            }
        },
        "okta:deprecated/ThreeFieldAppUser:ThreeFieldAppUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scope"
                    ]
                }
            }
        },
        "okta:index/AppGroupAssignmentsGroup:AppGroupAssignmentsGroup": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the group to assign.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of group assignment\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "profile": {
                    "type": "string",
                    "description": "JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "okta:index/AppSharedCredentialsUser:AppSharedCredentialsUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of an app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "scope"
                    ]
                }
            }
        },
        "okta:index/AppUserSchemaPropertyArrayOneOf:AppUserSchemaPropertyArrayOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "value mapping to member of `enum`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:index/AppUserSchemaPropertyOneOf:AppUserSchemaPropertyOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "value mapping to member of `enum`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:index/DomainDnsRecord:DomainDnsRecord": {
            "properties": {
                "expiration": {
                    "type": "string",
                    "description": "TXT record expiration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fqdn": {
                    "type": "string",
                    "description": "DNS record name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recordType": {
                    "type": "string",
                    "description": "Record type can be TXT or CNAME.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "DNS verification value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expiration",
                        "fqdn",
                        "recordType",
                        "values"
                    ]
                }
            }
        },
        "okta:index/EventHookHeader:EventHookHeader": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Key to use for authentication, usually the header name, for example `\"Authorization\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Authentication secret.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "okta:index/TemplateSmsTranslation:TemplateSmsTranslation": {
            "properties": {
                "language": {
                    "type": "string",
                    "description": "The language to map the template to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "description": "The SMS message.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "language",
                "template"
            ]
        },
        "okta:index/UserSchemaPropertyArrayOneOf:UserSchemaPropertyArrayOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "value mapping to member of `enum`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:index/UserSchemaPropertyMasterOverridePriority:UserSchemaPropertyMasterOverridePriority": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "- Type of profile source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "- ID of profile source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "okta:index/UserSchemaPropertyOneOf:UserSchemaPropertyOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "value mapping to member of `enum`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:index/getBehavioursBehavior:getBehavioursBehavior": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Behavior ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Behavior name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of behavior settings.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Behavior status.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Behavior type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "settings",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getGroupsGroup:getGroupsGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Group description.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Group ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Group name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "type of the group to retrieve. Can only be one of `OKTA_GROUP` (Native Okta Groups), `APP_GROUP`\n(Imported App Groups), or `BUILT_IN` (Okta System Groups).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getUserSecurityQuestionsQuestion:getUserSecurityQuestionsQuestion": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Security question unique key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "Display text for security question.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "text"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:inline/HookHeader:HookHeader": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Key to use for authentication, usually the header name, for example `\"Authorization\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Authentication secret.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "okta:policy/RuleIdpDiscoveryAppExclude:RuleIdpDiscoveryAppExclude": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Use if `type` is `\"APP\"` to indicate the application id to include.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Use if the `type` is `\"APP_TYPE\"` to indicate the type of application(s) to include in instances where an entire group (i.e. `yahoo_mail`) of applications should be included.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "One of: `\"ANY\"`, `\"MOBILE\"`, `\"DESKTOP\"`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "okta:policy/RuleIdpDiscoveryAppInclude:RuleIdpDiscoveryAppInclude": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Use if `type` is `\"APP\"` to indicate the application id to include.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Use if the `type` is `\"APP_TYPE\"` to indicate the type of application(s) to include in instances where an entire group (i.e. `yahoo_mail`) of applications should be included.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "One of: `\"ANY\"`, `\"MOBILE\"`, `\"DESKTOP\"`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "okta:policy/RuleIdpDiscoveryPlatformInclude:RuleIdpDiscoveryPlatformInclude": {
            "properties": {
                "osExpression": {
                    "type": "string",
                    "description": "Only available when using `os_type = \"OTHER\"`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osType": {
                    "type": "string",
                    "description": "One of: `\"ANY\"`, `\"IOS\"`, `\"WINDOWS\"`, `\"ANDROID\"`, `\"OTHER\"`, `\"OSX\"`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "One of: `\"ANY\"`, `\"MOBILE\"`, `\"DESKTOP\"`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "okta:policy/RuleIdpDiscoveryUserIdentifierPattern:RuleIdpDiscoveryUserIdentifierPattern": {
            "properties": {
                "matchType": {
                    "type": "string",
                    "description": "The kind of pattern. For regex, use `\"EXPRESSION\"`. For simple string matches, use one of the following: `\"SUFFIX\"`, `\"EQUALS\"`, `\"STARTS_WITH\"`, `\"CONTAINS\"`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The regex or simple match string to match against.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "okta:policy/RuleSignonFactorSequence:RuleSignonFactorSequence": {
            "properties": {
                "primaryCriteriaFactorType": {
                    "type": "string",
                    "description": "Primary factor type of the auth section.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "primaryCriteriaProvider": {
                    "type": "string",
                    "description": "Primary provider of the auth section.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secondaryCriterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleSignonFactorSequenceSecondaryCriteria:RuleSignonFactorSequenceSecondaryCriteria"
                    },
                    "description": "Additional authentication steps.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "primaryCriteriaFactorType",
                "primaryCriteriaProvider"
            ]
        },
        "okta:policy/RuleSignonFactorSequenceSecondaryCriteria:RuleSignonFactorSequenceSecondaryCriteria": {
            "properties": {
                "factorType": {
                    "type": "string",
                    "description": "Factor type of the additional authentication step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "description": "Provider of the additional authentication step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "factorType",
                "provider"
            ]
        },
        "okta:profile/MappingMapping:MappingMapping": {
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "Combination or single source properties that will be mapped to the target property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Key of mapping.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pushStatus": {
                    "type": "string",
                    "description": "Whether to update target properties on user create \u0026 update or just on create.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression",
                "id"
            ]
        },
        "okta:template/EmailTranslation:EmailTranslation": {
            "properties": {
                "language": {
                    "type": "string",
                    "description": "The language to map the template to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subject": {
                    "type": "string",
                    "description": "The email subject line.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "description": "The email body.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "language",
                "subject",
                "template"
            ]
        },
        "okta:user/SchemaArrayOneOf:SchemaArrayOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "value mapping to member of `enum`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:user/SchemaMasterOverridePriority:SchemaMasterOverridePriority": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "- Type of profile source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "- ID of profile source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "okta:user/SchemaOneOf:SchemaOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "value mapping to member of `enum`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:user/getUserSearch:getUserSearch": {
            "properties": {
                "comparison": {
                    "type": "string",
                    "description": "Comparison to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of property to search against.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Value to compare with.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "okta:user/getUsersSearch:getUsersSearch": {
            "properties": {
                "comparison": {
                    "type": "string",
                    "description": "Comparison to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of property to search against.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Value to compare with.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "okta:user/getUsersUser:getUsersUser": {
            "properties": {
                "adminRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Administrator roles assigned to user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "city": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "costCenter": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countryCode": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customProfileAttributes": {
                    "type": "string",
                    "description": "raw JSON containing all custom profile attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "department": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "division": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "email": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "employeeNumber": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "firstName": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMemberships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "honorificPrefix": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "honorificSuffix": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastName": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "locale": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "login": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manager": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "managerId": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "middleName": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mobilePhone": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickName": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "organization": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postalAddress": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preferredLanguage": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "primaryPhone": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "profileUrl": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secondEmail": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "state": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "streetAddress": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timezone": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userType": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zipCode": {
                    "type": "string",
                    "description": "user profile property.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "adminRoles",
                "city",
                "costCenter",
                "countryCode",
                "customProfileAttributes",
                "department",
                "displayName",
                "division",
                "email",
                "employeeNumber",
                "firstName",
                "groupMemberships",
                "honorificPrefix",
                "honorificSuffix",
                "id",
                "lastName",
                "locale",
                "login",
                "manager",
                "managerId",
                "middleName",
                "mobilePhone",
                "nickName",
                "organization",
                "postalAddress",
                "preferredLanguage",
                "primaryPhone",
                "profileUrl",
                "secondEmail",
                "state",
                "status",
                "streetAddress",
                "timezone",
                "title",
                "userType",
                "zipCode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the okta package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "inputProperties": {
            "apiToken": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "backoff": {
                "type": "boolean",
                "description": "Use exponential back off strategy for rate limits.\n"
            },
            "baseUrl": {
                "type": "string",
                "description": "The Okta url. (Use 'oktapreview.com' for Okta testing)\n"
            },
            "clientId": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "logLevel": {
                "type": "integer",
                "description": "providers log level. Minimum is 1 (TRACE), and maximum is 5 (ERROR)\n"
            },
            "maxRetries": {
                "type": "integer",
                "description": "maximum number of retries to attempt before erroring out.\n"
            },
            "maxWaitSeconds": {
                "type": "integer",
                "description": "maximum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.\n"
            },
            "minWaitSeconds": {
                "type": "integer",
                "description": "minimum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.\n"
            },
            "orgName": {
                "type": "string",
                "description": "The organization to manage in Okta.\n"
            },
            "parallelism": {
                "type": "integer",
                "description": "Number of concurrent requests to make within a resource where bulk operations are not possible. Take note of\nhttps://developer.okta.com/docs/api/getting_started/rate-limits.\n"
            },
            "privateKey": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "requestTimeout": {
                "type": "integer",
                "description": "Timeout for single request (in seconds) which is made to Okta, the default is `0` (means no limit is set). The maximum\nvalue can be `300`.\n"
            },
            "scopes": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "API Token granting privileges to Okta API.\n"
            }
        }
    },
    "resources": {
        "okta:app/autoLogin:AutoLogin": {
            "description": "Creates an Auto Login Okta Application.\n\nThis resource allows you to create and configure an Auto Login Okta Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.AutoLogin(\"example\", {\n    credentialsScheme: \"EDIT_USERNAME_AND_PASSWORD\",\n    label: \"Example App\",\n    revealPassword: true,\n    signOnRedirectUrl: \"https://example.com\",\n    signOnUrl: \"https://example.com/login.html\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.AutoLogin(\"example\",\n    credentials_scheme=\"EDIT_USERNAME_AND_PASSWORD\",\n    label=\"Example App\",\n    reveal_password=True,\n    sign_on_redirect_url=\"https://example.com\",\n    sign_on_url=\"https://example.com/login.html\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.App.AutoLogin(\"example\", new Okta.App.AutoLoginArgs\n        {\n            CredentialsScheme = \"EDIT_USERNAME_AND_PASSWORD\",\n            Label = \"Example App\",\n            RevealPassword = true,\n            SignOnRedirectUrl = \"https://example.com\",\n            SignOnUrl = \"https://example.com/login.html\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewAutoLogin(ctx, \"example\", \u0026app.AutoLoginArgs{\n\t\t\tCredentialsScheme: pulumi.String(\"EDIT_USERNAME_AND_PASSWORD\"),\n\t\t\tLabel:             pulumi.String(\"Example App\"),\n\t\t\tRevealPassword:    pulumi.Bool(true),\n\t\t\tSignOnRedirectUrl: pulumi.String(\"https://example.com\"),\n\t\t\tSignOnUrl:         pulumi.String(\"https://example.com/login.html\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta Auto Login App can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/autoLogin:AutoLogin example \u003capp id\u003e\n```\n\n ",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "One of: `\"EDIT_USERNAME_AND_PASSWORD\"`, `\"ADMIN_SETS_CREDENTIALS\"`, `\"EDIT_PASSWORD_ONLY\"`, `\"EXTERNAL_PASSWORD_SYNC\"`, or `\"SHARED_USERNAME_AND_PASSWORD\"`.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Direct link of application logo.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name assigned to the application by Okta.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Tells Okta to use an existing application in their application catalog, as opposed to a custom application.\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign-on mode of the application.\n"
                },
                "signOnRedirectUrl": {
                    "type": "string",
                    "description": "Redirect URL; if going to the login page URL redirects to another page, then enter that URL here\n"
                },
                "signOnUrl": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `\"${source.login}\"`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `\"BUILT_IN\"`\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/AutoLoginUser:AutoLoginUser"
                    },
                    "description": "The users assigned to the application. See `okta.app.User` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "signOnMode"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "One of: `\"EDIT_USERNAME_AND_PASSWORD\"`, `\"ADMIN_SETS_CREDENTIALS\"`, `\"EDIT_PASSWORD_ONLY\"`, `\"EXTERNAL_PASSWORD_SYNC\"`, or `\"SHARED_USERNAME_AND_PASSWORD\"`.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Tells Okta to use an existing application in their application catalog, as opposed to a custom application.\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes\n"
                },
                "signOnRedirectUrl": {
                    "type": "string",
                    "description": "Redirect URL; if going to the login page URL redirects to another page, then enter that URL here\n"
                },
                "signOnUrl": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `\"${source.login}\"`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `\"BUILT_IN\"`\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/AutoLoginUser:AutoLoginUser"
                    },
                    "description": "The users assigned to the application. See `okta.app.User` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AutoLogin resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service. By default, it is `false`.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "credentialsScheme": {
                        "type": "string",
                        "description": "One of: `\"EDIT_USERNAME_AND_PASSWORD\"`, `\"ADMIN_SETS_CREDENTIALS\"`, `\"EDIT_PASSWORD_ONLY\"`, `\"EXTERNAL_PASSWORD_SYNC\"`, or `\"SHARED_USERNAME_AND_PASSWORD\"`.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                        "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Direct link of application logo.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name assigned to the application by Okta.\n"
                    },
                    "preconfiguredApp": {
                        "type": "string",
                        "description": "Tells Okta to use an existing application in their application catalog, as opposed to a custom application.\n"
                    },
                    "revealPassword": {
                        "type": "boolean",
                        "description": "Allow user to reveal password\n"
                    },
                    "sharedPassword": {
                        "type": "string",
                        "description": "Shared password, required for certain schemes\n"
                    },
                    "sharedUsername": {
                        "type": "string",
                        "description": "Shared username, required for certain schemes\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign-on mode of the application.\n"
                    },
                    "signOnRedirectUrl": {
                        "type": "string",
                        "description": "Redirect URL; if going to the login page URL redirects to another page, then enter that URL here\n"
                    },
                    "signOnUrl": {
                        "type": "string",
                        "description": "Login URL\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default: `\"${source.login}\"`\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix.\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default: `\"BUILT_IN\"`\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/AutoLoginUser:AutoLoginUser"
                        },
                        "description": "The users assigned to the application. See `okta.app.User` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                        "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                    }
                },
                "type": "object"
            }
        },
        "okta:app/basicAuth:BasicAuth": {
            "description": "Creates a Basic Auth Application.\n\nThis resource allows you to create and configure a Basic Auth Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.BasicAuth(\"example\", {\n    authUrl: \"https://example.com/auth.html\",\n    label: \"Example\",\n    url: \"https://example.com/login.html\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.BasicAuth(\"example\",\n    auth_url=\"https://example.com/auth.html\",\n    label=\"Example\",\n    url=\"https://example.com/login.html\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.App.BasicAuth(\"example\", new Okta.App.BasicAuthArgs\n        {\n            AuthUrl = \"https://example.com/auth.html\",\n            Label = \"Example\",\n            Url = \"https://example.com/login.html\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewBasicAuth(ctx, \"example\", \u0026app.BasicAuthArgs{\n\t\t\tAuthUrl: pulumi.String(\"https://example.com/auth.html\"),\n\t\t\tLabel:   pulumi.String(\"Example\"),\n\t\t\tUrl:     pulumi.String(\"https://example.com/login.html\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Basic Auth App can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/basicAuth:BasicAuth example \u003capp id\u003e\n```\n\n ",
            "properties": {
                "authUrl": {
                    "type": "string",
                    "description": "The URL of the authenticating site for this app.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Direct link of application logo.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. (`\"ACTIVE\"` or `\"INACTIVE\"`).\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the sign-in page for this app.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/BasicAuthUser:BasicAuthUser"
                    },
                    "description": "Users associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "required": [
                "authUrl",
                "label",
                "logoUrl",
                "name",
                "signOnMode",
                "url"
            ],
            "inputProperties": {
                "authUrl": {
                    "type": "string",
                    "description": "The URL of the authenticating site for this app.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. (`\"ACTIVE\"` or `\"INACTIVE\"`).\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the sign-in page for this app.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/BasicAuthUser:BasicAuthUser"
                    },
                    "description": "Users associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "requiredInputs": [
                "authUrl",
                "label",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BasicAuth resources.\n",
                "properties": {
                    "authUrl": {
                        "type": "string",
                        "description": "The URL of the authenticating site for this app.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Groups associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                        "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Direct link of application logo.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. (`\"ACTIVE\"` or `\"INACTIVE\"`).\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the sign-in page for this app.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/BasicAuthUser:BasicAuthUser"
                        },
                        "description": "Users associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                        "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                    }
                },
                "type": "object"
            }
        },
        "okta:app/bookmark:Bookmark": {
            "description": "Creates a Bookmark Application.\n\nThis resource allows you to create and configure a Bookmark Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.Bookmark(\"example\", {\n    label: \"Example\",\n    url: \"https://example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.Bookmark(\"example\",\n    label=\"Example\",\n    url=\"https://example.com\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.App.Bookmark(\"example\", new Okta.App.BookmarkArgs\n        {\n            Label = \"Example\",\n            Url = \"https://example.com\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewBookmark(ctx, \"example\", \u0026app.BookmarkArgs{\n\t\t\tLabel: pulumi.String(\"Example\"),\n\t\t\tUrl:   pulumi.String(\"https://example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Bookmark App can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/bookmark:Bookmark example \u003capp id\u003e\n```\n\n ",
            "properties": {
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Direct link of application logo.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "requestIntegration": {
                    "type": "boolean",
                    "description": "Would you like Okta to add an integration for this app?\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. (`\"ACTIVE\"` or `\"INACTIVE\"`).\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the bookmark.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/BookmarkUser:BookmarkUser"
                    },
                    "description": "Users associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "signOnMode",
                "url"
            ],
            "inputProperties": {
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "requestIntegration": {
                    "type": "boolean",
                    "description": "Would you like Okta to add an integration for this app?\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. (`\"ACTIVE\"` or `\"INACTIVE\"`).\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the bookmark.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/BookmarkUser:BookmarkUser"
                    },
                    "description": "Users associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "requiredInputs": [
                "label",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Bookmark resources.\n",
                "properties": {
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Groups associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                        "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Direct link of application logo.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "requestIntegration": {
                        "type": "boolean",
                        "description": "Would you like Okta to add an integration for this app?\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. (`\"ACTIVE\"` or `\"INACTIVE\"`).\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the bookmark.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/BookmarkUser:BookmarkUser"
                        },
                        "description": "Users associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                        "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                    }
                },
                "type": "object"
            }
        },
        "okta:app/groupAssignment:GroupAssignment": {
            "description": "\n\n\n## Import\n\nAn application group assignment can be imported via the `app_id` and the `group_id`.\n\n```sh\n $ pulumi import okta:app/groupAssignment:GroupAssignment example \u003capp_id\u003e/\u003cgroup_id\u003e\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The ID of the application to assign a group to.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the group to assign the app to.\n"
                },
                "priority": {
                    "type": "integer"
                },
                "profile": {
                    "type": "string",
                    "description": "JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)\n"
                },
                "retainAssignment": {
                    "type": "boolean",
                    "description": "Retain the group assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                }
            },
            "required": [
                "appId",
                "groupId"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The ID of the application to assign a group to.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the group to assign the app to.\n"
                },
                "priority": {
                    "type": "integer"
                },
                "profile": {
                    "type": "string",
                    "description": "JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)\n"
                },
                "retainAssignment": {
                    "type": "boolean",
                    "description": "Retain the group assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "groupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GroupAssignment resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The ID of the application to assign a group to.\n"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the group to assign the app to.\n"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "profile": {
                        "type": "string",
                        "description": "JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)\n"
                    },
                    "retainAssignment": {
                        "type": "boolean",
                        "description": "Retain the group assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/oAuth:OAuth": {
            "description": "Creates an OIDC Application.\n\nThis resource allows you to create and configure an OIDC Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.OAuth(\"example\", {\n    grantTypes: [\"authorization_code\"],\n    label: \"example\",\n    redirectUris: [\"https://example.com/\"],\n    responseTypes: [\"code\"],\n    type: \"web\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.OAuth(\"example\",\n    grant_types=[\"authorization_code\"],\n    label=\"example\",\n    redirect_uris=[\"https://example.com/\"],\n    response_types=[\"code\"],\n    type=\"web\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.App.OAuth(\"example\", new Okta.App.OAuthArgs\n        {\n            GrantTypes = \n            {\n                \"authorization_code\",\n            },\n            Label = \"example\",\n            RedirectUris = \n            {\n                \"https://example.com/\",\n            },\n            ResponseTypes = \n            {\n                \"code\",\n            },\n            Type = \"web\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewOAuth(ctx, \"example\", \u0026app.OAuthArgs{\n\t\t\tGrantTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"authorization_code\"),\n\t\t\t},\n\t\t\tLabel: pulumi.String(\"example\"),\n\t\t\tRedirectUris: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"https://example.com/\"),\n\t\t\t},\n\t\t\tResponseTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"code\"),\n\t\t\t},\n\t\t\tType: pulumi.String(\"web\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.OAuth(\"example\", {\n    grantTypes: [\"client_credentials\"],\n    jwks: [{\n        e: \"AQAB\",\n        kid: \"SIGNING_KEY\",\n        kty: \"RSA\",\n        n: \"xyz\",\n    }],\n    label: \"example\",\n    responseTypes: [\"token\"],\n    tokenEndpointAuthMethod: \"private_key_jwt\",\n    type: \"service\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.OAuth(\"example\",\n    grant_types=[\"client_credentials\"],\n    jwks=[okta.app.OAuthJwkArgs(\n        e=\"AQAB\",\n        kid=\"SIGNING_KEY\",\n        kty=\"RSA\",\n        n=\"xyz\",\n    )],\n    label=\"example\",\n    response_types=[\"token\"],\n    token_endpoint_auth_method=\"private_key_jwt\",\n    type=\"service\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.App.OAuth(\"example\", new Okta.App.OAuthArgs\n        {\n            GrantTypes = \n            {\n                \"client_credentials\",\n            },\n            Jwks = \n            {\n                new Okta.App.Inputs.OAuthJwkArgs\n                {\n                    E = \"AQAB\",\n                    Kid = \"SIGNING_KEY\",\n                    Kty = \"RSA\",\n                    N = \"xyz\",\n                },\n            },\n            Label = \"example\",\n            ResponseTypes = \n            {\n                \"token\",\n            },\n            TokenEndpointAuthMethod = \"private_key_jwt\",\n            Type = \"service\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewOAuth(ctx, \"example\", \u0026app.OAuthArgs{\n\t\t\tGrantTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"client_credentials\"),\n\t\t\t},\n\t\t\tJwks: app.OAuthJwkArray{\n\t\t\t\t\u0026app.OAuthJwkArgs{\n\t\t\t\t\tE:   pulumi.String(\"AQAB\"),\n\t\t\t\t\tKid: pulumi.String(\"SIGNING_KEY\"),\n\t\t\t\t\tKty: pulumi.String(\"RSA\"),\n\t\t\t\t\tN:   pulumi.String(\"xyz\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tLabel: pulumi.String(\"example\"),\n\t\t\tResponseTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"token\"),\n\t\t\t},\n\t\t\tTokenEndpointAuthMethod: pulumi.String(\"private_key_jwt\"),\n\t\t\tType:                    pulumi.String(\"service\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn OIDC Application can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/oAuth:OAuth example \u003capp id\u003e\n```\n\n ",
            "properties": {
                "autoKeyRotation": {
                    "type": "boolean",
                    "description": "Requested key rotation mode.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "clientBasicSecret": {
                    "type": "string",
                    "description": "OAuth client secret key, this can be set when token_endpoint_auth_method is client_secret_basic.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "OAuth client ID. If set during creation, app is created with this id.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret of the application.\n"
                },
                "clientUri": {
                    "type": "string",
                    "description": "URI to a web page providing information about the client.\n"
                },
                "consentMethod": {
                    "type": "string",
                    "description": "Indicates whether user consent is required or implicit. Valid values: `\"REQUIRED\"`, `\"TRUSTED\"`. Default value is `\"TRUSTED\"`.\n"
                },
                "customClientId": {
                    "type": "string",
                    "description": "**Deprecated** This property allows you to set your client_id during creation. NOTE: updating after creation will be a\nno-op, use client_id for that behavior instead.\n",
                    "deprecationMessage": "This field is being replaced by client_id. Please set that field instead."
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OAuth 2.0 grant types. Conditional validation params found [here](https://developer.okta.com/docs/api/resources/apps#credentials-settings-details). \nDefaults to minimum requirements per app type. Valid values: `\"authorization_code\"`, `\"implicit\"`, `\"password\"`, `\"refresh_token\"`, `\"client_credentials\"`.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The groups assigned to the application. It is recommended not to use this and instead use `okta.app.GroupAssignment`.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "groupsClaim": {
                    "$ref": "#/types/okta:app/OAuthGroupsClaim:OAuthGroupsClaim",
                    "description": "Groups claim for an OpenID Connect client application.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "implicitAssignment": {
                    "type": "boolean",
                    "description": "*Early Access Property*. Enables Federation Broker Mode. When this mode is enabled, `users` and `groups` arguments are ignored.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.\n"
                },
                "jwks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/OAuthJwk:OAuthJwk"
                    }
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "loginMode": {
                    "type": "string",
                    "description": "The type of Idp-Initiated login that the client supports, if any. Valid values: `\"DISABLED\"`, `\"SPEC\"`, `\"OKTA\"`. Default is `\"DISABLED\"`.\n"
                },
                "loginScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of scopes to use for the request. Valid values: `\"openid\"`, `\"profile\"`, `\"email\"`, `\"address\"`, `\"phone\"`. Required when `login_mode` is NOT `DISABLED`.\n"
                },
                "loginUri": {
                    "type": "string",
                    "description": "URI that initiates login. Required when `login_mode` is NOT `DISABLED`.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUri": {
                    "type": "string",
                    "description": "URI that references a logo for the client.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Direct link of application logo.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the claim that will be used in the token.\n"
                },
                "omitSecret": {
                    "type": "boolean",
                    "description": "This tells the provider not to persist the application's secret to state. Your app will be recreated if this ever changes from true =\u003e false.\n"
                },
                "policyUri": {
                    "type": "string",
                    "description": "URI to web page providing client policy document.\n"
                },
                "postLogoutRedirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URIs for redirection after logout.\n"
                },
                "profile": {
                    "type": "string",
                    "description": "Custom JSON that represents an OAuth application's profile.\n"
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URIs for use in the redirect-based flow. This is required for all application types except service.\n"
                },
                "refreshTokenLeeway": {
                    "type": "integer",
                    "description": "Grace period for token rotation. Valid values: 0 to 60 seconds.\n"
                },
                "refreshTokenRotation": {
                    "type": "string",
                    "description": "Refresh token rotation behavior. Valid values: `\"STATIC\"` or `\"ROTATE\"`.\n"
                },
                "responseTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OAuth 2.0 response type strings.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign-on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                },
                "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "Requested authentication method for the token endpoint. It can be set to `\"none\"`, `\"client_secret_post\"`, `\"client_secret_basic\"`, `\"client_secret_jwt\"`, `\"private_key_jwt\"`.\n"
                },
                "tosUri": {
                    "type": "string",
                    "description": "URI to web page providing client tos (terms of service).\n"
                },
                "type": {
                    "type": "string",
                    "description": "Groups claim type. Valid values: `\"FILTER\"`, `\"EXPRESSION\"`.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/OAuthUser:OAuthUser"
                    },
                    "description": "The users assigned to the application. It is recommended not to use this and instead use `okta.app.User`.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                },
                "wildcardRedirect": {
                    "type": "string",
                    "description": "*Early Access Property*. Indicates if the client is allowed to use wildcard matching of `redirect_uris`. Valid values: `\"DISABLED\"`, `\"SUBDOMAIN\"`. Default value is `\"DISABLED\"`.\n"
                }
            },
            "required": [
                "clientId",
                "clientSecret",
                "label",
                "logoUrl",
                "name",
                "signOnMode",
                "type"
            ],
            "inputProperties": {
                "autoKeyRotation": {
                    "type": "boolean",
                    "description": "Requested key rotation mode.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "clientBasicSecret": {
                    "type": "string",
                    "description": "OAuth client secret key, this can be set when token_endpoint_auth_method is client_secret_basic.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "OAuth client ID. If set during creation, app is created with this id.\n"
                },
                "clientUri": {
                    "type": "string",
                    "description": "URI to a web page providing information about the client.\n"
                },
                "consentMethod": {
                    "type": "string",
                    "description": "Indicates whether user consent is required or implicit. Valid values: `\"REQUIRED\"`, `\"TRUSTED\"`. Default value is `\"TRUSTED\"`.\n"
                },
                "customClientId": {
                    "type": "string",
                    "description": "**Deprecated** This property allows you to set your client_id during creation. NOTE: updating after creation will be a\nno-op, use client_id for that behavior instead.\n",
                    "deprecationMessage": "This field is being replaced by client_id. Please set that field instead."
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OAuth 2.0 grant types. Conditional validation params found [here](https://developer.okta.com/docs/api/resources/apps#credentials-settings-details). \nDefaults to minimum requirements per app type. Valid values: `\"authorization_code\"`, `\"implicit\"`, `\"password\"`, `\"refresh_token\"`, `\"client_credentials\"`.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The groups assigned to the application. It is recommended not to use this and instead use `okta.app.GroupAssignment`.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "groupsClaim": {
                    "$ref": "#/types/okta:app/OAuthGroupsClaim:OAuthGroupsClaim",
                    "description": "Groups claim for an OpenID Connect client application.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "implicitAssignment": {
                    "type": "boolean",
                    "description": "*Early Access Property*. Enables Federation Broker Mode. When this mode is enabled, `users` and `groups` arguments are ignored.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.\n"
                },
                "jwks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/OAuthJwk:OAuthJwk"
                    }
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "loginMode": {
                    "type": "string",
                    "description": "The type of Idp-Initiated login that the client supports, if any. Valid values: `\"DISABLED\"`, `\"SPEC\"`, `\"OKTA\"`. Default is `\"DISABLED\"`.\n"
                },
                "loginScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of scopes to use for the request. Valid values: `\"openid\"`, `\"profile\"`, `\"email\"`, `\"address\"`, `\"phone\"`. Required when `login_mode` is NOT `DISABLED`.\n"
                },
                "loginUri": {
                    "type": "string",
                    "description": "URI that initiates login. Required when `login_mode` is NOT `DISABLED`.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUri": {
                    "type": "string",
                    "description": "URI that references a logo for the client.\n"
                },
                "omitSecret": {
                    "type": "boolean",
                    "description": "This tells the provider not to persist the application's secret to state. Your app will be recreated if this ever changes from true =\u003e false.\n"
                },
                "policyUri": {
                    "type": "string",
                    "description": "URI to web page providing client policy document.\n"
                },
                "postLogoutRedirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URIs for redirection after logout.\n"
                },
                "profile": {
                    "type": "string",
                    "description": "Custom JSON that represents an OAuth application's profile.\n"
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URIs for use in the redirect-based flow. This is required for all application types except service.\n"
                },
                "refreshTokenLeeway": {
                    "type": "integer",
                    "description": "Grace period for token rotation. Valid values: 0 to 60 seconds.\n"
                },
                "refreshTokenRotation": {
                    "type": "string",
                    "description": "Refresh token rotation behavior. Valid values: `\"STATIC\"` or `\"ROTATE\"`.\n"
                },
                "responseTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OAuth 2.0 response type strings.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                },
                "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "Requested authentication method for the token endpoint. It can be set to `\"none\"`, `\"client_secret_post\"`, `\"client_secret_basic\"`, `\"client_secret_jwt\"`, `\"private_key_jwt\"`.\n"
                },
                "tosUri": {
                    "type": "string",
                    "description": "URI to web page providing client tos (terms of service).\n"
                },
                "type": {
                    "type": "string",
                    "description": "Groups claim type. Valid values: `\"FILTER\"`, `\"EXPRESSION\"`.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/OAuthUser:OAuthUser"
                    },
                    "description": "The users assigned to the application. It is recommended not to use this and instead use `okta.app.User`.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                },
                "wildcardRedirect": {
                    "type": "string",
                    "description": "*Early Access Property*. Indicates if the client is allowed to use wildcard matching of `redirect_uris`. Valid values: `\"DISABLED\"`, `\"SUBDOMAIN\"`. Default value is `\"DISABLED\"`.\n"
                }
            },
            "requiredInputs": [
                "label",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OAuth resources.\n",
                "properties": {
                    "autoKeyRotation": {
                        "type": "boolean",
                        "description": "Requested key rotation mode.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "clientBasicSecret": {
                        "type": "string",
                        "description": "OAuth client secret key, this can be set when token_endpoint_auth_method is client_secret_basic.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "OAuth client ID. If set during creation, app is created with this id.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "The client secret of the application.\n"
                    },
                    "clientUri": {
                        "type": "string",
                        "description": "URI to a web page providing information about the client.\n"
                    },
                    "consentMethod": {
                        "type": "string",
                        "description": "Indicates whether user consent is required or implicit. Valid values: `\"REQUIRED\"`, `\"TRUSTED\"`. Default value is `\"TRUSTED\"`.\n"
                    },
                    "customClientId": {
                        "type": "string",
                        "description": "**Deprecated** This property allows you to set your client_id during creation. NOTE: updating after creation will be a\nno-op, use client_id for that behavior instead.\n",
                        "deprecationMessage": "This field is being replaced by client_id. Please set that field instead."
                    },
                    "grantTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OAuth 2.0 grant types. Conditional validation params found [here](https://developer.okta.com/docs/api/resources/apps#credentials-settings-details). \nDefaults to minimum requirements per app type. Valid values: `\"authorization_code\"`, `\"implicit\"`, `\"password\"`, `\"refresh_token\"`, `\"client_credentials\"`.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The groups assigned to the application. It is recommended not to use this and instead use `okta.app.GroupAssignment`.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                        "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                    },
                    "groupsClaim": {
                        "$ref": "#/types/okta:app/OAuthGroupsClaim:OAuthGroupsClaim",
                        "description": "Groups claim for an OpenID Connect client application.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "implicitAssignment": {
                        "type": "boolean",
                        "description": "*Early Access Property*. Enables Federation Broker Mode. When this mode is enabled, `users` and `groups` arguments are ignored.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.\n"
                    },
                    "jwks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/OAuthJwk:OAuthJwk"
                        }
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "loginMode": {
                        "type": "string",
                        "description": "The type of Idp-Initiated login that the client supports, if any. Valid values: `\"DISABLED\"`, `\"SPEC\"`, `\"OKTA\"`. Default is `\"DISABLED\"`.\n"
                    },
                    "loginScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of scopes to use for the request. Valid values: `\"openid\"`, `\"profile\"`, `\"email\"`, `\"address\"`, `\"phone\"`. Required when `login_mode` is NOT `DISABLED`.\n"
                    },
                    "loginUri": {
                        "type": "string",
                        "description": "URI that initiates login. Required when `login_mode` is NOT `DISABLED`.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUri": {
                        "type": "string",
                        "description": "URI that references a logo for the client.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Direct link of application logo.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the claim that will be used in the token.\n"
                    },
                    "omitSecret": {
                        "type": "boolean",
                        "description": "This tells the provider not to persist the application's secret to state. Your app will be recreated if this ever changes from true =\u003e false.\n"
                    },
                    "policyUri": {
                        "type": "string",
                        "description": "URI to web page providing client policy document.\n"
                    },
                    "postLogoutRedirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of URIs for redirection after logout.\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "Custom JSON that represents an OAuth application's profile.\n"
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of URIs for use in the redirect-based flow. This is required for all application types except service.\n"
                    },
                    "refreshTokenLeeway": {
                        "type": "integer",
                        "description": "Grace period for token rotation. Valid values: 0 to 60 seconds.\n"
                    },
                    "refreshTokenRotation": {
                        "type": "string",
                        "description": "Refresh token rotation behavior. Valid values: `\"STATIC\"` or `\"ROTATE\"`.\n"
                    },
                    "responseTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OAuth 2.0 response type strings.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign-on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                    },
                    "tokenEndpointAuthMethod": {
                        "type": "string",
                        "description": "Requested authentication method for the token endpoint. It can be set to `\"none\"`, `\"client_secret_post\"`, `\"client_secret_basic\"`, `\"client_secret_jwt\"`, `\"private_key_jwt\"`.\n"
                    },
                    "tosUri": {
                        "type": "string",
                        "description": "URI to web page providing client tos (terms of service).\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Groups claim type. Valid values: `\"FILTER\"`, `\"EXPRESSION\"`.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/OAuthUser:OAuthUser"
                        },
                        "description": "The users assigned to the application. It is recommended not to use this and instead use `okta.app.User`.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                        "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                    },
                    "wildcardRedirect": {
                        "type": "string",
                        "description": "*Early Access Property*. Indicates if the client is allowed to use wildcard matching of `redirect_uris`. Valid values: `\"DISABLED\"`, `\"SUBDOMAIN\"`. Default value is `\"DISABLED\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/oAuthRedirectUri:OAuthRedirectUri": {
            "properties": {
                "appId": {
                    "type": "string"
                },
                "uri": {
                    "type": "string",
                    "description": "Redirect URI to append to Okta OIDC application.\n"
                }
            },
            "required": [
                "appId",
                "uri"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string"
                },
                "uri": {
                    "type": "string",
                    "description": "Redirect URI to append to Okta OIDC application.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "uri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OAuthRedirectUri resources.\n",
                "properties": {
                    "appId": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string",
                        "description": "Redirect URI to append to Okta OIDC application.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/saml:Saml": {
            "description": "Creates an SAML Application.\n\nThis resource allows you to create and configure an SAML Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.Saml(\"example\", {\n    attributeStatements: [{\n        filterType: \"REGEX\",\n        filterValue: \".*\",\n        name: \"groups\",\n        type: \"GROUP\",\n    }],\n    audience: \"http://example.com/audience\",\n    authnContextClassRef: \"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\",\n    destination: \"http://example.com\",\n    digestAlgorithm: \"SHA256\",\n    honorForceAuthn: false,\n    label: \"example\",\n    recipient: \"http://example.com\",\n    responseSigned: true,\n    signatureAlgorithm: \"RSA_SHA256\",\n    ssoUrl: \"http://example.com\",\n    subjectNameIdFormat: \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n    subjectNameIdTemplate: \"${user.userName}\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.Saml(\"example\",\n    attribute_statements=[okta.app.SamlAttributeStatementArgs(\n        filter_type=\"REGEX\",\n        filter_value=\".*\",\n        name=\"groups\",\n        type=\"GROUP\",\n    )],\n    audience=\"http://example.com/audience\",\n    authn_context_class_ref=\"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\",\n    destination=\"http://example.com\",\n    digest_algorithm=\"SHA256\",\n    honor_force_authn=False,\n    label=\"example\",\n    recipient=\"http://example.com\",\n    response_signed=True,\n    signature_algorithm=\"RSA_SHA256\",\n    sso_url=\"http://example.com\",\n    subject_name_id_format=\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n    subject_name_id_template=user[\"userName\"])\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.App.Saml(\"example\", new Okta.App.SamlArgs\n        {\n            AttributeStatements = \n            {\n                new Okta.App.Inputs.SamlAttributeStatementArgs\n                {\n                    FilterType = \"REGEX\",\n                    FilterValue = \".*\",\n                    Name = \"groups\",\n                    Type = \"GROUP\",\n                },\n            },\n            Audience = \"http://example.com/audience\",\n            AuthnContextClassRef = \"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\",\n            Destination = \"http://example.com\",\n            DigestAlgorithm = \"SHA256\",\n            HonorForceAuthn = false,\n            Label = \"example\",\n            Recipient = \"http://example.com\",\n            ResponseSigned = true,\n            SignatureAlgorithm = \"RSA_SHA256\",\n            SsoUrl = \"http://example.com\",\n            SubjectNameIdFormat = \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n            SubjectNameIdTemplate = user.UserName,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewSaml(ctx, \"example\", \u0026app.SamlArgs{\n\t\t\tAttributeStatements: app.SamlAttributeStatementArray{\n\t\t\t\t\u0026app.SamlAttributeStatementArgs{\n\t\t\t\t\tFilterType:  pulumi.String(\"REGEX\"),\n\t\t\t\t\tFilterValue: pulumi.String(\".*\"),\n\t\t\t\t\tName:        pulumi.String(\"groups\"),\n\t\t\t\t\tType:        pulumi.String(\"GROUP\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tAudience:              pulumi.String(\"http://example.com/audience\"),\n\t\t\tAuthnContextClassRef:  pulumi.String(\"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\"),\n\t\t\tDestination:           pulumi.String(\"http://example.com\"),\n\t\t\tDigestAlgorithm:       pulumi.String(\"SHA256\"),\n\t\t\tHonorForceAuthn:       pulumi.Bool(false),\n\t\t\tLabel:                 pulumi.String(\"example\"),\n\t\t\tRecipient:             pulumi.String(\"http://example.com\"),\n\t\t\tResponseSigned:        pulumi.Bool(true),\n\t\t\tSignatureAlgorithm:    pulumi.String(\"RSA_SHA256\"),\n\t\t\tSsoUrl:                pulumi.String(\"http://example.com\"),\n\t\t\tSubjectNameIdFormat:   pulumi.String(\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\"),\n\t\t\tSubjectNameIdTemplate: pulumi.Any(user.UserName),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA SAML App can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/saml:Saml example \u003capp id\u003e\n```\n\n ",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service.\n"
                },
                "acsEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of ACS endpoints. You can configure a maximum of 100 endpoints.\n"
                },
                "appSettingsJson": {
                    "type": "string",
                    "description": "Application settings in JSON format.\n"
                },
                "assertionSigned": {
                    "type": "boolean",
                    "description": "Determines whether the SAML assertion is digitally signed.\n"
                },
                "attributeStatements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/SamlAttributeStatement:SamlAttributeStatement"
                    },
                    "description": "List of SAML Attribute statements.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "Audience restriction.\n"
                },
                "authnContextClassRef": {
                    "type": "string",
                    "description": "Identifies the SAML authentication context class for the assertion’s authentication statement.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "certificate": {
                    "type": "string",
                    "description": "The raw signing certificate.\n"
                },
                "defaultRelayState": {
                    "type": "string",
                    "description": "Identifies a specific application resource in an IDP initiated SSO scenario.\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Identifies the location where the SAML response is intended to be sent inside the SAML assertion.\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response.\n"
                },
                "entityKey": {
                    "type": "string",
                    "description": "Entity ID, the ID portion of the `entity_url`.\n"
                },
                "entityUrl": {
                    "type": "string",
                    "description": "Entity URL for instance [http://www.okta.com/exk1fcia6d6EMsf331d8](http://www.okta.com/exk1fcia6d6EMsf331d8).\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "features enabled. Notice: you can't currently configure provisioning features via the API.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "honorForceAuthn": {
                    "type": "boolean",
                    "description": "Prompt user to re-authenticate if SP asks for it.\n"
                },
                "httpPostBinding": {
                    "type": "string",
                    "description": "`urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post` location from the SAML metadata.\n"
                },
                "httpRedirectBinding": {
                    "type": "string",
                    "description": "`urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect` location from the SAML metadata.\n"
                },
                "idpIssuer": {
                    "type": "string",
                    "description": "SAML issuer ID.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "Certificate key ID.\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with `key_years_valid`.\n"
                },
                "keyYearsValid": {
                    "type": "integer",
                    "description": "Number of years the certificate is valid (2 - 10 years).\n"
                },
                "label": {
                    "type": "string",
                    "description": "label of application.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Direct link of application logo.\n"
                },
                "metadata": {
                    "type": "string",
                    "description": "The raw SAML metadata in XML.\n"
                },
                "metadataUrl": {
                    "type": "string",
                    "description": "SAML xml metadata URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute statement.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "name of application from the Okta Integration Network, if not included a custom app will be created.\n"
                },
                "recipient": {
                    "type": "string",
                    "description": "The location where the app may present the SAML assertion.\n"
                },
                "requestCompressed": {
                    "type": "boolean",
                    "description": "Denotes whether the request is compressed or not.\n"
                },
                "responseSigned": {
                    "type": "boolean",
                    "description": "Determines whether the SAML auth response message is digitally signed.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign-on mode of application.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Signature algorithm used ot digitally sign the assertion and response.\n"
                },
                "singleLogoutCertificate": {
                    "type": "string",
                    "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests. \nNote: should be provided without `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`, see [official documentation](https://developer.okta.com/docs/reference/api/apps/#service-provider-certificate).\n"
                },
                "singleLogoutIssuer": {
                    "type": "string",
                    "description": "The issuer of the Service Provider that generates the Single Logout request.\n"
                },
                "singleLogoutUrl": {
                    "type": "string",
                    "description": "The location where the logout response is sent.\n"
                },
                "spIssuer": {
                    "type": "string",
                    "description": "SAML service provider issuer.\n"
                },
                "ssoUrl": {
                    "type": "string",
                    "description": "Single Sign-on Url.\n"
                },
                "status": {
                    "type": "string",
                    "description": "status of application.\n"
                },
                "subjectNameIdFormat": {
                    "type": "string",
                    "description": "Identifies the SAML processing rules.\n"
                },
                "subjectNameIdTemplate": {
                    "type": "string",
                    "description": "Template for app user's username when a user is assigned to the app.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/SamlUser:SamlUser"
                    },
                    "description": "Users associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "required": [
                "certificate",
                "entityKey",
                "entityUrl",
                "httpPostBinding",
                "httpRedirectBinding",
                "keyId",
                "label",
                "logoUrl",
                "metadata",
                "metadataUrl",
                "name",
                "signOnMode"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service.\n"
                },
                "acsEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of ACS endpoints. You can configure a maximum of 100 endpoints.\n"
                },
                "appSettingsJson": {
                    "type": "string",
                    "description": "Application settings in JSON format.\n"
                },
                "assertionSigned": {
                    "type": "boolean",
                    "description": "Determines whether the SAML assertion is digitally signed.\n"
                },
                "attributeStatements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/SamlAttributeStatement:SamlAttributeStatement"
                    },
                    "description": "List of SAML Attribute statements.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "Audience restriction.\n"
                },
                "authnContextClassRef": {
                    "type": "string",
                    "description": "Identifies the SAML authentication context class for the assertion’s authentication statement.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "defaultRelayState": {
                    "type": "string",
                    "description": "Identifies a specific application resource in an IDP initiated SSO scenario.\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Identifies the location where the SAML response is intended to be sent inside the SAML assertion.\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response.\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "features enabled. Notice: you can't currently configure provisioning features via the API.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "honorForceAuthn": {
                    "type": "boolean",
                    "description": "Prompt user to re-authenticate if SP asks for it.\n"
                },
                "idpIssuer": {
                    "type": "string",
                    "description": "SAML issuer ID.\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with `key_years_valid`.\n"
                },
                "keyYearsValid": {
                    "type": "integer",
                    "description": "Number of years the certificate is valid (2 - 10 years).\n"
                },
                "label": {
                    "type": "string",
                    "description": "label of application.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "name of application from the Okta Integration Network, if not included a custom app will be created.\n"
                },
                "recipient": {
                    "type": "string",
                    "description": "The location where the app may present the SAML assertion.\n"
                },
                "requestCompressed": {
                    "type": "boolean",
                    "description": "Denotes whether the request is compressed or not.\n"
                },
                "responseSigned": {
                    "type": "boolean",
                    "description": "Determines whether the SAML auth response message is digitally signed.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Signature algorithm used ot digitally sign the assertion and response.\n"
                },
                "singleLogoutCertificate": {
                    "type": "string",
                    "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests. \nNote: should be provided without `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`, see [official documentation](https://developer.okta.com/docs/reference/api/apps/#service-provider-certificate).\n"
                },
                "singleLogoutIssuer": {
                    "type": "string",
                    "description": "The issuer of the Service Provider that generates the Single Logout request.\n"
                },
                "singleLogoutUrl": {
                    "type": "string",
                    "description": "The location where the logout response is sent.\n"
                },
                "spIssuer": {
                    "type": "string",
                    "description": "SAML service provider issuer.\n"
                },
                "ssoUrl": {
                    "type": "string",
                    "description": "Single Sign-on Url.\n"
                },
                "status": {
                    "type": "string",
                    "description": "status of application.\n"
                },
                "subjectNameIdFormat": {
                    "type": "string",
                    "description": "Identifies the SAML processing rules.\n"
                },
                "subjectNameIdTemplate": {
                    "type": "string",
                    "description": "Template for app user's username when a user is assigned to the app.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/SamlUser:SamlUser"
                    },
                    "description": "Users associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Saml resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page URL.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service.\n"
                    },
                    "acsEndpoints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of ACS endpoints. You can configure a maximum of 100 endpoints.\n"
                    },
                    "appSettingsJson": {
                        "type": "string",
                        "description": "Application settings in JSON format.\n"
                    },
                    "assertionSigned": {
                        "type": "boolean",
                        "description": "Determines whether the SAML assertion is digitally signed.\n"
                    },
                    "attributeStatements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/SamlAttributeStatement:SamlAttributeStatement"
                        },
                        "description": "List of SAML Attribute statements.\n"
                    },
                    "audience": {
                        "type": "string",
                        "description": "Audience restriction.\n"
                    },
                    "authnContextClassRef": {
                        "type": "string",
                        "description": "Identifies the SAML authentication context class for the assertion’s authentication statement.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "certificate": {
                        "type": "string",
                        "description": "The raw signing certificate.\n"
                    },
                    "defaultRelayState": {
                        "type": "string",
                        "description": "Identifies a specific application resource in an IDP initiated SSO scenario.\n"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Identifies the location where the SAML response is intended to be sent inside the SAML assertion.\n"
                    },
                    "digestAlgorithm": {
                        "type": "string",
                        "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response.\n"
                    },
                    "entityKey": {
                        "type": "string",
                        "description": "Entity ID, the ID portion of the `entity_url`.\n"
                    },
                    "entityUrl": {
                        "type": "string",
                        "description": "Entity URL for instance [http://www.okta.com/exk1fcia6d6EMsf331d8](http://www.okta.com/exk1fcia6d6EMsf331d8).\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "features enabled. Notice: you can't currently configure provisioning features via the API.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Groups associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                        "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "honorForceAuthn": {
                        "type": "boolean",
                        "description": "Prompt user to re-authenticate if SP asks for it.\n"
                    },
                    "httpPostBinding": {
                        "type": "string",
                        "description": "`urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post` location from the SAML metadata.\n"
                    },
                    "httpRedirectBinding": {
                        "type": "string",
                        "description": "`urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect` location from the SAML metadata.\n"
                    },
                    "idpIssuer": {
                        "type": "string",
                        "description": "SAML issuer ID.\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "Certificate key ID.\n"
                    },
                    "keyName": {
                        "type": "string",
                        "description": "Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with `key_years_valid`.\n"
                    },
                    "keyYearsValid": {
                        "type": "integer",
                        "description": "Number of years the certificate is valid (2 - 10 years).\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "label of application.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Direct link of application logo.\n"
                    },
                    "metadata": {
                        "type": "string",
                        "description": "The raw SAML metadata in XML.\n"
                    },
                    "metadataUrl": {
                        "type": "string",
                        "description": "SAML xml metadata URL.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the attribute statement.\n"
                    },
                    "preconfiguredApp": {
                        "type": "string",
                        "description": "name of application from the Okta Integration Network, if not included a custom app will be created.\n"
                    },
                    "recipient": {
                        "type": "string",
                        "description": "The location where the app may present the SAML assertion.\n"
                    },
                    "requestCompressed": {
                        "type": "boolean",
                        "description": "Denotes whether the request is compressed or not.\n"
                    },
                    "responseSigned": {
                        "type": "boolean",
                        "description": "Determines whether the SAML auth response message is digitally signed.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign-on mode of application.\n"
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "Signature algorithm used ot digitally sign the assertion and response.\n"
                    },
                    "singleLogoutCertificate": {
                        "type": "string",
                        "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests. \nNote: should be provided without `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`, see [official documentation](https://developer.okta.com/docs/reference/api/apps/#service-provider-certificate).\n"
                    },
                    "singleLogoutIssuer": {
                        "type": "string",
                        "description": "The issuer of the Service Provider that generates the Single Logout request.\n"
                    },
                    "singleLogoutUrl": {
                        "type": "string",
                        "description": "The location where the logout response is sent.\n"
                    },
                    "spIssuer": {
                        "type": "string",
                        "description": "SAML service provider issuer.\n"
                    },
                    "ssoUrl": {
                        "type": "string",
                        "description": "Single Sign-on Url.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "status of application.\n"
                    },
                    "subjectNameIdFormat": {
                        "type": "string",
                        "description": "Identifies the SAML processing rules.\n"
                    },
                    "subjectNameIdTemplate": {
                        "type": "string",
                        "description": "Template for app user's username when a user is assigned to the app.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template.\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix.\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/SamlUser:SamlUser"
                        },
                        "description": "Users associated with the application.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                        "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                    }
                },
                "type": "object"
            }
        },
        "okta:app/securePasswordStore:SecurePasswordStore": {
            "description": "Creates a Secure Password Store Application.\n\nThis resource allows you to create and configure a Secure Password Store Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.SecurePasswordStore(\"example\", {\n    credentialsScheme: \"ADMIN_SETS_CREDENTIALS\",\n    label: \"example\",\n    passwordField: \"pass\",\n    url: \"http://test.com\",\n    usernameField: \"user\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.SecurePasswordStore(\"example\",\n    credentials_scheme=\"ADMIN_SETS_CREDENTIALS\",\n    label=\"example\",\n    password_field=\"pass\",\n    url=\"http://test.com\",\n    username_field=\"user\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.App.SecurePasswordStore(\"example\", new Okta.App.SecurePasswordStoreArgs\n        {\n            CredentialsScheme = \"ADMIN_SETS_CREDENTIALS\",\n            Label = \"example\",\n            PasswordField = \"pass\",\n            Url = \"http://test.com\",\n            UsernameField = \"user\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewSecurePasswordStore(ctx, \"example\", \u0026app.SecurePasswordStoreArgs{\n\t\t\tCredentialsScheme: pulumi.String(\"ADMIN_SETS_CREDENTIALS\"),\n\t\t\tLabel:             pulumi.String(\"example\"),\n\t\t\tPasswordField:     pulumi.String(\"pass\"),\n\t\t\tUrl:               pulumi.String(\"http://test.com\"),\n\t\t\tUsernameField:     pulumi.String(\"user\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nSecure Password Store Application can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/securePasswordStore:SecurePasswordStore example \u003capp id\u003e\n```\n\n ",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme. Can be set to `\"EDIT_USERNAME_AND_PASSWORD\"`, `\"ADMIN_SETS_CREDENTIALS\"`, `\"EDIT_PASSWORD_ONLY\"`, `\"EXTERNAL_PASSWORD_SYNC\"`, or `\"SHARED_USERNAME_AND_PASSWORD\"`.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The display name of the Application.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of the application.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name assigned to the application by Okta.\n"
                },
                "optionalField1": {
                    "type": "string",
                    "description": "Name of optional param in the login form.\n"
                },
                "optionalField1Value": {
                    "type": "string",
                    "description": "Name of optional value in the login form.\n"
                },
                "optionalField2": {
                    "type": "string",
                    "description": "Name of optional param in the login form.\n"
                },
                "optionalField2Value": {
                    "type": "string",
                    "description": "Name of optional value in the login form.\n"
                },
                "optionalField3": {
                    "type": "string",
                    "description": "Name of optional param in the login form.\n"
                },
                "optionalField3Value": {
                    "type": "string",
                    "description": "Name of optional value in the login form.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field.\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password.\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign-on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "The default username assigned to each user.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "The Username template type.\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/SecurePasswordStoreUser:SecurePasswordStoreUser"
                    },
                    "description": "The users assigned to the application. See `okta.app.User` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "passwordField",
                "signOnMode",
                "url",
                "usernameField"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme. Can be set to `\"EDIT_USERNAME_AND_PASSWORD\"`, `\"ADMIN_SETS_CREDENTIALS\"`, `\"EDIT_PASSWORD_ONLY\"`, `\"EXTERNAL_PASSWORD_SYNC\"`, or `\"SHARED_USERNAME_AND_PASSWORD\"`.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The display name of the Application.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of the application.\n"
                },
                "optionalField1": {
                    "type": "string",
                    "description": "Name of optional param in the login form.\n"
                },
                "optionalField1Value": {
                    "type": "string",
                    "description": "Name of optional value in the login form.\n"
                },
                "optionalField2": {
                    "type": "string",
                    "description": "Name of optional param in the login form.\n"
                },
                "optionalField2Value": {
                    "type": "string",
                    "description": "Name of optional value in the login form.\n"
                },
                "optionalField3": {
                    "type": "string",
                    "description": "Name of optional param in the login form.\n"
                },
                "optionalField3Value": {
                    "type": "string",
                    "description": "Name of optional value in the login form.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field.\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password.\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "The default username assigned to each user.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "The Username template type.\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/SecurePasswordStoreUser:SecurePasswordStoreUser"
                    },
                    "description": "The users assigned to the application. See `okta.app.User` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "requiredInputs": [
                "label",
                "passwordField",
                "url",
                "usernameField"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurePasswordStore resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service. By default, it is `false`.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "credentialsScheme": {
                        "type": "string",
                        "description": "Application credentials scheme. Can be set to `\"EDIT_USERNAME_AND_PASSWORD\"`, `\"ADMIN_SETS_CREDENTIALS\"`, `\"EDIT_PASSWORD_ONLY\"`, `\"EXTERNAL_PASSWORD_SYNC\"`, or `\"SHARED_USERNAME_AND_PASSWORD\"`.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                        "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The display name of the Application.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Logo of the application.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name assigned to the application by Okta.\n"
                    },
                    "optionalField1": {
                        "type": "string",
                        "description": "Name of optional param in the login form.\n"
                    },
                    "optionalField1Value": {
                        "type": "string",
                        "description": "Name of optional value in the login form.\n"
                    },
                    "optionalField2": {
                        "type": "string",
                        "description": "Name of optional param in the login form.\n"
                    },
                    "optionalField2Value": {
                        "type": "string",
                        "description": "Name of optional value in the login form.\n"
                    },
                    "optionalField3": {
                        "type": "string",
                        "description": "Name of optional param in the login form.\n"
                    },
                    "optionalField3Value": {
                        "type": "string",
                        "description": "Name of optional value in the login form.\n"
                    },
                    "passwordField": {
                        "type": "string",
                        "description": "Login password field.\n"
                    },
                    "revealPassword": {
                        "type": "boolean",
                        "description": "Allow user to reveal password.\n"
                    },
                    "sharedPassword": {
                        "type": "string",
                        "description": "Shared password, required for certain schemes.\n"
                    },
                    "sharedUsername": {
                        "type": "string",
                        "description": "Shared username, required for certain schemes.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign-on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Login URL.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "The default username assigned to each user.\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "The Username template type.\n"
                    },
                    "usernameField": {
                        "type": "string",
                        "description": "Login username field.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/SecurePasswordStoreUser:SecurePasswordStoreUser"
                        },
                        "description": "The users assigned to the application. See `okta.app.User` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                        "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                    }
                },
                "type": "object"
            }
        },
        "okta:app/swa:Swa": {
            "description": "Creates an SWA Application.\n\nThis resource allows you to create and configure an SWA Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.Swa(\"example\", {\n    buttonField: \"btn-login\",\n    label: \"example\",\n    passwordField: \"txtbox-password\",\n    url: \"https://example.com/login.html\",\n    usernameField: \"txtbox-username\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.Swa(\"example\",\n    button_field=\"btn-login\",\n    label=\"example\",\n    password_field=\"txtbox-password\",\n    url=\"https://example.com/login.html\",\n    username_field=\"txtbox-username\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.App.Swa(\"example\", new Okta.App.SwaArgs\n        {\n            ButtonField = \"btn-login\",\n            Label = \"example\",\n            PasswordField = \"txtbox-password\",\n            Url = \"https://example.com/login.html\",\n            UsernameField = \"txtbox-username\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewSwa(ctx, \"example\", \u0026app.SwaArgs{\n\t\t\tButtonField:   pulumi.String(\"btn-login\"),\n\t\t\tLabel:         pulumi.String(\"example\"),\n\t\t\tPasswordField: pulumi.String(\"txtbox-password\"),\n\t\t\tUrl:           pulumi.String(\"https://example.com/login.html\"),\n\t\t\tUsernameField: pulumi.String(\"txtbox-username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta SWA App can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/swa:Swa example \u003capp id\u003e\n```\n\n ",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "buttonField": {
                    "type": "string",
                    "description": "Login button field.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The display name of the Application.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Direct link of application logo.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name assigned to the application by Okta.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "name of application from the Okta Integration Network, if not included a custom app will be created.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign-on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL.\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regex that further restricts URL to the specified regex.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "The default username assigned to each user.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "The Username template type.\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/SwaUser:SwaUser"
                    },
                    "description": "The users assigned to the application. See `okta.app.User` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "signOnMode"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "buttonField": {
                    "type": "string",
                    "description": "Login button field.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The display name of the Application.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "name of application from the Okta Integration Network, if not included a custom app will be created.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL.\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regex that further restricts URL to the specified regex.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "The default username assigned to each user.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "The Username template type.\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/SwaUser:SwaUser"
                    },
                    "description": "The users assigned to the application. See `okta.app.User` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Swa resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service. By default, it is `false`.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "buttonField": {
                        "type": "string",
                        "description": "Login button field.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                        "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The display name of the Application.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Direct link of application logo.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name assigned to the application by Okta.\n"
                    },
                    "passwordField": {
                        "type": "string",
                        "description": "Login password field.\n"
                    },
                    "preconfiguredApp": {
                        "type": "string",
                        "description": "name of application from the Okta Integration Network, if not included a custom app will be created.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign-on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Login URL.\n"
                    },
                    "urlRegex": {
                        "type": "string",
                        "description": "A regex that further restricts URL to the specified regex.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "The default username assigned to each user.\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "The Username template type.\n"
                    },
                    "usernameField": {
                        "type": "string",
                        "description": "Login username field.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/SwaUser:SwaUser"
                        },
                        "description": "The users assigned to the application. See `okta.app.User` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                        "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                    }
                },
                "type": "object"
            }
        },
        "okta:app/threeField:ThreeField": {
            "description": "Creates a Three Field Application.\n\nThis resource allows you to create and configure a Three Field Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.ThreeField(\"example\", {\n    credentialsScheme: \"EDIT_USERNAME_AND_PASSWORD\",\n    label: \"Example App\",\n    revealPassword: true,\n    signOnRedirectUrl: \"https://example.com\",\n    signOnUrl: \"https://example.com/login.html\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Three Field App can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/threeField:ThreeField example \u003capp id\u003e\n```\n\n ",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "buttonSelector": {
                    "type": "string",
                    "description": "Login button field CSS selector.\n"
                },
                "extraFieldSelector": {
                    "type": "string",
                    "description": "Extra field CSS selector.\n"
                },
                "extraFieldValue": {
                    "type": "string",
                    "description": "Value for extra form field.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The display name of the Application.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Direct link of application logo.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name assigned to the application by Okta.\n"
                },
                "passwordSelector": {
                    "type": "string",
                    "description": "Login password field CSS selector.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign-on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL.\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regex that further restricts URL to the specified regex.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "The default username assigned to each user.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "The Username template type.\n"
                },
                "usernameSelector": {
                    "type": "string",
                    "description": "Login username field CSS selector.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/ThreeFieldUser:ThreeFieldUser"
                    },
                    "description": "The users assigned to the application. See `okta.app.User` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "required": [
                "buttonSelector",
                "extraFieldSelector",
                "extraFieldValue",
                "label",
                "logoUrl",
                "name",
                "passwordSelector",
                "signOnMode",
                "url",
                "usernameSelector"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "buttonSelector": {
                    "type": "string",
                    "description": "Login button field CSS selector.\n"
                },
                "extraFieldSelector": {
                    "type": "string",
                    "description": "Extra field CSS selector.\n"
                },
                "extraFieldValue": {
                    "type": "string",
                    "description": "Value for extra form field.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The display name of the Application.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "passwordSelector": {
                    "type": "string",
                    "description": "Login password field CSS selector.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL.\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regex that further restricts URL to the specified regex.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "The default username assigned to each user.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "The Username template type.\n"
                },
                "usernameSelector": {
                    "type": "string",
                    "description": "Login username field CSS selector.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/ThreeFieldUser:ThreeFieldUser"
                    },
                    "description": "The users assigned to the application. See `okta.app.User` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "requiredInputs": [
                "buttonSelector",
                "extraFieldSelector",
                "extraFieldValue",
                "label",
                "passwordSelector",
                "url",
                "usernameSelector"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ThreeField resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service. By default, it is `false`.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "buttonSelector": {
                        "type": "string",
                        "description": "Login button field CSS selector.\n"
                    },
                    "extraFieldSelector": {
                        "type": "string",
                        "description": "Extra field CSS selector.\n"
                    },
                    "extraFieldValue": {
                        "type": "string",
                        "description": "Value for extra form field.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.\n",
                        "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The display name of the Application.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Direct link of application logo.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name assigned to the application by Okta.\n"
                    },
                    "passwordSelector": {
                        "type": "string",
                        "description": "Login password field CSS selector.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign-on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Login URL.\n"
                    },
                    "urlRegex": {
                        "type": "string",
                        "description": "A regex that further restricts URL to the specified regex.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "The default username assigned to each user.\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "The Username template type.\n"
                    },
                    "usernameSelector": {
                        "type": "string",
                        "description": "Login username field CSS selector.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/ThreeFieldUser:ThreeFieldUser"
                        },
                        "description": "The users assigned to the application. See `okta.app.User` for a more flexible approach.\n- `DEPRECATED`: Please replace usage with the `okta.app.User` resource.\n",
                        "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                    }
                },
                "type": "object"
            }
        },
        "okta:app/user:User": {
            "description": "\n\n\n## Import\n\nAn Application User can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/user:User example \u003capp id\u003e/\u003cuser id\u003e\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "App to associate user with.\n"
                },
                "hasSharedUsername": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "description": "The password to use.\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The JSON profile of the App User.\n"
                },
                "retainAssignment": {
                    "type": "boolean",
                    "description": "Retain the user association on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "User to associate the application with.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username to use for the app user. In case the user is assigned to the app with \n'SHARED_USERNAME_AND_PASSWORD' credentials scheme, this field will be computed and should not be set.\n"
                }
            },
            "required": [
                "appId",
                "hasSharedUsername",
                "userId"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "App to associate user with.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password to use.\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The JSON profile of the App User.\n"
                },
                "retainAssignment": {
                    "type": "boolean",
                    "description": "Retain the user association on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "User to associate the application with.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username to use for the app user. In case the user is assigned to the app with \n'SHARED_USERNAME_AND_PASSWORD' credentials scheme, this field will be computed and should not be set.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "App to associate user with.\n"
                    },
                    "hasSharedUsername": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password to use.\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The JSON profile of the App User.\n"
                    },
                    "retainAssignment": {
                        "type": "boolean",
                        "description": "Retain the user association on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "User to associate the application with.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username to use for the app user. In case the user is assigned to the app with \n'SHARED_USERNAME_AND_PASSWORD' credentials scheme, this field will be computed and should not be set.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/userBaseSchema:UserBaseSchema": {
            "description": "Manages an Application User Base Schema property.\n\nThis resource allows you to configure a base app user schema property.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.UserBaseSchema(\"example\", {\n    appId: \"\u003capp id\u003e\",\n    index: \"customPropertyName\",\n    master: \"OKTA\",\n    title: \"customPropertyName\",\n    type: \"string\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.UserBaseSchema(\"example\",\n    app_id=\"\u003capp id\u003e\",\n    index=\"customPropertyName\",\n    master=\"OKTA\",\n    title=\"customPropertyName\",\n    type=\"string\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.App.UserBaseSchema(\"example\", new Okta.App.UserBaseSchemaArgs\n        {\n            AppId = \"\u003capp id\u003e\",\n            Index = \"customPropertyName\",\n            Master = \"OKTA\",\n            Title = \"customPropertyName\",\n            Type = \"string\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewUserBaseSchema(ctx, \"example\", \u0026app.UserBaseSchemaArgs{\n\t\t\tAppId:  pulumi.String(\"\u003capp id\u003e\"),\n\t\t\tIndex:  pulumi.String(\"customPropertyName\"),\n\t\t\tMaster: pulumi.String(\"OKTA\"),\n\t\t\tTitle:  pulumi.String(\"customPropertyName\"),\n\t\t\tType:   pulumi.String(\"string\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nApp user base schema property can be imported via the property index and app id.\n\n```sh\n $ pulumi import okta:app/userBaseSchema:UserBaseSchema example \u003capp id\u003e/\u003cproperty name\u003e\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The Application's ID the user schema property should be assigned to.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The property display name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "Custom subschema user type\n"
                }
            },
            "required": [
                "appId",
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The Application's ID the user schema property should be assigned to.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The property display name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "Custom subschema user type\n"
                }
            },
            "requiredInputs": [
                "appId",
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserBaseSchema resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The Application's ID the user schema property should be assigned to.\n"
                    },
                    "index": {
                        "type": "string",
                        "description": "The property name.\n"
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the property is required for this application's users.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The property display name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                    },
                    "userType": {
                        "type": "string",
                        "description": "Custom subschema user type\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/userSchema:UserSchema": {
            "description": "Creates an Application User Schema property.\n\nThis resource allows you to create and configure a custom user schema property and associate it with an application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.UserSchema(\"example\", {\n    appId: \"\u003capp id\u003e\",\n    description: \"My custom property name\",\n    index: \"customPropertyName\",\n    master: \"OKTA\",\n    scope: \"SELF\",\n    title: \"customPropertyName\",\n    type: \"string\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.UserSchema(\"example\",\n    app_id=\"\u003capp id\u003e\",\n    description=\"My custom property name\",\n    index=\"customPropertyName\",\n    master=\"OKTA\",\n    scope=\"SELF\",\n    title=\"customPropertyName\",\n    type=\"string\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.App.UserSchema(\"example\", new Okta.App.UserSchemaArgs\n        {\n            AppId = \"\u003capp id\u003e\",\n            Description = \"My custom property name\",\n            Index = \"customPropertyName\",\n            Master = \"OKTA\",\n            Scope = \"SELF\",\n            Title = \"customPropertyName\",\n            Type = \"string\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewUserSchema(ctx, \"example\", \u0026app.UserSchemaArgs{\n\t\t\tAppId:       pulumi.String(\"\u003capp id\u003e\"),\n\t\t\tDescription: pulumi.String(\"My custom property name\"),\n\t\t\tIndex:       pulumi.String(\"customPropertyName\"),\n\t\t\tMaster:      pulumi.String(\"OKTA\"),\n\t\t\tScope:       pulumi.String(\"SELF\"),\n\t\t\tTitle:       pulumi.String(\"customPropertyName\"),\n\t\t\tType:        pulumi.String(\"string\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nApp user schema property can be imported via the property index and app id.\n\n```sh\n $ pulumi import okta:app/userSchema:UserSchema example \u003capp id\u003e/\u003cproperty name\u003e\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The Application's ID the user custom schema property should be assigned to.\n"
                },
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/UserSchemaArrayOneOf:UserSchemaArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `\"array\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External namespace of the user schema property.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/UserSchemaOneOf:UserSchemaOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                },
                "union": {
                    "type": "boolean",
                    "description": "Used to assign attribute group priority. Can not be set to 'true' if `scope` is set to Individual level.\n"
                },
                "unique": {
                    "type": "string",
                    "description": "Subschema unique restriction\n"
                },
                "userType": {
                    "type": "string",
                    "description": "Custom subschema user type\n"
                }
            },
            "required": [
                "appId",
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The Application's ID the user custom schema property should be assigned to.\n"
                },
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/UserSchemaArrayOneOf:UserSchemaArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `\"array\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External namespace of the user schema property.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/UserSchemaOneOf:UserSchemaOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                },
                "union": {
                    "type": "boolean",
                    "description": "Used to assign attribute group priority. Can not be set to 'true' if `scope` is set to Individual level.\n"
                },
                "unique": {
                    "type": "string",
                    "description": "Subschema unique restriction\n"
                },
                "userType": {
                    "type": "string",
                    "description": "Custom subschema user type\n"
                }
            },
            "requiredInputs": [
                "appId",
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserSchema resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The Application's ID the user custom schema property should be assigned to.\n"
                    },
                    "arrayEnums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values that an array property's items can be set to.\n"
                    },
                    "arrayOneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/UserSchemaArrayOneOf:UserSchemaArrayOneOf"
                        },
                        "description": "Display name and value an enum array can be set to.\n"
                    },
                    "arrayType": {
                        "type": "string",
                        "description": "The type of the array elements if `type` is set to `\"array\"`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the user schema property.\n"
                    },
                    "enums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                    },
                    "externalName": {
                        "type": "string",
                        "description": "External name of the user schema property.\n"
                    },
                    "externalNamespace": {
                        "type": "string",
                        "description": "External namespace of the user schema property.\n"
                    },
                    "index": {
                        "type": "string",
                        "description": "The property name.\n"
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                    },
                    "maxLength": {
                        "type": "integer",
                        "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                    },
                    "minLength": {
                        "type": "integer",
                        "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                    },
                    "oneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/UserSchemaOneOf:UserSchemaOneOf"
                        },
                        "description": "Array of maps containing a mapping for display name to enum value.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the property is required for this application's users.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "display name for the enum value.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                    },
                    "union": {
                        "type": "boolean",
                        "description": "Used to assign attribute group priority. Can not be set to 'true' if `scope` is set to Individual level.\n"
                    },
                    "unique": {
                        "type": "string",
                        "description": "Subschema unique restriction\n"
                    },
                    "userType": {
                        "type": "string",
                        "description": "Custom subschema user type\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:auth/server:Server": {
            "description": "Creates an Authorization Server.\n\nThis resource allows you to create and configure an Authorization Server.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.Server(\"example\", {\n    audiences: [\"api://example\"],\n    description: \"My Example Auth Server\",\n    issuerMode: \"CUSTOM_URL\",\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.Server(\"example\",\n    audiences=[\"api://example\"],\n    description=\"My Example Auth Server\",\n    issuer_mode=\"CUSTOM_URL\",\n    status=\"ACTIVE\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Auth.Server(\"example\", new Okta.Auth.ServerArgs\n        {\n            Audiences = \n            {\n                \"api://example\",\n            },\n            Description = \"My Example Auth Server\",\n            IssuerMode = \"CUSTOM_URL\",\n            Status = \"ACTIVE\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServer(ctx, \"example\", \u0026auth.ServerArgs{\n\t\t\tAudiences: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"api://example\"),\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"My Example Auth Server\"),\n\t\t\tIssuerMode:  pulumi.String(\"CUSTOM_URL\"),\n\t\t\tStatus:      pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAuthorization Server can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:auth/server:Server example \u003cauth server id\u003e\n```\n\n ",
            "properties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token.\n"
                },
                "credentialsLastRotated": {
                    "type": "string",
                    "description": "The timestamp when the authorization server started to use the `kid` for signing tokens.\n"
                },
                "credentialsNextRotation": {
                    "type": "string",
                    "description": "The timestamp when the authorization server changes the key for signing tokens. Only returned when `credentials_rotation_mode` is `\"AUTO\"`.\n"
                },
                "credentialsRotationMode": {
                    "type": "string",
                    "description": "The key rotation mode for the authorization server. Can be `\"AUTO\"` or `\"MANUAL\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the authorization server.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The complete URL for a Custom Authorization Server. This becomes the `iss` claim in an access token.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Allows you to use a custom issuer URL. It can be set to `\"CUSTOM_URL\"` or `\"ORG_URL\"`\n"
                },
                "kid": {
                    "type": "string",
                    "description": "The ID of the JSON Web Key used for signing tokens issued by the authorization server.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the authorization server.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the auth server. It defaults to `\"ACTIVE\"`\n"
                }
            },
            "required": [
                "audiences",
                "credentialsLastRotated",
                "credentialsNextRotation",
                "issuer",
                "kid",
                "name"
            ],
            "inputProperties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token.\n"
                },
                "credentialsRotationMode": {
                    "type": "string",
                    "description": "The key rotation mode for the authorization server. Can be `\"AUTO\"` or `\"MANUAL\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the authorization server.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Allows you to use a custom issuer URL. It can be set to `\"CUSTOM_URL\"` or `\"ORG_URL\"`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the authorization server.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the auth server. It defaults to `\"ACTIVE\"`\n"
                }
            },
            "requiredInputs": [
                "audiences"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Server resources.\n",
                "properties": {
                    "audiences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token.\n"
                    },
                    "credentialsLastRotated": {
                        "type": "string",
                        "description": "The timestamp when the authorization server started to use the `kid` for signing tokens.\n"
                    },
                    "credentialsNextRotation": {
                        "type": "string",
                        "description": "The timestamp when the authorization server changes the key for signing tokens. Only returned when `credentials_rotation_mode` is `\"AUTO\"`.\n"
                    },
                    "credentialsRotationMode": {
                        "type": "string",
                        "description": "The key rotation mode for the authorization server. Can be `\"AUTO\"` or `\"MANUAL\"`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the authorization server.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The complete URL for a Custom Authorization Server. This becomes the `iss` claim in an access token.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Allows you to use a custom issuer URL. It can be set to `\"CUSTOM_URL\"` or `\"ORG_URL\"`\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "The ID of the JSON Web Key used for signing tokens issued by the authorization server.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the authorization server.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the auth server. It defaults to `\"ACTIVE\"`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:auth/serverClaim:ServerClaim": {
            "description": "Creates an Authorization Server Claim.\n\nThis resource allows you to create and configure an Authorization Server Claim.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.ServerClaim(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    claimType: \"IDENTITY\",\n    scopes: [okta_auth_server_scope_example.name],\n    value: \"String.substringAfter(user.email, \\\"@\\\") == \\\"example.com\\\"\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.ServerClaim(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    claim_type=\"IDENTITY\",\n    scopes=[okta_auth_server_scope[\"example\"][\"name\"]],\n    value=\"String.substringAfter(user.email, \\\"@\\\") == \\\"example.com\\\"\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Auth.ServerClaim(\"example\", new Okta.Auth.ServerClaimArgs\n        {\n            AuthServerId = \"\u003cauth server id\u003e\",\n            ClaimType = \"IDENTITY\",\n            Scopes = \n            {\n                okta_auth_server_scope.Example.Name,\n            },\n            Value = \"String.substringAfter(user.email, \\\"@\\\") == \\\"example.com\\\"\",\n        });\n    }\n\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAuthorization Server Claim can be imported via the Auth Server ID and Claim ID.\n\n```sh\n $ pulumi import okta:auth/serverClaim:ServerClaim example \u003cauth server id\u003e/\u003cclaim id\u003e\n```\n\n ",
            "properties": {
                "alwaysIncludeInToken": {
                    "type": "boolean",
                    "description": "Specifies whether to include claims in token, by default it is set to `true`.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "ID of the authorization server.\n"
                },
                "claimType": {
                    "type": "string",
                    "description": "Specifies whether the claim is for an access token `\"RESOURCE\"` or ID token `\"IDENTITY\"`.\n"
                },
                "groupFilterType": {
                    "type": "string",
                    "description": "Specifies the type of group filter if `value_type` is `\"GROUPS\"`. Can be set to one of the following `\"STARTS_WITH\"`, `\"EQUALS\"`, `\"CONTAINS\"`, `\"REGEX\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the claim.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of scopes the auth server claim is tied to.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application. It defaults to `\"ACTIVE\"`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the claim.\n"
                },
                "valueType": {
                    "type": "string",
                    "description": "The type of value of the claim. It can be set to `\"EXPRESSION\"` or `\"GROUPS\"`. It defaults to `\"EXPRESSION\"`.\n"
                }
            },
            "required": [
                "authServerId",
                "claimType",
                "name",
                "value"
            ],
            "inputProperties": {
                "alwaysIncludeInToken": {
                    "type": "boolean",
                    "description": "Specifies whether to include claims in token, by default it is set to `true`.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "ID of the authorization server.\n"
                },
                "claimType": {
                    "type": "string",
                    "description": "Specifies whether the claim is for an access token `\"RESOURCE\"` or ID token `\"IDENTITY\"`.\n"
                },
                "groupFilterType": {
                    "type": "string",
                    "description": "Specifies the type of group filter if `value_type` is `\"GROUPS\"`. Can be set to one of the following `\"STARTS_WITH\"`, `\"EQUALS\"`, `\"CONTAINS\"`, `\"REGEX\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the claim.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of scopes the auth server claim is tied to.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application. It defaults to `\"ACTIVE\"`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the claim.\n"
                },
                "valueType": {
                    "type": "string",
                    "description": "The type of value of the claim. It can be set to `\"EXPRESSION\"` or `\"GROUPS\"`. It defaults to `\"EXPRESSION\"`.\n"
                }
            },
            "requiredInputs": [
                "authServerId",
                "claimType",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerClaim resources.\n",
                "properties": {
                    "alwaysIncludeInToken": {
                        "type": "boolean",
                        "description": "Specifies whether to include claims in token, by default it is set to `true`.\n"
                    },
                    "authServerId": {
                        "type": "string",
                        "description": "ID of the authorization server.\n"
                    },
                    "claimType": {
                        "type": "string",
                        "description": "Specifies whether the claim is for an access token `\"RESOURCE\"` or ID token `\"IDENTITY\"`.\n"
                    },
                    "groupFilterType": {
                        "type": "string",
                        "description": "Specifies the type of group filter if `value_type` is `\"GROUPS\"`. Can be set to one of the following `\"STARTS_WITH\"`, `\"EQUALS\"`, `\"CONTAINS\"`, `\"REGEX\"`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the claim.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of scopes the auth server claim is tied to.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the application. It defaults to `\"ACTIVE\"`.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the claim.\n"
                    },
                    "valueType": {
                        "type": "string",
                        "description": "The type of value of the claim. It can be set to `\"EXPRESSION\"` or `\"GROUPS\"`. It defaults to `\"EXPRESSION\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:auth/serverPolicy:ServerPolicy": {
            "description": "Creates an Authorization Server Policy.\n\nThis resource allows you to create and configure an Authorization Server Policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.ServerPolicy(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    clientWhitelists: [\"ALL_CLIENTS\"],\n    description: \"example\",\n    priority: 1,\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.ServerPolicy(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    client_whitelists=[\"ALL_CLIENTS\"],\n    description=\"example\",\n    priority=1,\n    status=\"ACTIVE\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Auth.ServerPolicy(\"example\", new Okta.Auth.ServerPolicyArgs\n        {\n            AuthServerId = \"\u003cauth server id\u003e\",\n            ClientWhitelists = \n            {\n                \"ALL_CLIENTS\",\n            },\n            Description = \"example\",\n            Priority = 1,\n            Status = \"ACTIVE\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServerPolicy(ctx, \"example\", \u0026auth.ServerPolicyArgs{\n\t\t\tAuthServerId: pulumi.String(\"\u003cauth server id\u003e\"),\n\t\t\tClientWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ALL_CLIENTS\"),\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"example\"),\n\t\t\tPriority:    pulumi.Int(1),\n\t\t\tStatus:      pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAuthorization Server Policy can be imported via the Auth Server ID and Policy ID.\n\n```sh\n $ pulumi import okta:auth/serverPolicy:ServerPolicy example \u003cauth server id\u003e/\u003cpolicy id\u003e\n```\n\n ",
            "properties": {
                "authServerId": {
                    "type": "string",
                    "description": "The ID of the Auth Server.\n"
                },
                "clientWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The clients to whitelist the policy for. `[\"ALL_CLIENTS\"]` is a special value that can be used to whitelist all clients, otherwise it is a list of client ids.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Auth Server Policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Auth Server Policy.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the Auth Server Policy.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Auth Server Policy.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the Auth Server Policy.\n",
                    "deprecationMessage": "Policy type can only be of value 'OAUTH_AUTHORIZATION_POLICY', so this will be removed in the future, or set as 'Computed' value"
                }
            },
            "required": [
                "authServerId",
                "clientWhitelists",
                "description",
                "name",
                "priority"
            ],
            "inputProperties": {
                "authServerId": {
                    "type": "string",
                    "description": "The ID of the Auth Server.\n"
                },
                "clientWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The clients to whitelist the policy for. `[\"ALL_CLIENTS\"]` is a special value that can be used to whitelist all clients, otherwise it is a list of client ids.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Auth Server Policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Auth Server Policy.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the Auth Server Policy.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Auth Server Policy.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the Auth Server Policy.\n",
                    "deprecationMessage": "Policy type can only be of value 'OAUTH_AUTHORIZATION_POLICY', so this will be removed in the future, or set as 'Computed' value"
                }
            },
            "requiredInputs": [
                "authServerId",
                "clientWhitelists",
                "description",
                "priority"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerPolicy resources.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "The ID of the Auth Server.\n"
                    },
                    "clientWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The clients to whitelist the policy for. `[\"ALL_CLIENTS\"]` is a special value that can be used to whitelist all clients, otherwise it is a list of client ids.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the Auth Server Policy.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Auth Server Policy.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "The priority of the Auth Server Policy.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the Auth Server Policy.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the Auth Server Policy.\n",
                        "deprecationMessage": "Policy type can only be of value 'OAUTH_AUTHORIZATION_POLICY', so this will be removed in the future, or set as 'Computed' value"
                    }
                },
                "type": "object"
            }
        },
        "okta:auth/serverPolicyClaim:ServerPolicyClaim": {
            "description": "Creates an Authorization Server Policy Rule.\n\nThis resource allows you to create and configure an Authorization Server Policy Rule.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.ServerPolicyRule(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    grantTypeWhitelists: [\"implicit\"],\n    groupWhitelists: [\"\u003cgroup ids\u003e\"],\n    policyId: \"\u003cauth server policy id\u003e\",\n    priority: 1,\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.ServerPolicyRule(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    grant_type_whitelists=[\"implicit\"],\n    group_whitelists=[\"\u003cgroup ids\u003e\"],\n    policy_id=\"\u003cauth server policy id\u003e\",\n    priority=1,\n    status=\"ACTIVE\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Auth.ServerPolicyRule(\"example\", new Okta.Auth.ServerPolicyRuleArgs\n        {\n            AuthServerId = \"\u003cauth server id\u003e\",\n            GrantTypeWhitelists = \n            {\n                \"implicit\",\n            },\n            GroupWhitelists = \n            {\n                \"\u003cgroup ids\u003e\",\n            },\n            PolicyId = \"\u003cauth server policy id\u003e\",\n            Priority = 1,\n            Status = \"ACTIVE\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServerPolicyRule(ctx, \"example\", \u0026auth.ServerPolicyRuleArgs{\n\t\t\tAuthServerId: pulumi.String(\"\u003cauth server id\u003e\"),\n\t\t\tGrantTypeWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"implicit\"),\n\t\t\t},\n\t\t\tGroupWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"\u003cgroup ids\u003e\"),\n\t\t\t},\n\t\t\tPolicyId: pulumi.String(\"\u003cauth server policy id\u003e\"),\n\t\t\tPriority: pulumi.Int(1),\n\t\t\tStatus:   pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAuthorization Server Policy Rule can be imported via the Auth Server ID, Policy ID, and Policy Rule ID.\n\n```sh\n $ pulumi import okta:auth/serverPolicyClaim:ServerPolicyClaim example \u003cauth server id\u003e/\u003cpolicy id\u003e/\u003cpolicy rule id\u003e\n```\n\n ",
            "properties": {
                "accessTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of access token. Can be set to a value between 5 and 1440 minutes.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "Auth Server ID.\n"
                },
                "grantTypeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Accepted grant type values, `\"authorization_code\"`, `\"implicit\"`, `\"password\"` or `\"client_credentials\"`. For `\"implicit\"` value either `user_whitelist` or `group_whitelist` should be set.\n"
                },
                "groupBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be excluded.\n"
                },
                "groupWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: \"EVERYONE\".\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "The ID of the inline token to trigger.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auth Server Policy Rule name.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Auth Server Policy ID.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the auth server policy rule.\n"
                },
                "refreshTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of refresh token.\n"
                },
                "refreshTokenWindowMinutes": {
                    "type": "integer",
                    "description": "Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes.\n`\"refresh_token_window_minutes\"` must be between `\"access_token_lifetime_minutes\"` and `\"refresh_token_lifetime_minutes\"`.\n"
                },
                "scopeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `\"*\"`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Auth Server Policy Rule.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the Auth Server Policy Rule.\n"
                },
                "userBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be excluded.\n"
                },
                "userWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be included.\n"
                }
            },
            "required": [
                "authServerId",
                "grantTypeWhitelists",
                "name",
                "policyId",
                "priority"
            ],
            "inputProperties": {
                "accessTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of access token. Can be set to a value between 5 and 1440 minutes.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "Auth Server ID.\n"
                },
                "grantTypeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Accepted grant type values, `\"authorization_code\"`, `\"implicit\"`, `\"password\"` or `\"client_credentials\"`. For `\"implicit\"` value either `user_whitelist` or `group_whitelist` should be set.\n"
                },
                "groupBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be excluded.\n"
                },
                "groupWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: \"EVERYONE\".\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "The ID of the inline token to trigger.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auth Server Policy Rule name.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Auth Server Policy ID.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the auth server policy rule.\n"
                },
                "refreshTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of refresh token.\n"
                },
                "refreshTokenWindowMinutes": {
                    "type": "integer",
                    "description": "Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes.\n`\"refresh_token_window_minutes\"` must be between `\"access_token_lifetime_minutes\"` and `\"refresh_token_lifetime_minutes\"`.\n"
                },
                "scopeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `\"*\"`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Auth Server Policy Rule.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the Auth Server Policy Rule.\n"
                },
                "userBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be excluded.\n"
                },
                "userWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be included.\n"
                }
            },
            "requiredInputs": [
                "authServerId",
                "grantTypeWhitelists",
                "policyId",
                "priority"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerPolicyClaim resources.\n",
                "properties": {
                    "accessTokenLifetimeMinutes": {
                        "type": "integer",
                        "description": "Lifetime of access token. Can be set to a value between 5 and 1440 minutes.\n"
                    },
                    "authServerId": {
                        "type": "string",
                        "description": "Auth Server ID.\n"
                    },
                    "grantTypeWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Accepted grant type values, `\"authorization_code\"`, `\"implicit\"`, `\"password\"` or `\"client_credentials\"`. For `\"implicit\"` value either `user_whitelist` or `group_whitelist` should be set.\n"
                    },
                    "groupBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Groups whose Users are to be excluded.\n"
                    },
                    "groupWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: \"EVERYONE\".\n"
                    },
                    "inlineHookId": {
                        "type": "string",
                        "description": "The ID of the inline token to trigger.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Auth Server Policy Rule name.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Auth Server Policy ID.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of the auth server policy rule.\n"
                    },
                    "refreshTokenLifetimeMinutes": {
                        "type": "integer",
                        "description": "Lifetime of refresh token.\n"
                    },
                    "refreshTokenWindowMinutes": {
                        "type": "integer",
                        "description": "Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes.\n`\"refresh_token_window_minutes\"` must be between `\"access_token_lifetime_minutes\"` and `\"refresh_token_lifetime_minutes\"`.\n"
                    },
                    "scopeWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `\"*\"`.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the Auth Server Policy Rule.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the Auth Server Policy Rule.\n"
                    },
                    "userBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Users to be excluded.\n"
                    },
                    "userWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Users to be included.\n"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "okta.auth.ServerPolicyClaim has been deprecated in favor of okta.auth.ServerPolicyRule"
        },
        "okta:auth/serverPolicyRule:ServerPolicyRule": {
            "description": "Creates an Authorization Server Policy Rule.\n\nThis resource allows you to create and configure an Authorization Server Policy Rule.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.ServerPolicyRule(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    grantTypeWhitelists: [\"implicit\"],\n    groupWhitelists: [\"\u003cgroup ids\u003e\"],\n    policyId: \"\u003cauth server policy id\u003e\",\n    priority: 1,\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.ServerPolicyRule(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    grant_type_whitelists=[\"implicit\"],\n    group_whitelists=[\"\u003cgroup ids\u003e\"],\n    policy_id=\"\u003cauth server policy id\u003e\",\n    priority=1,\n    status=\"ACTIVE\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Auth.ServerPolicyRule(\"example\", new Okta.Auth.ServerPolicyRuleArgs\n        {\n            AuthServerId = \"\u003cauth server id\u003e\",\n            GrantTypeWhitelists = \n            {\n                \"implicit\",\n            },\n            GroupWhitelists = \n            {\n                \"\u003cgroup ids\u003e\",\n            },\n            PolicyId = \"\u003cauth server policy id\u003e\",\n            Priority = 1,\n            Status = \"ACTIVE\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServerPolicyRule(ctx, \"example\", \u0026auth.ServerPolicyRuleArgs{\n\t\t\tAuthServerId: pulumi.String(\"\u003cauth server id\u003e\"),\n\t\t\tGrantTypeWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"implicit\"),\n\t\t\t},\n\t\t\tGroupWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"\u003cgroup ids\u003e\"),\n\t\t\t},\n\t\t\tPolicyId: pulumi.String(\"\u003cauth server policy id\u003e\"),\n\t\t\tPriority: pulumi.Int(1),\n\t\t\tStatus:   pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAuthorization Server Policy Rule can be imported via the Auth Server ID, Policy ID, and Policy Rule ID.\n\n```sh\n $ pulumi import okta:auth/serverPolicyRule:ServerPolicyRule example \u003cauth server id\u003e/\u003cpolicy id\u003e/\u003cpolicy rule id\u003e\n```\n\n ",
            "properties": {
                "accessTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of access token. Can be set to a value between 5 and 1440 minutes.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "Auth Server ID.\n"
                },
                "grantTypeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Accepted grant type values, `\"authorization_code\"`, `\"implicit\"`, `\"password\"` or `\"client_credentials\"`. For `\"implicit\"` value either `user_whitelist` or `group_whitelist` should be set.\n"
                },
                "groupBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be excluded.\n"
                },
                "groupWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: \"EVERYONE\".\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "The ID of the inline token to trigger.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auth Server Policy Rule name.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Auth Server Policy ID.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the auth server policy rule.\n"
                },
                "refreshTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of refresh token.\n"
                },
                "refreshTokenWindowMinutes": {
                    "type": "integer",
                    "description": "Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes.\n`\"refresh_token_window_minutes\"` must be between `\"access_token_lifetime_minutes\"` and `\"refresh_token_lifetime_minutes\"`.\n"
                },
                "scopeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `\"*\"`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Auth Server Policy Rule.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the Auth Server Policy Rule.\n"
                },
                "userBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be excluded.\n"
                },
                "userWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be included.\n"
                }
            },
            "required": [
                "authServerId",
                "grantTypeWhitelists",
                "name",
                "policyId",
                "priority"
            ],
            "inputProperties": {
                "accessTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of access token. Can be set to a value between 5 and 1440 minutes.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "Auth Server ID.\n"
                },
                "grantTypeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Accepted grant type values, `\"authorization_code\"`, `\"implicit\"`, `\"password\"` or `\"client_credentials\"`. For `\"implicit\"` value either `user_whitelist` or `group_whitelist` should be set.\n"
                },
                "groupBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be excluded.\n"
                },
                "groupWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: \"EVERYONE\".\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "The ID of the inline token to trigger.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auth Server Policy Rule name.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Auth Server Policy ID.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the auth server policy rule.\n"
                },
                "refreshTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of refresh token.\n"
                },
                "refreshTokenWindowMinutes": {
                    "type": "integer",
                    "description": "Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes.\n`\"refresh_token_window_minutes\"` must be between `\"access_token_lifetime_minutes\"` and `\"refresh_token_lifetime_minutes\"`.\n"
                },
                "scopeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `\"*\"`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Auth Server Policy Rule.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the Auth Server Policy Rule.\n"
                },
                "userBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be excluded.\n"
                },
                "userWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be included.\n"
                }
            },
            "requiredInputs": [
                "authServerId",
                "grantTypeWhitelists",
                "policyId",
                "priority"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerPolicyRule resources.\n",
                "properties": {
                    "accessTokenLifetimeMinutes": {
                        "type": "integer",
                        "description": "Lifetime of access token. Can be set to a value between 5 and 1440 minutes.\n"
                    },
                    "authServerId": {
                        "type": "string",
                        "description": "Auth Server ID.\n"
                    },
                    "grantTypeWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Accepted grant type values, `\"authorization_code\"`, `\"implicit\"`, `\"password\"` or `\"client_credentials\"`. For `\"implicit\"` value either `user_whitelist` or `group_whitelist` should be set.\n"
                    },
                    "groupBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Groups whose Users are to be excluded.\n"
                    },
                    "groupWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: \"EVERYONE\".\n"
                    },
                    "inlineHookId": {
                        "type": "string",
                        "description": "The ID of the inline token to trigger.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Auth Server Policy Rule name.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Auth Server Policy ID.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of the auth server policy rule.\n"
                    },
                    "refreshTokenLifetimeMinutes": {
                        "type": "integer",
                        "description": "Lifetime of refresh token.\n"
                    },
                    "refreshTokenWindowMinutes": {
                        "type": "integer",
                        "description": "Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes.\n`\"refresh_token_window_minutes\"` must be between `\"access_token_lifetime_minutes\"` and `\"refresh_token_lifetime_minutes\"`.\n"
                    },
                    "scopeWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `\"*\"`.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the Auth Server Policy Rule.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the Auth Server Policy Rule.\n"
                    },
                    "userBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Users to be excluded.\n"
                    },
                    "userWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Users to be included.\n"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "okta:auth/serverPolicyClaim:ServerPolicyClaim"
                }
            ]
        },
        "okta:auth/serverScope:ServerScope": {
            "description": "Creates an Authorization Server Scope.\n\nThis resource allows you to create and configure an Authorization Server Scope.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.ServerScope(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    consent: \"IMPLICIT\",\n    metadataPublish: \"NO_CLIENTS\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.ServerScope(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    consent=\"IMPLICIT\",\n    metadata_publish=\"NO_CLIENTS\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Auth.ServerScope(\"example\", new Okta.Auth.ServerScopeArgs\n        {\n            AuthServerId = \"\u003cauth server id\u003e\",\n            Consent = \"IMPLICIT\",\n            MetadataPublish = \"NO_CLIENTS\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServerScope(ctx, \"example\", \u0026auth.ServerScopeArgs{\n\t\t\tAuthServerId:    pulumi.String(\"\u003cauth server id\u003e\"),\n\t\t\tConsent:         pulumi.String(\"IMPLICIT\"),\n\t\t\tMetadataPublish: pulumi.String(\"NO_CLIENTS\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta Auth Server Scope can be imported via the Auth Server ID and Scope ID.\n\n```sh\n $ pulumi import okta:auth/serverScope:ServerScope example \u003cauth server id\u003e/\u003cscope id\u003e\n```\n\n ",
            "properties": {
                "authServerId": {
                    "type": "string",
                    "description": "Auth Server ID.\n"
                },
                "consent": {
                    "type": "string",
                    "description": "Indicates whether a consent dialog is needed for the scope. It can be set to `\"REQUIRED\"` or `\"IMPLICIT\"`.\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "A default scope will be returned in an access token when the client omits the scope parameter in a token request, provided this scope is allowed as part of the access policy rule.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Auth Server Scope.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Name of the end user displayed in a consent dialog box.\n"
                },
                "metadataPublish": {
                    "type": "string",
                    "description": "Whether to publish metadata or not. It can be set to `\"ALL_CLIENTS\"` or `\"NO_CLIENTS\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auth Server scope name.\n"
                }
            },
            "required": [
                "authServerId",
                "name"
            ],
            "inputProperties": {
                "authServerId": {
                    "type": "string",
                    "description": "Auth Server ID.\n"
                },
                "consent": {
                    "type": "string",
                    "description": "Indicates whether a consent dialog is needed for the scope. It can be set to `\"REQUIRED\"` or `\"IMPLICIT\"`.\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "A default scope will be returned in an access token when the client omits the scope parameter in a token request, provided this scope is allowed as part of the access policy rule.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Auth Server Scope.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Name of the end user displayed in a consent dialog box.\n"
                },
                "metadataPublish": {
                    "type": "string",
                    "description": "Whether to publish metadata or not. It can be set to `\"ALL_CLIENTS\"` or `\"NO_CLIENTS\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auth Server scope name.\n"
                }
            },
            "requiredInputs": [
                "authServerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerScope resources.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "Auth Server ID.\n"
                    },
                    "consent": {
                        "type": "string",
                        "description": "Indicates whether a consent dialog is needed for the scope. It can be set to `\"REQUIRED\"` or `\"IMPLICIT\"`.\n"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "A default scope will be returned in an access token when the client omits the scope parameter in a token request, provided this scope is allowed as part of the access policy rule.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Auth Server Scope.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Name of the end user displayed in a consent dialog box.\n"
                    },
                    "metadataPublish": {
                        "type": "string",
                        "description": "Whether to publish metadata or not. It can be set to `\"ALL_CLIENTS\"` or `\"NO_CLIENTS\"`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Auth Server scope name.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/authLoginApp:AuthLoginApp": {
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "Pretty name of app.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of the application.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Preconfigured app name\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "signOnRedirectUrl": {
                    "type": "string",
                    "description": "Post login redirect URL\n"
                },
                "signOnUrl": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/AuthLoginAppUser:AuthLoginAppUser"
                    },
                    "description": "Users associated with the application\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "signOnMode"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "Pretty name of app.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of the application.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Preconfigured app name\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "signOnRedirectUrl": {
                    "type": "string",
                    "description": "Post login redirect URL\n"
                },
                "signOnUrl": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/AuthLoginAppUser:AuthLoginAppUser"
                    },
                    "description": "Users associated with the application\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthLoginApp resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self service\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar\n"
                    },
                    "credentialsScheme": {
                        "type": "string",
                        "description": "Application credentials scheme\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Groups associated with the application\n",
                        "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Pretty name of app.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Logo of the application.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "preconfiguredApp": {
                        "type": "string",
                        "description": "Preconfigured app name\n"
                    },
                    "revealPassword": {
                        "type": "boolean",
                        "description": "Allow user to reveal password\n"
                    },
                    "sharedPassword": {
                        "type": "string",
                        "description": "Shared password, required for certain schemes.\n"
                    },
                    "sharedUsername": {
                        "type": "string",
                        "description": "Shared username, required for certain schemes.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "signOnRedirectUrl": {
                        "type": "string",
                        "description": "Post login redirect URL\n"
                    },
                    "signOnUrl": {
                        "type": "string",
                        "description": "Login URL\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:deprecated/AuthLoginAppUser:AuthLoginAppUser"
                        },
                        "description": "Users associated with the application\n",
                        "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/bookmarkApp:BookmarkApp": {
            "properties": {
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "Pretty name of app.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of the application.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "requestIntegration": {
                    "type": "boolean"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application.\n"
                },
                "url": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/BookmarkAppUser:BookmarkAppUser"
                    },
                    "description": "Users associated with the application\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "signOnMode",
                "url"
            ],
            "inputProperties": {
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "Pretty name of app.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of the application.\n"
                },
                "requestIntegration": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application.\n"
                },
                "url": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/BookmarkAppUser:BookmarkAppUser"
                    },
                    "description": "Users associated with the application\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "requiredInputs": [
                "label",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BookmarkApp resources.\n",
                "properties": {
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Groups associated with the application\n",
                        "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Pretty name of app.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Logo of the application.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "requestIntegration": {
                        "type": "boolean"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application.\n"
                    },
                    "url": {
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:deprecated/BookmarkAppUser:BookmarkAppUser"
                        },
                        "description": "Users associated with the application\n",
                        "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/idp:Idp": {
            "properties": {
                "accountLinkAction": {
                    "type": "string"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authorizationBinding": {
                    "type": "string"
                },
                "authorizationUrl": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "deprovisionedAction": {
                    "type": "string"
                },
                "groupsAction": {
                    "type": "string"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupsAttribute": {
                    "type": "string"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL\n"
                },
                "issuerUrl": {
                    "type": "string"
                },
                "jwksBinding": {
                    "type": "string"
                },
                "jwksUrl": {
                    "type": "string"
                },
                "maxClockSkew": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "name of idp\n"
                },
                "profileMaster": {
                    "type": "boolean"
                },
                "protocolType": {
                    "type": "string"
                },
                "provisioningAction": {
                    "type": "string"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "algorithm to use to sign requests\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "algorithm to use to sign response\n"
                },
                "responseSignatureAlgorithm": {
                    "type": "string",
                    "description": "algorithm to use to sign requests\n"
                },
                "responseSignatureScope": {
                    "type": "string",
                    "description": "algorithm to use to sign response\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "subjectMatchAttribute": {
                    "type": "string"
                },
                "subjectMatchType": {
                    "type": "string"
                },
                "suspendedAction": {
                    "type": "string"
                },
                "tokenBinding": {
                    "type": "string"
                },
                "tokenUrl": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userInfoBinding": {
                    "type": "string"
                },
                "userInfoUrl": {
                    "type": "string"
                },
                "usernameTemplate": {
                    "type": "string"
                }
            },
            "required": [
                "authorizationBinding",
                "authorizationUrl",
                "clientId",
                "clientSecret",
                "issuerUrl",
                "jwksBinding",
                "jwksUrl",
                "name",
                "scopes",
                "tokenBinding",
                "tokenUrl",
                "type"
            ],
            "inputProperties": {
                "accountLinkAction": {
                    "type": "string"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authorizationBinding": {
                    "type": "string"
                },
                "authorizationUrl": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "deprovisionedAction": {
                    "type": "string"
                },
                "groupsAction": {
                    "type": "string"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupsAttribute": {
                    "type": "string"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL\n"
                },
                "issuerUrl": {
                    "type": "string"
                },
                "jwksBinding": {
                    "type": "string"
                },
                "jwksUrl": {
                    "type": "string"
                },
                "maxClockSkew": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "name of idp\n"
                },
                "profileMaster": {
                    "type": "boolean"
                },
                "protocolType": {
                    "type": "string"
                },
                "provisioningAction": {
                    "type": "string"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "algorithm to use to sign requests\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "algorithm to use to sign response\n"
                },
                "responseSignatureAlgorithm": {
                    "type": "string",
                    "description": "algorithm to use to sign requests\n"
                },
                "responseSignatureScope": {
                    "type": "string",
                    "description": "algorithm to use to sign response\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "subjectMatchAttribute": {
                    "type": "string"
                },
                "subjectMatchType": {
                    "type": "string"
                },
                "suspendedAction": {
                    "type": "string"
                },
                "tokenBinding": {
                    "type": "string"
                },
                "tokenUrl": {
                    "type": "string"
                },
                "userInfoBinding": {
                    "type": "string"
                },
                "userInfoUrl": {
                    "type": "string"
                },
                "usernameTemplate": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "authorizationBinding",
                "authorizationUrl",
                "clientId",
                "clientSecret",
                "issuerUrl",
                "jwksBinding",
                "jwksUrl",
                "scopes",
                "tokenBinding",
                "tokenUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Idp resources.\n",
                "properties": {
                    "accountLinkAction": {
                        "type": "string"
                    },
                    "accountLinkGroupIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "authorizationBinding": {
                        "type": "string"
                    },
                    "authorizationUrl": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "clientSecret": {
                        "type": "string"
                    },
                    "deprovisionedAction": {
                        "type": "string"
                    },
                    "groupsAction": {
                        "type": "string"
                    },
                    "groupsAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groupsAttribute": {
                        "type": "string"
                    },
                    "groupsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL\n"
                    },
                    "issuerUrl": {
                        "type": "string"
                    },
                    "jwksBinding": {
                        "type": "string"
                    },
                    "jwksUrl": {
                        "type": "string"
                    },
                    "maxClockSkew": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of idp\n"
                    },
                    "profileMaster": {
                        "type": "boolean"
                    },
                    "protocolType": {
                        "type": "string"
                    },
                    "provisioningAction": {
                        "type": "string"
                    },
                    "requestSignatureAlgorithm": {
                        "type": "string",
                        "description": "algorithm to use to sign requests\n"
                    },
                    "requestSignatureScope": {
                        "type": "string",
                        "description": "algorithm to use to sign response\n"
                    },
                    "responseSignatureAlgorithm": {
                        "type": "string",
                        "description": "algorithm to use to sign requests\n"
                    },
                    "responseSignatureScope": {
                        "type": "string",
                        "description": "algorithm to use to sign response\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "subjectMatchAttribute": {
                        "type": "string"
                    },
                    "subjectMatchType": {
                        "type": "string"
                    },
                    "suspendedAction": {
                        "type": "string"
                    },
                    "tokenBinding": {
                        "type": "string"
                    },
                    "tokenUrl": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "userInfoBinding": {
                        "type": "string"
                    },
                    "userInfoUrl": {
                        "type": "string"
                    },
                    "usernameTemplate": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/mfaPolicy:MfaPolicy": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Policy Description\n"
                },
                "duo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "fidoU2f": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "fidoWebauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "googleOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include\n"
                },
                "hotp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name\n"
                },
                "oktaCall": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaEmail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaPassword": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaPush": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaSms": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid\npriority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "rsaToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: ACTIVE or INACTIVE.\n"
                },
                "symantecVip": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "yubikeyToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Policy Description\n"
                },
                "duo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "fidoU2f": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "fidoWebauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "googleOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include\n"
                },
                "hotp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name\n"
                },
                "oktaCall": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaEmail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaPassword": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaPush": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaSms": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid\npriority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "rsaToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: ACTIVE or INACTIVE.\n"
                },
                "symantecVip": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "yubikeyToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MfaPolicy resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Policy Description\n"
                    },
                    "duo": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "fidoU2f": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "fidoWebauthn": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "googleOtp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "groupsIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Group IDs to Include\n"
                    },
                    "hotp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Name\n"
                    },
                    "oktaCall": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaEmail": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaOtp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaPassword": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaPush": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaQuestion": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaSms": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid\npriority is provided. API defaults it to the last (lowest) if not there.\n"
                    },
                    "rsaToken": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Status: ACTIVE or INACTIVE.\n"
                    },
                    "symantecVip": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "yubikeyToken": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/mfaPolicyRule:MfaPolicyRule": {
            "properties": {
                "enroll": {
                    "type": "string",
                    "description": "Should the user be enrolled the first time they LOGIN, the next time they are CHALLENGED, or NEVER?\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The zones to exclude\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The zones to include\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n"
                },
                "policyid": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n",
                    "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an\ninvalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: ACTIVE or INACTIVE.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "enroll": {
                    "type": "string",
                    "description": "Should the user be enrolled the first time they LOGIN, the next time they are CHALLENGED, or NEVER?\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The zones to exclude\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The zones to include\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n"
                },
                "policyid": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n",
                    "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an\ninvalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: ACTIVE or INACTIVE.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MfaPolicyRule resources.\n",
                "properties": {
                    "enroll": {
                        "type": "string",
                        "description": "Should the user be enrolled the first time they LOGIN, the next time they are CHALLENGED, or NEVER?\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Rule Name\n"
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The zones to exclude\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The zones to include\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Policy ID of the Rule\n"
                    },
                    "policyid": {
                        "type": "string",
                        "description": "Policy ID of the Rule\n",
                        "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an\ninvalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Rule Status: ACTIVE or INACTIVE.\n"
                    },
                    "usersExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of User IDs to Exclude\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/oauthApp:OauthApp": {
            "properties": {
                "autoKeyRotation": {
                    "type": "boolean",
                    "description": "Requested key rotation mode.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "clientBasicSecret": {
                    "type": "string",
                    "description": "OAuth client secret key, this can be set when token_endpoint_auth_method is client_secret_basic.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "OAuth client ID. If set during creation, app is created with this id.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "OAuth client secret key. This will be in plain text in your statefile unless you set omit_secret above.\n"
                },
                "clientUri": {
                    "type": "string",
                    "description": "URI to a web page providing information about the client.\n"
                },
                "consentMethod": {
                    "type": "string",
                    "description": "*Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED.\nDefault value is TRUSTED\n"
                },
                "customClientId": {
                    "type": "string",
                    "description": "**Deprecated** This property allows you to set your client_id during creation. NOTE: updating after creation will be a\nno-op, use client_id for that behavior instead.\n",
                    "deprecationMessage": "This field is being replaced by client_id. Please set that field instead."
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OAuth 2.0 grant types. Conditional validation params found here\nhttps://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per\napp type.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "groupsClaim": {
                    "$ref": "#/types/okta:deprecated/OauthAppGroupsClaim:OauthAppGroupsClaim",
                    "description": "Groups claim for an OpenID Connect client application\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "implicitAssignment": {
                    "type": "boolean",
                    "description": "*Early Access Property*. Enable Federation Broker Mode.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "*Early Access Property*. Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a\ncustom domain URL as the issuer of ID token for this client.\n"
                },
                "jwks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/OauthAppJwk:OauthAppJwk"
                    }
                },
                "label": {
                    "type": "string",
                    "description": "Pretty name of app.\n"
                },
                "loginMode": {
                    "type": "string",
                    "description": "The type of Idp-Initiated login that the client supports, if any\n"
                },
                "loginScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of scopes to use for the request\n"
                },
                "loginUri": {
                    "type": "string",
                    "description": "URI that initiates login.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of the application.\n"
                },
                "logoUri": {
                    "type": "string",
                    "description": "URI that references a logo for the client.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "omitSecret": {
                    "type": "boolean",
                    "description": "This tells the provider not to persist the application's secret to state. If this is ever changes from true =\u003e false\nyour app will be recreated.\n"
                },
                "policyUri": {
                    "type": "string",
                    "description": "URI to web page providing client policy document.\n"
                },
                "postLogoutRedirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URIs for redirection after logout\n"
                },
                "profile": {
                    "type": "string",
                    "description": "Custom JSON that represents an OAuth application's profile\n"
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see\nokta_app_oauth_redirect_uri for appending to this list in a decentralized way.\n"
                },
                "refreshTokenLeeway": {
                    "type": "integer",
                    "description": "*Early Access Property* Grace period for token rotation\n"
                },
                "refreshTokenRotation": {
                    "type": "string",
                    "description": "*Early Access Property* Refresh token rotation behavior\n"
                },
                "responseTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OAuth 2.0 response type strings.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application.\n"
                },
                "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "Requested authentication method for the token endpoint.\n"
                },
                "tosUri": {
                    "type": "string",
                    "description": "URI to web page providing client tos (terms of service).\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of client application.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/OauthAppUser:OauthAppUser"
                    },
                    "description": "Users associated with the application\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                },
                "wildcardRedirect": {
                    "type": "string",
                    "description": "*Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris\n"
                }
            },
            "required": [
                "clientId",
                "clientSecret",
                "label",
                "logoUrl",
                "name",
                "signOnMode",
                "type"
            ],
            "inputProperties": {
                "autoKeyRotation": {
                    "type": "boolean",
                    "description": "Requested key rotation mode.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "clientBasicSecret": {
                    "type": "string",
                    "description": "OAuth client secret key, this can be set when token_endpoint_auth_method is client_secret_basic.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "OAuth client ID. If set during creation, app is created with this id.\n"
                },
                "clientUri": {
                    "type": "string",
                    "description": "URI to a web page providing information about the client.\n"
                },
                "consentMethod": {
                    "type": "string",
                    "description": "*Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED.\nDefault value is TRUSTED\n"
                },
                "customClientId": {
                    "type": "string",
                    "description": "**Deprecated** This property allows you to set your client_id during creation. NOTE: updating after creation will be a\nno-op, use client_id for that behavior instead.\n",
                    "deprecationMessage": "This field is being replaced by client_id. Please set that field instead."
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OAuth 2.0 grant types. Conditional validation params found here\nhttps://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per\napp type.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "groupsClaim": {
                    "$ref": "#/types/okta:deprecated/OauthAppGroupsClaim:OauthAppGroupsClaim",
                    "description": "Groups claim for an OpenID Connect client application\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "implicitAssignment": {
                    "type": "boolean",
                    "description": "*Early Access Property*. Enable Federation Broker Mode.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "*Early Access Property*. Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a\ncustom domain URL as the issuer of ID token for this client.\n"
                },
                "jwks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/OauthAppJwk:OauthAppJwk"
                    }
                },
                "label": {
                    "type": "string",
                    "description": "Pretty name of app.\n"
                },
                "loginMode": {
                    "type": "string",
                    "description": "The type of Idp-Initiated login that the client supports, if any\n"
                },
                "loginScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of scopes to use for the request\n"
                },
                "loginUri": {
                    "type": "string",
                    "description": "URI that initiates login.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of the application.\n"
                },
                "logoUri": {
                    "type": "string",
                    "description": "URI that references a logo for the client.\n"
                },
                "omitSecret": {
                    "type": "boolean",
                    "description": "This tells the provider not to persist the application's secret to state. If this is ever changes from true =\u003e false\nyour app will be recreated.\n"
                },
                "policyUri": {
                    "type": "string",
                    "description": "URI to web page providing client policy document.\n"
                },
                "postLogoutRedirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URIs for redirection after logout\n"
                },
                "profile": {
                    "type": "string",
                    "description": "Custom JSON that represents an OAuth application's profile\n"
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see\nokta_app_oauth_redirect_uri for appending to this list in a decentralized way.\n"
                },
                "refreshTokenLeeway": {
                    "type": "integer",
                    "description": "*Early Access Property* Grace period for token rotation\n"
                },
                "refreshTokenRotation": {
                    "type": "string",
                    "description": "*Early Access Property* Refresh token rotation behavior\n"
                },
                "responseTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OAuth 2.0 response type strings.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application.\n"
                },
                "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "Requested authentication method for the token endpoint.\n"
                },
                "tosUri": {
                    "type": "string",
                    "description": "URI to web page providing client tos (terms of service).\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of client application.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/OauthAppUser:OauthAppUser"
                    },
                    "description": "Users associated with the application\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                },
                "wildcardRedirect": {
                    "type": "string",
                    "description": "*Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris\n"
                }
            },
            "requiredInputs": [
                "label",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OauthApp resources.\n",
                "properties": {
                    "autoKeyRotation": {
                        "type": "boolean",
                        "description": "Requested key rotation mode.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar\n"
                    },
                    "clientBasicSecret": {
                        "type": "string",
                        "description": "OAuth client secret key, this can be set when token_endpoint_auth_method is client_secret_basic.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "OAuth client ID. If set during creation, app is created with this id.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "OAuth client secret key. This will be in plain text in your statefile unless you set omit_secret above.\n"
                    },
                    "clientUri": {
                        "type": "string",
                        "description": "URI to a web page providing information about the client.\n"
                    },
                    "consentMethod": {
                        "type": "string",
                        "description": "*Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED.\nDefault value is TRUSTED\n"
                    },
                    "customClientId": {
                        "type": "string",
                        "description": "**Deprecated** This property allows you to set your client_id during creation. NOTE: updating after creation will be a\nno-op, use client_id for that behavior instead.\n",
                        "deprecationMessage": "This field is being replaced by client_id. Please set that field instead."
                    },
                    "grantTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OAuth 2.0 grant types. Conditional validation params found here\nhttps://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per\napp type.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Groups associated with the application\n",
                        "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                    },
                    "groupsClaim": {
                        "$ref": "#/types/okta:deprecated/OauthAppGroupsClaim:OauthAppGroupsClaim",
                        "description": "Groups claim for an OpenID Connect client application\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "implicitAssignment": {
                        "type": "boolean",
                        "description": "*Early Access Property*. Enable Federation Broker Mode.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "*Early Access Property*. Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a\ncustom domain URL as the issuer of ID token for this client.\n"
                    },
                    "jwks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:deprecated/OauthAppJwk:OauthAppJwk"
                        }
                    },
                    "label": {
                        "type": "string",
                        "description": "Pretty name of app.\n"
                    },
                    "loginMode": {
                        "type": "string",
                        "description": "The type of Idp-Initiated login that the client supports, if any\n"
                    },
                    "loginScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of scopes to use for the request\n"
                    },
                    "loginUri": {
                        "type": "string",
                        "description": "URI that initiates login.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Logo of the application.\n"
                    },
                    "logoUri": {
                        "type": "string",
                        "description": "URI that references a logo for the client.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "omitSecret": {
                        "type": "boolean",
                        "description": "This tells the provider not to persist the application's secret to state. If this is ever changes from true =\u003e false\nyour app will be recreated.\n"
                    },
                    "policyUri": {
                        "type": "string",
                        "description": "URI to web page providing client policy document.\n"
                    },
                    "postLogoutRedirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of URIs for redirection after logout\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "Custom JSON that represents an OAuth application's profile\n"
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see\nokta_app_oauth_redirect_uri for appending to this list in a decentralized way.\n"
                    },
                    "refreshTokenLeeway": {
                        "type": "integer",
                        "description": "*Early Access Property* Grace period for token rotation\n"
                    },
                    "refreshTokenRotation": {
                        "type": "string",
                        "description": "*Early Access Property* Refresh token rotation behavior\n"
                    },
                    "responseTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OAuth 2.0 response type strings.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application.\n"
                    },
                    "tokenEndpointAuthMethod": {
                        "type": "string",
                        "description": "Requested authentication method for the token endpoint.\n"
                    },
                    "tosUri": {
                        "type": "string",
                        "description": "URI to web page providing client tos (terms of service).\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of client application.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:deprecated/OauthAppUser:OauthAppUser"
                        },
                        "description": "Users associated with the application\n",
                        "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                    },
                    "wildcardRedirect": {
                        "type": "string",
                        "description": "*Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/oauthAppRedirectUri:OauthAppRedirectUri": {
            "properties": {
                "appId": {
                    "type": "string"
                },
                "uri": {
                    "type": "string",
                    "description": "Redirect URI to append to Okta OIDC application.\n"
                }
            },
            "required": [
                "appId",
                "uri"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string"
                },
                "uri": {
                    "type": "string",
                    "description": "Redirect URI to append to Okta OIDC application.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "uri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OauthAppRedirectUri resources.\n",
                "properties": {
                    "appId": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string",
                        "description": "Redirect URI to append to Okta OIDC application.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/passwordPolicy:PasswordPolicy": {
            "properties": {
                "authProvider": {
                    "type": "string",
                    "description": "Authentication Provider: OKTA or ACTIVE_DIRECTORY.\n"
                },
                "callRecovery": {
                    "type": "string",
                    "description": "Enable or disable voice call recovery: ACTIVE or INACTIVE.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Policy Description\n"
                },
                "emailRecovery": {
                    "type": "string",
                    "description": "Enable or disable email password recovery: ACTIVE or INACTIVE.\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name\n"
                },
                "passwordAutoUnlockMinutes": {
                    "type": "integer",
                    "description": "Number of minutes before a locked account is unlocked: 0 = no limit.\n"
                },
                "passwordDictionaryLookup": {
                    "type": "boolean",
                    "description": "Check Passwords Against Common Password Dictionary.\n"
                },
                "passwordExcludeFirstName": {
                    "type": "boolean",
                    "description": "User firstName attribute must be excluded from the password\n"
                },
                "passwordExcludeLastName": {
                    "type": "boolean",
                    "description": "User lastName attribute must be excluded from the password\n"
                },
                "passwordExcludeUsername": {
                    "type": "boolean",
                    "description": "If the user name must be excluded from the password.\n"
                },
                "passwordExpireWarnDays": {
                    "type": "integer",
                    "description": "Length in days a user will be warned before password expiry: 0 = no warning.\n"
                },
                "passwordHistoryCount": {
                    "type": "integer",
                    "description": "Number of distinct passwords that must be created before they can be reused: 0 = none.\n"
                },
                "passwordLockoutNotificationChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification channels to use to notify a user when their account has been locked.\n"
                },
                "passwordMaxAgeDays": {
                    "type": "integer",
                    "description": "Length in days a password is valid before expiry: 0 = no limit.\n"
                },
                "passwordMaxLockoutAttempts": {
                    "type": "integer",
                    "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit.\n"
                },
                "passwordMinAgeMinutes": {
                    "type": "integer",
                    "description": "Minimum time interval in minutes between password changes: 0 = no limit.\n"
                },
                "passwordMinLength": {
                    "type": "integer",
                    "description": "Minimum password length.\n"
                },
                "passwordMinLowercase": {
                    "type": "integer",
                    "description": "If a password must contain at least one lower case letter: 0 = no, 1 = yes. Default = 1\n"
                },
                "passwordMinNumber": {
                    "type": "integer",
                    "description": "If a password must contain at least one number: 0 = no, 1 = yes. Default = 1\n"
                },
                "passwordMinSymbol": {
                    "type": "integer",
                    "description": "If a password must contain at least one symbol (!@#$%^\u0026*): 0 = no, 1 = yes. Default = 1\n"
                },
                "passwordMinUppercase": {
                    "type": "integer",
                    "description": "If a password must contain at least one upper case letter: 0 = no, 1 = yes. Default = 1\n"
                },
                "passwordShowLockoutFailures": {
                    "type": "boolean",
                    "description": "If a user should be informed when their account is locked.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid\npriority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "questionMinLength": {
                    "type": "integer",
                    "description": "Min length of the password recovery question answer.\n"
                },
                "questionRecovery": {
                    "type": "string",
                    "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE.\n"
                },
                "recoveryEmailToken": {
                    "type": "integer",
                    "description": "Lifetime in minutes of the recovery email token.\n"
                },
                "skipUnlock": {
                    "type": "boolean",
                    "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's\nWindows account.\n"
                },
                "smsRecovery": {
                    "type": "string",
                    "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: ACTIVE or INACTIVE.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "authProvider": {
                    "type": "string",
                    "description": "Authentication Provider: OKTA or ACTIVE_DIRECTORY.\n"
                },
                "callRecovery": {
                    "type": "string",
                    "description": "Enable or disable voice call recovery: ACTIVE or INACTIVE.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Policy Description\n"
                },
                "emailRecovery": {
                    "type": "string",
                    "description": "Enable or disable email password recovery: ACTIVE or INACTIVE.\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name\n"
                },
                "passwordAutoUnlockMinutes": {
                    "type": "integer",
                    "description": "Number of minutes before a locked account is unlocked: 0 = no limit.\n"
                },
                "passwordDictionaryLookup": {
                    "type": "boolean",
                    "description": "Check Passwords Against Common Password Dictionary.\n"
                },
                "passwordExcludeFirstName": {
                    "type": "boolean",
                    "description": "User firstName attribute must be excluded from the password\n"
                },
                "passwordExcludeLastName": {
                    "type": "boolean",
                    "description": "User lastName attribute must be excluded from the password\n"
                },
                "passwordExcludeUsername": {
                    "type": "boolean",
                    "description": "If the user name must be excluded from the password.\n"
                },
                "passwordExpireWarnDays": {
                    "type": "integer",
                    "description": "Length in days a user will be warned before password expiry: 0 = no warning.\n"
                },
                "passwordHistoryCount": {
                    "type": "integer",
                    "description": "Number of distinct passwords that must be created before they can be reused: 0 = none.\n"
                },
                "passwordLockoutNotificationChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification channels to use to notify a user when their account has been locked.\n"
                },
                "passwordMaxAgeDays": {
                    "type": "integer",
                    "description": "Length in days a password is valid before expiry: 0 = no limit.\n"
                },
                "passwordMaxLockoutAttempts": {
                    "type": "integer",
                    "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit.\n"
                },
                "passwordMinAgeMinutes": {
                    "type": "integer",
                    "description": "Minimum time interval in minutes between password changes: 0 = no limit.\n"
                },
                "passwordMinLength": {
                    "type": "integer",
                    "description": "Minimum password length.\n"
                },
                "passwordMinLowercase": {
                    "type": "integer",
                    "description": "If a password must contain at least one lower case letter: 0 = no, 1 = yes. Default = 1\n"
                },
                "passwordMinNumber": {
                    "type": "integer",
                    "description": "If a password must contain at least one number: 0 = no, 1 = yes. Default = 1\n"
                },
                "passwordMinSymbol": {
                    "type": "integer",
                    "description": "If a password must contain at least one symbol (!@#$%^\u0026*): 0 = no, 1 = yes. Default = 1\n"
                },
                "passwordMinUppercase": {
                    "type": "integer",
                    "description": "If a password must contain at least one upper case letter: 0 = no, 1 = yes. Default = 1\n"
                },
                "passwordShowLockoutFailures": {
                    "type": "boolean",
                    "description": "If a user should be informed when their account is locked.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid\npriority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "questionMinLength": {
                    "type": "integer",
                    "description": "Min length of the password recovery question answer.\n"
                },
                "questionRecovery": {
                    "type": "string",
                    "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE.\n"
                },
                "recoveryEmailToken": {
                    "type": "integer",
                    "description": "Lifetime in minutes of the recovery email token.\n"
                },
                "skipUnlock": {
                    "type": "boolean",
                    "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's\nWindows account.\n"
                },
                "smsRecovery": {
                    "type": "string",
                    "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: ACTIVE or INACTIVE.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PasswordPolicy resources.\n",
                "properties": {
                    "authProvider": {
                        "type": "string",
                        "description": "Authentication Provider: OKTA or ACTIVE_DIRECTORY.\n"
                    },
                    "callRecovery": {
                        "type": "string",
                        "description": "Enable or disable voice call recovery: ACTIVE or INACTIVE.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Policy Description\n"
                    },
                    "emailRecovery": {
                        "type": "string",
                        "description": "Enable or disable email password recovery: ACTIVE or INACTIVE.\n"
                    },
                    "groupsIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Group IDs to Include\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Name\n"
                    },
                    "passwordAutoUnlockMinutes": {
                        "type": "integer",
                        "description": "Number of minutes before a locked account is unlocked: 0 = no limit.\n"
                    },
                    "passwordDictionaryLookup": {
                        "type": "boolean",
                        "description": "Check Passwords Against Common Password Dictionary.\n"
                    },
                    "passwordExcludeFirstName": {
                        "type": "boolean",
                        "description": "User firstName attribute must be excluded from the password\n"
                    },
                    "passwordExcludeLastName": {
                        "type": "boolean",
                        "description": "User lastName attribute must be excluded from the password\n"
                    },
                    "passwordExcludeUsername": {
                        "type": "boolean",
                        "description": "If the user name must be excluded from the password.\n"
                    },
                    "passwordExpireWarnDays": {
                        "type": "integer",
                        "description": "Length in days a user will be warned before password expiry: 0 = no warning.\n"
                    },
                    "passwordHistoryCount": {
                        "type": "integer",
                        "description": "Number of distinct passwords that must be created before they can be reused: 0 = none.\n"
                    },
                    "passwordLockoutNotificationChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Notification channels to use to notify a user when their account has been locked.\n"
                    },
                    "passwordMaxAgeDays": {
                        "type": "integer",
                        "description": "Length in days a password is valid before expiry: 0 = no limit.\n"
                    },
                    "passwordMaxLockoutAttempts": {
                        "type": "integer",
                        "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit.\n"
                    },
                    "passwordMinAgeMinutes": {
                        "type": "integer",
                        "description": "Minimum time interval in minutes between password changes: 0 = no limit.\n"
                    },
                    "passwordMinLength": {
                        "type": "integer",
                        "description": "Minimum password length.\n"
                    },
                    "passwordMinLowercase": {
                        "type": "integer",
                        "description": "If a password must contain at least one lower case letter: 0 = no, 1 = yes. Default = 1\n"
                    },
                    "passwordMinNumber": {
                        "type": "integer",
                        "description": "If a password must contain at least one number: 0 = no, 1 = yes. Default = 1\n"
                    },
                    "passwordMinSymbol": {
                        "type": "integer",
                        "description": "If a password must contain at least one symbol (!@#$%^\u0026*): 0 = no, 1 = yes. Default = 1\n"
                    },
                    "passwordMinUppercase": {
                        "type": "integer",
                        "description": "If a password must contain at least one upper case letter: 0 = no, 1 = yes. Default = 1\n"
                    },
                    "passwordShowLockoutFailures": {
                        "type": "boolean",
                        "description": "If a user should be informed when their account is locked.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid\npriority is provided. API defaults it to the last (lowest) if not there.\n"
                    },
                    "questionMinLength": {
                        "type": "integer",
                        "description": "Min length of the password recovery question answer.\n"
                    },
                    "questionRecovery": {
                        "type": "string",
                        "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE.\n"
                    },
                    "recoveryEmailToken": {
                        "type": "integer",
                        "description": "Lifetime in minutes of the recovery email token.\n"
                    },
                    "skipUnlock": {
                        "type": "boolean",
                        "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's\nWindows account.\n"
                    },
                    "smsRecovery": {
                        "type": "string",
                        "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Status: ACTIVE or INACTIVE.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/passwordPolicyRule:PasswordPolicyRule": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The zones to exclude\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The zones to include\n"
                },
                "passwordChange": {
                    "type": "string",
                    "description": "Allow or deny a user to change their password: ALLOW or DENY. Default = ALLOW\n"
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Allow or deny a user to reset their password: ALLOW or DENY. Default = ALLOW\n"
                },
                "passwordUnlock": {
                    "type": "string",
                    "description": "Allow or deny a user to unlock. Default = DENY\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n"
                },
                "policyid": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n",
                    "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an\ninvalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: ACTIVE or INACTIVE.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The zones to exclude\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The zones to include\n"
                },
                "passwordChange": {
                    "type": "string",
                    "description": "Allow or deny a user to change their password: ALLOW or DENY. Default = ALLOW\n"
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Allow or deny a user to reset their password: ALLOW or DENY. Default = ALLOW\n"
                },
                "passwordUnlock": {
                    "type": "string",
                    "description": "Allow or deny a user to unlock. Default = DENY\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n"
                },
                "policyid": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n",
                    "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an\ninvalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: ACTIVE or INACTIVE.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PasswordPolicyRule resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Policy Rule Name\n"
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The zones to exclude\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The zones to include\n"
                    },
                    "passwordChange": {
                        "type": "string",
                        "description": "Allow or deny a user to change their password: ALLOW or DENY. Default = ALLOW\n"
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Allow or deny a user to reset their password: ALLOW or DENY. Default = ALLOW\n"
                    },
                    "passwordUnlock": {
                        "type": "string",
                        "description": "Allow or deny a user to unlock. Default = DENY\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Policy ID of the Rule\n"
                    },
                    "policyid": {
                        "type": "string",
                        "description": "Policy ID of the Rule\n",
                        "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an\ninvalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Rule Status: ACTIVE or INACTIVE.\n"
                    },
                    "usersExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of User IDs to Exclude\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/samlApp:SamlApp": {
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service\n"
                },
                "acsEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of ACS endpoints for this SAML application\n"
                },
                "appSettingsJson": {
                    "type": "string",
                    "description": "Application settings in JSON format\n"
                },
                "assertionSigned": {
                    "type": "boolean",
                    "description": "Determines whether the SAML assertion is digitally signed\n"
                },
                "attributeStatements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/SamlAppAttributeStatement:SamlAppAttributeStatement"
                    }
                },
                "audience": {
                    "type": "string",
                    "description": "Audience Restriction\n"
                },
                "authnContextClassRef": {
                    "type": "string",
                    "description": "Identifies the SAML authentication context class for the assertion’s authentication statement\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "certificate": {
                    "type": "string",
                    "description": "cert from SAML XML metadata payload\n"
                },
                "defaultRelayState": {
                    "type": "string",
                    "description": "Identifies a specific application resource in an IDP initiated SSO scenario.\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Identifies the location where the SAML response is intended to be sent inside of the SAML assertion\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response\n"
                },
                "entityKey": {
                    "type": "string",
                    "description": "Entity ID, the ID portion of the entity_url\n"
                },
                "entityUrl": {
                    "type": "string",
                    "description": "Entity URL for instance http://www.okta.com/exk1fcia6d6EMsf331d8\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "features to enable\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "honorForceAuthn": {
                    "type": "boolean",
                    "description": "Prompt user to re-authenticate if SP asks for it\n"
                },
                "httpPostBinding": {
                    "type": "string",
                    "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.\n"
                },
                "httpRedirectBinding": {
                    "type": "string",
                    "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.\n"
                },
                "idpIssuer": {
                    "type": "string",
                    "description": "SAML issuer ID\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "Certificate ID\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "Certificate name. This modulates the rotation of keys. New name == new key.\n"
                },
                "keyYearsValid": {
                    "type": "integer",
                    "description": "Number of years the certificate is valid.\n"
                },
                "label": {
                    "type": "string",
                    "description": "Pretty name of app.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of the application.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "metadata": {
                    "type": "string",
                    "description": "SAML xml metadata payload\n"
                },
                "metadataUrl": {
                    "type": "string",
                    "description": "SAML xml metadata URL\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Name of preexisting SAML application. For instance 'slack'\n"
                },
                "recipient": {
                    "type": "string",
                    "description": "The location where the app may present the SAML assertion\n"
                },
                "requestCompressed": {
                    "type": "boolean",
                    "description": "Denotes whether the request is compressed or not.\n"
                },
                "responseSigned": {
                    "type": "boolean",
                    "description": "Determines whether the SAML auth response message is digitally signed\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Signature algorithm used ot digitally sign the assertion and response\n"
                },
                "singleLogoutCertificate": {
                    "type": "string",
                    "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests\n"
                },
                "singleLogoutIssuer": {
                    "type": "string",
                    "description": "The issuer of the Service Provider that generates the Single Logout request\n"
                },
                "singleLogoutUrl": {
                    "type": "string",
                    "description": "The location where the logout response is sent\n"
                },
                "spIssuer": {
                    "type": "string",
                    "description": "SAML SP issuer ID\n"
                },
                "ssoUrl": {
                    "type": "string",
                    "description": "Single Sign On URL\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application.\n"
                },
                "subjectNameIdFormat": {
                    "type": "string",
                    "description": "Identifies the SAML processing rules.\n"
                },
                "subjectNameIdTemplate": {
                    "type": "string",
                    "description": "Template for app user's username when a user is assigned to the app\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/SamlAppUser:SamlAppUser"
                    },
                    "description": "Users associated with the application\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "required": [
                "certificate",
                "entityKey",
                "entityUrl",
                "httpPostBinding",
                "httpRedirectBinding",
                "keyId",
                "label",
                "logoUrl",
                "metadata",
                "metadataUrl",
                "name",
                "signOnMode"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service\n"
                },
                "acsEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of ACS endpoints for this SAML application\n"
                },
                "appSettingsJson": {
                    "type": "string",
                    "description": "Application settings in JSON format\n"
                },
                "assertionSigned": {
                    "type": "boolean",
                    "description": "Determines whether the SAML assertion is digitally signed\n"
                },
                "attributeStatements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/SamlAppAttributeStatement:SamlAppAttributeStatement"
                    }
                },
                "audience": {
                    "type": "string",
                    "description": "Audience Restriction\n"
                },
                "authnContextClassRef": {
                    "type": "string",
                    "description": "Identifies the SAML authentication context class for the assertion’s authentication statement\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "defaultRelayState": {
                    "type": "string",
                    "description": "Identifies a specific application resource in an IDP initiated SSO scenario.\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Identifies the location where the SAML response is intended to be sent inside of the SAML assertion\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "features to enable\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "honorForceAuthn": {
                    "type": "boolean",
                    "description": "Prompt user to re-authenticate if SP asks for it\n"
                },
                "idpIssuer": {
                    "type": "string",
                    "description": "SAML issuer ID\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "Certificate name. This modulates the rotation of keys. New name == new key.\n"
                },
                "keyYearsValid": {
                    "type": "integer",
                    "description": "Number of years the certificate is valid.\n"
                },
                "label": {
                    "type": "string",
                    "description": "Pretty name of app.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of the application.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Name of preexisting SAML application. For instance 'slack'\n"
                },
                "recipient": {
                    "type": "string",
                    "description": "The location where the app may present the SAML assertion\n"
                },
                "requestCompressed": {
                    "type": "boolean",
                    "description": "Denotes whether the request is compressed or not.\n"
                },
                "responseSigned": {
                    "type": "boolean",
                    "description": "Determines whether the SAML auth response message is digitally signed\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Signature algorithm used ot digitally sign the assertion and response\n"
                },
                "singleLogoutCertificate": {
                    "type": "string",
                    "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests\n"
                },
                "singleLogoutIssuer": {
                    "type": "string",
                    "description": "The issuer of the Service Provider that generates the Single Logout request\n"
                },
                "singleLogoutUrl": {
                    "type": "string",
                    "description": "The location where the logout response is sent\n"
                },
                "spIssuer": {
                    "type": "string",
                    "description": "SAML SP issuer ID\n"
                },
                "ssoUrl": {
                    "type": "string",
                    "description": "Single Sign On URL\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application.\n"
                },
                "subjectNameIdFormat": {
                    "type": "string",
                    "description": "Identifies the SAML processing rules.\n"
                },
                "subjectNameIdTemplate": {
                    "type": "string",
                    "description": "Template for app user's username when a user is assigned to the app\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/SamlAppUser:SamlAppUser"
                    },
                    "description": "Users associated with the application\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SamlApp resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page URL\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self service\n"
                    },
                    "acsEndpoints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ACS endpoints for this SAML application\n"
                    },
                    "appSettingsJson": {
                        "type": "string",
                        "description": "Application settings in JSON format\n"
                    },
                    "assertionSigned": {
                        "type": "boolean",
                        "description": "Determines whether the SAML assertion is digitally signed\n"
                    },
                    "attributeStatements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:deprecated/SamlAppAttributeStatement:SamlAppAttributeStatement"
                        }
                    },
                    "audience": {
                        "type": "string",
                        "description": "Audience Restriction\n"
                    },
                    "authnContextClassRef": {
                        "type": "string",
                        "description": "Identifies the SAML authentication context class for the assertion’s authentication statement\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar\n"
                    },
                    "certificate": {
                        "type": "string",
                        "description": "cert from SAML XML metadata payload\n"
                    },
                    "defaultRelayState": {
                        "type": "string",
                        "description": "Identifies a specific application resource in an IDP initiated SSO scenario.\n"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Identifies the location where the SAML response is intended to be sent inside of the SAML assertion\n"
                    },
                    "digestAlgorithm": {
                        "type": "string",
                        "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response\n"
                    },
                    "entityKey": {
                        "type": "string",
                        "description": "Entity ID, the ID portion of the entity_url\n"
                    },
                    "entityUrl": {
                        "type": "string",
                        "description": "Entity URL for instance http://www.okta.com/exk1fcia6d6EMsf331d8\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "features to enable\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Groups associated with the application\n",
                        "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "honorForceAuthn": {
                        "type": "boolean",
                        "description": "Prompt user to re-authenticate if SP asks for it\n"
                    },
                    "httpPostBinding": {
                        "type": "string",
                        "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.\n"
                    },
                    "httpRedirectBinding": {
                        "type": "string",
                        "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.\n"
                    },
                    "idpIssuer": {
                        "type": "string",
                        "description": "SAML issuer ID\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "Certificate ID\n"
                    },
                    "keyName": {
                        "type": "string",
                        "description": "Certificate name. This modulates the rotation of keys. New name == new key.\n"
                    },
                    "keyYearsValid": {
                        "type": "integer",
                        "description": "Number of years the certificate is valid.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Pretty name of app.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Logo of the application.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "metadata": {
                        "type": "string",
                        "description": "SAML xml metadata payload\n"
                    },
                    "metadataUrl": {
                        "type": "string",
                        "description": "SAML xml metadata URL\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "preconfiguredApp": {
                        "type": "string",
                        "description": "Name of preexisting SAML application. For instance 'slack'\n"
                    },
                    "recipient": {
                        "type": "string",
                        "description": "The location where the app may present the SAML assertion\n"
                    },
                    "requestCompressed": {
                        "type": "boolean",
                        "description": "Denotes whether the request is compressed or not.\n"
                    },
                    "responseSigned": {
                        "type": "boolean",
                        "description": "Determines whether the SAML auth response message is digitally signed\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "Signature algorithm used ot digitally sign the assertion and response\n"
                    },
                    "singleLogoutCertificate": {
                        "type": "string",
                        "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests\n"
                    },
                    "singleLogoutIssuer": {
                        "type": "string",
                        "description": "The issuer of the Service Provider that generates the Single Logout request\n"
                    },
                    "singleLogoutUrl": {
                        "type": "string",
                        "description": "The location where the logout response is sent\n"
                    },
                    "spIssuer": {
                        "type": "string",
                        "description": "SAML SP issuer ID\n"
                    },
                    "ssoUrl": {
                        "type": "string",
                        "description": "Single Sign On URL\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application.\n"
                    },
                    "subjectNameIdFormat": {
                        "type": "string",
                        "description": "Identifies the SAML processing rules.\n"
                    },
                    "subjectNameIdTemplate": {
                        "type": "string",
                        "description": "Template for app user's username when a user is assigned to the app\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:deprecated/SamlAppUser:SamlAppUser"
                        },
                        "description": "Users associated with the application\n",
                        "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/samlIdp:SamlIdp": {
            "properties": {
                "accountLinkAction": {
                    "type": "string"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "acsBinding": {
                    "type": "string",
                    "deprecationMessage": "This property will be removed in the future, as it can only be set to 'HTTP-POST'"
                },
                "acsType": {
                    "type": "string"
                },
                "audience": {
                    "type": "string"
                },
                "deprovisionedAction": {
                    "type": "string"
                },
                "groupsAction": {
                    "type": "string"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupsAttribute": {
                    "type": "string"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "issuer": {
                    "type": "string"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL\n"
                },
                "kid": {
                    "type": "string"
                },
                "maxClockSkew": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "name of idp\n"
                },
                "nameFormat": {
                    "type": "string"
                },
                "profileMaster": {
                    "type": "boolean"
                },
                "provisioningAction": {
                    "type": "string"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "algorithm to use to sign requests\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "algorithm to use to sign response\n"
                },
                "responseSignatureAlgorithm": {
                    "type": "string",
                    "description": "algorithm to use to sign requests\n"
                },
                "responseSignatureScope": {
                    "type": "string",
                    "description": "algorithm to use to sign response\n"
                },
                "ssoBinding": {
                    "type": "string"
                },
                "ssoDestination": {
                    "type": "string"
                },
                "ssoUrl": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subjectFilter": {
                    "type": "string"
                },
                "subjectFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subjectMatchAttribute": {
                    "type": "string"
                },
                "subjectMatchType": {
                    "type": "string"
                },
                "suspendedAction": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "usernameTemplate": {
                    "type": "string"
                }
            },
            "required": [
                "audience",
                "issuer",
                "kid",
                "name",
                "ssoUrl",
                "type"
            ],
            "inputProperties": {
                "accountLinkAction": {
                    "type": "string"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "acsBinding": {
                    "type": "string",
                    "deprecationMessage": "This property will be removed in the future, as it can only be set to 'HTTP-POST'"
                },
                "acsType": {
                    "type": "string"
                },
                "deprovisionedAction": {
                    "type": "string"
                },
                "groupsAction": {
                    "type": "string"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupsAttribute": {
                    "type": "string"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "issuer": {
                    "type": "string"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL\n"
                },
                "kid": {
                    "type": "string"
                },
                "maxClockSkew": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "name of idp\n"
                },
                "nameFormat": {
                    "type": "string"
                },
                "profileMaster": {
                    "type": "boolean"
                },
                "provisioningAction": {
                    "type": "string"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "algorithm to use to sign requests\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "algorithm to use to sign response\n"
                },
                "responseSignatureAlgorithm": {
                    "type": "string",
                    "description": "algorithm to use to sign requests\n"
                },
                "responseSignatureScope": {
                    "type": "string",
                    "description": "algorithm to use to sign response\n"
                },
                "ssoBinding": {
                    "type": "string"
                },
                "ssoDestination": {
                    "type": "string"
                },
                "ssoUrl": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subjectFilter": {
                    "type": "string"
                },
                "subjectFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subjectMatchAttribute": {
                    "type": "string"
                },
                "subjectMatchType": {
                    "type": "string"
                },
                "suspendedAction": {
                    "type": "string"
                },
                "usernameTemplate": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "issuer",
                "kid",
                "ssoUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SamlIdp resources.\n",
                "properties": {
                    "accountLinkAction": {
                        "type": "string"
                    },
                    "accountLinkGroupIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "acsBinding": {
                        "type": "string",
                        "deprecationMessage": "This property will be removed in the future, as it can only be set to 'HTTP-POST'"
                    },
                    "acsType": {
                        "type": "string"
                    },
                    "audience": {
                        "type": "string"
                    },
                    "deprovisionedAction": {
                        "type": "string"
                    },
                    "groupsAction": {
                        "type": "string"
                    },
                    "groupsAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groupsAttribute": {
                        "type": "string"
                    },
                    "groupsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "issuer": {
                        "type": "string"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL\n"
                    },
                    "kid": {
                        "type": "string"
                    },
                    "maxClockSkew": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of idp\n"
                    },
                    "nameFormat": {
                        "type": "string"
                    },
                    "profileMaster": {
                        "type": "boolean"
                    },
                    "provisioningAction": {
                        "type": "string"
                    },
                    "requestSignatureAlgorithm": {
                        "type": "string",
                        "description": "algorithm to use to sign requests\n"
                    },
                    "requestSignatureScope": {
                        "type": "string",
                        "description": "algorithm to use to sign response\n"
                    },
                    "responseSignatureAlgorithm": {
                        "type": "string",
                        "description": "algorithm to use to sign requests\n"
                    },
                    "responseSignatureScope": {
                        "type": "string",
                        "description": "algorithm to use to sign response\n"
                    },
                    "ssoBinding": {
                        "type": "string"
                    },
                    "ssoDestination": {
                        "type": "string"
                    },
                    "ssoUrl": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subjectFilter": {
                        "type": "string"
                    },
                    "subjectFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "subjectMatchAttribute": {
                        "type": "string"
                    },
                    "subjectMatchType": {
                        "type": "string"
                    },
                    "suspendedAction": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "usernameTemplate": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/samlIdpSigningKey:SamlIdpSigningKey": {
            "properties": {
                "created": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "string"
                },
                "kid": {
                    "type": "string"
                },
                "kty": {
                    "type": "string"
                },
                "use": {
                    "type": "string"
                },
                "x5cs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "base64-encoded X.509 certificate chain with DER encoding\n"
                },
                "x5tS256": {
                    "type": "string"
                }
            },
            "required": [
                "created",
                "expiresAt",
                "kid",
                "kty",
                "use",
                "x5cs",
                "x5tS256"
            ],
            "inputProperties": {
                "x5cs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "base64-encoded X.509 certificate chain with DER encoding\n"
                }
            },
            "requiredInputs": [
                "x5cs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SamlIdpSigningKey resources.\n",
                "properties": {
                    "created": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string"
                    },
                    "kid": {
                        "type": "string"
                    },
                    "kty": {
                        "type": "string"
                    },
                    "use": {
                        "type": "string"
                    },
                    "x5cs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "base64-encoded X.509 certificate chain with DER encoding\n"
                    },
                    "x5tS256": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/securePasswordStoreApp:SecurePasswordStoreApp": {
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "Pretty name of app.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of the application.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "optionalField1": {
                    "type": "string",
                    "description": "Name of optional param in the login form\n"
                },
                "optionalField1Value": {
                    "type": "string",
                    "description": "Name of optional value in login form\n"
                },
                "optionalField2": {
                    "type": "string",
                    "description": "Name of optional param in the login form\n"
                },
                "optionalField2Value": {
                    "type": "string",
                    "description": "Name of optional value in login form\n"
                },
                "optionalField3": {
                    "type": "string",
                    "description": "Name of optional param in the login form\n"
                },
                "optionalField3Value": {
                    "type": "string",
                    "description": "Name of optional value in login form\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/SecurePasswordStoreAppUser:SecurePasswordStoreAppUser"
                    },
                    "description": "Users associated with the application\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "passwordField",
                "signOnMode",
                "url",
                "usernameField"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "Pretty name of app.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of the application.\n"
                },
                "optionalField1": {
                    "type": "string",
                    "description": "Name of optional param in the login form\n"
                },
                "optionalField1Value": {
                    "type": "string",
                    "description": "Name of optional value in login form\n"
                },
                "optionalField2": {
                    "type": "string",
                    "description": "Name of optional param in the login form\n"
                },
                "optionalField2Value": {
                    "type": "string",
                    "description": "Name of optional value in login form\n"
                },
                "optionalField3": {
                    "type": "string",
                    "description": "Name of optional param in the login form\n"
                },
                "optionalField3Value": {
                    "type": "string",
                    "description": "Name of optional value in login form\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/SecurePasswordStoreAppUser:SecurePasswordStoreAppUser"
                    },
                    "description": "Users associated with the application\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "requiredInputs": [
                "label",
                "passwordField",
                "url",
                "usernameField"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurePasswordStoreApp resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self service\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar\n"
                    },
                    "credentialsScheme": {
                        "type": "string",
                        "description": "Application credentials scheme\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Groups associated with the application\n",
                        "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Pretty name of app.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Logo of the application.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "optionalField1": {
                        "type": "string",
                        "description": "Name of optional param in the login form\n"
                    },
                    "optionalField1Value": {
                        "type": "string",
                        "description": "Name of optional value in login form\n"
                    },
                    "optionalField2": {
                        "type": "string",
                        "description": "Name of optional param in the login form\n"
                    },
                    "optionalField2Value": {
                        "type": "string",
                        "description": "Name of optional value in login form\n"
                    },
                    "optionalField3": {
                        "type": "string",
                        "description": "Name of optional param in the login form\n"
                    },
                    "optionalField3Value": {
                        "type": "string",
                        "description": "Name of optional value in login form\n"
                    },
                    "passwordField": {
                        "type": "string",
                        "description": "Login password field\n"
                    },
                    "revealPassword": {
                        "type": "boolean",
                        "description": "Allow user to reveal password\n"
                    },
                    "sharedPassword": {
                        "type": "string",
                        "description": "Shared password, required for certain schemes.\n"
                    },
                    "sharedUsername": {
                        "type": "string",
                        "description": "Shared username, required for certain schemes.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Login URL\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type\n"
                    },
                    "usernameField": {
                        "type": "string",
                        "description": "Login username field\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:deprecated/SecurePasswordStoreAppUser:SecurePasswordStoreAppUser"
                        },
                        "description": "Users associated with the application\n",
                        "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/signonPolicy:SignonPolicy": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Policy Description\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid\npriority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: ACTIVE or INACTIVE.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Policy Description\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid\npriority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: ACTIVE or INACTIVE.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SignonPolicy resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Policy Description\n"
                    },
                    "groupsIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Group IDs to Include\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Name\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid\npriority is provided. API defaults it to the last (lowest) if not there.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Status: ACTIVE or INACTIVE.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/signonPolicyRule:SignonPolicyRule": {
            "properties": {
                "access": {
                    "type": "string",
                    "description": "Allow or deny access based on the rule conditions: ALLOW, DENY or CHALLENGE.\n"
                },
                "authtype": {
                    "type": "string",
                    "description": "Authentication entrypoint: ANY, RADIUS or LDAP_INTERFACE\n"
                },
                "behaviors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of behavior IDs\n"
                },
                "factorSequences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/SignonPolicyRuleFactorSequence:SignonPolicyRuleFactorSequence"
                    }
                },
                "mfaLifetime": {
                    "type": "integer",
                    "description": "Elapsed time before the next MFA challenge\n"
                },
                "mfaPrompt": {
                    "type": "string",
                    "description": "Prompt for MFA based on the device used, a factor session lifetime, or every sign-on attempt: DEVICE, SESSION or ALWAYS\n"
                },
                "mfaRememberDevice": {
                    "type": "boolean",
                    "description": "Remember MFA device.\n"
                },
                "mfaRequired": {
                    "type": "boolean",
                    "description": "Require MFA.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The zones to exclude\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The zones to include\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n"
                },
                "policyid": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n",
                    "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an\ninvalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "riscLevel": {
                    "type": "string",
                    "description": "Risc level: ANY, LOW, MEDIUM or HIGH\n"
                },
                "sessionIdle": {
                    "type": "integer",
                    "description": "Max minutes a session can be idle.\n"
                },
                "sessionLifetime": {
                    "type": "integer",
                    "description": "Max minutes a session is active: Disable = 0.\n"
                },
                "sessionPersistent": {
                    "type": "boolean",
                    "description": "Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session\ncookies.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: ACTIVE or INACTIVE.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "access": {
                    "type": "string",
                    "description": "Allow or deny access based on the rule conditions: ALLOW, DENY or CHALLENGE.\n"
                },
                "authtype": {
                    "type": "string",
                    "description": "Authentication entrypoint: ANY, RADIUS or LDAP_INTERFACE\n"
                },
                "behaviors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of behavior IDs\n"
                },
                "factorSequences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/SignonPolicyRuleFactorSequence:SignonPolicyRuleFactorSequence"
                    }
                },
                "mfaLifetime": {
                    "type": "integer",
                    "description": "Elapsed time before the next MFA challenge\n"
                },
                "mfaPrompt": {
                    "type": "string",
                    "description": "Prompt for MFA based on the device used, a factor session lifetime, or every sign-on attempt: DEVICE, SESSION or ALWAYS\n"
                },
                "mfaRememberDevice": {
                    "type": "boolean",
                    "description": "Remember MFA device.\n"
                },
                "mfaRequired": {
                    "type": "boolean",
                    "description": "Require MFA.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The zones to exclude\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The zones to include\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n"
                },
                "policyid": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n",
                    "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an\ninvalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "riscLevel": {
                    "type": "string",
                    "description": "Risc level: ANY, LOW, MEDIUM or HIGH\n"
                },
                "sessionIdle": {
                    "type": "integer",
                    "description": "Max minutes a session can be idle.\n"
                },
                "sessionLifetime": {
                    "type": "integer",
                    "description": "Max minutes a session is active: Disable = 0.\n"
                },
                "sessionPersistent": {
                    "type": "boolean",
                    "description": "Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session\ncookies.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: ACTIVE or INACTIVE.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SignonPolicyRule resources.\n",
                "properties": {
                    "access": {
                        "type": "string",
                        "description": "Allow or deny access based on the rule conditions: ALLOW, DENY or CHALLENGE.\n"
                    },
                    "authtype": {
                        "type": "string",
                        "description": "Authentication entrypoint: ANY, RADIUS or LDAP_INTERFACE\n"
                    },
                    "behaviors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of behavior IDs\n"
                    },
                    "factorSequences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:deprecated/SignonPolicyRuleFactorSequence:SignonPolicyRuleFactorSequence"
                        }
                    },
                    "mfaLifetime": {
                        "type": "integer",
                        "description": "Elapsed time before the next MFA challenge\n"
                    },
                    "mfaPrompt": {
                        "type": "string",
                        "description": "Prompt for MFA based on the device used, a factor session lifetime, or every sign-on attempt: DEVICE, SESSION or ALWAYS\n"
                    },
                    "mfaRememberDevice": {
                        "type": "boolean",
                        "description": "Remember MFA device.\n"
                    },
                    "mfaRequired": {
                        "type": "boolean",
                        "description": "Require MFA.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Rule Name\n"
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The zones to exclude\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The zones to include\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Policy ID of the Rule\n"
                    },
                    "policyid": {
                        "type": "string",
                        "description": "Policy ID of the Rule\n",
                        "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an\ninvalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                    },
                    "riscLevel": {
                        "type": "string",
                        "description": "Risc level: ANY, LOW, MEDIUM or HIGH\n"
                    },
                    "sessionIdle": {
                        "type": "integer",
                        "description": "Max minutes a session can be idle.\n"
                    },
                    "sessionLifetime": {
                        "type": "integer",
                        "description": "Max minutes a session is active: Disable = 0.\n"
                    },
                    "sessionPersistent": {
                        "type": "boolean",
                        "description": "Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session\ncookies.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Rule Status: ACTIVE or INACTIVE.\n"
                    },
                    "usersExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of User IDs to Exclude\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/socialIdp:SocialIdp": {
            "properties": {
                "accountLinkAction": {
                    "type": "string"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authorizationBinding": {
                    "type": "string"
                },
                "authorizationUrl": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "deprovisionedAction": {
                    "type": "string"
                },
                "groupsAction": {
                    "type": "string"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupsAttribute": {
                    "type": "string"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL\n"
                },
                "matchAttribute": {
                    "type": "string",
                    "deprecationMessage": "This property was incorrectly added to this resource, you should use \"subject_match_attribute\""
                },
                "matchType": {
                    "type": "string",
                    "deprecationMessage": "This property was incorrectly added to this resource, you should use \"subject_match_type\""
                },
                "maxClockSkew": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "name of idp\n"
                },
                "profileMaster": {
                    "type": "boolean"
                },
                "protocolType": {
                    "type": "string"
                },
                "provisioningAction": {
                    "type": "string"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "algorithm to use to sign requests\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "algorithm to use to sign response\n"
                },
                "responseSignatureAlgorithm": {
                    "type": "string",
                    "description": "algorithm to use to sign requests\n"
                },
                "responseSignatureScope": {
                    "type": "string",
                    "description": "algorithm to use to sign response\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "subjectMatchAttribute": {
                    "type": "string"
                },
                "subjectMatchType": {
                    "type": "string"
                },
                "suspendedAction": {
                    "type": "string"
                },
                "tokenBinding": {
                    "type": "string"
                },
                "tokenUrl": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "usernameTemplate": {
                    "type": "string"
                }
            },
            "required": [
                "authorizationBinding",
                "authorizationUrl",
                "name",
                "scopes",
                "tokenBinding",
                "tokenUrl",
                "type"
            ],
            "inputProperties": {
                "accountLinkAction": {
                    "type": "string"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "deprovisionedAction": {
                    "type": "string"
                },
                "groupsAction": {
                    "type": "string"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupsAttribute": {
                    "type": "string"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL\n"
                },
                "matchAttribute": {
                    "type": "string",
                    "deprecationMessage": "This property was incorrectly added to this resource, you should use \"subject_match_attribute\""
                },
                "matchType": {
                    "type": "string",
                    "deprecationMessage": "This property was incorrectly added to this resource, you should use \"subject_match_type\""
                },
                "maxClockSkew": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "name of idp\n"
                },
                "profileMaster": {
                    "type": "boolean"
                },
                "protocolType": {
                    "type": "string"
                },
                "provisioningAction": {
                    "type": "string"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "algorithm to use to sign requests\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "algorithm to use to sign response\n"
                },
                "responseSignatureAlgorithm": {
                    "type": "string",
                    "description": "algorithm to use to sign requests\n"
                },
                "responseSignatureScope": {
                    "type": "string",
                    "description": "algorithm to use to sign response\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "subjectMatchAttribute": {
                    "type": "string"
                },
                "subjectMatchType": {
                    "type": "string"
                },
                "suspendedAction": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "usernameTemplate": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "scopes",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SocialIdp resources.\n",
                "properties": {
                    "accountLinkAction": {
                        "type": "string"
                    },
                    "accountLinkGroupIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "authorizationBinding": {
                        "type": "string"
                    },
                    "authorizationUrl": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "clientSecret": {
                        "type": "string"
                    },
                    "deprovisionedAction": {
                        "type": "string"
                    },
                    "groupsAction": {
                        "type": "string"
                    },
                    "groupsAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groupsAttribute": {
                        "type": "string"
                    },
                    "groupsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL\n"
                    },
                    "matchAttribute": {
                        "type": "string",
                        "deprecationMessage": "This property was incorrectly added to this resource, you should use \"subject_match_attribute\""
                    },
                    "matchType": {
                        "type": "string",
                        "deprecationMessage": "This property was incorrectly added to this resource, you should use \"subject_match_type\""
                    },
                    "maxClockSkew": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of idp\n"
                    },
                    "profileMaster": {
                        "type": "boolean"
                    },
                    "protocolType": {
                        "type": "string"
                    },
                    "provisioningAction": {
                        "type": "string"
                    },
                    "requestSignatureAlgorithm": {
                        "type": "string",
                        "description": "algorithm to use to sign requests\n"
                    },
                    "requestSignatureScope": {
                        "type": "string",
                        "description": "algorithm to use to sign response\n"
                    },
                    "responseSignatureAlgorithm": {
                        "type": "string",
                        "description": "algorithm to use to sign requests\n"
                    },
                    "responseSignatureScope": {
                        "type": "string",
                        "description": "algorithm to use to sign response\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "subjectMatchAttribute": {
                        "type": "string"
                    },
                    "subjectMatchType": {
                        "type": "string"
                    },
                    "suspendedAction": {
                        "type": "string"
                    },
                    "tokenBinding": {
                        "type": "string"
                    },
                    "tokenUrl": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "usernameTemplate": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/swaApp:SwaApp": {
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "buttonField": {
                    "type": "string",
                    "description": "Login button field\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "Pretty name of app.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of the application.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Preconfigured app name\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regex that further restricts URL to the specified regex\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/SwaAppUser:SwaAppUser"
                    },
                    "description": "Users associated with the application\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "signOnMode"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "buttonField": {
                    "type": "string",
                    "description": "Login button field\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "Pretty name of app.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of the application.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Preconfigured app name\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regex that further restricts URL to the specified regex\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/SwaAppUser:SwaAppUser"
                    },
                    "description": "Users associated with the application\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SwaApp resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self service\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar\n"
                    },
                    "buttonField": {
                        "type": "string",
                        "description": "Login button field\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Groups associated with the application\n",
                        "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Pretty name of app.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Logo of the application.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "passwordField": {
                        "type": "string",
                        "description": "Login password field\n"
                    },
                    "preconfiguredApp": {
                        "type": "string",
                        "description": "Preconfigured app name\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Login URL\n"
                    },
                    "urlRegex": {
                        "type": "string",
                        "description": "A regex that further restricts URL to the specified regex\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type\n"
                    },
                    "usernameField": {
                        "type": "string",
                        "description": "Login username field\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:deprecated/SwaAppUser:SwaAppUser"
                        },
                        "description": "Users associated with the application\n",
                        "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                    }
                },
                "type": "object"
            }
        },
        "okta:deprecated/threeFieldApp:ThreeFieldApp": {
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "buttonSelector": {
                    "type": "string",
                    "description": "Login button field CSS selector\n"
                },
                "extraFieldSelector": {
                    "type": "string",
                    "description": "Extra field CSS selector\n"
                },
                "extraFieldValue": {
                    "type": "string",
                    "description": "Value for extra form field\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "Pretty name of app.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of the application.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "passwordSelector": {
                    "type": "string",
                    "description": "Login password field CSS selector\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regex that further restricts URL to the specified regex\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type\n"
                },
                "usernameSelector": {
                    "type": "string",
                    "description": "Login username field CSS selector\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/ThreeFieldAppUser:ThreeFieldAppUser"
                    },
                    "description": "Users associated with the application\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "required": [
                "buttonSelector",
                "extraFieldSelector",
                "extraFieldValue",
                "label",
                "logoUrl",
                "name",
                "passwordSelector",
                "signOnMode",
                "url",
                "usernameSelector"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "buttonSelector": {
                    "type": "string",
                    "description": "Login button field CSS selector\n"
                },
                "extraFieldSelector": {
                    "type": "string",
                    "description": "Extra field CSS selector\n"
                },
                "extraFieldValue": {
                    "type": "string",
                    "description": "Value for extra form field\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "Pretty name of app.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of the application.\n"
                },
                "passwordSelector": {
                    "type": "string",
                    "description": "Login password field CSS selector\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regex that further restricts URL to the specified regex\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type\n"
                },
                "usernameSelector": {
                    "type": "string",
                    "description": "Login username field CSS selector\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:deprecated/ThreeFieldAppUser:ThreeFieldAppUser"
                    },
                    "description": "Users associated with the application\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "requiredInputs": [
                "buttonSelector",
                "extraFieldSelector",
                "extraFieldValue",
                "label",
                "passwordSelector",
                "url",
                "usernameSelector"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ThreeFieldApp resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self service\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar\n"
                    },
                    "buttonSelector": {
                        "type": "string",
                        "description": "Login button field CSS selector\n"
                    },
                    "extraFieldSelector": {
                        "type": "string",
                        "description": "Extra field CSS selector\n"
                    },
                    "extraFieldValue": {
                        "type": "string",
                        "description": "Value for extra form field\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Groups associated with the application\n",
                        "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Pretty name of app.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Logo of the application.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "passwordSelector": {
                        "type": "string",
                        "description": "Login password field CSS selector\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Login URL\n"
                    },
                    "urlRegex": {
                        "type": "string",
                        "description": "A regex that further restricts URL to the specified regex\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type\n"
                    },
                    "usernameSelector": {
                        "type": "string",
                        "description": "Login username field CSS selector\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:deprecated/ThreeFieldAppUser:ThreeFieldAppUser"
                        },
                        "description": "Users associated with the application\n",
                        "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                    }
                },
                "type": "object"
            }
        },
        "okta:factor/factor:Factor": {
            "description": "Allows you to manage the activation of Okta MFA methods.\n\nThis resource allows you to manage Okta MFA methods.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.factor.Factor(\"example\", {\n    providerId: \"google_otp\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.factor.Factor(\"example\", provider_id=\"google_otp\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Factor.Factor(\"example\", new Okta.Factor.FactorArgs\n        {\n            ProviderId = \"google_otp\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/factor\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := factor.NewFactor(ctx, \"example\", \u0026factor.FactorArgs{\n\t\t\tProviderId: pulumi.String(\"google_otp\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether to activate the provider, by default, it is set to `true`.\n"
                },
                "providerId": {
                    "type": "string",
                    "description": "The MFA provider name.\nAllowed values are `\"duo\"`, `\"fido_u2f\"`, `\"fido_webauthn\"`, `\"google_otp\"`, `\"okta_call\"`, `\"okta_otp\"`, `\"okta_password\"`, `\"okta_push\"`, `\"okta_question\"`, `\"okta_sms\"`, `\"okta_email\"`, `\"rsa_token\"`, `\"symantec_vip\"`, `\"yubikey_token\"`, or `\"hotp\"`.\n"
                }
            },
            "required": [
                "providerId"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether to activate the provider, by default, it is set to `true`.\n"
                },
                "providerId": {
                    "type": "string",
                    "description": "The MFA provider name.\nAllowed values are `\"duo\"`, `\"fido_u2f\"`, `\"fido_webauthn\"`, `\"google_otp\"`, `\"okta_call\"`, `\"okta_otp\"`, `\"okta_password\"`, `\"okta_push\"`, `\"okta_question\"`, `\"okta_sms\"`, `\"okta_email\"`, `\"rsa_token\"`, `\"symantec_vip\"`, `\"yubikey_token\"`, or `\"hotp\"`.\n"
                }
            },
            "requiredInputs": [
                "providerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Factor resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Whether to activate the provider, by default, it is set to `true`.\n"
                    },
                    "providerId": {
                        "type": "string",
                        "description": "The MFA provider name.\nAllowed values are `\"duo\"`, `\"fido_u2f\"`, `\"fido_webauthn\"`, `\"google_otp\"`, `\"okta_call\"`, `\"okta_otp\"`, `\"okta_password\"`, `\"okta_push\"`, `\"okta_question\"`, `\"okta_sms\"`, `\"okta_email\"`, `\"rsa_token\"`, `\"symantec_vip\"`, `\"yubikey_token\"`, or `\"hotp\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:group/group:Group": {
            "description": "Creates an Okta Group.\n\nThis resource allows you to create and configure an Okta Group.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.group.Group(\"example\", {\n    description: \"My Example Group\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.group.Group(\"example\", description=\"My Example Group\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Group.Group(\"example\", new Okta.Group.GroupArgs\n        {\n            Description = \"My Example Group\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := group.NewGroup(ctx, \"example\", \u0026group.GroupArgs{\n\t\t\tDescription: pulumi.String(\"My Example Group\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn Okta Group can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:group/group:Group example \u003cgroup id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the Okta Group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Okta Group.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The users associated with the group. This can also be done per user.\n",
                    "deprecationMessage": "The `users` field is now deprecated for the resource `okta_group`, please replace all uses of this with: `okta_group_memberships`"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the Okta Group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Okta Group.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The users associated with the group. This can also be done per user.\n",
                    "deprecationMessage": "The `users` field is now deprecated for the resource `okta_group`, please replace all uses of this with: `okta_group_memberships`"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the Okta Group.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Okta Group.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The users associated with the group. This can also be done per user.\n",
                        "deprecationMessage": "The `users` field is now deprecated for the resource `okta_group`, please replace all uses of this with: `okta_group_memberships`"
                    }
                },
                "type": "object"
            }
        },
        "okta:group/membership:Membership": {
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "The ID of the Okta Group.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the Okta User.\n"
                }
            },
            "required": [
                "groupId",
                "userId"
            ],
            "inputProperties": {
                "groupId": {
                    "type": "string",
                    "description": "The ID of the Okta Group.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the Okta User.\n"
                }
            },
            "requiredInputs": [
                "groupId",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Membership resources.\n",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the Okta Group.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of the Okta User.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:group/role:Role": {
            "description": "Assigns Admin roles to Okta Groups.\n\nThis resource allows you to assign Okta administrator roles to Okta Groups. This resource provides a one-to-one\ninterface between the Okta group and the admin role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.group.Role(\"example\", {\n    groupId: \"\u003cgroup id\u003e\",\n    roleType: \"READ_ONLY_ADMIN\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.group.Role(\"example\",\n    group_id=\"\u003cgroup id\u003e\",\n    role_type=\"READ_ONLY_ADMIN\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Group.Role(\"example\", new Okta.Group.RoleArgs\n        {\n            GroupId = \"\u003cgroup id\u003e\",\n            RoleType = \"READ_ONLY_ADMIN\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := group.NewRole(ctx, \"example\", \u0026group.RoleArgs{\n\t\t\tGroupId:  pulumi.String(\"\u003cgroup id\u003e\"),\n\t\t\tRoleType: pulumi.String(\"READ_ONLY_ADMIN\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nIndividual admin role assignment can be imported by passing the group and role assignment IDs as follows\n\n```sh\n $ pulumi import okta:group/role:Role example \u003cgroup id\u003e/\u003crole id\u003e\n```\n\n ",
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "The ID of group to attach admin roles to.\n"
                },
                "roleType": {
                    "type": "string",
                    "description": "Admin role assigned to the group. It can be any one of the following values `\"SUPER_ADMIN\"`\n, `\"ORG_ADMIN\"`, `\"APP_ADMIN\"`, `\"USER_ADMIN\"`, `\"HELP_DESK_ADMIN\"`, `\"READ_ONLY_ADMIN\"`\n, `\"MOBILE_ADMIN\"`, `\"API_ACCESS_MANAGEMENT_ADMIN\"`, `\"REPORT_ADMIN\"`, `\"GROUP_MEMBERSHIP_ADMIN\"`.\n"
                },
                "targetAppLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of app names (name represents set of app instances, like 'salesforce' or '\nfacebook'), or a combination of app name and app instance ID (like 'facebook.0oapsqQ6dv19pqyEo0g3') you would like as\nthe targets of the admin role.\n- Only supported when used with the role type `\"APP_ADMIN\"`.\n"
                },
                "targetGroupLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of group IDs you would like as the targets of the admin role.\n- Only supported when used with the role types: `GROUP_MEMBERSHIP_ADMIN`, `HELP_DESK_ADMIN`, or `USER_ADMIN`.\n"
                }
            },
            "required": [
                "groupId",
                "roleType"
            ],
            "inputProperties": {
                "groupId": {
                    "type": "string",
                    "description": "The ID of group to attach admin roles to.\n"
                },
                "roleType": {
                    "type": "string",
                    "description": "Admin role assigned to the group. It can be any one of the following values `\"SUPER_ADMIN\"`\n, `\"ORG_ADMIN\"`, `\"APP_ADMIN\"`, `\"USER_ADMIN\"`, `\"HELP_DESK_ADMIN\"`, `\"READ_ONLY_ADMIN\"`\n, `\"MOBILE_ADMIN\"`, `\"API_ACCESS_MANAGEMENT_ADMIN\"`, `\"REPORT_ADMIN\"`, `\"GROUP_MEMBERSHIP_ADMIN\"`.\n"
                },
                "targetAppLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of app names (name represents set of app instances, like 'salesforce' or '\nfacebook'), or a combination of app name and app instance ID (like 'facebook.0oapsqQ6dv19pqyEo0g3') you would like as\nthe targets of the admin role.\n- Only supported when used with the role type `\"APP_ADMIN\"`.\n"
                },
                "targetGroupLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of group IDs you would like as the targets of the admin role.\n- Only supported when used with the role types: `GROUP_MEMBERSHIP_ADMIN`, `HELP_DESK_ADMIN`, or `USER_ADMIN`.\n"
                }
            },
            "requiredInputs": [
                "groupId",
                "roleType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Role resources.\n",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "description": "The ID of group to attach admin roles to.\n"
                    },
                    "roleType": {
                        "type": "string",
                        "description": "Admin role assigned to the group. It can be any one of the following values `\"SUPER_ADMIN\"`\n, `\"ORG_ADMIN\"`, `\"APP_ADMIN\"`, `\"USER_ADMIN\"`, `\"HELP_DESK_ADMIN\"`, `\"READ_ONLY_ADMIN\"`\n, `\"MOBILE_ADMIN\"`, `\"API_ACCESS_MANAGEMENT_ADMIN\"`, `\"REPORT_ADMIN\"`, `\"GROUP_MEMBERSHIP_ADMIN\"`.\n"
                    },
                    "targetAppLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of app names (name represents set of app instances, like 'salesforce' or '\nfacebook'), or a combination of app name and app instance ID (like 'facebook.0oapsqQ6dv19pqyEo0g3') you would like as\nthe targets of the admin role.\n- Only supported when used with the role type `\"APP_ADMIN\"`.\n"
                    },
                    "targetGroupLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of group IDs you would like as the targets of the admin role.\n- Only supported when used with the role types: `GROUP_MEMBERSHIP_ADMIN`, `HELP_DESK_ADMIN`, or `USER_ADMIN`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:group/roles:Roles": {
            "description": "Creates Group level Admin Role Assignments.\n\nThis resource allows you to create and configure Group level Admin Role Assignments.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.group.Roles(\"example\", {\n    adminRoles: [\"SUPER_ADMIN\"],\n    groupId: \"\u003cgroup id\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.group.Roles(\"example\",\n    admin_roles=[\"SUPER_ADMIN\"],\n    group_id=\"\u003cgroup id\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Group.Roles(\"example\", new Okta.Group.RolesArgs\n        {\n            AdminRoles = \n            {\n                \"SUPER_ADMIN\",\n            },\n            GroupId = \"\u003cgroup id\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := group.NewRoles(ctx, \"example\", \u0026group.RolesArgs{\n\t\t\tAdminRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"SUPER_ADMIN\"),\n\t\t\t},\n\t\t\tGroupId: pulumi.String(\"\u003cgroup id\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nGroup Role Assignment can be imported via the Okta Group ID.\n\n```sh\n $ pulumi import okta:group/roles:Roles example \u003cgroup id\u003e\n```\n\n ",
            "properties": {
                "adminRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Admin roles associated with the group. It can be any of the following values `\"SUPER_ADMIN\"`, `\"ORG_ADMIN\"`, `\"APP_ADMIN\"`, `\"USER_ADMIN\"`, `\"HELP_DESK_ADMIN\"`, `\"READ_ONLY_ADMIN\"`, `\"MOBILE_ADMIN\"`, `\"API_ACCESS_MANAGEMENT_ADMIN\"`, `\"REPORT_ADMIN\"`, `\"GROUP_MEMBERSHIP_ADMIN\"`.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of group to attach admin roles to.\n"
                }
            },
            "required": [
                "groupId"
            ],
            "inputProperties": {
                "adminRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Admin roles associated with the group. It can be any of the following values `\"SUPER_ADMIN\"`, `\"ORG_ADMIN\"`, `\"APP_ADMIN\"`, `\"USER_ADMIN\"`, `\"HELP_DESK_ADMIN\"`, `\"READ_ONLY_ADMIN\"`, `\"MOBILE_ADMIN\"`, `\"API_ACCESS_MANAGEMENT_ADMIN\"`, `\"REPORT_ADMIN\"`, `\"GROUP_MEMBERSHIP_ADMIN\"`.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of group to attach admin roles to.\n"
                }
            },
            "requiredInputs": [
                "groupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Roles resources.\n",
                "properties": {
                    "adminRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Admin roles associated with the group. It can be any of the following values `\"SUPER_ADMIN\"`, `\"ORG_ADMIN\"`, `\"APP_ADMIN\"`, `\"USER_ADMIN\"`, `\"HELP_DESK_ADMIN\"`, `\"READ_ONLY_ADMIN\"`, `\"MOBILE_ADMIN\"`, `\"API_ACCESS_MANAGEMENT_ADMIN\"`, `\"REPORT_ADMIN\"`, `\"GROUP_MEMBERSHIP_ADMIN\"`.\n"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The ID of group to attach admin roles to.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:group/rule:Rule": {
            "description": "Creates an Okta Group Rule.\n\nThis resource allows you to create and configure an Okta Group Rule.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.group.Rule(\"example\", {\n    expressionType: \"urn:okta:expression:1.0\",\n    expressionValue: \"String.startsWith(user.firstName,\\\"andy\\\")\",\n    groupAssignments: [\"\u003cgroup id\u003e\"],\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.group.Rule(\"example\",\n    expression_type=\"urn:okta:expression:1.0\",\n    expression_value=\"String.startsWith(user.firstName,\\\"andy\\\")\",\n    group_assignments=[\"\u003cgroup id\u003e\"],\n    status=\"ACTIVE\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Group.Rule(\"example\", new Okta.Group.RuleArgs\n        {\n            ExpressionType = \"urn:okta:expression:1.0\",\n            ExpressionValue = \"String.startsWith(user.firstName,\\\"andy\\\")\",\n            GroupAssignments = \n            {\n                \"\u003cgroup id\u003e\",\n            },\n            Status = \"ACTIVE\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := group.NewRule(ctx, \"example\", \u0026group.RuleArgs{\n\t\t\tExpressionType:  pulumi.String(\"urn:okta:expression:1.0\"),\n\t\t\tExpressionValue: pulumi.String(\"String.startsWith(user.firstName,\\\"andy\\\")\"),\n\t\t\tGroupAssignments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"\u003cgroup id\u003e\"),\n\t\t\t},\n\t\t\tStatus: pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn Okta Group Rule can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:group/rule:Rule example \u003cgroup rule id\u003e\n```\n\n ",
            "properties": {
                "expressionType": {
                    "type": "string",
                    "description": "The expression type to use to invoke the rule. The default\nis `\"urn:okta:expression:1.0\"`.\n"
                },
                "expressionValue": {
                    "type": "string",
                    "description": "The expression value.\n"
                },
                "groupAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of group ids to assign the users to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Group Rule.\n"
                },
                "removeAssignedUsers": {
                    "type": "boolean",
                    "description": "This tells the provider to remove users added by this rule from the assigned\ngroup after destroying this resource. Default is `false`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the group rule.\n"
                }
            },
            "required": [
                "expressionValue",
                "groupAssignments",
                "name"
            ],
            "inputProperties": {
                "expressionType": {
                    "type": "string",
                    "description": "The expression type to use to invoke the rule. The default\nis `\"urn:okta:expression:1.0\"`.\n"
                },
                "expressionValue": {
                    "type": "string",
                    "description": "The expression value.\n"
                },
                "groupAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of group ids to assign the users to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Group Rule.\n"
                },
                "removeAssignedUsers": {
                    "type": "boolean",
                    "description": "This tells the provider to remove users added by this rule from the assigned\ngroup after destroying this resource. Default is `false`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the group rule.\n"
                }
            },
            "requiredInputs": [
                "expressionValue",
                "groupAssignments"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Rule resources.\n",
                "properties": {
                    "expressionType": {
                        "type": "string",
                        "description": "The expression type to use to invoke the rule. The default\nis `\"urn:okta:expression:1.0\"`.\n"
                    },
                    "expressionValue": {
                        "type": "string",
                        "description": "The expression value.\n"
                    },
                    "groupAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of group ids to assign the users to.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Group Rule.\n"
                    },
                    "removeAssignedUsers": {
                        "type": "boolean",
                        "description": "This tells the provider to remove users added by this rule from the assigned\ngroup after destroying this resource. Default is `false`.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the group rule.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:idp/oidc:Oidc": {
            "description": "Creates an OIDC Identity Provider.\n\nThis resource allows you to create and configure an OIDC Identity Provider.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.idp.Oidc(\"example\", {\n    authorizationBinding: \"HTTP-REDIRECT\",\n    authorizationUrl: \"https://idp.example.com/authorize\",\n    clientId: \"efg456\",\n    clientSecret: \"efg456\",\n    issuerUrl: \"https://id.example.com\",\n    jwksBinding: \"HTTP-REDIRECT\",\n    jwksUrl: \"https://idp.example.com/keys\",\n    scopes: [\"openid\"],\n    tokenBinding: \"HTTP-POST\",\n    tokenUrl: \"https://idp.example.com/token\",\n    userInfoBinding: \"HTTP-REDIRECT\",\n    userInfoUrl: \"https://idp.example.com/userinfo\",\n    usernameTemplate: \"idpuser.email\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.Oidc(\"example\",\n    authorization_binding=\"HTTP-REDIRECT\",\n    authorization_url=\"https://idp.example.com/authorize\",\n    client_id=\"efg456\",\n    client_secret=\"efg456\",\n    issuer_url=\"https://id.example.com\",\n    jwks_binding=\"HTTP-REDIRECT\",\n    jwks_url=\"https://idp.example.com/keys\",\n    scopes=[\"openid\"],\n    token_binding=\"HTTP-POST\",\n    token_url=\"https://idp.example.com/token\",\n    user_info_binding=\"HTTP-REDIRECT\",\n    user_info_url=\"https://idp.example.com/userinfo\",\n    username_template=\"idpuser.email\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Idp.Oidc(\"example\", new Okta.Idp.OidcArgs\n        {\n            AuthorizationBinding = \"HTTP-REDIRECT\",\n            AuthorizationUrl = \"https://idp.example.com/authorize\",\n            ClientId = \"efg456\",\n            ClientSecret = \"efg456\",\n            IssuerUrl = \"https://id.example.com\",\n            JwksBinding = \"HTTP-REDIRECT\",\n            JwksUrl = \"https://idp.example.com/keys\",\n            Scopes = \n            {\n                \"openid\",\n            },\n            TokenBinding = \"HTTP-POST\",\n            TokenUrl = \"https://idp.example.com/token\",\n            UserInfoBinding = \"HTTP-REDIRECT\",\n            UserInfoUrl = \"https://idp.example.com/userinfo\",\n            UsernameTemplate = \"idpuser.email\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.NewOidc(ctx, \"example\", \u0026idp.OidcArgs{\n\t\t\tAuthorizationBinding: pulumi.String(\"HTTP-REDIRECT\"),\n\t\t\tAuthorizationUrl:     pulumi.String(\"https://idp.example.com/authorize\"),\n\t\t\tClientId:             pulumi.String(\"efg456\"),\n\t\t\tClientSecret:         pulumi.String(\"efg456\"),\n\t\t\tIssuerUrl:            pulumi.String(\"https://id.example.com\"),\n\t\t\tJwksBinding:          pulumi.String(\"HTTP-REDIRECT\"),\n\t\t\tJwksUrl:              pulumi.String(\"https://idp.example.com/keys\"),\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"openid\"),\n\t\t\t},\n\t\t\tTokenBinding:     pulumi.String(\"HTTP-POST\"),\n\t\t\tTokenUrl:         pulumi.String(\"https://idp.example.com/token\"),\n\t\t\tUserInfoBinding:  pulumi.String(\"HTTP-REDIRECT\"),\n\t\t\tUserInfoUrl:      pulumi.String(\"https://idp.example.com/userinfo\"),\n\t\t\tUsernameTemplate: pulumi.String(\"idpuser.email\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn OIDC IdP can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:idp/oidc:Oidc example \u003cidp id\u003e\n```\n\n ",
            "properties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user.\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "authorizationBinding": {
                    "type": "string",
                    "description": "The method of making an authorization request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "authorizationUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret issued by AS for the Okta IdP instance.\n"
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `\"ORG_URL\"` or `\"CUSTOM_URL\"`.\n"
                },
                "issuerUrl": {
                    "type": "string",
                    "description": "URI that identifies the issuer.\n"
                },
                "jwksBinding": {
                    "type": "string",
                    "description": "The method of making a request for the OIDC JWKS. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "jwksUrl": {
                    "type": "string",
                    "description": "Endpoint where the keys signer publishes its keys in a JWK Set.\n"
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "protocolType": {
                    "type": "string",
                    "description": "The type of protocol to use. It can be `\"OIDC\"` or `\"OAUTH2\"`.\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication.\n"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "algorithm to use to sign requests\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "algorithm to use to sign response\n"
                },
                "responseSignatureAlgorithm": {
                    "type": "string",
                    "description": "algorithm to use to sign requests\n"
                },
                "responseSignatureScope": {
                    "type": "string",
                    "description": "algorithm to use to sign response\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The scopes of the IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the IdP.\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                },
                "tokenBinding": {
                    "type": "string",
                    "description": "The method of making a token request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of OIDC IdP.\n"
                },
                "userInfoBinding": {
                    "type": "string"
                },
                "userInfoUrl": {
                    "type": "string",
                    "description": "Protected resource endpoint that returns claims about the authenticated user.\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                }
            },
            "required": [
                "authorizationBinding",
                "authorizationUrl",
                "clientId",
                "clientSecret",
                "issuerUrl",
                "jwksBinding",
                "jwksUrl",
                "name",
                "scopes",
                "tokenBinding",
                "tokenUrl",
                "type"
            ],
            "inputProperties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user.\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "authorizationBinding": {
                    "type": "string",
                    "description": "The method of making an authorization request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "authorizationUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret issued by AS for the Okta IdP instance.\n"
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `\"ORG_URL\"` or `\"CUSTOM_URL\"`.\n"
                },
                "issuerUrl": {
                    "type": "string",
                    "description": "URI that identifies the issuer.\n"
                },
                "jwksBinding": {
                    "type": "string",
                    "description": "The method of making a request for the OIDC JWKS. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "jwksUrl": {
                    "type": "string",
                    "description": "Endpoint where the keys signer publishes its keys in a JWK Set.\n"
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "protocolType": {
                    "type": "string",
                    "description": "The type of protocol to use. It can be `\"OIDC\"` or `\"OAUTH2\"`.\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication.\n"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "algorithm to use to sign requests\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "algorithm to use to sign response\n"
                },
                "responseSignatureAlgorithm": {
                    "type": "string",
                    "description": "algorithm to use to sign requests\n"
                },
                "responseSignatureScope": {
                    "type": "string",
                    "description": "algorithm to use to sign response\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The scopes of the IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the IdP.\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                },
                "tokenBinding": {
                    "type": "string",
                    "description": "The method of making a token request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                },
                "userInfoBinding": {
                    "type": "string"
                },
                "userInfoUrl": {
                    "type": "string",
                    "description": "Protected resource endpoint that returns claims about the authenticated user.\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                }
            },
            "requiredInputs": [
                "authorizationBinding",
                "authorizationUrl",
                "clientId",
                "clientSecret",
                "issuerUrl",
                "jwksBinding",
                "jwksUrl",
                "scopes",
                "tokenBinding",
                "tokenUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Oidc resources.\n",
                "properties": {
                    "accountLinkAction": {
                        "type": "string",
                        "description": "Specifies the account linking action for an IdP user.\n"
                    },
                    "accountLinkGroupIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group memberships to determine link candidates.\n"
                    },
                    "authorizationBinding": {
                        "type": "string",
                        "description": "The method of making an authorization request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                    },
                    "authorizationUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "Client secret issued by AS for the Okta IdP instance.\n"
                    },
                    "deprovisionedAction": {
                        "type": "string",
                        "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                    },
                    "groupsAction": {
                        "type": "string",
                        "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                    },
                    "groupsAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                    },
                    "groupsAttribute": {
                        "type": "string",
                        "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                    },
                    "groupsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `\"ORG_URL\"` or `\"CUSTOM_URL\"`.\n"
                    },
                    "issuerUrl": {
                        "type": "string",
                        "description": "URI that identifies the issuer.\n"
                    },
                    "jwksBinding": {
                        "type": "string",
                        "description": "The method of making a request for the OIDC JWKS. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                    },
                    "jwksUrl": {
                        "type": "string",
                        "description": "Endpoint where the keys signer publishes its keys in a JWK Set.\n"
                    },
                    "maxClockSkew": {
                        "type": "integer",
                        "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "profileMaster": {
                        "type": "boolean",
                        "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                    },
                    "protocolType": {
                        "type": "string",
                        "description": "The type of protocol to use. It can be `\"OIDC\"` or `\"OAUTH2\"`.\n"
                    },
                    "provisioningAction": {
                        "type": "string",
                        "description": "Provisioning action for an IdP user during authentication.\n"
                    },
                    "requestSignatureAlgorithm": {
                        "type": "string",
                        "description": "algorithm to use to sign requests\n"
                    },
                    "requestSignatureScope": {
                        "type": "string",
                        "description": "algorithm to use to sign response\n"
                    },
                    "responseSignatureAlgorithm": {
                        "type": "string",
                        "description": "algorithm to use to sign requests\n"
                    },
                    "responseSignatureScope": {
                        "type": "string",
                        "description": "algorithm to use to sign response\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The scopes of the IdP.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the IdP.\n"
                    },
                    "subjectMatchAttribute": {
                        "type": "string",
                        "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                    },
                    "subjectMatchType": {
                        "type": "string",
                        "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                    },
                    "suspendedAction": {
                        "type": "string",
                        "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                    },
                    "tokenBinding": {
                        "type": "string",
                        "description": "The method of making a token request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                    },
                    "tokenUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of OIDC IdP.\n"
                    },
                    "userInfoBinding": {
                        "type": "string"
                    },
                    "userInfoUrl": {
                        "type": "string",
                        "description": "Protected resource endpoint that returns claims about the authenticated user.\n"
                    },
                    "usernameTemplate": {
                        "type": "string",
                        "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:idp/saml:Saml": {
            "description": "Creates a SAML Identity Provider.\n\nThis resource allows you to create and configure a SAML Identity Provider.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.idp.Saml(\"example\", {\n    acsType: \"INSTANCE\",\n    issuer: \"https://idp.example.com\",\n    kid: okta_idp_saml_key_test.id,\n    requestSignatureScope: \"REQUEST\",\n    responseSignatureScope: \"ANY\",\n    ssoBinding: \"HTTP-POST\",\n    ssoDestination: \"https://idp.example.com\",\n    ssoUrl: \"https://idp.example.com\",\n    usernameTemplate: \"idpuser.email\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.Saml(\"example\",\n    acs_type=\"INSTANCE\",\n    issuer=\"https://idp.example.com\",\n    kid=okta_idp_saml_key[\"test\"][\"id\"],\n    request_signature_scope=\"REQUEST\",\n    response_signature_scope=\"ANY\",\n    sso_binding=\"HTTP-POST\",\n    sso_destination=\"https://idp.example.com\",\n    sso_url=\"https://idp.example.com\",\n    username_template=\"idpuser.email\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Idp.Saml(\"example\", new Okta.Idp.SamlArgs\n        {\n            AcsType = \"INSTANCE\",\n            Issuer = \"https://idp.example.com\",\n            Kid = okta_idp_saml_key.Test.Id,\n            RequestSignatureScope = \"REQUEST\",\n            ResponseSignatureScope = \"ANY\",\n            SsoBinding = \"HTTP-POST\",\n            SsoDestination = \"https://idp.example.com\",\n            SsoUrl = \"https://idp.example.com\",\n            UsernameTemplate = \"idpuser.email\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.NewSaml(ctx, \"example\", \u0026idp.SamlArgs{\n\t\t\tAcsType:                pulumi.String(\"INSTANCE\"),\n\t\t\tIssuer:                 pulumi.String(\"https://idp.example.com\"),\n\t\t\tKid:                    pulumi.Any(okta_idp_saml_key.Test.Id),\n\t\t\tRequestSignatureScope:  pulumi.String(\"REQUEST\"),\n\t\t\tResponseSignatureScope: pulumi.String(\"ANY\"),\n\t\t\tSsoBinding:             pulumi.String(\"HTTP-POST\"),\n\t\t\tSsoDestination:         pulumi.String(\"https://idp.example.com\"),\n\t\t\tSsoUrl:                 pulumi.String(\"https://idp.example.com\"),\n\t\t\tUsernameTemplate:       pulumi.String(\"idpuser.email\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn SAML IdP can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:idp/saml:Saml example \u003cidp id\u003e\n```\n\n ",
            "properties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user.\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "acsBinding": {
                    "type": "string",
                    "deprecationMessage": "This property will be removed in the future, as it can only be set to 'HTTP-POST'"
                },
                "acsType": {
                    "type": "string",
                    "description": "The type of ACS. It can be `\"INSTANCE\"` or `\"ORG\"`.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "The audience restriction for the IdP.\n"
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "URI that identifies the issuer.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `\"ORG_URL\"` or `\"CUSTOM_URL\"`.\n"
                },
                "kid": {
                    "type": "string",
                    "description": "The ID of the signing key.\n"
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "nameFormat": {
                    "type": "string",
                    "description": "The name identifier format to use. By default `\"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"`.\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication.\n"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "The XML digital signature algorithm used when signing an AuthnRequest message.\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. It can be `\"REQUEST\"` or `\"NONE\"`.\n"
                },
                "responseSignatureAlgorithm": {
                    "type": "string",
                    "description": "The minimum XML digital signature algorithm allowed when verifying a SAMLResponse message or Assertion element.\n"
                },
                "responseSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to verify a SAMLResponse message or Assertion element XML digital signature. It can be `\"RESPONSE\"`, `\"ASSERTION\"`, or `\"ANY\"`.\n"
                },
                "ssoBinding": {
                    "type": "string",
                    "description": "The method of making an SSO request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "ssoDestination": {
                    "type": "string",
                    "description": "URI reference indicating the address to which the AuthnRequest message is sent.\n"
                },
                "ssoUrl": {
                    "type": "string",
                    "description": "URL of binding-specific endpoint to send an AuthnRequest message to IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the IdP.\n"
                },
                "subjectFilter": {
                    "type": "string",
                    "description": "Optional regular expression pattern used to filter untrusted IdP usernames.\n"
                },
                "subjectFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The name format. By default `\"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"`.\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the IdP.\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                }
            },
            "required": [
                "audience",
                "issuer",
                "kid",
                "name",
                "ssoUrl",
                "type"
            ],
            "inputProperties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user.\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "acsBinding": {
                    "type": "string",
                    "deprecationMessage": "This property will be removed in the future, as it can only be set to 'HTTP-POST'"
                },
                "acsType": {
                    "type": "string",
                    "description": "The type of ACS. It can be `\"INSTANCE\"` or `\"ORG\"`.\n"
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "URI that identifies the issuer.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `\"ORG_URL\"` or `\"CUSTOM_URL\"`.\n"
                },
                "kid": {
                    "type": "string",
                    "description": "The ID of the signing key.\n"
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "nameFormat": {
                    "type": "string",
                    "description": "The name identifier format to use. By default `\"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"`.\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication.\n"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "The XML digital signature algorithm used when signing an AuthnRequest message.\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. It can be `\"REQUEST\"` or `\"NONE\"`.\n"
                },
                "responseSignatureAlgorithm": {
                    "type": "string",
                    "description": "The minimum XML digital signature algorithm allowed when verifying a SAMLResponse message or Assertion element.\n"
                },
                "responseSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to verify a SAMLResponse message or Assertion element XML digital signature. It can be `\"RESPONSE\"`, `\"ASSERTION\"`, or `\"ANY\"`.\n"
                },
                "ssoBinding": {
                    "type": "string",
                    "description": "The method of making an SSO request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "ssoDestination": {
                    "type": "string",
                    "description": "URI reference indicating the address to which the AuthnRequest message is sent.\n"
                },
                "ssoUrl": {
                    "type": "string",
                    "description": "URL of binding-specific endpoint to send an AuthnRequest message to IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the IdP.\n"
                },
                "subjectFilter": {
                    "type": "string",
                    "description": "Optional regular expression pattern used to filter untrusted IdP usernames.\n"
                },
                "subjectFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The name format. By default `\"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"`.\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                }
            },
            "requiredInputs": [
                "issuer",
                "kid",
                "ssoUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Saml resources.\n",
                "properties": {
                    "accountLinkAction": {
                        "type": "string",
                        "description": "Specifies the account linking action for an IdP user.\n"
                    },
                    "accountLinkGroupIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group memberships to determine link candidates.\n"
                    },
                    "acsBinding": {
                        "type": "string",
                        "deprecationMessage": "This property will be removed in the future, as it can only be set to 'HTTP-POST'"
                    },
                    "acsType": {
                        "type": "string",
                        "description": "The type of ACS. It can be `\"INSTANCE\"` or `\"ORG\"`.\n"
                    },
                    "audience": {
                        "type": "string",
                        "description": "The audience restriction for the IdP.\n"
                    },
                    "deprovisionedAction": {
                        "type": "string",
                        "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                    },
                    "groupsAction": {
                        "type": "string",
                        "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                    },
                    "groupsAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                    },
                    "groupsAttribute": {
                        "type": "string",
                        "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                    },
                    "groupsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "URI that identifies the issuer.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `\"ORG_URL\"` or `\"CUSTOM_URL\"`.\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "The ID of the signing key.\n"
                    },
                    "maxClockSkew": {
                        "type": "integer",
                        "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "nameFormat": {
                        "type": "string",
                        "description": "The name identifier format to use. By default `\"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"`.\n"
                    },
                    "profileMaster": {
                        "type": "boolean",
                        "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                    },
                    "provisioningAction": {
                        "type": "string",
                        "description": "Provisioning action for an IdP user during authentication.\n"
                    },
                    "requestSignatureAlgorithm": {
                        "type": "string",
                        "description": "The XML digital signature algorithm used when signing an AuthnRequest message.\n"
                    },
                    "requestSignatureScope": {
                        "type": "string",
                        "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. It can be `\"REQUEST\"` or `\"NONE\"`.\n"
                    },
                    "responseSignatureAlgorithm": {
                        "type": "string",
                        "description": "The minimum XML digital signature algorithm allowed when verifying a SAMLResponse message or Assertion element.\n"
                    },
                    "responseSignatureScope": {
                        "type": "string",
                        "description": "Specifies whether to verify a SAMLResponse message or Assertion element XML digital signature. It can be `\"RESPONSE\"`, `\"ASSERTION\"`, or `\"ANY\"`.\n"
                    },
                    "ssoBinding": {
                        "type": "string",
                        "description": "The method of making an SSO request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                    },
                    "ssoDestination": {
                        "type": "string",
                        "description": "URI reference indicating the address to which the AuthnRequest message is sent.\n"
                    },
                    "ssoUrl": {
                        "type": "string",
                        "description": "URL of binding-specific endpoint to send an AuthnRequest message to IdP.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the IdP.\n"
                    },
                    "subjectFilter": {
                        "type": "string",
                        "description": "Optional regular expression pattern used to filter untrusted IdP usernames.\n"
                    },
                    "subjectFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The name format. By default `\"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"`.\n"
                    },
                    "subjectMatchAttribute": {
                        "type": "string",
                        "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                    },
                    "subjectMatchType": {
                        "type": "string",
                        "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                    },
                    "suspendedAction": {
                        "type": "string",
                        "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the IdP.\n"
                    },
                    "usernameTemplate": {
                        "type": "string",
                        "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:idp/samlKey:SamlKey": {
            "description": "Creates a SAML Identity Provider Signing Key.\n\nThis resource allows you to create and configure a SAML Identity Provider Signing Key.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example1 = new okta.idp.SamlKey(\"example_1\", {\n    x5cs: [okta_app_saml_example.certificate],\n});\nconst example2 = new okta.idp.SamlKey(\"example_2\", {\n    x5cs: [`MIIDqDCCApCgAwIBAgIGAVGNO4qeMA0GCSqGSIb3DQEBBQUAMIGUMQswCQYDVQQGEwJVUzETMBEG\nA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEU\nMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJ\nARYNaW5mb0Bva3RhLmNvbTAeFw0xNTEyMTAxODUwMDhaFw0xNzEyMTAxODUxMDdaMIGUMQswCQYD\nVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsG\nA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEc\nMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBALAakG48bgcTWHdwmVLHig0mkiRejxIVm3wbzrNSJcBruTq2zCYZ1rGfVxTYON8kJqvkXPmv\nkzWKhpEkvhubL+mx29XpXY0AsNIfgcm5xIV56yhXSvlMdqzGo3ciRwoACaF+ClNLxmXK9UTZD89B\nbVVGCG5AEvja0eCQ0GYsO5i9aSI5aTroab8Aew31PuWl/RGQWmjVy8+7P4wwkKKJNKCpxMYDlhfa\nWRp0zwUSbUCO0qEyeAYdZx6CLES4FGrDi/7D6G+ewWC+kbz1tL1XpF2Dcg3+IOlHrV6VWzz3rG39\nv9zFIncjvoQJFDGWhpqGqcmXvgH0Ze3SVcVF01T+bK0CAwEAATANBgkqhkiG9w0BAQUFAAOCAQEA\nAHmnSZ4imjNrIf9wxfQIcqHXEBoJ+oJtd59cw1Ur/YQY9pKXxoglqCQ54ZmlIf4GghlcZhslLO+m\nNdkQVwSmWMh6KLxVM18/xAkq8zyKbMbvQnTjFB7x45bgokwbjhivWqrB5LYHHCVN7k/8mKlS4eCK\nCi6RGEmErjojr4QN2xV0qAqP6CcGANgpepsQJCzlWucMFKAh0x9Kl8fmiQodfyLXyrebYsVnLrMf\njxE1b6dg4jKvv975tf5wreQSYZ7m//g3/+NnuDKkN/03HqhV7hTNi1fyctXk8I5Nwgyr+pT5LT2k\nYoEdncuy+GQGzE9yLOhC4HNfHQXpqp2tMPdRlw==`],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA SAML IdP Signing Key can be imported via the key id.\n\n```sh\n $ pulumi import okta:idp/samlKey:SamlKey example \u003ckey id\u003e\n```\n\n ",
            "properties": {
                "created": {
                    "type": "string",
                    "description": "Date created.\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "Date the cert expires.\n"
                },
                "kid": {
                    "type": "string",
                    "description": "Key ID.\n"
                },
                "kty": {
                    "type": "string",
                    "description": "Identifies the cryptographic algorithm family used with the key.\n"
                },
                "use": {
                    "type": "string",
                    "description": "Intended use of the public key.\n"
                },
                "x5cs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "base64-encoded X.509 certificate chain with DER encoding.\n"
                },
                "x5tS256": {
                    "type": "string",
                    "description": "base64url-encoded SHA-256 thumbprint of the DER encoding of an X.509 certificate.\n"
                }
            },
            "required": [
                "created",
                "expiresAt",
                "kid",
                "kty",
                "use",
                "x5cs",
                "x5tS256"
            ],
            "inputProperties": {
                "x5cs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "base64-encoded X.509 certificate chain with DER encoding.\n"
                }
            },
            "requiredInputs": [
                "x5cs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SamlKey resources.\n",
                "properties": {
                    "created": {
                        "type": "string",
                        "description": "Date created.\n"
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "Date the cert expires.\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "Key ID.\n"
                    },
                    "kty": {
                        "type": "string",
                        "description": "Identifies the cryptographic algorithm family used with the key.\n"
                    },
                    "use": {
                        "type": "string",
                        "description": "Intended use of the public key.\n"
                    },
                    "x5cs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "base64-encoded X.509 certificate chain with DER encoding.\n"
                    },
                    "x5tS256": {
                        "type": "string",
                        "description": "base64url-encoded SHA-256 thumbprint of the DER encoding of an X.509 certificate.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:idp/social:Social": {
            "description": "Creates a Social Identity Provider.\n\nThis resource allows you to create and configure a Social Identity Provider.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.idp.Social(\"example\", {\n    clientId: \"abcd123\",\n    clientSecret: \"abcd123\",\n    matchAttribute: \"customfieldId\",\n    matchType: \"CUSTOM_ATTRIBUTE\",\n    protocolType: \"OAUTH2\",\n    scopes: [\n        \"public_profile\",\n        \"email\",\n    ],\n    type: \"FACEBOOK\",\n    usernameTemplate: \"idpuser.email\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.Social(\"example\",\n    client_id=\"abcd123\",\n    client_secret=\"abcd123\",\n    match_attribute=\"customfieldId\",\n    match_type=\"CUSTOM_ATTRIBUTE\",\n    protocol_type=\"OAUTH2\",\n    scopes=[\n        \"public_profile\",\n        \"email\",\n    ],\n    type=\"FACEBOOK\",\n    username_template=\"idpuser.email\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Idp.Social(\"example\", new Okta.Idp.SocialArgs\n        {\n            ClientId = \"abcd123\",\n            ClientSecret = \"abcd123\",\n            MatchAttribute = \"customfieldId\",\n            MatchType = \"CUSTOM_ATTRIBUTE\",\n            ProtocolType = \"OAUTH2\",\n            Scopes = \n            {\n                \"public_profile\",\n                \"email\",\n            },\n            Type = \"FACEBOOK\",\n            UsernameTemplate = \"idpuser.email\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.NewSocial(ctx, \"example\", \u0026idp.SocialArgs{\n\t\t\tClientId:       pulumi.String(\"abcd123\"),\n\t\t\tClientSecret:   pulumi.String(\"abcd123\"),\n\t\t\tMatchAttribute: pulumi.String(\"customfieldId\"),\n\t\t\tMatchType:      pulumi.String(\"CUSTOM_ATTRIBUTE\"),\n\t\t\tProtocolType:   pulumi.String(\"OAUTH2\"),\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"public_profile\"),\n\t\t\t\tpulumi.String(\"email\"),\n\t\t\t},\n\t\t\tType:             pulumi.String(\"FACEBOOK\"),\n\t\t\tUsernameTemplate: pulumi.String(\"idpuser.email\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Social IdP can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:idp/social:Social example \u003cidp id\u003e\n```\n\n ",
            "properties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user.\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "authorizationBinding": {
                    "type": "string",
                    "description": "The method of making an authorization request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "authorizationUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret issued by AS for the Okta IdP instance.\n"
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `\"ORG_URL\"` or `\"CUSTOM_URL\"`.\n"
                },
                "matchAttribute": {
                    "type": "string",
                    "deprecationMessage": "This property was incorrectly added to this resource, you should use \"subject_match_attribute\""
                },
                "matchType": {
                    "type": "string",
                    "deprecationMessage": "This property was incorrectly added to this resource, you should use \"subject_match_type\""
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "protocolType": {
                    "type": "string",
                    "description": "The type of protocol to use. It can be `\"OIDC\"` or `\"OAUTH2\"`.\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication.\n"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "The XML digital signature algorithm used when signing an AuthnRequest message.\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. It can be `\"REQUEST\"` or `\"NONE\"`.\n"
                },
                "responseSignatureAlgorithm": {
                    "type": "string",
                    "description": "The minimum XML digital signature algorithm allowed when verifying a SAMLResponse message or Assertion element.\n"
                },
                "responseSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to verify a SAMLResponse message or Assertion element XML digital signature. It can be `\"RESPONSE\"`, `\"ASSERTION\"`, or `\"ANY\"`.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The scopes of the IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the IdP.\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                },
                "tokenBinding": {
                    "type": "string",
                    "description": "The method of making a token request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of Social IdP. It can be `\"FACEBOOK\"`, `\"LINKEDIN\"`, `\"MICROSOFT\"`, or `\"GOOGLE\"`.\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                }
            },
            "required": [
                "authorizationBinding",
                "authorizationUrl",
                "name",
                "scopes",
                "tokenBinding",
                "tokenUrl",
                "type"
            ],
            "inputProperties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user.\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret issued by AS for the Okta IdP instance.\n"
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `\"ORG_URL\"` or `\"CUSTOM_URL\"`.\n"
                },
                "matchAttribute": {
                    "type": "string",
                    "deprecationMessage": "This property was incorrectly added to this resource, you should use \"subject_match_attribute\""
                },
                "matchType": {
                    "type": "string",
                    "deprecationMessage": "This property was incorrectly added to this resource, you should use \"subject_match_type\""
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "protocolType": {
                    "type": "string",
                    "description": "The type of protocol to use. It can be `\"OIDC\"` or `\"OAUTH2\"`.\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication.\n"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "The XML digital signature algorithm used when signing an AuthnRequest message.\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. It can be `\"REQUEST\"` or `\"NONE\"`.\n"
                },
                "responseSignatureAlgorithm": {
                    "type": "string",
                    "description": "The minimum XML digital signature algorithm allowed when verifying a SAMLResponse message or Assertion element.\n"
                },
                "responseSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to verify a SAMLResponse message or Assertion element XML digital signature. It can be `\"RESPONSE\"`, `\"ASSERTION\"`, or `\"ANY\"`.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The scopes of the IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the IdP.\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of Social IdP. It can be `\"FACEBOOK\"`, `\"LINKEDIN\"`, `\"MICROSOFT\"`, or `\"GOOGLE\"`.\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                }
            },
            "requiredInputs": [
                "scopes",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Social resources.\n",
                "properties": {
                    "accountLinkAction": {
                        "type": "string",
                        "description": "Specifies the account linking action for an IdP user.\n"
                    },
                    "accountLinkGroupIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group memberships to determine link candidates.\n"
                    },
                    "authorizationBinding": {
                        "type": "string",
                        "description": "The method of making an authorization request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                    },
                    "authorizationUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "Client secret issued by AS for the Okta IdP instance.\n"
                    },
                    "deprovisionedAction": {
                        "type": "string",
                        "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                    },
                    "groupsAction": {
                        "type": "string",
                        "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                    },
                    "groupsAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                    },
                    "groupsAttribute": {
                        "type": "string",
                        "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                    },
                    "groupsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `\"ORG_URL\"` or `\"CUSTOM_URL\"`.\n"
                    },
                    "matchAttribute": {
                        "type": "string",
                        "deprecationMessage": "This property was incorrectly added to this resource, you should use \"subject_match_attribute\""
                    },
                    "matchType": {
                        "type": "string",
                        "deprecationMessage": "This property was incorrectly added to this resource, you should use \"subject_match_type\""
                    },
                    "maxClockSkew": {
                        "type": "integer",
                        "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "profileMaster": {
                        "type": "boolean",
                        "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                    },
                    "protocolType": {
                        "type": "string",
                        "description": "The type of protocol to use. It can be `\"OIDC\"` or `\"OAUTH2\"`.\n"
                    },
                    "provisioningAction": {
                        "type": "string",
                        "description": "Provisioning action for an IdP user during authentication.\n"
                    },
                    "requestSignatureAlgorithm": {
                        "type": "string",
                        "description": "The XML digital signature algorithm used when signing an AuthnRequest message.\n"
                    },
                    "requestSignatureScope": {
                        "type": "string",
                        "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. It can be `\"REQUEST\"` or `\"NONE\"`.\n"
                    },
                    "responseSignatureAlgorithm": {
                        "type": "string",
                        "description": "The minimum XML digital signature algorithm allowed when verifying a SAMLResponse message or Assertion element.\n"
                    },
                    "responseSignatureScope": {
                        "type": "string",
                        "description": "Specifies whether to verify a SAMLResponse message or Assertion element XML digital signature. It can be `\"RESPONSE\"`, `\"ASSERTION\"`, or `\"ANY\"`.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The scopes of the IdP.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the IdP.\n"
                    },
                    "subjectMatchAttribute": {
                        "type": "string",
                        "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                    },
                    "subjectMatchType": {
                        "type": "string",
                        "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                    },
                    "suspendedAction": {
                        "type": "string",
                        "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                    },
                    "tokenBinding": {
                        "type": "string",
                        "description": "The method of making a token request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                    },
                    "tokenUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of Social IdP. It can be `\"FACEBOOK\"`, `\"LINKEDIN\"`, `\"MICROSOFT\"`, or `\"GOOGLE\"`.\n"
                    },
                    "usernameTemplate": {
                        "type": "string",
                        "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/adminRoleTargets:AdminRoleTargets": {
            "description": "Manages targets for administrator roles.\n\nThis resource allows you to define permissions for admin roles into a smaller subset of Groups or Apps within your org.\nYou can define admin roles to target Groups, Applications, and Application Instances.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AdminRoleTargets(\"example\", {\n    apps: [\n        \"oidc_client.\u003capp_id\u003e\",\n        \"facebook\",\n    ],\n    roleType: \"APP_ADMIN\",\n    userId: \"\u003cuser_id\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AdminRoleTargets(\"example\",\n    apps=[\n        \"oidc_client.\u003capp_id\u003e\",\n        \"facebook\",\n    ],\n    role_type=\"APP_ADMIN\",\n    user_id=\"\u003cuser_id\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.AdminRoleTargets(\"example\", new Okta.AdminRoleTargetsArgs\n        {\n            Apps = \n            {\n                \"oidc_client.\u003capp_id\u003e\",\n                \"facebook\",\n            },\n            RoleType = \"APP_ADMIN\",\n            UserId = \"\u003cuser_id\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAdminRoleTargets(ctx, \"example\", \u0026okta.AdminRoleTargetsArgs{\n\t\t\tApps: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"oidc_client.\u003capp_id\u003e\"),\n\t\t\t\tpulumi.String(\"facebook\"),\n\t\t\t},\n\t\t\tRoleType: pulumi.String(\"APP_ADMIN\"),\n\t\t\tUserId:   pulumi.String(\"\u003cuser_id\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta Admin Role Targets can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/adminRoleTargets:AdminRoleTargets example \u003cuser id\u003e/\u003crole type\u003e\n```\n\n ",
            "properties": {
                "apps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of app names (name represents set of app instances) or a combination of app name and app instance ID (like 'salesforce' or 'facebook.0oapsqQ6dv19pqyEo0g3').\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of group IDs. Conflicts with `apps`.\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "Role ID.\n"
                },
                "roleType": {
                    "type": "string",
                    "description": "Name of the role associated with the user.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user.\n"
                }
            },
            "required": [
                "roleId",
                "roleType",
                "userId"
            ],
            "inputProperties": {
                "apps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of app names (name represents set of app instances) or a combination of app name and app instance ID (like 'salesforce' or 'facebook.0oapsqQ6dv19pqyEo0g3').\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of group IDs. Conflicts with `apps`.\n"
                },
                "roleType": {
                    "type": "string",
                    "description": "Name of the role associated with the user.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user.\n"
                }
            },
            "requiredInputs": [
                "roleType",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AdminRoleTargets resources.\n",
                "properties": {
                    "apps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of app names (name represents set of app instances) or a combination of app name and app instance ID (like 'salesforce' or 'facebook.0oapsqQ6dv19pqyEo0g3').\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of group IDs. Conflicts with `apps`.\n"
                    },
                    "roleId": {
                        "type": "string",
                        "description": "Role ID.\n"
                    },
                    "roleType": {
                        "type": "string",
                        "description": "Name of the role associated with the user.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appGroupAssignments:AppGroupAssignments": {
            "description": "Assigns groups to an application.\n\nThis resource allows you to create multiple App Group assignments.\n\n\n## Import\n\nAn application's group assignments can be imported via `app_id`.\n\n```sh\n $ pulumi import okta:index/appGroupAssignments:AppGroupAssignments example \u003capp_id\u003e\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The ID of the application to assign a group to.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppGroupAssignmentsGroup:AppGroupAssignmentsGroup"
                    },
                    "description": "A group to assign the app to.\n"
                }
            },
            "required": [
                "appId",
                "groups"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The ID of the application to assign a group to.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppGroupAssignmentsGroup:AppGroupAssignmentsGroup"
                    },
                    "description": "A group to assign the app to.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "groups"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppGroupAssignments resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The ID of the application to assign a group to.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/AppGroupAssignmentsGroup:AppGroupAssignmentsGroup"
                        },
                        "description": "A group to assign the app to.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appOauthApiScope:AppOauthApiScope": {
            "description": "Manages API scopes for OAuth applications.\n\nThis resource allows you to grant or revoke API scopes for OAuth2 applications within your organization.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AppOauthApiScope(\"example\", {\n    appId: \"\u003capplication_id\u003e\",\n    issuer: \"\u003cyour org domain\u003e\",\n    scopes: [\n        \"okta.users.read\",\n        \"okta.users.manage\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AppOauthApiScope(\"example\",\n    app_id=\"\u003capplication_id\u003e\",\n    issuer=\"\u003cyour org domain\u003e\",\n    scopes=[\n        \"okta.users.read\",\n        \"okta.users.manage\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.AppOauthApiScope(\"example\", new Okta.AppOauthApiScopeArgs\n        {\n            AppId = \"\u003capplication_id\u003e\",\n            Issuer = \"\u003cyour org domain\u003e\",\n            Scopes = \n            {\n                \"okta.users.read\",\n                \"okta.users.manage\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAppOauthApiScope(ctx, \"example\", \u0026okta.AppOauthApiScopeArgs{\n\t\t\tAppId:  pulumi.String(\"\u003capplication_id\u003e\"),\n\t\t\tIssuer: pulumi.String(\"\u003cyour org domain\u003e\"),\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"okta.users.read\"),\n\t\t\t\tpulumi.String(\"okta.users.manage\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOAuth API scopes can be imported via the Okta Application ID.\n\n```sh\n $ pulumi import okta:index/appOauthApiScope:AppOauthApiScope example \u003capp id\u003e\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "ID of the application.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The issuer of your Org Authorization Server, your Org URL.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of scopes for which consent is granted.\n"
                }
            },
            "required": [
                "appId",
                "issuer",
                "scopes"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "ID of the application.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The issuer of your Org Authorization Server, your Org URL.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of scopes for which consent is granted.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "issuer",
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppOauthApiScope resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "ID of the application.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The issuer of your Org Authorization Server, your Org URL.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of scopes for which consent is granted.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appSharedCredentials:AppSharedCredentials": {
            "description": "Creates a SWA shared credentials app.\n\nThis resource allows you to create and configure SWA shared credentials app.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AppSharedCredentials(\"example\", {\n    accessibilityErrorRedirectUrl: \"https://example.com/redirect_url_1\",\n    accessibilityLoginRedirectUrl: \"https://example.com/redirect_url_2\",\n    accessibilitySelfService: true,\n    autoSubmitToolbar: true,\n    buttonField: \"btn-login\",\n    checkbox: \"checkbox_red\",\n    hideIos: true,\n    label: \"Example App\",\n    passwordField: \"txtbox-password\",\n    redirectUrl: \"https://example.com/redirect_url\",\n    sharedPassword: \"sharedpass\",\n    sharedUsername: \"sharedusername\",\n    status: \"ACTIVE\",\n    url: \"https://example.com/login.html\",\n    userNameTemplate: \"user.firstName\",\n    userNameTemplateSuffix: \"hello\",\n    userNameTemplateType: \"CUSTOM\",\n    usernameField: \"txtbox-username\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AppSharedCredentials(\"example\",\n    accessibility_error_redirect_url=\"https://example.com/redirect_url_1\",\n    accessibility_login_redirect_url=\"https://example.com/redirect_url_2\",\n    accessibility_self_service=True,\n    auto_submit_toolbar=True,\n    button_field=\"btn-login\",\n    checkbox=\"checkbox_red\",\n    hide_ios=True,\n    label=\"Example App\",\n    password_field=\"txtbox-password\",\n    redirect_url=\"https://example.com/redirect_url\",\n    shared_password=\"sharedpass\",\n    shared_username=\"sharedusername\",\n    status=\"ACTIVE\",\n    url=\"https://example.com/login.html\",\n    user_name_template=\"user.firstName\",\n    user_name_template_suffix=\"hello\",\n    user_name_template_type=\"CUSTOM\",\n    username_field=\"txtbox-username\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.AppSharedCredentials(\"example\", new Okta.AppSharedCredentialsArgs\n        {\n            AccessibilityErrorRedirectUrl = \"https://example.com/redirect_url_1\",\n            AccessibilityLoginRedirectUrl = \"https://example.com/redirect_url_2\",\n            AccessibilitySelfService = true,\n            AutoSubmitToolbar = true,\n            ButtonField = \"btn-login\",\n            Checkbox = \"checkbox_red\",\n            HideIos = true,\n            Label = \"Example App\",\n            PasswordField = \"txtbox-password\",\n            RedirectUrl = \"https://example.com/redirect_url\",\n            SharedPassword = \"sharedpass\",\n            SharedUsername = \"sharedusername\",\n            Status = \"ACTIVE\",\n            Url = \"https://example.com/login.html\",\n            UserNameTemplate = \"user.firstName\",\n            UserNameTemplateSuffix = \"hello\",\n            UserNameTemplateType = \"CUSTOM\",\n            UsernameField = \"txtbox-username\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAppSharedCredentials(ctx, \"example\", \u0026okta.AppSharedCredentialsArgs{\n\t\t\tAccessibilityErrorRedirectUrl: pulumi.String(\"https://example.com/redirect_url_1\"),\n\t\t\tAccessibilityLoginRedirectUrl: pulumi.String(\"https://example.com/redirect_url_2\"),\n\t\t\tAccessibilitySelfService:      pulumi.Bool(true),\n\t\t\tAutoSubmitToolbar:             pulumi.Bool(true),\n\t\t\tButtonField:                   pulumi.String(\"btn-login\"),\n\t\t\tCheckbox:                      pulumi.String(\"checkbox_red\"),\n\t\t\tHideIos:                       pulumi.Bool(true),\n\t\t\tLabel:                         pulumi.String(\"Example App\"),\n\t\t\tPasswordField:                 pulumi.String(\"txtbox-password\"),\n\t\t\tRedirectUrl:                   pulumi.String(\"https://example.com/redirect_url\"),\n\t\t\tSharedPassword:                pulumi.String(\"sharedpass\"),\n\t\t\tSharedUsername:                pulumi.String(\"sharedusername\"),\n\t\t\tStatus:                        pulumi.String(\"ACTIVE\"),\n\t\t\tUrl:                           pulumi.String(\"https://example.com/login.html\"),\n\t\t\tUserNameTemplate:              pulumi.String(\"user.firstName\"),\n\t\t\tUserNameTemplateSuffix:        pulumi.String(\"hello\"),\n\t\t\tUserNameTemplateType:          pulumi.String(\"CUSTOM\"),\n\t\t\tUsernameField:                 pulumi.String(\"txtbox-username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta SWA Shared Credentials App can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/appSharedCredentials:AppSharedCredentials example \u003capp id\u003e\n```\n\n ",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "buttonField": {
                    "type": "string",
                    "description": "CSS selector for the Sign-In button in the sign-in form.\n"
                },
                "checkbox": {
                    "type": "string",
                    "description": "CSS selector for the checkbox.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Direct link of application logo.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name assigned to the application by Okta.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "CSS selector for the Password field in the sign-in form.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "Redirect URL.\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Authentication mode of app.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the sign-in page for this app.\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regular expression that further restricts url to the specified regular expression.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `\"${source.login}\"`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `\"BUILT_IN\"`\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "CSS selector for the username field.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppSharedCredentialsUser:AppSharedCredentialsUser"
                    },
                    "description": "Users associated with the application\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "signOnMode"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "buttonField": {
                    "type": "string",
                    "description": "CSS selector for the Sign-In button in the sign-in form.\n"
                },
                "checkbox": {
                    "type": "string",
                    "description": "CSS selector for the checkbox.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups associated with the application\n",
                    "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "CSS selector for the Password field in the sign-in form.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "Redirect URL.\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the sign-in page for this app.\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regular expression that further restricts url to the specified regular expression.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `\"${source.login}\"`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `\"BUILT_IN\"`\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "CSS selector for the username field.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppSharedCredentialsUser:AppSharedCredentialsUser"
                    },
                    "description": "Users associated with the application\n",
                    "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSharedCredentials resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page for this application.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service. By default, it is `false`.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "buttonField": {
                        "type": "string",
                        "description": "CSS selector for the Sign-In button in the sign-in form.\n"
                    },
                    "checkbox": {
                        "type": "string",
                        "description": "CSS selector for the checkbox.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Groups associated with the application\n",
                        "deprecationMessage": "The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality."
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Application logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Direct link of application logo.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name assigned to the application by Okta.\n"
                    },
                    "passwordField": {
                        "type": "string",
                        "description": "CSS selector for the Password field in the sign-in form.\n"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "description": "Redirect URL.\n"
                    },
                    "sharedPassword": {
                        "type": "string",
                        "description": "Shared password, required for certain schemes.\n"
                    },
                    "sharedUsername": {
                        "type": "string",
                        "description": "Shared username, required for certain schemes.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Authentication mode of app.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the sign-in page for this app.\n"
                    },
                    "urlRegex": {
                        "type": "string",
                        "description": "A regular expression that further restricts url to the specified regular expression.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default: `\"${source.login}\"`\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix.\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default: `\"BUILT_IN\"`\n"
                    },
                    "usernameField": {
                        "type": "string",
                        "description": "CSS selector for the username field.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/AppSharedCredentialsUser:AppSharedCredentialsUser"
                        },
                        "description": "Users associated with the application\n",
                        "deprecationMessage": "The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality."
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appUserBaseSchemaProperty:AppUserBaseSchemaProperty": {
            "description": "Manages an Application User Base Schema property.\n\nThis resource allows you to configure a base app user schema property.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AppUserBaseSchemaProperty(\"example\", {\n    appId: \"\u003capp id\u003e\",\n    index: \"customPropertyName\",\n    master: \"OKTA\",\n    title: \"customPropertyName\",\n    type: \"string\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AppUserBaseSchemaProperty(\"example\",\n    app_id=\"\u003capp id\u003e\",\n    index=\"customPropertyName\",\n    master=\"OKTA\",\n    title=\"customPropertyName\",\n    type=\"string\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.AppUserBaseSchemaProperty(\"example\", new Okta.AppUserBaseSchemaPropertyArgs\n        {\n            AppId = \"\u003capp id\u003e\",\n            Index = \"customPropertyName\",\n            Master = \"OKTA\",\n            Title = \"customPropertyName\",\n            Type = \"string\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAppUserBaseSchemaProperty(ctx, \"example\", \u0026okta.AppUserBaseSchemaPropertyArgs{\n\t\t\tAppId:  pulumi.String(\"\u003capp id\u003e\"),\n\t\t\tIndex:  pulumi.String(\"customPropertyName\"),\n\t\t\tMaster: pulumi.String(\"OKTA\"),\n\t\t\tTitle:  pulumi.String(\"customPropertyName\"),\n\t\t\tType:   pulumi.String(\"string\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nApp user base schema property can be imported via the property index and app id.\n\n```sh\n $ pulumi import okta:index/appUserBaseSchemaProperty:AppUserBaseSchemaProperty example \u003capp id\u003e/\u003cproperty name\u003e\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The Application's ID the user schema property should be assigned to.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The property display name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "Custom subschema user type\n"
                }
            },
            "required": [
                "appId",
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The Application's ID the user schema property should be assigned to.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The property display name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "Custom subschema user type\n"
                }
            },
            "requiredInputs": [
                "appId",
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppUserBaseSchemaProperty resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The Application's ID the user schema property should be assigned to.\n"
                    },
                    "index": {
                        "type": "string",
                        "description": "The property name.\n"
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the property is required for this application's users.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The property display name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                    },
                    "userType": {
                        "type": "string",
                        "description": "Custom subschema user type\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appUserSchemaProperty:AppUserSchemaProperty": {
            "description": "Creates an Application User Schema property.\n\nThis resource allows you to create and configure a custom user schema property and associate it with an application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AppUserSchemaProperty(\"example\", {\n    appId: \"\u003capp id\u003e\",\n    description: \"My custom property name\",\n    index: \"customPropertyName\",\n    master: \"OKTA\",\n    scope: \"SELF\",\n    title: \"customPropertyName\",\n    type: \"string\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AppUserSchemaProperty(\"example\",\n    app_id=\"\u003capp id\u003e\",\n    description=\"My custom property name\",\n    index=\"customPropertyName\",\n    master=\"OKTA\",\n    scope=\"SELF\",\n    title=\"customPropertyName\",\n    type=\"string\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.AppUserSchemaProperty(\"example\", new Okta.AppUserSchemaPropertyArgs\n        {\n            AppId = \"\u003capp id\u003e\",\n            Description = \"My custom property name\",\n            Index = \"customPropertyName\",\n            Master = \"OKTA\",\n            Scope = \"SELF\",\n            Title = \"customPropertyName\",\n            Type = \"string\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAppUserSchemaProperty(ctx, \"example\", \u0026okta.AppUserSchemaPropertyArgs{\n\t\t\tAppId:       pulumi.String(\"\u003capp id\u003e\"),\n\t\t\tDescription: pulumi.String(\"My custom property name\"),\n\t\t\tIndex:       pulumi.String(\"customPropertyName\"),\n\t\t\tMaster:      pulumi.String(\"OKTA\"),\n\t\t\tScope:       pulumi.String(\"SELF\"),\n\t\t\tTitle:       pulumi.String(\"customPropertyName\"),\n\t\t\tType:        pulumi.String(\"string\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nApp user schema property can be imported via the property index and app id.\n\n```sh\n $ pulumi import okta:index/appUserSchemaProperty:AppUserSchemaProperty example \u003capp id\u003e/\u003cproperty name\u003e\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The Application's ID the user custom schema property should be assigned to.\n"
                },
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppUserSchemaPropertyArrayOneOf:AppUserSchemaPropertyArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `\"array\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External namespace of the user schema property.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppUserSchemaPropertyOneOf:AppUserSchemaPropertyOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                },
                "union": {
                    "type": "boolean",
                    "description": "Used to assign attribute group priority. Can not be set to 'true' if `scope` is set to Individual level.\n"
                },
                "unique": {
                    "type": "string",
                    "description": "Subschema unique restriction\n"
                },
                "userType": {
                    "type": "string",
                    "description": "Custom subschema user type\n"
                }
            },
            "required": [
                "appId",
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The Application's ID the user custom schema property should be assigned to.\n"
                },
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppUserSchemaPropertyArrayOneOf:AppUserSchemaPropertyArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `\"array\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External namespace of the user schema property.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppUserSchemaPropertyOneOf:AppUserSchemaPropertyOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                },
                "union": {
                    "type": "boolean",
                    "description": "Used to assign attribute group priority. Can not be set to 'true' if `scope` is set to Individual level.\n"
                },
                "unique": {
                    "type": "string",
                    "description": "Subschema unique restriction\n"
                },
                "userType": {
                    "type": "string",
                    "description": "Custom subschema user type\n"
                }
            },
            "requiredInputs": [
                "appId",
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppUserSchemaProperty resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The Application's ID the user custom schema property should be assigned to.\n"
                    },
                    "arrayEnums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values that an array property's items can be set to.\n"
                    },
                    "arrayOneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/AppUserSchemaPropertyArrayOneOf:AppUserSchemaPropertyArrayOneOf"
                        },
                        "description": "Display name and value an enum array can be set to.\n"
                    },
                    "arrayType": {
                        "type": "string",
                        "description": "The type of the array elements if `type` is set to `\"array\"`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the user schema property.\n"
                    },
                    "enums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                    },
                    "externalName": {
                        "type": "string",
                        "description": "External name of the user schema property.\n"
                    },
                    "externalNamespace": {
                        "type": "string",
                        "description": "External namespace of the user schema property.\n"
                    },
                    "index": {
                        "type": "string",
                        "description": "The property name.\n"
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                    },
                    "maxLength": {
                        "type": "integer",
                        "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                    },
                    "minLength": {
                        "type": "integer",
                        "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                    },
                    "oneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/AppUserSchemaPropertyOneOf:AppUserSchemaPropertyOneOf"
                        },
                        "description": "Array of maps containing a mapping for display name to enum value.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the property is required for this application's users.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "display name for the enum value.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                    },
                    "union": {
                        "type": "boolean",
                        "description": "Used to assign attribute group priority. Can not be set to 'true' if `scope` is set to Individual level.\n"
                    },
                    "unique": {
                        "type": "string",
                        "description": "Subschema unique restriction\n"
                    },
                    "userType": {
                        "type": "string",
                        "description": "Custom subschema user type\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/authServerClaimDefault:AuthServerClaimDefault": {
            "description": "Configures Default Authorization Server Claim.\n\nThis resource allows you to configure Default Authorization Server Claims.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AuthServerClaimDefault(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    value: \"(appuser != null) ? appuser.userName : app.clientId\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AuthServerClaimDefault(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    value=\"(appuser != null) ? appuser.userName : app.clientId\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.AuthServerClaimDefault(\"example\", new Okta.AuthServerClaimDefaultArgs\n        {\n            AuthServerId = \"\u003cauth server id\u003e\",\n            Value = \"(appuser != null) ? appuser.userName : app.clientId\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAuthServerClaimDefault(ctx, \"example\", \u0026okta.AuthServerClaimDefaultArgs{\n\t\t\tAuthServerId: pulumi.String(\"\u003cauth server id\u003e\"),\n\t\t\tValue:        pulumi.String(\"(appuser != null) ? appuser.userName : app.clientId\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAuthorization Server Claim can be imported via the Auth Server ID and Claim ID or Claim Name.\n\n```sh\n $ pulumi import okta:index/authServerClaimDefault:AuthServerClaimDefault example \u003cauth server id\u003e/\u003cclaim id\u003e\n```\n\n or\n\n```sh\n $ pulumi import okta:index/authServerClaimDefault:AuthServerClaimDefault example \u003cauth server id\u003e/\u003cclaim name\u003e\n```\n\n ",
            "properties": {
                "alwaysIncludeInToken": {
                    "type": "boolean",
                    "description": "Specifies whether to include claims in token.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "ID of the authorization server.\n"
                },
                "claimType": {
                    "type": "string",
                    "description": "Specifies whether the claim is for an access token `\"RESOURCE\"` or ID token `\"IDENTITY\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the claim. Can be set to `\"sub\"`, `\"address\"`, `\"birthdate\"`, `\"email\"`,\n`\"email_verified\"`, `\"family_name\"`, `\"gender\"`, `\"given_name\"`, `\"locale\"`, `\"middle_name\"`, `\"name\"`, `\"nickname\"`,\n`\"phone_number\"`, `\"picture\"`, `\"preferred_username\"`, `\"profile\"`, `\"updated_at\"`, `\"website\"`, `\"zoneinfo\"`.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of scopes the auth server claim is tied to.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the claim. Only required for `\"sub\"` claim.\n"
                },
                "valueType": {
                    "type": "string",
                    "description": "The type of value of the claim.\n"
                }
            },
            "required": [
                "alwaysIncludeInToken",
                "authServerId",
                "claimType",
                "name",
                "scopes",
                "status",
                "valueType"
            ],
            "inputProperties": {
                "authServerId": {
                    "type": "string",
                    "description": "ID of the authorization server.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the claim. Can be set to `\"sub\"`, `\"address\"`, `\"birthdate\"`, `\"email\"`,\n`\"email_verified\"`, `\"family_name\"`, `\"gender\"`, `\"given_name\"`, `\"locale\"`, `\"middle_name\"`, `\"name\"`, `\"nickname\"`,\n`\"phone_number\"`, `\"picture\"`, `\"preferred_username\"`, `\"profile\"`, `\"updated_at\"`, `\"website\"`, `\"zoneinfo\"`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the claim. Only required for `\"sub\"` claim.\n"
                }
            },
            "requiredInputs": [
                "authServerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthServerClaimDefault resources.\n",
                "properties": {
                    "alwaysIncludeInToken": {
                        "type": "boolean",
                        "description": "Specifies whether to include claims in token.\n"
                    },
                    "authServerId": {
                        "type": "string",
                        "description": "ID of the authorization server.\n"
                    },
                    "claimType": {
                        "type": "string",
                        "description": "Specifies whether the claim is for an access token `\"RESOURCE\"` or ID token `\"IDENTITY\"`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the claim. Can be set to `\"sub\"`, `\"address\"`, `\"birthdate\"`, `\"email\"`,\n`\"email_verified\"`, `\"family_name\"`, `\"gender\"`, `\"given_name\"`, `\"locale\"`, `\"middle_name\"`, `\"name\"`, `\"nickname\"`,\n`\"phone_number\"`, `\"picture\"`, `\"preferred_username\"`, `\"profile\"`, `\"updated_at\"`, `\"website\"`, `\"zoneinfo\"`.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of scopes the auth server claim is tied to.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the application.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the claim. Only required for `\"sub\"` claim.\n"
                    },
                    "valueType": {
                        "type": "string",
                        "description": "The type of value of the claim.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/authServerDefault:AuthServerDefault": {
            "description": "Configures Default Authorization Server.\n\nThis resource allows you to configure Default Authorization Server.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AuthServerDefault(\"example\", {});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AuthServerDefault(\"example\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.AuthServerDefault(\"example\", new Okta.AuthServerDefaultArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAuthServerDefault(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAuthorization Server can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/authServerDefault:AuthServerDefault example \u003cauth server name\u003e\n```\n\n ",
            "properties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token.\n"
                },
                "credentialsLastRotated": {
                    "type": "string",
                    "description": "The timestamp when the authorization server started to use the `kid` for signing tokens.\n"
                },
                "credentialsNextRotation": {
                    "type": "string",
                    "description": "The timestamp when the authorization server changes the key for signing tokens. Only returned when `credentials_rotation_mode` is `\"AUTO\"`.\n"
                },
                "credentialsRotationMode": {
                    "type": "string",
                    "description": "The key rotation mode for the authorization server. Can be `\"AUTO\"` or `\"MANUAL\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the authorization server.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The complete URL for a Custom Authorization Server. This becomes the `iss` claim in an access token.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Allows you to use a custom issuer URL. It can be set to `\"CUSTOM_URL\"` or `\"ORG_URL\"`\n"
                },
                "kid": {
                    "type": "string",
                    "description": "The ID of the JSON Web Key used for signing tokens issued by the authorization server.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the authorization server.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the auth server.\n"
                }
            },
            "required": [
                "credentialsLastRotated",
                "credentialsNextRotation",
                "issuer",
                "kid",
                "name"
            ],
            "inputProperties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token.\n"
                },
                "credentialsRotationMode": {
                    "type": "string",
                    "description": "The key rotation mode for the authorization server. Can be `\"AUTO\"` or `\"MANUAL\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the authorization server.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Allows you to use a custom issuer URL. It can be set to `\"CUSTOM_URL\"` or `\"ORG_URL\"`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the authorization server.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the auth server.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthServerDefault resources.\n",
                "properties": {
                    "audiences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token.\n"
                    },
                    "credentialsLastRotated": {
                        "type": "string",
                        "description": "The timestamp when the authorization server started to use the `kid` for signing tokens.\n"
                    },
                    "credentialsNextRotation": {
                        "type": "string",
                        "description": "The timestamp when the authorization server changes the key for signing tokens. Only returned when `credentials_rotation_mode` is `\"AUTO\"`.\n"
                    },
                    "credentialsRotationMode": {
                        "type": "string",
                        "description": "The key rotation mode for the authorization server. Can be `\"AUTO\"` or `\"MANUAL\"`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the authorization server.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The complete URL for a Custom Authorization Server. This becomes the `iss` claim in an access token.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Allows you to use a custom issuer URL. It can be set to `\"CUSTOM_URL\"` or `\"ORG_URL\"`\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "The ID of the JSON Web Key used for signing tokens issued by the authorization server.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the authorization server.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the auth server.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/behaviour:Behaviour": {
            "description": "Creates different types of behavior.\n\nThis resource allows you to create and configure a behavior.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst myLocation = new okta.Behaviour(\"my_location\", {\n    locationGranularityType: \"LAT_LONG\",\n    numberOfAuthentications: 50,\n    radiusFromLocation: 20,\n    type: \"ANOMALOUS_LOCATION\",\n});\nconst myCity = new okta.Behaviour(\"my_city\", {\n    locationGranularityType: \"CITY\",\n    numberOfAuthentications: 50,\n    type: \"ANOMALOUS_LOCATION\",\n});\nconst myDevice = new okta.Behaviour(\"my_device\", {\n    numberOfAuthentications: 50,\n    type: \"ANOMALOUS_DEVICE\",\n});\nconst myIp = new okta.Behaviour(\"my_ip\", {\n    numberOfAuthentications: 50,\n    type: \"ANOMALOUS_IP\",\n});\nconst myVelocity = new okta.Behaviour(\"my_velocity\", {\n    type: \"VELOCITY\",\n    velocity: 25,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nmy_location = okta.Behaviour(\"myLocation\",\n    location_granularity_type=\"LAT_LONG\",\n    number_of_authentications=50,\n    radius_from_location=20,\n    type=\"ANOMALOUS_LOCATION\")\nmy_city = okta.Behaviour(\"myCity\",\n    location_granularity_type=\"CITY\",\n    number_of_authentications=50,\n    type=\"ANOMALOUS_LOCATION\")\nmy_device = okta.Behaviour(\"myDevice\",\n    number_of_authentications=50,\n    type=\"ANOMALOUS_DEVICE\")\nmy_ip = okta.Behaviour(\"myIp\",\n    number_of_authentications=50,\n    type=\"ANOMALOUS_IP\")\nmy_velocity = okta.Behaviour(\"myVelocity\",\n    type=\"VELOCITY\",\n    velocity=25)\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myLocation = new Okta.Behaviour(\"myLocation\", new Okta.BehaviourArgs\n        {\n            LocationGranularityType = \"LAT_LONG\",\n            NumberOfAuthentications = 50,\n            RadiusFromLocation = 20,\n            Type = \"ANOMALOUS_LOCATION\",\n        });\n        var myCity = new Okta.Behaviour(\"myCity\", new Okta.BehaviourArgs\n        {\n            LocationGranularityType = \"CITY\",\n            NumberOfAuthentications = 50,\n            Type = \"ANOMALOUS_LOCATION\",\n        });\n        var myDevice = new Okta.Behaviour(\"myDevice\", new Okta.BehaviourArgs\n        {\n            NumberOfAuthentications = 50,\n            Type = \"ANOMALOUS_DEVICE\",\n        });\n        var myIp = new Okta.Behaviour(\"myIp\", new Okta.BehaviourArgs\n        {\n            NumberOfAuthentications = 50,\n            Type = \"ANOMALOUS_IP\",\n        });\n        var myVelocity = new Okta.Behaviour(\"myVelocity\", new Okta.BehaviourArgs\n        {\n            Type = \"VELOCITY\",\n            Velocity = 25,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewBehaviour(ctx, \"myLocation\", \u0026okta.BehaviourArgs{\n\t\t\tLocationGranularityType: pulumi.String(\"LAT_LONG\"),\n\t\t\tNumberOfAuthentications: pulumi.Int(50),\n\t\t\tRadiusFromLocation:      pulumi.Int(20),\n\t\t\tType:                    pulumi.String(\"ANOMALOUS_LOCATION\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewBehaviour(ctx, \"myCity\", \u0026okta.BehaviourArgs{\n\t\t\tLocationGranularityType: pulumi.String(\"CITY\"),\n\t\t\tNumberOfAuthentications: pulumi.Int(50),\n\t\t\tType:                    pulumi.String(\"ANOMALOUS_LOCATION\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewBehaviour(ctx, \"myDevice\", \u0026okta.BehaviourArgs{\n\t\t\tNumberOfAuthentications: pulumi.Int(50),\n\t\t\tType:                    pulumi.String(\"ANOMALOUS_DEVICE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewBehaviour(ctx, \"myIp\", \u0026okta.BehaviourArgs{\n\t\t\tNumberOfAuthentications: pulumi.Int(50),\n\t\t\tType:                    pulumi.String(\"ANOMALOUS_IP\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewBehaviour(ctx, \"myVelocity\", \u0026okta.BehaviourArgs{\n\t\t\tType:     pulumi.String(\"VELOCITY\"),\n\t\t\tVelocity: pulumi.Int(25),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nBehavior can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/behaviour:Behaviour example \u003cbehavior id\u003e\n```\n\n ",
            "properties": {
                "locationGranularityType": {
                    "type": "string",
                    "description": "Determines the method and level of detail used to evaluate the behavior.\nRequired for `\"ANOMALOUS_LOCATION\"` behavior type. Can be set to `\"LAT_LONG\"`, `\"CITY\"`, `\"COUNTRY\"`\nor `\"SUBDIVISION\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the behavior.\n"
                },
                "numberOfAuthentications": {
                    "type": "integer",
                    "description": "The number of recent authentications used to evaluate the behavior. Required\nfor `\"ANOMALOUS_LOCATION\"`, `\"ANOMALOUS_DEVICE\"` and `\"ANOMALOUS_IP\"` behavior types.\n"
                },
                "radiusFromLocation": {
                    "type": "integer",
                    "description": "Radius from location (in kilometers). Should be at least 5. Required\nwhen `location_granularity_type` is set to `\"LAT_LONG\"`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the behavior. By default, it is`\"ACTIVE\"`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the behavior. Can be set to `\"ANOMALOUS_LOCATION\"`, `\"ANOMALOUS_DEVICE\"`, `\"ANOMALOUS_IP\"`\nor `\"VELOCITY\"`. Resource will be recreated when the type changes.\n"
                },
                "velocity": {
                    "type": "integer",
                    "description": "Velocity (in kilometers per hour). Should be at least 1. Required for `\"VELOCITY\"` behavior\ntype.\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "locationGranularityType": {
                    "type": "string",
                    "description": "Determines the method and level of detail used to evaluate the behavior.\nRequired for `\"ANOMALOUS_LOCATION\"` behavior type. Can be set to `\"LAT_LONG\"`, `\"CITY\"`, `\"COUNTRY\"`\nor `\"SUBDIVISION\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the behavior.\n"
                },
                "numberOfAuthentications": {
                    "type": "integer",
                    "description": "The number of recent authentications used to evaluate the behavior. Required\nfor `\"ANOMALOUS_LOCATION\"`, `\"ANOMALOUS_DEVICE\"` and `\"ANOMALOUS_IP\"` behavior types.\n"
                },
                "radiusFromLocation": {
                    "type": "integer",
                    "description": "Radius from location (in kilometers). Should be at least 5. Required\nwhen `location_granularity_type` is set to `\"LAT_LONG\"`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the behavior. By default, it is`\"ACTIVE\"`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the behavior. Can be set to `\"ANOMALOUS_LOCATION\"`, `\"ANOMALOUS_DEVICE\"`, `\"ANOMALOUS_IP\"`\nor `\"VELOCITY\"`. Resource will be recreated when the type changes.\n"
                },
                "velocity": {
                    "type": "integer",
                    "description": "Velocity (in kilometers per hour). Should be at least 1. Required for `\"VELOCITY\"` behavior\ntype.\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Behaviour resources.\n",
                "properties": {
                    "locationGranularityType": {
                        "type": "string",
                        "description": "Determines the method and level of detail used to evaluate the behavior.\nRequired for `\"ANOMALOUS_LOCATION\"` behavior type. Can be set to `\"LAT_LONG\"`, `\"CITY\"`, `\"COUNTRY\"`\nor `\"SUBDIVISION\"`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the behavior.\n"
                    },
                    "numberOfAuthentications": {
                        "type": "integer",
                        "description": "The number of recent authentications used to evaluate the behavior. Required\nfor `\"ANOMALOUS_LOCATION\"`, `\"ANOMALOUS_DEVICE\"` and `\"ANOMALOUS_IP\"` behavior types.\n"
                    },
                    "radiusFromLocation": {
                        "type": "integer",
                        "description": "Radius from location (in kilometers). Should be at least 5. Required\nwhen `location_granularity_type` is set to `\"LAT_LONG\"`.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the behavior. By default, it is`\"ACTIVE\"`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the behavior. Can be set to `\"ANOMALOUS_LOCATION\"`, `\"ANOMALOUS_DEVICE\"`, `\"ANOMALOUS_IP\"`\nor `\"VELOCITY\"`. Resource will be recreated when the type changes.\n"
                    },
                    "velocity": {
                        "type": "integer",
                        "description": "Velocity (in kilometers per hour). Should be at least 1. Required for `\"VELOCITY\"` behavior\ntype.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/domain:Domain": {
            "description": "Manages custom domain for your organization.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.Domain(\"example\", {\n    verify: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.Domain(\"example\", verify=True)\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Domain(\"example\", new Okta.DomainArgs\n        {\n            Verify = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewDomain(ctx, \"example\", \u0026okta.DomainArgs{\n\t\t\tVerify: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta Admin Role Targets can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/domain:Domain example \u003cdomain_id\u003e\n```\n\n ",
            "properties": {
                "dnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/DomainDnsRecord:DomainDnsRecord"
                    },
                    "description": "TXT and CNAME records to be registered for the Domain.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Custom Domain name.\n"
                },
                "validationStatus": {
                    "type": "string",
                    "description": "Status of the domain.\n"
                },
                "verify": {
                    "type": "boolean",
                    "description": "Indicates whether the domain should be verified.\n"
                }
            },
            "required": [
                "dnsRecords",
                "name",
                "validationStatus"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Custom Domain name.\n"
                },
                "verify": {
                    "type": "boolean",
                    "description": "Indicates whether the domain should be verified.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Domain resources.\n",
                "properties": {
                    "dnsRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/DomainDnsRecord:DomainDnsRecord"
                        },
                        "description": "TXT and CNAME records to be registered for the Domain.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Custom Domain name.\n"
                    },
                    "validationStatus": {
                        "type": "string",
                        "description": "Status of the domain.\n"
                    },
                    "verify": {
                        "type": "boolean",
                        "description": "Indicates whether the domain should be verified.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/eventHook:EventHook": {
            "description": "Creates an event hook.\n\nThis resource allows you to create and configure an event hook.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.EventHook(\"example\", {\n    auth: {\n        key: \"Authorization\",\n        type: \"HEADER\",\n        value: \"123\",\n    },\n    channel: {\n        type: \"HTTP\",\n        uri: \"https://example.com/test\",\n        version: \"1.0.0\",\n    },\n    events: [\n        \"user.lifecycle.create\",\n        \"user.lifecycle.delete.initiated\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.EventHook(\"example\",\n    auth={\n        \"key\": \"Authorization\",\n        \"type\": \"HEADER\",\n        \"value\": \"123\",\n    },\n    channel={\n        \"type\": \"HTTP\",\n        \"uri\": \"https://example.com/test\",\n        \"version\": \"1.0.0\",\n    },\n    events=[\n        \"user.lifecycle.create\",\n        \"user.lifecycle.delete.initiated\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.EventHook(\"example\", new Okta.EventHookArgs\n        {\n            Auth = \n            {\n                { \"key\", \"Authorization\" },\n                { \"type\", \"HEADER\" },\n                { \"value\", \"123\" },\n            },\n            Channel = \n            {\n                { \"type\", \"HTTP\" },\n                { \"uri\", \"https://example.com/test\" },\n                { \"version\", \"1.0.0\" },\n            },\n            Events = \n            {\n                \"user.lifecycle.create\",\n                \"user.lifecycle.delete.initiated\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewEventHook(ctx, \"example\", \u0026okta.EventHookArgs{\n\t\t\tAuth: pulumi.StringMap{\n\t\t\t\t\"key\":   pulumi.String(\"Authorization\"),\n\t\t\t\t\"type\":  pulumi.String(\"HEADER\"),\n\t\t\t\t\"value\": pulumi.String(\"123\"),\n\t\t\t},\n\t\t\tChannel: pulumi.StringMap{\n\t\t\t\t\"type\":    pulumi.String(\"HTTP\"),\n\t\t\t\t\"uri\":     pulumi.String(\"https://example.com/test\"),\n\t\t\t\t\"version\": pulumi.String(\"1.0.0\"),\n\t\t\t},\n\t\t\tEvents: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user.lifecycle.create\"),\n\t\t\t\tpulumi.String(\"user.lifecycle.delete.initiated\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn event hook can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/eventHook:EventHook example \u003chook id\u003e\n```\n\n ",
            "properties": {
                "auth": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Authentication required for event hook request.\n"
                },
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Details of the endpoint the event hook will hit.\n"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The events that will be delivered to this hook. [See here for a list of supported events](https://developer.okta.com/docs/reference/api/event-types/?q=event-hook-eligible).\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/EventHookHeader:EventHookHeader"
                    },
                    "description": "Map of headers to send along in event hook request.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The event hook display name.\n"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "channel",
                "events",
                "name"
            ],
            "inputProperties": {
                "auth": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Authentication required for event hook request.\n"
                },
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Details of the endpoint the event hook will hit.\n"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The events that will be delivered to this hook. [See here for a list of supported events](https://developer.okta.com/docs/reference/api/event-types/?q=event-hook-eligible).\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/EventHookHeader:EventHookHeader"
                    },
                    "description": "Map of headers to send along in event hook request.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The event hook display name.\n"
                },
                "status": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "channel",
                "events"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EventHook resources.\n",
                "properties": {
                    "auth": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Authentication required for event hook request.\n"
                    },
                    "channel": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Details of the endpoint the event hook will hit.\n"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The events that will be delivered to this hook. [See here for a list of supported events](https://developer.okta.com/docs/reference/api/event-types/?q=event-hook-eligible).\n"
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/EventHookHeader:EventHookHeader"
                        },
                        "description": "Map of headers to send along in event hook request.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The event hook display name.\n"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/factorTotp:FactorTotp": {
            "description": "Allows you to manage the time-based one-time password (TOTP) factors. A time-based one-time password (TOTP) is a\ntemporary passcode that is generated for user authentication. Examples of TOTP include hardware authenticators and\nmobile app authenticators.\n\nOnce saved, the settings cannot be changed (except for the `name` field). Any other change would force resource\nrecreation.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.FactorTotp(\"example\", {\n    clockDriftInterval: 10,\n    hmacAlgorithm: \"HMacSHA256\",\n    otpLength: 10,\n    sharedSecretEncoding: \"hexadecimal\",\n    timeStep: 30,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.FactorTotp(\"example\",\n    clock_drift_interval=10,\n    hmac_algorithm=\"HMacSHA256\",\n    otp_length=10,\n    shared_secret_encoding=\"hexadecimal\",\n    time_step=30)\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.FactorTotp(\"example\", new Okta.FactorTotpArgs\n        {\n            ClockDriftInterval = 10,\n            HmacAlgorithm = \"HMacSHA256\",\n            OtpLength = 10,\n            SharedSecretEncoding = \"hexadecimal\",\n            TimeStep = 30,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewFactorTotp(ctx, \"example\", \u0026okta.FactorTotpArgs{\n\t\t\tClockDriftInterval:   pulumi.Int(10),\n\t\t\tHmacAlgorithm:        pulumi.String(\"HMacSHA256\"),\n\t\t\tOtpLength:            pulumi.Int(10),\n\t\t\tSharedSecretEncoding: pulumi.String(\"hexadecimal\"),\n\t\t\tTimeStep:             pulumi.Int(30),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "clockDriftInterval": {
                    "type": "integer",
                    "description": "- Clock drift interval. This setting allows you to build in tolerance for any\ndrift between the token's current time and the server's current time. Valid values: `3`, `5`, `10`. Default is `3`.\n"
                },
                "hmacAlgorithm": {
                    "type": "string",
                    "description": "- HMAC Algorithm. Valid values: `\"HMacSHA1\"`, `\"HMacSHA256\"`, `\"HMacSHA512\"`. Default\nis `\"HMacSHA512\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The TOTP name.\n"
                },
                "otpLength": {
                    "type": "integer",
                    "description": "Length of the password. Default is `6`.\n"
                },
                "sharedSecretEncoding": {
                    "type": "string",
                    "description": "- Shared secret encoding. Valid values: `\"base32\"`, `\"base64\"`, `\"hexadecimal\"`.\nDefault is `\"base32\"`.\n"
                },
                "timeStep": {
                    "type": "integer",
                    "description": "- Time step in seconds. Valid values: `15`, `30`, `60`. Default is `15`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "clockDriftInterval": {
                    "type": "integer",
                    "description": "- Clock drift interval. This setting allows you to build in tolerance for any\ndrift between the token's current time and the server's current time. Valid values: `3`, `5`, `10`. Default is `3`.\n"
                },
                "hmacAlgorithm": {
                    "type": "string",
                    "description": "- HMAC Algorithm. Valid values: `\"HMacSHA1\"`, `\"HMacSHA256\"`, `\"HMacSHA512\"`. Default\nis `\"HMacSHA512\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The TOTP name.\n"
                },
                "otpLength": {
                    "type": "integer",
                    "description": "Length of the password. Default is `6`.\n"
                },
                "sharedSecretEncoding": {
                    "type": "string",
                    "description": "- Shared secret encoding. Valid values: `\"base32\"`, `\"base64\"`, `\"hexadecimal\"`.\nDefault is `\"base32\"`.\n"
                },
                "timeStep": {
                    "type": "integer",
                    "description": "- Time step in seconds. Valid values: `15`, `30`, `60`. Default is `15`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FactorTotp resources.\n",
                "properties": {
                    "clockDriftInterval": {
                        "type": "integer",
                        "description": "- Clock drift interval. This setting allows you to build in tolerance for any\ndrift between the token's current time and the server's current time. Valid values: `3`, `5`, `10`. Default is `3`.\n"
                    },
                    "hmacAlgorithm": {
                        "type": "string",
                        "description": "- HMAC Algorithm. Valid values: `\"HMacSHA1\"`, `\"HMacSHA256\"`, `\"HMacSHA512\"`. Default\nis `\"HMacSHA512\"`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The TOTP name.\n"
                    },
                    "otpLength": {
                        "type": "integer",
                        "description": "Length of the password. Default is `6`.\n"
                    },
                    "sharedSecretEncoding": {
                        "type": "string",
                        "description": "- Shared secret encoding. Valid values: `\"base32\"`, `\"base64\"`, `\"hexadecimal\"`.\nDefault is `\"base32\"`.\n"
                    },
                    "timeStep": {
                        "type": "integer",
                        "description": "- Time step in seconds. Valid values: `15`, `30`, `60`. Default is `15`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/groupMemberships:GroupMemberships": {
            "description": "Resource to manage a set of memberships for a specific group.\n\nThis resource will allow you to bulk manage group membership in Okta for a given group. This offers an interface to pass multiple users into a single resource call, for better API resource usage. Effectively this is the same as using the `okta.group.Membership` resource several times with a single group and many different users. If you need a relationship of a single user to many groups, please use the `okta.UserGroupMemberships` resource.\n\nWhen using this with a `okta.user.User` resource, you should add a lifecycle ignore for group memberships to avoid conflicts in desired state.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst testGroup = new okta.group.Group(\"testGroup\", {description: \"testing, testing\"});\nconst testGroupMemberships = new okta.GroupMemberships(\"testGroupMemberships\", {\n    groupId: testGroup.id,\n    users: [\n        okta_user.test1.id,\n        okta_user.test2.id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest_group = okta.group.Group(\"testGroup\", description=\"testing, testing\")\ntest_group_memberships = okta.GroupMemberships(\"testGroupMemberships\",\n    group_id=test_group.id,\n    users=[\n        okta_user[\"test1\"][\"id\"],\n        okta_user[\"test2\"][\"id\"],\n    ])\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var testGroup = new Okta.Group.Group(\"testGroup\", new Okta.Group.GroupArgs\n        {\n            Description = \"testing, testing\",\n        });\n        var testGroupMemberships = new Okta.GroupMemberships(\"testGroupMemberships\", new Okta.GroupMembershipsArgs\n        {\n            GroupId = testGroup.Id,\n            Users = \n            {\n                okta_user.Test1.Id,\n                okta_user.Test2.Id,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestGroup, err := group.NewGroup(ctx, \"testGroup\", \u0026group.GroupArgs{\n\t\t\tDescription: pulumi.String(\"testing, testing\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewGroupMemberships(ctx, \"testGroupMemberships\", \u0026okta.GroupMembershipsArgs{\n\t\t\tGroupId: testGroup.ID(),\n\t\t\tUsers: pulumi.StringArray{\n\t\t\t\tpulumi.Any(okta_user.Test1.Id),\n\t\t\t\tpulumi.Any(okta_user.Test2.Id),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "ID of a Okta group.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta user IDs which the group should have membership managed for.\n"
                }
            },
            "required": [
                "groupId",
                "users"
            ],
            "inputProperties": {
                "groupId": {
                    "type": "string",
                    "description": "ID of a Okta group.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta user IDs which the group should have membership managed for.\n"
                }
            },
            "requiredInputs": [
                "groupId",
                "users"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GroupMemberships resources.\n",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "description": "ID of a Okta group.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of Okta user IDs which the group should have membership managed for.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/policyMfaDefault:PolicyMfaDefault": {
            "description": "Configures default MFA Policy.\n\nThis resource allows you to configure default MFA Policy. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst defaultPolicyMfaDefault = new okta.PolicyMfaDefault(\"default\", {});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ndefault = okta.PolicyMfaDefault(\"default\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var @default = new Okta.PolicyMfaDefault(\"default\", new Okta.PolicyMfaDefaultArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewPolicyMfaDefault(ctx, \"_default\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nDefault MFA Policy can be imported without providing Okta ID.\n\n```sh\n $ pulumi import okta:index/policyMfaDefault:PolicyMfaDefault example .\n```\n\n ",
            "properties": {
                "defaultIncludedGroupId": {
                    "type": "string",
                    "description": "ID of the default Okta group.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Default policy description.\n"
                },
                "duo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "DUO MFA policy settings.\n"
                },
                "fidoU2f": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Fido U2F MFA policy settings.\n"
                },
                "fidoWebauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Fido Web Authn MFA policy settings.\n"
                },
                "googleOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Google OTP MFA policy settings.\n"
                },
                "hotp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "HMAC-based One-Time Password MFA policy settings.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Default policy name.\n"
                },
                "oktaCall": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Call MFA policy settings.\n"
                },
                "oktaEmail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Email MFA policy settings.\n"
                },
                "oktaOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta OTP MFA policy settings.\n"
                },
                "oktaPassword": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Password MFA policy settings.\n"
                },
                "oktaPush": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Push MFA policy settings.\n"
                },
                "oktaQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Question MFA policy settings.\n"
                },
                "oktaSms": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta SMS MFA policy settings.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Default policy priority.\n"
                },
                "rsaToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "RSA Token MFA policy settings.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default policy status.\n"
                },
                "symantecVip": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Symantec VIP MFA policy settings.\n"
                },
                "yubikeyToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Yubikey Token MFA policy settings.\n"
                }
            },
            "required": [
                "defaultIncludedGroupId",
                "description",
                "name",
                "priority",
                "status"
            ],
            "inputProperties": {
                "duo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "DUO MFA policy settings.\n"
                },
                "fidoU2f": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Fido U2F MFA policy settings.\n"
                },
                "fidoWebauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Fido Web Authn MFA policy settings.\n"
                },
                "googleOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Google OTP MFA policy settings.\n"
                },
                "hotp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "HMAC-based One-Time Password MFA policy settings.\n"
                },
                "oktaCall": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Call MFA policy settings.\n"
                },
                "oktaEmail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Email MFA policy settings.\n"
                },
                "oktaOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta OTP MFA policy settings.\n"
                },
                "oktaPassword": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Password MFA policy settings.\n"
                },
                "oktaPush": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Push MFA policy settings.\n"
                },
                "oktaQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Question MFA policy settings.\n"
                },
                "oktaSms": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta SMS MFA policy settings.\n"
                },
                "rsaToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "RSA Token MFA policy settings.\n"
                },
                "symantecVip": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Symantec VIP MFA policy settings.\n"
                },
                "yubikeyToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Yubikey Token MFA policy settings.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyMfaDefault resources.\n",
                "properties": {
                    "defaultIncludedGroupId": {
                        "type": "string",
                        "description": "ID of the default Okta group.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Default policy description.\n"
                    },
                    "duo": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "DUO MFA policy settings.\n"
                    },
                    "fidoU2f": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Fido U2F MFA policy settings.\n"
                    },
                    "fidoWebauthn": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Fido Web Authn MFA policy settings.\n"
                    },
                    "googleOtp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Google OTP MFA policy settings.\n"
                    },
                    "hotp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "HMAC-based One-Time Password MFA policy settings.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Default policy name.\n"
                    },
                    "oktaCall": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Call MFA policy settings.\n"
                    },
                    "oktaEmail": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Email MFA policy settings.\n"
                    },
                    "oktaOtp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta OTP MFA policy settings.\n"
                    },
                    "oktaPassword": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Password MFA policy settings.\n"
                    },
                    "oktaPush": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Push MFA policy settings.\n"
                    },
                    "oktaQuestion": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Question MFA policy settings.\n"
                    },
                    "oktaSms": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta SMS MFA policy settings.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Default policy priority.\n"
                    },
                    "rsaToken": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "RSA Token MFA policy settings.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default policy status.\n"
                    },
                    "symantecVip": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Symantec VIP MFA policy settings.\n"
                    },
                    "yubikeyToken": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Yubikey Token MFA policy settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/policyPasswordDefault:PolicyPasswordDefault": {
            "description": "Configures default password policy.\n\nThis resource allows you to configure default password policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst defaultPolicyPasswordDefault = new okta.PolicyPasswordDefault(\"default\", {});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ndefault = okta.PolicyPasswordDefault(\"default\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var @default = new Okta.PolicyPasswordDefault(\"default\", new Okta.PolicyPasswordDefaultArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewPolicyPasswordDefault(ctx, \"_default\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nDefault Password Policy can be imported without providing Okta ID.\n\n```sh\n $ pulumi import okta:index/policyPasswordDefault:PolicyPasswordDefault example .\n```\n\n ",
            "properties": {
                "callRecovery": {
                    "type": "string",
                    "description": "Enable or disable voice call password recovery: ACTIVE or INACTIVE.\n"
                },
                "defaultAuthProvider": {
                    "type": "string",
                    "description": "Default authentication provider.\n"
                },
                "defaultIncludedGroupId": {
                    "type": "string",
                    "description": "ID of the default Okta group.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Default policy description.\n"
                },
                "emailRecovery": {
                    "type": "string",
                    "description": "Enable or disable email password recovery: ACTIVE or INACTIVE.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Default policy name.\n"
                },
                "passwordAutoUnlockMinutes": {
                    "type": "integer",
                    "description": "Number of minutes before a locked account is unlocked: 0 = no limit.\n"
                },
                "passwordDictionaryLookup": {
                    "type": "boolean",
                    "description": "Check Passwords Against Common Password Dictionary.\n"
                },
                "passwordExcludeFirstName": {
                    "type": "boolean",
                    "description": "User firstName attribute must be excluded from the password.\n"
                },
                "passwordExcludeLastName": {
                    "type": "boolean",
                    "description": "User lastName attribute must be excluded from the password.\n"
                },
                "passwordExcludeUsername": {
                    "type": "boolean",
                    "description": "If the username must be excluded from the password.\n"
                },
                "passwordExpireWarnDays": {
                    "type": "integer",
                    "description": "Length in days a user will be warned before password expiry: 0 = no warning.\n"
                },
                "passwordHistoryCount": {
                    "type": "integer",
                    "description": "Number of distinct passwords that must be created before they can be reused: 0 =\nnone.\n"
                },
                "passwordLockoutNotificationChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification channels to use to notify a user when their account\nhas been locked.\n"
                },
                "passwordMaxAgeDays": {
                    "type": "integer",
                    "description": "Length in days a password is valid before expiry: 0 = no limit.,\n"
                },
                "passwordMaxLockoutAttempts": {
                    "type": "integer",
                    "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no\nlimit.\n"
                },
                "passwordMinAgeMinutes": {
                    "type": "integer",
                    "description": "Minimum time interval in minutes between password changes: 0 = no limit.\n"
                },
                "passwordMinLength": {
                    "type": "integer",
                    "description": "Minimum password length. Default is 8.\n"
                },
                "passwordMinLowercase": {
                    "type": "integer",
                    "description": "Minimum number of lower case characters in a password.\n"
                },
                "passwordMinNumber": {
                    "type": "integer",
                    "description": "Minimum number of numbers in a password.\n"
                },
                "passwordMinSymbol": {
                    "type": "integer",
                    "description": "Minimum number of symbols in a password.\n"
                },
                "passwordMinUppercase": {
                    "type": "integer",
                    "description": "Minimum number of upper case characters in a password.\n"
                },
                "passwordShowLockoutFailures": {
                    "type": "boolean",
                    "description": "If a user should be informed when their account is locked.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Default policy priority.\n"
                },
                "questionMinLength": {
                    "type": "integer",
                    "description": "Min length of the password recovery question answer.\n"
                },
                "questionRecovery": {
                    "type": "string",
                    "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE.\n"
                },
                "recoveryEmailToken": {
                    "type": "integer",
                    "description": "Lifetime in minutes of the recovery email token.\n"
                },
                "skipUnlock": {
                    "type": "boolean",
                    "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also\nattempt to unlock the user's Windows account.\n"
                },
                "smsRecovery": {
                    "type": "string",
                    "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default policy status.\n"
                }
            },
            "required": [
                "defaultAuthProvider",
                "defaultIncludedGroupId",
                "description",
                "name",
                "priority",
                "status"
            ],
            "inputProperties": {
                "callRecovery": {
                    "type": "string",
                    "description": "Enable or disable voice call password recovery: ACTIVE or INACTIVE.\n"
                },
                "emailRecovery": {
                    "type": "string",
                    "description": "Enable or disable email password recovery: ACTIVE or INACTIVE.\n"
                },
                "passwordAutoUnlockMinutes": {
                    "type": "integer",
                    "description": "Number of minutes before a locked account is unlocked: 0 = no limit.\n"
                },
                "passwordDictionaryLookup": {
                    "type": "boolean",
                    "description": "Check Passwords Against Common Password Dictionary.\n"
                },
                "passwordExcludeFirstName": {
                    "type": "boolean",
                    "description": "User firstName attribute must be excluded from the password.\n"
                },
                "passwordExcludeLastName": {
                    "type": "boolean",
                    "description": "User lastName attribute must be excluded from the password.\n"
                },
                "passwordExcludeUsername": {
                    "type": "boolean",
                    "description": "If the username must be excluded from the password.\n"
                },
                "passwordExpireWarnDays": {
                    "type": "integer",
                    "description": "Length in days a user will be warned before password expiry: 0 = no warning.\n"
                },
                "passwordHistoryCount": {
                    "type": "integer",
                    "description": "Number of distinct passwords that must be created before they can be reused: 0 =\nnone.\n"
                },
                "passwordLockoutNotificationChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification channels to use to notify a user when their account\nhas been locked.\n"
                },
                "passwordMaxAgeDays": {
                    "type": "integer",
                    "description": "Length in days a password is valid before expiry: 0 = no limit.,\n"
                },
                "passwordMaxLockoutAttempts": {
                    "type": "integer",
                    "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no\nlimit.\n"
                },
                "passwordMinAgeMinutes": {
                    "type": "integer",
                    "description": "Minimum time interval in minutes between password changes: 0 = no limit.\n"
                },
                "passwordMinLength": {
                    "type": "integer",
                    "description": "Minimum password length. Default is 8.\n"
                },
                "passwordMinLowercase": {
                    "type": "integer",
                    "description": "Minimum number of lower case characters in a password.\n"
                },
                "passwordMinNumber": {
                    "type": "integer",
                    "description": "Minimum number of numbers in a password.\n"
                },
                "passwordMinSymbol": {
                    "type": "integer",
                    "description": "Minimum number of symbols in a password.\n"
                },
                "passwordMinUppercase": {
                    "type": "integer",
                    "description": "Minimum number of upper case characters in a password.\n"
                },
                "passwordShowLockoutFailures": {
                    "type": "boolean",
                    "description": "If a user should be informed when their account is locked.\n"
                },
                "questionMinLength": {
                    "type": "integer",
                    "description": "Min length of the password recovery question answer.\n"
                },
                "questionRecovery": {
                    "type": "string",
                    "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE.\n"
                },
                "recoveryEmailToken": {
                    "type": "integer",
                    "description": "Lifetime in minutes of the recovery email token.\n"
                },
                "skipUnlock": {
                    "type": "boolean",
                    "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also\nattempt to unlock the user's Windows account.\n"
                },
                "smsRecovery": {
                    "type": "string",
                    "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyPasswordDefault resources.\n",
                "properties": {
                    "callRecovery": {
                        "type": "string",
                        "description": "Enable or disable voice call password recovery: ACTIVE or INACTIVE.\n"
                    },
                    "defaultAuthProvider": {
                        "type": "string",
                        "description": "Default authentication provider.\n"
                    },
                    "defaultIncludedGroupId": {
                        "type": "string",
                        "description": "ID of the default Okta group.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Default policy description.\n"
                    },
                    "emailRecovery": {
                        "type": "string",
                        "description": "Enable or disable email password recovery: ACTIVE or INACTIVE.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Default policy name.\n"
                    },
                    "passwordAutoUnlockMinutes": {
                        "type": "integer",
                        "description": "Number of minutes before a locked account is unlocked: 0 = no limit.\n"
                    },
                    "passwordDictionaryLookup": {
                        "type": "boolean",
                        "description": "Check Passwords Against Common Password Dictionary.\n"
                    },
                    "passwordExcludeFirstName": {
                        "type": "boolean",
                        "description": "User firstName attribute must be excluded from the password.\n"
                    },
                    "passwordExcludeLastName": {
                        "type": "boolean",
                        "description": "User lastName attribute must be excluded from the password.\n"
                    },
                    "passwordExcludeUsername": {
                        "type": "boolean",
                        "description": "If the username must be excluded from the password.\n"
                    },
                    "passwordExpireWarnDays": {
                        "type": "integer",
                        "description": "Length in days a user will be warned before password expiry: 0 = no warning.\n"
                    },
                    "passwordHistoryCount": {
                        "type": "integer",
                        "description": "Number of distinct passwords that must be created before they can be reused: 0 =\nnone.\n"
                    },
                    "passwordLockoutNotificationChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Notification channels to use to notify a user when their account\nhas been locked.\n"
                    },
                    "passwordMaxAgeDays": {
                        "type": "integer",
                        "description": "Length in days a password is valid before expiry: 0 = no limit.,\n"
                    },
                    "passwordMaxLockoutAttempts": {
                        "type": "integer",
                        "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no\nlimit.\n"
                    },
                    "passwordMinAgeMinutes": {
                        "type": "integer",
                        "description": "Minimum time interval in minutes between password changes: 0 = no limit.\n"
                    },
                    "passwordMinLength": {
                        "type": "integer",
                        "description": "Minimum password length. Default is 8.\n"
                    },
                    "passwordMinLowercase": {
                        "type": "integer",
                        "description": "Minimum number of lower case characters in a password.\n"
                    },
                    "passwordMinNumber": {
                        "type": "integer",
                        "description": "Minimum number of numbers in a password.\n"
                    },
                    "passwordMinSymbol": {
                        "type": "integer",
                        "description": "Minimum number of symbols in a password.\n"
                    },
                    "passwordMinUppercase": {
                        "type": "integer",
                        "description": "Minimum number of upper case characters in a password.\n"
                    },
                    "passwordShowLockoutFailures": {
                        "type": "boolean",
                        "description": "If a user should be informed when their account is locked.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Default policy priority.\n"
                    },
                    "questionMinLength": {
                        "type": "integer",
                        "description": "Min length of the password recovery question answer.\n"
                    },
                    "questionRecovery": {
                        "type": "string",
                        "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE.\n"
                    },
                    "recoveryEmailToken": {
                        "type": "integer",
                        "description": "Lifetime in minutes of the recovery email token.\n"
                    },
                    "skipUnlock": {
                        "type": "boolean",
                        "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also\nattempt to unlock the user's Windows account.\n"
                    },
                    "smsRecovery": {
                        "type": "string",
                        "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default policy status.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/templateSms:TemplateSms": {
            "description": "Creates an Okta SMS Template.\n\nThis resource allows you to create and configure an Okta SMS Template.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.TemplateSms(\"example\", {\n    template: \"Your ${org.name} code is: ${code}\",\n    translations: [\n        {\n            language: \"en\",\n            template: \"Your ${org.name} code is: ${code}\",\n        },\n        {\n            language: \"es\",\n            template: \"Tu código de ${org.name} es: ${code}.\",\n        },\n    ],\n    type: \"SMS_VERIFY_CODE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.TemplateSms(\"example\",\n    template=f\"Your {org['name']} code is: {code}\",\n    translations=[\n        okta.TemplateSmsTranslationArgs(\n            language=\"en\",\n            template=f\"Your {org['name']} code is: {code}\",\n        ),\n        okta.TemplateSmsTranslationArgs(\n            language=\"es\",\n            template=f\"Tu código de {org['name']} es: {code}.\",\n        ),\n    ],\n    type=\"SMS_VERIFY_CODE\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.TemplateSms(\"example\", new Okta.TemplateSmsArgs\n        {\n            Template = $\"Your {org.Name} code is: {code}\",\n            Translations = \n            {\n                new Okta.Inputs.TemplateSmsTranslationArgs\n                {\n                    Language = \"en\",\n                    Template = $\"Your {org.Name} code is: {code}\",\n                },\n                new Okta.Inputs.TemplateSmsTranslationArgs\n                {\n                    Language = \"es\",\n                    Template = $\"Tu código de {org.Name} es: {code}.\",\n                },\n            },\n            Type = \"SMS_VERIFY_CODE\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewTemplateSms(ctx, \"example\", \u0026okta.TemplateSmsArgs{\n\t\t\tTemplate: pulumi.String(fmt.Sprintf(\"%v%v%v%v\", \"Your \", org.Name, \" code is: \", code)),\n\t\t\tTranslations: okta.TemplateSmsTranslationArray{\n\t\t\t\t\u0026okta.TemplateSmsTranslationArgs{\n\t\t\t\t\tLanguage: pulumi.String(\"en\"),\n\t\t\t\t\tTemplate: pulumi.String(fmt.Sprintf(\"%v%v%v%v\", \"Your \", org.Name, \" code is: \", code)),\n\t\t\t\t},\n\t\t\t\t\u0026okta.TemplateSmsTranslationArgs{\n\t\t\t\t\tLanguage: pulumi.String(\"es\"),\n\t\t\t\t\tTemplate: pulumi.String(fmt.Sprintf(\"%v%v%v%v%v\", \"Tu código de \", org.Name, \" es: \", code, \".\")),\n\t\t\t\t},\n\t\t\t},\n\t\t\tType: pulumi.String(\"SMS_VERIFY_CODE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn Okta SMS Template can be imported via the template type.\n\n```sh\n $ pulumi import okta:index/templateSms:TemplateSms example \u003ctemplate type\u003e\n```\n\n ",
            "properties": {
                "template": {
                    "type": "string",
                    "description": "The SMS message.\n"
                },
                "translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/TemplateSmsTranslation:TemplateSmsTranslation"
                    },
                    "description": "Set of translations for a particular template.\n"
                },
                "type": {
                    "type": "string",
                    "description": "SMS template type\n"
                }
            },
            "required": [
                "template",
                "type"
            ],
            "inputProperties": {
                "template": {
                    "type": "string",
                    "description": "The SMS message.\n"
                },
                "translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/TemplateSmsTranslation:TemplateSmsTranslation"
                    },
                    "description": "Set of translations for a particular template.\n"
                },
                "type": {
                    "type": "string",
                    "description": "SMS template type\n"
                }
            },
            "requiredInputs": [
                "template",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TemplateSms resources.\n",
                "properties": {
                    "template": {
                        "type": "string",
                        "description": "The SMS message.\n"
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/TemplateSmsTranslation:TemplateSmsTranslation"
                        },
                        "description": "Set of translations for a particular template.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "SMS template type\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/userAdminRoles:UserAdminRoles": {
            "description": "Resource to manage a set of admin roles for a specific user.\n\nThis resource allows you to manage admin roles for a single user, independent of the user schema itself.\n\nWhen using this with a `okta.user.User` resource, you should add a lifecycle ignore for admin roles to avoid conflicts\nin desired state.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst testUser = new okta.user.User(\"testUser\", {\n    firstName: \"TestAcc\",\n    lastName: \"Smith\",\n    login: \"testAcc-replace_with_uuid@example.com\",\n    email: \"testAcc-replace_with_uuid@example.com\",\n});\nconst testUserAdminRoles = new okta.UserAdminRoles(\"testUserAdminRoles\", {\n    userId: testUser.id,\n    adminRoles: [\"APP_ADMIN\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest_user = okta.user.User(\"testUser\",\n    first_name=\"TestAcc\",\n    last_name=\"Smith\",\n    login=\"testAcc-replace_with_uuid@example.com\",\n    email=\"testAcc-replace_with_uuid@example.com\")\ntest_user_admin_roles = okta.UserAdminRoles(\"testUserAdminRoles\",\n    user_id=test_user.id,\n    admin_roles=[\"APP_ADMIN\"])\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var testUser = new Okta.User.User(\"testUser\", new Okta.User.UserArgs\n        {\n            FirstName = \"TestAcc\",\n            LastName = \"Smith\",\n            Login = \"testAcc-replace_with_uuid@example.com\",\n            Email = \"testAcc-replace_with_uuid@example.com\",\n        });\n        var testUserAdminRoles = new Okta.UserAdminRoles(\"testUserAdminRoles\", new Okta.UserAdminRolesArgs\n        {\n            UserId = testUser.Id,\n            AdminRoles = \n            {\n                \"APP_ADMIN\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestUser, err := user.NewUser(ctx, \"testUser\", \u0026user.UserArgs{\n\t\t\tFirstName: pulumi.String(\"TestAcc\"),\n\t\t\tLastName:  pulumi.String(\"Smith\"),\n\t\t\tLogin:     pulumi.String(\"testAcc-replace_with_uuid@example.com\"),\n\t\t\tEmail:     pulumi.String(\"testAcc-replace_with_uuid@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewUserAdminRoles(ctx, \"testUserAdminRoles\", \u0026okta.UserAdminRolesArgs{\n\t\t\tUserId: testUser.ID(),\n\t\t\tAdminRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"APP_ADMIN\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nExisting user admin roles can be imported via the Okta User ID.\n\n```sh\n $ pulumi import okta:index/userAdminRoles:UserAdminRoles example \u003cuser id\u003e\n```\n\n ",
            "properties": {
                "adminRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta user admin roles, e.g. `[\"APP_ADMIN\", \"USER_ADMIN\"]`\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of a Okta User.\n"
                }
            },
            "required": [
                "adminRoles",
                "userId"
            ],
            "inputProperties": {
                "adminRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta user admin roles, e.g. `[\"APP_ADMIN\", \"USER_ADMIN\"]`\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of a Okta User.\n"
                }
            },
            "requiredInputs": [
                "adminRoles",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserAdminRoles resources.\n",
                "properties": {
                    "adminRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of Okta user admin roles, e.g. `[\"APP_ADMIN\", \"USER_ADMIN\"]`\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of a Okta User.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/userBaseSchemaProperty:UserBaseSchemaProperty": {
            "description": "Manages a User Base Schema property.\n\nThis resource allows you to configure a base user schema property.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.UserBaseSchemaProperty(\"example\", {\n    index: \"customPropertyName\",\n    master: \"OKTA\",\n    title: \"customPropertyName\",\n    type: \"string\",\n    userType: okta_user_type_example.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.UserBaseSchemaProperty(\"example\",\n    index=\"customPropertyName\",\n    master=\"OKTA\",\n    title=\"customPropertyName\",\n    type=\"string\",\n    user_type=data[\"okta_user_type\"][\"example\"][\"id\"])\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.UserBaseSchemaProperty(\"example\", new Okta.UserBaseSchemaPropertyArgs\n        {\n            Index = \"customPropertyName\",\n            Master = \"OKTA\",\n            Title = \"customPropertyName\",\n            Type = \"string\",\n            UserType = data.Okta_user_type.Example.Id,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewUserBaseSchemaProperty(ctx, \"example\", \u0026okta.UserBaseSchemaPropertyArgs{\n\t\t\tIndex:    pulumi.String(\"customPropertyName\"),\n\t\t\tMaster:   pulumi.String(\"OKTA\"),\n\t\t\tTitle:    pulumi.String(\"customPropertyName\"),\n\t\t\tType:     pulumi.String(\"string\"),\n\t\t\tUserType: pulumi.Any(data.Okta_user_type.Example.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUser schema property of default user type can be imported via the property index.\n\n```sh\n $ pulumi import okta:index/userBaseSchemaProperty:UserBaseSchemaProperty example \u003cproperty name\u003e\n```\n\n User schema property of custom user type can be imported via user type id and property index\n\n```sh\n $ pulumi import okta:index/userBaseSchemaProperty:UserBaseSchemaProperty example \u003cuser type id\u003e.\u003cproperty name\u003e\n```\n\n ",
            "properties": {
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The property display name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID\n"
                }
            },
            "required": [
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The property display name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID\n"
                }
            },
            "requiredInputs": [
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserBaseSchemaProperty resources.\n",
                "properties": {
                    "index": {
                        "type": "string",
                        "description": "The property name.\n"
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the property is required for this application's users.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The property display name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                    },
                    "userType": {
                        "type": "string",
                        "description": "User type ID\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/userFactorQuestion:UserFactorQuestion": {
            "description": "Creates security question factor for a user.\n\nThis resource allows you to create and configure security question factor for a user.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleUser = new okta.user.User(\"exampleUser\", {\n    firstName: \"John\",\n    lastName: \"Smith\",\n    login: \"john.smith@example.com\",\n    email: \"john.smith@example.com\",\n});\nconst exampleUserSecurityQuestions = exampleUser.id.apply(id =\u003e okta.getUserSecurityQuestions({\n    userId: id,\n}));\nconst exampleFactor = new okta.factor.Factor(\"exampleFactor\", {\n    providerId: \"okta_question\",\n    active: true,\n});\nconst exampleUserFactorQuestion = new okta.UserFactorQuestion(\"exampleUserFactorQuestion\", {\n    userId: exampleUser.id,\n    key: exampleUserSecurityQuestions.questions[0].key,\n    answer: \"meatball\",\n}, {\n    dependsOn: [exampleFactor],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_user = okta.user.User(\"exampleUser\",\n    first_name=\"John\",\n    last_name=\"Smith\",\n    login=\"john.smith@example.com\",\n    email=\"john.smith@example.com\")\nexample_user_security_questions = example_user.id.apply(lambda id: okta.get_user_security_questions(user_id=id))\nexample_factor = okta.factor.Factor(\"exampleFactor\",\n    provider_id=\"okta_question\",\n    active=True)\nexample_user_factor_question = okta.UserFactorQuestion(\"exampleUserFactorQuestion\",\n    user_id=example_user.id,\n    key=example_user_security_questions.questions[0].key,\n    answer=\"meatball\",\n    opts=pulumi.ResourceOptions(depends_on=[example_factor]))\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleUser = new Okta.User.User(\"exampleUser\", new Okta.User.UserArgs\n        {\n            FirstName = \"John\",\n            LastName = \"Smith\",\n            Login = \"john.smith@example.com\",\n            Email = \"john.smith@example.com\",\n        });\n        var exampleUserSecurityQuestions = exampleUser.Id.Apply(id =\u003e Okta.GetUserSecurityQuestions.InvokeAsync(new Okta.GetUserSecurityQuestionsArgs\n        {\n            UserId = id,\n        }));\n        var exampleFactor = new Okta.Factor.Factor(\"exampleFactor\", new Okta.Factor.FactorArgs\n        {\n            ProviderId = \"okta_question\",\n            Active = true,\n        });\n        var exampleUserFactorQuestion = new Okta.UserFactorQuestion(\"exampleUserFactorQuestion\", new Okta.UserFactorQuestionArgs\n        {\n            UserId = exampleUser.Id,\n            Key = exampleUserSecurityQuestions.Apply(exampleUserSecurityQuestions =\u003e exampleUserSecurityQuestions.Questions[0].Key),\n            Answer = \"meatball\",\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                exampleFactor,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/factor\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleUser, err := user.NewUser(ctx, \"exampleUser\", \u0026user.UserArgs{\n\t\t\tFirstName: pulumi.String(\"John\"),\n\t\t\tLastName:  pulumi.String(\"Smith\"),\n\t\t\tLogin:     pulumi.String(\"john.smith@example.com\"),\n\t\t\tEmail:     pulumi.String(\"john.smith@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleFactor, err := factor.NewFactor(ctx, \"exampleFactor\", \u0026factor.FactorArgs{\n\t\t\tProviderId: pulumi.String(\"okta_question\"),\n\t\t\tActive:     pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewUserFactorQuestion(ctx, \"exampleUserFactorQuestion\", \u0026okta.UserFactorQuestionArgs{\n\t\t\tUserId: exampleUser.ID(),\n\t\t\tKey: exampleUserSecurityQuestions.ApplyT(func(exampleUserSecurityQuestions okta.GetUserSecurityQuestionsResult) (string, error) {\n\t\t\t\treturn exampleUserSecurityQuestions.Questions[0].Key, nil\n\t\t\t}).(pulumi.StringOutput),\n\t\t\tAnswer: pulumi.String(\"meatball\"),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\texampleFactor,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nSecurity question factor for a user can be imported via the `user_id` and the `factor_id`.\n\n```sh\n $ pulumi import okta:index/userFactorQuestion:UserFactorQuestion example \u003cuser id\u003e/\u003cquestion factor id\u003e\n```\n\n ",
            "properties": {
                "answer": {
                    "type": "string",
                    "description": "Security question answer. Note here that answer won't be set during the resource import.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Security question unique key.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the security question factor.\n"
                },
                "text": {
                    "type": "string",
                    "description": "Display text for security question.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user. Resource will be recreated when `user_id` changes.\n"
                }
            },
            "required": [
                "answer",
                "key",
                "status",
                "text",
                "userId"
            ],
            "inputProperties": {
                "answer": {
                    "type": "string",
                    "description": "Security question answer. Note here that answer won't be set during the resource import.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Security question unique key.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user. Resource will be recreated when `user_id` changes.\n"
                }
            },
            "requiredInputs": [
                "answer",
                "key",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserFactorQuestion resources.\n",
                "properties": {
                    "answer": {
                        "type": "string",
                        "description": "Security question answer. Note here that answer won't be set during the resource import.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Security question unique key.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the security question factor.\n"
                    },
                    "text": {
                        "type": "string",
                        "description": "Display text for security question.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of the user. Resource will be recreated when `user_id` changes.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/userGroupMemberships:UserGroupMemberships": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta group IDs which the user should have membership managed for.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of a Okta User.\n"
                }
            },
            "required": [
                "groups",
                "userId"
            ],
            "inputProperties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta group IDs which the user should have membership managed for.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of a Okta User.\n"
                }
            },
            "requiredInputs": [
                "groups",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserGroupMemberships resources.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of Okta group IDs which the user should have membership managed for.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of a Okta User.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/userSchemaProperty:UserSchemaProperty": {
            "description": "Creates a User Schema property.\n\nThis resource allows you to create and configure a custom user schema property.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.UserSchemaProperty(\"example\", {\n    description: \"My custom property name\",\n    index: \"customPropertyName\",\n    master: \"OKTA\",\n    scope: \"SELF\",\n    title: \"customPropertyName\",\n    type: \"string\",\n    userType: okta_user_type_example.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.UserSchemaProperty(\"example\",\n    description=\"My custom property name\",\n    index=\"customPropertyName\",\n    master=\"OKTA\",\n    scope=\"SELF\",\n    title=\"customPropertyName\",\n    type=\"string\",\n    user_type=data[\"okta_user_type\"][\"example\"][\"id\"])\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.UserSchemaProperty(\"example\", new Okta.UserSchemaPropertyArgs\n        {\n            Description = \"My custom property name\",\n            Index = \"customPropertyName\",\n            Master = \"OKTA\",\n            Scope = \"SELF\",\n            Title = \"customPropertyName\",\n            Type = \"string\",\n            UserType = data.Okta_user_type.Example.Id,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewUserSchemaProperty(ctx, \"example\", \u0026okta.UserSchemaPropertyArgs{\n\t\t\tDescription: pulumi.String(\"My custom property name\"),\n\t\t\tIndex:       pulumi.String(\"customPropertyName\"),\n\t\t\tMaster:      pulumi.String(\"OKTA\"),\n\t\t\tScope:       pulumi.String(\"SELF\"),\n\t\t\tTitle:       pulumi.String(\"customPropertyName\"),\n\t\t\tType:        pulumi.String(\"string\"),\n\t\t\tUserType:    pulumi.Any(data.Okta_user_type.Example.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUser schema property of default user type can be imported via the property index.\n\n```sh\n $ pulumi import okta:index/userSchemaProperty:UserSchemaProperty example \u003cindex\u003e\n```\n\n User schema property of custom user type can be imported via user type id and property index\n\n```sh\n $ pulumi import okta:index/userSchemaProperty:UserSchemaProperty example \u003cuser type id\u003e.\u003cindex\u003e\n```\n\n ",
            "properties": {
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyArrayOneOf:UserSchemaPropertyArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `\"array\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"`, `\"OVERRIDE\"` or `\"OKTA\"`.\n"
                },
                "masterOverridePriorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyMasterOverridePriority:UserSchemaPropertyMasterOverridePriority"
                    },
                    "description": "Prioritized list of profile sources (required when `master` is `\"OVERRIDE\"`).\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyOneOf:UserSchemaPropertyOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "- Type of profile source.\n"
                },
                "unique": {
                    "type": "string",
                    "description": "Whether the property should be unique. It can be set to `\"UNIQUE_VALIDATED\"` or `\"NOT_UNIQUE\"`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID\n"
                }
            },
            "required": [
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyArrayOneOf:UserSchemaPropertyArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `\"array\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"`, `\"OVERRIDE\"` or `\"OKTA\"`.\n"
                },
                "masterOverridePriorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyMasterOverridePriority:UserSchemaPropertyMasterOverridePriority"
                    },
                    "description": "Prioritized list of profile sources (required when `master` is `\"OVERRIDE\"`).\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyOneOf:UserSchemaPropertyOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "- Type of profile source.\n"
                },
                "unique": {
                    "type": "string",
                    "description": "Whether the property should be unique. It can be set to `\"UNIQUE_VALIDATED\"` or `\"NOT_UNIQUE\"`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID\n"
                }
            },
            "requiredInputs": [
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserSchemaProperty resources.\n",
                "properties": {
                    "arrayEnums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values that an array property's items can be set to.\n"
                    },
                    "arrayOneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/UserSchemaPropertyArrayOneOf:UserSchemaPropertyArrayOneOf"
                        },
                        "description": "Display name and value an enum array can be set to.\n"
                    },
                    "arrayType": {
                        "type": "string",
                        "description": "The type of the array elements if `type` is set to `\"array\"`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the user schema property.\n"
                    },
                    "enums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                    },
                    "externalName": {
                        "type": "string",
                        "description": "External name of the user schema property.\n"
                    },
                    "externalNamespace": {
                        "type": "string",
                        "description": "External name of the user schema property.\n"
                    },
                    "index": {
                        "type": "string",
                        "description": "The property name.\n"
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"`, `\"OVERRIDE\"` or `\"OKTA\"`.\n"
                    },
                    "masterOverridePriorities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/UserSchemaPropertyMasterOverridePriority:UserSchemaPropertyMasterOverridePriority"
                        },
                        "description": "Prioritized list of profile sources (required when `master` is `\"OVERRIDE\"`).\n"
                    },
                    "maxLength": {
                        "type": "integer",
                        "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                    },
                    "minLength": {
                        "type": "integer",
                        "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                    },
                    "oneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/UserSchemaPropertyOneOf:UserSchemaPropertyOneOf"
                        },
                        "description": "Array of maps containing a mapping for display name to enum value.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the property is required for this application's users.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "display name for the enum value.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "- Type of profile source.\n"
                    },
                    "unique": {
                        "type": "string",
                        "description": "Whether the property should be unique. It can be set to `\"UNIQUE_VALIDATED\"` or `\"NOT_UNIQUE\"`.\n"
                    },
                    "userType": {
                        "type": "string",
                        "description": "User type ID\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:inline/hook:Hook": {
            "description": "Creates an inline hook.\n\nThis resource allows you to create and configure an inline hook.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.inline.Hook(\"example\", {\n    auth: {\n        key: \"Authorization\",\n        type: \"HEADER\",\n        value: \"secret\",\n    },\n    channel: {\n        method: \"POST\",\n        uri: \"https://example.com/test\",\n        version: \"1.0.0\",\n    },\n    type: \"com.okta.oauth2.tokens.transform\",\n    version: \"1.0.0\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.inline.Hook(\"example\",\n    auth={\n        \"key\": \"Authorization\",\n        \"type\": \"HEADER\",\n        \"value\": \"secret\",\n    },\n    channel={\n        \"method\": \"POST\",\n        \"uri\": \"https://example.com/test\",\n        \"version\": \"1.0.0\",\n    },\n    type=\"com.okta.oauth2.tokens.transform\",\n    version=\"1.0.0\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Inline.Hook(\"example\", new Okta.Inline.HookArgs\n        {\n            Auth = \n            {\n                { \"key\", \"Authorization\" },\n                { \"type\", \"HEADER\" },\n                { \"value\", \"secret\" },\n            },\n            Channel = \n            {\n                { \"method\", \"POST\" },\n                { \"uri\", \"https://example.com/test\" },\n                { \"version\", \"1.0.0\" },\n            },\n            Type = \"com.okta.oauth2.tokens.transform\",\n            Version = \"1.0.0\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/inline\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := inline.NewHook(ctx, \"example\", \u0026inline.HookArgs{\n\t\t\tAuth: pulumi.StringMap{\n\t\t\t\t\"key\":   pulumi.String(\"Authorization\"),\n\t\t\t\t\"type\":  pulumi.String(\"HEADER\"),\n\t\t\t\t\"value\": pulumi.String(\"secret\"),\n\t\t\t},\n\t\t\tChannel: pulumi.StringMap{\n\t\t\t\t\"method\":  pulumi.String(\"POST\"),\n\t\t\t\t\"uri\":     pulumi.String(\"https://example.com/test\"),\n\t\t\t\t\"version\": pulumi.String(\"1.0.0\"),\n\t\t\t},\n\t\t\tType:    pulumi.String(\"com.okta.oauth2.tokens.transform\"),\n\t\t\tVersion: pulumi.String(\"1.0.0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn inline hook can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:inline/hook:Hook example \u003chook id\u003e\n```\n\n ",
            "properties": {
                "auth": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Authentication required for inline hook request.\n"
                },
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Details of the endpoint the inline hook will hit.\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:inline/HookHeader:HookHeader"
                    },
                    "description": "Map of headers to send along in inline hook request.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The inline hook display name.\n"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The type of hook to trigger. Currently, the only supported type is `\"HTTP\"`.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the channel. The currently-supported version is `\"1.0.0\"`.\n"
                }
            },
            "required": [
                "channel",
                "name",
                "type",
                "version"
            ],
            "inputProperties": {
                "auth": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Authentication required for inline hook request.\n"
                },
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Details of the endpoint the inline hook will hit.\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:inline/HookHeader:HookHeader"
                    },
                    "description": "Map of headers to send along in inline hook request.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The inline hook display name.\n"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The type of hook to trigger. Currently, the only supported type is `\"HTTP\"`.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the channel. The currently-supported version is `\"1.0.0\"`.\n"
                }
            },
            "requiredInputs": [
                "channel",
                "type",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Hook resources.\n",
                "properties": {
                    "auth": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Authentication required for inline hook request.\n"
                    },
                    "channel": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Details of the endpoint the inline hook will hit.\n"
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:inline/HookHeader:HookHeader"
                        },
                        "description": "Map of headers to send along in inline hook request.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The inline hook display name.\n"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of hook to trigger. Currently, the only supported type is `\"HTTP\"`.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of the channel. The currently-supported version is `\"1.0.0\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:network/zone:Zone": {
            "description": "Creates an Okta Network Zone.\n\nThis resource allows you to create and configure an Okta Network Zone.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.network.Zone(\"example\", {\n    gateways: [\n        \"1.2.3.4/24\",\n        \"2.3.4.5-2.3.4.15\",\n    ],\n    proxies: [\n        \"2.2.3.4/24\",\n        \"3.3.4.5-3.3.4.15\",\n    ],\n    type: \"IP\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.network.Zone(\"example\",\n    gateways=[\n        \"1.2.3.4/24\",\n        \"2.3.4.5-2.3.4.15\",\n    ],\n    proxies=[\n        \"2.2.3.4/24\",\n        \"3.3.4.5-3.3.4.15\",\n    ],\n    type=\"IP\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Network.Zone(\"example\", new Okta.Network.ZoneArgs\n        {\n            Gateways = \n            {\n                \"1.2.3.4/24\",\n                \"2.3.4.5-2.3.4.15\",\n            },\n            Proxies = \n            {\n                \"2.2.3.4/24\",\n                \"3.3.4.5-3.3.4.15\",\n            },\n            Type = \"IP\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/network\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := network.NewZone(ctx, \"example\", \u0026network.ZoneArgs{\n\t\t\tGateways: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"1.2.3.4/24\"),\n\t\t\t\tpulumi.String(\"2.3.4.5-2.3.4.15\"),\n\t\t\t},\n\t\t\tProxies: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"2.2.3.4/24\"),\n\t\t\t\tpulumi.String(\"3.3.4.5-3.3.4.15\"),\n\t\t\t},\n\t\t\tType: pulumi.String(\"IP\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% example %}}\n### Dynamic Tor Blocker\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.network.Zone(\"example\", {\n    dynamicProxyType: \"TorAnonymizer\",\n    type: \"DYNAMIC\",\n    usage: \"BLOCKLIST\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.network.Zone(\"example\",\n    dynamic_proxy_type=\"TorAnonymizer\",\n    type=\"DYNAMIC\",\n    usage=\"BLOCKLIST\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Network.Zone(\"example\", new Okta.Network.ZoneArgs\n        {\n            DynamicProxyType = \"TorAnonymizer\",\n            Type = \"DYNAMIC\",\n            Usage = \"BLOCKLIST\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/network\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := network.NewZone(ctx, \"example\", \u0026network.ZoneArgs{\n\t\t\tDynamicProxyType: pulumi.String(\"TorAnonymizer\"),\n\t\t\tType:             pulumi.String(\"DYNAMIC\"),\n\t\t\tUsage:            pulumi.String(\"BLOCKLIST\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta Network Zone can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:network/zone:Zone example \u003czone id\u003e\n```\n\n ",
            "properties": {
                "dynamicLocations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of locations [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\nand [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2). Format code: countryCode OR countryCode-regionCode.\n"
                },
                "dynamicProxyType": {
                    "type": "string",
                    "description": "Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or `NotTorAnonymizer`.\n"
                },
                "gateways": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values in CIDR/range form.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Network Zone Resource.\n"
                },
                "proxies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values in CIDR/range form. Can not be set if `usage` is set to `\"BLOCKLIST\"`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the Network Zone - can either be `\"IP\"` or `\"DYNAMIC\"` only.\n"
                },
                "usage": {
                    "type": "string",
                    "description": "Usage of the Network Zone - can be either `\"POLICY\"` or `\"BLOCKLIST\"`. By default, it is `\"POLICY\"`.\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "dynamicLocations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of locations [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\nand [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2). Format code: countryCode OR countryCode-regionCode.\n"
                },
                "dynamicProxyType": {
                    "type": "string",
                    "description": "Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or `NotTorAnonymizer`.\n"
                },
                "gateways": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values in CIDR/range form.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Network Zone Resource.\n"
                },
                "proxies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values in CIDR/range form. Can not be set if `usage` is set to `\"BLOCKLIST\"`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the Network Zone - can either be `\"IP\"` or `\"DYNAMIC\"` only.\n"
                },
                "usage": {
                    "type": "string",
                    "description": "Usage of the Network Zone - can be either `\"POLICY\"` or `\"BLOCKLIST\"`. By default, it is `\"POLICY\"`.\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Zone resources.\n",
                "properties": {
                    "dynamicLocations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of locations [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\nand [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2). Format code: countryCode OR countryCode-regionCode.\n"
                    },
                    "dynamicProxyType": {
                        "type": "string",
                        "description": "Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or `NotTorAnonymizer`.\n"
                    },
                    "gateways": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values in CIDR/range form.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Network Zone Resource.\n"
                    },
                    "proxies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values in CIDR/range form. Can not be set if `usage` is set to `\"BLOCKLIST\"`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the Network Zone - can either be `\"IP\"` or `\"DYNAMIC\"` only.\n"
                    },
                    "usage": {
                        "type": "string",
                        "description": "Usage of the Network Zone - can be either `\"POLICY\"` or `\"BLOCKLIST\"`. By default, it is `\"POLICY\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/mfa:Mfa": {
            "description": "Creates an MFA Policy.\n\nThis resource allows you to create and configure an MFA Policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.policy.Mfa(\"example\", {\n    description: \"Example\",\n    groupsIncludeds: [okta_group_everyone.id],\n    oktaOtp: {\n        enroll: \"REQUIRED\",\n    },\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.policy.Mfa(\"example\",\n    description=\"Example\",\n    groups_includeds=[data[\"okta_group\"][\"everyone\"][\"id\"]],\n    okta_otp={\n        \"enroll\": \"REQUIRED\",\n    },\n    status=\"ACTIVE\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Policy.Mfa(\"example\", new Okta.Policy.MfaArgs\n        {\n            Description = \"Example\",\n            GroupsIncludeds = \n            {\n                data.Okta_group.Everyone.Id,\n            },\n            OktaOtp = \n            {\n                { \"enroll\", \"REQUIRED\" },\n            },\n            Status = \"ACTIVE\",\n        });\n    }\n\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn MFA Policy can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:policy/mfa:Mfa example \u003cpolicy id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Policy Description.\n"
                },
                "duo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "DUO MFA policy settings.\n"
                },
                "fidoU2f": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Fido U2F MFA policy settings.\n"
                },
                "fidoWebauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Fido Web Authn MFA policy settings.\n"
                },
                "googleOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Google OTP MFA policy settings.\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include.\n"
                },
                "hotp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "HMAC-based One-Time Password MFA policy settings.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name.\n"
                },
                "oktaCall": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Call MFA policy settings.\n"
                },
                "oktaEmail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Email MFA policy settings.\n"
                },
                "oktaOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta OTP (via the Okta Verify app) MFA policy settings.\n"
                },
                "oktaPassword": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Password MFA policy settings.\n"
                },
                "oktaPush": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Push MFA policy settings.\n"
                },
                "oktaQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Question MFA policy settings.\n"
                },
                "oktaSms": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta SMS MFA policy settings.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the policy.\n"
                },
                "rsaToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "RSA Token MFA policy settings.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                },
                "symantecVip": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Symantec VIP MFA policy settings.\n"
                },
                "yubikeyToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Yubikey Token MFA policy settings.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Policy Description.\n"
                },
                "duo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "DUO MFA policy settings.\n"
                },
                "fidoU2f": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Fido U2F MFA policy settings.\n"
                },
                "fidoWebauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Fido Web Authn MFA policy settings.\n"
                },
                "googleOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Google OTP MFA policy settings.\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include.\n"
                },
                "hotp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "HMAC-based One-Time Password MFA policy settings.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name.\n"
                },
                "oktaCall": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Call MFA policy settings.\n"
                },
                "oktaEmail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Email MFA policy settings.\n"
                },
                "oktaOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta OTP (via the Okta Verify app) MFA policy settings.\n"
                },
                "oktaPassword": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Password MFA policy settings.\n"
                },
                "oktaPush": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Push MFA policy settings.\n"
                },
                "oktaQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Question MFA policy settings.\n"
                },
                "oktaSms": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta SMS MFA policy settings.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the policy.\n"
                },
                "rsaToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "RSA Token MFA policy settings.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                },
                "symantecVip": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Symantec VIP MFA policy settings.\n"
                },
                "yubikeyToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Yubikey Token MFA policy settings.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Mfa resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Policy Description.\n"
                    },
                    "duo": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "DUO MFA policy settings.\n"
                    },
                    "fidoU2f": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Fido U2F MFA policy settings.\n"
                    },
                    "fidoWebauthn": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Fido Web Authn MFA policy settings.\n"
                    },
                    "googleOtp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Google OTP MFA policy settings.\n"
                    },
                    "groupsIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Group IDs to Include.\n"
                    },
                    "hotp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "HMAC-based One-Time Password MFA policy settings.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Name.\n"
                    },
                    "oktaCall": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Call MFA policy settings.\n"
                    },
                    "oktaEmail": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Email MFA policy settings.\n"
                    },
                    "oktaOtp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta OTP (via the Okta Verify app) MFA policy settings.\n"
                    },
                    "oktaPassword": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Password MFA policy settings.\n"
                    },
                    "oktaPush": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Push MFA policy settings.\n"
                    },
                    "oktaQuestion": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Question MFA policy settings.\n"
                    },
                    "oktaSms": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta SMS MFA policy settings.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of the policy.\n"
                    },
                    "rsaToken": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "RSA Token MFA policy settings.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                    },
                    "symantecVip": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Symantec VIP MFA policy settings.\n"
                    },
                    "yubikeyToken": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Yubikey Token MFA policy settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/password:Password": {
            "description": "Creates a Password Policy.\n\nThis resource allows you to create and configure a Password Policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.policy.Password(\"example\", {\n    description: \"Example\",\n    groupsIncludeds: [okta_group_everyone.id],\n    passwordHistoryCount: 4,\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.policy.Password(\"example\",\n    description=\"Example\",\n    groups_includeds=[data[\"okta_group\"][\"everyone\"][\"id\"]],\n    password_history_count=4,\n    status=\"ACTIVE\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Policy.Password(\"example\", new Okta.Policy.PasswordArgs\n        {\n            Description = \"Example\",\n            GroupsIncludeds = \n            {\n                data.Okta_group.Everyone.Id,\n            },\n            PasswordHistoryCount = 4,\n            Status = \"ACTIVE\",\n        });\n    }\n\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Password Policy can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:policy/password:Password example \u003cpolicy id\u003e\n```\n\n ",
            "properties": {
                "authProvider": {
                    "type": "string",
                    "description": "Authentication Provider: `\"OKTA\"` or `\"ACTIVE_DIRECTORY\"`. Default is `\"OKTA\"`.\n"
                },
                "callRecovery": {
                    "type": "string",
                    "description": "Enable or disable voice call password recovery: ACTIVE or INACTIVE.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Policy Description.\n"
                },
                "emailRecovery": {
                    "type": "string",
                    "description": "Enable or disable email password recovery: ACTIVE or INACTIVE.\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name.\n"
                },
                "passwordAutoUnlockMinutes": {
                    "type": "integer",
                    "description": "Number of minutes before a locked account is unlocked: 0 = no limit.\n"
                },
                "passwordDictionaryLookup": {
                    "type": "boolean",
                    "description": "Check Passwords Against Common Password Dictionary.\n"
                },
                "passwordExcludeFirstName": {
                    "type": "boolean",
                    "description": "User firstName attribute must be excluded from the password.\n"
                },
                "passwordExcludeLastName": {
                    "type": "boolean",
                    "description": "User lastName attribute must be excluded from the password.\n"
                },
                "passwordExcludeUsername": {
                    "type": "boolean",
                    "description": "If the username must be excluded from the password.\n"
                },
                "passwordExpireWarnDays": {
                    "type": "integer",
                    "description": "Length in days a user will be warned before password expiry: 0 = no warning.\n"
                },
                "passwordHistoryCount": {
                    "type": "integer",
                    "description": "Number of distinct passwords that must be created before they can be reused: 0 = none.\n"
                },
                "passwordLockoutNotificationChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification channels to use to notify a user when their account has been locked.\n"
                },
                "passwordMaxAgeDays": {
                    "type": "integer",
                    "description": "Length in days a password is valid before expiry: 0 = no limit.,\n"
                },
                "passwordMaxLockoutAttempts": {
                    "type": "integer",
                    "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit.\n"
                },
                "passwordMinAgeMinutes": {
                    "type": "integer",
                    "description": "Minimum time interval in minutes between password changes: 0 = no limit.\n"
                },
                "passwordMinLength": {
                    "type": "integer",
                    "description": "Minimum password length. Default is 8.\n"
                },
                "passwordMinLowercase": {
                    "type": "integer",
                    "description": "Minimum number of lower case characters in a password.\n"
                },
                "passwordMinNumber": {
                    "type": "integer",
                    "description": "Minimum number of numbers in a password.\n"
                },
                "passwordMinSymbol": {
                    "type": "integer",
                    "description": "Minimum number of symbols in a password.\n"
                },
                "passwordMinUppercase": {
                    "type": "integer",
                    "description": "Minimum number of upper case characters in a password.\n"
                },
                "passwordShowLockoutFailures": {
                    "type": "boolean",
                    "description": "If a user should be informed when their account is locked.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the policy.\n"
                },
                "questionMinLength": {
                    "type": "integer",
                    "description": "Min length of the password recovery question answer.\n"
                },
                "questionRecovery": {
                    "type": "string",
                    "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE.\n"
                },
                "recoveryEmailToken": {
                    "type": "integer",
                    "description": "Lifetime in minutes of the recovery email token.\n"
                },
                "skipUnlock": {
                    "type": "boolean",
                    "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's Windows account.\n"
                },
                "smsRecovery": {
                    "type": "string",
                    "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "authProvider": {
                    "type": "string",
                    "description": "Authentication Provider: `\"OKTA\"` or `\"ACTIVE_DIRECTORY\"`. Default is `\"OKTA\"`.\n"
                },
                "callRecovery": {
                    "type": "string",
                    "description": "Enable or disable voice call password recovery: ACTIVE or INACTIVE.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Policy Description.\n"
                },
                "emailRecovery": {
                    "type": "string",
                    "description": "Enable or disable email password recovery: ACTIVE or INACTIVE.\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name.\n"
                },
                "passwordAutoUnlockMinutes": {
                    "type": "integer",
                    "description": "Number of minutes before a locked account is unlocked: 0 = no limit.\n"
                },
                "passwordDictionaryLookup": {
                    "type": "boolean",
                    "description": "Check Passwords Against Common Password Dictionary.\n"
                },
                "passwordExcludeFirstName": {
                    "type": "boolean",
                    "description": "User firstName attribute must be excluded from the password.\n"
                },
                "passwordExcludeLastName": {
                    "type": "boolean",
                    "description": "User lastName attribute must be excluded from the password.\n"
                },
                "passwordExcludeUsername": {
                    "type": "boolean",
                    "description": "If the username must be excluded from the password.\n"
                },
                "passwordExpireWarnDays": {
                    "type": "integer",
                    "description": "Length in days a user will be warned before password expiry: 0 = no warning.\n"
                },
                "passwordHistoryCount": {
                    "type": "integer",
                    "description": "Number of distinct passwords that must be created before they can be reused: 0 = none.\n"
                },
                "passwordLockoutNotificationChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification channels to use to notify a user when their account has been locked.\n"
                },
                "passwordMaxAgeDays": {
                    "type": "integer",
                    "description": "Length in days a password is valid before expiry: 0 = no limit.,\n"
                },
                "passwordMaxLockoutAttempts": {
                    "type": "integer",
                    "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit.\n"
                },
                "passwordMinAgeMinutes": {
                    "type": "integer",
                    "description": "Minimum time interval in minutes between password changes: 0 = no limit.\n"
                },
                "passwordMinLength": {
                    "type": "integer",
                    "description": "Minimum password length. Default is 8.\n"
                },
                "passwordMinLowercase": {
                    "type": "integer",
                    "description": "Minimum number of lower case characters in a password.\n"
                },
                "passwordMinNumber": {
                    "type": "integer",
                    "description": "Minimum number of numbers in a password.\n"
                },
                "passwordMinSymbol": {
                    "type": "integer",
                    "description": "Minimum number of symbols in a password.\n"
                },
                "passwordMinUppercase": {
                    "type": "integer",
                    "description": "Minimum number of upper case characters in a password.\n"
                },
                "passwordShowLockoutFailures": {
                    "type": "boolean",
                    "description": "If a user should be informed when their account is locked.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the policy.\n"
                },
                "questionMinLength": {
                    "type": "integer",
                    "description": "Min length of the password recovery question answer.\n"
                },
                "questionRecovery": {
                    "type": "string",
                    "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE.\n"
                },
                "recoveryEmailToken": {
                    "type": "integer",
                    "description": "Lifetime in minutes of the recovery email token.\n"
                },
                "skipUnlock": {
                    "type": "boolean",
                    "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's Windows account.\n"
                },
                "smsRecovery": {
                    "type": "string",
                    "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Password resources.\n",
                "properties": {
                    "authProvider": {
                        "type": "string",
                        "description": "Authentication Provider: `\"OKTA\"` or `\"ACTIVE_DIRECTORY\"`. Default is `\"OKTA\"`.\n"
                    },
                    "callRecovery": {
                        "type": "string",
                        "description": "Enable or disable voice call password recovery: ACTIVE or INACTIVE.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Policy Description.\n"
                    },
                    "emailRecovery": {
                        "type": "string",
                        "description": "Enable or disable email password recovery: ACTIVE or INACTIVE.\n"
                    },
                    "groupsIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Group IDs to Include.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Name.\n"
                    },
                    "passwordAutoUnlockMinutes": {
                        "type": "integer",
                        "description": "Number of minutes before a locked account is unlocked: 0 = no limit.\n"
                    },
                    "passwordDictionaryLookup": {
                        "type": "boolean",
                        "description": "Check Passwords Against Common Password Dictionary.\n"
                    },
                    "passwordExcludeFirstName": {
                        "type": "boolean",
                        "description": "User firstName attribute must be excluded from the password.\n"
                    },
                    "passwordExcludeLastName": {
                        "type": "boolean",
                        "description": "User lastName attribute must be excluded from the password.\n"
                    },
                    "passwordExcludeUsername": {
                        "type": "boolean",
                        "description": "If the username must be excluded from the password.\n"
                    },
                    "passwordExpireWarnDays": {
                        "type": "integer",
                        "description": "Length in days a user will be warned before password expiry: 0 = no warning.\n"
                    },
                    "passwordHistoryCount": {
                        "type": "integer",
                        "description": "Number of distinct passwords that must be created before they can be reused: 0 = none.\n"
                    },
                    "passwordLockoutNotificationChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Notification channels to use to notify a user when their account has been locked.\n"
                    },
                    "passwordMaxAgeDays": {
                        "type": "integer",
                        "description": "Length in days a password is valid before expiry: 0 = no limit.,\n"
                    },
                    "passwordMaxLockoutAttempts": {
                        "type": "integer",
                        "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit.\n"
                    },
                    "passwordMinAgeMinutes": {
                        "type": "integer",
                        "description": "Minimum time interval in minutes between password changes: 0 = no limit.\n"
                    },
                    "passwordMinLength": {
                        "type": "integer",
                        "description": "Minimum password length. Default is 8.\n"
                    },
                    "passwordMinLowercase": {
                        "type": "integer",
                        "description": "Minimum number of lower case characters in a password.\n"
                    },
                    "passwordMinNumber": {
                        "type": "integer",
                        "description": "Minimum number of numbers in a password.\n"
                    },
                    "passwordMinSymbol": {
                        "type": "integer",
                        "description": "Minimum number of symbols in a password.\n"
                    },
                    "passwordMinUppercase": {
                        "type": "integer",
                        "description": "Minimum number of upper case characters in a password.\n"
                    },
                    "passwordShowLockoutFailures": {
                        "type": "boolean",
                        "description": "If a user should be informed when their account is locked.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of the policy.\n"
                    },
                    "questionMinLength": {
                        "type": "integer",
                        "description": "Min length of the password recovery question answer.\n"
                    },
                    "questionRecovery": {
                        "type": "string",
                        "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE.\n"
                    },
                    "recoveryEmailToken": {
                        "type": "integer",
                        "description": "Lifetime in minutes of the recovery email token.\n"
                    },
                    "skipUnlock": {
                        "type": "boolean",
                        "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's Windows account.\n"
                    },
                    "smsRecovery": {
                        "type": "string",
                        "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/ruleIdpDiscovery:RuleIdpDiscovery": {
            "description": "Creates an IdP Discovery Policy Rule.\n\nThis resource allows you to create and configure an IdP Discovery Policy Rule.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.policy.RuleIdpDiscovery(\"example\", {\n    appExcludes: [\n        {\n            id: \"\u003capp id\u003e\",\n            type: \"APP\",\n        },\n        {\n            name: \"yahoo_mail\",\n            type: \"APP_TYPE\",\n        },\n    ],\n    appIncludes: [\n        {\n            id: \"\u003capp id\u003e\",\n            type: \"APP\",\n        },\n        {\n            name: \"\u003capp type name\u003e\",\n            type: \"APP_TYPE\",\n        },\n    ],\n    idpId: \"\u003cidp id\u003e\",\n    idpType: \"OIDC\",\n    networkConnection: \"ANYWHERE\",\n    platformIncludes: [{\n        osType: \"OSX\",\n        type: \"MOBILE\",\n    }],\n    policyId: \"\u003cpolicy id\u003e\",\n    priority: 1,\n    status: \"ACTIVE\",\n    userIdentifierAttribute: \"company\",\n    userIdentifierPatterns: [{\n        matchType: \"EQUALS\",\n        value: \"Articulate\",\n    }],\n    userIdentifierType: \"ATTRIBUTE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.policy.RuleIdpDiscovery(\"example\",\n    app_excludes=[\n        okta.policy.RuleIdpDiscoveryAppExcludeArgs(\n            id=\"\u003capp id\u003e\",\n            type=\"APP\",\n        ),\n        okta.policy.RuleIdpDiscoveryAppExcludeArgs(\n            name=\"yahoo_mail\",\n            type=\"APP_TYPE\",\n        ),\n    ],\n    app_includes=[\n        okta.policy.RuleIdpDiscoveryAppIncludeArgs(\n            id=\"\u003capp id\u003e\",\n            type=\"APP\",\n        ),\n        okta.policy.RuleIdpDiscoveryAppIncludeArgs(\n            name=\"\u003capp type name\u003e\",\n            type=\"APP_TYPE\",\n        ),\n    ],\n    idp_id=\"\u003cidp id\u003e\",\n    idp_type=\"OIDC\",\n    network_connection=\"ANYWHERE\",\n    platform_includes=[okta.policy.RuleIdpDiscoveryPlatformIncludeArgs(\n        os_type=\"OSX\",\n        type=\"MOBILE\",\n    )],\n    policy_id=\"\u003cpolicy id\u003e\",\n    priority=1,\n    status=\"ACTIVE\",\n    user_identifier_attribute=\"company\",\n    user_identifier_patterns=[okta.policy.RuleIdpDiscoveryUserIdentifierPatternArgs(\n        match_type=\"EQUALS\",\n        value=\"Articulate\",\n    )],\n    user_identifier_type=\"ATTRIBUTE\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Policy.RuleIdpDiscovery(\"example\", new Okta.Policy.RuleIdpDiscoveryArgs\n        {\n            AppExcludes = \n            {\n                new Okta.Policy.Inputs.RuleIdpDiscoveryAppExcludeArgs\n                {\n                    Id = \"\u003capp id\u003e\",\n                    Type = \"APP\",\n                },\n                new Okta.Policy.Inputs.RuleIdpDiscoveryAppExcludeArgs\n                {\n                    Name = \"yahoo_mail\",\n                    Type = \"APP_TYPE\",\n                },\n            },\n            AppIncludes = \n            {\n                new Okta.Policy.Inputs.RuleIdpDiscoveryAppIncludeArgs\n                {\n                    Id = \"\u003capp id\u003e\",\n                    Type = \"APP\",\n                },\n                new Okta.Policy.Inputs.RuleIdpDiscoveryAppIncludeArgs\n                {\n                    Name = \"\u003capp type name\u003e\",\n                    Type = \"APP_TYPE\",\n                },\n            },\n            IdpId = \"\u003cidp id\u003e\",\n            IdpType = \"OIDC\",\n            NetworkConnection = \"ANYWHERE\",\n            PlatformIncludes = \n            {\n                new Okta.Policy.Inputs.RuleIdpDiscoveryPlatformIncludeArgs\n                {\n                    OsType = \"OSX\",\n                    Type = \"MOBILE\",\n                },\n            },\n            PolicyId = \"\u003cpolicy id\u003e\",\n            Priority = 1,\n            Status = \"ACTIVE\",\n            UserIdentifierAttribute = \"company\",\n            UserIdentifierPatterns = \n            {\n                new Okta.Policy.Inputs.RuleIdpDiscoveryUserIdentifierPatternArgs\n                {\n                    MatchType = \"EQUALS\",\n                    Value = \"Articulate\",\n                },\n            },\n            UserIdentifierType = \"ATTRIBUTE\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.NewRuleIdpDiscovery(ctx, \"example\", \u0026policy.RuleIdpDiscoveryArgs{\n\t\t\tAppExcludes: policy.RuleIdpDiscoveryAppExcludeArray{\n\t\t\t\t\u0026policy.RuleIdpDiscoveryAppExcludeArgs{\n\t\t\t\t\tId:   pulumi.String(\"\u003capp id\u003e\"),\n\t\t\t\t\tType: pulumi.String(\"APP\"),\n\t\t\t\t},\n\t\t\t\t\u0026policy.RuleIdpDiscoveryAppExcludeArgs{\n\t\t\t\t\tName: pulumi.String(\"yahoo_mail\"),\n\t\t\t\t\tType: pulumi.String(\"APP_TYPE\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tAppIncludes: policy.RuleIdpDiscoveryAppIncludeArray{\n\t\t\t\t\u0026policy.RuleIdpDiscoveryAppIncludeArgs{\n\t\t\t\t\tId:   pulumi.String(\"\u003capp id\u003e\"),\n\t\t\t\t\tType: pulumi.String(\"APP\"),\n\t\t\t\t},\n\t\t\t\t\u0026policy.RuleIdpDiscoveryAppIncludeArgs{\n\t\t\t\t\tName: pulumi.String(\"\u003capp type name\u003e\"),\n\t\t\t\t\tType: pulumi.String(\"APP_TYPE\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tIdpId:             pulumi.String(\"\u003cidp id\u003e\"),\n\t\t\tIdpType:           pulumi.String(\"OIDC\"),\n\t\t\tNetworkConnection: pulumi.String(\"ANYWHERE\"),\n\t\t\tPlatformIncludes: policy.RuleIdpDiscoveryPlatformIncludeArray{\n\t\t\t\t\u0026policy.RuleIdpDiscoveryPlatformIncludeArgs{\n\t\t\t\t\tOsType: pulumi.String(\"OSX\"),\n\t\t\t\t\tType:   pulumi.String(\"MOBILE\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPolicyId:                pulumi.String(\"\u003cpolicy id\u003e\"),\n\t\t\tPriority:                pulumi.Int(1),\n\t\t\tStatus:                  pulumi.String(\"ACTIVE\"),\n\t\t\tUserIdentifierAttribute: pulumi.String(\"company\"),\n\t\t\tUserIdentifierPatterns: policy.RuleIdpDiscoveryUserIdentifierPatternArray{\n\t\t\t\t\u0026policy.RuleIdpDiscoveryUserIdentifierPatternArgs{\n\t\t\t\t\tMatchType: pulumi.String(\"EQUALS\"),\n\t\t\t\t\tValue:     pulumi.String(\"Articulate\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUserIdentifierType: pulumi.String(\"ATTRIBUTE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Policy Rule can be imported via the Policy and Rule ID.\n\n```sh\n $ pulumi import okta:policy/ruleIdpDiscovery:RuleIdpDiscovery example \u003cpolicy id\u003e/\u003crule id\u003e\n```\n\n ",
            "properties": {
                "appExcludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppExclude:RuleIdpDiscoveryAppExclude"
                    },
                    "description": "Applications to exclude in discovery. See `app_include` for details.\n"
                },
                "appIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppInclude:RuleIdpDiscoveryAppInclude"
                    },
                    "description": "Applications to include in discovery rule.\n"
                },
                "idpId": {
                    "type": "string",
                    "description": "The identifier for the Idp the rule should route to if all conditions are met.\n"
                },
                "idpType": {
                    "type": "string",
                    "description": "Type of Idp. One of: `\"SAML2\"`, `\"IWA\"`, `\"AgentlessDSSO\"`, `\"X509\"`, `\"FACEBOOK\"`, `\"GOOGLE\"`, `\"LINKEDIN\"`, `\"MICROSOFT\"`, `\"OIDC\"`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Use if the `type` is `\"APP_TYPE\"` to indicate the type of application(s) to include in instances where an entire group (i.e. `yahoo_mail`) of applications should be included.\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "The network selection mode. One of `\"ANYWEHRE\"` or `\"ZONE\"`.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `\"ZONE\"`. Indicates the network zones to exclude.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `\"ZONE\"`. Indicates the network zones to include.\n"
                },
                "platformIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryPlatformInclude:RuleIdpDiscoveryPlatformInclude"
                    }
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n"
                },
                "policyid": {
                    "type": "string",
                    "description": "Policy ID.\n",
                    "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                },
                "priority": {
                    "type": "integer",
                    "description": "Idp rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if an invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Idp rule status: `\"ACTIVE\"` or `\"INACTIVE\"`. By default, it is `\"ACTIVE\"`.\n"
                },
                "userIdentifierAttribute": {
                    "type": "string",
                    "description": "Profile attribute matching can only have a single value that describes the type indicated in `user_identifier_type`. This is the attribute or identifier that the `user_identifier_patterns` are checked against.\n"
                },
                "userIdentifierPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryUserIdentifierPattern:RuleIdpDiscoveryUserIdentifierPattern"
                    },
                    "description": "Specifies a User Identifier pattern condition to match against. If `match_type` of `\"EXPRESSION\"` is used, only a *single* element can be set, otherwise multiple elements of matching patterns may be provided.\n"
                },
                "userIdentifierType": {
                    "type": "string",
                    "description": "One of: `\"IDENTIFIER\"`, `\"ATTRIBUTE\"`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "appExcludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppExclude:RuleIdpDiscoveryAppExclude"
                    },
                    "description": "Applications to exclude in discovery. See `app_include` for details.\n"
                },
                "appIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppInclude:RuleIdpDiscoveryAppInclude"
                    },
                    "description": "Applications to include in discovery rule.\n"
                },
                "idpId": {
                    "type": "string",
                    "description": "The identifier for the Idp the rule should route to if all conditions are met.\n"
                },
                "idpType": {
                    "type": "string",
                    "description": "Type of Idp. One of: `\"SAML2\"`, `\"IWA\"`, `\"AgentlessDSSO\"`, `\"X509\"`, `\"FACEBOOK\"`, `\"GOOGLE\"`, `\"LINKEDIN\"`, `\"MICROSOFT\"`, `\"OIDC\"`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Use if the `type` is `\"APP_TYPE\"` to indicate the type of application(s) to include in instances where an entire group (i.e. `yahoo_mail`) of applications should be included.\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "The network selection mode. One of `\"ANYWEHRE\"` or `\"ZONE\"`.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `\"ZONE\"`. Indicates the network zones to exclude.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `\"ZONE\"`. Indicates the network zones to include.\n"
                },
                "platformIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryPlatformInclude:RuleIdpDiscoveryPlatformInclude"
                    }
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n"
                },
                "policyid": {
                    "type": "string",
                    "description": "Policy ID.\n",
                    "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                },
                "priority": {
                    "type": "integer",
                    "description": "Idp rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if an invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Idp rule status: `\"ACTIVE\"` or `\"INACTIVE\"`. By default, it is `\"ACTIVE\"`.\n"
                },
                "userIdentifierAttribute": {
                    "type": "string",
                    "description": "Profile attribute matching can only have a single value that describes the type indicated in `user_identifier_type`. This is the attribute or identifier that the `user_identifier_patterns` are checked against.\n"
                },
                "userIdentifierPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryUserIdentifierPattern:RuleIdpDiscoveryUserIdentifierPattern"
                    },
                    "description": "Specifies a User Identifier pattern condition to match against. If `match_type` of `\"EXPRESSION\"` is used, only a *single* element can be set, otherwise multiple elements of matching patterns may be provided.\n"
                },
                "userIdentifierType": {
                    "type": "string",
                    "description": "One of: `\"IDENTIFIER\"`, `\"ATTRIBUTE\"`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RuleIdpDiscovery resources.\n",
                "properties": {
                    "appExcludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppExclude:RuleIdpDiscoveryAppExclude"
                        },
                        "description": "Applications to exclude in discovery. See `app_include` for details.\n"
                    },
                    "appIncludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppInclude:RuleIdpDiscoveryAppInclude"
                        },
                        "description": "Applications to include in discovery rule.\n"
                    },
                    "idpId": {
                        "type": "string",
                        "description": "The identifier for the Idp the rule should route to if all conditions are met.\n"
                    },
                    "idpType": {
                        "type": "string",
                        "description": "Type of Idp. One of: `\"SAML2\"`, `\"IWA\"`, `\"AgentlessDSSO\"`, `\"X509\"`, `\"FACEBOOK\"`, `\"GOOGLE\"`, `\"LINKEDIN\"`, `\"MICROSOFT\"`, `\"OIDC\"`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Use if the `type` is `\"APP_TYPE\"` to indicate the type of application(s) to include in instances where an entire group (i.e. `yahoo_mail`) of applications should be included.\n"
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "The network selection mode. One of `\"ANYWEHRE\"` or `\"ZONE\"`.\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required if `network_connection` = `\"ZONE\"`. Indicates the network zones to exclude.\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required if `network_connection` = `\"ZONE\"`. Indicates the network zones to include.\n"
                    },
                    "platformIncludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleIdpDiscoveryPlatformInclude:RuleIdpDiscoveryPlatformInclude"
                        }
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Policy ID.\n"
                    },
                    "policyid": {
                        "type": "string",
                        "description": "Policy ID.\n",
                        "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Idp rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if an invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Idp rule status: `\"ACTIVE\"` or `\"INACTIVE\"`. By default, it is `\"ACTIVE\"`.\n"
                    },
                    "userIdentifierAttribute": {
                        "type": "string",
                        "description": "Profile attribute matching can only have a single value that describes the type indicated in `user_identifier_type`. This is the attribute or identifier that the `user_identifier_patterns` are checked against.\n"
                    },
                    "userIdentifierPatterns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleIdpDiscoveryUserIdentifierPattern:RuleIdpDiscoveryUserIdentifierPattern"
                        },
                        "description": "Specifies a User Identifier pattern condition to match against. If `match_type` of `\"EXPRESSION\"` is used, only a *single* element can be set, otherwise multiple elements of matching patterns may be provided.\n"
                    },
                    "userIdentifierType": {
                        "type": "string",
                        "description": "One of: `\"IDENTIFIER\"`, `\"ATTRIBUTE\"`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/ruleMfa:RuleMfa": {
            "description": "Creates an MFA Policy Rule.\n\nThis resource allows you to create and configure an MFA Policy Rule.\n\n\n## Import\n\nA Policy Rule can be imported via the Policy and Rule ID.\n\n```sh\n $ pulumi import okta:policy/ruleMfa:RuleMfa example \u003cpolicy id\u003e/\u003crule id\u003e\n```\n\n ",
            "properties": {
                "enroll": {
                    "type": "string",
                    "description": "When a user should be prompted for MFA. It can be `\"CHALLENGE\"`, `\"LOGIN\"`, or `\"NEVER\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name.\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to exclude. Conflicts with `network_includes`.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to include. Conflicts with `network_excludes`.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n"
                },
                "policyid": {
                    "type": "string",
                    "description": "Policy ID.\n",
                    "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "enroll": {
                    "type": "string",
                    "description": "When a user should be prompted for MFA. It can be `\"CHALLENGE\"`, `\"LOGIN\"`, or `\"NEVER\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name.\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to exclude. Conflicts with `network_includes`.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to include. Conflicts with `network_excludes`.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n"
                },
                "policyid": {
                    "type": "string",
                    "description": "Policy ID.\n",
                    "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RuleMfa resources.\n",
                "properties": {
                    "enroll": {
                        "type": "string",
                        "description": "When a user should be prompted for MFA. It can be `\"CHALLENGE\"`, `\"LOGIN\"`, or `\"NEVER\"`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Rule Name.\n"
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network zones to exclude. Conflicts with `network_includes`.\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network zones to include. Conflicts with `network_excludes`.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Policy ID.\n"
                    },
                    "policyid": {
                        "type": "string",
                        "description": "Policy ID.\n",
                        "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                    },
                    "usersExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of User IDs to Exclude\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/rulePassword:RulePassword": {
            "description": "Creates a Password Policy Rule.\n\nThis resource allows you to create and configure a Password Policy Rule.\n\n\n## Import\n\nA Policy Rule can be imported via the Policy and Rule ID.\n\n```sh\n $ pulumi import okta:policy/rulePassword:RulePassword example \u003cpolicy id\u003e/\u003crule id\u003e\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name.\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to exclude. Conflicts with `network_includes`.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to include. Conflicts with `network_excludes`.\n"
                },
                "passwordChange": {
                    "type": "string",
                    "description": "Allow or deny a user to change their password: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"ALLOW\"`.\n"
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Allow or deny a user to reset their password: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"ALLOW\"`.\n"
                },
                "passwordUnlock": {
                    "type": "string",
                    "description": "Allow or deny a user to unlock: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"DENY\"`,\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n"
                },
                "policyid": {
                    "type": "string",
                    "description": "Policy ID.\n",
                    "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name.\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to exclude. Conflicts with `network_includes`.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to include. Conflicts with `network_excludes`.\n"
                },
                "passwordChange": {
                    "type": "string",
                    "description": "Allow or deny a user to change their password: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"ALLOW\"`.\n"
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Allow or deny a user to reset their password: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"ALLOW\"`.\n"
                },
                "passwordUnlock": {
                    "type": "string",
                    "description": "Allow or deny a user to unlock: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"DENY\"`,\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n"
                },
                "policyid": {
                    "type": "string",
                    "description": "Policy ID.\n",
                    "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RulePassword resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Policy Rule Name.\n"
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network zones to exclude. Conflicts with `network_includes`.\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network zones to include. Conflicts with `network_excludes`.\n"
                    },
                    "passwordChange": {
                        "type": "string",
                        "description": "Allow or deny a user to change their password: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"ALLOW\"`.\n"
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Allow or deny a user to reset their password: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"ALLOW\"`.\n"
                    },
                    "passwordUnlock": {
                        "type": "string",
                        "description": "Allow or deny a user to unlock: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"DENY\"`,\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Policy ID.\n"
                    },
                    "policyid": {
                        "type": "string",
                        "description": "Policy ID.\n",
                        "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                    },
                    "usersExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of User IDs to Exclude\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/ruleSignon:RuleSignon": {
            "description": "Creates a Sign On Policy Rule.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.policy.Signon(\"test\", {\n    status: \"ACTIVE\",\n    description: \"Example Policy\",\n});\nconst newCity = okta.getBehaviour({\n    name: \"New City\",\n});\nconst example = new okta.policy.RuleSignon(\"example\", {\n    access: \"CHALLENGE\",\n    authtype: \"RADIUS\",\n    networkConnection: \"ANYWHERE\",\n    policyId: okta_policy_signon.example.id,\n    status: \"ACTIVE\",\n    riscLevel: \"HIGH\",\n    behaviors: [newCity.then(newCity =\u003e newCity.id)],\n    factorSequences: [\n        {\n            primaryCriteriaFactorType: \"token:hotp\",\n            primaryCriteriaProvider: \"CUSTOM\",\n            secondaryCriterias: [\n                {\n                    factorType: \"token:software:totp\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"push\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"password\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"question\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"sms\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"token:software:totp\",\n                    provider: \"GOOGLE\",\n                },\n                {\n                    factorType: \"email\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"call\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"webauthn\",\n                    provider: \"FIDO\",\n                },\n                {\n                    factorType: \"token\",\n                    provider: \"RSA\",\n                },\n                {\n                    factorType: \"token\",\n                    provider: \"SYMANTEC\",\n                },\n            ],\n        },\n        {\n            primaryCriteriaFactorType: \"token:software:totp\",\n            primaryCriteriaProvider: \"OKTA\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.policy.Signon(\"test\",\n    status=\"ACTIVE\",\n    description=\"Example Policy\")\nnew_city = okta.get_behaviour(name=\"New City\")\nexample = okta.policy.RuleSignon(\"example\",\n    access=\"CHALLENGE\",\n    authtype=\"RADIUS\",\n    network_connection=\"ANYWHERE\",\n    policy_id=okta_policy_signon[\"example\"][\"id\"],\n    status=\"ACTIVE\",\n    risc_level=\"HIGH\",\n    behaviors=[new_city.id],\n    factor_sequences=[\n        okta.policy.RuleSignonFactorSequenceArgs(\n            primary_criteria_factor_type=\"token:hotp\",\n            primary_criteria_provider=\"CUSTOM\",\n            secondary_criterias=[\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"token:software:totp\",\n                    provider=\"OKTA\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"push\",\n                    provider=\"OKTA\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"password\",\n                    provider=\"OKTA\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"question\",\n                    provider=\"OKTA\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"sms\",\n                    provider=\"OKTA\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"token:software:totp\",\n                    provider=\"GOOGLE\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"email\",\n                    provider=\"OKTA\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"call\",\n                    provider=\"OKTA\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"webauthn\",\n                    provider=\"FIDO\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"token\",\n                    provider=\"RSA\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"token\",\n                    provider=\"SYMANTEC\",\n                ),\n            ],\n        ),\n        okta.policy.RuleSignonFactorSequenceArgs(\n            primary_criteria_factor_type=\"token:software:totp\",\n            primary_criteria_provider=\"OKTA\",\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = new Okta.Policy.Signon(\"test\", new Okta.Policy.SignonArgs\n        {\n            Status = \"ACTIVE\",\n            Description = \"Example Policy\",\n        });\n        var newCity = Output.Create(Okta.GetBehaviour.InvokeAsync(new Okta.GetBehaviourArgs\n        {\n            Name = \"New City\",\n        }));\n        var example = new Okta.Policy.RuleSignon(\"example\", new Okta.Policy.RuleSignonArgs\n        {\n            Access = \"CHALLENGE\",\n            Authtype = \"RADIUS\",\n            NetworkConnection = \"ANYWHERE\",\n            PolicyId = okta_policy_signon.Example.Id,\n            Status = \"ACTIVE\",\n            RiscLevel = \"HIGH\",\n            Behaviors = \n            {\n                newCity.Apply(newCity =\u003e newCity.Id),\n            },\n            FactorSequences = \n            {\n                new Okta.Policy.Inputs.RuleSignonFactorSequenceArgs\n                {\n                    PrimaryCriteriaFactorType = \"token:hotp\",\n                    PrimaryCriteriaProvider = \"CUSTOM\",\n                    SecondaryCriterias = \n                    {\n                        new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                        {\n                            FactorType = \"token:software:totp\",\n                            Provider = \"OKTA\",\n                        },\n                        new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                        {\n                            FactorType = \"push\",\n                            Provider = \"OKTA\",\n                        },\n                        new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                        {\n                            FactorType = \"password\",\n                            Provider = \"OKTA\",\n                        },\n                        new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                        {\n                            FactorType = \"question\",\n                            Provider = \"OKTA\",\n                        },\n                        new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                        {\n                            FactorType = \"sms\",\n                            Provider = \"OKTA\",\n                        },\n                        new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                        {\n                            FactorType = \"token:software:totp\",\n                            Provider = \"GOOGLE\",\n                        },\n                        new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                        {\n                            FactorType = \"email\",\n                            Provider = \"OKTA\",\n                        },\n                        new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                        {\n                            FactorType = \"call\",\n                            Provider = \"OKTA\",\n                        },\n                        new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                        {\n                            FactorType = \"webauthn\",\n                            Provider = \"FIDO\",\n                        },\n                        new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                        {\n                            FactorType = \"token\",\n                            Provider = \"RSA\",\n                        },\n                        new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                        {\n                            FactorType = \"token\",\n                            Provider = \"SYMANTEC\",\n                        },\n                    },\n                },\n                new Okta.Policy.Inputs.RuleSignonFactorSequenceArgs\n                {\n                    PrimaryCriteriaFactorType = \"token:software:totp\",\n                    PrimaryCriteriaProvider = \"OKTA\",\n                },\n            },\n        });\n    }\n\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Policy Rule can be imported via the Policy and Rule ID.\n\n```sh\n $ pulumi import okta:policy/ruleSignon:RuleSignon example \u003cpolicy id\u003e/\u003crule id\u003e\n```\n\n ",
            "properties": {
                "access": {
                    "type": "string",
                    "description": "Allow or deny access based on the rule conditions: `\"ALLOW\"`, `\"DENY\"` or `\"CHALLENGE\"`. The default is `\"ALLOW\"`.\n"
                },
                "authtype": {
                    "type": "string",
                    "description": "Authentication entrypoint: `\"ANY\"`, `\"LDAP_INTERFACE\"` or `\"RADIUS\"`.\n"
                },
                "behaviors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of behavior IDs.\n"
                },
                "factorSequences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleSignonFactorSequence:RuleSignonFactorSequence"
                    },
                    "description": "Auth factor sequences. Should be set if `access = \"CHALLENGE\"`.\n"
                },
                "mfaLifetime": {
                    "type": "integer",
                    "description": "Elapsed time before the next MFA challenge.\n"
                },
                "mfaPrompt": {
                    "type": "string",
                    "description": "Prompt for MFA based on the device used, a factor session lifetime, or every sign-on attempt: `\"DEVICE\"`, `\"SESSION\"` or `\"ALWAYS\"`.\n"
                },
                "mfaRememberDevice": {
                    "type": "boolean",
                    "description": "Remember MFA device. The default `false`.\n"
                },
                "mfaRequired": {
                    "type": "boolean",
                    "description": "Require MFA. By default is `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name.\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to exclude. Conflicts with `network_includes`.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to include. Conflicts with `network_excludes`.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n"
                },
                "policyid": {
                    "type": "string",
                    "description": "Policy ID.\n",
                    "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "riscLevel": {
                    "type": "string",
                    "description": "Risc level: `\"ANY\"`, `\"LOW\"`, `\"MEDIUM\"` or `\"HIGH\"`. Default is `\"ANY\"`. It can be also \nset to an empty string in case `RISC_SCORING` org feature flag is disabled.\n"
                },
                "sessionIdle": {
                    "type": "integer",
                    "description": "Max minutes a session can be idle.,\n"
                },
                "sessionLifetime": {
                    "type": "integer",
                    "description": "Max minutes a session is active: Disable = 0.\n"
                },
                "sessionPersistent": {
                    "type": "boolean",
                    "description": "Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session cookies.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "access": {
                    "type": "string",
                    "description": "Allow or deny access based on the rule conditions: `\"ALLOW\"`, `\"DENY\"` or `\"CHALLENGE\"`. The default is `\"ALLOW\"`.\n"
                },
                "authtype": {
                    "type": "string",
                    "description": "Authentication entrypoint: `\"ANY\"`, `\"LDAP_INTERFACE\"` or `\"RADIUS\"`.\n"
                },
                "behaviors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of behavior IDs.\n"
                },
                "factorSequences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleSignonFactorSequence:RuleSignonFactorSequence"
                    },
                    "description": "Auth factor sequences. Should be set if `access = \"CHALLENGE\"`.\n"
                },
                "mfaLifetime": {
                    "type": "integer",
                    "description": "Elapsed time before the next MFA challenge.\n"
                },
                "mfaPrompt": {
                    "type": "string",
                    "description": "Prompt for MFA based on the device used, a factor session lifetime, or every sign-on attempt: `\"DEVICE\"`, `\"SESSION\"` or `\"ALWAYS\"`.\n"
                },
                "mfaRememberDevice": {
                    "type": "boolean",
                    "description": "Remember MFA device. The default `false`.\n"
                },
                "mfaRequired": {
                    "type": "boolean",
                    "description": "Require MFA. By default is `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name.\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to exclude. Conflicts with `network_includes`.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to include. Conflicts with `network_excludes`.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n"
                },
                "policyid": {
                    "type": "string",
                    "description": "Policy ID.\n",
                    "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "riscLevel": {
                    "type": "string",
                    "description": "Risc level: `\"ANY\"`, `\"LOW\"`, `\"MEDIUM\"` or `\"HIGH\"`. Default is `\"ANY\"`. It can be also \nset to an empty string in case `RISC_SCORING` org feature flag is disabled.\n"
                },
                "sessionIdle": {
                    "type": "integer",
                    "description": "Max minutes a session can be idle.,\n"
                },
                "sessionLifetime": {
                    "type": "integer",
                    "description": "Max minutes a session is active: Disable = 0.\n"
                },
                "sessionPersistent": {
                    "type": "boolean",
                    "description": "Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session cookies.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RuleSignon resources.\n",
                "properties": {
                    "access": {
                        "type": "string",
                        "description": "Allow or deny access based on the rule conditions: `\"ALLOW\"`, `\"DENY\"` or `\"CHALLENGE\"`. The default is `\"ALLOW\"`.\n"
                    },
                    "authtype": {
                        "type": "string",
                        "description": "Authentication entrypoint: `\"ANY\"`, `\"LDAP_INTERFACE\"` or `\"RADIUS\"`.\n"
                    },
                    "behaviors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of behavior IDs.\n"
                    },
                    "factorSequences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleSignonFactorSequence:RuleSignonFactorSequence"
                        },
                        "description": "Auth factor sequences. Should be set if `access = \"CHALLENGE\"`.\n"
                    },
                    "mfaLifetime": {
                        "type": "integer",
                        "description": "Elapsed time before the next MFA challenge.\n"
                    },
                    "mfaPrompt": {
                        "type": "string",
                        "description": "Prompt for MFA based on the device used, a factor session lifetime, or every sign-on attempt: `\"DEVICE\"`, `\"SESSION\"` or `\"ALWAYS\"`.\n"
                    },
                    "mfaRememberDevice": {
                        "type": "boolean",
                        "description": "Remember MFA device. The default `false`.\n"
                    },
                    "mfaRequired": {
                        "type": "boolean",
                        "description": "Require MFA. By default is `false`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Rule Name.\n"
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network zones to exclude. Conflicts with `network_includes`.\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network zones to include. Conflicts with `network_excludes`.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Policy ID.\n"
                    },
                    "policyid": {
                        "type": "string",
                        "description": "Policy ID.\n",
                        "deprecationMessage": "Because of incorrect naming, 'policyid' field will be deprecated and then removed in the next versions of the provider. Please use 'policy_id' instead"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                    },
                    "riscLevel": {
                        "type": "string",
                        "description": "Risc level: `\"ANY\"`, `\"LOW\"`, `\"MEDIUM\"` or `\"HIGH\"`. Default is `\"ANY\"`. It can be also \nset to an empty string in case `RISC_SCORING` org feature flag is disabled.\n"
                    },
                    "sessionIdle": {
                        "type": "integer",
                        "description": "Max minutes a session can be idle.,\n"
                    },
                    "sessionLifetime": {
                        "type": "integer",
                        "description": "Max minutes a session is active: Disable = 0.\n"
                    },
                    "sessionPersistent": {
                        "type": "boolean",
                        "description": "Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session cookies.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                    },
                    "usersExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of User IDs to Exclude\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/signon:Signon": {
            "description": "Creates a Sign On Policy.\n\nThis resource allows you to create and configure a Sign On Policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.policy.Signon(\"example\", {\n    description: \"Example\",\n    groupsIncludeds: [okta_group_everyone.id],\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.policy.Signon(\"example\",\n    description=\"Example\",\n    groups_includeds=[data[\"okta_group\"][\"everyone\"][\"id\"]],\n    status=\"ACTIVE\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Policy.Signon(\"example\", new Okta.Policy.SignonArgs\n        {\n            Description = \"Example\",\n            GroupsIncludeds = \n            {\n                data.Okta_group.Everyone.Id,\n            },\n            Status = \"ACTIVE\",\n        });\n    }\n\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Sign On Policy can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:policy/signon:Signon example \u003cpolicy id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Policy Description.\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the policy.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Policy Description.\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the policy.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Signon resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Policy Description.\n"
                    },
                    "groupsIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Group IDs to Include.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Name.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of the policy.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:profile/mapping:Mapping": {
            "description": "Manages a profile mapping.\n\nThis resource allows you to manage a profile mapping by source id.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst user = pulumi.output(okta.user.getUserProfileMappingSource({ async: true }));\nconst example = new okta.profile.Mapping(\"example\", {\n    deleteWhenAbsent: true,\n    mappings: [\n        {\n            expression: \"appuser.firstName\",\n            id: \"firstName\",\n        },\n        {\n            expression: \"appuser.lastName\",\n            id: \"lastName\",\n        },\n        {\n            expression: \"appuser.email\",\n            id: \"email\",\n        },\n        {\n            expression: \"appuser.email\",\n            id: \"login\",\n        },\n    ],\n    sourceId: \"\u003csource id\u003e\",\n    targetId: user.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nuser = okta.user.get_user_profile_mapping_source()\nexample = okta.profile.Mapping(\"example\",\n    delete_when_absent=True,\n    mappings=[\n        okta.profile.MappingMappingArgs(\n            expression=\"appuser.firstName\",\n            id=\"firstName\",\n        ),\n        okta.profile.MappingMappingArgs(\n            expression=\"appuser.lastName\",\n            id=\"lastName\",\n        ),\n        okta.profile.MappingMappingArgs(\n            expression=\"appuser.email\",\n            id=\"email\",\n        ),\n        okta.profile.MappingMappingArgs(\n            expression=\"appuser.email\",\n            id=\"login\",\n        ),\n    ],\n    source_id=\"\u003csource id\u003e\",\n    target_id=user.id)\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var user = Output.Create(Okta.User.GetUserProfileMappingSource.InvokeAsync());\n        var example = new Okta.Profile.Mapping(\"example\", new Okta.Profile.MappingArgs\n        {\n            DeleteWhenAbsent = true,\n            Mappings = \n            {\n                new Okta.Profile.Inputs.MappingMappingArgs\n                {\n                    Expression = \"appuser.firstName\",\n                    Id = \"firstName\",\n                },\n                new Okta.Profile.Inputs.MappingMappingArgs\n                {\n                    Expression = \"appuser.lastName\",\n                    Id = \"lastName\",\n                },\n                new Okta.Profile.Inputs.MappingMappingArgs\n                {\n                    Expression = \"appuser.email\",\n                    Id = \"email\",\n                },\n                new Okta.Profile.Inputs.MappingMappingArgs\n                {\n                    Expression = \"appuser.email\",\n                    Id = \"login\",\n                },\n            },\n            SourceId = \"\u003csource id\u003e\",\n            TargetId = user.Apply(user =\u003e user.Id),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/profile\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tuser, err := user.GetUserProfileMappingSource(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = profile.NewMapping(ctx, \"example\", \u0026profile.MappingArgs{\n\t\t\tDeleteWhenAbsent: pulumi.Bool(true),\n\t\t\tMappings: profile.MappingMappingArray{\n\t\t\t\t\u0026profile.MappingMappingArgs{\n\t\t\t\t\tExpression: pulumi.String(\"appuser.firstName\"),\n\t\t\t\t\tId:         pulumi.String(\"firstName\"),\n\t\t\t\t},\n\t\t\t\t\u0026profile.MappingMappingArgs{\n\t\t\t\t\tExpression: pulumi.String(\"appuser.lastName\"),\n\t\t\t\t\tId:         pulumi.String(\"lastName\"),\n\t\t\t\t},\n\t\t\t\t\u0026profile.MappingMappingArgs{\n\t\t\t\t\tExpression: pulumi.String(\"appuser.email\"),\n\t\t\t\t\tId:         pulumi.String(\"email\"),\n\t\t\t\t},\n\t\t\t\t\u0026profile.MappingMappingArgs{\n\t\t\t\t\tExpression: pulumi.String(\"appuser.email\"),\n\t\t\t\t\tId:         pulumi.String(\"login\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tSourceId: pulumi.String(\"\u003csource id\u003e\"),\n\t\t\tTargetId: pulumi.String(user.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThere is no reason to import this resource. You can simply create the resource config and point it to a source ID. Mind here, once the source is deleted this resources will no longer exist. ",
            "properties": {
                "deleteWhenAbsent": {
                    "type": "boolean",
                    "description": "Tells the provider whether to attempt to delete missing mappings under profile mapping.\n"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:profile/MappingMapping:MappingMapping"
                    },
                    "description": "Priority of the policy.\n"
                },
                "sourceId": {
                    "type": "string",
                    "description": "Source id of the profile mapping.\n"
                },
                "sourceName": {
                    "type": "string",
                    "description": "Name of the mapping source.\n"
                },
                "sourceType": {
                    "type": "string",
                    "description": "ID of the mapping source.\n"
                },
                "targetId": {
                    "type": "string",
                    "description": "ID of the mapping target.\n"
                },
                "targetName": {
                    "type": "string",
                    "description": "Name of the mapping target.\n"
                },
                "targetType": {
                    "type": "string",
                    "description": "ID of the mapping target.\n"
                }
            },
            "required": [
                "sourceId",
                "sourceName",
                "sourceType",
                "targetId",
                "targetName",
                "targetType"
            ],
            "inputProperties": {
                "deleteWhenAbsent": {
                    "type": "boolean",
                    "description": "Tells the provider whether to attempt to delete missing mappings under profile mapping.\n"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:profile/MappingMapping:MappingMapping"
                    },
                    "description": "Priority of the policy.\n"
                },
                "sourceId": {
                    "type": "string",
                    "description": "Source id of the profile mapping.\n"
                },
                "targetId": {
                    "type": "string",
                    "description": "ID of the mapping target.\n"
                }
            },
            "requiredInputs": [
                "sourceId",
                "targetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Mapping resources.\n",
                "properties": {
                    "deleteWhenAbsent": {
                        "type": "boolean",
                        "description": "Tells the provider whether to attempt to delete missing mappings under profile mapping.\n"
                    },
                    "mappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:profile/MappingMapping:MappingMapping"
                        },
                        "description": "Priority of the policy.\n"
                    },
                    "sourceId": {
                        "type": "string",
                        "description": "Source id of the profile mapping.\n"
                    },
                    "sourceName": {
                        "type": "string",
                        "description": "Name of the mapping source.\n"
                    },
                    "sourceType": {
                        "type": "string",
                        "description": "ID of the mapping source.\n"
                    },
                    "targetId": {
                        "type": "string",
                        "description": "ID of the mapping target.\n"
                    },
                    "targetName": {
                        "type": "string",
                        "description": "Name of the mapping target.\n"
                    },
                    "targetType": {
                        "type": "string",
                        "description": "ID of the mapping target.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:template/email:Email": {
            "description": "Creates an Okta Email Template.\n\nThis resource allows you to create and configure an Okta Email Template.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.template.Email(\"example\", {\n    translations: [\n        {\n            language: \"en\",\n            subject: \"Stuff\",\n            template: \"Hi $user.firstName,\u003cbr/\u003e\u003cbr/\u003eBlah blah $resetPasswordLink\",\n        },\n        {\n            language: \"es\",\n            subject: \"Cosas\",\n            template: \"Hola $user.firstName,\u003cbr/\u003e\u003cbr/\u003ePuedo ir al bano $resetPasswordLink\",\n        },\n    ],\n    type: \"email.forgotPassword\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.template.Email(\"example\",\n    translations=[\n        okta.template.EmailTranslationArgs(\n            language=\"en\",\n            subject=\"Stuff\",\n            template=\"Hi $user.firstName,\u003cbr/\u003e\u003cbr/\u003eBlah blah $resetPasswordLink\",\n        ),\n        okta.template.EmailTranslationArgs(\n            language=\"es\",\n            subject=\"Cosas\",\n            template=\"Hola $user.firstName,\u003cbr/\u003e\u003cbr/\u003ePuedo ir al bano $resetPasswordLink\",\n        ),\n    ],\n    type=\"email.forgotPassword\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.Template.Email(\"example\", new Okta.Template.EmailArgs\n        {\n            Translations = \n            {\n                new Okta.Template.Inputs.EmailTranslationArgs\n                {\n                    Language = \"en\",\n                    Subject = \"Stuff\",\n                    Template = \"Hi $user.firstName,\u003cbr/\u003e\u003cbr/\u003eBlah blah $resetPasswordLink\",\n                },\n                new Okta.Template.Inputs.EmailTranslationArgs\n                {\n                    Language = \"es\",\n                    Subject = \"Cosas\",\n                    Template = \"Hola $user.firstName,\u003cbr/\u003e\u003cbr/\u003ePuedo ir al bano $resetPasswordLink\",\n                },\n            },\n            Type = \"email.forgotPassword\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/template\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := template.NewEmail(ctx, \"example\", \u0026template.EmailArgs{\n\t\t\tTranslations: template.EmailTranslationArray{\n\t\t\t\t\u0026template.EmailTranslationArgs{\n\t\t\t\t\tLanguage: pulumi.String(\"en\"),\n\t\t\t\t\tSubject:  pulumi.String(\"Stuff\"),\n\t\t\t\t\tTemplate: pulumi.String(fmt.Sprintf(\"%v%v%v%v%v\", \"Hi \", \"$\", \"user.firstName,\u003cbr/\u003e\u003cbr/\u003eBlah blah \", \"$\", \"resetPasswordLink\")),\n\t\t\t\t},\n\t\t\t\t\u0026template.EmailTranslationArgs{\n\t\t\t\t\tLanguage: pulumi.String(\"es\"),\n\t\t\t\t\tSubject:  pulumi.String(\"Cosas\"),\n\t\t\t\t\tTemplate: pulumi.String(fmt.Sprintf(\"%v%v%v%v%v\", \"Hola \", \"$\", \"user.firstName,\u003cbr/\u003e\u003cbr/\u003ePuedo ir al bano \", \"$\", \"resetPasswordLink\")),\n\t\t\t\t},\n\t\t\t},\n\t\t\tType: pulumi.String(\"email.forgotPassword\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn Okta Email Template can be imported via the template type.\n\n```sh\n $ pulumi import okta:template/email:Email example \u003ctemplate type\u003e\n```\n\n ",
            "properties": {
                "defaultLanguage": {
                    "type": "string",
                    "description": "The default language, by default is set to `\"en\"`.\n"
                },
                "translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:template/EmailTranslation:EmailTranslation"
                    },
                    "description": "Set of translations for a particular template.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Email template type\n"
                }
            },
            "required": [
                "translations",
                "type"
            ],
            "inputProperties": {
                "defaultLanguage": {
                    "type": "string",
                    "description": "The default language, by default is set to `\"en\"`.\n"
                },
                "translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:template/EmailTranslation:EmailTranslation"
                    },
                    "description": "Set of translations for a particular template.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Email template type\n"
                }
            },
            "requiredInputs": [
                "translations",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Email resources.\n",
                "properties": {
                    "defaultLanguage": {
                        "type": "string",
                        "description": "The default language, by default is set to `\"en\"`.\n"
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:template/EmailTranslation:EmailTranslation"
                        },
                        "description": "Set of translations for a particular template.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Email template type\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:trustedorigin/origin:Origin": {
            "description": "Creates a Trusted Origin.\n\nThis resource allows you to create and configure a Trusted Origin.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.trustedorigin.Origin(\"example\", {\n    origin: \"https://example.com\",\n    scopes: [\"CORS\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.trustedorigin.Origin(\"example\",\n    origin=\"https://example.com\",\n    scopes=[\"CORS\"])\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.TrustedOrigin.Origin(\"example\", new Okta.TrustedOrigin.OriginArgs\n        {\n            Origin = \"https://example.com\",\n            Scopes = \n            {\n                \"CORS\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/trustedorigin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := trustedorigin.NewOrigin(ctx, \"example\", \u0026trustedorigin.OriginArgs{\n\t\t\tOrigin: pulumi.String(\"https://example.com\"),\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"CORS\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Trusted Origin can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:trustedorigin/origin:Origin example \u003ctrusted origin id\u003e\n```\n\n ",
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the Trusted Origin is active or not - can only be issued post-creation. By default, it is 'true'.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name for this trusted origin.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "Unique origin URL for this trusted origin.\n",
                    "language": {
                        "csharp": {
                            "name": "OriginName"
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of the Trusted Origin - can be `\"CORS\"` and/or `\"REDIRECT\"`.\n"
                }
            },
            "required": [
                "name",
                "origin",
                "scopes"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the Trusted Origin is active or not - can only be issued post-creation. By default, it is 'true'.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name for this trusted origin.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "Unique origin URL for this trusted origin.\n",
                    "language": {
                        "csharp": {
                            "name": "OriginName"
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of the Trusted Origin - can be `\"CORS\"` and/or `\"REDIRECT\"`.\n"
                }
            },
            "requiredInputs": [
                "origin",
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Origin resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Whether the Trusted Origin is active or not - can only be issued post-creation. By default, it is 'true'.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name for this trusted origin.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "Unique origin URL for this trusted origin.\n",
                        "language": {
                            "csharp": {
                                "name": "OriginName"
                            }
                        }
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Scopes of the Trusted Origin - can be `\"CORS\"` and/or `\"REDIRECT\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:user/baseSchema:BaseSchema": {
            "description": "Manages a User Base Schema property.\n\nThis resource allows you to configure a base user schema property.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.user.BaseSchema(\"example\", {\n    index: \"customPropertyName\",\n    master: \"OKTA\",\n    title: \"customPropertyName\",\n    type: \"string\",\n    userType: okta_user_type_example.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.user.BaseSchema(\"example\",\n    index=\"customPropertyName\",\n    master=\"OKTA\",\n    title=\"customPropertyName\",\n    type=\"string\",\n    user_type=data[\"okta_user_type\"][\"example\"][\"id\"])\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.User.BaseSchema(\"example\", new Okta.User.BaseSchemaArgs\n        {\n            Index = \"customPropertyName\",\n            Master = \"OKTA\",\n            Title = \"customPropertyName\",\n            Type = \"string\",\n            UserType = data.Okta_user_type.Example.Id,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.NewBaseSchema(ctx, \"example\", \u0026user.BaseSchemaArgs{\n\t\t\tIndex:    pulumi.String(\"customPropertyName\"),\n\t\t\tMaster:   pulumi.String(\"OKTA\"),\n\t\t\tTitle:    pulumi.String(\"customPropertyName\"),\n\t\t\tType:     pulumi.String(\"string\"),\n\t\t\tUserType: pulumi.Any(data.Okta_user_type.Example.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUser schema property of default user type can be imported via the property index.\n\n```sh\n $ pulumi import okta:user/baseSchema:BaseSchema example \u003cproperty name\u003e\n```\n\n User schema property of custom user type can be imported via user type id and property index\n\n```sh\n $ pulumi import okta:user/baseSchema:BaseSchema example \u003cuser type id\u003e.\u003cproperty name\u003e\n```\n\n ",
            "properties": {
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The property display name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID\n"
                }
            },
            "required": [
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The property display name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID\n"
                }
            },
            "requiredInputs": [
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BaseSchema resources.\n",
                "properties": {
                    "index": {
                        "type": "string",
                        "description": "The property name.\n"
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the property is required for this application's users.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The property display name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                    },
                    "userType": {
                        "type": "string",
                        "description": "User type ID\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:user/schema:Schema": {
            "description": "Creates a User Schema property.\n\nThis resource allows you to create and configure a custom user schema property.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.user.Schema(\"example\", {\n    description: \"My custom property name\",\n    index: \"customPropertyName\",\n    master: \"OKTA\",\n    scope: \"SELF\",\n    title: \"customPropertyName\",\n    type: \"string\",\n    userType: okta_user_type_example.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.user.Schema(\"example\",\n    description=\"My custom property name\",\n    index=\"customPropertyName\",\n    master=\"OKTA\",\n    scope=\"SELF\",\n    title=\"customPropertyName\",\n    type=\"string\",\n    user_type=data[\"okta_user_type\"][\"example\"][\"id\"])\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.User.Schema(\"example\", new Okta.User.SchemaArgs\n        {\n            Description = \"My custom property name\",\n            Index = \"customPropertyName\",\n            Master = \"OKTA\",\n            Scope = \"SELF\",\n            Title = \"customPropertyName\",\n            Type = \"string\",\n            UserType = data.Okta_user_type.Example.Id,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.NewSchema(ctx, \"example\", \u0026user.SchemaArgs{\n\t\t\tDescription: pulumi.String(\"My custom property name\"),\n\t\t\tIndex:       pulumi.String(\"customPropertyName\"),\n\t\t\tMaster:      pulumi.String(\"OKTA\"),\n\t\t\tScope:       pulumi.String(\"SELF\"),\n\t\t\tTitle:       pulumi.String(\"customPropertyName\"),\n\t\t\tType:        pulumi.String(\"string\"),\n\t\t\tUserType:    pulumi.Any(data.Okta_user_type.Example.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUser schema property of default user type can be imported via the property index.\n\n```sh\n $ pulumi import okta:user/schema:Schema example \u003cindex\u003e\n```\n\n User schema property of custom user type can be imported via user type id and property index\n\n```sh\n $ pulumi import okta:user/schema:Schema example \u003cuser type id\u003e.\u003cindex\u003e\n```\n\n ",
            "properties": {
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:user/SchemaArrayOneOf:SchemaArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `\"array\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"`, `\"OVERRIDE\"` or `\"OKTA\"`.\n"
                },
                "masterOverridePriorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:user/SchemaMasterOverridePriority:SchemaMasterOverridePriority"
                    },
                    "description": "Prioritized list of profile sources (required when `master` is `\"OVERRIDE\"`).\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:user/SchemaOneOf:SchemaOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "- Type of profile source.\n"
                },
                "unique": {
                    "type": "string",
                    "description": "Whether the property should be unique. It can be set to `\"UNIQUE_VALIDATED\"` or `\"NOT_UNIQUE\"`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID\n"
                }
            },
            "required": [
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:user/SchemaArrayOneOf:SchemaArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `\"array\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"`, `\"OVERRIDE\"` or `\"OKTA\"`.\n"
                },
                "masterOverridePriorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:user/SchemaMasterOverridePriority:SchemaMasterOverridePriority"
                    },
                    "description": "Prioritized list of profile sources (required when `master` is `\"OVERRIDE\"`).\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:user/SchemaOneOf:SchemaOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "- Type of profile source.\n"
                },
                "unique": {
                    "type": "string",
                    "description": "Whether the property should be unique. It can be set to `\"UNIQUE_VALIDATED\"` or `\"NOT_UNIQUE\"`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID\n"
                }
            },
            "requiredInputs": [
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Schema resources.\n",
                "properties": {
                    "arrayEnums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values that an array property's items can be set to.\n"
                    },
                    "arrayOneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:user/SchemaArrayOneOf:SchemaArrayOneOf"
                        },
                        "description": "Display name and value an enum array can be set to.\n"
                    },
                    "arrayType": {
                        "type": "string",
                        "description": "The type of the array elements if `type` is set to `\"array\"`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the user schema property.\n"
                    },
                    "enums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                    },
                    "externalName": {
                        "type": "string",
                        "description": "External name of the user schema property.\n"
                    },
                    "externalNamespace": {
                        "type": "string",
                        "description": "External name of the user schema property.\n"
                    },
                    "index": {
                        "type": "string",
                        "description": "The property name.\n"
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"`, `\"OVERRIDE\"` or `\"OKTA\"`.\n"
                    },
                    "masterOverridePriorities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:user/SchemaMasterOverridePriority:SchemaMasterOverridePriority"
                        },
                        "description": "Prioritized list of profile sources (required when `master` is `\"OVERRIDE\"`).\n"
                    },
                    "maxLength": {
                        "type": "integer",
                        "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                    },
                    "minLength": {
                        "type": "integer",
                        "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                    },
                    "oneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:user/SchemaOneOf:SchemaOneOf"
                        },
                        "description": "Array of maps containing a mapping for display name to enum value.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the property is required for this application's users.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "display name for the enum value.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "- Type of profile source.\n"
                    },
                    "unique": {
                        "type": "string",
                        "description": "Whether the property should be unique. It can be set to `\"UNIQUE_VALIDATED\"` or `\"NOT_UNIQUE\"`.\n"
                    },
                    "userType": {
                        "type": "string",
                        "description": "User type ID\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:user/user:User": {
            "description": "Creates an Okta User.\n\nThis resource allows you to create and configure an Okta User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.user.User(\"example\", {\n    city: \"New York\",\n    costCenter: \"10\",\n    countryCode: \"US\",\n    department: \"IT\",\n    displayName: \"Dr. John Smith\",\n    division: \"Acquisitions\",\n    email: \"john.smith@example.com\",\n    employeeNumber: \"111111\",\n    firstName: \"John\",\n    honorificPrefix: \"Dr.\",\n    honorificSuffix: \"Jr.\",\n    lastName: \"Smith\",\n    locale: \"en_US\",\n    login: \"john.smith@example.com\",\n    manager: \"Jimbo\",\n    managerId: \"222222\",\n    middleName: \"John\",\n    mobilePhone: \"1112223333\",\n    nickName: \"Johnny\",\n    organization: \"Testing Inc.\",\n    postalAddress: \"1234 Testing St.\",\n    preferredLanguage: \"en-us\",\n    primaryPhone: \"4445556666\",\n    profileUrl: \"http://www.example.com/profile\",\n    secondEmail: \"john.smith.fun@example.com\",\n    state: \"NY\",\n    streetAddress: \"5678 Testing Ave.\",\n    timezone: \"America/New_York\",\n    title: \"Director\",\n    userType: \"Employee\",\n    zipCode: \"11111\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.user.User(\"example\",\n    city=\"New York\",\n    cost_center=\"10\",\n    country_code=\"US\",\n    department=\"IT\",\n    display_name=\"Dr. John Smith\",\n    division=\"Acquisitions\",\n    email=\"john.smith@example.com\",\n    employee_number=\"111111\",\n    first_name=\"John\",\n    honorific_prefix=\"Dr.\",\n    honorific_suffix=\"Jr.\",\n    last_name=\"Smith\",\n    locale=\"en_US\",\n    login=\"john.smith@example.com\",\n    manager=\"Jimbo\",\n    manager_id=\"222222\",\n    middle_name=\"John\",\n    mobile_phone=\"1112223333\",\n    nick_name=\"Johnny\",\n    organization=\"Testing Inc.\",\n    postal_address=\"1234 Testing St.\",\n    preferred_language=\"en-us\",\n    primary_phone=\"4445556666\",\n    profile_url=\"http://www.example.com/profile\",\n    second_email=\"john.smith.fun@example.com\",\n    state=\"NY\",\n    street_address=\"5678 Testing Ave.\",\n    timezone=\"America/New_York\",\n    title=\"Director\",\n    user_type=\"Employee\",\n    zip_code=\"11111\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.User.User(\"example\", new Okta.User.UserArgs\n        {\n            City = \"New York\",\n            CostCenter = \"10\",\n            CountryCode = \"US\",\n            Department = \"IT\",\n            DisplayName = \"Dr. John Smith\",\n            Division = \"Acquisitions\",\n            Email = \"john.smith@example.com\",\n            EmployeeNumber = \"111111\",\n            FirstName = \"John\",\n            HonorificPrefix = \"Dr.\",\n            HonorificSuffix = \"Jr.\",\n            LastName = \"Smith\",\n            Locale = \"en_US\",\n            Login = \"john.smith@example.com\",\n            Manager = \"Jimbo\",\n            ManagerId = \"222222\",\n            MiddleName = \"John\",\n            MobilePhone = \"1112223333\",\n            NickName = \"Johnny\",\n            Organization = \"Testing Inc.\",\n            PostalAddress = \"1234 Testing St.\",\n            PreferredLanguage = \"en-us\",\n            PrimaryPhone = \"4445556666\",\n            ProfileUrl = \"http://www.example.com/profile\",\n            SecondEmail = \"john.smith.fun@example.com\",\n            State = \"NY\",\n            StreetAddress = \"5678 Testing Ave.\",\n            Timezone = \"America/New_York\",\n            Title = \"Director\",\n            UserType = \"Employee\",\n            ZipCode = \"11111\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.NewUser(ctx, \"example\", \u0026user.UserArgs{\n\t\t\tCity:              pulumi.String(\"New York\"),\n\t\t\tCostCenter:        pulumi.String(\"10\"),\n\t\t\tCountryCode:       pulumi.String(\"US\"),\n\t\t\tDepartment:        pulumi.String(\"IT\"),\n\t\t\tDisplayName:       pulumi.String(\"Dr. John Smith\"),\n\t\t\tDivision:          pulumi.String(\"Acquisitions\"),\n\t\t\tEmail:             pulumi.String(\"john.smith@example.com\"),\n\t\t\tEmployeeNumber:    pulumi.String(\"111111\"),\n\t\t\tFirstName:         pulumi.String(\"John\"),\n\t\t\tHonorificPrefix:   pulumi.String(\"Dr.\"),\n\t\t\tHonorificSuffix:   pulumi.String(\"Jr.\"),\n\t\t\tLastName:          pulumi.String(\"Smith\"),\n\t\t\tLocale:            pulumi.String(\"en_US\"),\n\t\t\tLogin:             pulumi.String(\"john.smith@example.com\"),\n\t\t\tManager:           pulumi.String(\"Jimbo\"),\n\t\t\tManagerId:         pulumi.String(\"222222\"),\n\t\t\tMiddleName:        pulumi.String(\"John\"),\n\t\t\tMobilePhone:       pulumi.String(\"1112223333\"),\n\t\t\tNickName:          pulumi.String(\"Johnny\"),\n\t\t\tOrganization:      pulumi.String(\"Testing Inc.\"),\n\t\t\tPostalAddress:     pulumi.String(\"1234 Testing St.\"),\n\t\t\tPreferredLanguage: pulumi.String(\"en-us\"),\n\t\t\tPrimaryPhone:      pulumi.String(\"4445556666\"),\n\t\t\tProfileUrl:        pulumi.String(\"http://www.example.com/profile\"),\n\t\t\tSecondEmail:       pulumi.String(\"john.smith.fun@example.com\"),\n\t\t\tState:             pulumi.String(\"NY\"),\n\t\t\tStreetAddress:     pulumi.String(\"5678 Testing Ave.\"),\n\t\t\tTimezone:          pulumi.String(\"America/New_York\"),\n\t\t\tTitle:             pulumi.String(\"Director\"),\n\t\t\tUserType:          pulumi.String(\"Employee\"),\n\t\t\tZipCode:           pulumi.String(\"11111\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn Okta User can be imported via the ID.\n\n```sh\n $ pulumi import okta:user/user:User example \u003cuser id\u003e\n```\n\n ",
            "properties": {
                "adminRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Administrator roles assigned to User.\n- `DEPRECATED`: Please replace usage with the `okta.UserAdminRoles` resource.\n",
                    "deprecationMessage": "The `admin_roles` field is now deprecated for the resource `okta_user`, please replace all uses of this with: `okta_user_admin_roles`"
                },
                "city": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "costCenter": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "customProfileAttributes": {
                    "type": "string",
                    "description": "raw JSON containing all custom profile attributes.\n"
                },
                "department": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "division": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "email": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "employeeNumber": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "User's First Name, required by default.\n"
                },
                "groupMemberships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "User profile property.\n",
                    "deprecationMessage": "The `group_memberships` field is now deprecated for the resource `okta_user`, please replace all uses of this with: `okta_user_group_memberships`"
                },
                "honorificPrefix": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "honorificSuffix": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "User's Last Name, required by default.\n"
                },
                "locale": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "login": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "manager": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "managerId": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "middleName": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "mobilePhone": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "nickName": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "organization": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "password": {
                    "type": "string",
                    "description": "User password.\n"
                },
                "postalAddress": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "preferredLanguage": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "primaryPhone": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "profileUrl": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "rawStatus": {
                    "type": "string",
                    "description": "The raw status of the User in Okta - (status is mapped)\n"
                },
                "recoveryAnswer": {
                    "type": "string",
                    "description": "User password recovery answer.\n"
                },
                "recoveryQuestion": {
                    "type": "string",
                    "description": "User password recovery question.\n"
                },
                "secondEmail": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "state": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "status": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "streetAddress": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "title": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "zipCode": {
                    "type": "string",
                    "description": "User profile property.\n"
                }
            },
            "required": [
                "email",
                "firstName",
                "lastName",
                "login",
                "rawStatus"
            ],
            "inputProperties": {
                "adminRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Administrator roles assigned to User.\n- `DEPRECATED`: Please replace usage with the `okta.UserAdminRoles` resource.\n",
                    "deprecationMessage": "The `admin_roles` field is now deprecated for the resource `okta_user`, please replace all uses of this with: `okta_user_admin_roles`"
                },
                "city": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "costCenter": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "customProfileAttributes": {
                    "type": "string",
                    "description": "raw JSON containing all custom profile attributes.\n"
                },
                "department": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "division": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "email": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "employeeNumber": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "User's First Name, required by default.\n"
                },
                "groupMemberships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "User profile property.\n",
                    "deprecationMessage": "The `group_memberships` field is now deprecated for the resource `okta_user`, please replace all uses of this with: `okta_user_group_memberships`"
                },
                "honorificPrefix": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "honorificSuffix": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "User's Last Name, required by default.\n"
                },
                "locale": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "login": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "manager": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "managerId": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "middleName": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "mobilePhone": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "nickName": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "organization": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "password": {
                    "type": "string",
                    "description": "User password.\n"
                },
                "postalAddress": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "preferredLanguage": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "primaryPhone": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "profileUrl": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "recoveryAnswer": {
                    "type": "string",
                    "description": "User password recovery answer.\n"
                },
                "recoveryQuestion": {
                    "type": "string",
                    "description": "User password recovery question.\n"
                },
                "secondEmail": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "state": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "status": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "streetAddress": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "title": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "zipCode": {
                    "type": "string",
                    "description": "User profile property.\n"
                }
            },
            "requiredInputs": [
                "email",
                "firstName",
                "lastName",
                "login"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "adminRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Administrator roles assigned to User.\n- `DEPRECATED`: Please replace usage with the `okta.UserAdminRoles` resource.\n",
                        "deprecationMessage": "The `admin_roles` field is now deprecated for the resource `okta_user`, please replace all uses of this with: `okta_user_admin_roles`"
                    },
                    "city": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "costCenter": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "customProfileAttributes": {
                        "type": "string",
                        "description": "raw JSON containing all custom profile attributes.\n"
                    },
                    "department": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "division": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "employeeNumber": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "User's First Name, required by default.\n"
                    },
                    "groupMemberships": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "User profile property.\n",
                        "deprecationMessage": "The `group_memberships` field is now deprecated for the resource `okta_user`, please replace all uses of this with: `okta_user_group_memberships`"
                    },
                    "honorificPrefix": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "honorificSuffix": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User's Last Name, required by default.\n"
                    },
                    "locale": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "manager": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "managerId": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "middleName": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "mobilePhone": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "nickName": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "organization": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "User password.\n"
                    },
                    "postalAddress": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "preferredLanguage": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "primaryPhone": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "profileUrl": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "rawStatus": {
                        "type": "string",
                        "description": "The raw status of the User in Okta - (status is mapped)\n"
                    },
                    "recoveryAnswer": {
                        "type": "string",
                        "description": "User password recovery answer.\n"
                    },
                    "recoveryQuestion": {
                        "type": "string",
                        "description": "User password recovery question.\n"
                    },
                    "secondEmail": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "streetAddress": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "userType": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "User profile property.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:user/userType:UserType": {
            "description": "Creates a User type.\n\nThis resource allows you to create and configure a User Type.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.user.UserType(\"example\", {\n    description: \"example\",\n    displayName: \"example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.user.UserType(\"example\",\n    description=\"example\",\n    display_name=\"example\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Okta.User.UserType(\"example\", new Okta.User.UserTypeArgs\n        {\n            Description = \"example\",\n            DisplayName = \"example\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.NewUserType(ctx, \"example\", \u0026user.UserTypeArgs{\n\t\t\tDescription: pulumi.String(\"example\"),\n\t\t\tDisplayName: pulumi.String(\"example\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA User Type can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:user/userType:UserType example \u003cuser type id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the User Type.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display Name of the User Type.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the User Type.\n"
                }
            },
            "required": [
                "description",
                "displayName",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the User Type.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display Name of the User Type.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the User Type.\n"
                }
            },
            "requiredInputs": [
                "description",
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserType resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the User Type.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display Name of the User Type.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the User Type.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "okta:app/getApp:getApp": {
            "description": "Use this data source to retrieve an application from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.app.getApp({\n    label: \"Example App\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.get_app(label=\"Example App\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.App.GetApp.InvokeAsync(new Okta.App.GetAppArgs\n        {\n            Label = \"Example App\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Example App\"\n\t\t_, err := app.GetApp(ctx, \u0026app.GetAppArgs{\n\t\t\tLabel: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getApp.\n",
                "properties": {
                    "activeOnly": {
                        "type": "boolean",
                        "description": "tells the provider to query for only `ACTIVE` applications.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups IDs assigned to the application.\n- `DEPRECATED`: Please replace all usage of this field with the data source `okta.AppGroupAssignments`.\n",
                        "deprecationMessage": "The `groups` field is now deprecated for the data source `okta_app`, please replace all uses of this with: `okta_app_group_assignments`"
                    },
                    "id": {
                        "type": "string",
                        "description": "`id` of application to retrieve, conflicts with `label` and `label_prefix`.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the app to retrieve, conflicts with `label_prefix` and `id`. Label uses\nthe `?q=\u003clabel\u003e` query parameter exposed by Okta's API. It should be noted that at this time this searches both `name`\nand `label`. This is used to avoid paginating through all applications.\n"
                    },
                    "labelPrefix": {
                        "type": "string",
                        "description": "Label prefix of the app to retrieve, conflicts with `label` and `id`. This will tell the\nprovider to do a `starts with` query as opposed to an `equals` query.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of users IDs assigned to the application.\n- `DEPRECATED`: Please replace all usage of this field with the data source `okta.getAppUserAssignments`.\n",
                        "deprecationMessage": "The `users` field is now deprecated for the data source `okta_app`, please replace all uses of this with: `okta_app_user_assignments`"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getApp.\n",
                "properties": {
                    "activeOnly": {
                        "type": "boolean"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups IDs assigned to the application.\n- `DEPRECATED`: Please replace all usage of this field with the data source `okta.AppGroupAssignments`.\n",
                        "deprecationMessage": "The `groups` field is now deprecated for the data source `okta_app`, please replace all uses of this with: `okta_app_group_assignments`"
                    },
                    "id": {
                        "type": "string",
                        "description": "Application ID.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Application label.\n"
                    },
                    "labelPrefix": {
                        "type": "string"
                    },
                    "links": {
                        "type": "string",
                        "description": "Generic JSON containing discoverable resources related to the app.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Application name.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Application status.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of users IDs assigned to the application.\n- `DEPRECATED`: Please replace all usage of this field with the data source `okta.getAppUserAssignments`.\n",
                        "deprecationMessage": "The `users` field is now deprecated for the data source `okta_app`, please replace all uses of this with: `okta_app_user_assignments`"
                    }
                },
                "type": "object",
                "required": [
                    "links",
                    "name",
                    "status"
                ]
            }
        },
        "okta:app/getMetadataSaml:getMetadataSaml": {
            "description": "Use this data source to retrieve the metadata for SAML application from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.app.getMetadataSaml({\n    appId: \"\u003capp id\u003e\",\n    keyId: \"\u003ccert key id\u003e\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.get_metadata_saml(app_id=\"\u003capp id\u003e\",\n    key_id=\"\u003ccert key id\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.App.GetMetadataSaml.InvokeAsync(new Okta.App.GetMetadataSamlArgs\n        {\n            AppId = \"\u003capp id\u003e\",\n            KeyId = \"\u003ccert key id\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"\u003ccert key id\u003e\"\n\t\t_, err := app.GetMetadataSaml(ctx, \u0026app.GetMetadataSamlArgs{\n\t\t\tAppId: \"\u003capp id\u003e\",\n\t\t\tKeyId: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMetadataSaml.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The application ID.\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "Certificate Key ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMetadataSaml.\n",
                "properties": {
                    "appId": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string",
                        "description": "public certificate from application metadata.\n"
                    },
                    "entityId": {
                        "type": "string",
                        "description": "Entity URL for instance `https://www.okta.com/saml2/service-provider/sposcfdmlybtwkdcgtuf`.\n"
                    },
                    "httpPostBinding": {
                        "type": "string",
                        "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.\n"
                    },
                    "httpRedirectBinding": {
                        "type": "string",
                        "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "keyId": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "string",
                        "description": "raw metadata of application.\n"
                    },
                    "wantAuthnRequestsSigned": {
                        "type": "boolean",
                        "description": "Whether authn requests are signed.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appId",
                    "certificate",
                    "entityId",
                    "httpPostBinding",
                    "httpRedirectBinding",
                    "metadata",
                    "wantAuthnRequestsSigned",
                    "id"
                ]
            }
        },
        "okta:app/getOauth:getOauth": {
            "description": "Use this data source to retrieve an OIDC application from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = pulumi.output(okta.app.getOauth({\n    label: \"Example App\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.app.get_oauth(label=\"Example App\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(Okta.App.GetOauth.InvokeAsync(new Okta.App.GetOauthArgs\n        {\n            Label = \"Example App\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Example App\"\n\t\t_, err := app.GetOauth(ctx, \u0026app.GetOauthArgs{\n\t\t\tLabel: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOauth.\n",
                "properties": {
                    "activeOnly": {
                        "type": "boolean",
                        "description": "tells the provider to query for only `ACTIVE` applications.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups IDs assigned to the application.\n- `DEPRECATED`: Please replace all usage of this field with the data source `okta.AppGroupAssignments`.\n",
                        "deprecationMessage": "The `groups` field is now deprecated for the data source `okta_app_oauth`, please replace all uses of this with: `okta_app_group_assignments`"
                    },
                    "id": {
                        "type": "string",
                        "description": "`id` of application to retrieve, conflicts with `label` and `label_prefix`.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the app to retrieve, conflicts with `label_prefix` and `id`. Label uses\nthe `?q=\u003clabel\u003e` query parameter exposed by Okta's API. It should be noted that at this time this searches both `name`\nand `label`. This is used to avoid paginating through all applications.\n"
                    },
                    "labelPrefix": {
                        "type": "string",
                        "description": "Label prefix of the app to retrieve, conflicts with `label` and `id`. This will tell the\nprovider to do a `starts with` query as opposed to an `equals` query.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of users IDs assigned to the application.\n- `DEPRECATED`: Please replace all usage of this field with the data source `okta.getAppUserAssignments`.\n",
                        "deprecationMessage": "The `users` field is now deprecated for the data source `okta_app_oauth`, please replace all uses of this with: `okta_app_user_assignments`"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOauth.\n",
                "properties": {
                    "activeOnly": {
                        "type": "boolean"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "OAuth client ID. If set during creation, app is created with this id.\n"
                    },
                    "clientUri": {
                        "type": "string",
                        "description": "URI to a web page providing information about the client.\n"
                    },
                    "grantTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OAuth 2.0 grant types.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups IDs assigned to the application.\n- `DEPRECATED`: Please replace all usage of this field with the data source `okta.AppGroupAssignments`.\n",
                        "deprecationMessage": "The `groups` field is now deprecated for the data source `okta_app_oauth`, please replace all uses of this with: `okta_app_group_assignments`"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of application.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Label of application.\n"
                    },
                    "labelPrefix": {
                        "type": "string"
                    },
                    "links": {
                        "type": "string",
                        "description": "generic JSON containing discoverable resources related to the app\n"
                    },
                    "loginMode": {
                        "type": "string",
                        "description": "The type of Idp-Initiated login that the client supports, if any.\n"
                    },
                    "loginScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of scopes to use for the request.\n"
                    },
                    "loginUri": {
                        "type": "string",
                        "description": "URI that initiates login.\n"
                    },
                    "logoUri": {
                        "type": "string",
                        "description": "URI that references a logo for the client.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of application.\n"
                    },
                    "policyUri": {
                        "type": "string",
                        "description": "URI to web page providing client policy document.\n"
                    },
                    "postLogoutRedirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of URIs for redirection after logout.\n"
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of URIs for use in the redirect-based flow.\n"
                    },
                    "responseTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OAuth 2.0 response type strings.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of OAuth application.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of users IDs assigned to the application.\n- `DEPRECATED`: Please replace all usage of this field with the data source `okta.getAppUserAssignments`.\n",
                        "deprecationMessage": "The `users` field is now deprecated for the data source `okta_app_oauth`, please replace all uses of this with: `okta_app_user_assignments`"
                    },
                    "wildcardRedirect": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "autoSubmitToolbar",
                    "clientId",
                    "clientUri",
                    "grantTypes",
                    "hideIos",
                    "hideWeb",
                    "links",
                    "loginMode",
                    "loginScopes",
                    "loginUri",
                    "logoUri",
                    "name",
                    "policyUri",
                    "postLogoutRedirectUris",
                    "redirectUris",
                    "responseTypes",
                    "status",
                    "type",
                    "wildcardRedirect"
                ]
            }
        },
        "okta:app/getSaml:getSaml": {
            "description": "Use this data source to retrieve an SAML application from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.app.getSaml({\n    label: \"Example App\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.get_saml(label=\"Example App\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.App.GetSaml.InvokeAsync(new Okta.App.GetSamlArgs\n        {\n            Label = \"Example App\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Example App\"\n\t\t_, err := app.LookupSaml(ctx, \u0026app.LookupSamlArgs{\n\t\t\tLabel: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSaml.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page URL.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service.\n"
                    },
                    "acsEndpoints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of ACS endpoints. You can configure a maximum of 100 endpoints.\n"
                    },
                    "activeOnly": {
                        "type": "boolean",
                        "description": "tells the provider to query for only `ACTIVE` applications.\n"
                    },
                    "appSettingsJson": {
                        "type": "string",
                        "description": "Application settings in JSON format.\n"
                    },
                    "assertionSigned": {
                        "type": "boolean",
                        "description": "Determines whether the SAML assertion is digitally signed.\n"
                    },
                    "attributeStatements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/getSamlAttributeStatement:getSamlAttributeStatement"
                        },
                        "description": "List of SAML Attribute statements.\n"
                    },
                    "audience": {
                        "type": "string",
                        "description": "Audience restriction.\n"
                    },
                    "authnContextClassRef": {
                        "type": "string",
                        "description": "Identifies the SAML authentication context class for the assertion’s authentication\nstatement.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "defaultRelayState": {
                        "type": "string",
                        "description": "Identifies a specific application resource in an IDP initiated SSO scenario.\n"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Identifies the location where the SAML response is intended to be sent inside the SAML assertion.\n"
                    },
                    "digestAlgorithm": {
                        "type": "string",
                        "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response.\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "features enabled.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups IDs assigned to the application.\n- `DEPRECATED`: Please replace all usage of this field with the data source `okta.AppGroupAssignments`.\n",
                        "deprecationMessage": "The `groups` field is now deprecated for the data source `okta_app_saml`, please replace all uses of this with: `okta_app_group_assignments`"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "honorForceAuthn": {
                        "type": "boolean",
                        "description": "Prompt user to re-authenticate if SP asks for it.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "`id` of application to retrieve, conflicts with `label` and `label_prefix`.\n"
                    },
                    "idpIssuer": {
                        "type": "string",
                        "description": "SAML issuer ID.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the app to retrieve, conflicts with `label_prefix` and `id`. Label uses\nthe `?q=\u003clabel\u003e` query parameter exposed by Okta's API. It should be noted that at this time this searches both `name`\nand `label`. This is used to avoid paginating through all applications.\n"
                    },
                    "labelPrefix": {
                        "type": "string",
                        "description": "Label prefix of the app to retrieve, conflicts with `label` and `id`. This will tell the\nprovider to do a `starts with` query as opposed to an `equals` query.\n"
                    },
                    "recipient": {
                        "type": "string",
                        "description": "The location where the app may present the SAML assertion.\n"
                    },
                    "requestCompressed": {
                        "type": "boolean",
                        "description": "Denotes whether the request is compressed or not.\n"
                    },
                    "responseSigned": {
                        "type": "boolean",
                        "description": "Determines whether the SAML auth response message is digitally signed.\n"
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "Signature algorithm used ot digitally sign the assertion and response.\n"
                    },
                    "spIssuer": {
                        "type": "string",
                        "description": "SAML service provider issuer.\n"
                    },
                    "ssoUrl": {
                        "type": "string",
                        "description": "Single Sign-on Url.\n"
                    },
                    "subjectNameIdFormat": {
                        "type": "string",
                        "description": "Identifies the SAML processing rules.\n"
                    },
                    "subjectNameIdTemplate": {
                        "type": "string",
                        "description": "Template for app user's username when a user is assigned to the app.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template.\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix.\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of users IDs assigned to the application.\n- `DEPRECATED`: Please replace all usage of this field with the data source `okta.getAppUserAssignments`.\n",
                        "deprecationMessage": "The `users` field is now deprecated for the data source `okta_app_saml`, please replace all uses of this with: `okta_app_user_assignments`"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSaml.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page URL.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service.\n"
                    },
                    "acsEndpoints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of ACS endpoints. You can configure a maximum of 100 endpoints.\n"
                    },
                    "activeOnly": {
                        "type": "boolean"
                    },
                    "appSettingsJson": {
                        "type": "string",
                        "description": "Application settings in JSON format.\n"
                    },
                    "assertionSigned": {
                        "type": "boolean",
                        "description": "Determines whether the SAML assertion is digitally signed.\n"
                    },
                    "attributeStatements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/getSamlAttributeStatement:getSamlAttributeStatement"
                        },
                        "description": "List of SAML Attribute statements.\n"
                    },
                    "audience": {
                        "type": "string",
                        "description": "Audience restriction.\n"
                    },
                    "authnContextClassRef": {
                        "type": "string",
                        "description": "Identifies the SAML authentication context class for the assertion’s authentication\nstatement.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "defaultRelayState": {
                        "type": "string",
                        "description": "Identifies a specific application resource in an IDP initiated SSO scenario.\n"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Identifies the location where the SAML response is intended to be sent inside the SAML assertion.\n"
                    },
                    "digestAlgorithm": {
                        "type": "string",
                        "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response.\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "features enabled.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups IDs assigned to the application.\n- `DEPRECATED`: Please replace all usage of this field with the data source `okta.AppGroupAssignments`.\n",
                        "deprecationMessage": "The `groups` field is now deprecated for the data source `okta_app_saml`, please replace all uses of this with: `okta_app_group_assignments`"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "honorForceAuthn": {
                        "type": "boolean",
                        "description": "Prompt user to re-authenticate if SP asks for it.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "id of application.\n"
                    },
                    "idpIssuer": {
                        "type": "string",
                        "description": "SAML issuer ID.\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "Certificate key ID.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "label of application.\n"
                    },
                    "labelPrefix": {
                        "type": "string"
                    },
                    "links": {
                        "type": "string",
                        "description": "Generic JSON containing discoverable resources related to the app\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the attribute statement.\n"
                    },
                    "recipient": {
                        "type": "string",
                        "description": "The location where the app may present the SAML assertion.\n"
                    },
                    "requestCompressed": {
                        "type": "boolean",
                        "description": "Denotes whether the request is compressed or not.\n"
                    },
                    "responseSigned": {
                        "type": "boolean",
                        "description": "Determines whether the SAML auth response message is digitally signed.\n"
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "Signature algorithm used ot digitally sign the assertion and response.\n"
                    },
                    "singleLogoutCertificate": {
                        "type": "string",
                        "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests.\n"
                    },
                    "singleLogoutIssuer": {
                        "type": "string",
                        "description": "The issuer of the Service Provider that generates the Single Logout request.\n"
                    },
                    "singleLogoutUrl": {
                        "type": "string",
                        "description": "The location where the logout response is sent.\n"
                    },
                    "spIssuer": {
                        "type": "string",
                        "description": "SAML service provider issuer.\n"
                    },
                    "ssoUrl": {
                        "type": "string",
                        "description": "Single Sign-on Url.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "status of application.\n"
                    },
                    "subjectNameIdFormat": {
                        "type": "string",
                        "description": "Identifies the SAML processing rules.\n"
                    },
                    "subjectNameIdTemplate": {
                        "type": "string",
                        "description": "Template for app user's username when a user is assigned to the app.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template.\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix.\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of users IDs assigned to the application.\n- `DEPRECATED`: Please replace all usage of this field with the data source `okta.getAppUserAssignments`.\n",
                        "deprecationMessage": "The `users` field is now deprecated for the data source `okta_app_saml`, please replace all uses of this with: `okta_app_user_assignments`"
                    }
                },
                "type": "object",
                "required": [
                    "keyId",
                    "links",
                    "name",
                    "singleLogoutCertificate",
                    "singleLogoutIssuer",
                    "singleLogoutUrl",
                    "status"
                ]
            }
        },
        "okta:auth/getServer:getServer": {
            "description": "Use this data source to retrieve an auth server from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.auth.getServer({\n    name: \"Example Auth\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.get_server(name=\"Example Auth\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.Auth.GetServer.InvokeAsync(new Okta.Auth.GetServerArgs\n        {\n            Name = \"Example Auth\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.LookupServer(ctx, \u0026auth.LookupServerArgs{\n\t\t\tName: \"Example Auth\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServer.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the auth server to retrieve.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServer.\n",
                "properties": {
                    "audiences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of audiences.\n"
                    },
                    "credentialsLastRotated": {
                        "type": "string",
                        "description": "last time credentials were rotated.\n"
                    },
                    "credentialsNextRotation": {
                        "type": "string",
                        "description": "next time credentials will be rotated\n"
                    },
                    "credentialsRotationMode": {
                        "type": "string",
                        "description": "mode of credential rotation, auto or manual.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "description of Authorization server.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The complete URL of the authorization server. This becomes the `iss` claim in an access token.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Can be set to `\"CUSTOM_URL\"` or `\"ORG_URL\"`\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "auth server key id.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the auth server.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "the activation status of the authorization server.\n"
                    }
                },
                "type": "object",
                "required": [
                    "audiences",
                    "credentialsLastRotated",
                    "credentialsNextRotation",
                    "credentialsRotationMode",
                    "description",
                    "issuer",
                    "issuerMode",
                    "kid",
                    "name",
                    "status",
                    "id"
                ]
            }
        },
        "okta:auth/getServerPolicy:getServerPolicy": {
            "description": "Use this data source to retrieve a authorization server policy from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.auth.getServerPolicy({\n    authServerId: \"\u003cauth server id\u003e\",\n    name: \"staff\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.get_server_policy(auth_server_id=\"\u003cauth server id\u003e\",\n    name=\"staff\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.Auth.GetServerPolicy.InvokeAsync(new Okta.Auth.GetServerPolicyArgs\n        {\n            AuthServerId = \"\u003cauth server id\u003e\",\n            Name = \"staff\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.LookupServerPolicy(ctx, \u0026auth.LookupServerPolicyArgs{\n\t\t\tAuthServerId: \"\u003cauth server id\u003e\",\n\t\t\tName:         \"staff\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServerPolicy.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "The ID of the Auth Server.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of policy to retrieve.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authServerId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServerPolicy.\n",
                "properties": {
                    "assignedClients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of clients this policy is assigned to. `[\"ALL_CLIENTS\"]` is a special value when policy is assigned to all clients.\n"
                    },
                    "authServerId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "description of authorization server policy.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "assignedClients",
                    "authServerId",
                    "description",
                    "name",
                    "id"
                ]
            }
        },
        "okta:auth/getServerScopes:getServerScopes": {
            "description": "Use this data source to retrieve a list of authorization server scopes from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = pulumi.output(okta.auth.getServerScopes({\n    authServerId: \"default\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.auth.get_server_scopes(auth_server_id=\"default\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(Okta.Auth.GetServerScopes.InvokeAsync(new Okta.Auth.GetServerScopesArgs\n        {\n            AuthServerId = \"default\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.GetServerScopes(ctx, \u0026auth.GetServerScopesArgs{\n\t\t\tAuthServerId: \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServerScopes.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "Auth server ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authServerId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServerScopes.\n",
                "properties": {
                    "authServerId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:auth/getServerScopesScope:getServerScopesScope"
                        },
                        "description": "collection of authorization server scopes retrieved from Okta with the following properties.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authServerId",
                    "scopes",
                    "id"
                ]
            }
        },
        "okta:deprecated/getDefaultPolicies:getDefaultPolicies": {
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultPolicies.\n",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultPolicies.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "id"
                ]
            }
        },
        "okta:group/getEveryoneGroup:getEveryoneGroup": {
            "description": "Use this data source to retrieve the `Everyone` group from Okta. The same can be achieved with the `okta.group.Group` data\nsource with `name = \"Everyone\"`. This is simply a shortcut.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.group.getEveryoneGroup({ async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.group.get_everyone_group()\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.Group.GetEveryoneGroup.InvokeAsync());\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := group.GetEveryoneGroup(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getEveryoneGroup.\n",
                "properties": {
                    "includeUsers": {
                        "type": "boolean",
                        "description": "whether to retrieve all member ids.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEveryoneGroup.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "description of group.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "includeUsers": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id"
                ]
            }
        },
        "okta:group/getGroup:getGroup": {
            "description": "Use this data source to retrieve a group from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.group.getGroup({\n    name: \"Example App\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.group.get_group(name=\"Example App\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.Group.GetGroup.InvokeAsync(new Okta.Group.GetGroupArgs\n        {\n            Name = \"Example App\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Example App\"\n\t\t_, err := group.LookupGroup(ctx, \u0026group.LookupGroupArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGroup.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the group. Conflicts with `\"name\"` and `\"type\"`.\n"
                    },
                    "includeUsers": {
                        "type": "boolean",
                        "description": "whether to retrieve all member ids.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of group to retrieve.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of the group to retrieve. Can only be one of `OKTA_GROUP` (Native Okta Groups), `APP_GROUP`\n(Imported App Groups), or `BUILT_IN` (Okta System Groups).\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroup.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "description of group.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of group.\n"
                    },
                    "includeUsers": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of group.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of group.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "user ids that are members of this group, only included if `include_users` is set to `true`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "users"
                ]
            }
        },
        "okta:idp/getMetadataSaml:getMetadataSaml": {
            "description": "Use this data source to retrieve SAML IdP metadata from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.idp.getMetadataSaml({\n    idpId: \"\u003cidp id\u003e\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.get_metadata_saml(idp_id=\"\u003cidp id\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.Idp.GetMetadataSaml.InvokeAsync(new Okta.Idp.GetMetadataSamlArgs\n        {\n            IdpId = \"\u003cidp id\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"\u003cidp id\u003e\"\n\t\t_, err := idp.GetMetadataSaml(ctx, \u0026idp.GetMetadataSamlArgs{\n\t\t\tIdpId: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMetadataSaml.\n",
                "properties": {
                    "idpId": {
                        "type": "string",
                        "description": "The id of the IdP to retrieve metadata for.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMetadataSaml.\n",
                "properties": {
                    "assertionsSigned": {
                        "type": "boolean",
                        "description": "whether assertions are signed.\n"
                    },
                    "authnRequestSigned": {
                        "type": "boolean",
                        "description": "whether authn requests are signed.\n"
                    },
                    "encryptionCertificate": {
                        "type": "string",
                        "description": "SAML request encryption certificate.\n"
                    },
                    "entityId": {
                        "type": "string",
                        "description": "Entity URL for instance `https://www.okta.com/saml2/service-provider/sposcfdmlybtwkdcgtuf`.\n"
                    },
                    "httpPostBinding": {
                        "type": "string",
                        "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.\n"
                    },
                    "httpRedirectBinding": {
                        "type": "string",
                        "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "idpId": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "string",
                        "description": "raw IdP metadata.\n"
                    },
                    "signingCertificate": {
                        "type": "string",
                        "description": "SAML request signing certificate.\n"
                    }
                },
                "type": "object",
                "required": [
                    "assertionsSigned",
                    "authnRequestSigned",
                    "encryptionCertificate",
                    "entityId",
                    "httpPostBinding",
                    "httpRedirectBinding",
                    "metadata",
                    "signingCertificate",
                    "id"
                ]
            }
        },
        "okta:idp/getOidc:getOidc": {
            "description": "Use this data source to retrieve a OIDC IdP from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.idp.getOidc({\n    name: \"Example Provider\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.get_oidc(name=\"Example Provider\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.Idp.GetOidc.InvokeAsync(new Okta.Idp.GetOidcArgs\n        {\n            Name = \"Example Provider\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Example Provider\"\n\t\t_, err := idp.LookupOidc(ctx, \u0026idp.LookupOidcArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOidc.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the idp to retrieve, conflicts with `name`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the idp to retrieve, conflicts with `id`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOidc.\n",
                "properties": {
                    "authorizationBinding": {
                        "type": "string",
                        "description": "The method of making an authorization request.\n"
                    },
                    "authorizationUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "Client secret issued by AS for the Okta IdP instance.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "id of idp.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL.\n"
                    },
                    "issuerUrl": {
                        "type": "string",
                        "description": "URI that identifies the issuer.\n"
                    },
                    "jwksBinding": {
                        "type": "string",
                        "description": "The method of making a request for the OIDC JWKS.\n"
                    },
                    "jwksUrl": {
                        "type": "string",
                        "description": "Endpoint where the keys signer publishes its keys in a JWK Set.\n"
                    },
                    "maxClockSkew": {
                        "type": "integer",
                        "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the idp.\n"
                    },
                    "protocolType": {
                        "type": "string",
                        "description": "The type of protocol to use.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The scopes of the IdP.\n"
                    },
                    "tokenBinding": {
                        "type": "string",
                        "description": "The method of making a token request.\n"
                    },
                    "tokenUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of idp.\n"
                    },
                    "userInfoBinding": {
                        "type": "string",
                        "description": "The method of making a user info request.\n"
                    },
                    "userInfoUrl": {
                        "type": "string",
                        "description": "Protected resource endpoint that returns claims about the authenticated user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authorizationBinding",
                    "authorizationUrl",
                    "clientId",
                    "clientSecret",
                    "issuerMode",
                    "issuerUrl",
                    "jwksBinding",
                    "jwksUrl",
                    "maxClockSkew",
                    "protocolType",
                    "scopes",
                    "tokenBinding",
                    "tokenUrl",
                    "type",
                    "userInfoBinding",
                    "userInfoUrl"
                ]
            }
        },
        "okta:idp/getSaml:getSaml": {
            "description": "Use this data source to retrieve a SAML IdP from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.idp.getSaml({\n    name: \"Example App\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.get_saml(name=\"Example App\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.Idp.GetSaml.InvokeAsync(new Okta.Idp.GetSamlArgs\n        {\n            Name = \"Example App\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Example App\"\n\t\t_, err := idp.LookupSaml(ctx, \u0026idp.LookupSamlArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSaml.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the idp to retrieve, conflicts with `name`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the idp to retrieve, conflicts with `id`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSaml.\n",
                "properties": {
                    "acsBinding": {
                        "type": "string",
                        "description": "HTTP binding used to receive a SAMLResponse message from the IdP (always equals to `\"HTTP-POST\"`).\n"
                    },
                    "acsType": {
                        "type": "string",
                        "description": "Determines whether to publish an instance-specific (trust) or organization (shared) ACS endpoint in the SAML metadata.\n"
                    },
                    "audience": {
                        "type": "string",
                        "description": "URI that identifies the target Okta IdP instance (SP)\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "id of idp.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "URI that identifies the issuer (IdP).\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "indicates whether Okta uses the original Okta org domain URL, or a custom domain URL in the request to the IdP.\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "Key ID reference to the IdP's X.509 signature certificate.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the idp.\n"
                    },
                    "ssoBinding": {
                        "type": "string",
                        "description": "single sign-on binding.\n"
                    },
                    "ssoDestination": {
                        "type": "string",
                        "description": "SSO request binding, HTTP-POST or HTTP-REDIRECT.\n"
                    },
                    "ssoUrl": {
                        "type": "string",
                        "description": "single sign-on url.\n"
                    },
                    "subjectFilter": {
                        "type": "string",
                        "description": "regular expression pattern used to filter untrusted IdP usernames.\n"
                    },
                    "subjectFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Expression to generate or transform a unique username for the IdP user.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of idp.\n"
                    }
                },
                "type": "object",
                "required": [
                    "acsBinding",
                    "acsType",
                    "audience",
                    "issuer",
                    "issuerMode",
                    "kid",
                    "ssoBinding",
                    "ssoDestination",
                    "ssoUrl",
                    "subjectFilter",
                    "subjectFormats",
                    "type"
                ]
            }
        },
        "okta:idp/getSocial:getSocial": {
            "description": "Use this data source to retrieve a social IdP from Okta, namely `APPLE`, `FACEBOOK`, `LINKEDIN`, `MICROSOFT`, or  `GOOGLE`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.idp.getSocial({\n    name: \"My Facebook IdP\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.get_social(name=\"My Facebook IdP\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.Idp.GetSocial.InvokeAsync(new Okta.Idp.GetSocialArgs\n        {\n            Name = \"My Facebook IdP\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"My Facebook IdP\"\n\t\t_, err := idp.LookupSocial(ctx, \u0026idp.LookupSocialArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSocial.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the social idp to retrieve, conflicts with `name`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the social idp to retrieve, conflicts with `id`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSocial.\n",
                "properties": {
                    "accountLinkAction": {
                        "type": "string",
                        "description": "Specifies the account linking action for an IdP user.\n"
                    },
                    "accountLinkGroupIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group memberships to determine link candidates.\n"
                    },
                    "authorizationBinding": {
                        "type": "string",
                        "description": "The method of making an authorization request.\n"
                    },
                    "authorizationUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "Client secret issued by AS for the Okta IdP instance.\n"
                    },
                    "deprovisionedAction": {
                        "type": "string",
                        "description": "Action for a previously deprovisioned IdP user during authentication.\n"
                    },
                    "groupsAction": {
                        "type": "string",
                        "description": "Provisioning action for IdP user's group memberships.\n"
                    },
                    "groupsAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Okta Group IDs.\n"
                    },
                    "groupsAttribute": {
                        "type": "string",
                        "description": "IdP user profile attribute name for an array value that contains group memberships.\n"
                    },
                    "groupsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Whitelist of Okta Group identifiers.\n"
                    },
                    "id": {
                        "type": "string"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL.\n"
                    },
                    "maxClockSkew": {
                        "type": "integer",
                        "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "profileMaster": {
                        "type": "boolean",
                        "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                    },
                    "protocolType": {
                        "type": "string",
                        "description": "The type of protocol to use.\n"
                    },
                    "provisioningAction": {
                        "type": "string",
                        "description": "Provisioning action for an IdP user during authentication.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The scopes of the IdP.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the IdP.\n"
                    },
                    "subjectMatchAttribute": {
                        "type": "string",
                        "description": "Okta user profile attribute for matching transformed IdP username.\n"
                    },
                    "subjectMatchType": {
                        "type": "string",
                        "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username.\n"
                    },
                    "suspendedAction": {
                        "type": "string",
                        "description": "Action for a previously suspended IdP user during authentication.\n"
                    },
                    "tokenBinding": {
                        "type": "string",
                        "description": "The method of making a token request.\n"
                    },
                    "tokenUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of Social IdP.\n"
                    },
                    "usernameTemplate": {
                        "type": "string",
                        "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountLinkAction",
                    "accountLinkGroupIncludes",
                    "authorizationBinding",
                    "authorizationUrl",
                    "clientId",
                    "clientSecret",
                    "deprovisionedAction",
                    "groupsAction",
                    "groupsAssignments",
                    "groupsAttribute",
                    "groupsFilters",
                    "issuerMode",
                    "maxClockSkew",
                    "profileMaster",
                    "protocolType",
                    "provisioningAction",
                    "scopes",
                    "status",
                    "subjectMatchAttribute",
                    "subjectMatchType",
                    "suspendedAction",
                    "tokenBinding",
                    "tokenUrl",
                    "type",
                    "usernameTemplate"
                ]
            }
        },
        "okta:index/getAppGroupAssignments:getAppGroupAssignments": {
            "description": "Use this data source to retrieve the list of groups assigned to the given Okta application (by ID).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.getAppGroupAssignments({\n    id: okta_app_oauth.test.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.get_app_group_assignments(id=okta_app_oauth[\"test\"][\"id\"])\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(Okta.GetAppGroupAssignments.InvokeAsync(new Okta.GetAppGroupAssignmentsArgs\n        {\n            Id = okta_app_oauth.Test.Id,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.LookupAppGroupAssignments(ctx, \u0026okta.LookupAppGroupAssignmentsArgs{\n\t\t\tId: okta_app_oauth.Test.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppGroupAssignments.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Okta application you want to retrieve the groups for.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppGroupAssignments.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups IDs assigned to the application.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of application.\n"
                    }
                },
                "type": "object",
                "required": [
                    "groups",
                    "id"
                ]
            }
        },
        "okta:index/getAppUserAssignments:getAppUserAssignments": {
            "description": "Use this data source to retrieve the list of users assigned to the given Okta application (by ID).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.getAppUserAssignments({\n    id: okta_app_oauth.test.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.get_app_user_assignments(id=okta_app_oauth[\"test\"][\"id\"])\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(Okta.GetAppUserAssignments.InvokeAsync(new Okta.GetAppUserAssignmentsArgs\n        {\n            Id = okta_app_oauth.Test.Id,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetAppUserAssignments(ctx, \u0026okta.GetAppUserAssignmentsArgs{\n\t\t\tId: okta_app_oauth.Test.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppUserAssignments.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Okta application you want to retrieve the groups for.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppUserAssignments.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of application.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of user IDs assigned to the application.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "users"
                ]
            }
        },
        "okta:index/getBehaviour:getBehaviour": {
            "description": "Use this data source to retrieve a behavior from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.getBehaviour({\n    label: \"New City\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.get_behaviour(label=\"New City\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.GetBehaviour.InvokeAsync(new Okta.GetBehaviourArgs\n        {\n            Label = \"New City\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.LookupBehaviour(ctx, \u0026okta.LookupBehaviourArgs{\n\t\t\tLabel: \"New City\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBehaviour.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "`id` of behavior to retrieve, conflicts with `name`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the behavior to retrieve. Name uses the `?q=\u003cname\u003e` query parameter exposed by \nOkta's API.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBehaviour.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Behavior ID.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Behavior name.\n"
                    },
                    "settings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of behavior settings.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Behavior status.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Behavior type.\n"
                    }
                },
                "type": "object",
                "required": [
                    "settings",
                    "status",
                    "type"
                ]
            }
        },
        "okta:index/getBehaviours:getBehaviours": {
            "description": "Use this data source to retrieve a behaviors from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.getBehaviours({\n    q: \"New\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.get_behaviours(q=\"New\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.GetBehaviours.InvokeAsync(new Okta.GetBehavioursArgs\n        {\n            Q = \"New\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"New\"\n\t\t_, err := okta.GetBehaviours(ctx, \u0026okta.GetBehavioursArgs{\n\t\t\tQ: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBehaviours.\n",
                "properties": {
                    "q": {
                        "type": "string",
                        "description": "Searches query to look up behaviors.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBehaviours.\n",
                "properties": {
                    "behaviors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/getBehavioursBehavior:getBehavioursBehavior"
                        },
                        "description": "List of behaviors.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "q": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "behaviors",
                    "id"
                ]
            }
        },
        "okta:index/getGroups:getGroups": {
            "description": "Use this data source to retrieve a list of groups from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.getGroups({\n    q: \"Engineering - \",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.get_groups(q=\"Engineering - \")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.GetGroups.InvokeAsync(new Okta.GetGroupsArgs\n        {\n            Q = \"Engineering - \",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Engineering - \"\n\t\t_, err := okta.GetGroups(ctx, \u0026okta.GetGroupsArgs{\n\t\t\tQ: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGroups.\n",
                "properties": {
                    "q": {
                        "type": "string",
                        "description": "Searches the name property of groups for matching value.\n"
                    },
                    "search": {
                        "type": "string",
                        "description": "Searches for groups with a\nsupported [filtering](https://developer.okta.com/docs/reference/api-overview/#filtering) expression for\nall [attributes](https://developer.okta.com/docs/reference/api/groups/#group-attributes)\nexcept for `\"_embedded\"`, `\"_links\"`, and `\"objectClass\"`\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of the group to retrieve. Can only be one of `OKTA_GROUP` (Native Okta Groups), `APP_GROUP`\n(Imported App Groups), or `BUILT_IN` (Okta System Groups).\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroups.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/getGroupsGroup:getGroupsGroup"
                        },
                        "description": "collection of groups retrieved from Okta with the following properties.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "q": {
                        "type": "string"
                    },
                    "search": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Group type.\n"
                    }
                },
                "type": "object",
                "required": [
                    "groups",
                    "id"
                ]
            }
        },
        "okta:index/getUserSecurityQuestions:getUserSecurityQuestions": {
            "description": "Use this data source to retrieve a list of user's security questions.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleUser = new okta.user.User(\"exampleUser\", {\n    firstName: \"John\",\n    lastName: \"Smith\",\n    login: \"john.smith@example.com\",\n    email: \"john.smith@example.com\",\n});\nconst exampleUserSecurityQuestions = exampleUser.id.apply(id =\u003e okta.getUserSecurityQuestions({\n    userId: id,\n}));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_user = okta.user.User(\"exampleUser\",\n    first_name=\"John\",\n    last_name=\"Smith\",\n    login=\"john.smith@example.com\",\n    email=\"john.smith@example.com\")\nexample_user_security_questions = example_user.id.apply(lambda id: okta.get_user_security_questions(user_id=id))\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleUser = new Okta.User.User(\"exampleUser\", new Okta.User.UserArgs\n        {\n            FirstName = \"John\",\n            LastName = \"Smith\",\n            Login = \"john.smith@example.com\",\n            Email = \"john.smith@example.com\",\n        });\n        var exampleUserSecurityQuestions = exampleUser.Id.Apply(id =\u003e Okta.GetUserSecurityQuestions.InvokeAsync(new Okta.GetUserSecurityQuestionsArgs\n        {\n            UserId = id,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleUser, err := user.NewUser(ctx, \"exampleUser\", \u0026user.UserArgs{\n\t\t\tFirstName: pulumi.String(\"John\"),\n\t\t\tLastName:  pulumi.String(\"Smith\"),\n\t\t\tLogin:     pulumi.String(\"john.smith@example.com\"),\n\t\t\tEmail:     pulumi.String(\"john.smith@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUserSecurityQuestions.\n",
                "properties": {
                    "userId": {
                        "type": "string",
                        "description": "User ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUserSecurityQuestions.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "questions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/getUserSecurityQuestionsQuestion:getUserSecurityQuestionsQuestion"
                        },
                        "description": "collection of user's security question retrieved from Okta with the following properties:\n"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "questions",
                    "userId",
                    "id"
                ]
            }
        },
        "okta:policy/getDefaultPolicy:getDefaultPolicy": {
            "description": "Use this data source to retrieve a default policy from Okta. This same thing can be achieved using the `okta.policy.getPolicy` with default names, this is simply a shortcut.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.policy.getDefaultPolicy({\n    type: \"PASSWORD\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.policy.get_default_policy(type=\"PASSWORD\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.Policy.GetDefaultPolicy.InvokeAsync(new Okta.Policy.GetDefaultPolicyArgs\n        {\n            Type = \"PASSWORD\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.GetDefaultPolicy(ctx, \u0026policy.GetDefaultPolicyArgs{\n\t\t\tType: \"PASSWORD\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultPolicy.\n",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of policy to retrieve.  Valid values: `OKTA_SIGN_ON`, `PASSWORD`, `MFA_ENROLL`, `IDP_DISCOVERY`\n"
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultPolicy.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of policy.\n"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "id"
                ]
            }
        },
        "okta:policy/getPolicy:getPolicy": {
            "description": "Use this data source to retrieve a policy from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.policy.getPolicy({\n    name: \"Password Policy Example\",\n    type: \"PASSWORD\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.policy.get_policy(name=\"Password Policy Example\",\n    type=\"PASSWORD\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.Policy.GetPolicy.InvokeAsync(new Okta.Policy.GetPolicyArgs\n        {\n            Name = \"Password Policy Example\",\n            Type = \"PASSWORD\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.GetPolicy(ctx, \u0026policy.GetPolicyArgs{\n\t\t\tName: \"Password Policy Example\",\n\t\t\tType: \"PASSWORD\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPolicy.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of policy to retrieve.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of policy to retrieve. Valid values: `OKTA_SIGN_ON`, `PASSWORD`, `MFA_ENROLL`, `IDP_DISCOVERY`\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPolicy.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of policy.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of policy.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type",
                    "id"
                ]
            }
        },
        "okta:user/getUser:getUser": {
            "description": "Use this data source to retrieve a users from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\n// Search for a single user based on supported profile properties\nconst example = pulumi.output(okta.user.getUser({\n    searches: [\n        {\n            name: \"profile.firstName\",\n            value: \"John\",\n        },\n        {\n            name: \"profile.lastName\",\n            value: \"Doe\",\n        },\n    ],\n}, { async: true }));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "searches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:user/getUserSearch:getUserSearch"
                        },
                        "description": "Map of search criteria. It supports the following properties.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "String representing a specific user's id value\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "adminRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Administrator roles assigned to user.\n"
                    },
                    "city": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "costCenter": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "customProfileAttributes": {
                        "type": "string",
                        "description": "raw JSON containing all custom profile attributes.\n"
                    },
                    "department": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "division": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "employeeNumber": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "groupMemberships": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "user profile property.\n"
                    },
                    "honorificPrefix": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "honorificSuffix": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "locale": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "manager": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "managerId": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "middleName": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "mobilePhone": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "nickName": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "organization": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "postalAddress": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "preferredLanguage": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "primaryPhone": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "profileUrl": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:user/getUserSearch:getUserSearch"
                        }
                    },
                    "secondEmail": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "streetAddress": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "userType": {
                        "type": "string",
                        "description": "user profile property.\n"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "user profile property.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminRoles",
                    "city",
                    "costCenter",
                    "countryCode",
                    "customProfileAttributes",
                    "department",
                    "displayName",
                    "division",
                    "email",
                    "employeeNumber",
                    "firstName",
                    "groupMemberships",
                    "honorificPrefix",
                    "honorificSuffix",
                    "lastName",
                    "locale",
                    "login",
                    "manager",
                    "managerId",
                    "middleName",
                    "mobilePhone",
                    "nickName",
                    "organization",
                    "postalAddress",
                    "preferredLanguage",
                    "primaryPhone",
                    "profileUrl",
                    "secondEmail",
                    "state",
                    "status",
                    "streetAddress",
                    "timezone",
                    "title",
                    "userType",
                    "zipCode",
                    "id"
                ]
            }
        },
        "okta:user/getUserProfileMappingSource:getUserProfileMappingSource": {
            "description": "Use this data source to retrieve the base user Profile Mapping source or target from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.user.getUserProfileMappingSource({ async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.user.get_user_profile_mapping_source()\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.User.GetUserProfileMappingSource.InvokeAsync());\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.GetUserProfileMappingSource(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getUserProfileMappingSource.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "id of the source.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of source.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of source.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "type"
                ]
            }
        },
        "okta:user/getUserType:getUserType": {
            "description": "Use this data source to retrieve a user type from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.user.getUserType({\n    name: \"example\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.user.get_user_type(name=\"example\")\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.User.GetUserType.InvokeAsync(new Okta.User.GetUserTypeArgs\n        {\n            Name = \"example\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.LookupUserType(ctx, \u0026user.LookupUserTypeArgs{\n\t\t\tName: \"example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUserType.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "description of user type.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "display name of user type.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of user type to retrieve.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUserType.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "description of user type.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "display name of user type.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "id of user type.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of user type.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ]
            }
        },
        "okta:user/getUsers:getUsers": {
            "description": "Use this data source to retrieve a list of users from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = pulumi.output(okta.user.getUsers({\n    searches: [{\n        comparison: \"sw\",\n        name: \"profile.company\",\n        value: \"Articulate\",\n    }],\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.user.get_users(searches=[okta.user.GetUsersSearchArgs(\n    comparison=\"sw\",\n    name=\"profile.company\",\n    value=\"Articulate\",\n)])\n```\n```csharp\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Okta.User.GetUsers.InvokeAsync(new Okta.User.GetUsersArgs\n        {\n            Searches = \n            {\n                new Okta.User.Inputs.GetUsersSearchArgs\n                {\n                    Comparison = \"sw\",\n                    Name = \"profile.company\",\n                    Value = \"Articulate\",\n                },\n            },\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.GetUsers(ctx, \u0026user.GetUsersArgs{\n\t\t\tSearches: []user.GetUsersSearch{\n\t\t\t\tuser.GetUsersSearch{\n\t\t\t\t\tComparison: \"sw\",\n\t\t\t\t\tName:       \"profile.company\",\n\t\t\t\t\tValue:      \"Articulate\",\n\t\t\t\t},\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "searches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:user/getUsersSearch:getUsersSearch"
                        },
                        "description": "Map of search criteria to find users. It supports the following properties.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:user/getUsersUser:getUsersUser"
                        },
                        "description": "collection of users retrieved from Okta with the following properties.\n"
                    }
                },
                "type": "object",
                "required": [
                    "searches"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:user/getUsersSearch:getUsersSearch"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:user/getUsersUser:getUsersUser"
                        },
                        "description": "collection of users retrieved from Okta with the following properties.\n"
                    }
                },
                "type": "object",
                "required": [
                    "searches",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "app": "App",
                "auth": "Auth",
                "deprecated": "Deprecated",
                "factor": "Factor",
                "group": "Group",
                "idp": "Idp",
                "index": "Index",
                "inline": "Inline",
                "network": "Network",
                "okta": "Okta",
                "policy": "Policy",
                "profile": "Profile",
                "template": "Template",
                "trustedorigin": "TrustedOrigin",
                "user": "User"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-okta/sdk/v3/go/okta"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing okta resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/okta/terraform-provider-okta)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-okta` repo](https://github.com/pulumi/pulumi-okta/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`okta/terraform-provider-okta` repo](https://github.com/okta/terraform-provider-okta/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/okta/terraform-provider-okta)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-okta` repo](https://github.com/pulumi/pulumi-okta/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`okta/terraform-provider-okta` repo](https://github.com/okta/terraform-provider-okta/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}
{
    "name": "okta",
    "description": "A Pulumi package for creating and managing okta resources.",
    "keywords": [
        "pulumi",
        "okta"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`okta` Terraform Provider](https://github.com/okta/terraform-provider-okta).",
    "repository": "https://github.com/pulumi/pulumi-okta",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "app": "App",
                "auth": "Auth",
                "factor": "Factor",
                "group": "Group",
                "idp": "Idp",
                "index": "Index",
                "inline": "Inline",
                "network": "Network",
                "okta": "Okta",
                "policy": "Policy",
                "profile": "Profile",
                "trustedorigin": "TrustedOrigin",
                "user": "User"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-okta/sdk/v4/go/okta"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing okta resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/okta/terraform-provider-okta)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-okta` repo](https://github.com/pulumi/pulumi-okta/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-okta` repo](https://github.com/okta/terraform-provider-okta/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/okta/terraform-provider-okta)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-okta` repo](https://github.com/pulumi/pulumi-okta/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-okta` repo](https://github.com/okta/terraform-provider-okta/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "accessToken": {
                "type": "string",
                "description": "Bearer token granting privileges to Okta API.\n"
            },
            "apiToken": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "backoff": {
                "type": "boolean",
                "description": "Use exponential back off strategy for rate limits.\n"
            },
            "baseUrl": {
                "type": "string",
                "description": "The Okta url. (Use 'oktapreview.com' for Okta testing)\n"
            },
            "clientId": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "httpProxy": {
                "type": "string",
                "description": "Alternate HTTP proxy of scheme://hostname or scheme://hostname:port format\n"
            },
            "logLevel": {
                "type": "integer",
                "description": "providers log level. Minimum is 1 (TRACE), and maximum is 5 (ERROR)\n"
            },
            "maxApiCapacity": {
                "type": "integer",
                "description": "(Experimental) sets what percentage of capacity the provider can use of the total rate limit capacity while making calls\nto the Okta management API endpoints. Okta API operates in one minute buckets. See Okta Management API Rate Limits:\nhttps://developer.okta.com/docs/reference/rl-global-mgmt/\n"
            },
            "maxRetries": {
                "type": "integer",
                "description": "maximum number of retries to attempt before erroring out.\n"
            },
            "maxWaitSeconds": {
                "type": "integer",
                "description": "maximum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.\n"
            },
            "minWaitSeconds": {
                "type": "integer",
                "description": "minimum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.\n"
            },
            "orgName": {
                "type": "string",
                "description": "The organization to manage in Okta.\n"
            },
            "parallelism": {
                "type": "integer",
                "description": "Number of concurrent requests to make within a resource where bulk operations are not possible. Take note of\nhttps://developer.okta.com/docs/api/getting_started/rate-limits.\n"
            },
            "privateKey": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "privateKeyId": {
                "type": "string",
                "description": "API Token Id granting privileges to Okta API.\n"
            },
            "requestTimeout": {
                "type": "integer",
                "description": "Timeout for single request (in seconds) which is made to Okta, the default is `0` (means no limit is set). The maximum\nvalue can be `300`.\n"
            },
            "scopes": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "API Token granting privileges to Okta API.\n"
            }
        }
    },
    "types": {
        "okta:Index/EmailDomainDnsValidationRecord:EmailDomainDnsValidationRecord": {
            "properties": {
                "expiration": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string",
                    "description": "DNS record name.\n"
                },
                "recordType": {
                    "type": "string",
                    "description": "Record type can be TXT or cname.\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expiration",
                        "fqdn",
                        "recordType",
                        "values"
                    ]
                }
            }
        },
        "okta:Index/getDomainDnsRecord:getDomainDnsRecord": {
            "properties": {
                "expiration": {
                    "type": "string",
                    "description": "TXT record expiration.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "DNS record name.\n"
                },
                "recordType": {
                    "type": "string",
                    "description": "Record type can be TXT or CNAME.\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "DNS verification value\n"
                }
            },
            "type": "object",
            "required": [
                "expiration",
                "fqdn",
                "recordType",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:app/OAuthGroupsClaim:OAuthGroupsClaim": {
            "properties": {
                "filterType": {
                    "type": "string",
                    "description": "Groups claim filter. Can only be set if type is `\"FILTER\"`. Valid values: `\"EQUALS\"`, `\"STARTS_WITH\"`, `\"CONTAINS\"`, `\"REGEX\"`.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.\nValid values: `\"CUSTOM_URL\"`,`\"ORG_URL\"` or `\"DYNAMIC\"`. Default is `\"ORG_URL\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the claim that will be used in the token.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of OAuth application. Valid values: `\"web\"`, `\"native\"`, `\"browser\"`, `\"service\"`. For SPA apps use `browser`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value of the claim. Can be an Okta Expression Language statement that evaluates at the time the token is minted.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "issuerMode",
                        "name",
                        "type",
                        "value"
                    ]
                }
            }
        },
        "okta:app/OAuthJwk:OAuthJwk": {
            "properties": {
                "e": {
                    "type": "string"
                },
                "kid": {
                    "type": "string"
                },
                "kty": {
                    "type": "string"
                },
                "n": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "kid",
                "kty"
            ]
        },
        "okta:app/SamlAttributeStatement:SamlAttributeStatement": {
            "properties": {
                "filterType": {
                    "type": "string",
                    "description": "Type of group attribute filter. Valid values are: `\"STARTS_WITH\"`, `\"EQUALS\"`, `\"CONTAINS\"`, or `\"REGEX\"`\n"
                },
                "filterValue": {
                    "type": "string",
                    "description": "Filter value to use.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute statement.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The attribute namespace. It can be set to `\"urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified\"`, `\"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\"`, or `\"urn:oasis:names:tc:SAML:2.0:attrname-format:basic\"`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of attribute statement value. Valid values are: `\"EXPRESSION\"` or `\"GROUP\"`. Default is `\"EXPRESSION\"`.\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values to use.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "okta:app/SamlKey:SamlKey": {
            "properties": {
                "created": {
                    "type": "string",
                    "description": "Date created.\n"
                },
                "e": {
                    "type": "string",
                    "description": "RSA exponent.\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "Date the key expires.\n"
                },
                "kid": {
                    "type": "string",
                    "description": "Key ID.\n"
                },
                "kty": {
                    "type": "string",
                    "description": "Identifies the cryptographic algorithm family used with the key.\n"
                },
                "lastUpdated": {
                    "type": "string",
                    "description": "Date the key was last updated.\n"
                },
                "n": {
                    "type": "string",
                    "description": "RSA modulus.\n"
                },
                "use": {
                    "type": "string",
                    "description": "Intended use of the public key.\n"
                },
                "x5cs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "X.509 certificate chain.\n"
                },
                "x5tS256": {
                    "type": "string",
                    "description": "X.509 certificate SHA-256 thumbprint.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "created",
                        "e",
                        "expiresAt",
                        "kid",
                        "kty",
                        "lastUpdated",
                        "n",
                        "use",
                        "x5cs",
                        "x5tS256"
                    ]
                }
            }
        },
        "okta:app/getSamlAttributeStatement:getSamlAttributeStatement": {
            "properties": {
                "filterType": {
                    "type": "string",
                    "description": "Type of group attribute filter.\n"
                },
                "filterValue": {
                    "type": "string",
                    "description": "Filter value to use.\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of application.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The attribute namespace.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of attribute statement value.\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values to use.\n"
                }
            },
            "type": "object",
            "required": [
                "filterType",
                "filterValue",
                "name",
                "namespace",
                "type",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:auth/getServerScopesScope:getServerScopesScope": {
            "properties": {
                "consent": {
                    "type": "string",
                    "description": "Indicates whether a consent dialog is needed for the Scope\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "Whether the Scope is a default Scope\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Scope\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Name of the end user displayed in a consent dialog box\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the Scope\n"
                },
                "metadataPublish": {
                    "type": "string",
                    "description": "Whether the Scope should be included in the metadata\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Scope\n"
                },
                "system": {
                    "type": "boolean",
                    "description": "Whether Okta created the Scope\n"
                }
            },
            "type": "object",
            "required": [
                "consent",
                "default",
                "description",
                "displayName",
                "id",
                "metadataPublish",
                "name",
                "system"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/AppGroupAssignmentsGroup:AppGroupAssignmentsGroup": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the group to assign.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of group assignment\n"
                },
                "profile": {
                    "type": "string",
                    "description": "JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "profile"
            ]
        },
        "okta:index/AppSignonPolicyRulePlatformInclude:AppSignonPolicyRulePlatformInclude": {
            "properties": {
                "osExpression": {
                    "type": "string",
                    "description": "Only available when using `os_type = \"OTHER\"`\n"
                },
                "osType": {
                    "type": "string",
                    "description": "One of: `\"ANY\"`, `\"IOS\"`, `\"WINDOWS\"`, `\"ANDROID\"`, `\"OTHER\"`, `\"OSX\"`, `\"MACOS\"`\n"
                },
                "type": {
                    "type": "string",
                    "description": "The Verification Method type. It can be set to `\"ASSURANCE\"`. Default is `\"ASSURANCE\"`.\n"
                }
            },
            "type": "object"
        },
        "okta:index/AppUserSchemaPropertyArrayOneOf:AppUserSchemaPropertyArrayOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "value mapping to member of `array_enum`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:index/AppUserSchemaPropertyOneOf:AppUserSchemaPropertyOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "value mapping to member of `array_enum`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:index/DomainDnsRecord:DomainDnsRecord": {
            "properties": {
                "expiration": {
                    "type": "string",
                    "description": "TXT record expiration.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "DNS record name.\n"
                },
                "recordType": {
                    "type": "string",
                    "description": "Record type can be TXT or CNAME.\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "DNS verification value\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expiration",
                        "fqdn",
                        "recordType",
                        "values"
                    ]
                }
            }
        },
        "okta:index/EmailSenderDnsRecord:EmailSenderDnsRecord": {
            "properties": {
                "fqdn": {
                    "type": "string",
                    "description": "DNS record name.\n"
                },
                "recordType": {
                    "type": "string",
                    "description": "Record type can be TXT or CNAME.\n"
                },
                "value": {
                    "type": "string",
                    "description": "DNS verification value\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fqdn",
                        "recordType",
                        "value"
                    ]
                }
            }
        },
        "okta:index/EventHookHeader:EventHookHeader": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Key to use for authentication, usually the header name, for example `\"Authorization\"`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Authentication secret.\n"
                }
            },
            "type": "object"
        },
        "okta:index/GroupSchemaPropertyArrayOneOf:GroupSchemaPropertyArrayOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "value mapping to member of `enum`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:index/GroupSchemaPropertyMasterOverridePriority:GroupSchemaPropertyMasterOverridePriority": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type of profile source.\n"
                },
                "value": {
                    "type": "string",
                    "description": "ID of profile source.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "okta:index/GroupSchemaPropertyOneOf:GroupSchemaPropertyOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "value mapping to member of `enum`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:index/PolicyRuleProfileEnrollmentProfileAttribute:PolicyRuleProfileEnrollmentProfileAttribute": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "A display-friendly label for this property\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of a User Profile property\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Indicates if this property is required for enrollment. Default is `false`.\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "name"
            ]
        },
        "okta:index/TemplateSmsTranslation:TemplateSmsTranslation": {
            "properties": {
                "language": {
                    "type": "string",
                    "description": "The language to map the template to.\n"
                },
                "template": {
                    "type": "string",
                    "description": "The SMS message.\n"
                }
            },
            "type": "object",
            "required": [
                "language",
                "template"
            ]
        },
        "okta:index/UserSchemaPropertyArrayOneOf:UserSchemaPropertyArrayOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "value mapping to member of `enum`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:index/UserSchemaPropertyMasterOverridePriority:UserSchemaPropertyMasterOverridePriority": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type of profile source.\n"
                },
                "value": {
                    "type": "string",
                    "description": "ID of profile source.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "okta:index/UserSchemaPropertyOneOf:UserSchemaPropertyOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "value mapping to member of `enum`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:index/getAuthServerClaimsClaim:getAuthServerClaimsClaim": {
            "properties": {
                "alwaysIncludeInToken": {
                    "type": "boolean",
                    "description": "Specifies whether to include Claims in the token.\n"
                },
                "claimType": {
                    "type": "string",
                    "description": "Specifies whether the Claim is for an access token (`\"RESOURCE\"`) or ID token (`\"IDENTITY\"`).\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the claim.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the claim.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the scopes for this Claim.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the claim.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value of the claim\n"
                },
                "valueType": {
                    "type": "string",
                    "description": "Specifies whether the Claim is an Okta EL expression (`\"EXPRESSION\"`), a set of groups (`\"GROUPS\"`), or a system claim (`\"SYSTEM\"`)\n"
                }
            },
            "type": "object",
            "required": [
                "alwaysIncludeInToken",
                "claimType",
                "id",
                "name",
                "scopes",
                "status",
                "value",
                "valueType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getBehavioursBehavior:getBehavioursBehavior": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Behavior ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Behavior name.\n"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of behavior settings.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Behavior status.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Behavior type.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "settings",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getBrandsBrand:getBrandsBrand": {
            "properties": {
                "customPrivacyPolicyUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "links": {
                    "type": "string"
                },
                "removePoweredByOkta": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "customPrivacyPolicyUrl",
                "id",
                "links",
                "removePoweredByOkta"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getEmailCustomizationsEmailCustomization:getEmailCustomizationsEmailCustomization": {
            "properties": {
                "body": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                },
                "links": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "body",
                "id",
                "isDefault",
                "language",
                "links",
                "subject"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getGroupsGroup:getGroupsGroup": {
            "properties": {
                "customProfileAttributes": {
                    "type": "string",
                    "description": "raw JSON containing all custom profile attributes. Likely only useful on groups of type `APP_GROUP`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Group description.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Group ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Group name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "type of the group to retrieve. Can only be one of `OKTA_GROUP` (Native Okta Groups), `APP_GROUP`\n(Imported App Groups), or `BUILT_IN` (Okta System Groups).\n"
                }
            },
            "type": "object",
            "required": [
                "customProfileAttributes",
                "description",
                "id",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getTemplatesEmailTemplate:getTemplatesEmailTemplate": {
            "properties": {
                "links": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "links",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getThemesTheme:getThemesTheme": {
            "properties": {
                "backgroundImageUrl": {
                    "type": "string"
                },
                "emailTemplateTouchPointVariant": {
                    "type": "string"
                },
                "endUserDashboardTouchPointVariant": {
                    "type": "string"
                },
                "errorPageTouchPointVariant": {
                    "type": "string"
                },
                "faviconUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "links": {
                    "type": "string"
                },
                "logoUrl": {
                    "type": "string"
                },
                "primaryColorContrastHex": {
                    "type": "string"
                },
                "primaryColorHex": {
                    "type": "string"
                },
                "secondaryColorContrastHex": {
                    "type": "string"
                },
                "secondaryColorHex": {
                    "type": "string"
                },
                "signInPageTouchPointVariant": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "backgroundImageUrl",
                "emailTemplateTouchPointVariant",
                "endUserDashboardTouchPointVariant",
                "errorPageTouchPointVariant",
                "faviconUrl",
                "id",
                "links",
                "logoUrl",
                "primaryColorContrastHex",
                "primaryColorHex",
                "secondaryColorContrastHex",
                "secondaryColorHex",
                "signInPageTouchPointVariant"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getTrustedOriginsTrustedOrigin:getTrustedOriginsTrustedOrigin": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the Trusted Origin is active or not - can only be issued post-creation\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the Trusted Origin.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name for this trusted origin.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "Unique origin URL for this trusted origin.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of the Trusted Origin\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "id",
                "name",
                "origin",
                "scopes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getUserSecurityQuestionsQuestion:getUserSecurityQuestionsQuestion": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Security question unique key.\n"
                },
                "text": {
                    "type": "string",
                    "description": "Display text for security question.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "text"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:inline/HookHeader:HookHeader": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Key to use for authentication, usually the header name, for example `\"Authorization\"`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Authentication secret.\n"
                }
            },
            "type": "object"
        },
        "okta:policy/RuleIdpDiscoveryAppExclude:RuleIdpDiscoveryAppExclude": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Use if `type` is `\"APP\"` to indicate the application id to include.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Use if the `type` is `\"APP_TYPE\"` to indicate the type of application(s) to include in instances where an entire group (i.e. `yahoo_mail`) of applications should be included.\n"
                },
                "type": {
                    "type": "string",
                    "description": "One of: `\"ANY\"`, `\"MOBILE\"`, `\"DESKTOP\"`\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "okta:policy/RuleIdpDiscoveryAppInclude:RuleIdpDiscoveryAppInclude": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Use if `type` is `\"APP\"` to indicate the application id to include.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Use if the `type` is `\"APP_TYPE\"` to indicate the type of application(s) to include in instances where an entire group (i.e. `yahoo_mail`) of applications should be included.\n"
                },
                "type": {
                    "type": "string",
                    "description": "One of: `\"ANY\"`, `\"MOBILE\"`, `\"DESKTOP\"`\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "okta:policy/RuleIdpDiscoveryPlatformInclude:RuleIdpDiscoveryPlatformInclude": {
            "properties": {
                "osExpression": {
                    "type": "string",
                    "description": "Only available when using `os_type = \"OTHER\"`\n"
                },
                "osType": {
                    "type": "string",
                    "description": "One of: `\"ANY\"`, `\"IOS\"`, `\"WINDOWS\"`, `\"ANDROID\"`, `\"OTHER\"`, `\"OSX\"`\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "type": {
                    "type": "string",
                    "description": "One of: `\"ANY\"`, `\"MOBILE\"`, `\"DESKTOP\"`\n"
                }
            },
            "type": "object"
        },
        "okta:policy/RuleIdpDiscoveryUserIdentifierPattern:RuleIdpDiscoveryUserIdentifierPattern": {
            "properties": {
                "matchType": {
                    "type": "string",
                    "description": "The kind of pattern. For regex, use `\"EXPRESSION\"`. For simple string matches, use one of the following: `\"SUFFIX\"`, `\"EQUALS\"`, `\"STARTS_WITH\"`, `\"CONTAINS\"`\n"
                },
                "value": {
                    "type": "string",
                    "description": "The regex or simple match string to match against.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                }
            },
            "type": "object"
        },
        "okta:policy/RuleMfaAppExclude:RuleMfaAppExclude": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Use if `type` is `\"APP\"` to indicate the application id to include.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Use if the `type` is `\"APP_TYPE\"` to indicate the type of application(s) to include in instances where an entire group (i.e. `yahoo_mail`) of applications should be included.\n"
                },
                "type": {
                    "type": "string",
                    "description": "One of: `\"APP\"`, `\"APP_TYPE\"`\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "okta:policy/RuleMfaAppInclude:RuleMfaAppInclude": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Use if `type` is `\"APP\"` to indicate the application id to include.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Use if the `type` is `\"APP_TYPE\"` to indicate the type of application(s) to include in instances where an entire group (i.e. `yahoo_mail`) of applications should be included.\n"
                },
                "type": {
                    "type": "string",
                    "description": "One of: `\"APP\"`, `\"APP_TYPE\"`\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "okta:policy/RuleSignonFactorSequence:RuleSignonFactorSequence": {
            "properties": {
                "primaryCriteriaFactorType": {
                    "type": "string",
                    "description": "Primary factor type of the auth section.\n"
                },
                "primaryCriteriaProvider": {
                    "type": "string",
                    "description": "Primary provider of the auth section.\n"
                },
                "secondaryCriterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleSignonFactorSequenceSecondaryCriteria:RuleSignonFactorSequenceSecondaryCriteria"
                    },
                    "description": "Additional authentication steps.\n"
                }
            },
            "type": "object",
            "required": [
                "primaryCriteriaFactorType",
                "primaryCriteriaProvider"
            ]
        },
        "okta:policy/RuleSignonFactorSequenceSecondaryCriteria:RuleSignonFactorSequenceSecondaryCriteria": {
            "properties": {
                "factorType": {
                    "type": "string",
                    "description": "Factor type of the additional authentication step.\n"
                },
                "provider": {
                    "type": "string",
                    "description": "Provider of the additional authentication step.\n"
                }
            },
            "type": "object",
            "required": [
                "factorType",
                "provider"
            ]
        },
        "okta:profile/MappingMapping:MappingMapping": {
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "Combination or single source properties that will be mapped to the target property.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Key of mapping.\n"
                },
                "pushStatus": {
                    "type": "string",
                    "description": "Whether to update target properties on user create \u0026 update or just on create.\n"
                }
            },
            "type": "object",
            "required": [
                "expression",
                "id"
            ]
        },
        "okta:user/UserPasswordHash:UserPasswordHash": {
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "salt": {
                    "type": "string",
                    "description": "Only required for salted hashes. For BCRYPT, this specifies the radix64-encoded salt used to generate\nthe hash, which must be 22 characters long. For other salted hashes, this specifies the base64-encoded salt used to generate the hash.\n"
                },
                "saltOrder": {
                    "type": "string",
                    "description": "Specifies whether salt was pre- or postfixed to the password before hashing. Only required for salted algorithms.\n"
                },
                "value": {
                    "type": "string",
                    "description": "For SHA-512, SHA-256, SHA-1, MD5, this is the actual base64-encoded hash of the password (and salt, if used).\nThis is the Base64 encoded value of the SHA-512/SHA-256/SHA-1/MD5 digest that was computed by either pre-fixing or post-fixing\nthe salt to the password, depending on the saltOrder. If a salt was not used in the source system, then this should just be\nthe Base64 encoded value of the password's SHA-512/SHA-256/SHA-1/MD5 digest. For BCRYPT, This is the actual radix64-encoded hashed password.\n"
                },
                "workFactor": {
                    "type": "integer",
                    "description": "Governs the strength of the hash and the time required to compute it. Only required for BCRYPT algorithm. Minimum value is 1, and maximum is 20.\n"
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "value"
            ]
        },
        "okta:user/getUserSearch:getUserSearch": {
            "properties": {
                "comparison": {
                    "type": "string",
                    "description": "Comparison to use. Comparitors for strings: [`eq`, `ge`, `gt`, `le`, `lt`, `ne`, `pr`, `sw`](https://developer.okta.com/docs/reference/core-okta-api/#operators).\n"
                },
                "expression": {
                    "type": "string",
                    "description": "A raw search expression string. If present it will override name/comparison/value.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of property to search against.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value to compare with.\n"
                }
            },
            "type": "object"
        },
        "okta:user/getUsersSearch:getUsersSearch": {
            "properties": {
                "comparison": {
                    "type": "string",
                    "description": "Comparison to use. Comparitors for strings: [`eq`, `ge`, `gt`, `le`, `lt`, `ne`, `pr`, `sw`](https://developer.okta.com/docs/reference/core-okta-api/#operators).\n"
                },
                "expression": {
                    "type": "string",
                    "description": "A raw search expression string. If present it will override name/comparison/value.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of property to search against.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value to compare with.\n"
                }
            },
            "type": "object"
        },
        "okta:user/getUsersUser:getUsersUser": {
            "properties": {
                "adminRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Administrator roles assigned to user.\n"
                },
                "city": {
                    "type": "string",
                    "description": "City or locality component of user's address.\n"
                },
                "costCenter": {
                    "type": "string",
                    "description": "Name of a cost center assigned to user.\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country name component of user's address.\n"
                },
                "customProfileAttributes": {
                    "type": "string",
                    "description": "Raw JSON containing all custom profile attributes.\n"
                },
                "department": {
                    "type": "string",
                    "description": "Name of user's department.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Name of the user, suitable for display to end users.\n"
                },
                "division": {
                    "type": "string",
                    "description": "Name of user's division.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Primary email address of user.\n"
                },
                "employeeNumber": {
                    "type": "string",
                    "description": "Organization or company assigned unique identifier for the user.\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "Given name of the user.\n"
                },
                "groupMemberships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Groups user belongs to.\n"
                },
                "honorificPrefix": {
                    "type": "string",
                    "description": "Honorific prefix(es) of the user, or title in most Western languages.\n"
                },
                "honorificSuffix": {
                    "type": "string",
                    "description": "Honorific suffix(es) of the user.\n"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string",
                    "description": "Family name of the user.\n"
                },
                "locale": {
                    "type": "string",
                    "description": "User's default location for purposes of localizing items such as currency, date time format, numerical representations, etc.\n"
                },
                "login": {
                    "type": "string",
                    "description": "Unique identifier for the user.\n"
                },
                "manager": {
                    "type": "string",
                    "description": "Display name of the user's manager.\n"
                },
                "managerId": {
                    "type": "string",
                    "description": "`id` of a user's manager.\n"
                },
                "middleName": {
                    "type": "string",
                    "description": "Middle name(s) of the user.\n"
                },
                "mobilePhone": {
                    "type": "string",
                    "description": "Mobile phone number of user.\n"
                },
                "nickName": {
                    "type": "string",
                    "description": "Casual way to address the user in real life.\n"
                },
                "organization": {
                    "type": "string",
                    "description": "Name of user's organization.\n"
                },
                "postalAddress": {
                    "type": "string",
                    "description": "Mailing address component of user's address.\n"
                },
                "preferredLanguage": {
                    "type": "string",
                    "description": "User's preferred written or spoken languages.\n"
                },
                "primaryPhone": {
                    "type": "string",
                    "description": "Primary phone number of user such as home number.\n"
                },
                "profileUrl": {
                    "type": "string",
                    "description": "URL of user's online profile (e.g. a web page).\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "secondEmail": {
                    "type": "string",
                    "description": "Secondary email address of user typically used for account recovery.\n"
                },
                "state": {
                    "type": "string",
                    "description": "State or region component of user's address (region).\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of user.\n"
                },
                "streetAddress": {
                    "type": "string",
                    "description": "Full street address component of user's address.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "User's time zone.\n"
                },
                "title": {
                    "type": "string",
                    "description": "User's title, such as \"Vice President\".\n"
                },
                "userType": {
                    "type": "string",
                    "description": "Used to describe the organization to user relationship such as \"Employee\" or \"Contractor\".\n"
                },
                "zipCode": {
                    "type": "string",
                    "description": "Zipcode or postal code component of user's address (postalCode)\n"
                }
            },
            "type": "object",
            "required": [
                "adminRoles",
                "city",
                "costCenter",
                "countryCode",
                "customProfileAttributes",
                "department",
                "displayName",
                "division",
                "email",
                "employeeNumber",
                "firstName",
                "groupMemberships",
                "honorificPrefix",
                "honorificSuffix",
                "id",
                "lastName",
                "locale",
                "login",
                "manager",
                "managerId",
                "middleName",
                "mobilePhone",
                "nickName",
                "organization",
                "postalAddress",
                "preferredLanguage",
                "primaryPhone",
                "profileUrl",
                "roles",
                "secondEmail",
                "state",
                "status",
                "streetAddress",
                "timezone",
                "title",
                "userType",
                "zipCode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the okta package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "accessToken": {
                "type": "string",
                "description": "Bearer token granting privileges to Okta API.\n"
            },
            "apiToken": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "backoff": {
                "type": "boolean",
                "description": "Use exponential back off strategy for rate limits.\n"
            },
            "baseUrl": {
                "type": "string",
                "description": "The Okta url. (Use 'oktapreview.com' for Okta testing)\n"
            },
            "clientId": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "httpProxy": {
                "type": "string",
                "description": "Alternate HTTP proxy of scheme://hostname or scheme://hostname:port format\n"
            },
            "logLevel": {
                "type": "integer",
                "description": "providers log level. Minimum is 1 (TRACE), and maximum is 5 (ERROR)\n"
            },
            "maxApiCapacity": {
                "type": "integer",
                "description": "(Experimental) sets what percentage of capacity the provider can use of the total rate limit capacity while making calls\nto the Okta management API endpoints. Okta API operates in one minute buckets. See Okta Management API Rate Limits:\nhttps://developer.okta.com/docs/reference/rl-global-mgmt/\n"
            },
            "maxRetries": {
                "type": "integer",
                "description": "maximum number of retries to attempt before erroring out.\n"
            },
            "maxWaitSeconds": {
                "type": "integer",
                "description": "maximum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.\n"
            },
            "minWaitSeconds": {
                "type": "integer",
                "description": "minimum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.\n"
            },
            "orgName": {
                "type": "string",
                "description": "The organization to manage in Okta.\n"
            },
            "parallelism": {
                "type": "integer",
                "description": "Number of concurrent requests to make within a resource where bulk operations are not possible. Take note of\nhttps://developer.okta.com/docs/api/getting_started/rate-limits.\n"
            },
            "privateKey": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "privateKeyId": {
                "type": "string",
                "description": "API Token Id granting privileges to Okta API.\n"
            },
            "requestTimeout": {
                "type": "integer",
                "description": "Timeout for single request (in seconds) which is made to Okta, the default is `0` (means no limit is set). The maximum\nvalue can be `300`.\n"
            },
            "scopes": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "API Token granting privileges to Okta API.\n"
            }
        },
        "inputProperties": {
            "accessToken": {
                "type": "string",
                "description": "Bearer token granting privileges to Okta API.\n"
            },
            "apiToken": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "backoff": {
                "type": "boolean",
                "description": "Use exponential back off strategy for rate limits.\n"
            },
            "baseUrl": {
                "type": "string",
                "description": "The Okta url. (Use 'oktapreview.com' for Okta testing)\n"
            },
            "clientId": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "httpProxy": {
                "type": "string",
                "description": "Alternate HTTP proxy of scheme://hostname or scheme://hostname:port format\n"
            },
            "logLevel": {
                "type": "integer",
                "description": "providers log level. Minimum is 1 (TRACE), and maximum is 5 (ERROR)\n"
            },
            "maxApiCapacity": {
                "type": "integer",
                "description": "(Experimental) sets what percentage of capacity the provider can use of the total rate limit capacity while making calls\nto the Okta management API endpoints. Okta API operates in one minute buckets. See Okta Management API Rate Limits:\nhttps://developer.okta.com/docs/reference/rl-global-mgmt/\n"
            },
            "maxRetries": {
                "type": "integer",
                "description": "maximum number of retries to attempt before erroring out.\n"
            },
            "maxWaitSeconds": {
                "type": "integer",
                "description": "maximum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.\n"
            },
            "minWaitSeconds": {
                "type": "integer",
                "description": "minimum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.\n"
            },
            "orgName": {
                "type": "string",
                "description": "The organization to manage in Okta.\n"
            },
            "parallelism": {
                "type": "integer",
                "description": "Number of concurrent requests to make within a resource where bulk operations are not possible. Take note of\nhttps://developer.okta.com/docs/api/getting_started/rate-limits.\n"
            },
            "privateKey": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "privateKeyId": {
                "type": "string",
                "description": "API Token Id granting privileges to Okta API.\n"
            },
            "requestTimeout": {
                "type": "integer",
                "description": "Timeout for single request (in seconds) which is made to Okta, the default is `0` (means no limit is set). The maximum\nvalue can be `300`.\n"
            },
            "scopes": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "API Token granting privileges to Okta API.\n"
            }
        }
    },
    "resources": {
        "okta:Index/emailDomain:EmailDomain": {
            "description": "This resource allows you to create and configure an email domain.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.index.EmailDomain(\"example\", {\n    brandId: \"abc123\",\n    displayName: \"test\",\n    domain: \"example.com\",\n    userName: \"paul_atreides\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.index.EmailDomain(\"example\",\n    brand_id=\"abc123\",\n    display_name=\"test\",\n    domain=\"example.com\",\n    user_name=\"paul_atreides\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Index.EmailDomain(\"example\", new()\n    {\n        BrandId = \"abc123\",\n        DisplayName = \"test\",\n        Domain = \"example.com\",\n        UserName = \"paul_atreides\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/Index\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Index.NewEmailDomain(ctx, \"example\", \u0026Index.EmailDomainArgs{\n\t\t\tBrandId:     pulumi.String(\"abc123\"),\n\t\t\tDisplayName: pulumi.String(\"test\"),\n\t\t\tDomain:      pulumi.String(\"example.com\"),\n\t\t\tUserName:    pulumi.String(\"paul_atreides\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Index.EmailDomain;\nimport com.pulumi.okta.Index.EmailDomainArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new EmailDomain(\"example\", EmailDomainArgs.builder()        \n            .brandId(\"abc123\")\n            .displayName(\"test\")\n            .domain(\"example.com\")\n            .userName(\"paul_atreides\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:Index:EmailDomain\n    properties:\n      brandId: abc123\n      displayName: test\n      domain: example.com\n      userName: paul_atreides\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCustom email domain can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:Index/emailDomain:EmailDomain example \u0026#60;domain id\u0026#62;\n```\n\n ",
            "properties": {
                "brandId": {
                    "type": "string",
                    "description": "Brand id of the email domain.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the email domain.\n"
                },
                "dnsValidationRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:Index/EmailDomainDnsValidationRecord:EmailDomainDnsValidationRecord"
                    },
                    "description": "TXT and CNAME records to be registered for the domain.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Mail domain to send from.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "User name of the email domain.\n"
                },
                "validationStatus": {
                    "type": "string",
                    "description": "Status of the email domain (shows whether the domain is verified).\n"
                }
            },
            "required": [
                "brandId",
                "displayName",
                "dnsValidationRecords",
                "domain",
                "userName",
                "validationStatus"
            ],
            "inputProperties": {
                "brandId": {
                    "type": "string",
                    "description": "Brand id of the email domain.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the email domain.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Mail domain to send from.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "User name of the email domain.\n"
                }
            },
            "requiredInputs": [
                "brandId",
                "displayName",
                "domain",
                "userName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailDomain resources.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand id of the email domain.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the email domain.\n"
                    },
                    "dnsValidationRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:Index/EmailDomainDnsValidationRecord:EmailDomainDnsValidationRecord"
                        },
                        "description": "TXT and CNAME records to be registered for the domain.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Mail domain to send from.\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "User name of the email domain.\n"
                    },
                    "validationStatus": {
                        "type": "string",
                        "description": "Status of the email domain (shows whether the domain is verified).\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:Index/emailDomainVerification:EmailDomainVerification": {
            "description": "Verifies the email domain. The resource won't be created if the email domain could not be verified.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleEmailDomain = new okta.index.EmailDomain(\"exampleEmailDomain\", {\n    brandId: \"abc123\",\n    domain: \"example.com\",\n    displayName: \"test\",\n    userName: \"paul_atreides\",\n});\nconst exampleEmailDomainVerification = new okta.index.EmailDomainVerification(\"exampleEmailDomainVerification\", {emailDomainId: okta_email_domain.valid.id});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_email_domain = okta.index.EmailDomain(\"exampleEmailDomain\",\n    brand_id=\"abc123\",\n    domain=\"example.com\",\n    display_name=\"test\",\n    user_name=\"paul_atreides\")\nexample_email_domain_verification = okta.index.EmailDomainVerification(\"exampleEmailDomainVerification\", email_domain_id=okta_email_domain[\"valid\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleEmailDomain = new Okta.Index.EmailDomain(\"exampleEmailDomain\", new()\n    {\n        BrandId = \"abc123\",\n        Domain = \"example.com\",\n        DisplayName = \"test\",\n        UserName = \"paul_atreides\",\n    });\n\n    var exampleEmailDomainVerification = new Okta.Index.EmailDomainVerification(\"exampleEmailDomainVerification\", new()\n    {\n        EmailDomainId = okta_email_domain.Valid.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/Index\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Index.NewEmailDomain(ctx, \"exampleEmailDomain\", \u0026Index.EmailDomainArgs{\n\t\t\tBrandId:     pulumi.String(\"abc123\"),\n\t\t\tDomain:      pulumi.String(\"example.com\"),\n\t\t\tDisplayName: pulumi.String(\"test\"),\n\t\t\tUserName:    pulumi.String(\"paul_atreides\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Index.NewEmailDomainVerification(ctx, \"exampleEmailDomainVerification\", \u0026Index.EmailDomainVerificationArgs{\n\t\t\tEmailDomainId: pulumi.Any(okta_email_domain.Valid.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Index.EmailDomain;\nimport com.pulumi.okta.Index.EmailDomainArgs;\nimport com.pulumi.okta.Index.EmailDomainVerification;\nimport com.pulumi.okta.Index.EmailDomainVerificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleEmailDomain = new EmailDomain(\"exampleEmailDomain\", EmailDomainArgs.builder()        \n            .brandId(\"abc123\")\n            .domain(\"example.com\")\n            .displayName(\"test\")\n            .userName(\"paul_atreides\")\n            .build());\n\n        var exampleEmailDomainVerification = new EmailDomainVerification(\"exampleEmailDomainVerification\", EmailDomainVerificationArgs.builder()        \n            .emailDomainId(okta_email_domain.valid().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleEmailDomain:\n    type: okta:Index:EmailDomain\n    properties:\n      brandId: abc123\n      domain: example.com\n      displayName: test\n      userName: paul_atreides\n  exampleEmailDomainVerification:\n    type: okta:Index:EmailDomainVerification\n    properties:\n      emailDomainId: ${okta_email_domain.valid.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThis resource does not support importing. ",
            "properties": {
                "emailDomainId": {
                    "type": "string",
                    "description": "Email domain ID.\n"
                }
            },
            "required": [
                "emailDomainId"
            ],
            "inputProperties": {
                "emailDomainId": {
                    "type": "string",
                    "description": "Email domain ID.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "emailDomainId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailDomainVerification resources.\n",
                "properties": {
                    "emailDomainId": {
                        "type": "string",
                        "description": "Email domain ID.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:app/autoLogin:AutoLogin": {
            "description": "This resource allows you to create and configure an Auto Login Okta Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.AutoLogin(\"example\", {\n    credentialsScheme: \"EDIT_USERNAME_AND_PASSWORD\",\n    label: \"Example App\",\n    revealPassword: true,\n    signOnRedirectUrl: \"https://example.com\",\n    signOnUrl: \"https://example.com/login.html\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.AutoLogin(\"example\",\n    credentials_scheme=\"EDIT_USERNAME_AND_PASSWORD\",\n    label=\"Example App\",\n    reveal_password=True,\n    sign_on_redirect_url=\"https://example.com\",\n    sign_on_url=\"https://example.com/login.html\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.App.AutoLogin(\"example\", new()\n    {\n        CredentialsScheme = \"EDIT_USERNAME_AND_PASSWORD\",\n        Label = \"Example App\",\n        RevealPassword = true,\n        SignOnRedirectUrl = \"https://example.com\",\n        SignOnUrl = \"https://example.com/login.html\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewAutoLogin(ctx, \"example\", \u0026app.AutoLoginArgs{\n\t\t\tCredentialsScheme: pulumi.String(\"EDIT_USERNAME_AND_PASSWORD\"),\n\t\t\tLabel:             pulumi.String(\"Example App\"),\n\t\t\tRevealPassword:    pulumi.Bool(true),\n\t\t\tSignOnRedirectUrl: pulumi.String(\"https://example.com\"),\n\t\t\tSignOnUrl:         pulumi.String(\"https://example.com/login.html\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.AutoLogin;\nimport com.pulumi.okta.app.AutoLoginArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AutoLogin(\"example\", AutoLoginArgs.builder()        \n            .credentialsScheme(\"EDIT_USERNAME_AND_PASSWORD\")\n            .label(\"Example App\")\n            .revealPassword(true)\n            .signOnRedirectUrl(\"https://example.com\")\n            .signOnUrl(\"https://example.com/login.html\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:AutoLogin\n    properties:\n      credentialsScheme: EDIT_USERNAME_AND_PASSWORD\n      label: Example App\n      revealPassword: true\n      signOnRedirectUrl: https://example.com\n      signOnUrl: https://example.com/login.html\n```\n{{% /example %}}\n{{% example %}}\n### Pre-configured application\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.AutoLogin(\"example\", {\n    appSettingsJson: `{\n    \"domain\": \"okta\",\n    \"afwOnly\": false\n}\n\n`,\n    label: \"Google Example App\",\n    preconfiguredApp: \"google\",\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.AutoLogin(\"example\",\n    app_settings_json=\"\"\"{\n    \"domain\": \"okta\",\n    \"afwOnly\": false\n}\n\n\"\"\",\n    label=\"Google Example App\",\n    preconfigured_app=\"google\",\n    status=\"ACTIVE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.App.AutoLogin(\"example\", new()\n    {\n        AppSettingsJson = @\"{\n    \"\"domain\"\": \"\"okta\"\",\n    \"\"afwOnly\"\": false\n}\n\n\",\n        Label = \"Google Example App\",\n        PreconfiguredApp = \"google\",\n        Status = \"ACTIVE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewAutoLogin(ctx, \"example\", \u0026app.AutoLoginArgs{\n\t\t\tAppSettingsJson:  pulumi.String(\"{\\n    \\\"domain\\\": \\\"okta\\\",\\n    \\\"afwOnly\\\": false\\n}\\n\\n\"),\n\t\t\tLabel:            pulumi.String(\"Google Example App\"),\n\t\t\tPreconfiguredApp: pulumi.String(\"google\"),\n\t\t\tStatus:           pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.AutoLogin;\nimport com.pulumi.okta.app.AutoLoginArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AutoLogin(\"example\", AutoLoginArgs.builder()        \n            .appSettingsJson(\"\"\"\n{\n    \"domain\": \"okta\",\n    \"afwOnly\": false\n}\n\n            \"\"\")\n            .label(\"Google Example App\")\n            .preconfiguredApp(\"google\")\n            .status(\"ACTIVE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:AutoLogin\n    properties:\n      appSettingsJson: |+\n        {\n            \"domain\": \"okta\",\n            \"afwOnly\": false\n        }\n\n      label: Google Example App\n      preconfiguredApp: google\n      status: ACTIVE\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta Auto Login App can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/autoLogin:AutoLogin example \u0026#60;app id\u0026#62;\n```\n\n ",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "appSettingsJson": {
                    "type": "string",
                    "description": "Application settings in JSON format.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "One of: `\"EDIT_USERNAME_AND_PASSWORD\"`, `\"ADMIN_SETS_CREDENTIALS\"`, `\"EDIT_PASSWORD_ONLY\"`, `\"EXTERNAL_PASSWORD_SYNC\"`, or `\"SHARED_USERNAME_AND_PASSWORD\"`.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Direct link of application logo.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name assigned to the application by Okta.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Tells Okta to use an existing application in their application catalog, as opposed to a custom application.\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `\"ADMIN_SETS_CREDENTIALS\"`, `\"SHARED_USERNAME_AND_PASSWORD\"` or `\"EXTERNAL_PASSWORD_SYNC\"`.\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign-on mode of the application.\n"
                },
                "signOnRedirectUrl": {
                    "type": "string",
                    "description": "Redirect URL; if going to the login page URL redirects to another page, then enter that URL here\n"
                },
                "signOnUrl": {
                    "type": "string",
                    "description": "App login page URL\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `\"${source.login}\"`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "signOnMode"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "appSettingsJson": {
                    "type": "string",
                    "description": "Application settings in JSON format.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "One of: `\"EDIT_USERNAME_AND_PASSWORD\"`, `\"ADMIN_SETS_CREDENTIALS\"`, `\"EDIT_PASSWORD_ONLY\"`, `\"EXTERNAL_PASSWORD_SYNC\"`, or `\"SHARED_USERNAME_AND_PASSWORD\"`.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Tells Okta to use an existing application in their application catalog, as opposed to a custom application.\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `\"ADMIN_SETS_CREDENTIALS\"`, `\"SHARED_USERNAME_AND_PASSWORD\"` or `\"EXTERNAL_PASSWORD_SYNC\"`.\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes\n"
                },
                "signOnRedirectUrl": {
                    "type": "string",
                    "description": "Redirect URL; if going to the login page URL redirects to another page, then enter that URL here\n"
                },
                "signOnUrl": {
                    "type": "string",
                    "description": "App login page URL\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `\"${source.login}\"`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AutoLogin resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page for this application.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service. By default, it is `false`.\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "appSettingsJson": {
                        "type": "string",
                        "description": "Application settings in JSON format.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "credentialsScheme": {
                        "type": "string",
                        "description": "One of: `\"EDIT_USERNAME_AND_PASSWORD\"`, `\"ADMIN_SETS_CREDENTIALS\"`, `\"EDIT_PASSWORD_ONLY\"`, `\"EXTERNAL_PASSWORD_SYNC\"`, or `\"SHARED_USERNAME_AND_PASSWORD\"`.\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Direct link of application logo.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name assigned to the application by Okta.\n"
                    },
                    "preconfiguredApp": {
                        "type": "string",
                        "description": "Tells Okta to use an existing application in their application catalog, as opposed to a custom application.\n"
                    },
                    "revealPassword": {
                        "type": "boolean",
                        "description": "Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `\"ADMIN_SETS_CREDENTIALS\"`, `\"SHARED_USERNAME_AND_PASSWORD\"` or `\"EXTERNAL_PASSWORD_SYNC\"`.\n"
                    },
                    "sharedPassword": {
                        "type": "string",
                        "description": "Shared password, required for certain schemes\n"
                    },
                    "sharedUsername": {
                        "type": "string",
                        "description": "Shared username, required for certain schemes\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign-on mode of the application.\n"
                    },
                    "signOnRedirectUrl": {
                        "type": "string",
                        "description": "Redirect URL; if going to the login page URL redirects to another page, then enter that URL here\n"
                    },
                    "signOnUrl": {
                        "type": "string",
                        "description": "App login page URL\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default: `\"${source.login}\"`\n"
                    },
                    "userNameTemplatePushStatus": {
                        "type": "string",
                        "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix.\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/basicAuth:BasicAuth": {
            "description": "This resource allows you to create and configure a Basic Auth Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.BasicAuth(\"example\", {\n    authUrl: \"https://example.com/auth.html\",\n    label: \"Example\",\n    url: \"https://example.com/login.html\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.BasicAuth(\"example\",\n    auth_url=\"https://example.com/auth.html\",\n    label=\"Example\",\n    url=\"https://example.com/login.html\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.App.BasicAuth(\"example\", new()\n    {\n        AuthUrl = \"https://example.com/auth.html\",\n        Label = \"Example\",\n        Url = \"https://example.com/login.html\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewBasicAuth(ctx, \"example\", \u0026app.BasicAuthArgs{\n\t\t\tAuthUrl: pulumi.String(\"https://example.com/auth.html\"),\n\t\t\tLabel:   pulumi.String(\"Example\"),\n\t\t\tUrl:     pulumi.String(\"https://example.com/login.html\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.BasicAuth;\nimport com.pulumi.okta.app.BasicAuthArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BasicAuth(\"example\", BasicAuthArgs.builder()        \n            .authUrl(\"https://example.com/auth.html\")\n            .label(\"Example\")\n            .url(\"https://example.com/login.html\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:BasicAuth\n    properties:\n      authUrl: https://example.com/auth.html\n      label: Example\n      url: https://example.com/login.html\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Basic Auth App can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/basicAuth:BasicAuth example \u0026#60;app id\u0026#62;\n```\n\n ",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "authUrl": {
                    "type": "string",
                    "description": "The URL of the authenticating site for this app.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Direct link of application logo.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. (`\"ACTIVE\"` or `\"INACTIVE\"`).\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the sign-in page for this app.\n"
                }
            },
            "required": [
                "authUrl",
                "label",
                "logoUrl",
                "name",
                "signOnMode",
                "url"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "authUrl": {
                    "type": "string",
                    "description": "The URL of the authenticating site for this app.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. (`\"ACTIVE\"` or `\"INACTIVE\"`).\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the sign-in page for this app.\n"
                }
            },
            "requiredInputs": [
                "authUrl",
                "label",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BasicAuth resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page for this application.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service. By default, it is `false`.\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "authUrl": {
                        "type": "string",
                        "description": "The URL of the authenticating site for this app.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Direct link of application logo.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. (`\"ACTIVE\"` or `\"INACTIVE\"`).\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the sign-in page for this app.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/bookmark:Bookmark": {
            "description": "This resource allows you to create and configure a Bookmark Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.Bookmark(\"example\", {\n    label: \"Example\",\n    url: \"https://example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.Bookmark(\"example\",\n    label=\"Example\",\n    url=\"https://example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.App.Bookmark(\"example\", new()\n    {\n        Label = \"Example\",\n        Url = \"https://example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewBookmark(ctx, \"example\", \u0026app.BookmarkArgs{\n\t\t\tLabel: pulumi.String(\"Example\"),\n\t\t\tUrl:   pulumi.String(\"https://example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.Bookmark;\nimport com.pulumi.okta.app.BookmarkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Bookmark(\"example\", BookmarkArgs.builder()        \n            .label(\"Example\")\n            .url(\"https://example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:Bookmark\n    properties:\n      label: Example\n      url: https://example.com\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Bookmark App can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/bookmark:Bookmark example \u0026#60;app id\u0026#62;\n```\n\n ",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "authenticationPolicy": {
                    "type": "string",
                    "description": "The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Direct link of application logo.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "requestIntegration": {
                    "type": "boolean",
                    "description": "Would you like Okta to add an integration for this app?\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. (`\"ACTIVE\"` or `\"INACTIVE\"`).\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the bookmark.\n"
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "signOnMode",
                "url"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "authenticationPolicy": {
                    "type": "string",
                    "description": "The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "requestIntegration": {
                    "type": "boolean",
                    "description": "Would you like Okta to add an integration for this app?\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. (`\"ACTIVE\"` or `\"INACTIVE\"`).\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the bookmark.\n"
                }
            },
            "requiredInputs": [
                "label",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Bookmark resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page for this application.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service. By default, it is `false`.\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "authenticationPolicy": {
                        "type": "string",
                        "description": "The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Direct link of application logo.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "requestIntegration": {
                        "type": "boolean",
                        "description": "Would you like Okta to add an integration for this app?\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. (`\"ACTIVE\"` or `\"INACTIVE\"`).\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the bookmark.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/groupAssignment:GroupAssignment": {
            "description": "\n\n\n## Import\n\nAn application group assignment can be imported via the `app_id` and the `group_id`.\n\n```sh\n $ pulumi import okta:app/groupAssignment:GroupAssignment example \u0026#60;app_id\u0026#62;/\u0026#60;group_id\u0026#62;\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The ID of the application to assign a group to.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the group to assign the app to.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of group assignment.\n"
                },
                "profile": {
                    "type": "string",
                    "description": "JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)\n"
                },
                "retainAssignment": {
                    "type": "boolean",
                    "description": "Retain the group assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                }
            },
            "required": [
                "appId",
                "groupId"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The ID of the application to assign a group to.\n",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the group to assign the app to.\n",
                    "willReplaceOnChanges": true
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of group assignment.\n"
                },
                "profile": {
                    "type": "string",
                    "description": "JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)\n"
                },
                "retainAssignment": {
                    "type": "boolean",
                    "description": "Retain the group assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "groupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GroupAssignment resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The ID of the application to assign a group to.\n",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the group to assign the app to.\n",
                        "willReplaceOnChanges": true
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of group assignment.\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)\n"
                    },
                    "retainAssignment": {
                        "type": "boolean",
                        "description": "Retain the group assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/oAuth:OAuth": {
            "description": "This resource allows you to create and configure an OIDC Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.OAuth(\"example\", {\n    grantTypes: [\"authorization_code\"],\n    label: \"example\",\n    redirectUris: [\"https://example.com/\"],\n    responseTypes: [\"code\"],\n    type: \"web\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.OAuth(\"example\",\n    grant_types=[\"authorization_code\"],\n    label=\"example\",\n    redirect_uris=[\"https://example.com/\"],\n    response_types=[\"code\"],\n    type=\"web\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.App.OAuth(\"example\", new()\n    {\n        GrantTypes = new[]\n        {\n            \"authorization_code\",\n        },\n        Label = \"example\",\n        RedirectUris = new[]\n        {\n            \"https://example.com/\",\n        },\n        ResponseTypes = new[]\n        {\n            \"code\",\n        },\n        Type = \"web\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewOAuth(ctx, \"example\", \u0026app.OAuthArgs{\n\t\t\tGrantTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"authorization_code\"),\n\t\t\t},\n\t\t\tLabel: pulumi.String(\"example\"),\n\t\t\tRedirectUris: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"https://example.com/\"),\n\t\t\t},\n\t\t\tResponseTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"code\"),\n\t\t\t},\n\t\t\tType: pulumi.String(\"web\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.OAuth;\nimport com.pulumi.okta.app.OAuthArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OAuth(\"example\", OAuthArgs.builder()        \n            .grantTypes(\"authorization_code\")\n            .label(\"example\")\n            .redirectUris(\"https://example.com/\")\n            .responseTypes(\"code\")\n            .type(\"web\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:OAuth\n    properties:\n      grantTypes:\n        - authorization_code\n      label: example\n      redirectUris:\n        - https://example.com/\n      responseTypes:\n        - code\n      type: web\n```\n{{% /example %}}\n{{% example %}}\n### With JWKS value\n\nSee also Advanced PEM secrets and JWKS example.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.OAuth(\"example\", {\n    grantTypes: [\"client_credentials\"],\n    jwks: [{\n        e: \"AQAB\",\n        kid: \"SIGNING_KEY\",\n        kty: \"RSA\",\n        n: \"xyz\",\n    }],\n    label: \"example\",\n    responseTypes: [\"token\"],\n    tokenEndpointAuthMethod: \"private_key_jwt\",\n    type: \"service\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.OAuth(\"example\",\n    grant_types=[\"client_credentials\"],\n    jwks=[okta.app.OAuthJwkArgs(\n        e=\"AQAB\",\n        kid=\"SIGNING_KEY\",\n        kty=\"RSA\",\n        n=\"xyz\",\n    )],\n    label=\"example\",\n    response_types=[\"token\"],\n    token_endpoint_auth_method=\"private_key_jwt\",\n    type=\"service\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.App.OAuth(\"example\", new()\n    {\n        GrantTypes = new[]\n        {\n            \"client_credentials\",\n        },\n        Jwks = new[]\n        {\n            new Okta.App.Inputs.OAuthJwkArgs\n            {\n                E = \"AQAB\",\n                Kid = \"SIGNING_KEY\",\n                Kty = \"RSA\",\n                N = \"xyz\",\n            },\n        },\n        Label = \"example\",\n        ResponseTypes = new[]\n        {\n            \"token\",\n        },\n        TokenEndpointAuthMethod = \"private_key_jwt\",\n        Type = \"service\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewOAuth(ctx, \"example\", \u0026app.OAuthArgs{\n\t\t\tGrantTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"client_credentials\"),\n\t\t\t},\n\t\t\tJwks: app.OAuthJwkArray{\n\t\t\t\t\u0026app.OAuthJwkArgs{\n\t\t\t\t\tE:   pulumi.String(\"AQAB\"),\n\t\t\t\t\tKid: pulumi.String(\"SIGNING_KEY\"),\n\t\t\t\t\tKty: pulumi.String(\"RSA\"),\n\t\t\t\t\tN:   pulumi.String(\"xyz\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tLabel: pulumi.String(\"example\"),\n\t\t\tResponseTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"token\"),\n\t\t\t},\n\t\t\tTokenEndpointAuthMethod: pulumi.String(\"private_key_jwt\"),\n\t\t\tType:                    pulumi.String(\"service\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.OAuth;\nimport com.pulumi.okta.app.OAuthArgs;\nimport com.pulumi.okta.app.inputs.OAuthJwkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OAuth(\"example\", OAuthArgs.builder()        \n            .grantTypes(\"client_credentials\")\n            .jwks(OAuthJwkArgs.builder()\n                .e(\"AQAB\")\n                .kid(\"SIGNING_KEY\")\n                .kty(\"RSA\")\n                .n(\"xyz\")\n                .build())\n            .label(\"example\")\n            .responseTypes(\"token\")\n            .tokenEndpointAuthMethod(\"private_key_jwt\")\n            .type(\"service\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:OAuth\n    properties:\n      grantTypes:\n        - client_credentials\n      jwks:\n        - e: AQAB\n          kid: SIGNING_KEY\n          kty: RSA\n          n: xyz\n      label: example\n      responseTypes:\n        - token\n      tokenEndpointAuthMethod: private_key_jwt\n      type: service\n```\n{{% /example %}}\n{{% /examples %}}\n## Etc.\n\n### Resetting client secret\n\nIf the client secret needs to be reset run an apply with `omit_secret` set to\ntrue in the resource. This causes `client_secret` to be set to blank. Remove\n`omit_secret` and run apply again. The resource will set a new `client_secret`\nfor the app.\n\n\n## Import\n\nAn OIDC Application can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/oAuth:OAuth example \u0026#60;app id\u0026#62;\n```\n\n ",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "appSettingsJson": {
                    "type": "string",
                    "description": "Application settings in JSON format.\n"
                },
                "authenticationPolicy": {
                    "type": "string",
                    "description": "The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.\n"
                },
                "autoKeyRotation": {
                    "type": "boolean",
                    "description": "Requested key rotation mode.  If\n`auto_key_rotation` isn't specified, the client automatically opts in for Okta's\nkey rotation. You can update this property via the API or via the administrator\nUI.\nSee: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "clientBasicSecret": {
                    "type": "string",
                    "description": "OAuth client secret key, this can be set when `token_endpoint_auth_method` is `\"client_secret_basic\"`.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "OAuth client ID. If set during creation, app is created with this id. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret of the application. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n",
                    "secret": true
                },
                "clientUri": {
                    "type": "string",
                    "description": "URI to a web page providing information about the client.\n"
                },
                "consentMethod": {
                    "type": "string",
                    "description": "Indicates whether user consent is required or implicit. Valid values: `\"REQUIRED\"`, `\"TRUSTED\"`. Default value is `\"TRUSTED\"`.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OAuth 2.0 grant types. Conditional validation params found [here](https://developer.okta.com/docs/api/resources/apps#credentials-settings-details).\nDefaults to minimum requirements per app type. Valid values: `\"authorization_code\"`, `\"implicit\"`, `\"password\"`, `\"refresh_token\"`, `\"client_credentials\"`,\n`\"urn:ietf:params:oauth:grant-type:saml2-bearer\"` (*Early Access Property*), `\"urn:ietf:params:oauth:grant-type:token-exchange\"` (*Early Access Property*),\n`\"interaction_code\"` (*OIE only*).\n"
                },
                "groupsClaim": {
                    "$ref": "#/types/okta:app/OAuthGroupsClaim:OAuthGroupsClaim",
                    "description": "Groups claim for an OpenID Connect client application. **IMPORTANT**: this field is available only when using api token in the provider config.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "implicitAssignment": {
                    "type": "boolean",
                    "description": "*Early Access Property*. Enables [Federation Broker Mode](https://help.okta.com/en/prod/Content/Topics/Apps/apps-fbm-enable.htm). When this mode is enabled, `users` and `groups` arguments are ignored.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.\nValid values: `\"CUSTOM_URL\"`,`\"ORG_URL\"` or `\"DYNAMIC\"`. Default is `\"ORG_URL\"`.\n"
                },
                "jwks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/OAuthJwk:OAuthJwk"
                    },
                    "description": "JSON Web Key set. [Admin Console JWK Reference](https://developer.okta.com/docs/guides/implement-oauth-for-okta-serviceapp/main/#generate-the-jwk-in-the-admin-console)\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "loginMode": {
                    "type": "string",
                    "description": "The type of Idp-Initiated login that the client supports, if any. Valid values: `\"DISABLED\"`, `\"SPEC\"`, `\"OKTA\"`. Default is `\"DISABLED\"`.\n"
                },
                "loginScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of scopes to use for the request. Valid values: `\"openid\"`, `\"profile\"`, `\"email\"`, `\"address\"`, `\"phone\"`. Required when `login_mode` is NOT `DISABLED`.\n"
                },
                "loginUri": {
                    "type": "string",
                    "description": "URI that initiates login. Required when `login_mode` is NOT `DISABLED`.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUri": {
                    "type": "string",
                    "description": "URI that references a logo for the client.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Direct link of application logo.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the claim that will be used in the token.\n"
                },
                "omitSecret": {
                    "type": "boolean",
                    "description": "This tells the provider not to persist the application's secret to state. Your app's `client_secret` will be recreated if this ever changes from true =\u003e false.\n"
                },
                "pkceRequired": {
                    "type": "boolean",
                    "description": "Require Proof Key for Code Exchange (PKCE) for\nadditional verification.  If `pkce_required` isn't specified when adding a new\napplication, Okta sets it to `true` by default for `\"browser\"` and `\"native\"`\napplication types.\nSee https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n"
                },
                "policyUri": {
                    "type": "string",
                    "description": "URI to web page providing client policy document.\n"
                },
                "postLogoutRedirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URIs for redirection after logout.\n"
                },
                "profile": {
                    "type": "string",
                    "description": "Custom JSON that represents an OAuth application's profile.\n"
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URIs for use in the redirect-based flow. This is required for all application types except service.\n"
                },
                "refreshTokenLeeway": {
                    "type": "integer",
                    "description": "Grace period for token rotation. Valid values: 0 to 60 seconds.\n"
                },
                "refreshTokenRotation": {
                    "type": "string",
                    "description": "Refresh token rotation behavior. Valid values: `\"STATIC\"` or `\"ROTATE\"`.\n"
                },
                "responseTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OAuth 2.0 response type strings. Array\nvalues of `\"code\"`, `\"token\"`, `\"id_token\"`. The `grant_types` and `response_types`\nvalues described are partially orthogonal, as they refer to arguments\npassed to different endpoints in the OAuth 2.0 protocol (opens new window).\nHowever, they are related in that the `grant_types` available to a client\ninfluence the `response_types` that the client is allowed to use, and vice versa.\nFor instance, a grant_types value that includes authorization_code implies a\n`response_types` value that includes code, as both values are defined as part of\nthe OAuth 2.0 authorization code grant.\nSee: https://developer.okta.com/docs/reference/api/apps/#add-oauth-2-0-client-application\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign-on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                },
                "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "Requested authentication method for\nthe token endpoint. It can be set to `\"none\"`, `\"client_secret_post\"`,\n`\"client_secret_basic\"`, `\"client_secret_jwt\"`, `\"private_key_jwt\"`.  Use\n`pkce_required` to require PKCE for your confidential clients using the\nAuthorization Code flow. If `\"token_endpoint_auth_method\"` is `\"none\"`,\n`pkce_required` needs to be `true`. If `pkce_required` isn't specified when\nadding a new application, Okta sets it to `true` by default for `\"browser\"` and\n`\"native\"` application types.\nSee https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n"
                },
                "tosUri": {
                    "type": "string",
                    "description": "URI to web page providing client tos (terms of service).\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of OAuth application. Valid values: `\"web\"`, `\"native\"`, `\"browser\"`, `\"service\"`. For SPA apps use `browser`.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `\"${source.login}\"`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                },
                "wildcardRedirect": {
                    "type": "string",
                    "description": "*Early Access Property*. Indicates if the client is allowed to use wildcard matching of `redirect_uris`. Valid values: `\"DISABLED\"`, `\"SUBDOMAIN\"`. Default value is `\"DISABLED\"`.\n"
                }
            },
            "required": [
                "clientId",
                "clientSecret",
                "label",
                "logoUrl",
                "name",
                "refreshTokenLeeway",
                "refreshTokenRotation",
                "signOnMode",
                "type"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "appSettingsJson": {
                    "type": "string",
                    "description": "Application settings in JSON format.\n"
                },
                "authenticationPolicy": {
                    "type": "string",
                    "description": "The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.\n"
                },
                "autoKeyRotation": {
                    "type": "boolean",
                    "description": "Requested key rotation mode.  If\n`auto_key_rotation` isn't specified, the client automatically opts in for Okta's\nkey rotation. You can update this property via the API or via the administrator\nUI.\nSee: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "clientBasicSecret": {
                    "type": "string",
                    "description": "OAuth client secret key, this can be set when `token_endpoint_auth_method` is `\"client_secret_basic\"`.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "OAuth client ID. If set during creation, app is created with this id. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n",
                    "willReplaceOnChanges": true
                },
                "clientUri": {
                    "type": "string",
                    "description": "URI to a web page providing information about the client.\n"
                },
                "consentMethod": {
                    "type": "string",
                    "description": "Indicates whether user consent is required or implicit. Valid values: `\"REQUIRED\"`, `\"TRUSTED\"`. Default value is `\"TRUSTED\"`.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OAuth 2.0 grant types. Conditional validation params found [here](https://developer.okta.com/docs/api/resources/apps#credentials-settings-details).\nDefaults to minimum requirements per app type. Valid values: `\"authorization_code\"`, `\"implicit\"`, `\"password\"`, `\"refresh_token\"`, `\"client_credentials\"`,\n`\"urn:ietf:params:oauth:grant-type:saml2-bearer\"` (*Early Access Property*), `\"urn:ietf:params:oauth:grant-type:token-exchange\"` (*Early Access Property*),\n`\"interaction_code\"` (*OIE only*).\n"
                },
                "groupsClaim": {
                    "$ref": "#/types/okta:app/OAuthGroupsClaim:OAuthGroupsClaim",
                    "description": "Groups claim for an OpenID Connect client application. **IMPORTANT**: this field is available only when using api token in the provider config.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "implicitAssignment": {
                    "type": "boolean",
                    "description": "*Early Access Property*. Enables [Federation Broker Mode](https://help.okta.com/en/prod/Content/Topics/Apps/apps-fbm-enable.htm). When this mode is enabled, `users` and `groups` arguments are ignored.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.\nValid values: `\"CUSTOM_URL\"`,`\"ORG_URL\"` or `\"DYNAMIC\"`. Default is `\"ORG_URL\"`.\n"
                },
                "jwks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/OAuthJwk:OAuthJwk"
                    },
                    "description": "JSON Web Key set. [Admin Console JWK Reference](https://developer.okta.com/docs/guides/implement-oauth-for-okta-serviceapp/main/#generate-the-jwk-in-the-admin-console)\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "loginMode": {
                    "type": "string",
                    "description": "The type of Idp-Initiated login that the client supports, if any. Valid values: `\"DISABLED\"`, `\"SPEC\"`, `\"OKTA\"`. Default is `\"DISABLED\"`.\n"
                },
                "loginScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of scopes to use for the request. Valid values: `\"openid\"`, `\"profile\"`, `\"email\"`, `\"address\"`, `\"phone\"`. Required when `login_mode` is NOT `DISABLED`.\n"
                },
                "loginUri": {
                    "type": "string",
                    "description": "URI that initiates login. Required when `login_mode` is NOT `DISABLED`.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUri": {
                    "type": "string",
                    "description": "URI that references a logo for the client.\n"
                },
                "omitSecret": {
                    "type": "boolean",
                    "description": "This tells the provider not to persist the application's secret to state. Your app's `client_secret` will be recreated if this ever changes from true =\u003e false.\n"
                },
                "pkceRequired": {
                    "type": "boolean",
                    "description": "Require Proof Key for Code Exchange (PKCE) for\nadditional verification.  If `pkce_required` isn't specified when adding a new\napplication, Okta sets it to `true` by default for `\"browser\"` and `\"native\"`\napplication types.\nSee https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n"
                },
                "policyUri": {
                    "type": "string",
                    "description": "URI to web page providing client policy document.\n"
                },
                "postLogoutRedirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URIs for redirection after logout.\n"
                },
                "profile": {
                    "type": "string",
                    "description": "Custom JSON that represents an OAuth application's profile.\n"
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URIs for use in the redirect-based flow. This is required for all application types except service.\n"
                },
                "refreshTokenLeeway": {
                    "type": "integer",
                    "description": "Grace period for token rotation. Valid values: 0 to 60 seconds.\n"
                },
                "refreshTokenRotation": {
                    "type": "string",
                    "description": "Refresh token rotation behavior. Valid values: `\"STATIC\"` or `\"ROTATE\"`.\n"
                },
                "responseTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OAuth 2.0 response type strings. Array\nvalues of `\"code\"`, `\"token\"`, `\"id_token\"`. The `grant_types` and `response_types`\nvalues described are partially orthogonal, as they refer to arguments\npassed to different endpoints in the OAuth 2.0 protocol (opens new window).\nHowever, they are related in that the `grant_types` available to a client\ninfluence the `response_types` that the client is allowed to use, and vice versa.\nFor instance, a grant_types value that includes authorization_code implies a\n`response_types` value that includes code, as both values are defined as part of\nthe OAuth 2.0 authorization code grant.\nSee: https://developer.okta.com/docs/reference/api/apps/#add-oauth-2-0-client-application\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                },
                "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "Requested authentication method for\nthe token endpoint. It can be set to `\"none\"`, `\"client_secret_post\"`,\n`\"client_secret_basic\"`, `\"client_secret_jwt\"`, `\"private_key_jwt\"`.  Use\n`pkce_required` to require PKCE for your confidential clients using the\nAuthorization Code flow. If `\"token_endpoint_auth_method\"` is `\"none\"`,\n`pkce_required` needs to be `true`. If `pkce_required` isn't specified when\nadding a new application, Okta sets it to `true` by default for `\"browser\"` and\n`\"native\"` application types.\nSee https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n"
                },
                "tosUri": {
                    "type": "string",
                    "description": "URI to web page providing client tos (terms of service).\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of OAuth application. Valid values: `\"web\"`, `\"native\"`, `\"browser\"`, `\"service\"`. For SPA apps use `browser`.\n",
                    "willReplaceOnChanges": true
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `\"${source.login}\"`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                },
                "wildcardRedirect": {
                    "type": "string",
                    "description": "*Early Access Property*. Indicates if the client is allowed to use wildcard matching of `redirect_uris`. Valid values: `\"DISABLED\"`, `\"SUBDOMAIN\"`. Default value is `\"DISABLED\"`.\n"
                }
            },
            "requiredInputs": [
                "label",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OAuth resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page for this application.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service. By default, it is `false`.\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "appSettingsJson": {
                        "type": "string",
                        "description": "Application settings in JSON format.\n"
                    },
                    "authenticationPolicy": {
                        "type": "string",
                        "description": "The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.\n"
                    },
                    "autoKeyRotation": {
                        "type": "boolean",
                        "description": "Requested key rotation mode.  If\n`auto_key_rotation` isn't specified, the client automatically opts in for Okta's\nkey rotation. You can update this property via the API or via the administrator\nUI.\nSee: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "clientBasicSecret": {
                        "type": "string",
                        "description": "OAuth client secret key, this can be set when `token_endpoint_auth_method` is `\"client_secret_basic\"`.\n",
                        "secret": true
                    },
                    "clientId": {
                        "type": "string",
                        "description": "OAuth client ID. If set during creation, app is created with this id. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n",
                        "willReplaceOnChanges": true
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "The client secret of the application. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n",
                        "secret": true
                    },
                    "clientUri": {
                        "type": "string",
                        "description": "URI to a web page providing information about the client.\n"
                    },
                    "consentMethod": {
                        "type": "string",
                        "description": "Indicates whether user consent is required or implicit. Valid values: `\"REQUIRED\"`, `\"TRUSTED\"`. Default value is `\"TRUSTED\"`.\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "grantTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OAuth 2.0 grant types. Conditional validation params found [here](https://developer.okta.com/docs/api/resources/apps#credentials-settings-details).\nDefaults to minimum requirements per app type. Valid values: `\"authorization_code\"`, `\"implicit\"`, `\"password\"`, `\"refresh_token\"`, `\"client_credentials\"`,\n`\"urn:ietf:params:oauth:grant-type:saml2-bearer\"` (*Early Access Property*), `\"urn:ietf:params:oauth:grant-type:token-exchange\"` (*Early Access Property*),\n`\"interaction_code\"` (*OIE only*).\n"
                    },
                    "groupsClaim": {
                        "$ref": "#/types/okta:app/OAuthGroupsClaim:OAuthGroupsClaim",
                        "description": "Groups claim for an OpenID Connect client application. **IMPORTANT**: this field is available only when using api token in the provider config.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "implicitAssignment": {
                        "type": "boolean",
                        "description": "*Early Access Property*. Enables [Federation Broker Mode](https://help.okta.com/en/prod/Content/Topics/Apps/apps-fbm-enable.htm). When this mode is enabled, `users` and `groups` arguments are ignored.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.\nValid values: `\"CUSTOM_URL\"`,`\"ORG_URL\"` or `\"DYNAMIC\"`. Default is `\"ORG_URL\"`.\n"
                    },
                    "jwks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/OAuthJwk:OAuthJwk"
                        },
                        "description": "JSON Web Key set. [Admin Console JWK Reference](https://developer.okta.com/docs/guides/implement-oauth-for-okta-serviceapp/main/#generate-the-jwk-in-the-admin-console)\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "loginMode": {
                        "type": "string",
                        "description": "The type of Idp-Initiated login that the client supports, if any. Valid values: `\"DISABLED\"`, `\"SPEC\"`, `\"OKTA\"`. Default is `\"DISABLED\"`.\n"
                    },
                    "loginScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of scopes to use for the request. Valid values: `\"openid\"`, `\"profile\"`, `\"email\"`, `\"address\"`, `\"phone\"`. Required when `login_mode` is NOT `DISABLED`.\n"
                    },
                    "loginUri": {
                        "type": "string",
                        "description": "URI that initiates login. Required when `login_mode` is NOT `DISABLED`.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUri": {
                        "type": "string",
                        "description": "URI that references a logo for the client.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Direct link of application logo.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the claim that will be used in the token.\n"
                    },
                    "omitSecret": {
                        "type": "boolean",
                        "description": "This tells the provider not to persist the application's secret to state. Your app's `client_secret` will be recreated if this ever changes from true =\u003e false.\n"
                    },
                    "pkceRequired": {
                        "type": "boolean",
                        "description": "Require Proof Key for Code Exchange (PKCE) for\nadditional verification.  If `pkce_required` isn't specified when adding a new\napplication, Okta sets it to `true` by default for `\"browser\"` and `\"native\"`\napplication types.\nSee https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n"
                    },
                    "policyUri": {
                        "type": "string",
                        "description": "URI to web page providing client policy document.\n"
                    },
                    "postLogoutRedirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of URIs for redirection after logout.\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "Custom JSON that represents an OAuth application's profile.\n"
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of URIs for use in the redirect-based flow. This is required for all application types except service.\n"
                    },
                    "refreshTokenLeeway": {
                        "type": "integer",
                        "description": "Grace period for token rotation. Valid values: 0 to 60 seconds.\n"
                    },
                    "refreshTokenRotation": {
                        "type": "string",
                        "description": "Refresh token rotation behavior. Valid values: `\"STATIC\"` or `\"ROTATE\"`.\n"
                    },
                    "responseTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OAuth 2.0 response type strings. Array\nvalues of `\"code\"`, `\"token\"`, `\"id_token\"`. The `grant_types` and `response_types`\nvalues described are partially orthogonal, as they refer to arguments\npassed to different endpoints in the OAuth 2.0 protocol (opens new window).\nHowever, they are related in that the `grant_types` available to a client\ninfluence the `response_types` that the client is allowed to use, and vice versa.\nFor instance, a grant_types value that includes authorization_code implies a\n`response_types` value that includes code, as both values are defined as part of\nthe OAuth 2.0 authorization code grant.\nSee: https://developer.okta.com/docs/reference/api/apps/#add-oauth-2-0-client-application\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign-on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                    },
                    "tokenEndpointAuthMethod": {
                        "type": "string",
                        "description": "Requested authentication method for\nthe token endpoint. It can be set to `\"none\"`, `\"client_secret_post\"`,\n`\"client_secret_basic\"`, `\"client_secret_jwt\"`, `\"private_key_jwt\"`.  Use\n`pkce_required` to require PKCE for your confidential clients using the\nAuthorization Code flow. If `\"token_endpoint_auth_method\"` is `\"none\"`,\n`pkce_required` needs to be `true`. If `pkce_required` isn't specified when\nadding a new application, Okta sets it to `true` by default for `\"browser\"` and\n`\"native\"` application types.\nSee https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n"
                    },
                    "tosUri": {
                        "type": "string",
                        "description": "URI to web page providing client tos (terms of service).\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of OAuth application. Valid values: `\"web\"`, `\"native\"`, `\"browser\"`, `\"service\"`. For SPA apps use `browser`.\n",
                        "willReplaceOnChanges": true
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default: `\"${source.login}\"`\n"
                    },
                    "userNameTemplatePushStatus": {
                        "type": "string",
                        "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix.\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                    },
                    "wildcardRedirect": {
                        "type": "string",
                        "description": "*Early Access Property*. Indicates if the client is allowed to use wildcard matching of `redirect_uris`. Valid values: `\"DISABLED\"`, `\"SUBDOMAIN\"`. Default value is `\"DISABLED\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/oAuthPostLogoutRedirectUri:OAuthPostLogoutRedirectUri": {
            "description": "This resource allows you to manage post logout redirection URI for use in redirect-based flows.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst testOAuth = new okta.app.OAuth(\"testOAuth\", {\n    label: \"testAcc_replace_with_uuid\",\n    type: \"web\",\n    grantTypes: [\"authorization_code\"],\n    responseTypes: [\"code\"],\n    redirectUris: [\"myapp://callback\"],\n    postLogoutRedirectUris: [\"https://www.example.com\"],\n});\nconst testOAuthPostLogoutRedirectUri = new okta.app.OAuthPostLogoutRedirectUri(\"testOAuthPostLogoutRedirectUri\", {\n    appId: testOAuth.id,\n    uri: \"https://www.example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest_o_auth = okta.app.OAuth(\"testOAuth\",\n    label=\"testAcc_replace_with_uuid\",\n    type=\"web\",\n    grant_types=[\"authorization_code\"],\n    response_types=[\"code\"],\n    redirect_uris=[\"myapp://callback\"],\n    post_logout_redirect_uris=[\"https://www.example.com\"])\ntest_o_auth_post_logout_redirect_uri = okta.app.OAuthPostLogoutRedirectUri(\"testOAuthPostLogoutRedirectUri\",\n    app_id=test_o_auth.id,\n    uri=\"https://www.example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testOAuth = new Okta.App.OAuth(\"testOAuth\", new()\n    {\n        Label = \"testAcc_replace_with_uuid\",\n        Type = \"web\",\n        GrantTypes = new[]\n        {\n            \"authorization_code\",\n        },\n        ResponseTypes = new[]\n        {\n            \"code\",\n        },\n        RedirectUris = new[]\n        {\n            \"myapp://callback\",\n        },\n        PostLogoutRedirectUris = new[]\n        {\n            \"https://www.example.com\",\n        },\n    });\n\n    var testOAuthPostLogoutRedirectUri = new Okta.App.OAuthPostLogoutRedirectUri(\"testOAuthPostLogoutRedirectUri\", new()\n    {\n        AppId = testOAuth.Id,\n        Uri = \"https://www.example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestOAuth, err := app.NewOAuth(ctx, \"testOAuth\", \u0026app.OAuthArgs{\n\t\t\tLabel: pulumi.String(\"testAcc_replace_with_uuid\"),\n\t\t\tType:  pulumi.String(\"web\"),\n\t\t\tGrantTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"authorization_code\"),\n\t\t\t},\n\t\t\tResponseTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"code\"),\n\t\t\t},\n\t\t\tRedirectUris: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"myapp://callback\"),\n\t\t\t},\n\t\t\tPostLogoutRedirectUris: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"https://www.example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = app.NewOAuthPostLogoutRedirectUri(ctx, \"testOAuthPostLogoutRedirectUri\", \u0026app.OAuthPostLogoutRedirectUriArgs{\n\t\t\tAppId: testOAuth.ID(),\n\t\t\tUri:   pulumi.String(\"https://www.example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.OAuth;\nimport com.pulumi.okta.app.OAuthArgs;\nimport com.pulumi.okta.app.OAuthPostLogoutRedirectUri;\nimport com.pulumi.okta.app.OAuthPostLogoutRedirectUriArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testOAuth = new OAuth(\"testOAuth\", OAuthArgs.builder()        \n            .label(\"testAcc_replace_with_uuid\")\n            .type(\"web\")\n            .grantTypes(\"authorization_code\")\n            .responseTypes(\"code\")\n            .redirectUris(\"myapp://callback\")\n            .postLogoutRedirectUris(\"https://www.example.com\")\n            .build());\n\n        var testOAuthPostLogoutRedirectUri = new OAuthPostLogoutRedirectUri(\"testOAuthPostLogoutRedirectUri\", OAuthPostLogoutRedirectUriArgs.builder()        \n            .appId(testOAuth.id())\n            .uri(\"https://www.example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testOAuth:\n    type: okta:app:OAuth\n    properties:\n      label: testAcc_replace_with_uuid\n      type: web\n      grantTypes:\n        - authorization_code\n      responseTypes:\n        - code\n      # Okta requires at least one redirect URI to create an app\n      redirectUris:\n        - myapp://callback\n      postLogoutRedirectUris:\n        - https://www.example.com\n  testOAuthPostLogoutRedirectUri:\n    type: okta:app:OAuthPostLogoutRedirectUri\n    properties:\n      appId: ${testOAuth.id}\n      uri: https://www.example.com\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA post logout redirect URI can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/oAuthPostLogoutRedirectUri:OAuthPostLogoutRedirectUri example \u0026#60;app id\u0026#62;/\u0026#60;uri\u0026#62;\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "OAuth application ID.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "Post Logout Redirect URI to append to Okta OIDC application.\n"
                }
            },
            "required": [
                "appId",
                "uri"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "OAuth application ID.\n",
                    "willReplaceOnChanges": true
                },
                "uri": {
                    "type": "string",
                    "description": "Post Logout Redirect URI to append to Okta OIDC application.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "uri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OAuthPostLogoutRedirectUri resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "OAuth application ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "uri": {
                        "type": "string",
                        "description": "Post Logout Redirect URI to append to Okta OIDC application.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/oAuthRedirectUri:OAuthRedirectUri": {
            "description": "This resource allows you to manage redirection URI for use in redirect-based flows.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst testOAuth = new okta.app.OAuth(\"testOAuth\", {\n    label: \"testAcc_replace_with_uuid\",\n    type: \"web\",\n    grantTypes: [\"authorization_code\"],\n    responseTypes: [\"code\"],\n    redirectUris: [\"myapp://callback\"],\n});\nconst testOAuthRedirectUri = new okta.app.OAuthRedirectUri(\"testOAuthRedirectUri\", {\n    appId: testOAuth.id,\n    uri: \"http://google.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest_o_auth = okta.app.OAuth(\"testOAuth\",\n    label=\"testAcc_replace_with_uuid\",\n    type=\"web\",\n    grant_types=[\"authorization_code\"],\n    response_types=[\"code\"],\n    redirect_uris=[\"myapp://callback\"])\ntest_o_auth_redirect_uri = okta.app.OAuthRedirectUri(\"testOAuthRedirectUri\",\n    app_id=test_o_auth.id,\n    uri=\"http://google.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testOAuth = new Okta.App.OAuth(\"testOAuth\", new()\n    {\n        Label = \"testAcc_replace_with_uuid\",\n        Type = \"web\",\n        GrantTypes = new[]\n        {\n            \"authorization_code\",\n        },\n        ResponseTypes = new[]\n        {\n            \"code\",\n        },\n        RedirectUris = new[]\n        {\n            \"myapp://callback\",\n        },\n    });\n\n    var testOAuthRedirectUri = new Okta.App.OAuthRedirectUri(\"testOAuthRedirectUri\", new()\n    {\n        AppId = testOAuth.Id,\n        Uri = \"http://google.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestOAuth, err := app.NewOAuth(ctx, \"testOAuth\", \u0026app.OAuthArgs{\n\t\t\tLabel: pulumi.String(\"testAcc_replace_with_uuid\"),\n\t\t\tType:  pulumi.String(\"web\"),\n\t\t\tGrantTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"authorization_code\"),\n\t\t\t},\n\t\t\tResponseTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"code\"),\n\t\t\t},\n\t\t\tRedirectUris: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"myapp://callback\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = app.NewOAuthRedirectUri(ctx, \"testOAuthRedirectUri\", \u0026app.OAuthRedirectUriArgs{\n\t\t\tAppId: testOAuth.ID(),\n\t\t\tUri:   pulumi.String(\"http://google.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.OAuth;\nimport com.pulumi.okta.app.OAuthArgs;\nimport com.pulumi.okta.app.OAuthRedirectUri;\nimport com.pulumi.okta.app.OAuthRedirectUriArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testOAuth = new OAuth(\"testOAuth\", OAuthArgs.builder()        \n            .label(\"testAcc_replace_with_uuid\")\n            .type(\"web\")\n            .grantTypes(\"authorization_code\")\n            .responseTypes(\"code\")\n            .redirectUris(\"myapp://callback\")\n            .build());\n\n        var testOAuthRedirectUri = new OAuthRedirectUri(\"testOAuthRedirectUri\", OAuthRedirectUriArgs.builder()        \n            .appId(testOAuth.id())\n            .uri(\"http://google.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testOAuth:\n    type: okta:app:OAuth\n    properties:\n      label: testAcc_replace_with_uuid\n      type: web\n      grantTypes:\n        - authorization_code\n      responseTypes:\n        - code\n      # Okta requires at least one redirect URI to create an app\n      redirectUris:\n        - myapp://callback\n  testOAuthRedirectUri:\n    type: okta:app:OAuthRedirectUri\n    properties:\n      appId: ${testOAuth.id}\n      uri: http://google.com\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA redirect URI can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/oAuthRedirectUri:OAuthRedirectUri example \u0026#60;app id\u0026#62;/\u0026#60;uri\u0026#62;\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "OAuth application ID.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "Redirect URI to append to Okta OIDC application.\n"
                }
            },
            "required": [
                "appId",
                "uri"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "OAuth application ID.\n",
                    "willReplaceOnChanges": true
                },
                "uri": {
                    "type": "string",
                    "description": "Redirect URI to append to Okta OIDC application.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "uri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OAuthRedirectUri resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "OAuth application ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "uri": {
                        "type": "string",
                        "description": "Redirect URI to append to Okta OIDC application.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/saml:Saml": {
            "description": "This resource allows you to create and configure a SAML Application.\n\n\u003e If you receive the error `You do not have permission to access the feature\nyou are requesting` contact support and\nrequest feature flag `ADVANCED_SSO` be applied to your org.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.Saml(\"example\", {\n    attributeStatements: [{\n        filterType: \"REGEX\",\n        filterValue: \".*\",\n        name: \"groups\",\n        type: \"GROUP\",\n    }],\n    audience: \"https://example.com/audience\",\n    authnContextClassRef: \"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\",\n    destination: \"https://example.com\",\n    digestAlgorithm: \"SHA256\",\n    honorForceAuthn: false,\n    label: \"example\",\n    recipient: \"https://example.com\",\n    responseSigned: true,\n    signatureAlgorithm: \"RSA_SHA256\",\n    ssoUrl: \"https://example.com\",\n    subjectNameIdFormat: \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n    subjectNameIdTemplate: \"${user.userName}\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.Saml(\"example\",\n    attribute_statements=[okta.app.SamlAttributeStatementArgs(\n        filter_type=\"REGEX\",\n        filter_value=\".*\",\n        name=\"groups\",\n        type=\"GROUP\",\n    )],\n    audience=\"https://example.com/audience\",\n    authn_context_class_ref=\"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\",\n    destination=\"https://example.com\",\n    digest_algorithm=\"SHA256\",\n    honor_force_authn=False,\n    label=\"example\",\n    recipient=\"https://example.com\",\n    response_signed=True,\n    signature_algorithm=\"RSA_SHA256\",\n    sso_url=\"https://example.com\",\n    subject_name_id_format=\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n    subject_name_id_template=\"${user.userName}\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.App.Saml(\"example\", new()\n    {\n        AttributeStatements = new[]\n        {\n            new Okta.App.Inputs.SamlAttributeStatementArgs\n            {\n                FilterType = \"REGEX\",\n                FilterValue = \".*\",\n                Name = \"groups\",\n                Type = \"GROUP\",\n            },\n        },\n        Audience = \"https://example.com/audience\",\n        AuthnContextClassRef = \"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\",\n        Destination = \"https://example.com\",\n        DigestAlgorithm = \"SHA256\",\n        HonorForceAuthn = false,\n        Label = \"example\",\n        Recipient = \"https://example.com\",\n        ResponseSigned = true,\n        SignatureAlgorithm = \"RSA_SHA256\",\n        SsoUrl = \"https://example.com\",\n        SubjectNameIdFormat = \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n        SubjectNameIdTemplate = \"${user.userName}\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewSaml(ctx, \"example\", \u0026app.SamlArgs{\n\t\t\tAttributeStatements: app.SamlAttributeStatementArray{\n\t\t\t\t\u0026app.SamlAttributeStatementArgs{\n\t\t\t\t\tFilterType:  pulumi.String(\"REGEX\"),\n\t\t\t\t\tFilterValue: pulumi.String(\".*\"),\n\t\t\t\t\tName:        pulumi.String(\"groups\"),\n\t\t\t\t\tType:        pulumi.String(\"GROUP\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tAudience:              pulumi.String(\"https://example.com/audience\"),\n\t\t\tAuthnContextClassRef:  pulumi.String(\"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\"),\n\t\t\tDestination:           pulumi.String(\"https://example.com\"),\n\t\t\tDigestAlgorithm:       pulumi.String(\"SHA256\"),\n\t\t\tHonorForceAuthn:       pulumi.Bool(false),\n\t\t\tLabel:                 pulumi.String(\"example\"),\n\t\t\tRecipient:             pulumi.String(\"https://example.com\"),\n\t\t\tResponseSigned:        pulumi.Bool(true),\n\t\t\tSignatureAlgorithm:    pulumi.String(\"RSA_SHA256\"),\n\t\t\tSsoUrl:                pulumi.String(\"https://example.com\"),\n\t\t\tSubjectNameIdFormat:   pulumi.String(\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\"),\n\t\t\tSubjectNameIdTemplate: pulumi.String(\"${user.userName}\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.Saml;\nimport com.pulumi.okta.app.SamlArgs;\nimport com.pulumi.okta.app.inputs.SamlAttributeStatementArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Saml(\"example\", SamlArgs.builder()        \n            .attributeStatements(SamlAttributeStatementArgs.builder()\n                .filterType(\"REGEX\")\n                .filterValue(\".*\")\n                .name(\"groups\")\n                .type(\"GROUP\")\n                .build())\n            .audience(\"https://example.com/audience\")\n            .authnContextClassRef(\"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\")\n            .destination(\"https://example.com\")\n            .digestAlgorithm(\"SHA256\")\n            .honorForceAuthn(false)\n            .label(\"example\")\n            .recipient(\"https://example.com\")\n            .responseSigned(true)\n            .signatureAlgorithm(\"RSA_SHA256\")\n            .ssoUrl(\"https://example.com\")\n            .subjectNameIdFormat(\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\")\n            .subjectNameIdTemplate(\"${user.userName}\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:Saml\n    properties:\n      attributeStatements:\n        - filterType: REGEX\n          filterValue: .*\n          name: groups\n          type: GROUP\n      audience: https://example.com/audience\n      authnContextClassRef: urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\n      destination: https://example.com\n      digestAlgorithm: SHA256\n      honorForceAuthn: false\n      label: example\n      recipient: https://example.com\n      responseSigned: true\n      signatureAlgorithm: RSA_SHA256\n      ssoUrl: https://example.com\n      subjectNameIdFormat: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n      subjectNameIdTemplate: ${user.userName}\n```\n{{% /example %}}\n{{% example %}}\n### With inline hook\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst testHook = new okta.inline.Hook(\"testHook\", {\n    status: \"ACTIVE\",\n    type: \"com.okta.saml.tokens.transform\",\n    version: \"1.0.2\",\n    channel: {\n        type: \"HTTP\",\n        version: \"1.0.0\",\n        uri: \"https://example.com/test1\",\n        method: \"POST\",\n    },\n    auth: {\n        key: \"Authorization\",\n        type: \"HEADER\",\n        value: \"secret\",\n    },\n});\nconst testSaml = new okta.app.Saml(\"testSaml\", {\n    label: \"testAcc_replace_with_uuid\",\n    ssoUrl: \"https://google.com\",\n    recipient: \"https://here.com\",\n    destination: \"https://its-about-the-journey.com\",\n    audience: \"https://audience.com\",\n    subjectNameIdTemplate: \"${user.userName}\",\n    subjectNameIdFormat: \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n    responseSigned: true,\n    signatureAlgorithm: \"RSA_SHA256\",\n    digestAlgorithm: \"SHA256\",\n    honorForceAuthn: false,\n    authnContextClassRef: \"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\",\n    inlineHookId: testHook.id,\n    attributeStatements: [{\n        type: \"GROUP\",\n        name: \"groups\",\n        filterType: \"REGEX\",\n        filterValue: \".*\",\n    }],\n}, {\n    dependsOn: [testHook],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest_hook = okta.inline.Hook(\"testHook\",\n    status=\"ACTIVE\",\n    type=\"com.okta.saml.tokens.transform\",\n    version=\"1.0.2\",\n    channel={\n        \"type\": \"HTTP\",\n        \"version\": \"1.0.0\",\n        \"uri\": \"https://example.com/test1\",\n        \"method\": \"POST\",\n    },\n    auth={\n        \"key\": \"Authorization\",\n        \"type\": \"HEADER\",\n        \"value\": \"secret\",\n    })\ntest_saml = okta.app.Saml(\"testSaml\",\n    label=\"testAcc_replace_with_uuid\",\n    sso_url=\"https://google.com\",\n    recipient=\"https://here.com\",\n    destination=\"https://its-about-the-journey.com\",\n    audience=\"https://audience.com\",\n    subject_name_id_template=\"${user.userName}\",\n    subject_name_id_format=\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n    response_signed=True,\n    signature_algorithm=\"RSA_SHA256\",\n    digest_algorithm=\"SHA256\",\n    honor_force_authn=False,\n    authn_context_class_ref=\"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\",\n    inline_hook_id=test_hook.id,\n    attribute_statements=[okta.app.SamlAttributeStatementArgs(\n        type=\"GROUP\",\n        name=\"groups\",\n        filter_type=\"REGEX\",\n        filter_value=\".*\",\n    )],\n    opts=pulumi.ResourceOptions(depends_on=[test_hook]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testHook = new Okta.Inline.Hook(\"testHook\", new()\n    {\n        Status = \"ACTIVE\",\n        Type = \"com.okta.saml.tokens.transform\",\n        Version = \"1.0.2\",\n        Channel = \n        {\n            { \"type\", \"HTTP\" },\n            { \"version\", \"1.0.0\" },\n            { \"uri\", \"https://example.com/test1\" },\n            { \"method\", \"POST\" },\n        },\n        Auth = \n        {\n            { \"key\", \"Authorization\" },\n            { \"type\", \"HEADER\" },\n            { \"value\", \"secret\" },\n        },\n    });\n\n    var testSaml = new Okta.App.Saml(\"testSaml\", new()\n    {\n        Label = \"testAcc_replace_with_uuid\",\n        SsoUrl = \"https://google.com\",\n        Recipient = \"https://here.com\",\n        Destination = \"https://its-about-the-journey.com\",\n        Audience = \"https://audience.com\",\n        SubjectNameIdTemplate = \"${user.userName}\",\n        SubjectNameIdFormat = \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n        ResponseSigned = true,\n        SignatureAlgorithm = \"RSA_SHA256\",\n        DigestAlgorithm = \"SHA256\",\n        HonorForceAuthn = false,\n        AuthnContextClassRef = \"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\",\n        InlineHookId = testHook.Id,\n        AttributeStatements = new[]\n        {\n            new Okta.App.Inputs.SamlAttributeStatementArgs\n            {\n                Type = \"GROUP\",\n                Name = \"groups\",\n                FilterType = \"REGEX\",\n                FilterValue = \".*\",\n            },\n        },\n    }, new CustomResourceOptions\n    {\n        DependsOn = new[]\n        {\n            testHook,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/inline\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestHook, err := inline.NewHook(ctx, \"testHook\", \u0026inline.HookArgs{\n\t\t\tStatus:  pulumi.String(\"ACTIVE\"),\n\t\t\tType:    pulumi.String(\"com.okta.saml.tokens.transform\"),\n\t\t\tVersion: pulumi.String(\"1.0.2\"),\n\t\t\tChannel: pulumi.StringMap{\n\t\t\t\t\"type\":    pulumi.String(\"HTTP\"),\n\t\t\t\t\"version\": pulumi.String(\"1.0.0\"),\n\t\t\t\t\"uri\":     pulumi.String(\"https://example.com/test1\"),\n\t\t\t\t\"method\":  pulumi.String(\"POST\"),\n\t\t\t},\n\t\t\tAuth: pulumi.StringMap{\n\t\t\t\t\"key\":   pulumi.String(\"Authorization\"),\n\t\t\t\t\"type\":  pulumi.String(\"HEADER\"),\n\t\t\t\t\"value\": pulumi.String(\"secret\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = app.NewSaml(ctx, \"testSaml\", \u0026app.SamlArgs{\n\t\t\tLabel:                 pulumi.String(\"testAcc_replace_with_uuid\"),\n\t\t\tSsoUrl:                pulumi.String(\"https://google.com\"),\n\t\t\tRecipient:             pulumi.String(\"https://here.com\"),\n\t\t\tDestination:           pulumi.String(\"https://its-about-the-journey.com\"),\n\t\t\tAudience:              pulumi.String(\"https://audience.com\"),\n\t\t\tSubjectNameIdTemplate: pulumi.String(\"${user.userName}\"),\n\t\t\tSubjectNameIdFormat:   pulumi.String(\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\"),\n\t\t\tResponseSigned:        pulumi.Bool(true),\n\t\t\tSignatureAlgorithm:    pulumi.String(\"RSA_SHA256\"),\n\t\t\tDigestAlgorithm:       pulumi.String(\"SHA256\"),\n\t\t\tHonorForceAuthn:       pulumi.Bool(false),\n\t\t\tAuthnContextClassRef:  pulumi.String(\"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\"),\n\t\t\tInlineHookId:          testHook.ID(),\n\t\t\tAttributeStatements: app.SamlAttributeStatementArray{\n\t\t\t\t\u0026app.SamlAttributeStatementArgs{\n\t\t\t\t\tType:        pulumi.String(\"GROUP\"),\n\t\t\t\t\tName:        pulumi.String(\"groups\"),\n\t\t\t\t\tFilterType:  pulumi.String(\"REGEX\"),\n\t\t\t\t\tFilterValue: pulumi.String(\".*\"),\n\t\t\t\t},\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\ttestHook,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.inline.Hook;\nimport com.pulumi.okta.inline.HookArgs;\nimport com.pulumi.okta.app.Saml;\nimport com.pulumi.okta.app.SamlArgs;\nimport com.pulumi.okta.app.inputs.SamlAttributeStatementArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testHook = new Hook(\"testHook\", HookArgs.builder()        \n            .status(\"ACTIVE\")\n            .type(\"com.okta.saml.tokens.transform\")\n            .version(\"1.0.2\")\n            .channel(Map.ofEntries(\n                Map.entry(\"type\", \"HTTP\"),\n                Map.entry(\"version\", \"1.0.0\"),\n                Map.entry(\"uri\", \"https://example.com/test1\"),\n                Map.entry(\"method\", \"POST\")\n            ))\n            .auth(Map.ofEntries(\n                Map.entry(\"key\", \"Authorization\"),\n                Map.entry(\"type\", \"HEADER\"),\n                Map.entry(\"value\", \"secret\")\n            ))\n            .build());\n\n        var testSaml = new Saml(\"testSaml\", SamlArgs.builder()        \n            .label(\"testAcc_replace_with_uuid\")\n            .ssoUrl(\"https://google.com\")\n            .recipient(\"https://here.com\")\n            .destination(\"https://its-about-the-journey.com\")\n            .audience(\"https://audience.com\")\n            .subjectNameIdTemplate(\"${user.userName}\")\n            .subjectNameIdFormat(\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\")\n            .responseSigned(true)\n            .signatureAlgorithm(\"RSA_SHA256\")\n            .digestAlgorithm(\"SHA256\")\n            .honorForceAuthn(false)\n            .authnContextClassRef(\"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\")\n            .inlineHookId(testHook.id())\n            .attributeStatements(SamlAttributeStatementArgs.builder()\n                .type(\"GROUP\")\n                .name(\"groups\")\n                .filterType(\"REGEX\")\n                .filterValue(\".*\")\n                .build())\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(testHook)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testHook:\n    type: okta:inline:Hook\n    properties:\n      status: ACTIVE\n      type: com.okta.saml.tokens.transform\n      version: 1.0.2\n      channel:\n        type: HTTP\n        version: 1.0.0\n        uri: https://example.com/test1\n        method: POST\n      auth:\n        key: Authorization\n        type: HEADER\n        value: secret\n  testSaml:\n    type: okta:app:Saml\n    properties:\n      label: testAcc_replace_with_uuid\n      ssoUrl: https://google.com\n      recipient: https://here.com\n      destination: https://its-about-the-journey.com\n      audience: https://audience.com\n      subjectNameIdTemplate: ${user.userName}\n      subjectNameIdFormat: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n      responseSigned: true\n      signatureAlgorithm: RSA_SHA256\n      digestAlgorithm: SHA256\n      honorForceAuthn: false\n      authnContextClassRef: urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\n      inlineHookId: ${testHook.id}\n      attributeStatements:\n        - type: GROUP\n          name: groups\n          filterType: REGEX\n          filterValue: .*\n    options:\n      dependson:\n        - ${testHook}\n```\n{{% /example %}}\n{{% example %}}\n### Pre-configured app with SAML 1.1 sign-on mode\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.app.Saml(\"test\", {\n    appSettingsJson: `{\n    \"groupFilter\": \"app1.*\",\n    \"siteURL\": \"https://www.okta.com\"\n}\n\n`,\n    label: \"SharePoint (On-Premise)\",\n    preconfiguredApp: \"sharepoint_onpremise\",\n    samlVersion: \"1.1\",\n    status: \"ACTIVE\",\n    userNameTemplate: \"${source.login}\",\n    userNameTemplateType: \"BUILT_IN\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.app.Saml(\"test\",\n    app_settings_json=\"\"\"{\n    \"groupFilter\": \"app1.*\",\n    \"siteURL\": \"https://www.okta.com\"\n}\n\n\"\"\",\n    label=\"SharePoint (On-Premise)\",\n    preconfigured_app=\"sharepoint_onpremise\",\n    saml_version=\"1.1\",\n    status=\"ACTIVE\",\n    user_name_template=\"${source.login}\",\n    user_name_template_type=\"BUILT_IN\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Okta.App.Saml(\"test\", new()\n    {\n        AppSettingsJson = @\"{\n    \"\"groupFilter\"\": \"\"app1.*\"\",\n    \"\"siteURL\"\": \"\"https://www.okta.com\"\"\n}\n\n\",\n        Label = \"SharePoint (On-Premise)\",\n        PreconfiguredApp = \"sharepoint_onpremise\",\n        SamlVersion = \"1.1\",\n        Status = \"ACTIVE\",\n        UserNameTemplate = \"${source.login}\",\n        UserNameTemplateType = \"BUILT_IN\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewSaml(ctx, \"test\", \u0026app.SamlArgs{\n\t\t\tAppSettingsJson:      pulumi.String(\"{\\n    \\\"groupFilter\\\": \\\"app1.*\\\",\\n    \\\"siteURL\\\": \\\"https://www.okta.com\\\"\\n}\\n\\n\"),\n\t\t\tLabel:                pulumi.String(\"SharePoint (On-Premise)\"),\n\t\t\tPreconfiguredApp:     pulumi.String(\"sharepoint_onpremise\"),\n\t\t\tSamlVersion:          pulumi.String(\"1.1\"),\n\t\t\tStatus:               pulumi.String(\"ACTIVE\"),\n\t\t\tUserNameTemplate:     pulumi.String(\"${source.login}\"),\n\t\t\tUserNameTemplateType: pulumi.String(\"BUILT_IN\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.Saml;\nimport com.pulumi.okta.app.SamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new Saml(\"test\", SamlArgs.builder()        \n            .appSettingsJson(\"\"\"\n{\n    \"groupFilter\": \"app1.*\",\n    \"siteURL\": \"https://www.okta.com\"\n}\n\n            \"\"\")\n            .label(\"SharePoint (On-Premise)\")\n            .preconfiguredApp(\"sharepoint_onpremise\")\n            .samlVersion(\"1.1\")\n            .status(\"ACTIVE\")\n            .userNameTemplate(\"${source.login}\")\n            .userNameTemplateType(\"BUILT_IN\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: okta:app:Saml\n    properties:\n      appSettingsJson: |+\n        {\n            \"groupFilter\": \"app1.*\",\n            \"siteURL\": \"https://www.okta.com\"\n        }\n\n      label: SharePoint (On-Premise)\n      preconfiguredApp: sharepoint_onpremise\n      samlVersion: '1.1'\n      status: ACTIVE\n      userNameTemplate: ${source.login}\n      userNameTemplateType: BUILT_IN\n```\n{{% /example %}}\n{{% example %}}\n### Pre-configured app with SAML 1.1 sign-on mode, `app_settings_json` and `app_links_json`\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst office365 = new okta.app.Saml(\"office365\", {\n    appLinksJson: `  {\n      \"calendar\": false,\n      \"crm\": false,\n      \"delve\": false,\n      \"excel\": false,\n      \"forms\": false,\n      \"mail\": false,\n      \"newsfeed\": false,\n      \"onedrive\": false,\n      \"people\": false,\n      \"planner\": false,\n      \"powerbi\": false,\n      \"powerpoint\": false,\n      \"sites\": false,\n      \"sway\": false,\n      \"tasks\": false,\n      \"teams\": false,\n      \"video\": false,\n      \"word\": false,\n      \"yammer\": false,\n      \"login\": true\n  }\n\n`,\n    appSettingsJson: `    {\n       \"wsFedConfigureType\": \"AUTO\",\n       \"windowsTransportEnabled\": false,\n       \"domain\": \"okta.com\",\n       \"msftTenant\": \"okta\",\n       \"domains\": [],\n       \"requireAdminConsent\": false\n    }\n\n`,\n    label: \"Microsoft Office 365\",\n    preconfiguredApp: \"office365\",\n    samlVersion: \"1.1\",\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\noffice365 = okta.app.Saml(\"office365\",\n    app_links_json=\"\"\"  {\n      \"calendar\": false,\n      \"crm\": false,\n      \"delve\": false,\n      \"excel\": false,\n      \"forms\": false,\n      \"mail\": false,\n      \"newsfeed\": false,\n      \"onedrive\": false,\n      \"people\": false,\n      \"planner\": false,\n      \"powerbi\": false,\n      \"powerpoint\": false,\n      \"sites\": false,\n      \"sway\": false,\n      \"tasks\": false,\n      \"teams\": false,\n      \"video\": false,\n      \"word\": false,\n      \"yammer\": false,\n      \"login\": true\n  }\n\n\"\"\",\n    app_settings_json=\"\"\"    {\n       \"wsFedConfigureType\": \"AUTO\",\n       \"windowsTransportEnabled\": false,\n       \"domain\": \"okta.com\",\n       \"msftTenant\": \"okta\",\n       \"domains\": [],\n       \"requireAdminConsent\": false\n    }\n\n\"\"\",\n    label=\"Microsoft Office 365\",\n    preconfigured_app=\"office365\",\n    saml_version=\"1.1\",\n    status=\"ACTIVE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var office365 = new Okta.App.Saml(\"office365\", new()\n    {\n        AppLinksJson = @\"  {\n      \"\"calendar\"\": false,\n      \"\"crm\"\": false,\n      \"\"delve\"\": false,\n      \"\"excel\"\": false,\n      \"\"forms\"\": false,\n      \"\"mail\"\": false,\n      \"\"newsfeed\"\": false,\n      \"\"onedrive\"\": false,\n      \"\"people\"\": false,\n      \"\"planner\"\": false,\n      \"\"powerbi\"\": false,\n      \"\"powerpoint\"\": false,\n      \"\"sites\"\": false,\n      \"\"sway\"\": false,\n      \"\"tasks\"\": false,\n      \"\"teams\"\": false,\n      \"\"video\"\": false,\n      \"\"word\"\": false,\n      \"\"yammer\"\": false,\n      \"\"login\"\": true\n  }\n\n\",\n        AppSettingsJson = @\"    {\n       \"\"wsFedConfigureType\"\": \"\"AUTO\"\",\n       \"\"windowsTransportEnabled\"\": false,\n       \"\"domain\"\": \"\"okta.com\"\",\n       \"\"msftTenant\"\": \"\"okta\"\",\n       \"\"domains\"\": [],\n       \"\"requireAdminConsent\"\": false\n    }\n\n\",\n        Label = \"Microsoft Office 365\",\n        PreconfiguredApp = \"office365\",\n        SamlVersion = \"1.1\",\n        Status = \"ACTIVE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewSaml(ctx, \"office365\", \u0026app.SamlArgs{\n\t\t\tAppLinksJson:     pulumi.String(\"  {\\n      \\\"calendar\\\": false,\\n      \\\"crm\\\": false,\\n      \\\"delve\\\": false,\\n      \\\"excel\\\": false,\\n      \\\"forms\\\": false,\\n      \\\"mail\\\": false,\\n      \\\"newsfeed\\\": false,\\n      \\\"onedrive\\\": false,\\n      \\\"people\\\": false,\\n      \\\"planner\\\": false,\\n      \\\"powerbi\\\": false,\\n      \\\"powerpoint\\\": false,\\n      \\\"sites\\\": false,\\n      \\\"sway\\\": false,\\n      \\\"tasks\\\": false,\\n      \\\"teams\\\": false,\\n      \\\"video\\\": false,\\n      \\\"word\\\": false,\\n      \\\"yammer\\\": false,\\n      \\\"login\\\": true\\n  }\\n\\n\"),\n\t\t\tAppSettingsJson:  pulumi.String(\"    {\\n       \\\"wsFedConfigureType\\\": \\\"AUTO\\\",\\n       \\\"windowsTransportEnabled\\\": false,\\n       \\\"domain\\\": \\\"okta.com\\\",\\n       \\\"msftTenant\\\": \\\"okta\\\",\\n       \\\"domains\\\": [],\\n       \\\"requireAdminConsent\\\": false\\n    }\\n\\n\"),\n\t\t\tLabel:            pulumi.String(\"Microsoft Office 365\"),\n\t\t\tPreconfiguredApp: pulumi.String(\"office365\"),\n\t\t\tSamlVersion:      pulumi.String(\"1.1\"),\n\t\t\tStatus:           pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.Saml;\nimport com.pulumi.okta.app.SamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var office365 = new Saml(\"office365\", SamlArgs.builder()        \n            .appLinksJson(\"\"\"\n  {\n      \"calendar\": false,\n      \"crm\": false,\n      \"delve\": false,\n      \"excel\": false,\n      \"forms\": false,\n      \"mail\": false,\n      \"newsfeed\": false,\n      \"onedrive\": false,\n      \"people\": false,\n      \"planner\": false,\n      \"powerbi\": false,\n      \"powerpoint\": false,\n      \"sites\": false,\n      \"sway\": false,\n      \"tasks\": false,\n      \"teams\": false,\n      \"video\": false,\n      \"word\": false,\n      \"yammer\": false,\n      \"login\": true\n  }\n\n            \"\"\")\n            .appSettingsJson(\"\"\"\n    {\n       \"wsFedConfigureType\": \"AUTO\",\n       \"windowsTransportEnabled\": false,\n       \"domain\": \"okta.com\",\n       \"msftTenant\": \"okta\",\n       \"domains\": [],\n       \"requireAdminConsent\": false\n    }\n\n            \"\"\")\n            .label(\"Microsoft Office 365\")\n            .preconfiguredApp(\"office365\")\n            .samlVersion(\"1.1\")\n            .status(\"ACTIVE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  office365:\n    type: okta:app:Saml\n    properties:\n      appLinksJson: |2+\n          {\n              \"calendar\": false,\n              \"crm\": false,\n              \"delve\": false,\n              \"excel\": false,\n              \"forms\": false,\n              \"mail\": false,\n              \"newsfeed\": false,\n              \"onedrive\": false,\n              \"people\": false,\n              \"planner\": false,\n              \"powerbi\": false,\n              \"powerpoint\": false,\n              \"sites\": false,\n              \"sway\": false,\n              \"tasks\": false,\n              \"teams\": false,\n              \"video\": false,\n              \"word\": false,\n              \"yammer\": false,\n              \"login\": true\n          }\n\n      appSettingsJson: |2+\n            {\n               \"wsFedConfigureType\": \"AUTO\",\n               \"windowsTransportEnabled\": false,\n               \"domain\": \"okta.com\",\n               \"msftTenant\": \"okta\",\n               \"domains\": [],\n               \"requireAdminConsent\": false\n            }\n\n      label: Microsoft Office 365\n      preconfiguredApp: office365\n      samlVersion: '1.1'\n      status: ACTIVE\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA SAML App can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/saml:Saml example \u0026#60;app id\u0026#62;\n```\n\n It's also possible to import app without groups or/and users. In this case ID may look like this",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. Default is: `false`.\n"
                },
                "acsEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of ACS endpoints. You can configure a maximum of 100 endpoints.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "appSettingsJson": {
                    "type": "string",
                    "description": "Application settings in JSON format.\n"
                },
                "assertionSigned": {
                    "type": "boolean",
                    "description": "Determines whether the SAML assertion is digitally signed.\n"
                },
                "attributeStatements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/SamlAttributeStatement:SamlAttributeStatement"
                    },
                    "description": "List of SAML Attribute statements.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "Audience Restriction\n"
                },
                "authenticationPolicy": {
                    "type": "string",
                    "description": "The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.\n"
                },
                "authnContextClassRef": {
                    "type": "string",
                    "description": "Identifies the SAML authentication context class for the assertion’s authentication statement\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar. Default is: `false`\n"
                },
                "certificate": {
                    "type": "string",
                    "description": "The raw signing certificate.\n"
                },
                "defaultRelayState": {
                    "type": "string",
                    "description": "Identifies a specific application resource in an IDP initiated SSO scenario.\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Identifies the location where the SAML response is intended to be sent inside of the SAML assertion\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response\n"
                },
                "embedUrl": {
                    "type": "string",
                    "description": "Url that can be used to embed this application into another portal.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "entityKey": {
                    "type": "string",
                    "description": "Entity ID, the ID portion of the `entity_url`.\n"
                },
                "entityUrl": {
                    "type": "string",
                    "description": "Entity URL for instance [http://www.okta.com/exk1fcia6d6EMsf331d8](http://www.okta.com/exk1fcia6d6EMsf331d8).\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "features enabled. Notice: you can't currently configure provisioning features via the API.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app. Default is: `false`\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users. Default is: `false`\n"
                },
                "honorForceAuthn": {
                    "type": "boolean",
                    "description": "Prompt user to re-authenticate if SP asks for it. Default is: `false`\n"
                },
                "httpPostBinding": {
                    "type": "string",
                    "description": "`urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post` location from the SAML metadata.\n"
                },
                "httpRedirectBinding": {
                    "type": "string",
                    "description": "`urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect` location from the SAML metadata.\n"
                },
                "idpIssuer": {
                    "type": "string",
                    "description": "SAML issuer ID.\n"
                },
                "implicitAssignment": {
                    "type": "boolean",
                    "description": "_Early Access Property_. Enables [Federation Broker Mode](https://help.okta.com/en/prod/Content/Topics/Apps/apps-fbm-enable.htm).\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "Saml Inline Hook associated with the application.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "Certificate key ID.\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with `key_years_valid`.\n"
                },
                "keyYearsValid": {
                    "type": "integer",
                    "description": "Number of years the certificate is valid (2 - 10 years).\n"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/SamlKey:SamlKey"
                    },
                    "description": "An array of all key credentials for the application. Format of each entry is as follows:\n"
                },
                "label": {
                    "type": "string",
                    "description": "label of application.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Direct link of application logo.\n"
                },
                "metadata": {
                    "type": "string",
                    "description": "The raw SAML metadata in XML.\n"
                },
                "metadataUrl": {
                    "type": "string",
                    "description": "SAML xml metadata URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute statement.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "name of application from the Okta Integration Network, if not included a custom app will be created.  If not provided the following arguments are required:\n"
                },
                "recipient": {
                    "type": "string",
                    "description": "The location where the app may present the SAML assertion.\n"
                },
                "requestCompressed": {
                    "type": "boolean",
                    "description": "Denotes whether the request is compressed or not.\n"
                },
                "responseSigned": {
                    "type": "boolean",
                    "description": "Determines whether the SAML auth response message is digitally signed.\n"
                },
                "samlSignedRequestEnabled": {
                    "type": "boolean",
                    "description": "SAML Signed Request enabled\n"
                },
                "samlVersion": {
                    "type": "string",
                    "description": "SAML version for the app's sign-on mode. Valid values are: `\"2.0\"` or `\"1.1\"`. Default is `\"2.0\"`.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign-on mode of application.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Signature algorithm used ot digitally sign the assertion and response.\n"
                },
                "singleLogoutCertificate": {
                    "type": "string",
                    "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests.  Note: should be provided without `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`, see [official documentation](https://developer.okta.com/docs/reference/api/apps/#service-provider-certificate).\n"
                },
                "singleLogoutIssuer": {
                    "type": "string",
                    "description": "The issuer of the Service Provider that generates the Single Logout request.\n"
                },
                "singleLogoutUrl": {
                    "type": "string",
                    "description": "The location where the logout response is sent.\n"
                },
                "spIssuer": {
                    "type": "string",
                    "description": "SAML service provider issuer.\n"
                },
                "ssoUrl": {
                    "type": "string",
                    "description": "Single Sign-on Url.\n"
                },
                "status": {
                    "type": "string",
                    "description": "status of application.\n"
                },
                "subjectNameIdFormat": {
                    "type": "string",
                    "description": "Identifies the SAML processing rules.\n"
                },
                "subjectNameIdTemplate": {
                    "type": "string",
                    "description": "Template for app user's username when a user is assigned to the app.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default is: `\"${source.login}\"`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default is: `\"BUILT_IN\"`.\n"
                }
            },
            "required": [
                "certificate",
                "embedUrl",
                "entityKey",
                "entityUrl",
                "features",
                "httpPostBinding",
                "httpRedirectBinding",
                "keyId",
                "keys",
                "label",
                "logoUrl",
                "metadata",
                "metadataUrl",
                "name",
                "signOnMode"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. Default is: `false`.\n"
                },
                "acsEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of ACS endpoints. You can configure a maximum of 100 endpoints.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "appSettingsJson": {
                    "type": "string",
                    "description": "Application settings in JSON format.\n"
                },
                "assertionSigned": {
                    "type": "boolean",
                    "description": "Determines whether the SAML assertion is digitally signed.\n"
                },
                "attributeStatements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/SamlAttributeStatement:SamlAttributeStatement"
                    },
                    "description": "List of SAML Attribute statements.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "Audience Restriction\n"
                },
                "authenticationPolicy": {
                    "type": "string",
                    "description": "The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.\n"
                },
                "authnContextClassRef": {
                    "type": "string",
                    "description": "Identifies the SAML authentication context class for the assertion’s authentication statement\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar. Default is: `false`\n"
                },
                "defaultRelayState": {
                    "type": "string",
                    "description": "Identifies a specific application resource in an IDP initiated SSO scenario.\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Identifies the location where the SAML response is intended to be sent inside of the SAML assertion\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app. Default is: `false`\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users. Default is: `false`\n"
                },
                "honorForceAuthn": {
                    "type": "boolean",
                    "description": "Prompt user to re-authenticate if SP asks for it. Default is: `false`\n"
                },
                "idpIssuer": {
                    "type": "string",
                    "description": "SAML issuer ID.\n"
                },
                "implicitAssignment": {
                    "type": "boolean",
                    "description": "_Early Access Property_. Enables [Federation Broker Mode](https://help.okta.com/en/prod/Content/Topics/Apps/apps-fbm-enable.htm).\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "Saml Inline Hook associated with the application.\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with `key_years_valid`.\n"
                },
                "keyYearsValid": {
                    "type": "integer",
                    "description": "Number of years the certificate is valid (2 - 10 years).\n"
                },
                "label": {
                    "type": "string",
                    "description": "label of application.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "name of application from the Okta Integration Network, if not included a custom app will be created.  If not provided the following arguments are required:\n",
                    "willReplaceOnChanges": true
                },
                "recipient": {
                    "type": "string",
                    "description": "The location where the app may present the SAML assertion.\n"
                },
                "requestCompressed": {
                    "type": "boolean",
                    "description": "Denotes whether the request is compressed or not.\n"
                },
                "responseSigned": {
                    "type": "boolean",
                    "description": "Determines whether the SAML auth response message is digitally signed.\n"
                },
                "samlSignedRequestEnabled": {
                    "type": "boolean",
                    "description": "SAML Signed Request enabled\n"
                },
                "samlVersion": {
                    "type": "string",
                    "description": "SAML version for the app's sign-on mode. Valid values are: `\"2.0\"` or `\"1.1\"`. Default is `\"2.0\"`.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Signature algorithm used ot digitally sign the assertion and response.\n"
                },
                "singleLogoutCertificate": {
                    "type": "string",
                    "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests.  Note: should be provided without `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`, see [official documentation](https://developer.okta.com/docs/reference/api/apps/#service-provider-certificate).\n"
                },
                "singleLogoutIssuer": {
                    "type": "string",
                    "description": "The issuer of the Service Provider that generates the Single Logout request.\n"
                },
                "singleLogoutUrl": {
                    "type": "string",
                    "description": "The location where the logout response is sent.\n"
                },
                "spIssuer": {
                    "type": "string",
                    "description": "SAML service provider issuer.\n"
                },
                "ssoUrl": {
                    "type": "string",
                    "description": "Single Sign-on Url.\n"
                },
                "status": {
                    "type": "string",
                    "description": "status of application.\n"
                },
                "subjectNameIdFormat": {
                    "type": "string",
                    "description": "Identifies the SAML processing rules.\n"
                },
                "subjectNameIdTemplate": {
                    "type": "string",
                    "description": "Template for app user's username when a user is assigned to the app.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default is: `\"${source.login}\"`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default is: `\"BUILT_IN\"`.\n"
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Saml resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page for this application.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service. Default is: `false`.\n"
                    },
                    "acsEndpoints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of ACS endpoints. You can configure a maximum of 100 endpoints.\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "appSettingsJson": {
                        "type": "string",
                        "description": "Application settings in JSON format.\n"
                    },
                    "assertionSigned": {
                        "type": "boolean",
                        "description": "Determines whether the SAML assertion is digitally signed.\n"
                    },
                    "attributeStatements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/SamlAttributeStatement:SamlAttributeStatement"
                        },
                        "description": "List of SAML Attribute statements.\n"
                    },
                    "audience": {
                        "type": "string",
                        "description": "Audience Restriction\n"
                    },
                    "authenticationPolicy": {
                        "type": "string",
                        "description": "The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.\n"
                    },
                    "authnContextClassRef": {
                        "type": "string",
                        "description": "Identifies the SAML authentication context class for the assertion’s authentication statement\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar. Default is: `false`\n"
                    },
                    "certificate": {
                        "type": "string",
                        "description": "The raw signing certificate.\n"
                    },
                    "defaultRelayState": {
                        "type": "string",
                        "description": "Identifies a specific application resource in an IDP initiated SSO scenario.\n"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Identifies the location where the SAML response is intended to be sent inside of the SAML assertion\n"
                    },
                    "digestAlgorithm": {
                        "type": "string",
                        "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response\n"
                    },
                    "embedUrl": {
                        "type": "string",
                        "description": "Url that can be used to embed this application into another portal.\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "entityKey": {
                        "type": "string",
                        "description": "Entity ID, the ID portion of the `entity_url`.\n"
                    },
                    "entityUrl": {
                        "type": "string",
                        "description": "Entity URL for instance [http://www.okta.com/exk1fcia6d6EMsf331d8](http://www.okta.com/exk1fcia6d6EMsf331d8).\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "features enabled. Notice: you can't currently configure provisioning features via the API.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app. Default is: `false`\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users. Default is: `false`\n"
                    },
                    "honorForceAuthn": {
                        "type": "boolean",
                        "description": "Prompt user to re-authenticate if SP asks for it. Default is: `false`\n"
                    },
                    "httpPostBinding": {
                        "type": "string",
                        "description": "`urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post` location from the SAML metadata.\n"
                    },
                    "httpRedirectBinding": {
                        "type": "string",
                        "description": "`urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect` location from the SAML metadata.\n"
                    },
                    "idpIssuer": {
                        "type": "string",
                        "description": "SAML issuer ID.\n"
                    },
                    "implicitAssignment": {
                        "type": "boolean",
                        "description": "_Early Access Property_. Enables [Federation Broker Mode](https://help.okta.com/en/prod/Content/Topics/Apps/apps-fbm-enable.htm).\n"
                    },
                    "inlineHookId": {
                        "type": "string",
                        "description": "Saml Inline Hook associated with the application.\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "Certificate key ID.\n"
                    },
                    "keyName": {
                        "type": "string",
                        "description": "Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with `key_years_valid`.\n"
                    },
                    "keyYearsValid": {
                        "type": "integer",
                        "description": "Number of years the certificate is valid (2 - 10 years).\n"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/SamlKey:SamlKey"
                        },
                        "description": "An array of all key credentials for the application. Format of each entry is as follows:\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "label of application.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Direct link of application logo.\n"
                    },
                    "metadata": {
                        "type": "string",
                        "description": "The raw SAML metadata in XML.\n"
                    },
                    "metadataUrl": {
                        "type": "string",
                        "description": "SAML xml metadata URL.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the attribute statement.\n"
                    },
                    "preconfiguredApp": {
                        "type": "string",
                        "description": "name of application from the Okta Integration Network, if not included a custom app will be created.  If not provided the following arguments are required:\n",
                        "willReplaceOnChanges": true
                    },
                    "recipient": {
                        "type": "string",
                        "description": "The location where the app may present the SAML assertion.\n"
                    },
                    "requestCompressed": {
                        "type": "boolean",
                        "description": "Denotes whether the request is compressed or not.\n"
                    },
                    "responseSigned": {
                        "type": "boolean",
                        "description": "Determines whether the SAML auth response message is digitally signed.\n"
                    },
                    "samlSignedRequestEnabled": {
                        "type": "boolean",
                        "description": "SAML Signed Request enabled\n"
                    },
                    "samlVersion": {
                        "type": "string",
                        "description": "SAML version for the app's sign-on mode. Valid values are: `\"2.0\"` or `\"1.1\"`. Default is `\"2.0\"`.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign-on mode of application.\n"
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "Signature algorithm used ot digitally sign the assertion and response.\n"
                    },
                    "singleLogoutCertificate": {
                        "type": "string",
                        "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests.  Note: should be provided without `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`, see [official documentation](https://developer.okta.com/docs/reference/api/apps/#service-provider-certificate).\n"
                    },
                    "singleLogoutIssuer": {
                        "type": "string",
                        "description": "The issuer of the Service Provider that generates the Single Logout request.\n"
                    },
                    "singleLogoutUrl": {
                        "type": "string",
                        "description": "The location where the logout response is sent.\n"
                    },
                    "spIssuer": {
                        "type": "string",
                        "description": "SAML service provider issuer.\n"
                    },
                    "ssoUrl": {
                        "type": "string",
                        "description": "Single Sign-on Url.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "status of application.\n"
                    },
                    "subjectNameIdFormat": {
                        "type": "string",
                        "description": "Identifies the SAML processing rules.\n"
                    },
                    "subjectNameIdTemplate": {
                        "type": "string",
                        "description": "Template for app user's username when a user is assigned to the app.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default is: `\"${source.login}\"`\n"
                    },
                    "userNameTemplatePushStatus": {
                        "type": "string",
                        "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix.\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default is: `\"BUILT_IN\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/securePasswordStore:SecurePasswordStore": {
            "description": "This resource allows you to create and configure a Secure Password Store Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.SecurePasswordStore(\"example\", {\n    credentialsScheme: \"ADMIN_SETS_CREDENTIALS\",\n    label: \"example\",\n    passwordField: \"pass\",\n    url: \"https://test.com\",\n    usernameField: \"user\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.SecurePasswordStore(\"example\",\n    credentials_scheme=\"ADMIN_SETS_CREDENTIALS\",\n    label=\"example\",\n    password_field=\"pass\",\n    url=\"https://test.com\",\n    username_field=\"user\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.App.SecurePasswordStore(\"example\", new()\n    {\n        CredentialsScheme = \"ADMIN_SETS_CREDENTIALS\",\n        Label = \"example\",\n        PasswordField = \"pass\",\n        Url = \"https://test.com\",\n        UsernameField = \"user\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewSecurePasswordStore(ctx, \"example\", \u0026app.SecurePasswordStoreArgs{\n\t\t\tCredentialsScheme: pulumi.String(\"ADMIN_SETS_CREDENTIALS\"),\n\t\t\tLabel:             pulumi.String(\"example\"),\n\t\t\tPasswordField:     pulumi.String(\"pass\"),\n\t\t\tUrl:               pulumi.String(\"https://test.com\"),\n\t\t\tUsernameField:     pulumi.String(\"user\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.SecurePasswordStore;\nimport com.pulumi.okta.app.SecurePasswordStoreArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new SecurePasswordStore(\"example\", SecurePasswordStoreArgs.builder()        \n            .credentialsScheme(\"ADMIN_SETS_CREDENTIALS\")\n            .label(\"example\")\n            .passwordField(\"pass\")\n            .url(\"https://test.com\")\n            .usernameField(\"user\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:SecurePasswordStore\n    properties:\n      credentialsScheme: ADMIN_SETS_CREDENTIALS\n      label: example\n      passwordField: pass\n      url: https://test.com\n      usernameField: user\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nSecure Password Store Application can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/securePasswordStore:SecurePasswordStore example \u0026#60;app id\u0026#62;\n```\n\n ",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme. Can be set to `\"EDIT_USERNAME_AND_PASSWORD\"`, `\"ADMIN_SETS_CREDENTIALS\"`, `\"EDIT_PASSWORD_ONLY\"`, `\"EXTERNAL_PASSWORD_SYNC\"`, or `\"SHARED_USERNAME_AND_PASSWORD\"`.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The display name of the Application.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name assigned to the application by Okta.\n"
                },
                "optionalField1": {
                    "type": "string",
                    "description": "Name of optional param in the login form.\n"
                },
                "optionalField1Value": {
                    "type": "string",
                    "description": "Name of optional value in the login form.\n"
                },
                "optionalField2": {
                    "type": "string",
                    "description": "Name of optional param in the login form.\n"
                },
                "optionalField2Value": {
                    "type": "string",
                    "description": "Name of optional value in the login form.\n"
                },
                "optionalField3": {
                    "type": "string",
                    "description": "Name of optional param in the login form.\n"
                },
                "optionalField3Value": {
                    "type": "string",
                    "description": "Name of optional value in the login form.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field.\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `\"ADMIN_SETS_CREDENTIALS\"`, `\"SHARED_USERNAME_AND_PASSWORD\"` or `\"EXTERNAL_PASSWORD_SYNC\"`.\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign-on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `\"${source.login}\"`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field.\n"
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "passwordField",
                "signOnMode",
                "url",
                "usernameField"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme. Can be set to `\"EDIT_USERNAME_AND_PASSWORD\"`, `\"ADMIN_SETS_CREDENTIALS\"`, `\"EDIT_PASSWORD_ONLY\"`, `\"EXTERNAL_PASSWORD_SYNC\"`, or `\"SHARED_USERNAME_AND_PASSWORD\"`.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The display name of the Application.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "optionalField1": {
                    "type": "string",
                    "description": "Name of optional param in the login form.\n"
                },
                "optionalField1Value": {
                    "type": "string",
                    "description": "Name of optional value in the login form.\n"
                },
                "optionalField2": {
                    "type": "string",
                    "description": "Name of optional param in the login form.\n"
                },
                "optionalField2Value": {
                    "type": "string",
                    "description": "Name of optional value in the login form.\n"
                },
                "optionalField3": {
                    "type": "string",
                    "description": "Name of optional param in the login form.\n"
                },
                "optionalField3Value": {
                    "type": "string",
                    "description": "Name of optional value in the login form.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field.\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `\"ADMIN_SETS_CREDENTIALS\"`, `\"SHARED_USERNAME_AND_PASSWORD\"` or `\"EXTERNAL_PASSWORD_SYNC\"`.\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `\"${source.login}\"`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field.\n"
                }
            },
            "requiredInputs": [
                "label",
                "passwordField",
                "url",
                "usernameField"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurePasswordStore resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page for this application.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service. By default, it is `false`.\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "credentialsScheme": {
                        "type": "string",
                        "description": "Application credentials scheme. Can be set to `\"EDIT_USERNAME_AND_PASSWORD\"`, `\"ADMIN_SETS_CREDENTIALS\"`, `\"EDIT_PASSWORD_ONLY\"`, `\"EXTERNAL_PASSWORD_SYNC\"`, or `\"SHARED_USERNAME_AND_PASSWORD\"`.\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The display name of the Application.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name assigned to the application by Okta.\n"
                    },
                    "optionalField1": {
                        "type": "string",
                        "description": "Name of optional param in the login form.\n"
                    },
                    "optionalField1Value": {
                        "type": "string",
                        "description": "Name of optional value in the login form.\n"
                    },
                    "optionalField2": {
                        "type": "string",
                        "description": "Name of optional param in the login form.\n"
                    },
                    "optionalField2Value": {
                        "type": "string",
                        "description": "Name of optional value in the login form.\n"
                    },
                    "optionalField3": {
                        "type": "string",
                        "description": "Name of optional param in the login form.\n"
                    },
                    "optionalField3Value": {
                        "type": "string",
                        "description": "Name of optional value in the login form.\n"
                    },
                    "passwordField": {
                        "type": "string",
                        "description": "Login password field.\n"
                    },
                    "revealPassword": {
                        "type": "boolean",
                        "description": "Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `\"ADMIN_SETS_CREDENTIALS\"`, `\"SHARED_USERNAME_AND_PASSWORD\"` or `\"EXTERNAL_PASSWORD_SYNC\"`.\n"
                    },
                    "sharedPassword": {
                        "type": "string",
                        "description": "Shared password, required for certain schemes.\n"
                    },
                    "sharedUsername": {
                        "type": "string",
                        "description": "Shared username, required for certain schemes.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign-on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Login URL.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default: `\"${source.login}\"`\n"
                    },
                    "userNameTemplatePushStatus": {
                        "type": "string",
                        "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix.\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                    },
                    "usernameField": {
                        "type": "string",
                        "description": "Login username field.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/swa:Swa": {
            "description": "This resource allows you to create and configure a SWA Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.Swa(\"example\", {\n    buttonField: \"btn-login\",\n    label: \"example\",\n    passwordField: \"txtbox-password\",\n    url: \"https://example.com/login.html\",\n    usernameField: \"txtbox-username\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.Swa(\"example\",\n    button_field=\"btn-login\",\n    label=\"example\",\n    password_field=\"txtbox-password\",\n    url=\"https://example.com/login.html\",\n    username_field=\"txtbox-username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.App.Swa(\"example\", new()\n    {\n        ButtonField = \"btn-login\",\n        Label = \"example\",\n        PasswordField = \"txtbox-password\",\n        Url = \"https://example.com/login.html\",\n        UsernameField = \"txtbox-username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewSwa(ctx, \"example\", \u0026app.SwaArgs{\n\t\t\tButtonField:   pulumi.String(\"btn-login\"),\n\t\t\tLabel:         pulumi.String(\"example\"),\n\t\t\tPasswordField: pulumi.String(\"txtbox-password\"),\n\t\t\tUrl:           pulumi.String(\"https://example.com/login.html\"),\n\t\t\tUsernameField: pulumi.String(\"txtbox-username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.Swa;\nimport com.pulumi.okta.app.SwaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Swa(\"example\", SwaArgs.builder()        \n            .buttonField(\"btn-login\")\n            .label(\"example\")\n            .passwordField(\"txtbox-password\")\n            .url(\"https://example.com/login.html\")\n            .usernameField(\"txtbox-username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:Swa\n    properties:\n      buttonField: btn-login\n      label: example\n      passwordField: txtbox-password\n      url: https://example.com/login.html\n      usernameField: txtbox-username\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta SWA App can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/swa:Swa example \u0026#60;app id\u0026#62;\n```\n\n ",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "buttonField": {
                    "type": "string",
                    "description": "Login button field.\n"
                },
                "checkbox": {
                    "type": "string",
                    "description": "CSS selector for the checkbox.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The display name of the Application.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Direct link of application logo.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name assigned to the application by Okta.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "name of application from the Okta Integration Network, if not included a custom app will be created.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "Redirect URL. If going to the login page URL redirects to another page, then enter that URL here.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign-on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the sign-in page for this app.\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regular expression that further restricts url to the specified regular expression.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `\"${source.login}\"`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field.\n"
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "signOnMode"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "buttonField": {
                    "type": "string",
                    "description": "Login button field.\n"
                },
                "checkbox": {
                    "type": "string",
                    "description": "CSS selector for the checkbox.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The display name of the Application.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "name of application from the Okta Integration Network, if not included a custom app will be created.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "Redirect URL. If going to the login page URL redirects to another page, then enter that URL here.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the sign-in page for this app.\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regular expression that further restricts url to the specified regular expression.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `\"${source.login}\"`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field.\n"
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Swa resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page for this application.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service. By default, it is `false`.\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "buttonField": {
                        "type": "string",
                        "description": "Login button field.\n"
                    },
                    "checkbox": {
                        "type": "string",
                        "description": "CSS selector for the checkbox.\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The display name of the Application.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Direct link of application logo.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name assigned to the application by Okta.\n"
                    },
                    "passwordField": {
                        "type": "string",
                        "description": "Login password field.\n"
                    },
                    "preconfiguredApp": {
                        "type": "string",
                        "description": "name of application from the Okta Integration Network, if not included a custom app will be created.\n"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "description": "Redirect URL. If going to the login page URL redirects to another page, then enter that URL here.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign-on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the sign-in page for this app.\n"
                    },
                    "urlRegex": {
                        "type": "string",
                        "description": "A regular expression that further restricts url to the specified regular expression.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default: `\"${source.login}\"`\n"
                    },
                    "userNameTemplatePushStatus": {
                        "type": "string",
                        "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix.\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                    },
                    "usernameField": {
                        "type": "string",
                        "description": "Login username field.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/threeField:ThreeField": {
            "description": "This resource allows you to create and configure a Three Field Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.ThreeField;\nimport com.pulumi.okta.app.ThreeFieldArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ThreeField(\"example\", ThreeFieldArgs.builder()        \n            .credentialsScheme(\"EDIT_USERNAME_AND_PASSWORD\")\n            .label(\"Example App\")\n            .revealPassword(true)\n            .signOnRedirectUrl(\"https://example.com\")\n            .signOnUrl(\"https://example.com/login.html\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:ThreeField\n    properties:\n      credentialsScheme: EDIT_USERNAME_AND_PASSWORD\n      label: Example App\n      revealPassword: true\n      signOnRedirectUrl: https://example.com\n      signOnUrl: https://example.com/login.html\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Three Field App can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/threeField:ThreeField example \u0026#60;app id\u0026#62;\n```\n\n ",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "buttonSelector": {
                    "type": "string",
                    "description": "Login button field CSS selector.\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme. Can be set to `\"EDIT_USERNAME_AND_PASSWORD\"`, `\"ADMIN_SETS_CREDENTIALS\"`, `\"EDIT_PASSWORD_ONLY\"`, `\"EXTERNAL_PASSWORD_SYNC\"`, or `\"SHARED_USERNAME_AND_PASSWORD\"`.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "extraFieldSelector": {
                    "type": "string",
                    "description": "Extra field CSS selector.\n"
                },
                "extraFieldValue": {
                    "type": "string",
                    "description": "Value for extra form field.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The display name of the Application.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Direct link of application logo.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name assigned to the application by Okta.\n"
                },
                "passwordSelector": {
                    "type": "string",
                    "description": "Login password field CSS selector.\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `\"ADMIN_SETS_CREDENTIALS\"`, `\"SHARED_USERNAME_AND_PASSWORD\"` or `\"EXTERNAL_PASSWORD_SYNC\"`.\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign-on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL.\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regex that further restricts URL to the specified regex.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `\"${source.login}\"`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                },
                "usernameSelector": {
                    "type": "string",
                    "description": "Login username field CSS selector.\n"
                }
            },
            "required": [
                "buttonSelector",
                "extraFieldSelector",
                "extraFieldValue",
                "label",
                "logoUrl",
                "name",
                "passwordSelector",
                "signOnMode",
                "url",
                "usernameSelector"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "buttonSelector": {
                    "type": "string",
                    "description": "Login button field CSS selector.\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme. Can be set to `\"EDIT_USERNAME_AND_PASSWORD\"`, `\"ADMIN_SETS_CREDENTIALS\"`, `\"EDIT_PASSWORD_ONLY\"`, `\"EXTERNAL_PASSWORD_SYNC\"`, or `\"SHARED_USERNAME_AND_PASSWORD\"`.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "extraFieldSelector": {
                    "type": "string",
                    "description": "Extra field CSS selector.\n"
                },
                "extraFieldValue": {
                    "type": "string",
                    "description": "Value for extra form field.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The display name of the Application.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "passwordSelector": {
                    "type": "string",
                    "description": "Login password field CSS selector.\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `\"ADMIN_SETS_CREDENTIALS\"`, `\"SHARED_USERNAME_AND_PASSWORD\"` or `\"EXTERNAL_PASSWORD_SYNC\"`.\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL.\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regex that further restricts URL to the specified regex.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `\"${source.login}\"`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                },
                "usernameSelector": {
                    "type": "string",
                    "description": "Login username field CSS selector.\n"
                }
            },
            "requiredInputs": [
                "buttonSelector",
                "extraFieldSelector",
                "extraFieldValue",
                "label",
                "passwordSelector",
                "url",
                "usernameSelector"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ThreeField resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page for this application.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service. By default, it is `false`.\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "buttonSelector": {
                        "type": "string",
                        "description": "Login button field CSS selector.\n"
                    },
                    "credentialsScheme": {
                        "type": "string",
                        "description": "Application credentials scheme. Can be set to `\"EDIT_USERNAME_AND_PASSWORD\"`, `\"ADMIN_SETS_CREDENTIALS\"`, `\"EDIT_PASSWORD_ONLY\"`, `\"EXTERNAL_PASSWORD_SYNC\"`, or `\"SHARED_USERNAME_AND_PASSWORD\"`.\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "extraFieldSelector": {
                        "type": "string",
                        "description": "Extra field CSS selector.\n"
                    },
                    "extraFieldValue": {
                        "type": "string",
                        "description": "Value for extra form field.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The display name of the Application.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Direct link of application logo.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name assigned to the application by Okta.\n"
                    },
                    "passwordSelector": {
                        "type": "string",
                        "description": "Login password field CSS selector.\n"
                    },
                    "revealPassword": {
                        "type": "boolean",
                        "description": "Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `\"ADMIN_SETS_CREDENTIALS\"`, `\"SHARED_USERNAME_AND_PASSWORD\"` or `\"EXTERNAL_PASSWORD_SYNC\"`.\n"
                    },
                    "sharedPassword": {
                        "type": "string",
                        "description": "Shared password, required for certain schemes.\n"
                    },
                    "sharedUsername": {
                        "type": "string",
                        "description": "Shared username, required for certain schemes.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign-on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. By default, it is `\"ACTIVE\"`.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Login URL.\n"
                    },
                    "urlRegex": {
                        "type": "string",
                        "description": "A regex that further restricts URL to the specified regex.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default: `\"${source.login}\"`\n"
                    },
                    "userNameTemplatePushStatus": {
                        "type": "string",
                        "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix.\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                    },
                    "usernameSelector": {
                        "type": "string",
                        "description": "Login username field CSS selector.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/user:User": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.User(\"example\", {\n    appId: \"\u003capp_id\u003e\",\n    userId: \"\u003cuser id\u003e\",\n    username: \"example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.User(\"example\",\n    app_id=\"\u003capp_id\u003e\",\n    user_id=\"\u003cuser id\u003e\",\n    username=\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.App.User(\"example\", new()\n    {\n        AppId = \"\u003capp_id\u003e\",\n        UserId = \"\u003cuser id\u003e\",\n        Username = \"example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewUser(ctx, \"example\", \u0026app.UserArgs{\n\t\t\tAppId:    pulumi.String(\"\u003capp_id\u003e\"),\n\t\t\tUserId:   pulumi.String(\"\u003cuser id\u003e\"),\n\t\t\tUsername: pulumi.String(\"example\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.User;\nimport com.pulumi.okta.app.UserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new User(\"example\", UserArgs.builder()        \n            .appId(\"\u003capp_id\u003e\")\n            .userId(\"\u003cuser id\u003e\")\n            .username(\"example\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:User\n    properties:\n      appId: \u003capp_id\u003e\n      userId: \u003cuser id\u003e\n      username: example\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn Application User can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:app/user:User example \u0026#60;app id\u0026#62;/\u0026#60;user id\u0026#62;\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "App to associate user with.\n"
                },
                "hasSharedUsername": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "description": "The password to use.\n",
                    "secret": true
                },
                "profile": {
                    "type": "string",
                    "description": "The JSON profile of the App User.\n"
                },
                "retainAssignment": {
                    "type": "boolean",
                    "description": "Retain the user association on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "User to associate the application with.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username to use for the app user. In case the user is assigned to the app with \n'SHARED_USERNAME_AND_PASSWORD' credentials scheme, this field will be computed and should not be set.\n"
                }
            },
            "required": [
                "appId",
                "hasSharedUsername",
                "userId"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "App to associate user with.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password to use.\n",
                    "secret": true
                },
                "profile": {
                    "type": "string",
                    "description": "The JSON profile of the App User.\n"
                },
                "retainAssignment": {
                    "type": "boolean",
                    "description": "Retain the user association on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "User to associate the application with.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username to use for the app user. In case the user is assigned to the app with \n'SHARED_USERNAME_AND_PASSWORD' credentials scheme, this field will be computed and should not be set.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "App to associate user with.\n"
                    },
                    "hasSharedUsername": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password to use.\n",
                        "secret": true
                    },
                    "profile": {
                        "type": "string",
                        "description": "The JSON profile of the App User.\n"
                    },
                    "retainAssignment": {
                        "type": "boolean",
                        "description": "Retain the user association on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "User to associate the application with.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username to use for the app user. In case the user is assigned to the app with \n'SHARED_USERNAME_AND_PASSWORD' credentials scheme, this field will be computed and should not be set.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:auth/server:Server": {
            "description": "Creates an Authorization Server.\n\nThis resource allows you to create and configure an Authorization Server.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.Server(\"example\", {\n    audiences: [\"api://example\"],\n    description: \"My Example Auth Server\",\n    issuerMode: \"CUSTOM_URL\",\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.Server(\"example\",\n    audiences=[\"api://example\"],\n    description=\"My Example Auth Server\",\n    issuer_mode=\"CUSTOM_URL\",\n    status=\"ACTIVE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Auth.Server(\"example\", new()\n    {\n        Audiences = new[]\n        {\n            \"api://example\",\n        },\n        Description = \"My Example Auth Server\",\n        IssuerMode = \"CUSTOM_URL\",\n        Status = \"ACTIVE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServer(ctx, \"example\", \u0026auth.ServerArgs{\n\t\t\tAudiences: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"api://example\"),\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"My Example Auth Server\"),\n\t\t\tIssuerMode:  pulumi.String(\"CUSTOM_URL\"),\n\t\t\tStatus:      pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.Server;\nimport com.pulumi.okta.auth.ServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Server(\"example\", ServerArgs.builder()        \n            .audiences(\"api://example\")\n            .description(\"My Example Auth Server\")\n            .issuerMode(\"CUSTOM_URL\")\n            .status(\"ACTIVE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:auth:Server\n    properties:\n      audiences:\n        - api://example\n      description: My Example Auth Server\n      issuerMode: CUSTOM_URL\n      status: ACTIVE\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAuthorization Server can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:auth/server:Server example \u0026#60;auth server id\u0026#62;\n```\n\n ",
            "properties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token.\n"
                },
                "credentialsLastRotated": {
                    "type": "string",
                    "description": "The timestamp when the authorization server started to use the `kid` for signing tokens.\n"
                },
                "credentialsNextRotation": {
                    "type": "string",
                    "description": "The timestamp when the authorization server changes the key for signing tokens. Only returned when `credentials_rotation_mode` is `\"AUTO\"`.\n"
                },
                "credentialsRotationMode": {
                    "type": "string",
                    "description": "The key rotation mode for the authorization server. Can be `\"AUTO\"` or `\"MANUAL\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the authorization server.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The complete URL for a Custom Authorization Server. This becomes the `iss` claim in an access token.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Allows you to use a custom issuer URL. It can be set to `\"CUSTOM_URL\"`,`\"ORG_URL\"` or `\"DYNAMIC\"`.\n"
                },
                "kid": {
                    "type": "string",
                    "description": "The ID of the JSON Web Key used for signing tokens issued by the authorization server.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the authorization server.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the auth server. It defaults to `\"ACTIVE\"`\n"
                }
            },
            "required": [
                "audiences",
                "credentialsLastRotated",
                "credentialsNextRotation",
                "issuer",
                "kid",
                "name"
            ],
            "inputProperties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token.\n"
                },
                "credentialsRotationMode": {
                    "type": "string",
                    "description": "The key rotation mode for the authorization server. Can be `\"AUTO\"` or `\"MANUAL\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the authorization server.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Allows you to use a custom issuer URL. It can be set to `\"CUSTOM_URL\"`,`\"ORG_URL\"` or `\"DYNAMIC\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the authorization server.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the auth server. It defaults to `\"ACTIVE\"`\n"
                }
            },
            "requiredInputs": [
                "audiences"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Server resources.\n",
                "properties": {
                    "audiences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token.\n"
                    },
                    "credentialsLastRotated": {
                        "type": "string",
                        "description": "The timestamp when the authorization server started to use the `kid` for signing tokens.\n"
                    },
                    "credentialsNextRotation": {
                        "type": "string",
                        "description": "The timestamp when the authorization server changes the key for signing tokens. Only returned when `credentials_rotation_mode` is `\"AUTO\"`.\n"
                    },
                    "credentialsRotationMode": {
                        "type": "string",
                        "description": "The key rotation mode for the authorization server. Can be `\"AUTO\"` or `\"MANUAL\"`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the authorization server.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The complete URL for a Custom Authorization Server. This becomes the `iss` claim in an access token.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Allows you to use a custom issuer URL. It can be set to `\"CUSTOM_URL\"`,`\"ORG_URL\"` or `\"DYNAMIC\"`.\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "The ID of the JSON Web Key used for signing tokens issued by the authorization server.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the authorization server.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the auth server. It defaults to `\"ACTIVE\"`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:auth/serverClaim:ServerClaim": {
            "description": "Creates an Authorization Server Claim.\n\nThis resource allows you to create and configure an Authorization Server Claim.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.ServerClaim(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    claimType: \"IDENTITY\",\n    scopes: [okta_auth_server_scope.example.name],\n    value: \"String.substringAfter(user.email, \\\"@\\\") == \\\"example.com\\\"\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.ServerClaim(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    claim_type=\"IDENTITY\",\n    scopes=[okta_auth_server_scope[\"example\"][\"name\"]],\n    value=\"String.substringAfter(user.email, \\\"@\\\") == \\\"example.com\\\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Auth.ServerClaim(\"example\", new()\n    {\n        AuthServerId = \"\u003cauth server id\u003e\",\n        ClaimType = \"IDENTITY\",\n        Scopes = new[]\n        {\n            okta_auth_server_scope.Example.Name,\n        },\n        Value = \"String.substringAfter(user.email, \\\"@\\\") == \\\"example.com\\\"\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServerClaim(ctx, \"example\", \u0026auth.ServerClaimArgs{\n\t\t\tAuthServerId: pulumi.String(\"\u003cauth server id\u003e\"),\n\t\t\tClaimType:    pulumi.String(\"IDENTITY\"),\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tokta_auth_server_scope.Example.Name,\n\t\t\t},\n\t\t\tValue: pulumi.String(\"String.substringAfter(user.email, \\\"@\\\") == \\\"example.com\\\"\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.ServerClaim;\nimport com.pulumi.okta.auth.ServerClaimArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ServerClaim(\"example\", ServerClaimArgs.builder()        \n            .authServerId(\"\u003cauth server id\u003e\")\n            .claimType(\"IDENTITY\")\n            .scopes(okta_auth_server_scope.example().name())\n            .value(\"String.substringAfter(user.email, \\\"@\\\") == \\\"example.com\\\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:auth:ServerClaim\n    properties:\n      authServerId: \u003cauth server id\u003e\n      claimType: IDENTITY\n      scopes:\n        - ${okta_auth_server_scope.example.name}\n      value: String.substringAfter(user.email, \"@\") == \"example.com\"\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAuthorization Server Claim can be imported via the Auth Server ID and Claim ID.\n\n```sh\n $ pulumi import okta:auth/serverClaim:ServerClaim example \u0026#60;auth server id\u0026#62;/\u0026#60;claim id\u0026#62;\n```\n\n ",
            "properties": {
                "alwaysIncludeInToken": {
                    "type": "boolean",
                    "description": "Specifies whether to include claims in token, by default it is set to `true`.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "ID of the authorization server.\n"
                },
                "claimType": {
                    "type": "string",
                    "description": "Specifies whether the claim is for an access token `\"RESOURCE\"` or ID token `\"IDENTITY\"`.\n"
                },
                "groupFilterType": {
                    "type": "string",
                    "description": "Specifies the type of group filter if `value_type` is `\"GROUPS\"`. Can be set to one of the following `\"STARTS_WITH\"`, `\"EQUALS\"`, `\"CONTAINS\"`, `\"REGEX\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the claim.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of scopes the auth server claim is tied to.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application. It defaults to `\"ACTIVE\"`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the claim.\n"
                },
                "valueType": {
                    "type": "string",
                    "description": "The type of value of the claim. It can be set to `\"EXPRESSION\"` or `\"GROUPS\"`. It defaults to `\"EXPRESSION\"`.\n"
                }
            },
            "required": [
                "authServerId",
                "claimType",
                "name",
                "value"
            ],
            "inputProperties": {
                "alwaysIncludeInToken": {
                    "type": "boolean",
                    "description": "Specifies whether to include claims in token, by default it is set to `true`.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "ID of the authorization server.\n"
                },
                "claimType": {
                    "type": "string",
                    "description": "Specifies whether the claim is for an access token `\"RESOURCE\"` or ID token `\"IDENTITY\"`.\n"
                },
                "groupFilterType": {
                    "type": "string",
                    "description": "Specifies the type of group filter if `value_type` is `\"GROUPS\"`. Can be set to one of the following `\"STARTS_WITH\"`, `\"EQUALS\"`, `\"CONTAINS\"`, `\"REGEX\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the claim.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of scopes the auth server claim is tied to.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application. It defaults to `\"ACTIVE\"`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the claim.\n"
                },
                "valueType": {
                    "type": "string",
                    "description": "The type of value of the claim. It can be set to `\"EXPRESSION\"` or `\"GROUPS\"`. It defaults to `\"EXPRESSION\"`.\n"
                }
            },
            "requiredInputs": [
                "authServerId",
                "claimType",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerClaim resources.\n",
                "properties": {
                    "alwaysIncludeInToken": {
                        "type": "boolean",
                        "description": "Specifies whether to include claims in token, by default it is set to `true`.\n"
                    },
                    "authServerId": {
                        "type": "string",
                        "description": "ID of the authorization server.\n"
                    },
                    "claimType": {
                        "type": "string",
                        "description": "Specifies whether the claim is for an access token `\"RESOURCE\"` or ID token `\"IDENTITY\"`.\n"
                    },
                    "groupFilterType": {
                        "type": "string",
                        "description": "Specifies the type of group filter if `value_type` is `\"GROUPS\"`. Can be set to one of the following `\"STARTS_WITH\"`, `\"EQUALS\"`, `\"CONTAINS\"`, `\"REGEX\"`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the claim.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of scopes the auth server claim is tied to.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the application. It defaults to `\"ACTIVE\"`.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the claim.\n"
                    },
                    "valueType": {
                        "type": "string",
                        "description": "The type of value of the claim. It can be set to `\"EXPRESSION\"` or `\"GROUPS\"`. It defaults to `\"EXPRESSION\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:auth/serverPolicy:ServerPolicy": {
            "description": "Creates an Authorization Server Policy.\n\nThis resource allows you to create and configure an Authorization Server Policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.ServerPolicy(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    clientWhitelists: [\"ALL_CLIENTS\"],\n    description: \"example\",\n    priority: 1,\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.ServerPolicy(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    client_whitelists=[\"ALL_CLIENTS\"],\n    description=\"example\",\n    priority=1,\n    status=\"ACTIVE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Auth.ServerPolicy(\"example\", new()\n    {\n        AuthServerId = \"\u003cauth server id\u003e\",\n        ClientWhitelists = new[]\n        {\n            \"ALL_CLIENTS\",\n        },\n        Description = \"example\",\n        Priority = 1,\n        Status = \"ACTIVE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServerPolicy(ctx, \"example\", \u0026auth.ServerPolicyArgs{\n\t\t\tAuthServerId: pulumi.String(\"\u003cauth server id\u003e\"),\n\t\t\tClientWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ALL_CLIENTS\"),\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"example\"),\n\t\t\tPriority:    pulumi.Int(1),\n\t\t\tStatus:      pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.ServerPolicy;\nimport com.pulumi.okta.auth.ServerPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ServerPolicy(\"example\", ServerPolicyArgs.builder()        \n            .authServerId(\"\u003cauth server id\u003e\")\n            .clientWhitelists(\"ALL_CLIENTS\")\n            .description(\"example\")\n            .priority(1)\n            .status(\"ACTIVE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:auth:ServerPolicy\n    properties:\n      authServerId: \u003cauth server id\u003e\n      clientWhitelists:\n        - ALL_CLIENTS\n      description: example\n      priority: 1\n      status: ACTIVE\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAuthorization Server Policy can be imported via the Auth Server ID and Policy ID.\n\n```sh\n $ pulumi import okta:auth/serverPolicy:ServerPolicy example \u0026#60;auth server id\u0026#62;/\u0026#60;policy id\u0026#62;\n```\n\n ",
            "properties": {
                "authServerId": {
                    "type": "string",
                    "description": "The ID of the Auth Server.\n"
                },
                "clientWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The clients to whitelist the policy for. `[\"ALL_CLIENTS\"]` is a special value that can be used to whitelist all clients, otherwise it is a list of client ids.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Auth Server Policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Auth Server Policy.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the Auth Server Policy.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Auth Server Policy.\n"
                }
            },
            "required": [
                "authServerId",
                "clientWhitelists",
                "description",
                "name",
                "priority"
            ],
            "inputProperties": {
                "authServerId": {
                    "type": "string",
                    "description": "The ID of the Auth Server.\n"
                },
                "clientWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The clients to whitelist the policy for. `[\"ALL_CLIENTS\"]` is a special value that can be used to whitelist all clients, otherwise it is a list of client ids.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Auth Server Policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Auth Server Policy.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the Auth Server Policy.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Auth Server Policy.\n"
                }
            },
            "requiredInputs": [
                "authServerId",
                "clientWhitelists",
                "description",
                "priority"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerPolicy resources.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "The ID of the Auth Server.\n"
                    },
                    "clientWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The clients to whitelist the policy for. `[\"ALL_CLIENTS\"]` is a special value that can be used to whitelist all clients, otherwise it is a list of client ids.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the Auth Server Policy.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Auth Server Policy.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "The priority of the Auth Server Policy.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the Auth Server Policy.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:auth/serverPolicyClaim:ServerPolicyClaim": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.ServerPolicyRule(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    grantTypeWhitelists: [\"implicit\"],\n    groupWhitelists: [\"\u003cgroup ids\u003e\"],\n    policyId: \"\u003cauth server policy id\u003e\",\n    priority: 1,\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.ServerPolicyRule(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    grant_type_whitelists=[\"implicit\"],\n    group_whitelists=[\"\u003cgroup ids\u003e\"],\n    policy_id=\"\u003cauth server policy id\u003e\",\n    priority=1,\n    status=\"ACTIVE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Auth.ServerPolicyRule(\"example\", new()\n    {\n        AuthServerId = \"\u003cauth server id\u003e\",\n        GrantTypeWhitelists = new[]\n        {\n            \"implicit\",\n        },\n        GroupWhitelists = new[]\n        {\n            \"\u003cgroup ids\u003e\",\n        },\n        PolicyId = \"\u003cauth server policy id\u003e\",\n        Priority = 1,\n        Status = \"ACTIVE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServerPolicyRule(ctx, \"example\", \u0026auth.ServerPolicyRuleArgs{\n\t\t\tAuthServerId: pulumi.String(\"\u003cauth server id\u003e\"),\n\t\t\tGrantTypeWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"implicit\"),\n\t\t\t},\n\t\t\tGroupWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"\u003cgroup ids\u003e\"),\n\t\t\t},\n\t\t\tPolicyId: pulumi.String(\"\u003cauth server policy id\u003e\"),\n\t\t\tPriority: pulumi.Int(1),\n\t\t\tStatus:   pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.ServerPolicyRule;\nimport com.pulumi.okta.auth.ServerPolicyRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ServerPolicyRule(\"example\", ServerPolicyRuleArgs.builder()        \n            .authServerId(\"\u003cauth server id\u003e\")\n            .grantTypeWhitelists(\"implicit\")\n            .groupWhitelists(\"\u003cgroup ids\u003e\")\n            .policyId(\"\u003cauth server policy id\u003e\")\n            .priority(1)\n            .status(\"ACTIVE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:auth:ServerPolicyRule\n    properties:\n      authServerId: \u003cauth server id\u003e\n      grantTypeWhitelists:\n        - implicit\n      groupWhitelists:\n        - \u003cgroup ids\u003e\n      policyId: \u003cauth server policy id\u003e\n      priority: 1\n      status: ACTIVE\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAuthorization Server Policy Rule can be imported via the Auth Server ID, Policy ID, and Policy Rule ID.\n\n```sh\n $ pulumi import okta:auth/serverPolicyClaim:ServerPolicyClaim example \u0026#60;auth server id\u0026#62;/\u0026#60;policy id\u0026#62;/\u0026#60;policy rule id\u0026#62;\n```\n\n ",
            "properties": {
                "accessTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of access token. Can be set to a value between 5 and 1440 minutes. Default is `60`.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "Auth Server ID.\n"
                },
                "grantTypeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Accepted grant type values, `\"authorization_code\"`, `\"implicit\"`, `\"password\"`, `\"client_credentials\"`, \n`\"urn:ietf:params:oauth:grant-type:saml2-bearer\"` (*Early Access Property*), `\"urn:ietf:params:oauth:grant-type:token-exchange\"` (*Early Access Property*),\n`\"urn:ietf:params:oauth:grant-type:device_code\"` (*Early Access Property*), `\"interaction_code\"` (*OIE only*). For `\"implicit\"` value either `user_whitelist` or `group_whitelist` should be set.\n"
                },
                "groupBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be excluded.\n"
                },
                "groupWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: `\"EVERYONE\"`.\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "The ID of the inline token to trigger.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auth Server Policy Rule name.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Auth Server Policy ID.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the auth server policy rule.\n"
                },
                "refreshTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of refresh token.\n"
                },
                "refreshTokenWindowMinutes": {
                    "type": "integer",
                    "description": "Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes. Default is `10080` (7 days).\n`\"refresh_token_window_minutes\"` must be between `\"access_token_lifetime_minutes\"` and `\"refresh_token_lifetime_minutes\"`.\n"
                },
                "scopeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `\"*\"`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Auth Server Policy Rule.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the Auth Server Policy Rule.\n"
                },
                "userBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be excluded.\n"
                },
                "userWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be included.\n"
                }
            },
            "required": [
                "authServerId",
                "grantTypeWhitelists",
                "name",
                "policyId",
                "priority"
            ],
            "inputProperties": {
                "accessTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of access token. Can be set to a value between 5 and 1440 minutes. Default is `60`.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "Auth Server ID.\n"
                },
                "grantTypeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Accepted grant type values, `\"authorization_code\"`, `\"implicit\"`, `\"password\"`, `\"client_credentials\"`, \n`\"urn:ietf:params:oauth:grant-type:saml2-bearer\"` (*Early Access Property*), `\"urn:ietf:params:oauth:grant-type:token-exchange\"` (*Early Access Property*),\n`\"urn:ietf:params:oauth:grant-type:device_code\"` (*Early Access Property*), `\"interaction_code\"` (*OIE only*). For `\"implicit\"` value either `user_whitelist` or `group_whitelist` should be set.\n"
                },
                "groupBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be excluded.\n"
                },
                "groupWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: `\"EVERYONE\"`.\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "The ID of the inline token to trigger.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auth Server Policy Rule name.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Auth Server Policy ID.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the auth server policy rule.\n"
                },
                "refreshTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of refresh token.\n"
                },
                "refreshTokenWindowMinutes": {
                    "type": "integer",
                    "description": "Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes. Default is `10080` (7 days).\n`\"refresh_token_window_minutes\"` must be between `\"access_token_lifetime_minutes\"` and `\"refresh_token_lifetime_minutes\"`.\n"
                },
                "scopeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `\"*\"`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Auth Server Policy Rule.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the Auth Server Policy Rule.\n"
                },
                "userBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be excluded.\n"
                },
                "userWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be included.\n"
                }
            },
            "requiredInputs": [
                "authServerId",
                "grantTypeWhitelists",
                "policyId",
                "priority"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerPolicyClaim resources.\n",
                "properties": {
                    "accessTokenLifetimeMinutes": {
                        "type": "integer",
                        "description": "Lifetime of access token. Can be set to a value between 5 and 1440 minutes. Default is `60`.\n"
                    },
                    "authServerId": {
                        "type": "string",
                        "description": "Auth Server ID.\n"
                    },
                    "grantTypeWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Accepted grant type values, `\"authorization_code\"`, `\"implicit\"`, `\"password\"`, `\"client_credentials\"`, \n`\"urn:ietf:params:oauth:grant-type:saml2-bearer\"` (*Early Access Property*), `\"urn:ietf:params:oauth:grant-type:token-exchange\"` (*Early Access Property*),\n`\"urn:ietf:params:oauth:grant-type:device_code\"` (*Early Access Property*), `\"interaction_code\"` (*OIE only*). For `\"implicit\"` value either `user_whitelist` or `group_whitelist` should be set.\n"
                    },
                    "groupBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Groups whose Users are to be excluded.\n"
                    },
                    "groupWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: `\"EVERYONE\"`.\n"
                    },
                    "inlineHookId": {
                        "type": "string",
                        "description": "The ID of the inline token to trigger.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Auth Server Policy Rule name.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Auth Server Policy ID.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of the auth server policy rule.\n"
                    },
                    "refreshTokenLifetimeMinutes": {
                        "type": "integer",
                        "description": "Lifetime of refresh token.\n"
                    },
                    "refreshTokenWindowMinutes": {
                        "type": "integer",
                        "description": "Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes. Default is `10080` (7 days).\n`\"refresh_token_window_minutes\"` must be between `\"access_token_lifetime_minutes\"` and `\"refresh_token_lifetime_minutes\"`.\n"
                    },
                    "scopeWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `\"*\"`.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the Auth Server Policy Rule.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the Auth Server Policy Rule.\n"
                    },
                    "userBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Users to be excluded.\n"
                    },
                    "userWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Users to be included.\n"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "okta.auth.ServerPolicyClaim has been deprecated in favor of okta.auth.ServerPolicyRule"
        },
        "okta:auth/serverPolicyRule:ServerPolicyRule": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.ServerPolicyRule(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    grantTypeWhitelists: [\"implicit\"],\n    groupWhitelists: [\"\u003cgroup ids\u003e\"],\n    policyId: \"\u003cauth server policy id\u003e\",\n    priority: 1,\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.ServerPolicyRule(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    grant_type_whitelists=[\"implicit\"],\n    group_whitelists=[\"\u003cgroup ids\u003e\"],\n    policy_id=\"\u003cauth server policy id\u003e\",\n    priority=1,\n    status=\"ACTIVE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Auth.ServerPolicyRule(\"example\", new()\n    {\n        AuthServerId = \"\u003cauth server id\u003e\",\n        GrantTypeWhitelists = new[]\n        {\n            \"implicit\",\n        },\n        GroupWhitelists = new[]\n        {\n            \"\u003cgroup ids\u003e\",\n        },\n        PolicyId = \"\u003cauth server policy id\u003e\",\n        Priority = 1,\n        Status = \"ACTIVE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServerPolicyRule(ctx, \"example\", \u0026auth.ServerPolicyRuleArgs{\n\t\t\tAuthServerId: pulumi.String(\"\u003cauth server id\u003e\"),\n\t\t\tGrantTypeWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"implicit\"),\n\t\t\t},\n\t\t\tGroupWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"\u003cgroup ids\u003e\"),\n\t\t\t},\n\t\t\tPolicyId: pulumi.String(\"\u003cauth server policy id\u003e\"),\n\t\t\tPriority: pulumi.Int(1),\n\t\t\tStatus:   pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.ServerPolicyRule;\nimport com.pulumi.okta.auth.ServerPolicyRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ServerPolicyRule(\"example\", ServerPolicyRuleArgs.builder()        \n            .authServerId(\"\u003cauth server id\u003e\")\n            .grantTypeWhitelists(\"implicit\")\n            .groupWhitelists(\"\u003cgroup ids\u003e\")\n            .policyId(\"\u003cauth server policy id\u003e\")\n            .priority(1)\n            .status(\"ACTIVE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:auth:ServerPolicyRule\n    properties:\n      authServerId: \u003cauth server id\u003e\n      grantTypeWhitelists:\n        - implicit\n      groupWhitelists:\n        - \u003cgroup ids\u003e\n      policyId: \u003cauth server policy id\u003e\n      priority: 1\n      status: ACTIVE\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAuthorization Server Policy Rule can be imported via the Auth Server ID, Policy ID, and Policy Rule ID.\n\n```sh\n $ pulumi import okta:auth/serverPolicyRule:ServerPolicyRule example \u0026#60;auth server id\u0026#62;/\u0026#60;policy id\u0026#62;/\u0026#60;policy rule id\u0026#62;\n```\n\n ",
            "properties": {
                "accessTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of access token. Can be set to a value between 5 and 1440 minutes. Default is `60`.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "Auth Server ID.\n"
                },
                "grantTypeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Accepted grant type values, `\"authorization_code\"`, `\"implicit\"`, `\"password\"`, `\"client_credentials\"`, \n`\"urn:ietf:params:oauth:grant-type:saml2-bearer\"` (*Early Access Property*), `\"urn:ietf:params:oauth:grant-type:token-exchange\"` (*Early Access Property*),\n`\"urn:ietf:params:oauth:grant-type:device_code\"` (*Early Access Property*), `\"interaction_code\"` (*OIE only*). For `\"implicit\"` value either `user_whitelist` or `group_whitelist` should be set.\n"
                },
                "groupBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be excluded.\n"
                },
                "groupWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: `\"EVERYONE\"`.\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "The ID of the inline token to trigger.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auth Server Policy Rule name.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Auth Server Policy ID.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the auth server policy rule.\n"
                },
                "refreshTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of refresh token.\n"
                },
                "refreshTokenWindowMinutes": {
                    "type": "integer",
                    "description": "Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes. Default is `10080` (7 days).\n`\"refresh_token_window_minutes\"` must be between `\"access_token_lifetime_minutes\"` and `\"refresh_token_lifetime_minutes\"`.\n"
                },
                "scopeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `\"*\"`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Auth Server Policy Rule.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the Auth Server Policy Rule.\n"
                },
                "userBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be excluded.\n"
                },
                "userWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be included.\n"
                }
            },
            "required": [
                "authServerId",
                "grantTypeWhitelists",
                "name",
                "policyId",
                "priority"
            ],
            "inputProperties": {
                "accessTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of access token. Can be set to a value between 5 and 1440 minutes. Default is `60`.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "Auth Server ID.\n"
                },
                "grantTypeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Accepted grant type values, `\"authorization_code\"`, `\"implicit\"`, `\"password\"`, `\"client_credentials\"`, \n`\"urn:ietf:params:oauth:grant-type:saml2-bearer\"` (*Early Access Property*), `\"urn:ietf:params:oauth:grant-type:token-exchange\"` (*Early Access Property*),\n`\"urn:ietf:params:oauth:grant-type:device_code\"` (*Early Access Property*), `\"interaction_code\"` (*OIE only*). For `\"implicit\"` value either `user_whitelist` or `group_whitelist` should be set.\n"
                },
                "groupBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be excluded.\n"
                },
                "groupWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: `\"EVERYONE\"`.\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "The ID of the inline token to trigger.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auth Server Policy Rule name.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Auth Server Policy ID.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the auth server policy rule.\n"
                },
                "refreshTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of refresh token.\n"
                },
                "refreshTokenWindowMinutes": {
                    "type": "integer",
                    "description": "Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes. Default is `10080` (7 days).\n`\"refresh_token_window_minutes\"` must be between `\"access_token_lifetime_minutes\"` and `\"refresh_token_lifetime_minutes\"`.\n"
                },
                "scopeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `\"*\"`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Auth Server Policy Rule.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the Auth Server Policy Rule.\n"
                },
                "userBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be excluded.\n"
                },
                "userWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be included.\n"
                }
            },
            "requiredInputs": [
                "authServerId",
                "grantTypeWhitelists",
                "policyId",
                "priority"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerPolicyRule resources.\n",
                "properties": {
                    "accessTokenLifetimeMinutes": {
                        "type": "integer",
                        "description": "Lifetime of access token. Can be set to a value between 5 and 1440 minutes. Default is `60`.\n"
                    },
                    "authServerId": {
                        "type": "string",
                        "description": "Auth Server ID.\n"
                    },
                    "grantTypeWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Accepted grant type values, `\"authorization_code\"`, `\"implicit\"`, `\"password\"`, `\"client_credentials\"`, \n`\"urn:ietf:params:oauth:grant-type:saml2-bearer\"` (*Early Access Property*), `\"urn:ietf:params:oauth:grant-type:token-exchange\"` (*Early Access Property*),\n`\"urn:ietf:params:oauth:grant-type:device_code\"` (*Early Access Property*), `\"interaction_code\"` (*OIE only*). For `\"implicit\"` value either `user_whitelist` or `group_whitelist` should be set.\n"
                    },
                    "groupBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Groups whose Users are to be excluded.\n"
                    },
                    "groupWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: `\"EVERYONE\"`.\n"
                    },
                    "inlineHookId": {
                        "type": "string",
                        "description": "The ID of the inline token to trigger.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Auth Server Policy Rule name.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Auth Server Policy ID.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of the auth server policy rule.\n"
                    },
                    "refreshTokenLifetimeMinutes": {
                        "type": "integer",
                        "description": "Lifetime of refresh token.\n"
                    },
                    "refreshTokenWindowMinutes": {
                        "type": "integer",
                        "description": "Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes. Default is `10080` (7 days).\n`\"refresh_token_window_minutes\"` must be between `\"access_token_lifetime_minutes\"` and `\"refresh_token_lifetime_minutes\"`.\n"
                    },
                    "scopeWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `\"*\"`.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the Auth Server Policy Rule.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the Auth Server Policy Rule.\n"
                    },
                    "userBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Users to be excluded.\n"
                    },
                    "userWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Users to be included.\n"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "okta:auth/serverPolicyClaim:ServerPolicyClaim"
                }
            ]
        },
        "okta:auth/serverScope:ServerScope": {
            "description": "Creates an Authorization Server Scope.\n\nThis resource allows you to create and configure an Authorization Server Scope.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.ServerScope(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    consent: \"IMPLICIT\",\n    metadataPublish: \"NO_CLIENTS\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.ServerScope(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    consent=\"IMPLICIT\",\n    metadata_publish=\"NO_CLIENTS\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Auth.ServerScope(\"example\", new()\n    {\n        AuthServerId = \"\u003cauth server id\u003e\",\n        Consent = \"IMPLICIT\",\n        MetadataPublish = \"NO_CLIENTS\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServerScope(ctx, \"example\", \u0026auth.ServerScopeArgs{\n\t\t\tAuthServerId:    pulumi.String(\"\u003cauth server id\u003e\"),\n\t\t\tConsent:         pulumi.String(\"IMPLICIT\"),\n\t\t\tMetadataPublish: pulumi.String(\"NO_CLIENTS\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.ServerScope;\nimport com.pulumi.okta.auth.ServerScopeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ServerScope(\"example\", ServerScopeArgs.builder()        \n            .authServerId(\"\u003cauth server id\u003e\")\n            .consent(\"IMPLICIT\")\n            .metadataPublish(\"NO_CLIENTS\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:auth:ServerScope\n    properties:\n      authServerId: \u003cauth server id\u003e\n      consent: IMPLICIT\n      metadataPublish: NO_CLIENTS\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta Auth Server Scope can be imported via the Auth Server ID and Scope ID.\n\n```sh\n $ pulumi import okta:auth/serverScope:ServerScope example \u0026#60;auth server id\u0026#62;/\u0026#60;scope id\u0026#62;\n```\n\n ",
            "properties": {
                "authServerId": {
                    "type": "string",
                    "description": "Auth Server ID.\n"
                },
                "consent": {
                    "type": "string",
                    "description": "Indicates whether a consent dialog is needed for the scope. It can be set to `\"REQUIRED\"` or `\"IMPLICIT\"`.\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "A default scope will be returned in an access token when the client omits the scope parameter in a token request, provided this scope is allowed as part of the access policy rule.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Auth Server Scope.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Name of the end user displayed in a consent dialog box.\n"
                },
                "metadataPublish": {
                    "type": "string",
                    "description": "Whether to publish metadata or not. It can be set to `\"ALL_CLIENTS\"` or `\"NO_CLIENTS\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auth Server scope name.\n"
                },
                "system": {
                    "type": "boolean",
                    "description": "Whether Okta created the Scope\n"
                }
            },
            "required": [
                "authServerId",
                "name",
                "system"
            ],
            "inputProperties": {
                "authServerId": {
                    "type": "string",
                    "description": "Auth Server ID.\n"
                },
                "consent": {
                    "type": "string",
                    "description": "Indicates whether a consent dialog is needed for the scope. It can be set to `\"REQUIRED\"` or `\"IMPLICIT\"`.\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "A default scope will be returned in an access token when the client omits the scope parameter in a token request, provided this scope is allowed as part of the access policy rule.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Auth Server Scope.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Name of the end user displayed in a consent dialog box.\n"
                },
                "metadataPublish": {
                    "type": "string",
                    "description": "Whether to publish metadata or not. It can be set to `\"ALL_CLIENTS\"` or `\"NO_CLIENTS\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auth Server scope name.\n"
                }
            },
            "requiredInputs": [
                "authServerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerScope resources.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "Auth Server ID.\n"
                    },
                    "consent": {
                        "type": "string",
                        "description": "Indicates whether a consent dialog is needed for the scope. It can be set to `\"REQUIRED\"` or `\"IMPLICIT\"`.\n"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "A default scope will be returned in an access token when the client omits the scope parameter in a token request, provided this scope is allowed as part of the access policy rule.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Auth Server Scope.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Name of the end user displayed in a consent dialog box.\n"
                    },
                    "metadataPublish": {
                        "type": "string",
                        "description": "Whether to publish metadata or not. It can be set to `\"ALL_CLIENTS\"` or `\"NO_CLIENTS\"`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Auth Server scope name.\n"
                    },
                    "system": {
                        "type": "boolean",
                        "description": "Whether Okta created the Scope\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:factor/factor:Factor": {
            "description": "Allows you to manage the activation of Okta MFA methods.\n\nThis resource allows you to manage Okta MFA methods.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.factor.Factor(\"example\", {providerId: \"google_otp\"});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.factor.Factor(\"example\", provider_id=\"google_otp\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Factor.Factor(\"example\", new()\n    {\n        ProviderId = \"google_otp\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/factor\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := factor.NewFactor(ctx, \"example\", \u0026factor.FactorArgs{\n\t\t\tProviderId: pulumi.String(\"google_otp\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.factor.Factor;\nimport com.pulumi.okta.factor.FactorArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Factor(\"example\", FactorArgs.builder()        \n            .providerId(\"google_otp\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:factor:Factor\n    properties:\n      providerId: google_otp\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether to activate the provider, by default, it is set to `true`.\n"
                },
                "providerId": {
                    "type": "string",
                    "description": "The MFA provider name.\nAllowed values are `\"duo\"`, `\"fido_u2f\"`, `\"fido_webauthn\"`, `\"google_otp\"`, `\"okta_call\"`, `\"okta_otp\"`, `\"okta_password\"`, `\"okta_push\"`, `\"okta_question\"`, `\"okta_sms\"`, `\"okta_email\"`, `\"rsa_token\"`, `\"symantec_vip\"`, `\"yubikey_token\"`, or `\"hotp\"`.\n"
                }
            },
            "required": [
                "providerId"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether to activate the provider, by default, it is set to `true`.\n"
                },
                "providerId": {
                    "type": "string",
                    "description": "The MFA provider name.\nAllowed values are `\"duo\"`, `\"fido_u2f\"`, `\"fido_webauthn\"`, `\"google_otp\"`, `\"okta_call\"`, `\"okta_otp\"`, `\"okta_password\"`, `\"okta_push\"`, `\"okta_question\"`, `\"okta_sms\"`, `\"okta_email\"`, `\"rsa_token\"`, `\"symantec_vip\"`, `\"yubikey_token\"`, or `\"hotp\"`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "providerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Factor resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Whether to activate the provider, by default, it is set to `true`.\n"
                    },
                    "providerId": {
                        "type": "string",
                        "description": "The MFA provider name.\nAllowed values are `\"duo\"`, `\"fido_u2f\"`, `\"fido_webauthn\"`, `\"google_otp\"`, `\"okta_call\"`, `\"okta_otp\"`, `\"okta_password\"`, `\"okta_push\"`, `\"okta_question\"`, `\"okta_sms\"`, `\"okta_email\"`, `\"rsa_token\"`, `\"symantec_vip\"`, `\"yubikey_token\"`, or `\"hotp\"`.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:group/group:Group": {
            "description": "Creates an Okta Group.\n\nThis resource allows you to create and configure an Okta Group.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.group.Group(\"example\", {description: \"My Example Group\"});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.group.Group(\"example\", description=\"My Example Group\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Group.Group(\"example\", new()\n    {\n        Description = \"My Example Group\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := group.NewGroup(ctx, \"example\", \u0026group.GroupArgs{\n\t\t\tDescription: pulumi.String(\"My Example Group\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.group.Group;\nimport com.pulumi.okta.group.GroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Group(\"example\", GroupArgs.builder()        \n            .description(\"My Example Group\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:group:Group\n    properties:\n      description: My Example Group\n```\n\nCustom profile attributes\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.group.Group(\"example\", {\n    description: \"My Example Group\",\n    customProfileAttributes: JSON.stringify({\n        example1: \"testing1234\",\n        example2: true,\n        example3: 54321,\n    }),\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_okta as okta\n\nexample = okta.group.Group(\"example\",\n    description=\"My Example Group\",\n    custom_profile_attributes=json.dumps({\n        \"example1\": \"testing1234\",\n        \"example2\": True,\n        \"example3\": 54321,\n    }))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Group.Group(\"example\", new()\n    {\n        Description = \"My Example Group\",\n        CustomProfileAttributes = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"example1\"] = \"testing1234\",\n            [\"example2\"] = true,\n            [\"example3\"] = 54321,\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"example1\": \"testing1234\",\n\t\t\t\"example2\": true,\n\t\t\t\"example3\": 54321,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = group.NewGroup(ctx, \"example\", \u0026group.GroupArgs{\n\t\t\tDescription:             pulumi.String(\"My Example Group\"),\n\t\t\tCustomProfileAttributes: pulumi.String(json0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.group.Group;\nimport com.pulumi.okta.group.GroupArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Group(\"example\", GroupArgs.builder()        \n            .description(\"My Example Group\")\n            .customProfileAttributes(serializeJson(\n                jsonObject(\n                    jsonProperty(\"example1\", \"testing1234\"),\n                    jsonProperty(\"example2\", true),\n                    jsonProperty(\"example3\", 54321)\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:group:Group\n    properties:\n      description: My Example Group\n      customProfileAttributes:\n        fn::toJSON:\n          example1: testing1234\n          example2: true\n          example3: 54321\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn Okta Group can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:group/group:Group example \u0026#60;group id\u0026#62;\n```\n\n ",
            "properties": {
                "customProfileAttributes": {
                    "type": "string",
                    "description": "raw JSON containing all custom profile attributes.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Okta Group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Okta Group.\n"
                },
                "skipUsers": {
                    "type": "boolean",
                    "description": "Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources\n",
                    "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "customProfileAttributes": {
                    "type": "string",
                    "description": "raw JSON containing all custom profile attributes.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Okta Group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Okta Group.\n"
                },
                "skipUsers": {
                    "type": "boolean",
                    "description": "Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources\n",
                    "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "customProfileAttributes": {
                        "type": "string",
                        "description": "raw JSON containing all custom profile attributes.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the Okta Group.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Okta Group.\n"
                    },
                    "skipUsers": {
                        "type": "boolean",
                        "description": "Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources\n",
                        "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed"
                    }
                },
                "type": "object"
            }
        },
        "okta:group/role:Role": {
            "description": "Assigns Admin roles to Okta Groups.\n\nThis resource allows you to assign Okta administrator roles to Okta Groups. This resource provides a one-to-one\ninterface between the Okta group and the admin role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.group.Role(\"example\", {\n    groupId: \"\u003cgroup id\u003e\",\n    roleType: \"READ_ONLY_ADMIN\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.group.Role(\"example\",\n    group_id=\"\u003cgroup id\u003e\",\n    role_type=\"READ_ONLY_ADMIN\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Group.Role(\"example\", new()\n    {\n        GroupId = \"\u003cgroup id\u003e\",\n        RoleType = \"READ_ONLY_ADMIN\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := group.NewRole(ctx, \"example\", \u0026group.RoleArgs{\n\t\t\tGroupId:  pulumi.String(\"\u003cgroup id\u003e\"),\n\t\t\tRoleType: pulumi.String(\"READ_ONLY_ADMIN\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.group.Role;\nimport com.pulumi.okta.group.RoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Role(\"example\", RoleArgs.builder()        \n            .groupId(\"\u003cgroup id\u003e\")\n            .roleType(\"READ_ONLY_ADMIN\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:group:Role\n    properties:\n      groupId: \u003cgroup id\u003e\n      roleType: READ_ONLY_ADMIN\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nIndividual admin role assignment can be imported by passing the group and role assignment IDs as follows\n\n```sh\n $ pulumi import okta:group/role:Role example \u0026#60;group id\u0026#62;/\u0026#60;role id\u0026#62;\n```\n\n ",
            "properties": {
                "disableNotifications": {
                    "type": "boolean",
                    "description": "When this setting is enabled, the admins won't receive any of the default Okta\nadministrator emails. These admins also won't have access to contact Okta Support and open support cases on behalf of your org.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of group to attach admin roles to.\n"
                },
                "roleType": {
                    "type": "string",
                    "description": "Admin role assigned to the group. It can be any one of the following values:\n`\"API_ADMIN\"`,\n`\"APP_ADMIN\"`,\n`\"CUSTOM\"`,\n`\"GROUP_MEMBERSHIP_ADMIN\"`,\n`\"HELP_DESK_ADMIN\"`,\n`\"MOBILE_ADMIN\"`,\n`\"ORG_ADMIN\"`,\n`\"READ_ONLY_ADMIN\"`,\n`\"REPORT_ADMIN\"`,\n`\"SUPER_ADMIN\"`,\n`\"USER_ADMIN\"`\n. See [API Docs](https://developer.okta.com/docs/reference/api/roles/#role-types).\n\n\n- `\"USER_ADMIN\"` is the Group Administrator.\n"
                },
                "targetAppLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of app names (name represents set of app instances, like 'salesforce' or '\nfacebook'), or a combination of app name and app instance ID (like 'facebook.0oapsqQ6dv19pqyEo0g3') you would like as\nthe targets of the admin role.\n- Only supported when used with the role type `\"APP_ADMIN\"`.\n"
                },
                "targetGroupLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of group IDs you would like as the targets of the admin role.\n- Only supported when used with the role types: `GROUP_MEMBERSHIP_ADMIN`, `HELP_DESK_ADMIN`, or `USER_ADMIN`.\n"
                }
            },
            "required": [
                "groupId",
                "roleType"
            ],
            "inputProperties": {
                "disableNotifications": {
                    "type": "boolean",
                    "description": "When this setting is enabled, the admins won't receive any of the default Okta\nadministrator emails. These admins also won't have access to contact Okta Support and open support cases on behalf of your org.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of group to attach admin roles to.\n",
                    "willReplaceOnChanges": true
                },
                "roleType": {
                    "type": "string",
                    "description": "Admin role assigned to the group. It can be any one of the following values:\n`\"API_ADMIN\"`,\n`\"APP_ADMIN\"`,\n`\"CUSTOM\"`,\n`\"GROUP_MEMBERSHIP_ADMIN\"`,\n`\"HELP_DESK_ADMIN\"`,\n`\"MOBILE_ADMIN\"`,\n`\"ORG_ADMIN\"`,\n`\"READ_ONLY_ADMIN\"`,\n`\"REPORT_ADMIN\"`,\n`\"SUPER_ADMIN\"`,\n`\"USER_ADMIN\"`\n. See [API Docs](https://developer.okta.com/docs/reference/api/roles/#role-types).\n\n\n- `\"USER_ADMIN\"` is the Group Administrator.\n",
                    "willReplaceOnChanges": true
                },
                "targetAppLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of app names (name represents set of app instances, like 'salesforce' or '\nfacebook'), or a combination of app name and app instance ID (like 'facebook.0oapsqQ6dv19pqyEo0g3') you would like as\nthe targets of the admin role.\n- Only supported when used with the role type `\"APP_ADMIN\"`.\n"
                },
                "targetGroupLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of group IDs you would like as the targets of the admin role.\n- Only supported when used with the role types: `GROUP_MEMBERSHIP_ADMIN`, `HELP_DESK_ADMIN`, or `USER_ADMIN`.\n"
                }
            },
            "requiredInputs": [
                "groupId",
                "roleType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Role resources.\n",
                "properties": {
                    "disableNotifications": {
                        "type": "boolean",
                        "description": "When this setting is enabled, the admins won't receive any of the default Okta\nadministrator emails. These admins also won't have access to contact Okta Support and open support cases on behalf of your org.\n"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The ID of group to attach admin roles to.\n",
                        "willReplaceOnChanges": true
                    },
                    "roleType": {
                        "type": "string",
                        "description": "Admin role assigned to the group. It can be any one of the following values:\n`\"API_ADMIN\"`,\n`\"APP_ADMIN\"`,\n`\"CUSTOM\"`,\n`\"GROUP_MEMBERSHIP_ADMIN\"`,\n`\"HELP_DESK_ADMIN\"`,\n`\"MOBILE_ADMIN\"`,\n`\"ORG_ADMIN\"`,\n`\"READ_ONLY_ADMIN\"`,\n`\"REPORT_ADMIN\"`,\n`\"SUPER_ADMIN\"`,\n`\"USER_ADMIN\"`\n. See [API Docs](https://developer.okta.com/docs/reference/api/roles/#role-types).\n\n\n- `\"USER_ADMIN\"` is the Group Administrator.\n",
                        "willReplaceOnChanges": true
                    },
                    "targetAppLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of app names (name represents set of app instances, like 'salesforce' or '\nfacebook'), or a combination of app name and app instance ID (like 'facebook.0oapsqQ6dv19pqyEo0g3') you would like as\nthe targets of the admin role.\n- Only supported when used with the role type `\"APP_ADMIN\"`.\n"
                    },
                    "targetGroupLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of group IDs you would like as the targets of the admin role.\n- Only supported when used with the role types: `GROUP_MEMBERSHIP_ADMIN`, `HELP_DESK_ADMIN`, or `USER_ADMIN`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:group/rule:Rule": {
            "description": "Creates an Okta Group Rule.\n\nThis resource allows you to create and configure an Okta Group Rule.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.group.Rule(\"example\", {\n    expressionType: \"urn:okta:expression:1.0\",\n    expressionValue: \"String.startsWith(user.firstName,\\\"andy\\\")\",\n    groupAssignments: [\"\u003cgroup id\u003e\"],\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.group.Rule(\"example\",\n    expression_type=\"urn:okta:expression:1.0\",\n    expression_value=\"String.startsWith(user.firstName,\\\"andy\\\")\",\n    group_assignments=[\"\u003cgroup id\u003e\"],\n    status=\"ACTIVE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Group.Rule(\"example\", new()\n    {\n        ExpressionType = \"urn:okta:expression:1.0\",\n        ExpressionValue = \"String.startsWith(user.firstName,\\\"andy\\\")\",\n        GroupAssignments = new[]\n        {\n            \"\u003cgroup id\u003e\",\n        },\n        Status = \"ACTIVE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := group.NewRule(ctx, \"example\", \u0026group.RuleArgs{\n\t\t\tExpressionType:  pulumi.String(\"urn:okta:expression:1.0\"),\n\t\t\tExpressionValue: pulumi.String(\"String.startsWith(user.firstName,\\\"andy\\\")\"),\n\t\t\tGroupAssignments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"\u003cgroup id\u003e\"),\n\t\t\t},\n\t\t\tStatus: pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.group.Rule;\nimport com.pulumi.okta.group.RuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Rule(\"example\", RuleArgs.builder()        \n            .expressionType(\"urn:okta:expression:1.0\")\n            .expressionValue(\"String.startsWith(user.firstName,\\\"andy\\\")\")\n            .groupAssignments(\"\u003cgroup id\u003e\")\n            .status(\"ACTIVE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:group:Rule\n    properties:\n      expressionType: urn:okta:expression:1.0\n      expressionValue: String.startsWith(user.firstName,\"andy\")\n      groupAssignments:\n        - \u003cgroup id\u003e\n      status: ACTIVE\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn Okta Group Rule can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:group/rule:Rule example \u0026#60;group rule id\u0026#62;\n```\n\n ",
            "properties": {
                "expressionType": {
                    "type": "string",
                    "description": "The expression type to use to invoke the rule. The default\nis `\"urn:okta:expression:1.0\"`.\n"
                },
                "expressionValue": {
                    "type": "string",
                    "description": "The expression value.\n"
                },
                "groupAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of group ids to assign the users to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Group Rule (min character 1; max characters 50).\n"
                },
                "removeAssignedUsers": {
                    "type": "boolean",
                    "description": "This tells the provider to remove users added by this rule from the assigned\ngroup after destroying this resource. Default is `false`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the group rule.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of user IDs that would be excluded when rules are processed.\n"
                }
            },
            "required": [
                "expressionValue",
                "groupAssignments",
                "name"
            ],
            "inputProperties": {
                "expressionType": {
                    "type": "string",
                    "description": "The expression type to use to invoke the rule. The default\nis `\"urn:okta:expression:1.0\"`.\n"
                },
                "expressionValue": {
                    "type": "string",
                    "description": "The expression value.\n"
                },
                "groupAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of group ids to assign the users to.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Group Rule (min character 1; max characters 50).\n"
                },
                "removeAssignedUsers": {
                    "type": "boolean",
                    "description": "This tells the provider to remove users added by this rule from the assigned\ngroup after destroying this resource. Default is `false`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the group rule.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of user IDs that would be excluded when rules are processed.\n"
                }
            },
            "requiredInputs": [
                "expressionValue",
                "groupAssignments"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Rule resources.\n",
                "properties": {
                    "expressionType": {
                        "type": "string",
                        "description": "The expression type to use to invoke the rule. The default\nis `\"urn:okta:expression:1.0\"`.\n"
                    },
                    "expressionValue": {
                        "type": "string",
                        "description": "The expression value.\n"
                    },
                    "groupAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of group ids to assign the users to.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Group Rule (min character 1; max characters 50).\n"
                    },
                    "removeAssignedUsers": {
                        "type": "boolean",
                        "description": "This tells the provider to remove users added by this rule from the assigned\ngroup after destroying this resource. Default is `false`.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the group rule.\n"
                    },
                    "usersExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of user IDs that would be excluded when rules are processed.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:idp/oidc:Oidc": {
            "description": "Creates an OIDC Identity Provider.\n\nThis resource allows you to create and configure an OIDC Identity Provider.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.idp.Oidc(\"example\", {\n    authorizationBinding: \"HTTP-REDIRECT\",\n    authorizationUrl: \"https://idp.example.com/authorize\",\n    clientId: \"efg456\",\n    clientSecret: \"efg456\",\n    issuerUrl: \"https://id.example.com\",\n    jwksBinding: \"HTTP-REDIRECT\",\n    jwksUrl: \"https://idp.example.com/keys\",\n    scopes: [\"openid\"],\n    tokenBinding: \"HTTP-POST\",\n    tokenUrl: \"https://idp.example.com/token\",\n    userInfoBinding: \"HTTP-REDIRECT\",\n    userInfoUrl: \"https://idp.example.com/userinfo\",\n    usernameTemplate: \"idpuser.email\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.Oidc(\"example\",\n    authorization_binding=\"HTTP-REDIRECT\",\n    authorization_url=\"https://idp.example.com/authorize\",\n    client_id=\"efg456\",\n    client_secret=\"efg456\",\n    issuer_url=\"https://id.example.com\",\n    jwks_binding=\"HTTP-REDIRECT\",\n    jwks_url=\"https://idp.example.com/keys\",\n    scopes=[\"openid\"],\n    token_binding=\"HTTP-POST\",\n    token_url=\"https://idp.example.com/token\",\n    user_info_binding=\"HTTP-REDIRECT\",\n    user_info_url=\"https://idp.example.com/userinfo\",\n    username_template=\"idpuser.email\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Idp.Oidc(\"example\", new()\n    {\n        AuthorizationBinding = \"HTTP-REDIRECT\",\n        AuthorizationUrl = \"https://idp.example.com/authorize\",\n        ClientId = \"efg456\",\n        ClientSecret = \"efg456\",\n        IssuerUrl = \"https://id.example.com\",\n        JwksBinding = \"HTTP-REDIRECT\",\n        JwksUrl = \"https://idp.example.com/keys\",\n        Scopes = new[]\n        {\n            \"openid\",\n        },\n        TokenBinding = \"HTTP-POST\",\n        TokenUrl = \"https://idp.example.com/token\",\n        UserInfoBinding = \"HTTP-REDIRECT\",\n        UserInfoUrl = \"https://idp.example.com/userinfo\",\n        UsernameTemplate = \"idpuser.email\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.NewOidc(ctx, \"example\", \u0026idp.OidcArgs{\n\t\t\tAuthorizationBinding: pulumi.String(\"HTTP-REDIRECT\"),\n\t\t\tAuthorizationUrl:     pulumi.String(\"https://idp.example.com/authorize\"),\n\t\t\tClientId:             pulumi.String(\"efg456\"),\n\t\t\tClientSecret:         pulumi.String(\"efg456\"),\n\t\t\tIssuerUrl:            pulumi.String(\"https://id.example.com\"),\n\t\t\tJwksBinding:          pulumi.String(\"HTTP-REDIRECT\"),\n\t\t\tJwksUrl:              pulumi.String(\"https://idp.example.com/keys\"),\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"openid\"),\n\t\t\t},\n\t\t\tTokenBinding:     pulumi.String(\"HTTP-POST\"),\n\t\t\tTokenUrl:         pulumi.String(\"https://idp.example.com/token\"),\n\t\t\tUserInfoBinding:  pulumi.String(\"HTTP-REDIRECT\"),\n\t\t\tUserInfoUrl:      pulumi.String(\"https://idp.example.com/userinfo\"),\n\t\t\tUsernameTemplate: pulumi.String(\"idpuser.email\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.idp.Oidc;\nimport com.pulumi.okta.idp.OidcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Oidc(\"example\", OidcArgs.builder()        \n            .authorizationBinding(\"HTTP-REDIRECT\")\n            .authorizationUrl(\"https://idp.example.com/authorize\")\n            .clientId(\"efg456\")\n            .clientSecret(\"efg456\")\n            .issuerUrl(\"https://id.example.com\")\n            .jwksBinding(\"HTTP-REDIRECT\")\n            .jwksUrl(\"https://idp.example.com/keys\")\n            .scopes(\"openid\")\n            .tokenBinding(\"HTTP-POST\")\n            .tokenUrl(\"https://idp.example.com/token\")\n            .userInfoBinding(\"HTTP-REDIRECT\")\n            .userInfoUrl(\"https://idp.example.com/userinfo\")\n            .usernameTemplate(\"idpuser.email\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:idp:Oidc\n    properties:\n      authorizationBinding: HTTP-REDIRECT\n      authorizationUrl: https://idp.example.com/authorize\n      clientId: efg456\n      clientSecret: efg456\n      issuerUrl: https://id.example.com\n      jwksBinding: HTTP-REDIRECT\n      jwksUrl: https://idp.example.com/keys\n      scopes:\n        - openid\n      tokenBinding: HTTP-POST\n      tokenUrl: https://idp.example.com/token\n      userInfoBinding: HTTP-REDIRECT\n      userInfoUrl: https://idp.example.com/userinfo\n      usernameTemplate: idpuser.email\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn OIDC IdP can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:idp/oidc:Oidc example \u0026#60;idp id\u0026#62;\n```\n\n ",
            "properties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user.\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "authorizationBinding": {
                    "type": "string",
                    "description": "The method of making an authorization request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "authorizationUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret issued by AS for the Okta IdP instance.\n",
                    "secret": true
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, a custom domain URL, or dynamic. It can be `\"ORG_URL\"`, `\"CUSTOM_URL\"`, or `\"DYNAMIC\"`.\n"
                },
                "issuerUrl": {
                    "type": "string",
                    "description": "URI that identifies the issuer.\n"
                },
                "jwksBinding": {
                    "type": "string",
                    "description": "The method of making a request for the OIDC JWKS. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "jwksUrl": {
                    "type": "string",
                    "description": "Endpoint where the keys signer publishes its keys in a JWK Set.\n"
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "protocolType": {
                    "type": "string",
                    "description": "The type of protocol to use. It can be `\"OIDC\"` or `\"OAUTH2\"`.\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication.\n"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "The HMAC Signature Algorithm used when signing an authorization request. Defaults to `\"HS256\"`. It can be `\"HS256\"`, `\"HS384\"`, `\"HS512\"`, `\"SHA-256\"`. `\"RS256\"`, `\"RS384\"`, or `\"RS512\"`. NOTE: `\"SHA-256\"` an undocumented legacy value and not continue to be valid. See API docs https://developer.okta.com/docs/reference/api/idps/#oidc-request-signature-algorithm-object\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. Defaults to `\"REQUEST\"`. It can be `\"REQUEST\"` or `\"NONE\"`.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The scopes of the IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the IdP.\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                },
                "tokenBinding": {
                    "type": "string",
                    "description": "The method of making a token request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of OIDC IdP.\n"
                },
                "userInfoBinding": {
                    "type": "string"
                },
                "userInfoUrl": {
                    "type": "string",
                    "description": "Protected resource endpoint that returns claims about the authenticated user.\n"
                },
                "userTypeId": {
                    "type": "string",
                    "description": "User type ID. Can be used as `target_id` in the `okta.profile.Mapping` resource.\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                }
            },
            "required": [
                "authorizationBinding",
                "authorizationUrl",
                "clientId",
                "clientSecret",
                "issuerUrl",
                "jwksBinding",
                "jwksUrl",
                "name",
                "scopes",
                "tokenBinding",
                "tokenUrl",
                "type",
                "userTypeId"
            ],
            "inputProperties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user.\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "authorizationBinding": {
                    "type": "string",
                    "description": "The method of making an authorization request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "authorizationUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret issued by AS for the Okta IdP instance.\n",
                    "secret": true
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, a custom domain URL, or dynamic. It can be `\"ORG_URL\"`, `\"CUSTOM_URL\"`, or `\"DYNAMIC\"`.\n"
                },
                "issuerUrl": {
                    "type": "string",
                    "description": "URI that identifies the issuer.\n"
                },
                "jwksBinding": {
                    "type": "string",
                    "description": "The method of making a request for the OIDC JWKS. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "jwksUrl": {
                    "type": "string",
                    "description": "Endpoint where the keys signer publishes its keys in a JWK Set.\n"
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "protocolType": {
                    "type": "string",
                    "description": "The type of protocol to use. It can be `\"OIDC\"` or `\"OAUTH2\"`.\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication.\n"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "The HMAC Signature Algorithm used when signing an authorization request. Defaults to `\"HS256\"`. It can be `\"HS256\"`, `\"HS384\"`, `\"HS512\"`, `\"SHA-256\"`. `\"RS256\"`, `\"RS384\"`, or `\"RS512\"`. NOTE: `\"SHA-256\"` an undocumented legacy value and not continue to be valid. See API docs https://developer.okta.com/docs/reference/api/idps/#oidc-request-signature-algorithm-object\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. Defaults to `\"REQUEST\"`. It can be `\"REQUEST\"` or `\"NONE\"`.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The scopes of the IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the IdP.\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                },
                "tokenBinding": {
                    "type": "string",
                    "description": "The method of making a token request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                },
                "userInfoBinding": {
                    "type": "string"
                },
                "userInfoUrl": {
                    "type": "string",
                    "description": "Protected resource endpoint that returns claims about the authenticated user.\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                }
            },
            "requiredInputs": [
                "authorizationBinding",
                "authorizationUrl",
                "clientId",
                "clientSecret",
                "issuerUrl",
                "jwksBinding",
                "jwksUrl",
                "scopes",
                "tokenBinding",
                "tokenUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Oidc resources.\n",
                "properties": {
                    "accountLinkAction": {
                        "type": "string",
                        "description": "Specifies the account linking action for an IdP user.\n"
                    },
                    "accountLinkGroupIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group memberships to determine link candidates.\n"
                    },
                    "authorizationBinding": {
                        "type": "string",
                        "description": "The method of making an authorization request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                    },
                    "authorizationUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "Client secret issued by AS for the Okta IdP instance.\n",
                        "secret": true
                    },
                    "deprovisionedAction": {
                        "type": "string",
                        "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                    },
                    "groupsAction": {
                        "type": "string",
                        "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                    },
                    "groupsAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                    },
                    "groupsAttribute": {
                        "type": "string",
                        "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                    },
                    "groupsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether Okta uses the original Okta org domain URL, a custom domain URL, or dynamic. It can be `\"ORG_URL\"`, `\"CUSTOM_URL\"`, or `\"DYNAMIC\"`.\n"
                    },
                    "issuerUrl": {
                        "type": "string",
                        "description": "URI that identifies the issuer.\n"
                    },
                    "jwksBinding": {
                        "type": "string",
                        "description": "The method of making a request for the OIDC JWKS. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                    },
                    "jwksUrl": {
                        "type": "string",
                        "description": "Endpoint where the keys signer publishes its keys in a JWK Set.\n"
                    },
                    "maxClockSkew": {
                        "type": "integer",
                        "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "profileMaster": {
                        "type": "boolean",
                        "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                    },
                    "protocolType": {
                        "type": "string",
                        "description": "The type of protocol to use. It can be `\"OIDC\"` or `\"OAUTH2\"`.\n"
                    },
                    "provisioningAction": {
                        "type": "string",
                        "description": "Provisioning action for an IdP user during authentication.\n"
                    },
                    "requestSignatureAlgorithm": {
                        "type": "string",
                        "description": "The HMAC Signature Algorithm used when signing an authorization request. Defaults to `\"HS256\"`. It can be `\"HS256\"`, `\"HS384\"`, `\"HS512\"`, `\"SHA-256\"`. `\"RS256\"`, `\"RS384\"`, or `\"RS512\"`. NOTE: `\"SHA-256\"` an undocumented legacy value and not continue to be valid. See API docs https://developer.okta.com/docs/reference/api/idps/#oidc-request-signature-algorithm-object\n"
                    },
                    "requestSignatureScope": {
                        "type": "string",
                        "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. Defaults to `\"REQUEST\"`. It can be `\"REQUEST\"` or `\"NONE\"`.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The scopes of the IdP.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the IdP.\n"
                    },
                    "subjectMatchAttribute": {
                        "type": "string",
                        "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                    },
                    "subjectMatchType": {
                        "type": "string",
                        "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                    },
                    "suspendedAction": {
                        "type": "string",
                        "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                    },
                    "tokenBinding": {
                        "type": "string",
                        "description": "The method of making a token request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                    },
                    "tokenUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of OIDC IdP.\n"
                    },
                    "userInfoBinding": {
                        "type": "string"
                    },
                    "userInfoUrl": {
                        "type": "string",
                        "description": "Protected resource endpoint that returns claims about the authenticated user.\n"
                    },
                    "userTypeId": {
                        "type": "string",
                        "description": "User type ID. Can be used as `target_id` in the `okta.profile.Mapping` resource.\n"
                    },
                    "usernameTemplate": {
                        "type": "string",
                        "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:idp/saml:Saml": {
            "description": "Creates a SAML Identity Provider.\n\nThis resource allows you to create and configure a SAML Identity Provider.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.idp.Saml(\"example\", {\n    acsType: \"INSTANCE\",\n    issuer: \"https://idp.example.com\",\n    kid: okta_idp_saml_key.test.id,\n    requestSignatureScope: \"REQUEST\",\n    responseSignatureScope: \"ANY\",\n    ssoBinding: \"HTTP-POST\",\n    ssoDestination: \"https://idp.example.com\",\n    ssoUrl: \"https://idp.example.com\",\n    usernameTemplate: \"idpuser.email\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.Saml(\"example\",\n    acs_type=\"INSTANCE\",\n    issuer=\"https://idp.example.com\",\n    kid=okta_idp_saml_key[\"test\"][\"id\"],\n    request_signature_scope=\"REQUEST\",\n    response_signature_scope=\"ANY\",\n    sso_binding=\"HTTP-POST\",\n    sso_destination=\"https://idp.example.com\",\n    sso_url=\"https://idp.example.com\",\n    username_template=\"idpuser.email\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Idp.Saml(\"example\", new()\n    {\n        AcsType = \"INSTANCE\",\n        Issuer = \"https://idp.example.com\",\n        Kid = okta_idp_saml_key.Test.Id,\n        RequestSignatureScope = \"REQUEST\",\n        ResponseSignatureScope = \"ANY\",\n        SsoBinding = \"HTTP-POST\",\n        SsoDestination = \"https://idp.example.com\",\n        SsoUrl = \"https://idp.example.com\",\n        UsernameTemplate = \"idpuser.email\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.NewSaml(ctx, \"example\", \u0026idp.SamlArgs{\n\t\t\tAcsType:                pulumi.String(\"INSTANCE\"),\n\t\t\tIssuer:                 pulumi.String(\"https://idp.example.com\"),\n\t\t\tKid:                    pulumi.Any(okta_idp_saml_key.Test.Id),\n\t\t\tRequestSignatureScope:  pulumi.String(\"REQUEST\"),\n\t\t\tResponseSignatureScope: pulumi.String(\"ANY\"),\n\t\t\tSsoBinding:             pulumi.String(\"HTTP-POST\"),\n\t\t\tSsoDestination:         pulumi.String(\"https://idp.example.com\"),\n\t\t\tSsoUrl:                 pulumi.String(\"https://idp.example.com\"),\n\t\t\tUsernameTemplate:       pulumi.String(\"idpuser.email\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.idp.Saml;\nimport com.pulumi.okta.idp.SamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Saml(\"example\", SamlArgs.builder()        \n            .acsType(\"INSTANCE\")\n            .issuer(\"https://idp.example.com\")\n            .kid(okta_idp_saml_key.test().id())\n            .requestSignatureScope(\"REQUEST\")\n            .responseSignatureScope(\"ANY\")\n            .ssoBinding(\"HTTP-POST\")\n            .ssoDestination(\"https://idp.example.com\")\n            .ssoUrl(\"https://idp.example.com\")\n            .usernameTemplate(\"idpuser.email\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:idp:Saml\n    properties:\n      acsType: INSTANCE\n      issuer: https://idp.example.com\n      kid: ${okta_idp_saml_key.test.id}\n      requestSignatureScope: REQUEST\n      responseSignatureScope: ANY\n      ssoBinding: HTTP-POST\n      ssoDestination: https://idp.example.com\n      ssoUrl: https://idp.example.com\n      usernameTemplate: idpuser.email\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn SAML IdP can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:idp/saml:Saml example \u0026#60;idp id\u0026#62;\n```\n\n ",
            "properties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user.\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "acsBinding": {
                    "type": "string"
                },
                "acsType": {
                    "type": "string",
                    "description": "The type of ACS. It can be `\"INSTANCE\"` or `\"ORG\"`.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "The audience restriction for the IdP.\n"
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "URI that identifies the issuer.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `\"ORG_URL\"` or `\"CUSTOM_URL\"`.\n"
                },
                "kid": {
                    "type": "string",
                    "description": "The ID of the signing key.\n"
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "nameFormat": {
                    "type": "string",
                    "description": "The name identifier format to use. By default `\"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"`.\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication.\n"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "The XML digital signature algorithm used when signing an AuthnRequest message. It can be `\"SHA-256\"` or `\"SHA-1\"`.\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. It can be `\"REQUEST\"` or `\"NONE\"`.\n"
                },
                "responseSignatureAlgorithm": {
                    "type": "string",
                    "description": "The minimum XML digital signature algorithm allowed when verifying a SAMLResponse message or Assertion element. It can be `\"SHA-256\"` or `\"SHA-1\"`.\n"
                },
                "responseSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to verify a SAMLResponse message or Assertion element XML digital signature. It can be `\"RESPONSE\"`, `\"ASSERTION\"`, or `\"ANY\"`.\n"
                },
                "ssoBinding": {
                    "type": "string",
                    "description": "The method of making an SSO request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "ssoDestination": {
                    "type": "string",
                    "description": "URI reference indicating the address to which the AuthnRequest message is sent.\n"
                },
                "ssoUrl": {
                    "type": "string",
                    "description": "URL of binding-specific endpoint to send an AuthnRequest message to IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the IdP.\n"
                },
                "subjectFilter": {
                    "type": "string",
                    "description": "Optional regular expression pattern used to filter untrusted IdP usernames.\n"
                },
                "subjectFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The name format. By default `\"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"`.\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the IdP.\n"
                },
                "userTypeId": {
                    "type": "string",
                    "description": "User type ID. Can be used as `target_id` in the `okta.profile.Mapping` resource.\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                }
            },
            "required": [
                "acsBinding",
                "audience",
                "issuer",
                "kid",
                "name",
                "ssoUrl",
                "type",
                "userTypeId"
            ],
            "inputProperties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user.\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "acsType": {
                    "type": "string",
                    "description": "The type of ACS. It can be `\"INSTANCE\"` or `\"ORG\"`.\n"
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "URI that identifies the issuer.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `\"ORG_URL\"` or `\"CUSTOM_URL\"`.\n"
                },
                "kid": {
                    "type": "string",
                    "description": "The ID of the signing key.\n"
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "nameFormat": {
                    "type": "string",
                    "description": "The name identifier format to use. By default `\"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"`.\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication.\n"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "The XML digital signature algorithm used when signing an AuthnRequest message. It can be `\"SHA-256\"` or `\"SHA-1\"`.\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. It can be `\"REQUEST\"` or `\"NONE\"`.\n"
                },
                "responseSignatureAlgorithm": {
                    "type": "string",
                    "description": "The minimum XML digital signature algorithm allowed when verifying a SAMLResponse message or Assertion element. It can be `\"SHA-256\"` or `\"SHA-1\"`.\n"
                },
                "responseSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to verify a SAMLResponse message or Assertion element XML digital signature. It can be `\"RESPONSE\"`, `\"ASSERTION\"`, or `\"ANY\"`.\n"
                },
                "ssoBinding": {
                    "type": "string",
                    "description": "The method of making an SSO request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "ssoDestination": {
                    "type": "string",
                    "description": "URI reference indicating the address to which the AuthnRequest message is sent.\n"
                },
                "ssoUrl": {
                    "type": "string",
                    "description": "URL of binding-specific endpoint to send an AuthnRequest message to IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the IdP.\n"
                },
                "subjectFilter": {
                    "type": "string",
                    "description": "Optional regular expression pattern used to filter untrusted IdP usernames.\n"
                },
                "subjectFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The name format. By default `\"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"`.\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                }
            },
            "requiredInputs": [
                "issuer",
                "kid",
                "ssoUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Saml resources.\n",
                "properties": {
                    "accountLinkAction": {
                        "type": "string",
                        "description": "Specifies the account linking action for an IdP user.\n"
                    },
                    "accountLinkGroupIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group memberships to determine link candidates.\n"
                    },
                    "acsBinding": {
                        "type": "string"
                    },
                    "acsType": {
                        "type": "string",
                        "description": "The type of ACS. It can be `\"INSTANCE\"` or `\"ORG\"`.\n"
                    },
                    "audience": {
                        "type": "string",
                        "description": "The audience restriction for the IdP.\n"
                    },
                    "deprovisionedAction": {
                        "type": "string",
                        "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                    },
                    "groupsAction": {
                        "type": "string",
                        "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                    },
                    "groupsAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                    },
                    "groupsAttribute": {
                        "type": "string",
                        "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                    },
                    "groupsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "URI that identifies the issuer.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `\"ORG_URL\"` or `\"CUSTOM_URL\"`.\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "The ID of the signing key.\n"
                    },
                    "maxClockSkew": {
                        "type": "integer",
                        "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "nameFormat": {
                        "type": "string",
                        "description": "The name identifier format to use. By default `\"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"`.\n"
                    },
                    "profileMaster": {
                        "type": "boolean",
                        "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                    },
                    "provisioningAction": {
                        "type": "string",
                        "description": "Provisioning action for an IdP user during authentication.\n"
                    },
                    "requestSignatureAlgorithm": {
                        "type": "string",
                        "description": "The XML digital signature algorithm used when signing an AuthnRequest message. It can be `\"SHA-256\"` or `\"SHA-1\"`.\n"
                    },
                    "requestSignatureScope": {
                        "type": "string",
                        "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. It can be `\"REQUEST\"` or `\"NONE\"`.\n"
                    },
                    "responseSignatureAlgorithm": {
                        "type": "string",
                        "description": "The minimum XML digital signature algorithm allowed when verifying a SAMLResponse message or Assertion element. It can be `\"SHA-256\"` or `\"SHA-1\"`.\n"
                    },
                    "responseSignatureScope": {
                        "type": "string",
                        "description": "Specifies whether to verify a SAMLResponse message or Assertion element XML digital signature. It can be `\"RESPONSE\"`, `\"ASSERTION\"`, or `\"ANY\"`.\n"
                    },
                    "ssoBinding": {
                        "type": "string",
                        "description": "The method of making an SSO request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                    },
                    "ssoDestination": {
                        "type": "string",
                        "description": "URI reference indicating the address to which the AuthnRequest message is sent.\n"
                    },
                    "ssoUrl": {
                        "type": "string",
                        "description": "URL of binding-specific endpoint to send an AuthnRequest message to IdP.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the IdP.\n"
                    },
                    "subjectFilter": {
                        "type": "string",
                        "description": "Optional regular expression pattern used to filter untrusted IdP usernames.\n"
                    },
                    "subjectFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The name format. By default `\"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"`.\n"
                    },
                    "subjectMatchAttribute": {
                        "type": "string",
                        "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                    },
                    "subjectMatchType": {
                        "type": "string",
                        "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                    },
                    "suspendedAction": {
                        "type": "string",
                        "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the IdP.\n"
                    },
                    "userTypeId": {
                        "type": "string",
                        "description": "User type ID. Can be used as `target_id` in the `okta.profile.Mapping` resource.\n"
                    },
                    "usernameTemplate": {
                        "type": "string",
                        "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:idp/samlKey:SamlKey": {
            "description": "\n\n## Import\n\nA SAML IdP Signing Key can be imported via the key id.\n\n```sh\n $ pulumi import okta:idp/samlKey:SamlKey example \u0026#60;key id\u0026#62;\n```\n\n ",
            "properties": {
                "created": {
                    "type": "string",
                    "description": "Date created.\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "Date the cert expires.\n"
                },
                "kid": {
                    "type": "string",
                    "description": "Key ID.\n"
                },
                "kty": {
                    "type": "string",
                    "description": "Identifies the cryptographic algorithm family used with the key.\n"
                },
                "use": {
                    "type": "string",
                    "description": "Intended use of the public key.\n"
                },
                "x5cs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "base64-encoded X.509 certificate chain with DER encoding.\n"
                },
                "x5tS256": {
                    "type": "string",
                    "description": "base64url-encoded SHA-256 thumbprint of the DER encoding of an X.509 certificate.\n"
                }
            },
            "required": [
                "created",
                "expiresAt",
                "kid",
                "kty",
                "use",
                "x5cs",
                "x5tS256"
            ],
            "inputProperties": {
                "x5cs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "base64-encoded X.509 certificate chain with DER encoding.\n"
                }
            },
            "requiredInputs": [
                "x5cs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SamlKey resources.\n",
                "properties": {
                    "created": {
                        "type": "string",
                        "description": "Date created.\n"
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "Date the cert expires.\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "Key ID.\n"
                    },
                    "kty": {
                        "type": "string",
                        "description": "Identifies the cryptographic algorithm family used with the key.\n"
                    },
                    "use": {
                        "type": "string",
                        "description": "Intended use of the public key.\n"
                    },
                    "x5cs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "base64-encoded X.509 certificate chain with DER encoding.\n"
                    },
                    "x5tS256": {
                        "type": "string",
                        "description": "base64url-encoded SHA-256 thumbprint of the DER encoding of an X.509 certificate.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:idp/social:Social": {
            "description": "Creates a Social Identity Provider.\n\nThis resource allows you to create and configure a Social Identity Provider.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.idp.Social(\"example\", {\n    clientId: \"abcd123\",\n    clientSecret: \"abcd123\",\n    protocolType: \"OAUTH2\",\n    scopes: [\n        \"public_profile\",\n        \"email\",\n    ],\n    type: \"FACEBOOK\",\n    usernameTemplate: \"idpuser.email\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.Social(\"example\",\n    client_id=\"abcd123\",\n    client_secret=\"abcd123\",\n    protocol_type=\"OAUTH2\",\n    scopes=[\n        \"public_profile\",\n        \"email\",\n    ],\n    type=\"FACEBOOK\",\n    username_template=\"idpuser.email\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Idp.Social(\"example\", new()\n    {\n        ClientId = \"abcd123\",\n        ClientSecret = \"abcd123\",\n        ProtocolType = \"OAUTH2\",\n        Scopes = new[]\n        {\n            \"public_profile\",\n            \"email\",\n        },\n        Type = \"FACEBOOK\",\n        UsernameTemplate = \"idpuser.email\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.NewSocial(ctx, \"example\", \u0026idp.SocialArgs{\n\t\t\tClientId:     pulumi.String(\"abcd123\"),\n\t\t\tClientSecret: pulumi.String(\"abcd123\"),\n\t\t\tProtocolType: pulumi.String(\"OAUTH2\"),\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"public_profile\"),\n\t\t\t\tpulumi.String(\"email\"),\n\t\t\t},\n\t\t\tType:             pulumi.String(\"FACEBOOK\"),\n\t\t\tUsernameTemplate: pulumi.String(\"idpuser.email\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.idp.Social;\nimport com.pulumi.okta.idp.SocialArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Social(\"example\", SocialArgs.builder()        \n            .clientId(\"abcd123\")\n            .clientSecret(\"abcd123\")\n            .protocolType(\"OAUTH2\")\n            .scopes(            \n                \"public_profile\",\n                \"email\")\n            .type(\"FACEBOOK\")\n            .usernameTemplate(\"idpuser.email\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:idp:Social\n    properties:\n      clientId: abcd123\n      clientSecret: abcd123\n      protocolType: OAUTH2\n      scopes:\n        - public_profile\n        - email\n      type: FACEBOOK\n      usernameTemplate: idpuser.email\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Social IdP can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:idp/social:Social example \u0026#60;idp id\u0026#62;\n```\n\n ",
            "properties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user.\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "appleKid": {
                    "type": "string",
                    "description": "The Key ID that you obtained from Apple when you created the private key for the client.\n"
                },
                "applePrivateKey": {
                    "type": "string",
                    "description": "The Key ID that you obtained from Apple when you created the private \nkey for the client. PrivateKey is required when resource is first created. For all consecutive updates, it can be empty/omitted\nand keeps the existing value if it is empty/omitted. PrivateKey isn't returned when importing this resource.\n",
                    "secret": true
                },
                "appleTeamId": {
                    "type": "string",
                    "description": "The Team ID associated with your Apple developer account.\n"
                },
                "authorizationBinding": {
                    "type": "string",
                    "description": "The method of making an authorization request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "authorizationUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret issued by AS for the Okta IdP instance.\n",
                    "secret": true
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `\"ORG_URL\"` or `\"CUSTOM_URL\"`.\n"
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "protocolType": {
                    "type": "string",
                    "description": "The type of protocol to use. It can be `\"OIDC\"` or `\"OAUTH2\"`.\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The scopes of the IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the IdP.\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                },
                "tokenBinding": {
                    "type": "string",
                    "description": "The method of making a token request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of Social IdP. See API docs [Identity Provider Type](https://developer.okta.com/docs/reference/api/idps/#identity-provider-type)\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                }
            },
            "required": [
                "authorizationBinding",
                "authorizationUrl",
                "name",
                "scopes",
                "tokenBinding",
                "tokenUrl",
                "type"
            ],
            "inputProperties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user.\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "appleKid": {
                    "type": "string",
                    "description": "The Key ID that you obtained from Apple when you created the private key for the client.\n"
                },
                "applePrivateKey": {
                    "type": "string",
                    "description": "The Key ID that you obtained from Apple when you created the private \nkey for the client. PrivateKey is required when resource is first created. For all consecutive updates, it can be empty/omitted\nand keeps the existing value if it is empty/omitted. PrivateKey isn't returned when importing this resource.\n",
                    "secret": true
                },
                "appleTeamId": {
                    "type": "string",
                    "description": "The Team ID associated with your Apple developer account.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret issued by AS for the Okta IdP instance.\n",
                    "secret": true
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `\"ORG_URL\"` or `\"CUSTOM_URL\"`.\n"
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "protocolType": {
                    "type": "string",
                    "description": "The type of protocol to use. It can be `\"OIDC\"` or `\"OAUTH2\"`.\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The scopes of the IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the IdP.\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of Social IdP. See API docs [Identity Provider Type](https://developer.okta.com/docs/reference/api/idps/#identity-provider-type)\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                }
            },
            "requiredInputs": [
                "scopes",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Social resources.\n",
                "properties": {
                    "accountLinkAction": {
                        "type": "string",
                        "description": "Specifies the account linking action for an IdP user.\n"
                    },
                    "accountLinkGroupIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group memberships to determine link candidates.\n"
                    },
                    "appleKid": {
                        "type": "string",
                        "description": "The Key ID that you obtained from Apple when you created the private key for the client.\n"
                    },
                    "applePrivateKey": {
                        "type": "string",
                        "description": "The Key ID that you obtained from Apple when you created the private \nkey for the client. PrivateKey is required when resource is first created. For all consecutive updates, it can be empty/omitted\nand keeps the existing value if it is empty/omitted. PrivateKey isn't returned when importing this resource.\n",
                        "secret": true
                    },
                    "appleTeamId": {
                        "type": "string",
                        "description": "The Team ID associated with your Apple developer account.\n"
                    },
                    "authorizationBinding": {
                        "type": "string",
                        "description": "The method of making an authorization request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                    },
                    "authorizationUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "Client secret issued by AS for the Okta IdP instance.\n",
                        "secret": true
                    },
                    "deprovisionedAction": {
                        "type": "string",
                        "description": "Action for a previously deprovisioned IdP user during authentication. Can be `\"NONE\"` or `\"REACTIVATE\"`.\n"
                    },
                    "groupsAction": {
                        "type": "string",
                        "description": "Provisioning action for IdP user's group memberships. It can be `\"NONE\"`, `\"SYNC\"`, `\"APPEND\"`, or `\"ASSIGN\"`.\n"
                    },
                    "groupsAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Okta Group IDs to add an IdP user as a member with the `\"ASSIGN\"` `groups_action`.\n"
                    },
                    "groupsAttribute": {
                        "type": "string",
                        "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                    },
                    "groupsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Whitelist of Okta Group identifiers that are allowed for the `\"APPEND\"` or `\"SYNC\"` `groups_action`.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `\"ORG_URL\"` or `\"CUSTOM_URL\"`.\n"
                    },
                    "maxClockSkew": {
                        "type": "integer",
                        "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "profileMaster": {
                        "type": "boolean",
                        "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                    },
                    "protocolType": {
                        "type": "string",
                        "description": "The type of protocol to use. It can be `\"OIDC\"` or `\"OAUTH2\"`.\n"
                    },
                    "provisioningAction": {
                        "type": "string",
                        "description": "Provisioning action for an IdP user during authentication.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The scopes of the IdP.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the IdP.\n"
                    },
                    "subjectMatchAttribute": {
                        "type": "string",
                        "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `\"CUSTOM_ATTRIBUTE\"`.\n"
                    },
                    "subjectMatchType": {
                        "type": "string",
                        "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `\"USERNAME\"`. It can be set to `\"USERNAME\"`, `\"EMAIL\"`, `\"USERNAME_OR_EMAIL\"` or `\"CUSTOM_ATTRIBUTE\"`.\n"
                    },
                    "suspendedAction": {
                        "type": "string",
                        "description": "Action for a previously suspended IdP user during authentication. Can be set to `\"NONE\"` or `\"UNSUSPEND\"`\n"
                    },
                    "tokenBinding": {
                        "type": "string",
                        "description": "The method of making a token request. It can be set to `\"HTTP-POST\"` or `\"HTTP-REDIRECT\"`.\n"
                    },
                    "tokenUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of Social IdP. See API docs [Identity Provider Type](https://developer.okta.com/docs/reference/api/idps/#identity-provider-type)\n"
                    },
                    "usernameTemplate": {
                        "type": "string",
                        "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/adminRoleCustom:AdminRoleCustom": {
            "description": "These operations allow the creation and manipulation of custom roles as custom collections of permissions.\n\n\u003e **NOTE:** This an `Early Access` feature.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AdminRoleCustom(\"example\", {\n    description: \"This role allows app assignment management\",\n    label: \"AppAssignmentManager\",\n    permissions: [\"okta.apps.assignment.manage\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AdminRoleCustom(\"example\",\n    description=\"This role allows app assignment management\",\n    label=\"AppAssignmentManager\",\n    permissions=[\"okta.apps.assignment.manage\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AdminRoleCustom(\"example\", new()\n    {\n        Description = \"This role allows app assignment management\",\n        Label = \"AppAssignmentManager\",\n        Permissions = new[]\n        {\n            \"okta.apps.assignment.manage\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAdminRoleCustom(ctx, \"example\", \u0026okta.AdminRoleCustomArgs{\n\t\t\tDescription: pulumi.String(\"This role allows app assignment management\"),\n\t\t\tLabel:       pulumi.String(\"AppAssignmentManager\"),\n\t\t\tPermissions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"okta.apps.assignment.manage\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AdminRoleCustom;\nimport com.pulumi.okta.AdminRoleCustomArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AdminRoleCustom(\"example\", AdminRoleCustomArgs.builder()        \n            .description(\"This role allows app assignment management\")\n            .label(\"AppAssignmentManager\")\n            .permissions(\"okta.apps.assignment.manage\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AdminRoleCustom\n    properties:\n      description: This role allows app assignment management\n      label: AppAssignmentManager\n      permissions:\n        - okta.apps.assignment.manage\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta Custom Admin Role can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/adminRoleCustom:AdminRoleCustom example \u0026#60;custom role id\u0026#62;\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A human-readable description of the new Role.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The name given to the new Role.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The permissions that the new Role grants. At least one\npermission must be specified when creating custom role. Valid values: `\"okta.authzServers.manage\"`,\n`\"okta.authzServers.read\"`,\n`\"okta.apps.assignment.manage\"`,\n`\"okta.apps.manage\"`,\n`\"okta.apps.read\"`,\n`\"okta.customizations.manage\"`,\n`\"okta.customizations.read\"`,\n`\"okta.groups.appAssignment.manage\"`,\n`\"okta.groups.create\"`,\n`\"okta.groups.manage\"`,\n`\"okta.groups.members.manage\"`,\n`\"okta.groups.read\"`,\n`\"okta.profilesources.import.run\"`,\n`\"okta.users.appAssignment.manage\"`,\n`\"okta.users.create\"`,\n`\"okta.users.credentials.expirePassword\"`,\n`\"okta.users.credentials.manage\"`,\n`\"okta.users.credentials.resetFactors\"`,\n`\"okta.users.credentials.resetPassword\"`,\n`\"okta.users.groupMembership.manage\"`,\n`\"okta.users.lifecycle.activate\"`,\n`\"okta.users.lifecycle.clearSessions\"`,\n`\"okta.users.lifecycle.deactivate\"`,\n`\"okta.users.lifecycle.delete\"`,\n`\"okta.users.lifecycle.manage\"`,\n`\"okta.users.lifecycle.suspend\"`,\n`\"okta.users.lifecycle.unlock\"`,\n`\"okta.users.lifecycle.unsuspend\"`,\n`\"okta.users.manage\"`,\n`\"okta.users.read\"`,\n`\"okta.users.userprofile.manage\"`,\n`\"okta.workflows.invoke\"`.,\n"
                }
            },
            "required": [
                "description",
                "label"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A human-readable description of the new Role.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The name given to the new Role.\n",
                    "willReplaceOnChanges": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The permissions that the new Role grants. At least one\npermission must be specified when creating custom role. Valid values: `\"okta.authzServers.manage\"`,\n`\"okta.authzServers.read\"`,\n`\"okta.apps.assignment.manage\"`,\n`\"okta.apps.manage\"`,\n`\"okta.apps.read\"`,\n`\"okta.customizations.manage\"`,\n`\"okta.customizations.read\"`,\n`\"okta.groups.appAssignment.manage\"`,\n`\"okta.groups.create\"`,\n`\"okta.groups.manage\"`,\n`\"okta.groups.members.manage\"`,\n`\"okta.groups.read\"`,\n`\"okta.profilesources.import.run\"`,\n`\"okta.users.appAssignment.manage\"`,\n`\"okta.users.create\"`,\n`\"okta.users.credentials.expirePassword\"`,\n`\"okta.users.credentials.manage\"`,\n`\"okta.users.credentials.resetFactors\"`,\n`\"okta.users.credentials.resetPassword\"`,\n`\"okta.users.groupMembership.manage\"`,\n`\"okta.users.lifecycle.activate\"`,\n`\"okta.users.lifecycle.clearSessions\"`,\n`\"okta.users.lifecycle.deactivate\"`,\n`\"okta.users.lifecycle.delete\"`,\n`\"okta.users.lifecycle.manage\"`,\n`\"okta.users.lifecycle.suspend\"`,\n`\"okta.users.lifecycle.unlock\"`,\n`\"okta.users.lifecycle.unsuspend\"`,\n`\"okta.users.manage\"`,\n`\"okta.users.read\"`,\n`\"okta.users.userprofile.manage\"`,\n`\"okta.workflows.invoke\"`.,\n"
                }
            },
            "requiredInputs": [
                "description",
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AdminRoleCustom resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A human-readable description of the new Role.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The name given to the new Role.\n",
                        "willReplaceOnChanges": true
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The permissions that the new Role grants. At least one\npermission must be specified when creating custom role. Valid values: `\"okta.authzServers.manage\"`,\n`\"okta.authzServers.read\"`,\n`\"okta.apps.assignment.manage\"`,\n`\"okta.apps.manage\"`,\n`\"okta.apps.read\"`,\n`\"okta.customizations.manage\"`,\n`\"okta.customizations.read\"`,\n`\"okta.groups.appAssignment.manage\"`,\n`\"okta.groups.create\"`,\n`\"okta.groups.manage\"`,\n`\"okta.groups.members.manage\"`,\n`\"okta.groups.read\"`,\n`\"okta.profilesources.import.run\"`,\n`\"okta.users.appAssignment.manage\"`,\n`\"okta.users.create\"`,\n`\"okta.users.credentials.expirePassword\"`,\n`\"okta.users.credentials.manage\"`,\n`\"okta.users.credentials.resetFactors\"`,\n`\"okta.users.credentials.resetPassword\"`,\n`\"okta.users.groupMembership.manage\"`,\n`\"okta.users.lifecycle.activate\"`,\n`\"okta.users.lifecycle.clearSessions\"`,\n`\"okta.users.lifecycle.deactivate\"`,\n`\"okta.users.lifecycle.delete\"`,\n`\"okta.users.lifecycle.manage\"`,\n`\"okta.users.lifecycle.suspend\"`,\n`\"okta.users.lifecycle.unlock\"`,\n`\"okta.users.lifecycle.unsuspend\"`,\n`\"okta.users.manage\"`,\n`\"okta.users.read\"`,\n`\"okta.users.userprofile.manage\"`,\n`\"okta.workflows.invoke\"`.,\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/adminRoleCustomAssignments:AdminRoleCustomAssignments": {
            "description": "This resource allows the assignment and unassignment of Custom Roles. The `members` field supports these type of resources:\n - Groups\n - Users\n\n\u003e **NOTE:** This an `Early Access` feature.\n\n\n## Import\n\nOkta Custom Admin Role Assignments can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/adminRoleCustomAssignments:AdminRoleCustomAssignments example \u0026#60;resource_set_id\u0026#62;/\u0026#60;custom_role_id\u0026#62;\n```\n\n ",
            "properties": {
                "customRoleId": {
                    "type": "string",
                    "description": "ID of the Custom Role.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The hrefs that point to User(s) and/or Group(s) that receive the Role. At least one\npermission must be specified when creating custom role.\n"
                },
                "resourceSetId": {
                    "type": "string",
                    "description": "ID of the target Resource Set.\n"
                }
            },
            "required": [
                "customRoleId",
                "resourceSetId"
            ],
            "inputProperties": {
                "customRoleId": {
                    "type": "string",
                    "description": "ID of the Custom Role.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The hrefs that point to User(s) and/or Group(s) that receive the Role. At least one\npermission must be specified when creating custom role.\n"
                },
                "resourceSetId": {
                    "type": "string",
                    "description": "ID of the target Resource Set.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "customRoleId",
                "resourceSetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AdminRoleCustomAssignments resources.\n",
                "properties": {
                    "customRoleId": {
                        "type": "string",
                        "description": "ID of the Custom Role.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The hrefs that point to User(s) and/or Group(s) that receive the Role. At least one\npermission must be specified when creating custom role.\n"
                    },
                    "resourceSetId": {
                        "type": "string",
                        "description": "ID of the target Resource Set.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/adminRoleTargets:AdminRoleTargets": {
            "description": "Manages targets for administrator roles.\n\nThis resource allows you to define permissions for admin roles into a smaller subset of Groups or Apps within your org.\nYou can define admin roles to target Groups, Applications, and Application Instances.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AdminRoleTargets(\"example\", {\n    apps: [\n        \"oidc_client.\u003capp_id\u003e\",\n        \"facebook\",\n    ],\n    roleType: \"APP_ADMIN\",\n    userId: \"\u003cuser_id\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AdminRoleTargets(\"example\",\n    apps=[\n        \"oidc_client.\u003capp_id\u003e\",\n        \"facebook\",\n    ],\n    role_type=\"APP_ADMIN\",\n    user_id=\"\u003cuser_id\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AdminRoleTargets(\"example\", new()\n    {\n        Apps = new[]\n        {\n            \"oidc_client.\u003capp_id\u003e\",\n            \"facebook\",\n        },\n        RoleType = \"APP_ADMIN\",\n        UserId = \"\u003cuser_id\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAdminRoleTargets(ctx, \"example\", \u0026okta.AdminRoleTargetsArgs{\n\t\t\tApps: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"oidc_client.\u003capp_id\u003e\"),\n\t\t\t\tpulumi.String(\"facebook\"),\n\t\t\t},\n\t\t\tRoleType: pulumi.String(\"APP_ADMIN\"),\n\t\t\tUserId:   pulumi.String(\"\u003cuser_id\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AdminRoleTargets;\nimport com.pulumi.okta.AdminRoleTargetsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AdminRoleTargets(\"example\", AdminRoleTargetsArgs.builder()        \n            .apps(            \n                \"oidc_client.\u003capp_id\u003e\",\n                \"facebook\")\n            .roleType(\"APP_ADMIN\")\n            .userId(\"\u003cuser_id\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AdminRoleTargets\n    properties:\n      apps:\n        - oidc_client.\u003capp_id\u003e\n        - facebook\n      roleType: APP_ADMIN\n      userId: \u003cuser_id\u003e\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta Admin Role Targets can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/adminRoleTargets:AdminRoleTargets example \u0026#60;user id\u0026#62;/\u0026#60;role type\u0026#62;\n```\n\n ",
            "properties": {
                "apps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of app names (name represents set of app instances) or a combination of app name and app instance ID (like 'salesforce' or 'facebook.0oapsqQ6dv19pqyEo0g3').\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of group IDs. Conflicts with `apps`.\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "Role ID.\n"
                },
                "roleType": {
                    "type": "string",
                    "description": "Name of the role associated with the user. See [API Docs](https://developer.okta.com/docs/reference/api/roles/#role-types).\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user.\n"
                }
            },
            "required": [
                "roleId",
                "roleType",
                "userId"
            ],
            "inputProperties": {
                "apps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of app names (name represents set of app instances) or a combination of app name and app instance ID (like 'salesforce' or 'facebook.0oapsqQ6dv19pqyEo0g3').\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of group IDs. Conflicts with `apps`.\n"
                },
                "roleType": {
                    "type": "string",
                    "description": "Name of the role associated with the user. See [API Docs](https://developer.okta.com/docs/reference/api/roles/#role-types).\n",
                    "willReplaceOnChanges": true
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "roleType",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AdminRoleTargets resources.\n",
                "properties": {
                    "apps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of app names (name represents set of app instances) or a combination of app name and app instance ID (like 'salesforce' or 'facebook.0oapsqQ6dv19pqyEo0g3').\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of group IDs. Conflicts with `apps`.\n"
                    },
                    "roleId": {
                        "type": "string",
                        "description": "Role ID.\n"
                    },
                    "roleType": {
                        "type": "string",
                        "description": "Name of the role associated with the user. See [API Docs](https://developer.okta.com/docs/reference/api/roles/#role-types).\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of the user.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appGroupAssignments:AppGroupAssignments": {
            "description": "Assigns groups to an application.\n\nThis resource allows you to create multiple App Group assignments.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AppGroupAssignments(\"example\", {\n    appId: \"\u003capp id\u003e\",\n    groups: [\n        {\n            id: \"\u003cgroup id\u003e\",\n            priority: 1,\n        },\n        {\n            id: \"\u003canother group id\u003e\",\n            priority: 2,\n            profile: JSON.stringify({\n                \"application profile field\": \"application profile value\",\n            }),\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_okta as okta\n\nexample = okta.AppGroupAssignments(\"example\",\n    app_id=\"\u003capp id\u003e\",\n    groups=[\n        okta.AppGroupAssignmentsGroupArgs(\n            id=\"\u003cgroup id\u003e\",\n            priority=1,\n        ),\n        okta.AppGroupAssignmentsGroupArgs(\n            id=\"\u003canother group id\u003e\",\n            priority=2,\n            profile=json.dumps({\n                \"application profile field\": \"application profile value\",\n            }),\n        ),\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AppGroupAssignments(\"example\", new()\n    {\n        AppId = \"\u003capp id\u003e\",\n        Groups = new[]\n        {\n            new Okta.Inputs.AppGroupAssignmentsGroupArgs\n            {\n                Id = \"\u003cgroup id\u003e\",\n                Priority = 1,\n            },\n            new Okta.Inputs.AppGroupAssignmentsGroupArgs\n            {\n                Id = \"\u003canother group id\u003e\",\n                Priority = 2,\n                Profile = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"application profile field\"] = \"application profile value\",\n                }),\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"application profile field\": \"application profile value\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = okta.NewAppGroupAssignments(ctx, \"example\", \u0026okta.AppGroupAssignmentsArgs{\n\t\t\tAppId: pulumi.String(\"\u003capp id\u003e\"),\n\t\t\tGroups: okta.AppGroupAssignmentsGroupArray{\n\t\t\t\t\u0026okta.AppGroupAssignmentsGroupArgs{\n\t\t\t\t\tId:       pulumi.String(\"\u003cgroup id\u003e\"),\n\t\t\t\t\tPriority: pulumi.Int(1),\n\t\t\t\t},\n\t\t\t\t\u0026okta.AppGroupAssignmentsGroupArgs{\n\t\t\t\t\tId:       pulumi.String(\"\u003canother group id\u003e\"),\n\t\t\t\t\tPriority: pulumi.Int(2),\n\t\t\t\t\tProfile:  pulumi.String(json0),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AppGroupAssignments;\nimport com.pulumi.okta.AppGroupAssignmentsArgs;\nimport com.pulumi.okta.inputs.AppGroupAssignmentsGroupArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AppGroupAssignments(\"example\", AppGroupAssignmentsArgs.builder()        \n            .appId(\"\u003capp id\u003e\")\n            .groups(            \n                AppGroupAssignmentsGroupArgs.builder()\n                    .id(\"\u003cgroup id\u003e\")\n                    .priority(1)\n                    .build(),\n                AppGroupAssignmentsGroupArgs.builder()\n                    .id(\"\u003canother group id\u003e\")\n                    .priority(2)\n                    .profile(serializeJson(\n                        jsonObject(\n                            jsonProperty(\"application profile field\", \"application profile value\")\n                        )))\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AppGroupAssignments\n    properties:\n      appId: \u003capp id\u003e\n      groups:\n        - id: \u003cgroup id\u003e\n          priority: 1\n        - id: \u003canother group id\u003e\n          priority: 2\n          profile:\n            fn::toJSON:\n              application profile field: application profile value\n```\n\n!\u003e **NOTE** It would seem that setting/updating base/custom group schema values\nwas the original purpose for setting a `profile` JSON value during the [Assign\ngroup to\napplication](https://developer.okta.com/docs/reference/api/apps/#assign-group-to-application)\nAPI call that will take place when the `priority` value is changed. We couldn't\nverify this works when writing a new integration test against this old feature\nand were receiving an API 400 error. This feature may work for older orgs, or\nclassic orgs, but we can not guarantee for all orgs.\n\n!\u003e **NOTE** When using this resource in conjunction with other application\nresources (e.g. `okta.app.OAuth`) it is advisable to add the following\n`lifecycle` argument to the associated `app_*` resources to prevent the groups\nbeing unassigned on subsequent runs:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst app = new okta.app.OAuth(\"app\", {});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\napp = okta.app.OAuth(\"app\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var app = new Okta.App.OAuth(\"app\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewOAuth(ctx, \"app\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.OAuth;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var app = new OAuth(\"app\");\n\n    }\n}\n```\n```yaml\nresources:\n  app:\n    type: okta:app:OAuth\n```\n\n\u003e **IMPORTANT:** When using `okta.AppGroupAssignments` it is expected to manage ALL group assignments for the target application.\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn application's group assignments can be imported via `app_id`.\n\n```sh\n $ pulumi import okta:index/appGroupAssignments:AppGroupAssignments example \u0026#60;app_id\u0026#62;\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The ID of the application to assign a group to.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppGroupAssignmentsGroup:AppGroupAssignmentsGroup"
                    },
                    "description": "A group to assign the app to.\n"
                }
            },
            "required": [
                "appId",
                "groups"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The ID of the application to assign a group to.\n",
                    "willReplaceOnChanges": true
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppGroupAssignmentsGroup:AppGroupAssignmentsGroup"
                    },
                    "description": "A group to assign the app to.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "groups"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppGroupAssignments resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The ID of the application to assign a group to.\n",
                        "willReplaceOnChanges": true
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/AppGroupAssignmentsGroup:AppGroupAssignmentsGroup"
                        },
                        "description": "A group to assign the app to.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appOauthApiScope:AppOauthApiScope": {
            "description": "Manages API scopes for OAuth applications.\n\nThis resource allows you to grant or revoke API scopes for OAuth2 applications within your organization.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AppOauthApiScope(\"example\", {\n    appId: \"\u003capplication_id\u003e\",\n    issuer: \"\u003cyour org domain\u003e\",\n    scopes: [\n        \"okta.users.read\",\n        \"okta.users.manage\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AppOauthApiScope(\"example\",\n    app_id=\"\u003capplication_id\u003e\",\n    issuer=\"\u003cyour org domain\u003e\",\n    scopes=[\n        \"okta.users.read\",\n        \"okta.users.manage\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AppOauthApiScope(\"example\", new()\n    {\n        AppId = \"\u003capplication_id\u003e\",\n        Issuer = \"\u003cyour org domain\u003e\",\n        Scopes = new[]\n        {\n            \"okta.users.read\",\n            \"okta.users.manage\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAppOauthApiScope(ctx, \"example\", \u0026okta.AppOauthApiScopeArgs{\n\t\t\tAppId:  pulumi.String(\"\u003capplication_id\u003e\"),\n\t\t\tIssuer: pulumi.String(\"\u003cyour org domain\u003e\"),\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"okta.users.read\"),\n\t\t\t\tpulumi.String(\"okta.users.manage\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AppOauthApiScope;\nimport com.pulumi.okta.AppOauthApiScopeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AppOauthApiScope(\"example\", AppOauthApiScopeArgs.builder()        \n            .appId(\"\u003capplication_id\u003e\")\n            .issuer(\"\u003cyour org domain\u003e\")\n            .scopes(            \n                \"okta.users.read\",\n                \"okta.users.manage\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AppOauthApiScope\n    properties:\n      appId: \u003capplication_id\u003e\n      issuer: \u003cyour org domain\u003e\n      scopes:\n        - okta.users.read\n        - okta.users.manage\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOAuth API scopes can be imported via the Okta Application ID.\n\n```sh\n $ pulumi import okta:index/appOauthApiScope:AppOauthApiScope example \u0026#60;app id\u0026#62;\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "ID of the application.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The issuer of your Org Authorization Server, your Org URL.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of scopes for which consent is granted.\n"
                }
            },
            "required": [
                "appId",
                "issuer",
                "scopes"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "ID of the application.\n",
                    "willReplaceOnChanges": true
                },
                "issuer": {
                    "type": "string",
                    "description": "The issuer of your Org Authorization Server, your Org URL.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of scopes for which consent is granted.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "issuer",
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppOauthApiScope resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "ID of the application.\n",
                        "willReplaceOnChanges": true
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The issuer of your Org Authorization Server, your Org URL.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of scopes for which consent is granted.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appSamlAppSettings:AppSamlAppSettings": {
            "description": "This resource allows you to manage app settings of the SAML Application . It's basically the same as\n`app_settings_json` field in `okta.app.Saml` resource and can be used in cases where settings require to be managed separately.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst testSaml = new okta.app.Saml(\"testSaml\", {\n    preconfiguredApp: \"amazon_aws\",\n    label: \"Amazon AWS\",\n    status: \"ACTIVE\",\n});\nconst testAppSamlAppSettings = new okta.AppSamlAppSettings(\"testAppSamlAppSettings\", {\n    appId: testSaml.id,\n    settings: JSON.stringify({\n        appFilter: \"okta\",\n        awsEnvironmentType: \"aws.amazon\",\n        groupFilter: \"aws_(?{{accountid}}\\\\\\\\d+)_(?{{role}}[a-zA-Z0-9+=,.@\\\\\\\\-_]+)\",\n        joinAllRoles: false,\n        loginURL: \"https://console.aws.amazon.com/ec2/home\",\n        roleValuePattern: \"arn:aws:iam::${accountid}:saml-provider/OKTA,arn:aws:iam::${accountid}:role/${role}\",\n        sessionDuration: 3200,\n        useGroupMapping: false,\n    }),\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_okta as okta\n\ntest_saml = okta.app.Saml(\"testSaml\",\n    preconfigured_app=\"amazon_aws\",\n    label=\"Amazon AWS\",\n    status=\"ACTIVE\")\ntest_app_saml_app_settings = okta.AppSamlAppSettings(\"testAppSamlAppSettings\",\n    app_id=test_saml.id,\n    settings=json.dumps({\n        \"appFilter\": \"okta\",\n        \"awsEnvironmentType\": \"aws.amazon\",\n        \"groupFilter\": \"aws_(?{{accountid}}\\\\\\\\d+)_(?{{role}}[a-zA-Z0-9+=,.@\\\\\\\\-_]+)\",\n        \"joinAllRoles\": False,\n        \"loginURL\": \"https://console.aws.amazon.com/ec2/home\",\n        \"roleValuePattern\": \"arn:aws:iam::${accountid}:saml-provider/OKTA,arn:aws:iam::${accountid}:role/${role}\",\n        \"sessionDuration\": 3200,\n        \"useGroupMapping\": False,\n    }))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testSaml = new Okta.App.Saml(\"testSaml\", new()\n    {\n        PreconfiguredApp = \"amazon_aws\",\n        Label = \"Amazon AWS\",\n        Status = \"ACTIVE\",\n    });\n\n    var testAppSamlAppSettings = new Okta.AppSamlAppSettings(\"testAppSamlAppSettings\", new()\n    {\n        AppId = testSaml.Id,\n        Settings = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"appFilter\"] = \"okta\",\n            [\"awsEnvironmentType\"] = \"aws.amazon\",\n            [\"groupFilter\"] = \"aws_(?{{accountid}}\\\\\\\\d+)_(?{{role}}[a-zA-Z0-9+=,.@\\\\\\\\-_]+)\",\n            [\"joinAllRoles\"] = false,\n            [\"loginURL\"] = \"https://console.aws.amazon.com/ec2/home\",\n            [\"roleValuePattern\"] = \"arn:aws:iam::${accountid}:saml-provider/OKTA,arn:aws:iam::${accountid}:role/${role}\",\n            [\"sessionDuration\"] = 3200,\n            [\"useGroupMapping\"] = false,\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestSaml, err := app.NewSaml(ctx, \"testSaml\", \u0026app.SamlArgs{\n\t\t\tPreconfiguredApp: pulumi.String(\"amazon_aws\"),\n\t\t\tLabel:            pulumi.String(\"Amazon AWS\"),\n\t\t\tStatus:           pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"appFilter\":          \"okta\",\n\t\t\t\"awsEnvironmentType\": \"aws.amazon\",\n\t\t\t\"groupFilter\":        \"aws_(?{{accountid}}\\\\\\\\d+)_(?{{role}}[a-zA-Z0-9+=,.@\\\\\\\\-_]+)\",\n\t\t\t\"joinAllRoles\":       false,\n\t\t\t\"loginURL\":           \"https://console.aws.amazon.com/ec2/home\",\n\t\t\t\"roleValuePattern\":   \"arn:aws:iam::${accountid}:saml-provider/OKTA,arn:aws:iam::${accountid}:role/${role}\",\n\t\t\t\"sessionDuration\":    3200,\n\t\t\t\"useGroupMapping\":    false,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = okta.NewAppSamlAppSettings(ctx, \"testAppSamlAppSettings\", \u0026okta.AppSamlAppSettingsArgs{\n\t\t\tAppId:    testSaml.ID(),\n\t\t\tSettings: pulumi.String(json0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.Saml;\nimport com.pulumi.okta.app.SamlArgs;\nimport com.pulumi.okta.AppSamlAppSettings;\nimport com.pulumi.okta.AppSamlAppSettingsArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testSaml = new Saml(\"testSaml\", SamlArgs.builder()        \n            .preconfiguredApp(\"amazon_aws\")\n            .label(\"Amazon AWS\")\n            .status(\"ACTIVE\")\n            .build());\n\n        var testAppSamlAppSettings = new AppSamlAppSettings(\"testAppSamlAppSettings\", AppSamlAppSettingsArgs.builder()        \n            .appId(testSaml.id())\n            .settings(serializeJson(\n                jsonObject(\n                    jsonProperty(\"appFilter\", \"okta\"),\n                    jsonProperty(\"awsEnvironmentType\", \"aws.amazon\"),\n                    jsonProperty(\"groupFilter\", \"aws_(?{{accountid}}\\\\\\\\d+)_(?{{role}}[a-zA-Z0-9+=,.@\\\\\\\\-_]+)\"),\n                    jsonProperty(\"joinAllRoles\", false),\n                    jsonProperty(\"loginURL\", \"https://console.aws.amazon.com/ec2/home\"),\n                    jsonProperty(\"roleValuePattern\", \"arn:aws:iam::${accountid}:saml-provider/OKTA,arn:aws:iam::${accountid}:role/${role}\"),\n                    jsonProperty(\"sessionDuration\", 3200),\n                    jsonProperty(\"useGroupMapping\", false)\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testSaml:\n    type: okta:app:Saml\n    properties:\n      preconfiguredApp: amazon_aws\n      label: Amazon AWS\n      status: ACTIVE\n  testAppSamlAppSettings:\n    type: okta:AppSamlAppSettings\n    properties:\n      appId: ${testSaml.id}\n      settings:\n        fn::toJSON:\n          appFilter: okta\n          awsEnvironmentType: aws.amazon\n          groupFilter: aws_(?{{accountid}}\\\\d+)_(?{{role}}[a-zA-Z0-9+=,.@\\\\-_]+)\n          joinAllRoles: false\n          loginURL: https://console.aws.amazon.com/ec2/home\n          roleValuePattern: arn:aws:iam::${accountid}:saml-provider/OKTA,arn:aws:iam::${accountid}:role/${role}\n          sessionDuration: 3200\n          useGroupMapping: false\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA settings for the SAML App can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/appSamlAppSettings:AppSamlAppSettings example \u0026#60;app id\u0026#62;\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "ID of the application.\n"
                },
                "settings": {
                    "type": "string",
                    "description": "Application settings in JSON format.\n"
                }
            },
            "required": [
                "appId",
                "settings"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "ID of the application.\n",
                    "willReplaceOnChanges": true
                },
                "settings": {
                    "type": "string",
                    "description": "Application settings in JSON format.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "settings"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSamlAppSettings resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "ID of the application.\n",
                        "willReplaceOnChanges": true
                    },
                    "settings": {
                        "type": "string",
                        "description": "Application settings in JSON format.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appSharedCredentials:AppSharedCredentials": {
            "description": "This resource allows you to create and configure SWA shared credentials app.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AppSharedCredentials(\"example\", {\n    accessibilityErrorRedirectUrl: \"https://example.com/redirect_url_1\",\n    accessibilityLoginRedirectUrl: \"https://example.com/redirect_url_2\",\n    accessibilitySelfService: true,\n    autoSubmitToolbar: true,\n    buttonField: \"btn-login\",\n    checkbox: \"checkbox_red\",\n    hideIos: true,\n    label: \"Example App\",\n    passwordField: \"txtbox-password\",\n    redirectUrl: \"https://example.com/redirect_url\",\n    sharedPassword: \"sharedpass\",\n    sharedUsername: \"sharedusername\",\n    status: \"ACTIVE\",\n    url: \"https://example.com/login.html\",\n    userNameTemplate: \"user.firstName\",\n    userNameTemplateSuffix: \"hello\",\n    userNameTemplateType: \"CUSTOM\",\n    usernameField: \"txtbox-username\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AppSharedCredentials(\"example\",\n    accessibility_error_redirect_url=\"https://example.com/redirect_url_1\",\n    accessibility_login_redirect_url=\"https://example.com/redirect_url_2\",\n    accessibility_self_service=True,\n    auto_submit_toolbar=True,\n    button_field=\"btn-login\",\n    checkbox=\"checkbox_red\",\n    hide_ios=True,\n    label=\"Example App\",\n    password_field=\"txtbox-password\",\n    redirect_url=\"https://example.com/redirect_url\",\n    shared_password=\"sharedpass\",\n    shared_username=\"sharedusername\",\n    status=\"ACTIVE\",\n    url=\"https://example.com/login.html\",\n    user_name_template=\"user.firstName\",\n    user_name_template_suffix=\"hello\",\n    user_name_template_type=\"CUSTOM\",\n    username_field=\"txtbox-username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AppSharedCredentials(\"example\", new()\n    {\n        AccessibilityErrorRedirectUrl = \"https://example.com/redirect_url_1\",\n        AccessibilityLoginRedirectUrl = \"https://example.com/redirect_url_2\",\n        AccessibilitySelfService = true,\n        AutoSubmitToolbar = true,\n        ButtonField = \"btn-login\",\n        Checkbox = \"checkbox_red\",\n        HideIos = true,\n        Label = \"Example App\",\n        PasswordField = \"txtbox-password\",\n        RedirectUrl = \"https://example.com/redirect_url\",\n        SharedPassword = \"sharedpass\",\n        SharedUsername = \"sharedusername\",\n        Status = \"ACTIVE\",\n        Url = \"https://example.com/login.html\",\n        UserNameTemplate = \"user.firstName\",\n        UserNameTemplateSuffix = \"hello\",\n        UserNameTemplateType = \"CUSTOM\",\n        UsernameField = \"txtbox-username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAppSharedCredentials(ctx, \"example\", \u0026okta.AppSharedCredentialsArgs{\n\t\t\tAccessibilityErrorRedirectUrl: pulumi.String(\"https://example.com/redirect_url_1\"),\n\t\t\tAccessibilityLoginRedirectUrl: pulumi.String(\"https://example.com/redirect_url_2\"),\n\t\t\tAccessibilitySelfService:      pulumi.Bool(true),\n\t\t\tAutoSubmitToolbar:             pulumi.Bool(true),\n\t\t\tButtonField:                   pulumi.String(\"btn-login\"),\n\t\t\tCheckbox:                      pulumi.String(\"checkbox_red\"),\n\t\t\tHideIos:                       pulumi.Bool(true),\n\t\t\tLabel:                         pulumi.String(\"Example App\"),\n\t\t\tPasswordField:                 pulumi.String(\"txtbox-password\"),\n\t\t\tRedirectUrl:                   pulumi.String(\"https://example.com/redirect_url\"),\n\t\t\tSharedPassword:                pulumi.String(\"sharedpass\"),\n\t\t\tSharedUsername:                pulumi.String(\"sharedusername\"),\n\t\t\tStatus:                        pulumi.String(\"ACTIVE\"),\n\t\t\tUrl:                           pulumi.String(\"https://example.com/login.html\"),\n\t\t\tUserNameTemplate:              pulumi.String(\"user.firstName\"),\n\t\t\tUserNameTemplateSuffix:        pulumi.String(\"hello\"),\n\t\t\tUserNameTemplateType:          pulumi.String(\"CUSTOM\"),\n\t\t\tUsernameField:                 pulumi.String(\"txtbox-username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AppSharedCredentials;\nimport com.pulumi.okta.AppSharedCredentialsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AppSharedCredentials(\"example\", AppSharedCredentialsArgs.builder()        \n            .accessibilityErrorRedirectUrl(\"https://example.com/redirect_url_1\")\n            .accessibilityLoginRedirectUrl(\"https://example.com/redirect_url_2\")\n            .accessibilitySelfService(true)\n            .autoSubmitToolbar(true)\n            .buttonField(\"btn-login\")\n            .checkbox(\"checkbox_red\")\n            .hideIos(true)\n            .label(\"Example App\")\n            .passwordField(\"txtbox-password\")\n            .redirectUrl(\"https://example.com/redirect_url\")\n            .sharedPassword(\"sharedpass\")\n            .sharedUsername(\"sharedusername\")\n            .status(\"ACTIVE\")\n            .url(\"https://example.com/login.html\")\n            .userNameTemplate(\"user.firstName\")\n            .userNameTemplateSuffix(\"hello\")\n            .userNameTemplateType(\"CUSTOM\")\n            .usernameField(\"txtbox-username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AppSharedCredentials\n    properties:\n      accessibilityErrorRedirectUrl: https://example.com/redirect_url_1\n      accessibilityLoginRedirectUrl: https://example.com/redirect_url_2\n      accessibilitySelfService: true\n      autoSubmitToolbar: true\n      buttonField: btn-login\n      checkbox: checkbox_red\n      hideIos: true\n      label: Example App\n      passwordField: txtbox-password\n      redirectUrl: https://example.com/redirect_url\n      sharedPassword: sharedpass\n      sharedUsername: sharedusername\n      status: ACTIVE\n      url: https://example.com/login.html\n      userNameTemplate: user.firstName\n      userNameTemplateSuffix: hello\n      userNameTemplateType: CUSTOM\n      usernameField: txtbox-username\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta SWA Shared Credentials App can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/appSharedCredentials:AppSharedCredentials example \u0026#60;app id\u0026#62;\n```\n\n ",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "buttonField": {
                    "type": "string",
                    "description": "CSS selector for the Sign-In button in the sign-in form.\n"
                },
                "checkbox": {
                    "type": "string",
                    "description": "CSS selector for the checkbox.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Direct link of application logo.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name assigned to the application by Okta.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "CSS selector for the Password field in the sign-in form.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "name of application from the Okta Integration Network, if not included a custom app will be created.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "Redirect URL. If going to the login page URL redirects to another page, then enter that URL here.\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Authentication mode of app.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the sign-in page for this app.\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regular expression that further restricts url to the specified regular expression.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `\"${source.login}\"`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "CSS selector for the username field.\n"
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "signOnMode"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL.\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page for this application.\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self-service. By default, it is `false`.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar.\n"
                },
                "buttonField": {
                    "type": "string",
                    "description": "CSS selector for the Sign-In button in the sign-in form.\n"
                },
                "checkbox": {
                    "type": "string",
                    "description": "CSS selector for the checkbox.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app.\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "CSS selector for the Password field in the sign-in form.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "name of application from the Okta Integration Network, if not included a custom app will be created.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "Redirect URL. If going to the login page URL redirects to another page, then enter that URL here.\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the sign-in page for this app.\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regular expression that further restricts url to the specified regular expression.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `\"${source.login}\"`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix.\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "CSS selector for the username field.\n"
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSharedCredentials resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page for this application.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service. By default, it is `false`.\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "buttonField": {
                        "type": "string",
                        "description": "CSS selector for the Sign-In button in the sign-in form.\n"
                    },
                    "checkbox": {
                        "type": "string",
                        "description": "CSS selector for the checkbox.\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Direct link of application logo.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name assigned to the application by Okta.\n"
                    },
                    "passwordField": {
                        "type": "string",
                        "description": "CSS selector for the Password field in the sign-in form.\n"
                    },
                    "preconfiguredApp": {
                        "type": "string",
                        "description": "name of application from the Okta Integration Network, if not included a custom app will be created.\n"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "description": "Redirect URL. If going to the login page URL redirects to another page, then enter that URL here.\n"
                    },
                    "sharedPassword": {
                        "type": "string",
                        "description": "Shared password, required for certain schemes.\n"
                    },
                    "sharedUsername": {
                        "type": "string",
                        "description": "Shared username, required for certain schemes.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Authentication mode of app.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the application, by default, it is `\"ACTIVE\"`.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the sign-in page for this app.\n"
                    },
                    "urlRegex": {
                        "type": "string",
                        "description": "A regular expression that further restricts url to the specified regular expression.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default: `\"${source.login}\"`\n"
                    },
                    "userNameTemplatePushStatus": {
                        "type": "string",
                        "description": "Push username on update. Valid values: `\"PUSH\"` and `\"DONT_PUSH\"`.\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix.\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default: `\"BUILT_IN\"`.\n"
                    },
                    "usernameField": {
                        "type": "string",
                        "description": "CSS selector for the username field.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appSignonPolicy:AppSignonPolicy": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst myAppPolicy = new okta.AppSignonPolicy(\"myAppPolicy\", {description: \"Authentication Policy to be used on my app.\"});\nconst myApp = new okta.app.OAuth(\"myApp\", {\n    label: \"My App\",\n    type: \"web\",\n    grantTypes: [\"authorization_code\"],\n    redirectUris: [\"http://localhost:3000\"],\n    postLogoutRedirectUris: [\"http://localhost:3000\"],\n    responseTypes: [\"code\"],\n    authenticationPolicy: myAppPolicy.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nmy_app_policy = okta.AppSignonPolicy(\"myAppPolicy\", description=\"Authentication Policy to be used on my app.\")\nmy_app = okta.app.OAuth(\"myApp\",\n    label=\"My App\",\n    type=\"web\",\n    grant_types=[\"authorization_code\"],\n    redirect_uris=[\"http://localhost:3000\"],\n    post_logout_redirect_uris=[\"http://localhost:3000\"],\n    response_types=[\"code\"],\n    authentication_policy=my_app_policy.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myAppPolicy = new Okta.AppSignonPolicy(\"myAppPolicy\", new()\n    {\n        Description = \"Authentication Policy to be used on my app.\",\n    });\n\n    var myApp = new Okta.App.OAuth(\"myApp\", new()\n    {\n        Label = \"My App\",\n        Type = \"web\",\n        GrantTypes = new[]\n        {\n            \"authorization_code\",\n        },\n        RedirectUris = new[]\n        {\n            \"http://localhost:3000\",\n        },\n        PostLogoutRedirectUris = new[]\n        {\n            \"http://localhost:3000\",\n        },\n        ResponseTypes = new[]\n        {\n            \"code\",\n        },\n        AuthenticationPolicy = myAppPolicy.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyAppPolicy, err := okta.NewAppSignonPolicy(ctx, \"myAppPolicy\", \u0026okta.AppSignonPolicyArgs{\n\t\t\tDescription: pulumi.String(\"Authentication Policy to be used on my app.\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = app.NewOAuth(ctx, \"myApp\", \u0026app.OAuthArgs{\n\t\t\tLabel: pulumi.String(\"My App\"),\n\t\t\tType:  pulumi.String(\"web\"),\n\t\t\tGrantTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"authorization_code\"),\n\t\t\t},\n\t\t\tRedirectUris: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"http://localhost:3000\"),\n\t\t\t},\n\t\t\tPostLogoutRedirectUris: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"http://localhost:3000\"),\n\t\t\t},\n\t\t\tResponseTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"code\"),\n\t\t\t},\n\t\t\tAuthenticationPolicy: myAppPolicy.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AppSignonPolicy;\nimport com.pulumi.okta.AppSignonPolicyArgs;\nimport com.pulumi.okta.app.OAuth;\nimport com.pulumi.okta.app.OAuthArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myAppPolicy = new AppSignonPolicy(\"myAppPolicy\", AppSignonPolicyArgs.builder()        \n            .description(\"Authentication Policy to be used on my app.\")\n            .build());\n\n        var myApp = new OAuth(\"myApp\", OAuthArgs.builder()        \n            .label(\"My App\")\n            .type(\"web\")\n            .grantTypes(\"authorization_code\")\n            .redirectUris(\"http://localhost:3000\")\n            .postLogoutRedirectUris(\"http://localhost:3000\")\n            .responseTypes(\"code\")\n            .authenticationPolicy(myAppPolicy.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myApp:\n    type: okta:app:OAuth\n    properties:\n      label: My App\n      type: web\n      grantTypes:\n        - authorization_code\n      redirectUris:\n        - http://localhost:3000\n      postLogoutRedirectUris:\n        - http://localhost:3000\n      responseTypes:\n        - code\n      # this is needed to associate the application with the policy\n      authenticationPolicy: ${myAppPolicy.id}\n  myAppPolicy:\n    type: okta:AppSignonPolicy\n    properties:\n      description: Authentication Policy to be used on my app.\n```\n\nThe created policy can be extended using `app_signon_policy_rules`.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst myAppPolicy = new okta.AppSignonPolicy(\"myAppPolicy\", {description: \"Authentication Policy to be used on my app.\"});\nconst someRule = new okta.AppSignonPolicyRule(\"someRule\", {\n    policyId: resource.okta_app_signon_policy.my_app_policy.id,\n    factorMode: \"1FA\",\n    reAuthenticationFrequency: \"PT43800H\",\n    constraints: [JSON.stringify({\n        knowledge: {\n            types: [\"password\"],\n        },\n    })],\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_okta as okta\n\nmy_app_policy = okta.AppSignonPolicy(\"myAppPolicy\", description=\"Authentication Policy to be used on my app.\")\nsome_rule = okta.AppSignonPolicyRule(\"someRule\",\n    policy_id=resource[\"okta_app_signon_policy\"][\"my_app_policy\"][\"id\"],\n    factor_mode=\"1FA\",\n    re_authentication_frequency=\"PT43800H\",\n    constraints=[json.dumps({\n        \"knowledge\": {\n            \"types\": [\"password\"],\n        },\n    })])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myAppPolicy = new Okta.AppSignonPolicy(\"myAppPolicy\", new()\n    {\n        Description = \"Authentication Policy to be used on my app.\",\n    });\n\n    var someRule = new Okta.AppSignonPolicyRule(\"someRule\", new()\n    {\n        PolicyId = resource.Okta_app_signon_policy.My_app_policy.Id,\n        FactorMode = \"1FA\",\n        ReAuthenticationFrequency = \"PT43800H\",\n        Constraints = new[]\n        {\n            JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n            {\n                [\"knowledge\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"types\"] = new[]\n                    {\n                        \"password\",\n                    },\n                },\n            }),\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAppSignonPolicy(ctx, \"myAppPolicy\", \u0026okta.AppSignonPolicyArgs{\n\t\t\tDescription: pulumi.String(\"Authentication Policy to be used on my app.\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"knowledge\": map[string]interface{}{\n\t\t\t\t\"types\": []string{\n\t\t\t\t\t\"password\",\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = okta.NewAppSignonPolicyRule(ctx, \"someRule\", \u0026okta.AppSignonPolicyRuleArgs{\n\t\t\tPolicyId:                  pulumi.Any(resource.Okta_app_signon_policy.My_app_policy.Id),\n\t\t\tFactorMode:                pulumi.String(\"1FA\"),\n\t\t\tReAuthenticationFrequency: pulumi.String(\"PT43800H\"),\n\t\t\tConstraints: pulumi.StringArray{\n\t\t\t\tpulumi.String(json0),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AppSignonPolicy;\nimport com.pulumi.okta.AppSignonPolicyArgs;\nimport com.pulumi.okta.AppSignonPolicyRule;\nimport com.pulumi.okta.AppSignonPolicyRuleArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myAppPolicy = new AppSignonPolicy(\"myAppPolicy\", AppSignonPolicyArgs.builder()        \n            .description(\"Authentication Policy to be used on my app.\")\n            .build());\n\n        var someRule = new AppSignonPolicyRule(\"someRule\", AppSignonPolicyRuleArgs.builder()        \n            .policyId(resource.okta_app_signon_policy().my_app_policy().id())\n            .factorMode(\"1FA\")\n            .reAuthenticationFrequency(\"PT43800H\")\n            .constraints(serializeJson(\n                jsonObject(\n                    jsonProperty(\"knowledge\", jsonObject(\n                        jsonProperty(\"types\", jsonArray(\"password\"))\n                    ))\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myAppPolicy:\n    type: okta:AppSignonPolicy\n    properties:\n      description: Authentication Policy to be used on my app.\n  someRule:\n    type: okta:AppSignonPolicyRule\n    properties:\n      policyId: ${resource.okta_app_signon_policy.my_app_policy.id}\n      factorMode: 1FA\n      reAuthenticationFrequency: PT43800H\n      constraints:\n        - fn::toJSON:\n            knowledge:\n              types:\n                - password\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy.\n"
                }
            },
            "required": [
                "description",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy.\n"
                }
            },
            "requiredInputs": [
                "description"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSignonPolicy resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the policy.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appSignonPolicyRule:AppSignonPolicyRule": {
            "description": "\u003e **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.\n\nThis resource allows you to create and configure a sign-on policy rule for the application.\n\nA default or `Catch-all Rule` sign-on policy rule can be imported and managed as a custom rule.\nThe only difference is that these fields are immutable and can not be managed: `network_connection`, `network_excludes`, \n`network_includes`, `platform_include`, `custom_expression`, `device_is_registered`, `device_is_managed`, `users_excluded`,\n`users_included`, `groups_excluded`, `groups_included`, `user_types_excluded` and `user_types_included`.\n\n{{% examples %}}\n## Example Usage\n\n### Rule with Constraints\n{{% example %}}\n### Example 1:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.AppSignonPolicyRule(\"test\", {\n    policyId: data.okta_app_signon_policy.test.id,\n    constraints: [JSON.stringify({\n        knowledge: {\n            types: [\"password\"],\n        },\n    })],\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_okta as okta\n\ntest = okta.AppSignonPolicyRule(\"test\",\n    policy_id=data[\"okta_app_signon_policy\"][\"test\"][\"id\"],\n    constraints=[json.dumps({\n        \"knowledge\": {\n            \"types\": [\"password\"],\n        },\n    })])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Okta.AppSignonPolicyRule(\"test\", new()\n    {\n        PolicyId = data.Okta_app_signon_policy.Test.Id,\n        Constraints = new[]\n        {\n            JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n            {\n                [\"knowledge\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"types\"] = new[]\n                    {\n                        \"password\",\n                    },\n                },\n            }),\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"knowledge\": map[string]interface{}{\n\t\t\t\t\"types\": []string{\n\t\t\t\t\t\"password\",\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = okta.NewAppSignonPolicyRule(ctx, \"test\", \u0026okta.AppSignonPolicyRuleArgs{\n\t\t\tPolicyId: pulumi.Any(data.Okta_app_signon_policy.Test.Id),\n\t\t\tConstraints: pulumi.StringArray{\n\t\t\t\tpulumi.String(json0),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AppSignonPolicyRule;\nimport com.pulumi.okta.AppSignonPolicyRuleArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new AppSignonPolicyRule(\"test\", AppSignonPolicyRuleArgs.builder()        \n            .policyId(data.okta_app_signon_policy().test().id())\n            .constraints(serializeJson(\n                jsonObject(\n                    jsonProperty(\"knowledge\", jsonObject(\n                        jsonProperty(\"types\", jsonArray(\"password\"))\n                    ))\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: okta:AppSignonPolicyRule\n    properties:\n      policyId: ${data.okta_app_signon_policy.test.id}\n      constraints:\n        - fn::toJSON:\n            knowledge:\n              types:\n                - password\n```\n\nThis will create an app sign-on policy rule with the following `THEN` block:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n{{% /example %}}\n{{% example %}}\n### Example 2:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.AppSignonPolicyRule(\"test\", {\n    policyId: data.okta_app_signon_policy.test.id,\n    constraints: [JSON.stringify({\n        knowledge: {\n            reauthenticateIn: \"PT2H\",\n            types: [\"password\"],\n        },\n        possession: {\n            deviceBound: \"REQUIRED\",\n            hardwareProtection: \"REQUIRED\",\n        },\n    })],\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_okta as okta\n\ntest = okta.AppSignonPolicyRule(\"test\",\n    policy_id=data[\"okta_app_signon_policy\"][\"test\"][\"id\"],\n    constraints=[json.dumps({\n        \"knowledge\": {\n            \"reauthenticateIn\": \"PT2H\",\n            \"types\": [\"password\"],\n        },\n        \"possession\": {\n            \"deviceBound\": \"REQUIRED\",\n            \"hardwareProtection\": \"REQUIRED\",\n        },\n    })])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Okta.AppSignonPolicyRule(\"test\", new()\n    {\n        PolicyId = data.Okta_app_signon_policy.Test.Id,\n        Constraints = new[]\n        {\n            JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n            {\n                [\"knowledge\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"reauthenticateIn\"] = \"PT2H\",\n                    [\"types\"] = new[]\n                    {\n                        \"password\",\n                    },\n                },\n                [\"possession\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"deviceBound\"] = \"REQUIRED\",\n                    [\"hardwareProtection\"] = \"REQUIRED\",\n                },\n            }),\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"knowledge\": map[string]interface{}{\n\t\t\t\t\"reauthenticateIn\": \"PT2H\",\n\t\t\t\t\"types\": []string{\n\t\t\t\t\t\"password\",\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"possession\": map[string]interface{}{\n\t\t\t\t\"deviceBound\":        \"REQUIRED\",\n\t\t\t\t\"hardwareProtection\": \"REQUIRED\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = okta.NewAppSignonPolicyRule(ctx, \"test\", \u0026okta.AppSignonPolicyRuleArgs{\n\t\t\tPolicyId: pulumi.Any(data.Okta_app_signon_policy.Test.Id),\n\t\t\tConstraints: pulumi.StringArray{\n\t\t\t\tpulumi.String(json0),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AppSignonPolicyRule;\nimport com.pulumi.okta.AppSignonPolicyRuleArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new AppSignonPolicyRule(\"test\", AppSignonPolicyRuleArgs.builder()        \n            .policyId(data.okta_app_signon_policy().test().id())\n            .constraints(serializeJson(\n                jsonObject(\n                    jsonProperty(\"knowledge\", jsonObject(\n                        jsonProperty(\"reauthenticateIn\", \"PT2H\"),\n                        jsonProperty(\"types\", jsonArray(\"password\"))\n                    )),\n                    jsonProperty(\"possession\", jsonObject(\n                        jsonProperty(\"deviceBound\", \"REQUIRED\"),\n                        jsonProperty(\"hardwareProtection\", \"REQUIRED\")\n                    ))\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: okta:AppSignonPolicyRule\n    properties:\n      policyId: ${data.okta_app_signon_policy.test.id}\n      constraints:\n        - fn::toJSON:\n            knowledge:\n              reauthenticateIn: PT2H\n              types:\n                - password\n            possession:\n              deviceBound: REQUIRED\n              hardwareProtection: REQUIRED\n```\n\nThis will create an app sign-on policy rule with the following `THEN` block:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\nMore examples can be\nfound [here](https://developer.okta.com/docs/reference/api/policy/#verification-method-json-examples).\n{{% /example %}}\n{{% example %}}\n### Complex example\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst testSaml = new okta.app.Saml(\"testSaml\", {\n    label: \"testAcc_replace_with_uuid\",\n    ssoUrl: \"https://google.com\",\n    recipient: \"https://here.com\",\n    destination: \"https://its-about-the-journey.com\",\n    audience: \"https://audience.com\",\n    subjectNameIdTemplate: \"${user.userName}\",\n    subjectNameIdFormat: \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n    responseSigned: true,\n    signatureAlgorithm: \"RSA_SHA256\",\n    digestAlgorithm: \"SHA256\",\n    honorForceAuthn: false,\n    authnContextClassRef: \"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\",\n    singleLogoutIssuer: \"https://dunshire.okta.com\",\n    singleLogoutUrl: \"https://dunshire.okta.com/logout\",\n    singleLogoutCertificate: `MIIFnDCCA4QCCQDBSLbiON2T1zANBgkqhkiG9w0BAQsFADCBjzELMAkGA1UEBhMCVVMxDjAMBgNV\r\nBAgMBU1haW5lMRAwDgYDVQQHDAdDYXJpYm91MRcwFQYDVQQKDA5Tbm93bWFrZXJzIEluYzEUMBIG\r\nA1UECwwLRW5naW5lZXJpbmcxDTALBgNVBAMMBFNub3cxIDAeBgkqhkiG9w0BCQEWEWVtYWlsQGV4\r\nYW1wbGUuY29tMB4XDTIwMTIwMzIyNDY0M1oXDTMwMTIwMTIyNDY0M1owgY8xCzAJBgNVBAYTAlVT\r\nMQ4wDAYDVQQIDAVNYWluZTEQMA4GA1UEBwwHQ2FyaWJvdTEXMBUGA1UECgwOU25vd21ha2VycyBJ\r\nbmMxFDASBgNVBAsMC0VuZ2luZWVyaW5nMQ0wCwYDVQQDDARTbm93MSAwHgYJKoZIhvcNAQkBFhFl\r\nbWFpbEBleGFtcGxlLmNvbTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANMmWDjXPdoa\r\nPyzIENqeY9njLan2FqCbQPSestWUUcb6NhDsJVGSQ7XR+ozQA5TaJzbP7cAJUj8vCcbqMZsgOQAu\r\nO/pzYyQEKptLmrGvPn7xkJ1A1xLkp2NY18cpDTeUPueJUoidZ9EJwEuyUZIktzxNNU1pA1lGijiu\r\n2XNxs9d9JR/hm3tCu9Im8qLVB4JtX80YUa6QtlRjWR/H8a373AYCOASdoB3c57fIPD8ATDNy2w/c\r\nfCVGiyKDMFB+GA/WTsZpOP3iohRp8ltAncSuzypcztb2iE+jijtTsiC9kUA2abAJqqpoCJubNShi\r\nVff4822czpziS44MV2guC9wANi8u3Uyl5MKsU95j01jzadKRP5S+2f0K+n8n4UoV9fnqZFyuGAKd\r\nCJi9K6NlSAP+TgPe/JP9FOSuxQOHWJfmdLHdJD+evoKi9E55sr5lRFK0xU1Fj5Ld7zjC0pXPhtJf\r\nsgjEZzD433AsHnRzvRT1KSNCPkLYomznZo5n9rWYgCQ8HcytlQDTesmKE+s05E/VSWNtH84XdDrt\r\nieXwfwhHfaABSu+WjZYxi9CXdFCSvXhsgufUcK4FbYAHl/ga/cJxZc52yFC7Pcq0u9O2BSCjYPdQ\r\nDAHs9dhT1RhwVLM8RmoAzgxyyzau0gxnAlgSBD9FMW6dXqIHIp8yAAg9cRXhYRTNAgMBAAEwDQYJ\r\nKoZIhvcNAQELBQADggIBADofEC1SvG8qa7pmKCjB/E9Sxhk3mvUO9Gq43xzwVb721Ng3VYf4vGU3\r\nwLUwJeLt0wggnj26NJweN5T3q9T8UMxZhHSWvttEU3+S1nArRB0beti716HSlOCDx4wTmBu/D1MG\r\nt/kZYFJw+zuzvAcbYct2pK69AQhD8xAIbQvqADJI7cCK3yRry+aWtppc58P81KYabUlCfFXfhJ9E\r\nP72ffN4jVHpX3lxxYh7FKAdiKbY2FYzjsc7RdgKI1R3iAAZUCGBTvezNzaetGzTUjjl/g1tcVYij\r\nltH9ZOQBPlUMI88lxUxqgRTerpPmAJH00CACx4JFiZrweLM1trZyy06wNDQgLrqHr3EOagBF/O2h\r\nhfTehNdVr6iq3YhKWBo4/+RL0RCzHMh4u86VbDDnDn4Y6HzLuyIAtBFoikoKM6UHTOa0Pqv2bBr5\r\nwbkRkVUxl9yJJw/HmTCdfnsM9dTOJUKzEglnGF2184Gg+qJDZB6fSf0EAO1F6sTqiSswl+uHQZiy\r\nDaZzyU7Gg5seKOZ20zTRaX3Ihj9Zij/ORnrARE7eM/usKMECp+7syUwAUKxDCZkGiUdskmOhhBGL\r\nJtbyK3F2UvoJoLsm3pIcvMak9KwMjSTGJB47ABUP1+w+zGcNk0D5Co3IJ6QekiLfWJyQ+kKsWLKt\r\nzOYQQatrnBagM7MI2/T4\r\n`,\n    attributeStatements: [{\n        type: \"GROUP\",\n        name: \"groups\",\n        filterType: \"REGEX\",\n        filterValue: \".*\",\n    }],\n});\nconst testAppSignonPolicy = okta.getAppSignonPolicyOutput({\n    appId: testSaml.id,\n});\nconst testUser: okta.user.User[] = [];\nfor (const range = {value: 0}; range.value \u003c 5; range.value++) {\n    testUser.push(new okta.user.User(`testUser-${range.value}`, {\n        firstName: \"TestAcc\",\n        lastName: \"Smith\",\n        login: `testAcc_${range.value}@example.com`,\n        email: `testAcc_${range.value}@example.com`,\n    }));\n}\nconst _this: okta.group.Group[] = [];\nfor (const range = {value: 0}; range.value \u003c 5; range.value++) {\n    _this.push(new okta.group.Group(`this-${range.value}`, {description: `testAcc_${range.value}`}));\n}\nconst testUserType = new okta.user.UserType(\"testUserType\", {\n    displayName: \"Terraform Acceptance Test User Type Updated\",\n    description: \"Terraform Acceptance Test User Type Updated\",\n});\nconst testZone = new okta.network.Zone(\"testZone\", {\n    type: \"IP\",\n    gateways: [\n        \"1.2.3.4/24\",\n        \"2.3.4.5-2.3.4.15\",\n    ],\n    proxies: [\n        \"2.2.3.4/24\",\n        \"3.3.4.5-3.3.4.15\",\n    ],\n});\nconst default = okta.user.getUserType({\n    name: \"user\",\n});\nconst testAppSignonPolicyRule = new okta.AppSignonPolicyRule(\"testAppSignonPolicyRule\", {\n    policyId: testAppSignonPolicy.apply(testAppSignonPolicy =\u003e testAppSignonPolicy.id),\n    access: \"ALLOW\",\n    customExpression: \"user.status == \\\"ACTIVE\\\"\",\n    deviceIsManaged: false,\n    deviceIsRegistered: true,\n    factorMode: \"2FA\",\n    groupsExcludeds: [\n        _this[2].id,\n        _this[3].id,\n        _this[4].id,\n    ],\n    groupsIncludeds: [\n        _this[0].id,\n        _this[1].id,\n    ],\n    networkConnection: \"ZONE\",\n    networkIncludes: [testZone.id],\n    platformIncludes: [\n        {\n            osType: \"ANDROID\",\n            type: \"MOBILE\",\n        },\n        {\n            osType: \"IOS\",\n            type: \"MOBILE\",\n        },\n        {\n            osType: \"MACOS\",\n            type: \"DESKTOP\",\n        },\n        {\n            osType: \"OTHER\",\n            type: \"DESKTOP\",\n        },\n        {\n            osType: \"OTHER\",\n            type: \"MOBILE\",\n        },\n        {\n            osType: \"WINDOWS\",\n            type: \"DESKTOP\",\n        },\n    ],\n    priority: 98,\n    reAuthenticationFrequency: \"PT43800H\",\n    type: \"ASSURANCE\",\n    userTypesExcludeds: [testUserType.id],\n    userTypesIncludeds: [_default.then(_default =\u003e _default.id)],\n    usersExcludeds: [\n        testUser[2].id,\n        testUser[3].id,\n        testUser[4].id,\n    ],\n    usersIncludeds: [\n        testUser[0].id,\n        testUser[1].id,\n    ],\n    constraints: [\n        JSON.stringify({\n            knowledge: {\n                reauthenticateIn: \"PT2H\",\n                types: [\"password\"],\n            },\n            possession: {\n                deviceBound: \"REQUIRED\",\n            },\n        }),\n        JSON.stringify({\n            possession: {\n                deviceBound: \"REQUIRED\",\n                hardwareProtection: \"REQUIRED\",\n                userPresence: \"OPTIONAL\",\n            },\n        }),\n    ],\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_okta as okta\n\ntest_saml = okta.app.Saml(\"testSaml\",\n    label=\"testAcc_replace_with_uuid\",\n    sso_url=\"https://google.com\",\n    recipient=\"https://here.com\",\n    destination=\"https://its-about-the-journey.com\",\n    audience=\"https://audience.com\",\n    subject_name_id_template=\"${user.userName}\",\n    subject_name_id_format=\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n    response_signed=True,\n    signature_algorithm=\"RSA_SHA256\",\n    digest_algorithm=\"SHA256\",\n    honor_force_authn=False,\n    authn_context_class_ref=\"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\",\n    single_logout_issuer=\"https://dunshire.okta.com\",\n    single_logout_url=\"https://dunshire.okta.com/logout\",\n    single_logout_certificate=\"\"\"MIIFnDCCA4QCCQDBSLbiON2T1zANBgkqhkiG9w0BAQsFADCBjzELMAkGA1UEBhMCVVMxDjAMBgNV\r\nBAgMBU1haW5lMRAwDgYDVQQHDAdDYXJpYm91MRcwFQYDVQQKDA5Tbm93bWFrZXJzIEluYzEUMBIG\r\nA1UECwwLRW5naW5lZXJpbmcxDTALBgNVBAMMBFNub3cxIDAeBgkqhkiG9w0BCQEWEWVtYWlsQGV4\r\nYW1wbGUuY29tMB4XDTIwMTIwMzIyNDY0M1oXDTMwMTIwMTIyNDY0M1owgY8xCzAJBgNVBAYTAlVT\r\nMQ4wDAYDVQQIDAVNYWluZTEQMA4GA1UEBwwHQ2FyaWJvdTEXMBUGA1UECgwOU25vd21ha2VycyBJ\r\nbmMxFDASBgNVBAsMC0VuZ2luZWVyaW5nMQ0wCwYDVQQDDARTbm93MSAwHgYJKoZIhvcNAQkBFhFl\r\nbWFpbEBleGFtcGxlLmNvbTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANMmWDjXPdoa\r\nPyzIENqeY9njLan2FqCbQPSestWUUcb6NhDsJVGSQ7XR+ozQA5TaJzbP7cAJUj8vCcbqMZsgOQAu\r\nO/pzYyQEKptLmrGvPn7xkJ1A1xLkp2NY18cpDTeUPueJUoidZ9EJwEuyUZIktzxNNU1pA1lGijiu\r\n2XNxs9d9JR/hm3tCu9Im8qLVB4JtX80YUa6QtlRjWR/H8a373AYCOASdoB3c57fIPD8ATDNy2w/c\r\nfCVGiyKDMFB+GA/WTsZpOP3iohRp8ltAncSuzypcztb2iE+jijtTsiC9kUA2abAJqqpoCJubNShi\r\nVff4822czpziS44MV2guC9wANi8u3Uyl5MKsU95j01jzadKRP5S+2f0K+n8n4UoV9fnqZFyuGAKd\r\nCJi9K6NlSAP+TgPe/JP9FOSuxQOHWJfmdLHdJD+evoKi9E55sr5lRFK0xU1Fj5Ld7zjC0pXPhtJf\r\nsgjEZzD433AsHnRzvRT1KSNCPkLYomznZo5n9rWYgCQ8HcytlQDTesmKE+s05E/VSWNtH84XdDrt\r\nieXwfwhHfaABSu+WjZYxi9CXdFCSvXhsgufUcK4FbYAHl/ga/cJxZc52yFC7Pcq0u9O2BSCjYPdQ\r\nDAHs9dhT1RhwVLM8RmoAzgxyyzau0gxnAlgSBD9FMW6dXqIHIp8yAAg9cRXhYRTNAgMBAAEwDQYJ\r\nKoZIhvcNAQELBQADggIBADofEC1SvG8qa7pmKCjB/E9Sxhk3mvUO9Gq43xzwVb721Ng3VYf4vGU3\r\nwLUwJeLt0wggnj26NJweN5T3q9T8UMxZhHSWvttEU3+S1nArRB0beti716HSlOCDx4wTmBu/D1MG\r\nt/kZYFJw+zuzvAcbYct2pK69AQhD8xAIbQvqADJI7cCK3yRry+aWtppc58P81KYabUlCfFXfhJ9E\r\nP72ffN4jVHpX3lxxYh7FKAdiKbY2FYzjsc7RdgKI1R3iAAZUCGBTvezNzaetGzTUjjl/g1tcVYij\r\nltH9ZOQBPlUMI88lxUxqgRTerpPmAJH00CACx4JFiZrweLM1trZyy06wNDQgLrqHr3EOagBF/O2h\r\nhfTehNdVr6iq3YhKWBo4/+RL0RCzHMh4u86VbDDnDn4Y6HzLuyIAtBFoikoKM6UHTOa0Pqv2bBr5\r\nwbkRkVUxl9yJJw/HmTCdfnsM9dTOJUKzEglnGF2184Gg+qJDZB6fSf0EAO1F6sTqiSswl+uHQZiy\r\nDaZzyU7Gg5seKOZ20zTRaX3Ihj9Zij/ORnrARE7eM/usKMECp+7syUwAUKxDCZkGiUdskmOhhBGL\r\nJtbyK3F2UvoJoLsm3pIcvMak9KwMjSTGJB47ABUP1+w+zGcNk0D5Co3IJ6QekiLfWJyQ+kKsWLKt\r\nzOYQQatrnBagM7MI2/T4\r\n\"\"\",\n    attribute_statements=[okta.app.SamlAttributeStatementArgs(\n        type=\"GROUP\",\n        name=\"groups\",\n        filter_type=\"REGEX\",\n        filter_value=\".*\",\n    )])\ntest_app_signon_policy = okta.get_app_signon_policy_output(app_id=test_saml.id)\ntest_user = []\nfor range in [{\"value\": i} for i in range(0, 5)]:\n    test_user.append(okta.user.User(f\"testUser-{range['value']}\",\n        first_name=\"TestAcc\",\n        last_name=\"Smith\",\n        login=f\"testAcc_{range['value']}@example.com\",\n        email=f\"testAcc_{range['value']}@example.com\"))\nthis = []\nfor range in [{\"value\": i} for i in range(0, 5)]:\n    this.append(okta.group.Group(f\"this-{range['value']}\", description=f\"testAcc_{range['value']}\"))\ntest_user_type = okta.user.UserType(\"testUserType\",\n    display_name=\"Terraform Acceptance Test User Type Updated\",\n    description=\"Terraform Acceptance Test User Type Updated\")\ntest_zone = okta.network.Zone(\"testZone\",\n    type=\"IP\",\n    gateways=[\n        \"1.2.3.4/24\",\n        \"2.3.4.5-2.3.4.15\",\n    ],\n    proxies=[\n        \"2.2.3.4/24\",\n        \"3.3.4.5-3.3.4.15\",\n    ])\ndefault = okta.user.get_user_type(name=\"user\")\ntest_app_signon_policy_rule = okta.AppSignonPolicyRule(\"testAppSignonPolicyRule\",\n    policy_id=test_app_signon_policy.id,\n    access=\"ALLOW\",\n    custom_expression=\"user.status == \\\"ACTIVE\\\"\",\n    device_is_managed=False,\n    device_is_registered=True,\n    factor_mode=\"2FA\",\n    groups_excludeds=[\n        this[2].id,\n        this[3].id,\n        this[4].id,\n    ],\n    groups_includeds=[\n        this[0].id,\n        this[1].id,\n    ],\n    network_connection=\"ZONE\",\n    network_includes=[test_zone.id],\n    platform_includes=[\n        okta.AppSignonPolicyRulePlatformIncludeArgs(\n            os_type=\"ANDROID\",\n            type=\"MOBILE\",\n        ),\n        okta.AppSignonPolicyRulePlatformIncludeArgs(\n            os_type=\"IOS\",\n            type=\"MOBILE\",\n        ),\n        okta.AppSignonPolicyRulePlatformIncludeArgs(\n            os_type=\"MACOS\",\n            type=\"DESKTOP\",\n        ),\n        okta.AppSignonPolicyRulePlatformIncludeArgs(\n            os_type=\"OTHER\",\n            type=\"DESKTOP\",\n        ),\n        okta.AppSignonPolicyRulePlatformIncludeArgs(\n            os_type=\"OTHER\",\n            type=\"MOBILE\",\n        ),\n        okta.AppSignonPolicyRulePlatformIncludeArgs(\n            os_type=\"WINDOWS\",\n            type=\"DESKTOP\",\n        ),\n    ],\n    priority=98,\n    re_authentication_frequency=\"PT43800H\",\n    type=\"ASSURANCE\",\n    user_types_excludeds=[test_user_type.id],\n    user_types_includeds=[default.id],\n    users_excludeds=[\n        test_user[2].id,\n        test_user[3].id,\n        test_user[4].id,\n    ],\n    users_includeds=[\n        test_user[0].id,\n        test_user[1].id,\n    ],\n    constraints=[\n        json.dumps({\n            \"knowledge\": {\n                \"reauthenticateIn\": \"PT2H\",\n                \"types\": [\"password\"],\n            },\n            \"possession\": {\n                \"deviceBound\": \"REQUIRED\",\n            },\n        }),\n        json.dumps({\n            \"possession\": {\n                \"deviceBound\": \"REQUIRED\",\n                \"hardwareProtection\": \"REQUIRED\",\n                \"userPresence\": \"OPTIONAL\",\n            },\n        }),\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testSaml = new Okta.App.Saml(\"testSaml\", new()\n    {\n        Label = \"testAcc_replace_with_uuid\",\n        SsoUrl = \"https://google.com\",\n        Recipient = \"https://here.com\",\n        Destination = \"https://its-about-the-journey.com\",\n        Audience = \"https://audience.com\",\n        SubjectNameIdTemplate = \"${user.userName}\",\n        SubjectNameIdFormat = \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n        ResponseSigned = true,\n        SignatureAlgorithm = \"RSA_SHA256\",\n        DigestAlgorithm = \"SHA256\",\n        HonorForceAuthn = false,\n        AuthnContextClassRef = \"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\",\n        SingleLogoutIssuer = \"https://dunshire.okta.com\",\n        SingleLogoutUrl = \"https://dunshire.okta.com/logout\",\n        SingleLogoutCertificate = @\"MIIFnDCCA4QCCQDBSLbiON2T1zANBgkqhkiG9w0BAQsFADCBjzELMAkGA1UEBhMCVVMxDjAMBgNV\r\nBAgMBU1haW5lMRAwDgYDVQQHDAdDYXJpYm91MRcwFQYDVQQKDA5Tbm93bWFrZXJzIEluYzEUMBIG\r\nA1UECwwLRW5naW5lZXJpbmcxDTALBgNVBAMMBFNub3cxIDAeBgkqhkiG9w0BCQEWEWVtYWlsQGV4\r\nYW1wbGUuY29tMB4XDTIwMTIwMzIyNDY0M1oXDTMwMTIwMTIyNDY0M1owgY8xCzAJBgNVBAYTAlVT\r\nMQ4wDAYDVQQIDAVNYWluZTEQMA4GA1UEBwwHQ2FyaWJvdTEXMBUGA1UECgwOU25vd21ha2VycyBJ\r\nbmMxFDASBgNVBAsMC0VuZ2luZWVyaW5nMQ0wCwYDVQQDDARTbm93MSAwHgYJKoZIhvcNAQkBFhFl\r\nbWFpbEBleGFtcGxlLmNvbTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANMmWDjXPdoa\r\nPyzIENqeY9njLan2FqCbQPSestWUUcb6NhDsJVGSQ7XR+ozQA5TaJzbP7cAJUj8vCcbqMZsgOQAu\r\nO/pzYyQEKptLmrGvPn7xkJ1A1xLkp2NY18cpDTeUPueJUoidZ9EJwEuyUZIktzxNNU1pA1lGijiu\r\n2XNxs9d9JR/hm3tCu9Im8qLVB4JtX80YUa6QtlRjWR/H8a373AYCOASdoB3c57fIPD8ATDNy2w/c\r\nfCVGiyKDMFB+GA/WTsZpOP3iohRp8ltAncSuzypcztb2iE+jijtTsiC9kUA2abAJqqpoCJubNShi\r\nVff4822czpziS44MV2guC9wANi8u3Uyl5MKsU95j01jzadKRP5S+2f0K+n8n4UoV9fnqZFyuGAKd\r\nCJi9K6NlSAP+TgPe/JP9FOSuxQOHWJfmdLHdJD+evoKi9E55sr5lRFK0xU1Fj5Ld7zjC0pXPhtJf\r\nsgjEZzD433AsHnRzvRT1KSNCPkLYomznZo5n9rWYgCQ8HcytlQDTesmKE+s05E/VSWNtH84XdDrt\r\nieXwfwhHfaABSu+WjZYxi9CXdFCSvXhsgufUcK4FbYAHl/ga/cJxZc52yFC7Pcq0u9O2BSCjYPdQ\r\nDAHs9dhT1RhwVLM8RmoAzgxyyzau0gxnAlgSBD9FMW6dXqIHIp8yAAg9cRXhYRTNAgMBAAEwDQYJ\r\nKoZIhvcNAQELBQADggIBADofEC1SvG8qa7pmKCjB/E9Sxhk3mvUO9Gq43xzwVb721Ng3VYf4vGU3\r\nwLUwJeLt0wggnj26NJweN5T3q9T8UMxZhHSWvttEU3+S1nArRB0beti716HSlOCDx4wTmBu/D1MG\r\nt/kZYFJw+zuzvAcbYct2pK69AQhD8xAIbQvqADJI7cCK3yRry+aWtppc58P81KYabUlCfFXfhJ9E\r\nP72ffN4jVHpX3lxxYh7FKAdiKbY2FYzjsc7RdgKI1R3iAAZUCGBTvezNzaetGzTUjjl/g1tcVYij\r\nltH9ZOQBPlUMI88lxUxqgRTerpPmAJH00CACx4JFiZrweLM1trZyy06wNDQgLrqHr3EOagBF/O2h\r\nhfTehNdVr6iq3YhKWBo4/+RL0RCzHMh4u86VbDDnDn4Y6HzLuyIAtBFoikoKM6UHTOa0Pqv2bBr5\r\nwbkRkVUxl9yJJw/HmTCdfnsM9dTOJUKzEglnGF2184Gg+qJDZB6fSf0EAO1F6sTqiSswl+uHQZiy\r\nDaZzyU7Gg5seKOZ20zTRaX3Ihj9Zij/ORnrARE7eM/usKMECp+7syUwAUKxDCZkGiUdskmOhhBGL\r\nJtbyK3F2UvoJoLsm3pIcvMak9KwMjSTGJB47ABUP1+w+zGcNk0D5Co3IJ6QekiLfWJyQ+kKsWLKt\r\nzOYQQatrnBagM7MI2/T4\r\n\",\n        AttributeStatements = new[]\n        {\n            new Okta.App.Inputs.SamlAttributeStatementArgs\n            {\n                Type = \"GROUP\",\n                Name = \"groups\",\n                FilterType = \"REGEX\",\n                FilterValue = \".*\",\n            },\n        },\n    });\n\n    var testAppSignonPolicy = Okta.GetAppSignonPolicy.Invoke(new()\n    {\n        AppId = testSaml.Id,\n    });\n\n    var testUser = new List\u003cOkta.User.User\u003e();\n    for (var rangeIndex = 0; rangeIndex \u003c 5; rangeIndex++)\n    {\n        var range = new { Value = rangeIndex };\n        testUser.Add(new Okta.User.User($\"testUser-{range.Value}\", new()\n        {\n            FirstName = \"TestAcc\",\n            LastName = \"Smith\",\n            Login = $\"testAcc_{range.Value}@example.com\",\n            Email = $\"testAcc_{range.Value}@example.com\",\n        }));\n    }\n    var @this = new List\u003cOkta.Group.Group\u003e();\n    for (var rangeIndex = 0; rangeIndex \u003c 5; rangeIndex++)\n    {\n        var range = new { Value = rangeIndex };\n        @this.Add(new Okta.Group.Group($\"this-{range.Value}\", new()\n        {\n            Description = $\"testAcc_{range.Value}\",\n        }));\n    }\n    var testUserType = new Okta.User.UserType(\"testUserType\", new()\n    {\n        DisplayName = \"Terraform Acceptance Test User Type Updated\",\n        Description = \"Terraform Acceptance Test User Type Updated\",\n    });\n\n    var testZone = new Okta.Network.Zone(\"testZone\", new()\n    {\n        Type = \"IP\",\n        Gateways = new[]\n        {\n            \"1.2.3.4/24\",\n            \"2.3.4.5-2.3.4.15\",\n        },\n        Proxies = new[]\n        {\n            \"2.2.3.4/24\",\n            \"3.3.4.5-3.3.4.15\",\n        },\n    });\n\n    var @default = Okta.User.GetUserType.Invoke(new()\n    {\n        Name = \"user\",\n    });\n\n    var testAppSignonPolicyRule = new Okta.AppSignonPolicyRule(\"testAppSignonPolicyRule\", new()\n    {\n        PolicyId = testAppSignonPolicy.Apply(getAppSignonPolicyResult =\u003e getAppSignonPolicyResult.Id),\n        Access = \"ALLOW\",\n        CustomExpression = \"user.status == \\\"ACTIVE\\\"\",\n        DeviceIsManaged = false,\n        DeviceIsRegistered = true,\n        FactorMode = \"2FA\",\n        GroupsExcludeds = new[]\n        {\n            @this[2].Id,\n            @this[3].Id,\n            @this[4].Id,\n        },\n        GroupsIncludeds = new[]\n        {\n            @this[0].Id,\n            @this[1].Id,\n        },\n        NetworkConnection = \"ZONE\",\n        NetworkIncludes = new[]\n        {\n            testZone.Id,\n        },\n        PlatformIncludes = new[]\n        {\n            new Okta.Inputs.AppSignonPolicyRulePlatformIncludeArgs\n            {\n                OsType = \"ANDROID\",\n                Type = \"MOBILE\",\n            },\n            new Okta.Inputs.AppSignonPolicyRulePlatformIncludeArgs\n            {\n                OsType = \"IOS\",\n                Type = \"MOBILE\",\n            },\n            new Okta.Inputs.AppSignonPolicyRulePlatformIncludeArgs\n            {\n                OsType = \"MACOS\",\n                Type = \"DESKTOP\",\n            },\n            new Okta.Inputs.AppSignonPolicyRulePlatformIncludeArgs\n            {\n                OsType = \"OTHER\",\n                Type = \"DESKTOP\",\n            },\n            new Okta.Inputs.AppSignonPolicyRulePlatformIncludeArgs\n            {\n                OsType = \"OTHER\",\n                Type = \"MOBILE\",\n            },\n            new Okta.Inputs.AppSignonPolicyRulePlatformIncludeArgs\n            {\n                OsType = \"WINDOWS\",\n                Type = \"DESKTOP\",\n            },\n        },\n        Priority = 98,\n        ReAuthenticationFrequency = \"PT43800H\",\n        Type = \"ASSURANCE\",\n        UserTypesExcludeds = new[]\n        {\n            testUserType.Id,\n        },\n        UserTypesIncludeds = new[]\n        {\n            @default.Apply(@default =\u003e @default.Apply(getUserTypeResult =\u003e getUserTypeResult.Id)),\n        },\n        UsersExcludeds = new[]\n        {\n            testUser[2].Id,\n            testUser[3].Id,\n            testUser[4].Id,\n        },\n        UsersIncludeds = new[]\n        {\n            testUser[0].Id,\n            testUser[1].Id,\n        },\n        Constraints = new[]\n        {\n            JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n            {\n                [\"knowledge\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"reauthenticateIn\"] = \"PT2H\",\n                    [\"types\"] = new[]\n                    {\n                        \"password\",\n                    },\n                },\n                [\"possession\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"deviceBound\"] = \"REQUIRED\",\n                },\n            }),\n            JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n            {\n                [\"possession\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"deviceBound\"] = \"REQUIRED\",\n                    [\"hardwareProtection\"] = \"REQUIRED\",\n                    [\"userPresence\"] = \"OPTIONAL\",\n                },\n            }),\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/group\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/network\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestSaml, err := app.NewSaml(ctx, \"testSaml\", \u0026app.SamlArgs{\n\t\t\tLabel:                   pulumi.String(\"testAcc_replace_with_uuid\"),\n\t\t\tSsoUrl:                  pulumi.String(\"https://google.com\"),\n\t\t\tRecipient:               pulumi.String(\"https://here.com\"),\n\t\t\tDestination:             pulumi.String(\"https://its-about-the-journey.com\"),\n\t\t\tAudience:                pulumi.String(\"https://audience.com\"),\n\t\t\tSubjectNameIdTemplate:   pulumi.String(\"${user.userName}\"),\n\t\t\tSubjectNameIdFormat:     pulumi.String(\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\"),\n\t\t\tResponseSigned:          pulumi.Bool(true),\n\t\t\tSignatureAlgorithm:      pulumi.String(\"RSA_SHA256\"),\n\t\t\tDigestAlgorithm:         pulumi.String(\"SHA256\"),\n\t\t\tHonorForceAuthn:         pulumi.Bool(false),\n\t\t\tAuthnContextClassRef:    pulumi.String(\"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\"),\n\t\t\tSingleLogoutIssuer:      pulumi.String(\"https://dunshire.okta.com\"),\n\t\t\tSingleLogoutUrl:         pulumi.String(\"https://dunshire.okta.com/logout\"),\n\t\t\tSingleLogoutCertificate: pulumi.String(\"MIIFnDCCA4QCCQDBSLbiON2T1zANBgkqhkiG9w0BAQsFADCBjzELMAkGA1UEBhMCVVMxDjAMBgNV\r\\nBAgMBU1haW5lMRAwDgYDVQQHDAdDYXJpYm91MRcwFQYDVQQKDA5Tbm93bWFrZXJzIEluYzEUMBIG\r\\nA1UECwwLRW5naW5lZXJpbmcxDTALBgNVBAMMBFNub3cxIDAeBgkqhkiG9w0BCQEWEWVtYWlsQGV4\r\\nYW1wbGUuY29tMB4XDTIwMTIwMzIyNDY0M1oXDTMwMTIwMTIyNDY0M1owgY8xCzAJBgNVBAYTAlVT\r\\nMQ4wDAYDVQQIDAVNYWluZTEQMA4GA1UEBwwHQ2FyaWJvdTEXMBUGA1UECgwOU25vd21ha2VycyBJ\r\\nbmMxFDASBgNVBAsMC0VuZ2luZWVyaW5nMQ0wCwYDVQQDDARTbm93MSAwHgYJKoZIhvcNAQkBFhFl\r\\nbWFpbEBleGFtcGxlLmNvbTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANMmWDjXPdoa\r\\nPyzIENqeY9njLan2FqCbQPSestWUUcb6NhDsJVGSQ7XR+ozQA5TaJzbP7cAJUj8vCcbqMZsgOQAu\r\\nO/pzYyQEKptLmrGvPn7xkJ1A1xLkp2NY18cpDTeUPueJUoidZ9EJwEuyUZIktzxNNU1pA1lGijiu\r\\n2XNxs9d9JR/hm3tCu9Im8qLVB4JtX80YUa6QtlRjWR/H8a373AYCOASdoB3c57fIPD8ATDNy2w/c\r\\nfCVGiyKDMFB+GA/WTsZpOP3iohRp8ltAncSuzypcztb2iE+jijtTsiC9kUA2abAJqqpoCJubNShi\r\\nVff4822czpziS44MV2guC9wANi8u3Uyl5MKsU95j01jzadKRP5S+2f0K+n8n4UoV9fnqZFyuGAKd\r\\nCJi9K6NlSAP+TgPe/JP9FOSuxQOHWJfmdLHdJD+evoKi9E55sr5lRFK0xU1Fj5Ld7zjC0pXPhtJf\r\\nsgjEZzD433AsHnRzvRT1KSNCPkLYomznZo5n9rWYgCQ8HcytlQDTesmKE+s05E/VSWNtH84XdDrt\r\\nieXwfwhHfaABSu+WjZYxi9CXdFCSvXhsgufUcK4FbYAHl/ga/cJxZc52yFC7Pcq0u9O2BSCjYPdQ\r\\nDAHs9dhT1RhwVLM8RmoAzgxyyzau0gxnAlgSBD9FMW6dXqIHIp8yAAg9cRXhYRTNAgMBAAEwDQYJ\r\\nKoZIhvcNAQELBQADggIBADofEC1SvG8qa7pmKCjB/E9Sxhk3mvUO9Gq43xzwVb721Ng3VYf4vGU3\r\\nwLUwJeLt0wggnj26NJweN5T3q9T8UMxZhHSWvttEU3+S1nArRB0beti716HSlOCDx4wTmBu/D1MG\r\\nt/kZYFJw+zuzvAcbYct2pK69AQhD8xAIbQvqADJI7cCK3yRry+aWtppc58P81KYabUlCfFXfhJ9E\r\\nP72ffN4jVHpX3lxxYh7FKAdiKbY2FYzjsc7RdgKI1R3iAAZUCGBTvezNzaetGzTUjjl/g1tcVYij\r\\nltH9ZOQBPlUMI88lxUxqgRTerpPmAJH00CACx4JFiZrweLM1trZyy06wNDQgLrqHr3EOagBF/O2h\r\\nhfTehNdVr6iq3YhKWBo4/+RL0RCzHMh4u86VbDDnDn4Y6HzLuyIAtBFoikoKM6UHTOa0Pqv2bBr5\r\\nwbkRkVUxl9yJJw/HmTCdfnsM9dTOJUKzEglnGF2184Gg+qJDZB6fSf0EAO1F6sTqiSswl+uHQZiy\r\\nDaZzyU7Gg5seKOZ20zTRaX3Ihj9Zij/ORnrARE7eM/usKMECp+7syUwAUKxDCZkGiUdskmOhhBGL\r\\nJtbyK3F2UvoJoLsm3pIcvMak9KwMjSTGJB47ABUP1+w+zGcNk0D5Co3IJ6QekiLfWJyQ+kKsWLKt\r\\nzOYQQatrnBagM7MI2/T4\r\\n\"),\n\t\t\tAttributeStatements: app.SamlAttributeStatementArray{\n\t\t\t\t\u0026app.SamlAttributeStatementArgs{\n\t\t\t\t\tType:        pulumi.String(\"GROUP\"),\n\t\t\t\t\tName:        pulumi.String(\"groups\"),\n\t\t\t\t\tFilterType:  pulumi.String(\"REGEX\"),\n\t\t\t\t\tFilterValue: pulumi.String(\".*\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttestAppSignonPolicy := okta.LookupAppSignonPolicyOutput(ctx, okta.GetAppSignonPolicyOutputArgs{\n\t\t\tAppId: testSaml.ID(),\n\t\t}, nil)\n\t\tvar testUser []*user.User\n\t\tfor index := 0; index \u003c 5; index++ {\n\t\t\tkey0 := index\n\t\t\tval0 := index\n\t\t\t__res, err := user.NewUser(ctx, fmt.Sprintf(\"testUser-%v\", key0), \u0026user.UserArgs{\n\t\t\t\tFirstName: pulumi.String(\"TestAcc\"),\n\t\t\t\tLastName:  pulumi.String(\"Smith\"),\n\t\t\t\tLogin:     pulumi.String(fmt.Sprintf(\"testAcc_%v@example.com\", val0)),\n\t\t\t\tEmail:     pulumi.String(fmt.Sprintf(\"testAcc_%v@example.com\", val0)),\n\t\t\t})\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\ttestUser = append(testUser, __res)\n\t\t}\n\t\tvar this []*group.Group\n\t\tfor index := 0; index \u003c 5; index++ {\n\t\t\tkey0 := index\n\t\t\tval0 := index\n\t\t\t__res, err := group.NewGroup(ctx, fmt.Sprintf(\"this-%v\", key0), \u0026group.GroupArgs{\n\t\t\t\tDescription: pulumi.String(fmt.Sprintf(\"testAcc_%v\", val0)),\n\t\t\t})\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tthis = append(this, __res)\n\t\t}\n\t\ttestUserType, err := user.NewUserType(ctx, \"testUserType\", \u0026user.UserTypeArgs{\n\t\t\tDisplayName: pulumi.String(\"Terraform Acceptance Test User Type Updated\"),\n\t\t\tDescription: pulumi.String(\"Terraform Acceptance Test User Type Updated\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttestZone, err := network.NewZone(ctx, \"testZone\", \u0026network.ZoneArgs{\n\t\t\tType: pulumi.String(\"IP\"),\n\t\t\tGateways: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"1.2.3.4/24\"),\n\t\t\t\tpulumi.String(\"2.3.4.5-2.3.4.15\"),\n\t\t\t},\n\t\t\tProxies: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"2.2.3.4/24\"),\n\t\t\t\tpulumi.String(\"3.3.4.5-3.3.4.15\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_default, err := user.LookupUserType(ctx, \u0026user.LookupUserTypeArgs{\n\t\t\tName: \"user\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"knowledge\": map[string]interface{}{\n\t\t\t\t\"reauthenticateIn\": \"PT2H\",\n\t\t\t\t\"types\": []string{\n\t\t\t\t\t\"password\",\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"possession\": map[string]interface{}{\n\t\t\t\t\"deviceBound\": \"REQUIRED\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\ttmpJSON1, err := json.Marshal(map[string]interface{}{\n\t\t\t\"possession\": map[string]interface{}{\n\t\t\t\t\"deviceBound\":        \"REQUIRED\",\n\t\t\t\t\"hardwareProtection\": \"REQUIRED\",\n\t\t\t\t\"userPresence\":       \"OPTIONAL\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson1 := string(tmpJSON1)\n\t\t_, err = okta.NewAppSignonPolicyRule(ctx, \"testAppSignonPolicyRule\", \u0026okta.AppSignonPolicyRuleArgs{\n\t\t\tPolicyId: testAppSignonPolicy.ApplyT(func(testAppSignonPolicy okta.GetAppSignonPolicyResult) (*string, error) {\n\t\t\t\treturn \u0026testAppSignonPolicy.Id, nil\n\t\t\t}).(pulumi.StringPtrOutput),\n\t\t\tAccess:             pulumi.String(\"ALLOW\"),\n\t\t\tCustomExpression:   pulumi.String(\"user.status == \\\"ACTIVE\\\"\"),\n\t\t\tDeviceIsManaged:    pulumi.Bool(false),\n\t\t\tDeviceIsRegistered: pulumi.Bool(true),\n\t\t\tFactorMode:         pulumi.String(\"2FA\"),\n\t\t\tGroupsExcludeds: pulumi.StringArray{\n\t\t\t\tthis[2].ID(),\n\t\t\t\tthis[3].ID(),\n\t\t\t\tthis[4].ID(),\n\t\t\t},\n\t\t\tGroupsIncludeds: pulumi.StringArray{\n\t\t\t\tthis[0].ID(),\n\t\t\t\tthis[1].ID(),\n\t\t\t},\n\t\t\tNetworkConnection: pulumi.String(\"ZONE\"),\n\t\t\tNetworkIncludes: pulumi.StringArray{\n\t\t\t\ttestZone.ID(),\n\t\t\t},\n\t\t\tPlatformIncludes: okta.AppSignonPolicyRulePlatformIncludeArray{\n\t\t\t\t\u0026okta.AppSignonPolicyRulePlatformIncludeArgs{\n\t\t\t\t\tOsType: pulumi.String(\"ANDROID\"),\n\t\t\t\t\tType:   pulumi.String(\"MOBILE\"),\n\t\t\t\t},\n\t\t\t\t\u0026okta.AppSignonPolicyRulePlatformIncludeArgs{\n\t\t\t\t\tOsType: pulumi.String(\"IOS\"),\n\t\t\t\t\tType:   pulumi.String(\"MOBILE\"),\n\t\t\t\t},\n\t\t\t\t\u0026okta.AppSignonPolicyRulePlatformIncludeArgs{\n\t\t\t\t\tOsType: pulumi.String(\"MACOS\"),\n\t\t\t\t\tType:   pulumi.String(\"DESKTOP\"),\n\t\t\t\t},\n\t\t\t\t\u0026okta.AppSignonPolicyRulePlatformIncludeArgs{\n\t\t\t\t\tOsType: pulumi.String(\"OTHER\"),\n\t\t\t\t\tType:   pulumi.String(\"DESKTOP\"),\n\t\t\t\t},\n\t\t\t\t\u0026okta.AppSignonPolicyRulePlatformIncludeArgs{\n\t\t\t\t\tOsType: pulumi.String(\"OTHER\"),\n\t\t\t\t\tType:   pulumi.String(\"MOBILE\"),\n\t\t\t\t},\n\t\t\t\t\u0026okta.AppSignonPolicyRulePlatformIncludeArgs{\n\t\t\t\t\tOsType: pulumi.String(\"WINDOWS\"),\n\t\t\t\t\tType:   pulumi.String(\"DESKTOP\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPriority:                  pulumi.Int(98),\n\t\t\tReAuthenticationFrequency: pulumi.String(\"PT43800H\"),\n\t\t\tType:                      pulumi.String(\"ASSURANCE\"),\n\t\t\tUserTypesExcludeds: pulumi.StringArray{\n\t\t\t\ttestUserType.ID(),\n\t\t\t},\n\t\t\tUserTypesIncludeds: pulumi.StringArray{\n\t\t\t\t*pulumi.String(_default.Id),\n\t\t\t},\n\t\t\tUsersExcludeds: pulumi.StringArray{\n\t\t\t\ttestUser[2].ID(),\n\t\t\t\ttestUser[3].ID(),\n\t\t\t\ttestUser[4].ID(),\n\t\t\t},\n\t\t\tUsersIncludeds: pulumi.StringArray{\n\t\t\t\ttestUser[0].ID(),\n\t\t\t\ttestUser[1].ID(),\n\t\t\t},\n\t\t\tConstraints: pulumi.StringArray{\n\t\t\t\tpulumi.String(json0),\n\t\t\t\tpulumi.String(json1),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.Saml;\nimport com.pulumi.okta.app.SamlArgs;\nimport com.pulumi.okta.app.inputs.SamlAttributeStatementArgs;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetAppSignonPolicyArgs;\nimport com.pulumi.okta.user.User;\nimport com.pulumi.okta.user.UserArgs;\nimport com.pulumi.okta.group.Group;\nimport com.pulumi.okta.group.GroupArgs;\nimport com.pulumi.okta.user.UserType;\nimport com.pulumi.okta.user.UserTypeArgs;\nimport com.pulumi.okta.network.Zone;\nimport com.pulumi.okta.network.ZoneArgs;\nimport com.pulumi.okta.user.UserFunctions;\nimport com.pulumi.okta.user.inputs.GetUserTypeArgs;\nimport com.pulumi.okta.AppSignonPolicyRule;\nimport com.pulumi.okta.AppSignonPolicyRuleArgs;\nimport com.pulumi.okta.inputs.AppSignonPolicyRulePlatformIncludeArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport com.pulumi.codegen.internal.KeyedValue;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testSaml = new Saml(\"testSaml\", SamlArgs.builder()        \n            .label(\"testAcc_replace_with_uuid\")\n            .ssoUrl(\"https://google.com\")\n            .recipient(\"https://here.com\")\n            .destination(\"https://its-about-the-journey.com\")\n            .audience(\"https://audience.com\")\n            .subjectNameIdTemplate(\"${user.userName}\")\n            .subjectNameIdFormat(\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\")\n            .responseSigned(true)\n            .signatureAlgorithm(\"RSA_SHA256\")\n            .digestAlgorithm(\"SHA256\")\n            .honorForceAuthn(false)\n            .authnContextClassRef(\"urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\")\n            .singleLogoutIssuer(\"https://dunshire.okta.com\")\n            .singleLogoutUrl(\"https://dunshire.okta.com/logout\")\n            .singleLogoutCertificate(\"\"\"\nMIIFnDCCA4QCCQDBSLbiON2T1zANBgkqhkiG9w0BAQsFADCBjzELMAkGA1UEBhMCVVMxDjAMBgNV\r\nBAgMBU1haW5lMRAwDgYDVQQHDAdDYXJpYm91MRcwFQYDVQQKDA5Tbm93bWFrZXJzIEluYzEUMBIG\r\nA1UECwwLRW5naW5lZXJpbmcxDTALBgNVBAMMBFNub3cxIDAeBgkqhkiG9w0BCQEWEWVtYWlsQGV4\r\nYW1wbGUuY29tMB4XDTIwMTIwMzIyNDY0M1oXDTMwMTIwMTIyNDY0M1owgY8xCzAJBgNVBAYTAlVT\r\nMQ4wDAYDVQQIDAVNYWluZTEQMA4GA1UEBwwHQ2FyaWJvdTEXMBUGA1UECgwOU25vd21ha2VycyBJ\r\nbmMxFDASBgNVBAsMC0VuZ2luZWVyaW5nMQ0wCwYDVQQDDARTbm93MSAwHgYJKoZIhvcNAQkBFhFl\r\nbWFpbEBleGFtcGxlLmNvbTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANMmWDjXPdoa\r\nPyzIENqeY9njLan2FqCbQPSestWUUcb6NhDsJVGSQ7XR+ozQA5TaJzbP7cAJUj8vCcbqMZsgOQAu\r\nO/pzYyQEKptLmrGvPn7xkJ1A1xLkp2NY18cpDTeUPueJUoidZ9EJwEuyUZIktzxNNU1pA1lGijiu\r\n2XNxs9d9JR/hm3tCu9Im8qLVB4JtX80YUa6QtlRjWR/H8a373AYCOASdoB3c57fIPD8ATDNy2w/c\r\nfCVGiyKDMFB+GA/WTsZpOP3iohRp8ltAncSuzypcztb2iE+jijtTsiC9kUA2abAJqqpoCJubNShi\r\nVff4822czpziS44MV2guC9wANi8u3Uyl5MKsU95j01jzadKRP5S+2f0K+n8n4UoV9fnqZFyuGAKd\r\nCJi9K6NlSAP+TgPe/JP9FOSuxQOHWJfmdLHdJD+evoKi9E55sr5lRFK0xU1Fj5Ld7zjC0pXPhtJf\r\nsgjEZzD433AsHnRzvRT1KSNCPkLYomznZo5n9rWYgCQ8HcytlQDTesmKE+s05E/VSWNtH84XdDrt\r\nieXwfwhHfaABSu+WjZYxi9CXdFCSvXhsgufUcK4FbYAHl/ga/cJxZc52yFC7Pcq0u9O2BSCjYPdQ\r\nDAHs9dhT1RhwVLM8RmoAzgxyyzau0gxnAlgSBD9FMW6dXqIHIp8yAAg9cRXhYRTNAgMBAAEwDQYJ\r\nKoZIhvcNAQELBQADggIBADofEC1SvG8qa7pmKCjB/E9Sxhk3mvUO9Gq43xzwVb721Ng3VYf4vGU3\r\nwLUwJeLt0wggnj26NJweN5T3q9T8UMxZhHSWvttEU3+S1nArRB0beti716HSlOCDx4wTmBu/D1MG\r\nt/kZYFJw+zuzvAcbYct2pK69AQhD8xAIbQvqADJI7cCK3yRry+aWtppc58P81KYabUlCfFXfhJ9E\r\nP72ffN4jVHpX3lxxYh7FKAdiKbY2FYzjsc7RdgKI1R3iAAZUCGBTvezNzaetGzTUjjl/g1tcVYij\r\nltH9ZOQBPlUMI88lxUxqgRTerpPmAJH00CACx4JFiZrweLM1trZyy06wNDQgLrqHr3EOagBF/O2h\r\nhfTehNdVr6iq3YhKWBo4/+RL0RCzHMh4u86VbDDnDn4Y6HzLuyIAtBFoikoKM6UHTOa0Pqv2bBr5\r\nwbkRkVUxl9yJJw/HmTCdfnsM9dTOJUKzEglnGF2184Gg+qJDZB6fSf0EAO1F6sTqiSswl+uHQZiy\r\nDaZzyU7Gg5seKOZ20zTRaX3Ihj9Zij/ORnrARE7eM/usKMECp+7syUwAUKxDCZkGiUdskmOhhBGL\r\nJtbyK3F2UvoJoLsm3pIcvMak9KwMjSTGJB47ABUP1+w+zGcNk0D5Co3IJ6QekiLfWJyQ+kKsWLKt\r\nzOYQQatrnBagM7MI2/T4\r\n            \"\"\")\n            .attributeStatements(SamlAttributeStatementArgs.builder()\n                .type(\"GROUP\")\n                .name(\"groups\")\n                .filterType(\"REGEX\")\n                .filterValue(\".*\")\n                .build())\n            .build());\n\n        final var testAppSignonPolicy = OktaFunctions.getAppSignonPolicy(GetAppSignonPolicyArgs.builder()\n            .appId(testSaml.id())\n            .build());\n\n        for (var i = 0; i \u003c 5; i++) {\n            new User(\"testUser-\" + i, UserArgs.builder()            \n                .firstName(\"TestAcc\")\n                .lastName(\"Smith\")\n                .login(String.format(\"testAcc_%s@example.com\", range.value()))\n                .email(String.format(\"testAcc_%s@example.com\", range.value()))\n                .build());\n\n        \n}\n        for (var i = 0; i \u003c 5; i++) {\n            new Group(\"this-\" + i, GroupArgs.builder()            \n                .description(String.format(\"testAcc_%s\", range.value()))\n                .build());\n\n        \n}\n        var testUserType = new UserType(\"testUserType\", UserTypeArgs.builder()        \n            .displayName(\"Terraform Acceptance Test User Type Updated\")\n            .description(\"Terraform Acceptance Test User Type Updated\")\n            .build());\n\n        var testZone = new Zone(\"testZone\", ZoneArgs.builder()        \n            .type(\"IP\")\n            .gateways(            \n                \"1.2.3.4/24\",\n                \"2.3.4.5-2.3.4.15\")\n            .proxies(            \n                \"2.2.3.4/24\",\n                \"3.3.4.5-3.3.4.15\")\n            .build());\n\n        final var default = UserFunctions.getUserType(GetUserTypeArgs.builder()\n            .name(\"user\")\n            .build());\n\n        var testAppSignonPolicyRule = new AppSignonPolicyRule(\"testAppSignonPolicyRule\", AppSignonPolicyRuleArgs.builder()        \n            .policyId(testAppSignonPolicy.applyValue(getAppSignonPolicyResult -\u003e getAppSignonPolicyResult).applyValue(testAppSignonPolicy -\u003e testAppSignonPolicy.applyValue(getAppSignonPolicyResult -\u003e getAppSignonPolicyResult.id())))\n            .access(\"ALLOW\")\n            .customExpression(\"user.status == \\\"ACTIVE\\\"\")\n            .deviceIsManaged(false)\n            .deviceIsRegistered(true)\n            .factorMode(\"2FA\")\n            .groupsExcludeds(            \n                this_[2].id(),\n                this_[3].id(),\n                this_[4].id())\n            .groupsIncludeds(            \n                this_[0].id(),\n                this_[1].id())\n            .networkConnection(\"ZONE\")\n            .networkIncludes(testZone.id())\n            .platformIncludes(            \n                AppSignonPolicyRulePlatformIncludeArgs.builder()\n                    .osType(\"ANDROID\")\n                    .type(\"MOBILE\")\n                    .build(),\n                AppSignonPolicyRulePlatformIncludeArgs.builder()\n                    .osType(\"IOS\")\n                    .type(\"MOBILE\")\n                    .build(),\n                AppSignonPolicyRulePlatformIncludeArgs.builder()\n                    .osType(\"MACOS\")\n                    .type(\"DESKTOP\")\n                    .build(),\n                AppSignonPolicyRulePlatformIncludeArgs.builder()\n                    .osType(\"OTHER\")\n                    .type(\"DESKTOP\")\n                    .build(),\n                AppSignonPolicyRulePlatformIncludeArgs.builder()\n                    .osType(\"OTHER\")\n                    .type(\"MOBILE\")\n                    .build(),\n                AppSignonPolicyRulePlatformIncludeArgs.builder()\n                    .osType(\"WINDOWS\")\n                    .type(\"DESKTOP\")\n                    .build())\n            .priority(98)\n            .reAuthenticationFrequency(\"PT43800H\")\n            .type(\"ASSURANCE\")\n            .userTypesExcludeds(testUserType.id())\n            .userTypesIncludeds(default_.id())\n            .usersExcludeds(            \n                testUser[2].id(),\n                testUser[3].id(),\n                testUser[4].id())\n            .usersIncludeds(            \n                testUser[0].id(),\n                testUser[1].id())\n            .constraints(            \n                serializeJson(\n                    jsonObject(\n                        jsonProperty(\"knowledge\", jsonObject(\n                            jsonProperty(\"reauthenticateIn\", \"PT2H\"),\n                            jsonProperty(\"types\", jsonArray(\"password\"))\n                        )),\n                        jsonProperty(\"possession\", jsonObject(\n                            jsonProperty(\"deviceBound\", \"REQUIRED\")\n                        ))\n                    )),\n                serializeJson(\n                    jsonObject(\n                        jsonProperty(\"possession\", jsonObject(\n                            jsonProperty(\"deviceBound\", \"REQUIRED\"),\n                            jsonProperty(\"hardwareProtection\", \"REQUIRED\"),\n                            jsonProperty(\"userPresence\", \"OPTIONAL\")\n                        ))\n                    )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testSaml:\n    type: okta:app:Saml\n    properties:\n      label: testAcc_replace_with_uuid\n      ssoUrl: https://google.com\n      recipient: https://here.com\n      destination: https://its-about-the-journey.com\n      audience: https://audience.com\n      subjectNameIdTemplate: ${user.userName}\n      subjectNameIdFormat: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n      responseSigned: true\n      signatureAlgorithm: RSA_SHA256\n      digestAlgorithm: SHA256\n      honorForceAuthn: false\n      authnContextClassRef: urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\n      singleLogoutIssuer: https://dunshire.okta.com\n      singleLogoutUrl: https://dunshire.okta.com/logout\n      singleLogoutCertificate: \"MIIFnDCCA4QCCQDBSLbiON2T1zANBgkqhkiG9w0BAQsFADCBjzELMAkGA1UEBhMCVVMxDjAMBgNV\\r\\nBAgMBU1haW5lMRAwDgYDVQQHDAdDYXJpYm91MRcwFQYDVQQKDA5Tbm93bWFrZXJzIEluYzEUMBIG\\r\\nA1UECwwLRW5naW5lZXJpbmcxDTALBgNVBAMMBFNub3cxIDAeBgkqhkiG9w0BCQEWEWVtYWlsQGV4\\r\\nYW1wbGUuY29tMB4XDTIwMTIwMzIyNDY0M1oXDTMwMTIwMTIyNDY0M1owgY8xCzAJBgNVBAYTAlVT\\r\\nMQ4wDAYDVQQIDAVNYWluZTEQMA4GA1UEBwwHQ2FyaWJvdTEXMBUGA1UECgwOU25vd21ha2VycyBJ\\r\\nbmMxFDASBgNVBAsMC0VuZ2luZWVyaW5nMQ0wCwYDVQQDDARTbm93MSAwHgYJKoZIhvcNAQkBFhFl\\r\\nbWFpbEBleGFtcGxlLmNvbTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANMmWDjXPdoa\\r\\nPyzIENqeY9njLan2FqCbQPSestWUUcb6NhDsJVGSQ7XR+ozQA5TaJzbP7cAJUj8vCcbqMZsgOQAu\\r\\nO/pzYyQEKptLmrGvPn7xkJ1A1xLkp2NY18cpDTeUPueJUoidZ9EJwEuyUZIktzxNNU1pA1lGijiu\\r\\n2XNxs9d9JR/hm3tCu9Im8qLVB4JtX80YUa6QtlRjWR/H8a373AYCOASdoB3c57fIPD8ATDNy2w/c\\r\\nfCVGiyKDMFB+GA/WTsZpOP3iohRp8ltAncSuzypcztb2iE+jijtTsiC9kUA2abAJqqpoCJubNShi\\r\\nVff4822czpziS44MV2guC9wANi8u3Uyl5MKsU95j01jzadKRP5S+2f0K+n8n4UoV9fnqZFyuGAKd\\r\\nCJi9K6NlSAP+TgPe/JP9FOSuxQOHWJfmdLHdJD+evoKi9E55sr5lRFK0xU1Fj5Ld7zjC0pXPhtJf\\r\\nsgjEZzD433AsHnRzvRT1KSNCPkLYomznZo5n9rWYgCQ8HcytlQDTesmKE+s05E/VSWNtH84XdDrt\\r\\nieXwfwhHfaABSu+WjZYxi9CXdFCSvXhsgufUcK4FbYAHl/ga/cJxZc52yFC7Pcq0u9O2BSCjYPdQ\\r\\nDAHs9dhT1RhwVLM8RmoAzgxyyzau0gxnAlgSBD9FMW6dXqIHIp8yAAg9cRXhYRTNAgMBAAEwDQYJ\\r\\nKoZIhvcNAQELBQADggIBADofEC1SvG8qa7pmKCjB/E9Sxhk3mvUO9Gq43xzwVb721Ng3VYf4vGU3\\r\\nwLUwJeLt0wggnj26NJweN5T3q9T8UMxZhHSWvttEU3+S1nArRB0beti716HSlOCDx4wTmBu/D1MG\\r\\nt/kZYFJw+zuzvAcbYct2pK69AQhD8xAIbQvqADJI7cCK3yRry+aWtppc58P81KYabUlCfFXfhJ9E\\r\\nP72ffN4jVHpX3lxxYh7FKAdiKbY2FYzjsc7RdgKI1R3iAAZUCGBTvezNzaetGzTUjjl/g1tcVYij\\r\\nltH9ZOQBPlUMI88lxUxqgRTerpPmAJH00CACx4JFiZrweLM1trZyy06wNDQgLrqHr3EOagBF/O2h\\r\\nhfTehNdVr6iq3YhKWBo4/+RL0RCzHMh4u86VbDDnDn4Y6HzLuyIAtBFoikoKM6UHTOa0Pqv2bBr5\\r\\nwbkRkVUxl9yJJw/HmTCdfnsM9dTOJUKzEglnGF2184Gg+qJDZB6fSf0EAO1F6sTqiSswl+uHQZiy\\r\\nDaZzyU7Gg5seKOZ20zTRaX3Ihj9Zij/ORnrARE7eM/usKMECp+7syUwAUKxDCZkGiUdskmOhhBGL\\r\\nJtbyK3F2UvoJoLsm3pIcvMak9KwMjSTGJB47ABUP1+w+zGcNk0D5Co3IJ6QekiLfWJyQ+kKsWLKt\\r\\nzOYQQatrnBagM7MI2/T4\\r\\n\"\n      attributeStatements:\n        - type: GROUP\n          name: groups\n          filterType: REGEX\n          filterValue: .*\n  testUser:\n    type: okta:user:User\n    properties:\n      firstName: TestAcc\n      lastName: Smith\n      login: testAcc_${range.value}@example.com\n      email: testAcc_${range.value}@example.com\n    options: {}\n  this:\n    type: okta:group:Group\n    properties:\n      description: testAcc_${range.value}\n    options: {}\n  testUserType:\n    type: okta:user:UserType\n    properties:\n      displayName: Terraform Acceptance Test User Type Updated\n      description: Terraform Acceptance Test User Type Updated\n  testZone:\n    type: okta:network:Zone\n    properties:\n      type: IP\n      gateways:\n        - 1.2.3.4/24\n        - 2.3.4.5-2.3.4.15\n      proxies:\n        - 2.2.3.4/24\n        - 3.3.4.5-3.3.4.15\n  testAppSignonPolicyRule:\n    type: okta:AppSignonPolicyRule\n    properties:\n      policyId: ${testAppSignonPolicy.id}\n      access: ALLOW\n      customExpression: user.status == \"ACTIVE\"\n      deviceIsManaged: false\n      deviceIsRegistered: true\n      factorMode: 2FA\n      groupsExcludeds:\n        - ${this[2].id}\n        - ${this[3].id}\n        - ${this[4].id}\n      groupsIncludeds:\n        - ${this[0].id}\n        - ${this[1].id}\n      networkConnection: ZONE\n      networkIncludes:\n        - ${testZone.id}\n      platformIncludes:\n        - osType: ANDROID\n          type: MOBILE\n        - osType: IOS\n          type: MOBILE\n        - osType: MACOS\n          type: DESKTOP\n        - osType: OTHER\n          type: DESKTOP\n        - osType: OTHER\n          type: MOBILE\n        - osType: WINDOWS\n          type: DESKTOP\n      priority: 98\n      reAuthenticationFrequency: PT43800H\n      type: ASSURANCE\n      userTypesExcludeds:\n        - ${testUserType.id}\n      userTypesIncludeds:\n        - ${default.id}\n      usersExcludeds:\n        - ${testUser[2].id}\n        - ${testUser[3].id}\n        - ${testUser[4].id}\n      usersIncludeds:\n        - ${testUser[0].id}\n        - ${testUser[1].id}\n      constraints:\n        - fn::toJSON:\n            knowledge:\n              reauthenticateIn: PT2H\n              types:\n                - password\n            possession:\n              deviceBound: REQUIRED\n        - fn::toJSON:\n            possession:\n              deviceBound: REQUIRED\n              hardwareProtection: REQUIRED\n              userPresence: OPTIONAL\nvariables:\n  testAppSignonPolicy:\n    fn::invoke:\n      Function: okta:getAppSignonPolicy\n      Arguments:\n        appId: ${testSaml.id}\n  default:\n    fn::invoke:\n      Function: okta:user:getUserType\n      Arguments:\n        name: user\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta app sign-on policy rule can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/appSignonPolicyRule:AppSignonPolicyRule example \u0026#60;policy_id\u0026#62;/\u0026#60;rule_id\u0026#62;\n```\n\n ",
            "properties": {
                "access": {
                    "type": "string",
                    "description": "Allow or deny access based on the rule conditions. It can be set to `\"ALLOW\"` or `\"DENY\"`. Default is `\"ALLOW\"`.\n"
                },
                "constraints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array that contains nested Authenticator Constraint objects that are organized by the Authenticator class. Each element should be in JSON format.\n"
                },
                "customExpression": {
                    "type": "string",
                    "description": "This is an advanced optional setting. If the expression is formatted incorrectly or conflicts with conditions set above, the rule may not match any users.\n"
                },
                "deviceIsManaged": {
                    "type": "boolean",
                    "description": "If the device is managed. A device is managed if it's managed by a device management\nsystem. When managed is passed, `device_is_registered` must also be included and must be set to `true`.\n"
                },
                "deviceIsRegistered": {
                    "type": "boolean",
                    "description": "If the device is registered. A device is registered if the User enrolls with Okta\nVerify that is installed on the device. Can only be set to `true`.\n"
                },
                "factorMode": {
                    "type": "string",
                    "description": "The number of factors required to satisfy this assurance level. It can be set to `\"1FA\"` or `\"2FA\"`. Default is `\"2FA\"`.\n"
                },
                "groupsExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups IDs to be excluded.\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups IDs to be included.\n"
                },
                "inactivityPeriod": {
                    "type": "string",
                    "description": "The inactivity duration after which the end user must re-authenticate. Use the ISO 8601 Period format for recurring time intervals. Default is `\"PT1H\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy rule.\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of network zones IDs to exclude. Conflicts with `network_includes`.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of network zones IDs to include. Conflicts with `network_excludes`.\n"
                },
                "platformIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppSignonPolicyRulePlatformInclude:AppSignonPolicyRulePlatformInclude"
                    },
                    "description": "List of particular platforms or devices to match on.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "ID of the app sign-on policy.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the rule.\n"
                },
                "reAuthenticationFrequency": {
                    "type": "string",
                    "description": "The duration after which the end user must re-authenticate, regardless of user activity. Use the ISO 8601 Period format for recurring time intervals. `\"PT0S\"` - every sign-in attempt, `\"PT43800H\"` - once per session. Default is `\"PT2H\"`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the rule\n"
                },
                "type": {
                    "type": "string",
                    "description": "The Verification Method type. It can be set to `\"ASSURANCE\"`. Default is `\"ASSURANCE\"`.\n"
                },
                "userTypesExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of user types IDs to be excluded.\n"
                },
                "userTypesIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of user types IDs to be included.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of users IDs to be excluded.\n"
                },
                "usersIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of users IDs to be included.\n"
                }
            },
            "required": [
                "name",
                "policyId"
            ],
            "inputProperties": {
                "access": {
                    "type": "string",
                    "description": "Allow or deny access based on the rule conditions. It can be set to `\"ALLOW\"` or `\"DENY\"`. Default is `\"ALLOW\"`.\n"
                },
                "constraints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array that contains nested Authenticator Constraint objects that are organized by the Authenticator class. Each element should be in JSON format.\n"
                },
                "customExpression": {
                    "type": "string",
                    "description": "This is an advanced optional setting. If the expression is formatted incorrectly or conflicts with conditions set above, the rule may not match any users.\n"
                },
                "deviceIsManaged": {
                    "type": "boolean",
                    "description": "If the device is managed. A device is managed if it's managed by a device management\nsystem. When managed is passed, `device_is_registered` must also be included and must be set to `true`.\n"
                },
                "deviceIsRegistered": {
                    "type": "boolean",
                    "description": "If the device is registered. A device is registered if the User enrolls with Okta\nVerify that is installed on the device. Can only be set to `true`.\n"
                },
                "factorMode": {
                    "type": "string",
                    "description": "The number of factors required to satisfy this assurance level. It can be set to `\"1FA\"` or `\"2FA\"`. Default is `\"2FA\"`.\n"
                },
                "groupsExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups IDs to be excluded.\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups IDs to be included.\n"
                },
                "inactivityPeriod": {
                    "type": "string",
                    "description": "The inactivity duration after which the end user must re-authenticate. Use the ISO 8601 Period format for recurring time intervals. Default is `\"PT1H\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy rule.\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of network zones IDs to exclude. Conflicts with `network_includes`.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of network zones IDs to include. Conflicts with `network_excludes`.\n"
                },
                "platformIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppSignonPolicyRulePlatformInclude:AppSignonPolicyRulePlatformInclude"
                    },
                    "description": "List of particular platforms or devices to match on.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "ID of the app sign-on policy.\n",
                    "willReplaceOnChanges": true
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the rule.\n"
                },
                "reAuthenticationFrequency": {
                    "type": "string",
                    "description": "The duration after which the end user must re-authenticate, regardless of user activity. Use the ISO 8601 Period format for recurring time intervals. `\"PT0S\"` - every sign-in attempt, `\"PT43800H\"` - once per session. Default is `\"PT2H\"`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the rule\n"
                },
                "type": {
                    "type": "string",
                    "description": "The Verification Method type. It can be set to `\"ASSURANCE\"`. Default is `\"ASSURANCE\"`.\n"
                },
                "userTypesExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of user types IDs to be excluded.\n"
                },
                "userTypesIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of user types IDs to be included.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of users IDs to be excluded.\n"
                },
                "usersIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of users IDs to be included.\n"
                }
            },
            "requiredInputs": [
                "policyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSignonPolicyRule resources.\n",
                "properties": {
                    "access": {
                        "type": "string",
                        "description": "Allow or deny access based on the rule conditions. It can be set to `\"ALLOW\"` or `\"DENY\"`. Default is `\"ALLOW\"`.\n"
                    },
                    "constraints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array that contains nested Authenticator Constraint objects that are organized by the Authenticator class. Each element should be in JSON format.\n"
                    },
                    "customExpression": {
                        "type": "string",
                        "description": "This is an advanced optional setting. If the expression is formatted incorrectly or conflicts with conditions set above, the rule may not match any users.\n"
                    },
                    "deviceIsManaged": {
                        "type": "boolean",
                        "description": "If the device is managed. A device is managed if it's managed by a device management\nsystem. When managed is passed, `device_is_registered` must also be included and must be set to `true`.\n"
                    },
                    "deviceIsRegistered": {
                        "type": "boolean",
                        "description": "If the device is registered. A device is registered if the User enrolls with Okta\nVerify that is installed on the device. Can only be set to `true`.\n"
                    },
                    "factorMode": {
                        "type": "string",
                        "description": "The number of factors required to satisfy this assurance level. It can be set to `\"1FA\"` or `\"2FA\"`. Default is `\"2FA\"`.\n"
                    },
                    "groupsExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups IDs to be excluded.\n"
                    },
                    "groupsIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups IDs to be included.\n"
                    },
                    "inactivityPeriod": {
                        "type": "string",
                        "description": "The inactivity duration after which the end user must re-authenticate. Use the ISO 8601 Period format for recurring time intervals. Default is `\"PT1H\"`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy rule.\n"
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of network zones IDs to exclude. Conflicts with `network_includes`.\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of network zones IDs to include. Conflicts with `network_excludes`.\n"
                    },
                    "platformIncludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/AppSignonPolicyRulePlatformInclude:AppSignonPolicyRulePlatformInclude"
                        },
                        "description": "List of particular platforms or devices to match on.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "ID of the app sign-on policy.\n",
                        "willReplaceOnChanges": true
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of the rule.\n"
                    },
                    "reAuthenticationFrequency": {
                        "type": "string",
                        "description": "The duration after which the end user must re-authenticate, regardless of user activity. Use the ISO 8601 Period format for recurring time intervals. `\"PT0S\"` - every sign-in attempt, `\"PT43800H\"` - once per session. Default is `\"PT2H\"`.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the rule\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The Verification Method type. It can be set to `\"ASSURANCE\"`. Default is `\"ASSURANCE\"`.\n"
                    },
                    "userTypesExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of user types IDs to be excluded.\n"
                    },
                    "userTypesIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of user types IDs to be included.\n"
                    },
                    "usersExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of users IDs to be excluded.\n"
                    },
                    "usersIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of users IDs to be included.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appUserBaseSchemaProperty:AppUserBaseSchemaProperty": {
            "description": "Manages an Application User Base Schema property.\n\nThis resource allows you to configure a base app user schema property.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AppUserBaseSchemaProperty(\"example\", {\n    appId: \"\u003capp id\u003e\",\n    index: \"customPropertyName\",\n    master: \"OKTA\",\n    title: \"customPropertyName\",\n    type: \"string\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AppUserBaseSchemaProperty(\"example\",\n    app_id=\"\u003capp id\u003e\",\n    index=\"customPropertyName\",\n    master=\"OKTA\",\n    title=\"customPropertyName\",\n    type=\"string\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AppUserBaseSchemaProperty(\"example\", new()\n    {\n        AppId = \"\u003capp id\u003e\",\n        Index = \"customPropertyName\",\n        Master = \"OKTA\",\n        Title = \"customPropertyName\",\n        Type = \"string\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAppUserBaseSchemaProperty(ctx, \"example\", \u0026okta.AppUserBaseSchemaPropertyArgs{\n\t\t\tAppId:  pulumi.String(\"\u003capp id\u003e\"),\n\t\t\tIndex:  pulumi.String(\"customPropertyName\"),\n\t\t\tMaster: pulumi.String(\"OKTA\"),\n\t\t\tTitle:  pulumi.String(\"customPropertyName\"),\n\t\t\tType:   pulumi.String(\"string\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AppUserBaseSchemaProperty;\nimport com.pulumi.okta.AppUserBaseSchemaPropertyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AppUserBaseSchemaProperty(\"example\", AppUserBaseSchemaPropertyArgs.builder()        \n            .appId(\"\u003capp id\u003e\")\n            .index(\"customPropertyName\")\n            .master(\"OKTA\")\n            .title(\"customPropertyName\")\n            .type(\"string\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AppUserBaseSchemaProperty\n    properties:\n      appId: \u003capp id\u003e\n      index: customPropertyName\n      master: OKTA\n      title: customPropertyName\n      type: string\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nApp user base schema property can be imported via the property index and app id.\n\n```sh\n $ pulumi import okta:index/appUserBaseSchemaProperty:AppUserBaseSchemaProperty example \u0026#60;app id\u0026#62;/\u0026#60;property name\u0026#62;\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The Application's ID the user schema property should be assigned to.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The property display name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID. By default, it is `\"default\"`.\n"
                }
            },
            "required": [
                "appId",
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The Application's ID the user schema property should be assigned to.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n",
                    "willReplaceOnChanges": true
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The property display name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n",
                    "willReplaceOnChanges": true
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID. By default, it is `\"default\"`.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppUserBaseSchemaProperty resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The Application's ID the user schema property should be assigned to.\n"
                    },
                    "index": {
                        "type": "string",
                        "description": "The property name.\n",
                        "willReplaceOnChanges": true
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the property is required for this application's users.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The property display name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n",
                        "willReplaceOnChanges": true
                    },
                    "userType": {
                        "type": "string",
                        "description": "User type ID. By default, it is `\"default\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appUserSchemaProperty:AppUserSchemaProperty": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AppUserSchemaProperty(\"example\", {\n    appId: \"\u003capp id\u003e\",\n    description: \"My custom property name\",\n    index: \"customPropertyName\",\n    master: \"OKTA\",\n    scope: \"SELF\",\n    title: \"customPropertyName\",\n    type: \"string\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AppUserSchemaProperty(\"example\",\n    app_id=\"\u003capp id\u003e\",\n    description=\"My custom property name\",\n    index=\"customPropertyName\",\n    master=\"OKTA\",\n    scope=\"SELF\",\n    title=\"customPropertyName\",\n    type=\"string\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AppUserSchemaProperty(\"example\", new()\n    {\n        AppId = \"\u003capp id\u003e\",\n        Description = \"My custom property name\",\n        Index = \"customPropertyName\",\n        Master = \"OKTA\",\n        Scope = \"SELF\",\n        Title = \"customPropertyName\",\n        Type = \"string\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAppUserSchemaProperty(ctx, \"example\", \u0026okta.AppUserSchemaPropertyArgs{\n\t\t\tAppId:       pulumi.String(\"\u003capp id\u003e\"),\n\t\t\tDescription: pulumi.String(\"My custom property name\"),\n\t\t\tIndex:       pulumi.String(\"customPropertyName\"),\n\t\t\tMaster:      pulumi.String(\"OKTA\"),\n\t\t\tScope:       pulumi.String(\"SELF\"),\n\t\t\tTitle:       pulumi.String(\"customPropertyName\"),\n\t\t\tType:        pulumi.String(\"string\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AppUserSchemaProperty;\nimport com.pulumi.okta.AppUserSchemaPropertyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AppUserSchemaProperty(\"example\", AppUserSchemaPropertyArgs.builder()        \n            .appId(\"\u003capp id\u003e\")\n            .description(\"My custom property name\")\n            .index(\"customPropertyName\")\n            .master(\"OKTA\")\n            .scope(\"SELF\")\n            .title(\"customPropertyName\")\n            .type(\"string\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AppUserSchemaProperty\n    properties:\n      appId: \u003capp id\u003e\n      description: My custom property name\n      index: customPropertyName\n      master: OKTA\n      scope: SELF\n      title: customPropertyName\n      type: string\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nApp user schema property can be imported via the property index and app id.\n\n```sh\n $ pulumi import okta:index/appUserSchemaProperty:AppUserSchemaProperty example \u0026#60;app id\u0026#62;/\u0026#60;property name\u0026#62;\n```\n\n ",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The Application's ID the user custom schema property should be assigned to.\n"
                },
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppUserSchemaPropertyArrayOneOf:AppUserSchemaPropertyArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `\"array\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External namespace of the user schema property.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppUserSchemaPropertyOneOf:AppUserSchemaPropertyOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Personal `\"SELF\"` or Group `\"NONE\"` level. Default value is `\"NONE\"`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                },
                "union": {
                    "type": "boolean",
                    "description": "If `type` is set to `\"array\"`, used to set whether attribute value is determined by group priority `false`, or combine values across groups `true`. Can not be set to `true` if `scope` is set to `\"SELF\"`.\n"
                },
                "unique": {
                    "type": "string",
                    "description": "Subschema unique restriction\n"
                },
                "userType": {
                    "type": "string",
                    "description": "Custom subschema user type\n"
                }
            },
            "required": [
                "appId",
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The Application's ID the user custom schema property should be assigned to.\n"
                },
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppUserSchemaPropertyArrayOneOf:AppUserSchemaPropertyArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `\"array\"`.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n",
                    "willReplaceOnChanges": true
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External namespace of the user schema property.\n",
                    "willReplaceOnChanges": true
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n",
                    "willReplaceOnChanges": true
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppUserSchemaPropertyOneOf:AppUserSchemaPropertyOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Personal `\"SELF\"` or Group `\"NONE\"` level. Default value is `\"NONE\"`.\n",
                    "willReplaceOnChanges": true
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n",
                    "willReplaceOnChanges": true
                },
                "union": {
                    "type": "boolean",
                    "description": "If `type` is set to `\"array\"`, used to set whether attribute value is determined by group priority `false`, or combine values across groups `true`. Can not be set to `true` if `scope` is set to `\"SELF\"`.\n"
                },
                "unique": {
                    "type": "string",
                    "description": "Subschema unique restriction\n",
                    "willReplaceOnChanges": true
                },
                "userType": {
                    "type": "string",
                    "description": "Custom subschema user type\n"
                }
            },
            "requiredInputs": [
                "appId",
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppUserSchemaProperty resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The Application's ID the user custom schema property should be assigned to.\n"
                    },
                    "arrayEnums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values that an array property's items can be set to.\n"
                    },
                    "arrayOneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/AppUserSchemaPropertyArrayOneOf:AppUserSchemaPropertyArrayOneOf"
                        },
                        "description": "Display name and value an enum array can be set to.\n"
                    },
                    "arrayType": {
                        "type": "string",
                        "description": "The type of the array elements if `type` is set to `\"array\"`.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the user schema property.\n"
                    },
                    "enums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                    },
                    "externalName": {
                        "type": "string",
                        "description": "External name of the user schema property.\n",
                        "willReplaceOnChanges": true
                    },
                    "externalNamespace": {
                        "type": "string",
                        "description": "External namespace of the user schema property.\n",
                        "willReplaceOnChanges": true
                    },
                    "index": {
                        "type": "string",
                        "description": "The property name.\n",
                        "willReplaceOnChanges": true
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                    },
                    "maxLength": {
                        "type": "integer",
                        "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                    },
                    "minLength": {
                        "type": "integer",
                        "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                    },
                    "oneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/AppUserSchemaPropertyOneOf:AppUserSchemaPropertyOneOf"
                        },
                        "description": "Array of maps containing a mapping for display name to enum value.\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the property is required for this application's users.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "determines whether an app user attribute can be set at the Personal `\"SELF\"` or Group `\"NONE\"` level. Default value is `\"NONE\"`.\n",
                        "willReplaceOnChanges": true
                    },
                    "title": {
                        "type": "string",
                        "description": "display name for the enum value.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n",
                        "willReplaceOnChanges": true
                    },
                    "union": {
                        "type": "boolean",
                        "description": "If `type` is set to `\"array\"`, used to set whether attribute value is determined by group priority `false`, or combine values across groups `true`. Can not be set to `true` if `scope` is set to `\"SELF\"`.\n"
                    },
                    "unique": {
                        "type": "string",
                        "description": "Subschema unique restriction\n",
                        "willReplaceOnChanges": true
                    },
                    "userType": {
                        "type": "string",
                        "description": "Custom subschema user type\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/authServerClaimDefault:AuthServerClaimDefault": {
            "description": "Configures Default Authorization Server Claim.\n\nThis resource allows you to configure Default Authorization Server Claims.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AuthServerClaimDefault(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    value: \"(appuser != null) ? appuser.userName : app.clientId\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AuthServerClaimDefault(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    value=\"(appuser != null) ? appuser.userName : app.clientId\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AuthServerClaimDefault(\"example\", new()\n    {\n        AuthServerId = \"\u003cauth server id\u003e\",\n        Value = \"(appuser != null) ? appuser.userName : app.clientId\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAuthServerClaimDefault(ctx, \"example\", \u0026okta.AuthServerClaimDefaultArgs{\n\t\t\tAuthServerId: pulumi.String(\"\u003cauth server id\u003e\"),\n\t\t\tValue:        pulumi.String(\"(appuser != null) ? appuser.userName : app.clientId\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AuthServerClaimDefault;\nimport com.pulumi.okta.AuthServerClaimDefaultArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AuthServerClaimDefault(\"example\", AuthServerClaimDefaultArgs.builder()        \n            .authServerId(\"\u003cauth server id\u003e\")\n            .value(\"(appuser != null) ? appuser.userName : app.clientId\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AuthServerClaimDefault\n    properties:\n      authServerId: \u003cauth server id\u003e\n      value: '(appuser != null) ? appuser.userName : app.clientId'\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAuthorization Server Claim can be imported via the Auth Server ID and Claim ID or Claim Name.\n\n```sh\n $ pulumi import okta:index/authServerClaimDefault:AuthServerClaimDefault example \u0026#60;auth server id\u0026#62;/\u0026#60;claim id\u0026#62;\n```\n\n or\n\n```sh\n $ pulumi import okta:index/authServerClaimDefault:AuthServerClaimDefault example \u0026#60;auth server id\u0026#62;/\u0026#60;claim name\u0026#62;\n```\n\n ",
            "properties": {
                "alwaysIncludeInToken": {
                    "type": "boolean",
                    "description": "Specifies whether to include claims in token.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "ID of the authorization server.\n"
                },
                "claimType": {
                    "type": "string",
                    "description": "Specifies whether the claim is for an access token `\"RESOURCE\"` or ID token `\"IDENTITY\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the claim. Can be set to `\"sub\"`, `\"address\"`, `\"birthdate\"`, `\"email\"`,\n`\"email_verified\"`, `\"family_name\"`, `\"gender\"`, `\"given_name\"`, `\"locale\"`, `\"middle_name\"`, `\"name\"`, `\"nickname\"`,\n`\"phone_number\"`, `\"picture\"`, `\"preferred_username\"`, `\"profile\"`, `\"updated_at\"`, `\"website\"`, `\"zoneinfo\"`.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of scopes the auth server claim is tied to.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the claim. Only required for `\"sub\"` claim.\n"
                },
                "valueType": {
                    "type": "string",
                    "description": "The type of value of the claim.\n"
                }
            },
            "required": [
                "alwaysIncludeInToken",
                "authServerId",
                "claimType",
                "name",
                "scopes",
                "status",
                "valueType"
            ],
            "inputProperties": {
                "alwaysIncludeInToken": {
                    "type": "boolean",
                    "description": "Specifies whether to include claims in token.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "ID of the authorization server.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the claim. Can be set to `\"sub\"`, `\"address\"`, `\"birthdate\"`, `\"email\"`,\n`\"email_verified\"`, `\"family_name\"`, `\"gender\"`, `\"given_name\"`, `\"locale\"`, `\"middle_name\"`, `\"name\"`, `\"nickname\"`,\n`\"phone_number\"`, `\"picture\"`, `\"preferred_username\"`, `\"profile\"`, `\"updated_at\"`, `\"website\"`, `\"zoneinfo\"`.\n",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "description": "The value of the claim. Only required for `\"sub\"` claim.\n"
                }
            },
            "requiredInputs": [
                "authServerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthServerClaimDefault resources.\n",
                "properties": {
                    "alwaysIncludeInToken": {
                        "type": "boolean",
                        "description": "Specifies whether to include claims in token.\n"
                    },
                    "authServerId": {
                        "type": "string",
                        "description": "ID of the authorization server.\n",
                        "willReplaceOnChanges": true
                    },
                    "claimType": {
                        "type": "string",
                        "description": "Specifies whether the claim is for an access token `\"RESOURCE\"` or ID token `\"IDENTITY\"`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the claim. Can be set to `\"sub\"`, `\"address\"`, `\"birthdate\"`, `\"email\"`,\n`\"email_verified\"`, `\"family_name\"`, `\"gender\"`, `\"given_name\"`, `\"locale\"`, `\"middle_name\"`, `\"name\"`, `\"nickname\"`,\n`\"phone_number\"`, `\"picture\"`, `\"preferred_username\"`, `\"profile\"`, `\"updated_at\"`, `\"website\"`, `\"zoneinfo\"`.\n",
                        "willReplaceOnChanges": true
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of scopes the auth server claim is tied to.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the application.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the claim. Only required for `\"sub\"` claim.\n"
                    },
                    "valueType": {
                        "type": "string",
                        "description": "The type of value of the claim.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/authServerDefault:AuthServerDefault": {
            "description": "Configures Default Authorization Server.\n\nThis resource allows you to configure Default Authorization Server.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AuthServerDefault(\"example\", {});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AuthServerDefault(\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AuthServerDefault(\"example\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAuthServerDefault(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AuthServerDefault;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AuthServerDefault(\"example\");\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AuthServerDefault\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAuthorization Server can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/authServerDefault:AuthServerDefault example \u0026#60;auth server name\u0026#62;\n```\n\n ",
            "properties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token.\n"
                },
                "credentialsLastRotated": {
                    "type": "string",
                    "description": "The timestamp when the authorization server started to use the `kid` for signing tokens.\n"
                },
                "credentialsNextRotation": {
                    "type": "string",
                    "description": "The timestamp when the authorization server changes the key for signing tokens. Only returned when `credentials_rotation_mode` is `\"AUTO\"`.\n"
                },
                "credentialsRotationMode": {
                    "type": "string",
                    "description": "The key rotation mode for the authorization server. Can be `\"AUTO\"` or `\"MANUAL\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the authorization server.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The complete URL for a Custom Authorization Server. This becomes the `iss` claim in an access token.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Allows you to use a custom issuer URL. It can be set to `\"CUSTOM_URL\"`, `\"ORG_URL\"`, or `\"DYNAMIC\"`.\n"
                },
                "kid": {
                    "type": "string",
                    "description": "The ID of the JSON Web Key used for signing tokens issued by the authorization server.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the authorization server.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the auth server.\n"
                }
            },
            "required": [
                "credentialsLastRotated",
                "credentialsNextRotation",
                "issuer",
                "kid",
                "name"
            ],
            "inputProperties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token.\n"
                },
                "credentialsRotationMode": {
                    "type": "string",
                    "description": "The key rotation mode for the authorization server. Can be `\"AUTO\"` or `\"MANUAL\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the authorization server.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Allows you to use a custom issuer URL. It can be set to `\"CUSTOM_URL\"`, `\"ORG_URL\"`, or `\"DYNAMIC\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the authorization server.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the auth server.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthServerDefault resources.\n",
                "properties": {
                    "audiences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token.\n"
                    },
                    "credentialsLastRotated": {
                        "type": "string",
                        "description": "The timestamp when the authorization server started to use the `kid` for signing tokens.\n"
                    },
                    "credentialsNextRotation": {
                        "type": "string",
                        "description": "The timestamp when the authorization server changes the key for signing tokens. Only returned when `credentials_rotation_mode` is `\"AUTO\"`.\n"
                    },
                    "credentialsRotationMode": {
                        "type": "string",
                        "description": "The key rotation mode for the authorization server. Can be `\"AUTO\"` or `\"MANUAL\"`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the authorization server.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The complete URL for a Custom Authorization Server. This becomes the `iss` claim in an access token.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Allows you to use a custom issuer URL. It can be set to `\"CUSTOM_URL\"`, `\"ORG_URL\"`, or `\"DYNAMIC\"`.\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "The ID of the JSON Web Key used for signing tokens issued by the authorization server.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the authorization server.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the auth server.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/authenticator:Authenticator": {
            "description": "\u003e **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.\n\nThis resource allows you to configure different authenticators.\n\n\u003e **Create:** The Okta API has an odd notion of create for authenticators. If\nthe authenticator doesn't exist then a one time `POST /api/v1/authenticators` to\ncreate the authenticator (hard create) will be performed. Thereafter, that\nauthenticator is never deleted, it is only deactivated (soft delete). Therefore,\nif the authenticator already exists create is just a soft import of an existing\nauthenticator.\n\n\u003e **Delete:** Authenticators can not be truly deleted therefore delete is soft.\nDelete will attempt to deativate the authenticator. An authenticator can only be\ndeactivated if it's not in use by any other policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.Authenticator(\"test\", {\n    key: \"security_question\",\n    settings: JSON.stringify({\n        allowedFor: \"recovery\",\n    }),\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_okta as okta\n\ntest = okta.Authenticator(\"test\",\n    key=\"security_question\",\n    settings=json.dumps({\n        \"allowedFor\": \"recovery\",\n    }))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Okta.Authenticator(\"test\", new()\n    {\n        Key = \"security_question\",\n        Settings = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"allowedFor\"] = \"recovery\",\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"allowedFor\": \"recovery\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = okta.NewAuthenticator(ctx, \"test\", \u0026okta.AuthenticatorArgs{\n\t\t\tKey:      pulumi.String(\"security_question\"),\n\t\t\tSettings: pulumi.String(json0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Authenticator;\nimport com.pulumi.okta.AuthenticatorArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new Authenticator(\"test\", AuthenticatorArgs.builder()        \n            .key(\"security_question\")\n            .settings(serializeJson(\n                jsonObject(\n                    jsonProperty(\"allowedFor\", \"recovery\")\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: okta:Authenticator\n    properties:\n      key: security_question\n      settings:\n        fn::toJSON:\n          allowedFor: recovery\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta authenticator can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/authenticator:Authenticator example \u0026#60;authenticator_id\u0026#62;\n```\n\n ",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A human-readable string that identifies the authenticator. Some authenticators are available by feature flag on the organization. Possible values inclue: `duo`, `external_idp`, `google_otp`, `okta_email`, `okta_password`, `okta_verify`, `onprem_mfa`, `phone_number`, `rsa_token`, `security_question`, `webauthn`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the authenticator.\n"
                },
                "providerAuthPort": {
                    "type": "integer",
                    "description": "The RADIUS server port (for example 1812). This is defined when the On-Prem RADIUS server is configured. Used only for authenticators with type `\"security_key\"`.  Conflicts with `provider_json` argument.\n"
                },
                "providerHost": {
                    "type": "string",
                    "description": "(DUO specific) - The Duo Security API hostname\". Conflicts with `provider_json` argument.\n"
                },
                "providerHostname": {
                    "type": "string",
                    "description": "Server host name or IP address. Default is `\"localhost\"`. Used only for authenticators with type `\"security_key\"`.  Conflicts with `provider_json` argument.\n"
                },
                "providerInstanceId": {
                    "type": "string",
                    "description": "App Instance ID.\n"
                },
                "providerIntegrationKey": {
                    "type": "string",
                    "description": "(DUO specific) - The Duo Security integration key.  Conflicts with `provider_json` argument.\n"
                },
                "providerJson": {
                    "type": "string",
                    "description": "Provider JSON allows for expressive provider\nvalues. This argument conflicts with the other `provider_xxx` arguments.  The\n[Create\nProvider](https://developer.okta.com/docs/reference/api/authenticators-admin/#request)\nillustrates detailed provider values for a Duo authenticator.  [Provider\nvalues](https://developer.okta.com/docs/reference/api/authenticators-admin/#authenticators-administration-api-object)\nare listed in Okta API.\n"
                },
                "providerSecretKey": {
                    "type": "string",
                    "description": "(DUO specific) - The Duo Security secret key.  Conflicts with `provider_json` argument.\n"
                },
                "providerSharedSecret": {
                    "type": "string",
                    "description": "An authentication key that must be defined when the RADIUS server is configured, and must be the same on both the RADIUS client and server. Used only for authenticators with type `\"security_key\"`.  Conflicts with `provider_json` argument.\n",
                    "secret": true
                },
                "providerType": {
                    "type": "string",
                    "description": "Provider type. Supported value for Duo: `DUO`. Supported value for Custom App: `PUSH`\n"
                },
                "providerUserNameTemplate": {
                    "type": "string",
                    "description": "Username template expected by the provider. Used only for authenticators with type `\"security_key\"`.  Conflicts with `provider_json` argument.\n"
                },
                "settings": {
                    "type": "string",
                    "description": "Settings for the authenticator. The settings JSON contains values based on Authenticator key. It is not used for authenticators with type `\"security_key\"`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the authenticator. Default is `ACTIVE`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of Authenticator. Values include: `\"password\"`, `\"security_question\"`, `\"phone\"`, `\"email\"`, `\"app\"`, `\"federated\"`, and `\"security_key\"`.\n"
                }
            },
            "required": [
                "key",
                "name",
                "providerInstanceId",
                "providerType",
                "type"
            ],
            "inputProperties": {
                "key": {
                    "type": "string",
                    "description": "A human-readable string that identifies the authenticator. Some authenticators are available by feature flag on the organization. Possible values inclue: `duo`, `external_idp`, `google_otp`, `okta_email`, `okta_password`, `okta_verify`, `onprem_mfa`, `phone_number`, `rsa_token`, `security_question`, `webauthn`\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the authenticator.\n"
                },
                "providerAuthPort": {
                    "type": "integer",
                    "description": "The RADIUS server port (for example 1812). This is defined when the On-Prem RADIUS server is configured. Used only for authenticators with type `\"security_key\"`.  Conflicts with `provider_json` argument.\n"
                },
                "providerHost": {
                    "type": "string",
                    "description": "(DUO specific) - The Duo Security API hostname\". Conflicts with `provider_json` argument.\n"
                },
                "providerHostname": {
                    "type": "string",
                    "description": "Server host name or IP address. Default is `\"localhost\"`. Used only for authenticators with type `\"security_key\"`.  Conflicts with `provider_json` argument.\n"
                },
                "providerIntegrationKey": {
                    "type": "string",
                    "description": "(DUO specific) - The Duo Security integration key.  Conflicts with `provider_json` argument.\n"
                },
                "providerJson": {
                    "type": "string",
                    "description": "Provider JSON allows for expressive provider\nvalues. This argument conflicts with the other `provider_xxx` arguments.  The\n[Create\nProvider](https://developer.okta.com/docs/reference/api/authenticators-admin/#request)\nillustrates detailed provider values for a Duo authenticator.  [Provider\nvalues](https://developer.okta.com/docs/reference/api/authenticators-admin/#authenticators-administration-api-object)\nare listed in Okta API.\n"
                },
                "providerSecretKey": {
                    "type": "string",
                    "description": "(DUO specific) - The Duo Security secret key.  Conflicts with `provider_json` argument.\n"
                },
                "providerSharedSecret": {
                    "type": "string",
                    "description": "An authentication key that must be defined when the RADIUS server is configured, and must be the same on both the RADIUS client and server. Used only for authenticators with type `\"security_key\"`.  Conflicts with `provider_json` argument.\n",
                    "secret": true
                },
                "providerUserNameTemplate": {
                    "type": "string",
                    "description": "Username template expected by the provider. Used only for authenticators with type `\"security_key\"`.  Conflicts with `provider_json` argument.\n"
                },
                "settings": {
                    "type": "string",
                    "description": "Settings for the authenticator. The settings JSON contains values based on Authenticator key. It is not used for authenticators with type `\"security_key\"`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the authenticator. Default is `ACTIVE`.\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Authenticator resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "A human-readable string that identifies the authenticator. Some authenticators are available by feature flag on the organization. Possible values inclue: `duo`, `external_idp`, `google_otp`, `okta_email`, `okta_password`, `okta_verify`, `onprem_mfa`, `phone_number`, `rsa_token`, `security_question`, `webauthn`\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the authenticator.\n"
                    },
                    "providerAuthPort": {
                        "type": "integer",
                        "description": "The RADIUS server port (for example 1812). This is defined when the On-Prem RADIUS server is configured. Used only for authenticators with type `\"security_key\"`.  Conflicts with `provider_json` argument.\n"
                    },
                    "providerHost": {
                        "type": "string",
                        "description": "(DUO specific) - The Duo Security API hostname\". Conflicts with `provider_json` argument.\n"
                    },
                    "providerHostname": {
                        "type": "string",
                        "description": "Server host name or IP address. Default is `\"localhost\"`. Used only for authenticators with type `\"security_key\"`.  Conflicts with `provider_json` argument.\n"
                    },
                    "providerInstanceId": {
                        "type": "string",
                        "description": "App Instance ID.\n"
                    },
                    "providerIntegrationKey": {
                        "type": "string",
                        "description": "(DUO specific) - The Duo Security integration key.  Conflicts with `provider_json` argument.\n"
                    },
                    "providerJson": {
                        "type": "string",
                        "description": "Provider JSON allows for expressive provider\nvalues. This argument conflicts with the other `provider_xxx` arguments.  The\n[Create\nProvider](https://developer.okta.com/docs/reference/api/authenticators-admin/#request)\nillustrates detailed provider values for a Duo authenticator.  [Provider\nvalues](https://developer.okta.com/docs/reference/api/authenticators-admin/#authenticators-administration-api-object)\nare listed in Okta API.\n"
                    },
                    "providerSecretKey": {
                        "type": "string",
                        "description": "(DUO specific) - The Duo Security secret key.  Conflicts with `provider_json` argument.\n"
                    },
                    "providerSharedSecret": {
                        "type": "string",
                        "description": "An authentication key that must be defined when the RADIUS server is configured, and must be the same on both the RADIUS client and server. Used only for authenticators with type `\"security_key\"`.  Conflicts with `provider_json` argument.\n",
                        "secret": true
                    },
                    "providerType": {
                        "type": "string",
                        "description": "Provider type. Supported value for Duo: `DUO`. Supported value for Custom App: `PUSH`\n"
                    },
                    "providerUserNameTemplate": {
                        "type": "string",
                        "description": "Username template expected by the provider. Used only for authenticators with type `\"security_key\"`.  Conflicts with `provider_json` argument.\n"
                    },
                    "settings": {
                        "type": "string",
                        "description": "Settings for the authenticator. The settings JSON contains values based on Authenticator key. It is not used for authenticators with type `\"security_key\"`.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the authenticator. Default is `ACTIVE`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of Authenticator. Values include: `\"password\"`, `\"security_question\"`, `\"phone\"`, `\"email\"`, `\"app\"`, `\"federated\"`, and `\"security_key\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/behaviour:Behaviour": {
            "description": "This resource allows you to create and configure a behavior.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst myLocation = new okta.Behaviour(\"myLocation\", {\n    locationGranularityType: \"LAT_LONG\",\n    numberOfAuthentications: 50,\n    radiusFromLocation: 20,\n    type: \"ANOMALOUS_LOCATION\",\n});\nconst myCity = new okta.Behaviour(\"myCity\", {\n    locationGranularityType: \"CITY\",\n    numberOfAuthentications: 50,\n    type: \"ANOMALOUS_LOCATION\",\n});\nconst myDevice = new okta.Behaviour(\"myDevice\", {\n    numberOfAuthentications: 50,\n    type: \"ANOMALOUS_DEVICE\",\n});\nconst myIp = new okta.Behaviour(\"myIp\", {\n    numberOfAuthentications: 50,\n    type: \"ANOMALOUS_IP\",\n});\nconst myVelocity = new okta.Behaviour(\"myVelocity\", {\n    type: \"VELOCITY\",\n    velocity: 25,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nmy_location = okta.Behaviour(\"myLocation\",\n    location_granularity_type=\"LAT_LONG\",\n    number_of_authentications=50,\n    radius_from_location=20,\n    type=\"ANOMALOUS_LOCATION\")\nmy_city = okta.Behaviour(\"myCity\",\n    location_granularity_type=\"CITY\",\n    number_of_authentications=50,\n    type=\"ANOMALOUS_LOCATION\")\nmy_device = okta.Behaviour(\"myDevice\",\n    number_of_authentications=50,\n    type=\"ANOMALOUS_DEVICE\")\nmy_ip = okta.Behaviour(\"myIp\",\n    number_of_authentications=50,\n    type=\"ANOMALOUS_IP\")\nmy_velocity = okta.Behaviour(\"myVelocity\",\n    type=\"VELOCITY\",\n    velocity=25)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myLocation = new Okta.Behaviour(\"myLocation\", new()\n    {\n        LocationGranularityType = \"LAT_LONG\",\n        NumberOfAuthentications = 50,\n        RadiusFromLocation = 20,\n        Type = \"ANOMALOUS_LOCATION\",\n    });\n\n    var myCity = new Okta.Behaviour(\"myCity\", new()\n    {\n        LocationGranularityType = \"CITY\",\n        NumberOfAuthentications = 50,\n        Type = \"ANOMALOUS_LOCATION\",\n    });\n\n    var myDevice = new Okta.Behaviour(\"myDevice\", new()\n    {\n        NumberOfAuthentications = 50,\n        Type = \"ANOMALOUS_DEVICE\",\n    });\n\n    var myIp = new Okta.Behaviour(\"myIp\", new()\n    {\n        NumberOfAuthentications = 50,\n        Type = \"ANOMALOUS_IP\",\n    });\n\n    var myVelocity = new Okta.Behaviour(\"myVelocity\", new()\n    {\n        Type = \"VELOCITY\",\n        Velocity = 25,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewBehaviour(ctx, \"myLocation\", \u0026okta.BehaviourArgs{\n\t\t\tLocationGranularityType: pulumi.String(\"LAT_LONG\"),\n\t\t\tNumberOfAuthentications: pulumi.Int(50),\n\t\t\tRadiusFromLocation:      pulumi.Int(20),\n\t\t\tType:                    pulumi.String(\"ANOMALOUS_LOCATION\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewBehaviour(ctx, \"myCity\", \u0026okta.BehaviourArgs{\n\t\t\tLocationGranularityType: pulumi.String(\"CITY\"),\n\t\t\tNumberOfAuthentications: pulumi.Int(50),\n\t\t\tType:                    pulumi.String(\"ANOMALOUS_LOCATION\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewBehaviour(ctx, \"myDevice\", \u0026okta.BehaviourArgs{\n\t\t\tNumberOfAuthentications: pulumi.Int(50),\n\t\t\tType:                    pulumi.String(\"ANOMALOUS_DEVICE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewBehaviour(ctx, \"myIp\", \u0026okta.BehaviourArgs{\n\t\t\tNumberOfAuthentications: pulumi.Int(50),\n\t\t\tType:                    pulumi.String(\"ANOMALOUS_IP\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewBehaviour(ctx, \"myVelocity\", \u0026okta.BehaviourArgs{\n\t\t\tType:     pulumi.String(\"VELOCITY\"),\n\t\t\tVelocity: pulumi.Int(25),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Behaviour;\nimport com.pulumi.okta.BehaviourArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myLocation = new Behaviour(\"myLocation\", BehaviourArgs.builder()        \n            .locationGranularityType(\"LAT_LONG\")\n            .numberOfAuthentications(50)\n            .radiusFromLocation(20)\n            .type(\"ANOMALOUS_LOCATION\")\n            .build());\n\n        var myCity = new Behaviour(\"myCity\", BehaviourArgs.builder()        \n            .locationGranularityType(\"CITY\")\n            .numberOfAuthentications(50)\n            .type(\"ANOMALOUS_LOCATION\")\n            .build());\n\n        var myDevice = new Behaviour(\"myDevice\", BehaviourArgs.builder()        \n            .numberOfAuthentications(50)\n            .type(\"ANOMALOUS_DEVICE\")\n            .build());\n\n        var myIp = new Behaviour(\"myIp\", BehaviourArgs.builder()        \n            .numberOfAuthentications(50)\n            .type(\"ANOMALOUS_IP\")\n            .build());\n\n        var myVelocity = new Behaviour(\"myVelocity\", BehaviourArgs.builder()        \n            .type(\"VELOCITY\")\n            .velocity(25)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myLocation:\n    type: okta:Behaviour\n    properties:\n      locationGranularityType: LAT_LONG\n      numberOfAuthentications: 50\n      radiusFromLocation: 20\n      type: ANOMALOUS_LOCATION\n  myCity:\n    type: okta:Behaviour\n    properties:\n      locationGranularityType: CITY\n      numberOfAuthentications: 50\n      type: ANOMALOUS_LOCATION\n  myDevice:\n    type: okta:Behaviour\n    properties:\n      numberOfAuthentications: 50\n      type: ANOMALOUS_DEVICE\n  myIp:\n    type: okta:Behaviour\n    properties:\n      numberOfAuthentications: 50\n      type: ANOMALOUS_IP\n  myVelocity:\n    type: okta:Behaviour\n    properties:\n      type: VELOCITY\n      velocity: 25\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nBehavior can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/behaviour:Behaviour example \u0026#60;behavior id\u0026#62;\n```\n\n ",
            "properties": {
                "locationGranularityType": {
                    "type": "string",
                    "description": "Determines the method and level of detail used to evaluate the behavior.\nRequired for `\"ANOMALOUS_LOCATION\"` behavior type. Can be set to `\"LAT_LONG\"`, `\"CITY\"`, `\"COUNTRY\"`\nor `\"SUBDIVISION\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the behavior.\n"
                },
                "numberOfAuthentications": {
                    "type": "integer",
                    "description": "The number of recent authentications used to evaluate the behavior. Required\nfor `\"ANOMALOUS_LOCATION\"`, `\"ANOMALOUS_DEVICE\"` and `\"ANOMALOUS_IP\"` behavior types.\n"
                },
                "radiusFromLocation": {
                    "type": "integer",
                    "description": "Radius from location (in kilometers). Should be at least 5. Required\nwhen `location_granularity_type` is set to `\"LAT_LONG\"`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the behavior. By default, it is`\"ACTIVE\"`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the behavior. Can be set to `\"ANOMALOUS_LOCATION\"`, `\"ANOMALOUS_DEVICE\"`, `\"ANOMALOUS_IP\"`\nor `\"VELOCITY\"`. Resource will be recreated when the type changes.\n"
                },
                "velocity": {
                    "type": "integer",
                    "description": "Velocity (in kilometers per hour). Should be at least 1. Required for `\"VELOCITY\"` behavior\ntype.\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "locationGranularityType": {
                    "type": "string",
                    "description": "Determines the method and level of detail used to evaluate the behavior.\nRequired for `\"ANOMALOUS_LOCATION\"` behavior type. Can be set to `\"LAT_LONG\"`, `\"CITY\"`, `\"COUNTRY\"`\nor `\"SUBDIVISION\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the behavior.\n"
                },
                "numberOfAuthentications": {
                    "type": "integer",
                    "description": "The number of recent authentications used to evaluate the behavior. Required\nfor `\"ANOMALOUS_LOCATION\"`, `\"ANOMALOUS_DEVICE\"` and `\"ANOMALOUS_IP\"` behavior types.\n"
                },
                "radiusFromLocation": {
                    "type": "integer",
                    "description": "Radius from location (in kilometers). Should be at least 5. Required\nwhen `location_granularity_type` is set to `\"LAT_LONG\"`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the behavior. By default, it is`\"ACTIVE\"`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the behavior. Can be set to `\"ANOMALOUS_LOCATION\"`, `\"ANOMALOUS_DEVICE\"`, `\"ANOMALOUS_IP\"`\nor `\"VELOCITY\"`. Resource will be recreated when the type changes.\n",
                    "willReplaceOnChanges": true
                },
                "velocity": {
                    "type": "integer",
                    "description": "Velocity (in kilometers per hour). Should be at least 1. Required for `\"VELOCITY\"` behavior\ntype.\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Behaviour resources.\n",
                "properties": {
                    "locationGranularityType": {
                        "type": "string",
                        "description": "Determines the method and level of detail used to evaluate the behavior.\nRequired for `\"ANOMALOUS_LOCATION\"` behavior type. Can be set to `\"LAT_LONG\"`, `\"CITY\"`, `\"COUNTRY\"`\nor `\"SUBDIVISION\"`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the behavior.\n"
                    },
                    "numberOfAuthentications": {
                        "type": "integer",
                        "description": "The number of recent authentications used to evaluate the behavior. Required\nfor `\"ANOMALOUS_LOCATION\"`, `\"ANOMALOUS_DEVICE\"` and `\"ANOMALOUS_IP\"` behavior types.\n"
                    },
                    "radiusFromLocation": {
                        "type": "integer",
                        "description": "Radius from location (in kilometers). Should be at least 5. Required\nwhen `location_granularity_type` is set to `\"LAT_LONG\"`.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the behavior. By default, it is`\"ACTIVE\"`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the behavior. Can be set to `\"ANOMALOUS_LOCATION\"`, `\"ANOMALOUS_DEVICE\"`, `\"ANOMALOUS_IP\"`\nor `\"VELOCITY\"`. Resource will be recreated when the type changes.\n",
                        "willReplaceOnChanges": true
                    },
                    "velocity": {
                        "type": "integer",
                        "description": "Velocity (in kilometers per hour). Should be at least 1. Required for `\"VELOCITY\"` behavior\ntype.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/brand:Brand": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\n// resource has been imported into current state\n// $ terraform import okta_brand.example \u003cbrand id\u003e\nconst example = new okta.Brand(\"example\", {\n    agreeToCustomPrivacyPolicy: true,\n    customPrivacyPolicyUrl: \"https://example.com/privacy-policy\",\n    removePoweredByOkta: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\n# resource has been imported into current state\n# $ terraform import okta_brand.example \u003cbrand id\u003e\nexample = okta.Brand(\"example\",\n    agree_to_custom_privacy_policy=True,\n    custom_privacy_policy_url=\"https://example.com/privacy-policy\",\n    remove_powered_by_okta=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // resource has been imported into current state\n    // $ terraform import okta_brand.example \u003cbrand id\u003e\n    var example = new Okta.Brand(\"example\", new()\n    {\n        AgreeToCustomPrivacyPolicy = true,\n        CustomPrivacyPolicyUrl = \"https://example.com/privacy-policy\",\n        RemovePoweredByOkta = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewBrand(ctx, \"example\", \u0026okta.BrandArgs{\n\t\t\tAgreeToCustomPrivacyPolicy: pulumi.Bool(true),\n\t\t\tCustomPrivacyPolicyUrl:     pulumi.String(\"https://example.com/privacy-policy\"),\n\t\t\tRemovePoweredByOkta:        pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Brand;\nimport com.pulumi.okta.BrandArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Brand(\"example\", BrandArgs.builder()        \n            .agreeToCustomPrivacyPolicy(true)\n            .customPrivacyPolicyUrl(\"https://example.com/privacy-policy\")\n            .removePoweredByOkta(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # resource has been imported into current state\n  # // $ terraform import okta_brand.example \u003cbrand id\u003e\n  example:\n    type: okta:Brand\n    properties:\n      agreeToCustomPrivacyPolicy: true\n      customPrivacyPolicyUrl: https://example.com/privacy-policy\n      removePoweredByOkta: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn Okta Brand can be imported via the ID.\n\n```sh\n $ pulumi import okta:index/brand:Brand example \u0026#60;brand id\u0026#62;\n```\n\n ",
            "properties": {
                "agreeToCustomPrivacyPolicy": {
                    "type": "boolean",
                    "description": "Is a required input flag with when changing custom_privacy_url, shouldn't be considered as a readable property\n"
                },
                "brandId": {
                    "type": "string",
                    "description": "Brand ID, used for read (faux-create)\n"
                },
                "customPrivacyPolicyUrl": {
                    "type": "string",
                    "description": "(Optional) Custom privacy policy URL\n"
                },
                "links": {
                    "type": "string",
                    "description": "(Read-only) Link relations for this object - JSON HAL - Discoverable resources related to the brand\n"
                },
                "removePoweredByOkta": {
                    "type": "boolean",
                    "description": "(Optional) Removes \"Powered by Okta\" from the Okta-hosted sign-in page, and \"© 2021 Okta, Inc.\" from the Okta End-User Dashboard\n"
                }
            },
            "required": [
                "links"
            ],
            "inputProperties": {
                "agreeToCustomPrivacyPolicy": {
                    "type": "boolean",
                    "description": "Is a required input flag with when changing custom_privacy_url, shouldn't be considered as a readable property\n"
                },
                "brandId": {
                    "type": "string",
                    "description": "Brand ID, used for read (faux-create)\n"
                },
                "customPrivacyPolicyUrl": {
                    "type": "string",
                    "description": "(Optional) Custom privacy policy URL\n"
                },
                "removePoweredByOkta": {
                    "type": "boolean",
                    "description": "(Optional) Removes \"Powered by Okta\" from the Okta-hosted sign-in page, and \"© 2021 Okta, Inc.\" from the Okta End-User Dashboard\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Brand resources.\n",
                "properties": {
                    "agreeToCustomPrivacyPolicy": {
                        "type": "boolean",
                        "description": "Is a required input flag with when changing custom_privacy_url, shouldn't be considered as a readable property\n"
                    },
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID, used for read (faux-create)\n"
                    },
                    "customPrivacyPolicyUrl": {
                        "type": "string",
                        "description": "(Optional) Custom privacy policy URL\n"
                    },
                    "links": {
                        "type": "string",
                        "description": "(Read-only) Link relations for this object - JSON HAL - Discoverable resources related to the brand\n"
                    },
                    "removePoweredByOkta": {
                        "type": "boolean",
                        "description": "(Optional) Removes \"Powered by Okta\" from the Okta-hosted sign-in page, and \"© 2021 Okta, Inc.\" from the Okta End-User Dashboard\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/captcha:Captcha": {
            "description": "\u003e **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.\n\nThis resource allows you to create and configure a CAPTCHA.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.Captcha(\"example\", {\n    secretKey: \"some_secret_key\",\n    siteKey: \"some_key\",\n    type: \"HCAPTCHA\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.Captcha(\"example\",\n    secret_key=\"some_secret_key\",\n    site_key=\"some_key\",\n    type=\"HCAPTCHA\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Captcha(\"example\", new()\n    {\n        SecretKey = \"some_secret_key\",\n        SiteKey = \"some_key\",\n        Type = \"HCAPTCHA\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewCaptcha(ctx, \"example\", \u0026okta.CaptchaArgs{\n\t\t\tSecretKey: pulumi.String(\"some_secret_key\"),\n\t\t\tSiteKey:   pulumi.String(\"some_key\"),\n\t\t\tType:      pulumi.String(\"HCAPTCHA\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Captcha;\nimport com.pulumi.okta.CaptchaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Captcha(\"example\", CaptchaArgs.builder()        \n            .secretKey(\"some_secret_key\")\n            .siteKey(\"some_key\")\n            .type(\"HCAPTCHA\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:Captcha\n    properties:\n      secretKey: some_secret_key\n      siteKey: some_key\n      type: HCAPTCHA\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nBehavior can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/captcha:Captcha example \u0026#60;captcha id\u0026#62;\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the captcha.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Secret key issued from the CAPTCHA vendor to perform server-side validation for a CAPTCHA token.\n",
                    "secret": true
                },
                "siteKey": {
                    "type": "string",
                    "description": "Site key issued from the CAPTCHA vendor to render a CAPTCHA on a page.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the captcha. Valid values: `\"HCAPTCHA\"`, `\"RECAPTCHA_V2\"`.\n"
                }
            },
            "required": [
                "name",
                "secretKey",
                "siteKey",
                "type"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the captcha.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Secret key issued from the CAPTCHA vendor to perform server-side validation for a CAPTCHA token.\n",
                    "secret": true
                },
                "siteKey": {
                    "type": "string",
                    "description": "Site key issued from the CAPTCHA vendor to render a CAPTCHA on a page.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the captcha. Valid values: `\"HCAPTCHA\"`, `\"RECAPTCHA_V2\"`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "secretKey",
                "siteKey",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Captcha resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the captcha.\n"
                    },
                    "secretKey": {
                        "type": "string",
                        "description": "Secret key issued from the CAPTCHA vendor to perform server-side validation for a CAPTCHA token.\n",
                        "secret": true
                    },
                    "siteKey": {
                        "type": "string",
                        "description": "Site key issued from the CAPTCHA vendor to render a CAPTCHA on a page.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the captcha. Valid values: `\"HCAPTCHA\"`, `\"RECAPTCHA_V2\"`.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/captchaOrgWideSettings:CaptchaOrgWideSettings": {
            "description": "\u003e **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.\n\nThis resource allows you to configure which parts of the authentication flow requires users to pass the CAPTCHA logic.\nCAPTCHA org-wide settings can be disabled by unsetting `captcha_id` and `enabled_for`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleCaptcha = new okta.Captcha(\"exampleCaptcha\", {\n    type: \"HCAPTCHA\",\n    siteKey: \"some_key\",\n    secretKey: \"some_secret_key\",\n});\nconst exampleCaptchaOrgWideSettings = new okta.CaptchaOrgWideSettings(\"exampleCaptchaOrgWideSettings\", {\n    captchaId: okta_captcha.test.id,\n    enabledFors: [\"SSR\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_captcha = okta.Captcha(\"exampleCaptcha\",\n    type=\"HCAPTCHA\",\n    site_key=\"some_key\",\n    secret_key=\"some_secret_key\")\nexample_captcha_org_wide_settings = okta.CaptchaOrgWideSettings(\"exampleCaptchaOrgWideSettings\",\n    captcha_id=okta_captcha[\"test\"][\"id\"],\n    enabled_fors=[\"SSR\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleCaptcha = new Okta.Captcha(\"exampleCaptcha\", new()\n    {\n        Type = \"HCAPTCHA\",\n        SiteKey = \"some_key\",\n        SecretKey = \"some_secret_key\",\n    });\n\n    var exampleCaptchaOrgWideSettings = new Okta.CaptchaOrgWideSettings(\"exampleCaptchaOrgWideSettings\", new()\n    {\n        CaptchaId = okta_captcha.Test.Id,\n        EnabledFors = new[]\n        {\n            \"SSR\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewCaptcha(ctx, \"exampleCaptcha\", \u0026okta.CaptchaArgs{\n\t\t\tType:      pulumi.String(\"HCAPTCHA\"),\n\t\t\tSiteKey:   pulumi.String(\"some_key\"),\n\t\t\tSecretKey: pulumi.String(\"some_secret_key\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewCaptchaOrgWideSettings(ctx, \"exampleCaptchaOrgWideSettings\", \u0026okta.CaptchaOrgWideSettingsArgs{\n\t\t\tCaptchaId: pulumi.Any(okta_captcha.Test.Id),\n\t\t\tEnabledFors: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"SSR\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Captcha;\nimport com.pulumi.okta.CaptchaArgs;\nimport com.pulumi.okta.CaptchaOrgWideSettings;\nimport com.pulumi.okta.CaptchaOrgWideSettingsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleCaptcha = new Captcha(\"exampleCaptcha\", CaptchaArgs.builder()        \n            .type(\"HCAPTCHA\")\n            .siteKey(\"some_key\")\n            .secretKey(\"some_secret_key\")\n            .build());\n\n        var exampleCaptchaOrgWideSettings = new CaptchaOrgWideSettings(\"exampleCaptchaOrgWideSettings\", CaptchaOrgWideSettingsArgs.builder()        \n            .captchaId(okta_captcha.test().id())\n            .enabledFors(\"SSR\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleCaptcha:\n    type: okta:Captcha\n    properties:\n      type: HCAPTCHA\n      siteKey: some_key\n      secretKey: some_secret_key\n  exampleCaptchaOrgWideSettings:\n    type: okta:CaptchaOrgWideSettings\n    properties:\n      captchaId: ${okta_captcha.test.id}\n      enabledFors:\n        - SSR\n```\n\nThe following example disables org-wide CAPTCHA.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleCaptcha = new okta.Captcha(\"exampleCaptcha\", {\n    secretKey: \"some_secret_key\",\n    siteKey: \"some_key\",\n    type: \"HCAPTCHA\",\n});\nconst exampleCaptchaOrgWideSettings = new okta.CaptchaOrgWideSettings(\"exampleCaptchaOrgWideSettings\", {});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_captcha = okta.Captcha(\"exampleCaptcha\",\n    secret_key=\"some_secret_key\",\n    site_key=\"some_key\",\n    type=\"HCAPTCHA\")\nexample_captcha_org_wide_settings = okta.CaptchaOrgWideSettings(\"exampleCaptchaOrgWideSettings\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleCaptcha = new Okta.Captcha(\"exampleCaptcha\", new()\n    {\n        SecretKey = \"some_secret_key\",\n        SiteKey = \"some_key\",\n        Type = \"HCAPTCHA\",\n    });\n\n    var exampleCaptchaOrgWideSettings = new Okta.CaptchaOrgWideSettings(\"exampleCaptchaOrgWideSettings\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewCaptcha(ctx, \"exampleCaptcha\", \u0026okta.CaptchaArgs{\n\t\t\tSecretKey: pulumi.String(\"some_secret_key\"),\n\t\t\tSiteKey:   pulumi.String(\"some_key\"),\n\t\t\tType:      pulumi.String(\"HCAPTCHA\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewCaptchaOrgWideSettings(ctx, \"exampleCaptchaOrgWideSettings\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Captcha;\nimport com.pulumi.okta.CaptchaArgs;\nimport com.pulumi.okta.CaptchaOrgWideSettings;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleCaptcha = new Captcha(\"exampleCaptcha\", CaptchaArgs.builder()        \n            .secretKey(\"some_secret_key\")\n            .siteKey(\"some_key\")\n            .type(\"HCAPTCHA\")\n            .build());\n\n        var exampleCaptchaOrgWideSettings = new CaptchaOrgWideSettings(\"exampleCaptchaOrgWideSettings\");\n\n    }\n}\n```\n```yaml\nresources:\n  exampleCaptcha:\n    type: okta:Captcha\n    properties:\n      secretKey: some_secret_key\n      siteKey: some_key\n      type: HCAPTCHA\n  exampleCaptchaOrgWideSettings:\n    type: okta:CaptchaOrgWideSettings\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOrg-Wide CAPTCHA settings can be imported without any parameters.\n\n```sh\n $ pulumi import okta:index/captchaOrgWideSettings:CaptchaOrgWideSettings example _\n```\n\n ",
            "properties": {
                "captchaId": {
                    "type": "string",
                    "description": "The ID of the CAPTCHA.\n"
                },
                "enabledFors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of pages that have CAPTCHA enabled. Valid values: `\"SSR\"`, `\"SSPR\"` and `\"SIGN_IN\"`.\n"
                }
            },
            "inputProperties": {
                "captchaId": {
                    "type": "string",
                    "description": "The ID of the CAPTCHA.\n"
                },
                "enabledFors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of pages that have CAPTCHA enabled. Valid values: `\"SSR\"`, `\"SSPR\"` and `\"SIGN_IN\"`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CaptchaOrgWideSettings resources.\n",
                "properties": {
                    "captchaId": {
                        "type": "string",
                        "description": "The ID of the CAPTCHA.\n"
                    },
                    "enabledFors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of pages that have CAPTCHA enabled. Valid values: `\"SSR\"`, `\"SSPR\"` and `\"SIGN_IN\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/domain:Domain": {
            "description": "Manages custom domain for your organization.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.Domain(\"example\", {});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.Domain(\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Domain(\"example\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewDomain(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Domain;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Domain(\"example\");\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:Domain\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta Admin Role Targets can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/domain:Domain example \u0026#60;domain_id\u0026#62;\n```\n\n ",
            "properties": {
                "certificateSourceType": {
                    "type": "string",
                    "description": "Certificate source type that indicates whether the certificate is provided by the user or Okta. Accepted values: `MANUAL`, `OKTA_MANAGED`. Default value = `MANUAL`\n\n\u003e **WARNING**: Use of `OKTA_MANAGED` requires a feature flag to be enabled.\n"
                },
                "dnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/DomainDnsRecord:DomainDnsRecord"
                    },
                    "description": "TXT and CNAME records to be registered for the Domain.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Custom Domain name.\n"
                },
                "validationStatus": {
                    "type": "string",
                    "description": "Status of the domain.\n"
                }
            },
            "required": [
                "dnsRecords",
                "name",
                "validationStatus"
            ],
            "inputProperties": {
                "certificateSourceType": {
                    "type": "string",
                    "description": "Certificate source type that indicates whether the certificate is provided by the user or Okta. Accepted values: `MANUAL`, `OKTA_MANAGED`. Default value = `MANUAL`\n\n\u003e **WARNING**: Use of `OKTA_MANAGED` requires a feature flag to be enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Custom Domain name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Domain resources.\n",
                "properties": {
                    "certificateSourceType": {
                        "type": "string",
                        "description": "Certificate source type that indicates whether the certificate is provided by the user or Okta. Accepted values: `MANUAL`, `OKTA_MANAGED`. Default value = `MANUAL`\n\n\u003e **WARNING**: Use of `OKTA_MANAGED` requires a feature flag to be enabled.\n"
                    },
                    "dnsRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/DomainDnsRecord:DomainDnsRecord"
                        },
                        "description": "TXT and CNAME records to be registered for the Domain.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Custom Domain name.\n",
                        "willReplaceOnChanges": true
                    },
                    "validationStatus": {
                        "type": "string",
                        "description": "Status of the domain.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/domainCertificate:DomainCertificate": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.Domain(\"example\", {});\nconst test = new okta.DomainCertificate(\"test\", {\n    domainId: okta_domain.test.id,\n    type: \"PEM\",\n    certificate: `-----BEGIN CERTIFICATE-----\nMIIFNzCCBB+gAwIBAgISBAXomJWRama3ypu8TIxdA9wzMA0GCSqGSIb3DQEBCwUA\n...\nNSgRtSXq11j8O4JONi8EXe7cEtvzUiLR5PL3itsK2svtrZ9jIwQ95wOPaA==\n-----END CERTIFICATE-----\n`,\n    certificateChain: `-----BEGIN CERTIFICATE-----\nMIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw\n...\nDfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5\n-----END CERTIFICATE-----\n`,\n    privateKey: `-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC5cyk6x63iBJSW\n...\nnUFLNE8pXSnsqb0eOL74f3uQ\n-----END PRIVATE KEY-----\n`,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.Domain(\"example\")\ntest = okta.DomainCertificate(\"test\",\n    domain_id=okta_domain[\"test\"][\"id\"],\n    type=\"PEM\",\n    certificate=\"\"\"-----BEGIN CERTIFICATE-----\nMIIFNzCCBB+gAwIBAgISBAXomJWRama3ypu8TIxdA9wzMA0GCSqGSIb3DQEBCwUA\n...\nNSgRtSXq11j8O4JONi8EXe7cEtvzUiLR5PL3itsK2svtrZ9jIwQ95wOPaA==\n-----END CERTIFICATE-----\n\"\"\",\n    certificate_chain=\"\"\"-----BEGIN CERTIFICATE-----\nMIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw\n...\nDfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5\n-----END CERTIFICATE-----\n\"\"\",\n    private_key=\"\"\"-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC5cyk6x63iBJSW\n...\nnUFLNE8pXSnsqb0eOL74f3uQ\n-----END PRIVATE KEY-----\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Domain(\"example\");\n\n    var test = new Okta.DomainCertificate(\"test\", new()\n    {\n        DomainId = okta_domain.Test.Id,\n        Type = \"PEM\",\n        Certificate = @\"-----BEGIN CERTIFICATE-----\nMIIFNzCCBB+gAwIBAgISBAXomJWRama3ypu8TIxdA9wzMA0GCSqGSIb3DQEBCwUA\n...\nNSgRtSXq11j8O4JONi8EXe7cEtvzUiLR5PL3itsK2svtrZ9jIwQ95wOPaA==\n-----END CERTIFICATE-----\n\",\n        CertificateChain = @\"-----BEGIN CERTIFICATE-----\nMIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw\n...\nDfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5\n-----END CERTIFICATE-----\n\",\n        PrivateKey = @\"-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC5cyk6x63iBJSW\n...\nnUFLNE8pXSnsqb0eOL74f3uQ\n-----END PRIVATE KEY-----\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewDomain(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewDomainCertificate(ctx, \"test\", \u0026okta.DomainCertificateArgs{\n\t\t\tDomainId:         pulumi.Any(okta_domain.Test.Id),\n\t\t\tType:             pulumi.String(\"PEM\"),\n\t\t\tCertificate:      pulumi.String(\"-----BEGIN CERTIFICATE-----\\nMIIFNzCCBB+gAwIBAgISBAXomJWRama3ypu8TIxdA9wzMA0GCSqGSIb3DQEBCwUA\\n...\\nNSgRtSXq11j8O4JONi8EXe7cEtvzUiLR5PL3itsK2svtrZ9jIwQ95wOPaA==\\n-----END CERTIFICATE-----\\n\"),\n\t\t\tCertificateChain: pulumi.String(\"-----BEGIN CERTIFICATE-----\\nMIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw\\n...\\nDfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5\\n-----END CERTIFICATE-----\\n\"),\n\t\t\tPrivateKey:       pulumi.String(\"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC5cyk6x63iBJSW\\n...\\nnUFLNE8pXSnsqb0eOL74f3uQ\\n-----END PRIVATE KEY-----\\n\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Domain;\nimport com.pulumi.okta.DomainCertificate;\nimport com.pulumi.okta.DomainCertificateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Domain(\"example\");\n\n        var test = new DomainCertificate(\"test\", DomainCertificateArgs.builder()        \n            .domainId(okta_domain.test().id())\n            .type(\"PEM\")\n            .certificate(\"\"\"\n-----BEGIN CERTIFICATE-----\nMIIFNzCCBB+gAwIBAgISBAXomJWRama3ypu8TIxdA9wzMA0GCSqGSIb3DQEBCwUA\n...\nNSgRtSXq11j8O4JONi8EXe7cEtvzUiLR5PL3itsK2svtrZ9jIwQ95wOPaA==\n-----END CERTIFICATE-----\n            \"\"\")\n            .certificateChain(\"\"\"\n-----BEGIN CERTIFICATE-----\nMIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw\n...\nDfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5\n-----END CERTIFICATE-----\n            \"\"\")\n            .privateKey(\"\"\"\n-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC5cyk6x63iBJSW\n...\nnUFLNE8pXSnsqb0eOL74f3uQ\n-----END PRIVATE KEY-----\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:Domain\n  test:\n    type: okta:DomainCertificate\n    properties:\n      domainId: ${okta_domain.test.id}\n      type: PEM\n      #certificate = file(\"www.example.com/cert.pem\")\n      certificate: |\n        -----BEGIN CERTIFICATE-----\n        MIIFNzCCBB+gAwIBAgISBAXomJWRama3ypu8TIxdA9wzMA0GCSqGSIb3DQEBCwUA\n        ...\n        NSgRtSXq11j8O4JONi8EXe7cEtvzUiLR5PL3itsK2svtrZ9jIwQ95wOPaA==\n        -----END CERTIFICATE-----\n      #certificate_chain = file(\"www.example.com/chain.pem\")\n      certificateChain: |\n        -----BEGIN CERTIFICATE-----\n        MIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw\n        ...\n        Dfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5\n        -----END CERTIFICATE-----\n      #private_key = file(\"www.example.com/privkey.pem\")\n      privateKey: |\n        -----BEGIN PRIVATE KEY-----\n        MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC5cyk6x63iBJSW\n        ...\n        nUFLNE8pXSnsqb0eOL74f3uQ\n        -----END PRIVATE KEY-----\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThis resource does not support importing. ",
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "Certificate content.\n"
                },
                "certificateChain": {
                    "type": "string",
                    "description": "Certificate certificate chain.\n"
                },
                "domainId": {
                    "type": "string",
                    "description": "Domain ID.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Certificate private key.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Certificate type. Valid value is `\"PEM\"`.\n"
                }
            },
            "required": [
                "certificate",
                "certificateChain",
                "domainId",
                "privateKey",
                "type"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "string",
                    "description": "Certificate content.\n"
                },
                "certificateChain": {
                    "type": "string",
                    "description": "Certificate certificate chain.\n"
                },
                "domainId": {
                    "type": "string",
                    "description": "Domain ID.\n",
                    "willReplaceOnChanges": true
                },
                "privateKey": {
                    "type": "string",
                    "description": "Certificate private key.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Certificate type. Valid value is `\"PEM\"`.\n"
                }
            },
            "requiredInputs": [
                "certificate",
                "certificateChain",
                "domainId",
                "privateKey",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DomainCertificate resources.\n",
                "properties": {
                    "certificate": {
                        "type": "string",
                        "description": "Certificate content.\n"
                    },
                    "certificateChain": {
                        "type": "string",
                        "description": "Certificate certificate chain.\n"
                    },
                    "domainId": {
                        "type": "string",
                        "description": "Domain ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "Certificate private key.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Certificate type. Valid value is `\"PEM\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/domainVerification:DomainVerification": {
            "description": "Verifies the Domain. This is replacement for the `verify` field from the `okta.Domain` resource. The resource won't be \ncreated if the domain could not be verified. The provider will make several requests to verify the domain until \nthe API returns `VERIFIED` verification status. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleDomain = new okta.Domain(\"exampleDomain\", {});\nconst exampleDomainVerification = new okta.DomainVerification(\"exampleDomainVerification\", {domainId: okta_domain.test.id});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_domain = okta.Domain(\"exampleDomain\")\nexample_domain_verification = okta.DomainVerification(\"exampleDomainVerification\", domain_id=okta_domain[\"test\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleDomain = new Okta.Domain(\"exampleDomain\");\n\n    var exampleDomainVerification = new Okta.DomainVerification(\"exampleDomainVerification\", new()\n    {\n        DomainId = okta_domain.Test.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewDomain(ctx, \"exampleDomain\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewDomainVerification(ctx, \"exampleDomainVerification\", \u0026okta.DomainVerificationArgs{\n\t\t\tDomainId: pulumi.Any(okta_domain.Test.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Domain;\nimport com.pulumi.okta.DomainVerification;\nimport com.pulumi.okta.DomainVerificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleDomain = new Domain(\"exampleDomain\");\n\n        var exampleDomainVerification = new DomainVerification(\"exampleDomainVerification\", DomainVerificationArgs.builder()        \n            .domainId(okta_domain.test().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleDomain:\n    type: okta:Domain\n  exampleDomainVerification:\n    type: okta:DomainVerification\n    properties:\n      domainId: ${okta_domain.test.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThis resource does not support importing. ",
            "properties": {
                "domainId": {
                    "type": "string",
                    "description": "Domain ID.\n"
                }
            },
            "required": [
                "domainId"
            ],
            "inputProperties": {
                "domainId": {
                    "type": "string",
                    "description": "Domain ID.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "domainId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DomainVerification resources.\n",
                "properties": {
                    "domainId": {
                        "type": "string",
                        "description": "Domain ID.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/emailCustomization:EmailCustomization": {
            "description": "Use this resource to create an [email\ncustomization](https://developer.okta.com/docs/reference/api/brands/#create-email-customization)\nof an email template belonging to a brand in an Okta organization.\n\n\u003e Okta's public API is strict regarding the behavior of the `is_default`\nproperty in [an email\ncustomization](https://developer.okta.com/docs/reference/api/brands/#email-customization).\nWhen a customization is\n[created](https://developer.okta.com/docs/reference/api/brands/#create-email-customization)\nit can not be created with an `is_default` value of `true` if there is already a\ndefault customization. If an email customization is the last of the template\ntype it can not be\n[deleted](https://developer.okta.com/docs/reference/api/brands/#delete-email-customization).\nAnd the `is_default` value can't be set to false when updating the last\nremaining customization. **To allow this resource to be more flexible** set the\n`force_is_default` property to `create`, `destroy`, or `create,destroy`. This\nwill cause all the customizations to be\n[reset/deleted](https://developer.okta.com/docs/reference/api/brands/#delete-all-email-customizations)\nfor a create when there is a `create` value in `force_is_default` and\n`is_default` is `true`.  Likewise reset will be called for a delete when there\nis a `delete` value in `force_is_default` and `is_default` is `true`.\n\n\n## Import\n\nAn email customization can be imported using the customization ID, brand ID and template name.\n\n```sh\n $ pulumi import okta:index/emailCustomization:EmailCustomization example \u0026#60;customization_id\u0026#62;/\u0026#60;brand_id\u0026#62;/\u0026#60;template_name\u0026#62;\n```\n\n ",
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The body of the customization\n"
                },
                "brandId": {
                    "type": "string",
                    "description": "Brand ID\n"
                },
                "forceIsDefault": {
                    "type": "string",
                    "description": "Force `is_default` on the create and delete operation by\ndeleting all email customizations. See Note above explaing email customization API\nbehavior and [API\ndocumentation](https://developer.okta.com/docs/reference/api/brands/#list-email-customizations).\nValid values `create`, `delete`, `create,delete`.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Whether the customization is the default\n- Setting `is_default` to true when there is already a default customization will cause an error when this resource is created.\n"
                },
                "language": {
                    "type": "string",
                    "description": "The language supported by the customization\n- Example values from [supported languages](https://developer.okta.com/docs/reference/api/brands/#supported-languages):\n`\"cs\"`,\n`\"da\"`,\n`\"de\"`,\n`\"el\"`,\n`\"en\"`,\n`\"es\"`,\n`\"fi\"`,\n`\"fr\"`,\n`\"hu\"`,\n`\"id\"`,\n`\"it\"`,\n`\"ja\"`,\n`\"ko\"`,\n`\"ms\"`,\n`\"nb\"`,\n`\"nl-NL\"`,\n`\"pl\"`,\n`\"pt-BR\"`,\n`\"ro\"`,\n`\"ru\"`,\n`\"sv\"`,\n`\"th\"`,\n`\"tr\"`,\n`\"uk\"`,\n`\"vi\"`,\n`\"zh-CN\"`,\n`\"zh-TW\"`\n"
                },
                "links": {
                    "type": "string",
                    "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the customization\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template Name\n- Example values: `\"AccountLockout\"`,\n`\"ADForgotPassword\"`,\n`\"ADForgotPasswordDenied\"`,\n`\"ADSelfServiceUnlock\"`,\n`\"ADUserActivation\"`,\n`\"AuthenticatorEnrolled\"`,\n`\"AuthenticatorReset\"`,\n`\"ChangeEmailConfirmation\"`,\n`\"EmailChallenge\"`,\n`\"EmailChangeConfirmation\"`,\n`\"EmailFactorVerification\"`,\n`\"ForgotPassword\"`,\n`\"ForgotPasswordDenied\"`,\n`\"IGAReviewerEndNotification\"`,\n`\"IGAReviewerNotification\"`,\n`\"IGAReviewerPendingNotification\"`,\n`\"IGAReviewerReassigned\"`,\n`\"LDAPForgotPassword\"`,\n`\"LDAPForgotPasswordDenied\"`,\n`\"LDAPSelfServiceUnlock\"`,\n`\"LDAPUserActivation\"`,\n`\"MyAccountChangeConfirmation\"`,\n`\"NewSignOnNotification\"`,\n`\"OktaVerifyActivation\"`,\n`\"PasswordChanged\"`,\n`\"PasswordResetByAdmin\"`,\n`\"PendingEmailChange\"`,\n`\"RegistrationActivation\"`,\n`\"RegistrationEmailVerification\"`,\n`\"SelfServiceUnlock\"`,\n`\"SelfServiceUnlockOnUnlockedAccount\"`,\n`\"UserActivation\"`\n"
                }
            },
            "required": [
                "brandId",
                "links",
                "templateName"
            ],
            "inputProperties": {
                "body": {
                    "type": "string",
                    "description": "The body of the customization\n"
                },
                "brandId": {
                    "type": "string",
                    "description": "Brand ID\n"
                },
                "forceIsDefault": {
                    "type": "string",
                    "description": "Force `is_default` on the create and delete operation by\ndeleting all email customizations. See Note above explaing email customization API\nbehavior and [API\ndocumentation](https://developer.okta.com/docs/reference/api/brands/#list-email-customizations).\nValid values `create`, `delete`, `create,delete`.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Whether the customization is the default\n- Setting `is_default` to true when there is already a default customization will cause an error when this resource is created.\n"
                },
                "language": {
                    "type": "string",
                    "description": "The language supported by the customization\n- Example values from [supported languages](https://developer.okta.com/docs/reference/api/brands/#supported-languages):\n`\"cs\"`,\n`\"da\"`,\n`\"de\"`,\n`\"el\"`,\n`\"en\"`,\n`\"es\"`,\n`\"fi\"`,\n`\"fr\"`,\n`\"hu\"`,\n`\"id\"`,\n`\"it\"`,\n`\"ja\"`,\n`\"ko\"`,\n`\"ms\"`,\n`\"nb\"`,\n`\"nl-NL\"`,\n`\"pl\"`,\n`\"pt-BR\"`,\n`\"ro\"`,\n`\"ru\"`,\n`\"sv\"`,\n`\"th\"`,\n`\"tr\"`,\n`\"uk\"`,\n`\"vi\"`,\n`\"zh-CN\"`,\n`\"zh-TW\"`\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the customization\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template Name\n- Example values: `\"AccountLockout\"`,\n`\"ADForgotPassword\"`,\n`\"ADForgotPasswordDenied\"`,\n`\"ADSelfServiceUnlock\"`,\n`\"ADUserActivation\"`,\n`\"AuthenticatorEnrolled\"`,\n`\"AuthenticatorReset\"`,\n`\"ChangeEmailConfirmation\"`,\n`\"EmailChallenge\"`,\n`\"EmailChangeConfirmation\"`,\n`\"EmailFactorVerification\"`,\n`\"ForgotPassword\"`,\n`\"ForgotPasswordDenied\"`,\n`\"IGAReviewerEndNotification\"`,\n`\"IGAReviewerNotification\"`,\n`\"IGAReviewerPendingNotification\"`,\n`\"IGAReviewerReassigned\"`,\n`\"LDAPForgotPassword\"`,\n`\"LDAPForgotPasswordDenied\"`,\n`\"LDAPSelfServiceUnlock\"`,\n`\"LDAPUserActivation\"`,\n`\"MyAccountChangeConfirmation\"`,\n`\"NewSignOnNotification\"`,\n`\"OktaVerifyActivation\"`,\n`\"PasswordChanged\"`,\n`\"PasswordResetByAdmin\"`,\n`\"PendingEmailChange\"`,\n`\"RegistrationActivation\"`,\n`\"RegistrationEmailVerification\"`,\n`\"SelfServiceUnlock\"`,\n`\"SelfServiceUnlockOnUnlockedAccount\"`,\n`\"UserActivation\"`\n"
                }
            },
            "requiredInputs": [
                "brandId",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailCustomization resources.\n",
                "properties": {
                    "body": {
                        "type": "string",
                        "description": "The body of the customization\n"
                    },
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    },
                    "forceIsDefault": {
                        "type": "string",
                        "description": "Force `is_default` on the create and delete operation by\ndeleting all email customizations. See Note above explaing email customization API\nbehavior and [API\ndocumentation](https://developer.okta.com/docs/reference/api/brands/#list-email-customizations).\nValid values `create`, `delete`, `create,delete`.\n"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Whether the customization is the default\n- Setting `is_default` to true when there is already a default customization will cause an error when this resource is created.\n"
                    },
                    "language": {
                        "type": "string",
                        "description": "The language supported by the customization\n- Example values from [supported languages](https://developer.okta.com/docs/reference/api/brands/#supported-languages):\n`\"cs\"`,\n`\"da\"`,\n`\"de\"`,\n`\"el\"`,\n`\"en\"`,\n`\"es\"`,\n`\"fi\"`,\n`\"fr\"`,\n`\"hu\"`,\n`\"id\"`,\n`\"it\"`,\n`\"ja\"`,\n`\"ko\"`,\n`\"ms\"`,\n`\"nb\"`,\n`\"nl-NL\"`,\n`\"pl\"`,\n`\"pt-BR\"`,\n`\"ro\"`,\n`\"ru\"`,\n`\"sv\"`,\n`\"th\"`,\n`\"tr\"`,\n`\"uk\"`,\n`\"vi\"`,\n`\"zh-CN\"`,\n`\"zh-TW\"`\n"
                    },
                    "links": {
                        "type": "string",
                        "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template\n"
                    },
                    "subject": {
                        "type": "string",
                        "description": "The subject of the customization\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template Name\n- Example values: `\"AccountLockout\"`,\n`\"ADForgotPassword\"`,\n`\"ADForgotPasswordDenied\"`,\n`\"ADSelfServiceUnlock\"`,\n`\"ADUserActivation\"`,\n`\"AuthenticatorEnrolled\"`,\n`\"AuthenticatorReset\"`,\n`\"ChangeEmailConfirmation\"`,\n`\"EmailChallenge\"`,\n`\"EmailChangeConfirmation\"`,\n`\"EmailFactorVerification\"`,\n`\"ForgotPassword\"`,\n`\"ForgotPasswordDenied\"`,\n`\"IGAReviewerEndNotification\"`,\n`\"IGAReviewerNotification\"`,\n`\"IGAReviewerPendingNotification\"`,\n`\"IGAReviewerReassigned\"`,\n`\"LDAPForgotPassword\"`,\n`\"LDAPForgotPasswordDenied\"`,\n`\"LDAPSelfServiceUnlock\"`,\n`\"LDAPUserActivation\"`,\n`\"MyAccountChangeConfirmation\"`,\n`\"NewSignOnNotification\"`,\n`\"OktaVerifyActivation\"`,\n`\"PasswordChanged\"`,\n`\"PasswordResetByAdmin\"`,\n`\"PendingEmailChange\"`,\n`\"RegistrationActivation\"`,\n`\"RegistrationEmailVerification\"`,\n`\"SelfServiceUnlock\"`,\n`\"SelfServiceUnlockOnUnlockedAccount\"`,\n`\"UserActivation\"`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/emailSender:EmailSender": {
            "description": "This resource allows you to create and configure a custom email sender.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.EmailSender(\"example\", {\n    fromAddress: \"no-reply@caladan.planet\",\n    fromName: \"Paul Atreides\",\n    subdomain: \"mail\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.EmailSender(\"example\",\n    from_address=\"no-reply@caladan.planet\",\n    from_name=\"Paul Atreides\",\n    subdomain=\"mail\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.EmailSender(\"example\", new()\n    {\n        FromAddress = \"no-reply@caladan.planet\",\n        FromName = \"Paul Atreides\",\n        Subdomain = \"mail\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewEmailSender(ctx, \"example\", \u0026okta.EmailSenderArgs{\n\t\t\tFromAddress: pulumi.String(\"no-reply@caladan.planet\"),\n\t\t\tFromName:    pulumi.String(\"Paul Atreides\"),\n\t\t\tSubdomain:   pulumi.String(\"mail\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.EmailSender;\nimport com.pulumi.okta.EmailSenderArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new EmailSender(\"example\", EmailSenderArgs.builder()        \n            .fromAddress(\"no-reply@caladan.planet\")\n            .fromName(\"Paul Atreides\")\n            .subdomain(\"mail\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:EmailSender\n    properties:\n      fromAddress: no-reply@caladan.planet\n      fromName: Paul Atreides\n      subdomain: mail\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCustom email sender can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/emailSender:EmailSender example \u0026#60;sender id\u0026#62;\n```\n\n ",
            "properties": {
                "dnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/EmailSenderDnsRecord:EmailSenderDnsRecord"
                    },
                    "description": "TXT and CNAME records to be registered for the domain.\n"
                },
                "fromAddress": {
                    "type": "string",
                    "description": "Email address to send from.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "Name of sender.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the sender (shows whether the sender is verified).\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Mail domain to send from.\n"
                }
            },
            "required": [
                "dnsRecords",
                "fromAddress",
                "fromName",
                "status",
                "subdomain"
            ],
            "inputProperties": {
                "fromAddress": {
                    "type": "string",
                    "description": "Email address to send from.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "Name of sender.\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Mail domain to send from.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "fromAddress",
                "fromName",
                "subdomain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailSender resources.\n",
                "properties": {
                    "dnsRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/EmailSenderDnsRecord:EmailSenderDnsRecord"
                        },
                        "description": "TXT and CNAME records to be registered for the domain.\n"
                    },
                    "fromAddress": {
                        "type": "string",
                        "description": "Email address to send from.\n"
                    },
                    "fromName": {
                        "type": "string",
                        "description": "Name of sender.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the sender (shows whether the sender is verified).\n"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "Mail domain to send from.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/emailSenderVerification:EmailSenderVerification": {
            "description": "Verifies the email sender. The resource won't be created if the email sender could not be verified.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleEmailSender = new okta.EmailSender(\"exampleEmailSender\", {\n    fromName: \"Paul Atreides\",\n    fromAddress: \"no-reply@caladan.planet\",\n    subdomain: \"mail\",\n});\nconst exampleEmailSenderVerification = new okta.EmailSenderVerification(\"exampleEmailSenderVerification\", {senderId: okta_email_sender.valid.id});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_email_sender = okta.EmailSender(\"exampleEmailSender\",\n    from_name=\"Paul Atreides\",\n    from_address=\"no-reply@caladan.planet\",\n    subdomain=\"mail\")\nexample_email_sender_verification = okta.EmailSenderVerification(\"exampleEmailSenderVerification\", sender_id=okta_email_sender[\"valid\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleEmailSender = new Okta.EmailSender(\"exampleEmailSender\", new()\n    {\n        FromName = \"Paul Atreides\",\n        FromAddress = \"no-reply@caladan.planet\",\n        Subdomain = \"mail\",\n    });\n\n    var exampleEmailSenderVerification = new Okta.EmailSenderVerification(\"exampleEmailSenderVerification\", new()\n    {\n        SenderId = okta_email_sender.Valid.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewEmailSender(ctx, \"exampleEmailSender\", \u0026okta.EmailSenderArgs{\n\t\t\tFromName:    pulumi.String(\"Paul Atreides\"),\n\t\t\tFromAddress: pulumi.String(\"no-reply@caladan.planet\"),\n\t\t\tSubdomain:   pulumi.String(\"mail\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewEmailSenderVerification(ctx, \"exampleEmailSenderVerification\", \u0026okta.EmailSenderVerificationArgs{\n\t\t\tSenderId: pulumi.Any(okta_email_sender.Valid.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.EmailSender;\nimport com.pulumi.okta.EmailSenderArgs;\nimport com.pulumi.okta.EmailSenderVerification;\nimport com.pulumi.okta.EmailSenderVerificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleEmailSender = new EmailSender(\"exampleEmailSender\", EmailSenderArgs.builder()        \n            .fromName(\"Paul Atreides\")\n            .fromAddress(\"no-reply@caladan.planet\")\n            .subdomain(\"mail\")\n            .build());\n\n        var exampleEmailSenderVerification = new EmailSenderVerification(\"exampleEmailSenderVerification\", EmailSenderVerificationArgs.builder()        \n            .senderId(okta_email_sender.valid().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleEmailSender:\n    type: okta:EmailSender\n    properties:\n      fromName: Paul Atreides\n      fromAddress: no-reply@caladan.planet\n      subdomain: mail\n  exampleEmailSenderVerification:\n    type: okta:EmailSenderVerification\n    properties:\n      senderId: ${okta_email_sender.valid.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThis resource does not support importing. ",
            "properties": {
                "senderId": {
                    "type": "string",
                    "description": "Email sender ID.\n"
                }
            },
            "required": [
                "senderId"
            ],
            "inputProperties": {
                "senderId": {
                    "type": "string",
                    "description": "Email sender ID.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "senderId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailSenderVerification resources.\n",
                "properties": {
                    "senderId": {
                        "type": "string",
                        "description": "Email sender ID.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/eventHook:EventHook": {
            "description": "Creates an event hook.\n\nThis resource allows you to create and configure an event hook.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.EventHook(\"example\", {\n    auth: {\n        key: \"Authorization\",\n        type: \"HEADER\",\n        value: \"123\",\n    },\n    channel: {\n        type: \"HTTP\",\n        uri: \"https://example.com/test\",\n        version: \"1.0.0\",\n    },\n    events: [\n        \"user.lifecycle.create\",\n        \"user.lifecycle.delete.initiated\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.EventHook(\"example\",\n    auth={\n        \"key\": \"Authorization\",\n        \"type\": \"HEADER\",\n        \"value\": \"123\",\n    },\n    channel={\n        \"type\": \"HTTP\",\n        \"uri\": \"https://example.com/test\",\n        \"version\": \"1.0.0\",\n    },\n    events=[\n        \"user.lifecycle.create\",\n        \"user.lifecycle.delete.initiated\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.EventHook(\"example\", new()\n    {\n        Auth = \n        {\n            { \"key\", \"Authorization\" },\n            { \"type\", \"HEADER\" },\n            { \"value\", \"123\" },\n        },\n        Channel = \n        {\n            { \"type\", \"HTTP\" },\n            { \"uri\", \"https://example.com/test\" },\n            { \"version\", \"1.0.0\" },\n        },\n        Events = new[]\n        {\n            \"user.lifecycle.create\",\n            \"user.lifecycle.delete.initiated\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewEventHook(ctx, \"example\", \u0026okta.EventHookArgs{\n\t\t\tAuth: pulumi.StringMap{\n\t\t\t\t\"key\":   pulumi.String(\"Authorization\"),\n\t\t\t\t\"type\":  pulumi.String(\"HEADER\"),\n\t\t\t\t\"value\": pulumi.String(\"123\"),\n\t\t\t},\n\t\t\tChannel: pulumi.StringMap{\n\t\t\t\t\"type\":    pulumi.String(\"HTTP\"),\n\t\t\t\t\"uri\":     pulumi.String(\"https://example.com/test\"),\n\t\t\t\t\"version\": pulumi.String(\"1.0.0\"),\n\t\t\t},\n\t\t\tEvents: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user.lifecycle.create\"),\n\t\t\t\tpulumi.String(\"user.lifecycle.delete.initiated\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.EventHook;\nimport com.pulumi.okta.EventHookArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new EventHook(\"example\", EventHookArgs.builder()        \n            .auth(Map.ofEntries(\n                Map.entry(\"key\", \"Authorization\"),\n                Map.entry(\"type\", \"HEADER\"),\n                Map.entry(\"value\", \"123\")\n            ))\n            .channel(Map.ofEntries(\n                Map.entry(\"type\", \"HTTP\"),\n                Map.entry(\"uri\", \"https://example.com/test\"),\n                Map.entry(\"version\", \"1.0.0\")\n            ))\n            .events(            \n                \"user.lifecycle.create\",\n                \"user.lifecycle.delete.initiated\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:EventHook\n    properties:\n      auth:\n        key: Authorization\n        type: HEADER\n        value: '123'\n      channel:\n        type: HTTP\n        uri: https://example.com/test\n        version: 1.0.0\n      events:\n        - user.lifecycle.create\n        - user.lifecycle.delete.initiated\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn event hook can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/eventHook:EventHook example \u0026#60;hook id\u0026#62;\n```\n\n ",
            "properties": {
                "auth": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Authentication required for event hook request.\n"
                },
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Details of the endpoint the event hook will hit.\n"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The events that will be delivered to this hook. [See here for a list of supported events](https://developer.okta.com/docs/reference/api/event-types/?q=event-hook-eligible).\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/EventHookHeader:EventHookHeader"
                    },
                    "description": "Map of headers to send along in event hook request.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The event hook display name.\n"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "channel",
                "events",
                "name"
            ],
            "inputProperties": {
                "auth": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Authentication required for event hook request.\n"
                },
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Details of the endpoint the event hook will hit.\n"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The events that will be delivered to this hook. [See here for a list of supported events](https://developer.okta.com/docs/reference/api/event-types/?q=event-hook-eligible).\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/EventHookHeader:EventHookHeader"
                    },
                    "description": "Map of headers to send along in event hook request.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The event hook display name.\n"
                },
                "status": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "channel",
                "events"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EventHook resources.\n",
                "properties": {
                    "auth": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Authentication required for event hook request.\n"
                    },
                    "channel": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Details of the endpoint the event hook will hit.\n"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The events that will be delivered to this hook. [See here for a list of supported events](https://developer.okta.com/docs/reference/api/event-types/?q=event-hook-eligible).\n"
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/EventHookHeader:EventHookHeader"
                        },
                        "description": "Map of headers to send along in event hook request.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The event hook display name.\n"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/eventHookVerification:EventHookVerification": {
            "description": "Verifies the Event Hook. The resource won't be created unless the URI provided in the event hook returns a valid\nJSON object with verification. See [Event Hooks](https://developer.okta.com/docs/concepts/event-hooks/#one-time-verification-request)\ndocumentation for details.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleEventHook = new okta.EventHook(\"exampleEventHook\", {\n    events: [\n        \"user.lifecycle.create\",\n        \"user.lifecycle.delete.initiated\",\n    ],\n    channel: {\n        type: \"HTTP\",\n        version: \"1.0.0\",\n        uri: \"https://example.com/test\",\n    },\n    auth: {\n        type: \"HEADER\",\n        key: \"Authorization\",\n        value: \"123\",\n    },\n});\nconst exampleEventHookVerification = new okta.EventHookVerification(\"exampleEventHookVerification\", {eventHookId: exampleEventHook.id});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_event_hook = okta.EventHook(\"exampleEventHook\",\n    events=[\n        \"user.lifecycle.create\",\n        \"user.lifecycle.delete.initiated\",\n    ],\n    channel={\n        \"type\": \"HTTP\",\n        \"version\": \"1.0.0\",\n        \"uri\": \"https://example.com/test\",\n    },\n    auth={\n        \"type\": \"HEADER\",\n        \"key\": \"Authorization\",\n        \"value\": \"123\",\n    })\nexample_event_hook_verification = okta.EventHookVerification(\"exampleEventHookVerification\", event_hook_id=example_event_hook.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleEventHook = new Okta.EventHook(\"exampleEventHook\", new()\n    {\n        Events = new[]\n        {\n            \"user.lifecycle.create\",\n            \"user.lifecycle.delete.initiated\",\n        },\n        Channel = \n        {\n            { \"type\", \"HTTP\" },\n            { \"version\", \"1.0.0\" },\n            { \"uri\", \"https://example.com/test\" },\n        },\n        Auth = \n        {\n            { \"type\", \"HEADER\" },\n            { \"key\", \"Authorization\" },\n            { \"value\", \"123\" },\n        },\n    });\n\n    var exampleEventHookVerification = new Okta.EventHookVerification(\"exampleEventHookVerification\", new()\n    {\n        EventHookId = exampleEventHook.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleEventHook, err := okta.NewEventHook(ctx, \"exampleEventHook\", \u0026okta.EventHookArgs{\n\t\t\tEvents: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user.lifecycle.create\"),\n\t\t\t\tpulumi.String(\"user.lifecycle.delete.initiated\"),\n\t\t\t},\n\t\t\tChannel: pulumi.StringMap{\n\t\t\t\t\"type\":    pulumi.String(\"HTTP\"),\n\t\t\t\t\"version\": pulumi.String(\"1.0.0\"),\n\t\t\t\t\"uri\":     pulumi.String(\"https://example.com/test\"),\n\t\t\t},\n\t\t\tAuth: pulumi.StringMap{\n\t\t\t\t\"type\":  pulumi.String(\"HEADER\"),\n\t\t\t\t\"key\":   pulumi.String(\"Authorization\"),\n\t\t\t\t\"value\": pulumi.String(\"123\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewEventHookVerification(ctx, \"exampleEventHookVerification\", \u0026okta.EventHookVerificationArgs{\n\t\t\tEventHookId: exampleEventHook.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.EventHook;\nimport com.pulumi.okta.EventHookArgs;\nimport com.pulumi.okta.EventHookVerification;\nimport com.pulumi.okta.EventHookVerificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleEventHook = new EventHook(\"exampleEventHook\", EventHookArgs.builder()        \n            .events(            \n                \"user.lifecycle.create\",\n                \"user.lifecycle.delete.initiated\")\n            .channel(Map.ofEntries(\n                Map.entry(\"type\", \"HTTP\"),\n                Map.entry(\"version\", \"1.0.0\"),\n                Map.entry(\"uri\", \"https://example.com/test\")\n            ))\n            .auth(Map.ofEntries(\n                Map.entry(\"type\", \"HEADER\"),\n                Map.entry(\"key\", \"Authorization\"),\n                Map.entry(\"value\", \"123\")\n            ))\n            .build());\n\n        var exampleEventHookVerification = new EventHookVerification(\"exampleEventHookVerification\", EventHookVerificationArgs.builder()        \n            .eventHookId(exampleEventHook.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleEventHook:\n    type: okta:EventHook\n    properties:\n      events:\n        - user.lifecycle.create\n        - user.lifecycle.delete.initiated\n      channel:\n        type: HTTP\n        version: 1.0.0\n        uri: https://example.com/test\n      auth:\n        type: HEADER\n        key: Authorization\n        value: '123'\n  exampleEventHookVerification:\n    type: okta:EventHookVerification\n    properties:\n      eventHookId: ${exampleEventHook.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThis resource does not support importing. ",
            "properties": {
                "eventHookId": {
                    "type": "string",
                    "description": "Event Hook ID.\n"
                }
            },
            "required": [
                "eventHookId"
            ],
            "inputProperties": {
                "eventHookId": {
                    "type": "string",
                    "description": "Event Hook ID.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "eventHookId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EventHookVerification resources.\n",
                "properties": {
                    "eventHookId": {
                        "type": "string",
                        "description": "Event Hook ID.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/factorTotp:FactorTotp": {
            "description": "Allows you to manage the time-based one-time password (TOTP) factors. A time-based one-time password (TOTP) is a\ntemporary passcode that is generated for user authentication. Examples of TOTP include hardware authenticators and\nmobile app authenticators.\n\nOnce saved, the settings cannot be changed (except for the `name` field). Any other change would force resource\nrecreation.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.FactorTotp(\"example\", {\n    clockDriftInterval: 10,\n    hmacAlgorithm: \"HMacSHA256\",\n    otpLength: 10,\n    sharedSecretEncoding: \"hexadecimal\",\n    timeStep: 30,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.FactorTotp(\"example\",\n    clock_drift_interval=10,\n    hmac_algorithm=\"HMacSHA256\",\n    otp_length=10,\n    shared_secret_encoding=\"hexadecimal\",\n    time_step=30)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.FactorTotp(\"example\", new()\n    {\n        ClockDriftInterval = 10,\n        HmacAlgorithm = \"HMacSHA256\",\n        OtpLength = 10,\n        SharedSecretEncoding = \"hexadecimal\",\n        TimeStep = 30,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewFactorTotp(ctx, \"example\", \u0026okta.FactorTotpArgs{\n\t\t\tClockDriftInterval:   pulumi.Int(10),\n\t\t\tHmacAlgorithm:        pulumi.String(\"HMacSHA256\"),\n\t\t\tOtpLength:            pulumi.Int(10),\n\t\t\tSharedSecretEncoding: pulumi.String(\"hexadecimal\"),\n\t\t\tTimeStep:             pulumi.Int(30),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.FactorTotp;\nimport com.pulumi.okta.FactorTotpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FactorTotp(\"example\", FactorTotpArgs.builder()        \n            .clockDriftInterval(10)\n            .hmacAlgorithm(\"HMacSHA256\")\n            .otpLength(10)\n            .sharedSecretEncoding(\"hexadecimal\")\n            .timeStep(30)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:FactorTotp\n    properties:\n      clockDriftInterval: 10\n      hmacAlgorithm: HMacSHA256\n      otpLength: 10\n      sharedSecretEncoding: hexadecimal\n      timeStep: 30\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "clockDriftInterval": {
                    "type": "integer",
                    "description": "Clock drift interval. This setting allows you to build in tolerance for any\ndrift between the token's current time and the server's current time. Valid values: `3`, `5`, `10`. Default is `3`.\n"
                },
                "hmacAlgorithm": {
                    "type": "string",
                    "description": "HMAC Algorithm. Valid values: `\"HMacSHA1\"`, `\"HMacSHA256\"`, `\"HMacSHA512\"`. Default\nis `\"HMacSHA512\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The TOTP name.\n"
                },
                "otpLength": {
                    "type": "integer",
                    "description": "Length of the password. Default is `6`.\n"
                },
                "sharedSecretEncoding": {
                    "type": "string",
                    "description": "Shared secret encoding. Valid values: `\"base32\"`, `\"base64\"`, `\"hexadecimal\"`.\nDefault is `\"base32\"`.\n"
                },
                "timeStep": {
                    "type": "integer",
                    "description": "Time step in seconds. Valid values: `15`, `30`, `60`. Default is `15`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "clockDriftInterval": {
                    "type": "integer",
                    "description": "Clock drift interval. This setting allows you to build in tolerance for any\ndrift between the token's current time and the server's current time. Valid values: `3`, `5`, `10`. Default is `3`.\n",
                    "willReplaceOnChanges": true
                },
                "hmacAlgorithm": {
                    "type": "string",
                    "description": "HMAC Algorithm. Valid values: `\"HMacSHA1\"`, `\"HMacSHA256\"`, `\"HMacSHA512\"`. Default\nis `\"HMacSHA512\"`.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The TOTP name.\n"
                },
                "otpLength": {
                    "type": "integer",
                    "description": "Length of the password. Default is `6`.\n",
                    "willReplaceOnChanges": true
                },
                "sharedSecretEncoding": {
                    "type": "string",
                    "description": "Shared secret encoding. Valid values: `\"base32\"`, `\"base64\"`, `\"hexadecimal\"`.\nDefault is `\"base32\"`.\n",
                    "willReplaceOnChanges": true
                },
                "timeStep": {
                    "type": "integer",
                    "description": "Time step in seconds. Valid values: `15`, `30`, `60`. Default is `15`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FactorTotp resources.\n",
                "properties": {
                    "clockDriftInterval": {
                        "type": "integer",
                        "description": "Clock drift interval. This setting allows you to build in tolerance for any\ndrift between the token's current time and the server's current time. Valid values: `3`, `5`, `10`. Default is `3`.\n",
                        "willReplaceOnChanges": true
                    },
                    "hmacAlgorithm": {
                        "type": "string",
                        "description": "HMAC Algorithm. Valid values: `\"HMacSHA1\"`, `\"HMacSHA256\"`, `\"HMacSHA512\"`. Default\nis `\"HMacSHA512\"`.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The TOTP name.\n"
                    },
                    "otpLength": {
                        "type": "integer",
                        "description": "Length of the password. Default is `6`.\n",
                        "willReplaceOnChanges": true
                    },
                    "sharedSecretEncoding": {
                        "type": "string",
                        "description": "Shared secret encoding. Valid values: `\"base32\"`, `\"base64\"`, `\"hexadecimal\"`.\nDefault is `\"base32\"`.\n",
                        "willReplaceOnChanges": true
                    },
                    "timeStep": {
                        "type": "integer",
                        "description": "Time step in seconds. Valid values: `15`, `30`, `60`. Default is `15`.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/groupMemberships:GroupMemberships": {
            "description": "Resource to manage a set of memberships for a specific group.\n\nThis resource will allow you to bulk manage group membership in Okta for a given\ngroup. This offers an interface to pass multiple users into a single resource\ncall, for better API resource usage. If you need a relationship of a single \nuser to many groups, please use the `okta.UserGroupMemberships` resource.\n\n**Important**: The default behavior of the resource is to only maintain the\nstate of user ids that are assigned it. This behavior will signal drift only if\nthose users stop being part of the group. If the desired behavior is track all\nusers that are added/removed from the group make use of the `track_all_users`\nargument with this resource.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst testGroup = new okta.group.Group(\"testGroup\", {description: \"testing, testing\"});\nconst testGroupMemberships = new okta.GroupMemberships(\"testGroupMemberships\", {\n    groupId: testGroup.id,\n    users: [\n        okta_user.test1.id,\n        okta_user.test2.id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest_group = okta.group.Group(\"testGroup\", description=\"testing, testing\")\ntest_group_memberships = okta.GroupMemberships(\"testGroupMemberships\",\n    group_id=test_group.id,\n    users=[\n        okta_user[\"test1\"][\"id\"],\n        okta_user[\"test2\"][\"id\"],\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testGroup = new Okta.Group.Group(\"testGroup\", new()\n    {\n        Description = \"testing, testing\",\n    });\n\n    var testGroupMemberships = new Okta.GroupMemberships(\"testGroupMemberships\", new()\n    {\n        GroupId = testGroup.Id,\n        Users = new[]\n        {\n            okta_user.Test1.Id,\n            okta_user.Test2.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestGroup, err := group.NewGroup(ctx, \"testGroup\", \u0026group.GroupArgs{\n\t\t\tDescription: pulumi.String(\"testing, testing\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewGroupMemberships(ctx, \"testGroupMemberships\", \u0026okta.GroupMembershipsArgs{\n\t\t\tGroupId: testGroup.ID(),\n\t\t\tUsers: pulumi.StringArray{\n\t\t\t\tokta_user.Test1.Id,\n\t\t\t\tokta_user.Test2.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.group.Group;\nimport com.pulumi.okta.group.GroupArgs;\nimport com.pulumi.okta.GroupMemberships;\nimport com.pulumi.okta.GroupMembershipsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testGroup = new Group(\"testGroup\", GroupArgs.builder()        \n            .description(\"testing, testing\")\n            .build());\n\n        var testGroupMemberships = new GroupMemberships(\"testGroupMemberships\", GroupMembershipsArgs.builder()        \n            .groupId(testGroup.id())\n            .users(            \n                okta_user.test1().id(),\n                okta_user.test2().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testGroup:\n    type: okta:group:Group\n    properties:\n      description: testing, testing\n  testGroupMemberships:\n    type: okta:GroupMemberships\n    properties:\n      groupId: ${testGroup.id}\n      users:\n        - ${okta_user.test1.id}\n        - ${okta_user.test2.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nan Okta Group's memberships can be imported via the Okta group ID.\n\n```sh\n $ pulumi import okta:index/groupMemberships:GroupMemberships test \u0026#60;group id\u0026#62;\n```\n\n ",
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "Okta group ID.\n"
                },
                "trackAllUsers": {
                    "type": "boolean",
                    "description": "The resource will concern itself with all users added/deleted to the group; even those managed outside of the resource.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta user IDs which the group should have membership managed for.\n"
                }
            },
            "required": [
                "groupId",
                "users"
            ],
            "inputProperties": {
                "groupId": {
                    "type": "string",
                    "description": "Okta group ID.\n",
                    "willReplaceOnChanges": true
                },
                "trackAllUsers": {
                    "type": "boolean",
                    "description": "The resource will concern itself with all users added/deleted to the group; even those managed outside of the resource.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta user IDs which the group should have membership managed for.\n"
                }
            },
            "requiredInputs": [
                "groupId",
                "users"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GroupMemberships resources.\n",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "description": "Okta group ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "trackAllUsers": {
                        "type": "boolean",
                        "description": "The resource will concern itself with all users added/deleted to the group; even those managed outside of the resource.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of Okta user IDs which the group should have membership managed for.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/groupSchemaProperty:GroupSchemaProperty": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.GroupSchemaProperty(\"example\", {\n    description: \"My custom property name\",\n    index: \"customPropertyName\",\n    master: \"OKTA\",\n    scope: \"SELF\",\n    title: \"customPropertyName\",\n    type: \"string\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.GroupSchemaProperty(\"example\",\n    description=\"My custom property name\",\n    index=\"customPropertyName\",\n    master=\"OKTA\",\n    scope=\"SELF\",\n    title=\"customPropertyName\",\n    type=\"string\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.GroupSchemaProperty(\"example\", new()\n    {\n        Description = \"My custom property name\",\n        Index = \"customPropertyName\",\n        Master = \"OKTA\",\n        Scope = \"SELF\",\n        Title = \"customPropertyName\",\n        Type = \"string\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewGroupSchemaProperty(ctx, \"example\", \u0026okta.GroupSchemaPropertyArgs{\n\t\t\tDescription: pulumi.String(\"My custom property name\"),\n\t\t\tIndex:       pulumi.String(\"customPropertyName\"),\n\t\t\tMaster:      pulumi.String(\"OKTA\"),\n\t\t\tScope:       pulumi.String(\"SELF\"),\n\t\t\tTitle:       pulumi.String(\"customPropertyName\"),\n\t\t\tType:        pulumi.String(\"string\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.GroupSchemaProperty;\nimport com.pulumi.okta.GroupSchemaPropertyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new GroupSchemaProperty(\"example\", GroupSchemaPropertyArgs.builder()        \n            .description(\"My custom property name\")\n            .index(\"customPropertyName\")\n            .master(\"OKTA\")\n            .scope(\"SELF\")\n            .title(\"customPropertyName\")\n            .type(\"string\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:GroupSchemaProperty\n    properties:\n      description: My custom property name\n      index: customPropertyName\n      master: OKTA\n      scope: SELF\n      title: customPropertyName\n      type: string\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nGroup schema property can be imported via the property index.\n\n```sh\n $ pulumi import okta:index/groupSchemaProperty:GroupSchemaProperty example \u0026#60;index\u0026#62;\n```\n\n ",
            "properties": {
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/GroupSchemaPropertyArrayOneOf:GroupSchemaPropertyArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `\"array\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the group schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the group schema property.\n"
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External name of the group schema property.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the group schema property. It can be set to `\"PROFILE_MASTER\"`, `\"OVERRIDE\"` or `\"OKTA\"`.\n"
                },
                "masterOverridePriorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/GroupSchemaPropertyMasterOverridePriority:GroupSchemaPropertyMasterOverridePriority"
                    },
                    "description": "Prioritized list of profile sources (required when `master` is `\"OVERRIDE\"`).\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the group property value. Only applies to type `\"string\"`.\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the group property value. Only applies to type `\"string\"`.\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/GroupSchemaPropertyOneOf:GroupSchemaPropertyOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this group.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of profile source.\n"
                },
                "unique": {
                    "type": "string",
                    "description": "Whether the property should be unique. It can be set to `\"UNIQUE_VALIDATED\"` or `\"NOT_UNIQUE\"`.\n"
                }
            },
            "required": [
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/GroupSchemaPropertyArrayOneOf:GroupSchemaPropertyArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `\"array\"`.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the group schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the group schema property.\n",
                    "willReplaceOnChanges": true
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External name of the group schema property.\n",
                    "willReplaceOnChanges": true
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n",
                    "willReplaceOnChanges": true
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the group schema property. It can be set to `\"PROFILE_MASTER\"`, `\"OVERRIDE\"` or `\"OKTA\"`.\n"
                },
                "masterOverridePriorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/GroupSchemaPropertyMasterOverridePriority:GroupSchemaPropertyMasterOverridePriority"
                    },
                    "description": "Prioritized list of profile sources (required when `master` is `\"OVERRIDE\"`).\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the group property value. Only applies to type `\"string\"`.\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the group property value. Only applies to type `\"string\"`.\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/GroupSchemaPropertyOneOf:GroupSchemaPropertyOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this group.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of profile source.\n",
                    "willReplaceOnChanges": true
                },
                "unique": {
                    "type": "string",
                    "description": "Whether the property should be unique. It can be set to `\"UNIQUE_VALIDATED\"` or `\"NOT_UNIQUE\"`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GroupSchemaProperty resources.\n",
                "properties": {
                    "arrayEnums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values that an array property's items can be set to.\n"
                    },
                    "arrayOneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/GroupSchemaPropertyArrayOneOf:GroupSchemaPropertyArrayOneOf"
                        },
                        "description": "Display name and value an enum array can be set to.\n"
                    },
                    "arrayType": {
                        "type": "string",
                        "description": "The type of the array elements if `type` is set to `\"array\"`.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the group schema property.\n"
                    },
                    "enums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                    },
                    "externalName": {
                        "type": "string",
                        "description": "External name of the group schema property.\n",
                        "willReplaceOnChanges": true
                    },
                    "externalNamespace": {
                        "type": "string",
                        "description": "External name of the group schema property.\n",
                        "willReplaceOnChanges": true
                    },
                    "index": {
                        "type": "string",
                        "description": "The property name.\n",
                        "willReplaceOnChanges": true
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the group schema property. It can be set to `\"PROFILE_MASTER\"`, `\"OVERRIDE\"` or `\"OKTA\"`.\n"
                    },
                    "masterOverridePriorities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/GroupSchemaPropertyMasterOverridePriority:GroupSchemaPropertyMasterOverridePriority"
                        },
                        "description": "Prioritized list of profile sources (required when `master` is `\"OVERRIDE\"`).\n"
                    },
                    "maxLength": {
                        "type": "integer",
                        "description": "The maximum length of the group property value. Only applies to type `\"string\"`.\n"
                    },
                    "minLength": {
                        "type": "integer",
                        "description": "The minimum length of the group property value. Only applies to type `\"string\"`.\n"
                    },
                    "oneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/GroupSchemaPropertyOneOf:GroupSchemaPropertyOneOf"
                        },
                        "description": "Array of maps containing a mapping for display name to enum value.\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the property is required for this group.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "display name for the enum value.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of profile source.\n",
                        "willReplaceOnChanges": true
                    },
                    "unique": {
                        "type": "string",
                        "description": "Whether the property should be unique. It can be set to `\"UNIQUE_VALIDATED\"` or `\"NOT_UNIQUE\"`.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/linkDefinition:LinkDefinition": {
            "description": "Link definition operations allow you to manage the creation and removal of the link definitions. If you remove a link \ndefinition, links based on that definition are unavailable. Note that this resource is immutable, thus can not be modified.\n\n\u003e **NOTE:** Links reappear if you recreate the definition. However, Okta is likely to change this behavior so that links don't reappear. Don't rely on this behavior in production environments.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.LinkDefinition(\"example\", {\n    associatedDescription: \"Elite military force member\",\n    associatedName: \"sardaukar\",\n    associatedTitle: \"Sardaukar\",\n    primaryDescription: \"Hereditary ruler of the Imperium and the Known Universe\",\n    primaryName: \"emperor\",\n    primaryTitle: \"Emperor\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.LinkDefinition(\"example\",\n    associated_description=\"Elite military force member\",\n    associated_name=\"sardaukar\",\n    associated_title=\"Sardaukar\",\n    primary_description=\"Hereditary ruler of the Imperium and the Known Universe\",\n    primary_name=\"emperor\",\n    primary_title=\"Emperor\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.LinkDefinition(\"example\", new()\n    {\n        AssociatedDescription = \"Elite military force member\",\n        AssociatedName = \"sardaukar\",\n        AssociatedTitle = \"Sardaukar\",\n        PrimaryDescription = \"Hereditary ruler of the Imperium and the Known Universe\",\n        PrimaryName = \"emperor\",\n        PrimaryTitle = \"Emperor\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewLinkDefinition(ctx, \"example\", \u0026okta.LinkDefinitionArgs{\n\t\t\tAssociatedDescription: pulumi.String(\"Elite military force member\"),\n\t\t\tAssociatedName:        pulumi.String(\"sardaukar\"),\n\t\t\tAssociatedTitle:       pulumi.String(\"Sardaukar\"),\n\t\t\tPrimaryDescription:    pulumi.String(\"Hereditary ruler of the Imperium and the Known Universe\"),\n\t\t\tPrimaryName:           pulumi.String(\"emperor\"),\n\t\t\tPrimaryTitle:          pulumi.String(\"Emperor\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.LinkDefinition;\nimport com.pulumi.okta.LinkDefinitionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new LinkDefinition(\"example\", LinkDefinitionArgs.builder()        \n            .associatedDescription(\"Elite military force member\")\n            .associatedName(\"sardaukar\")\n            .associatedTitle(\"Sardaukar\")\n            .primaryDescription(\"Hereditary ruler of the Imperium and the Known Universe\")\n            .primaryName(\"emperor\")\n            .primaryTitle(\"Emperor\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:LinkDefinition\n    properties:\n      associatedDescription: Elite military force member\n      associatedName: sardaukar\n      associatedTitle: Sardaukar\n      primaryDescription: Hereditary ruler of the Imperium and the Known Universe\n      primaryName: emperor\n      primaryTitle: Emperor\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta Link Definition can be imported via the Okta Primary Link Name.\n\n```sh\n $ pulumi import okta:index/linkDefinition:LinkDefinition example \u0026#60;primary_name\u0026#62;\n```\n\n ",
            "properties": {
                "associatedDescription": {
                    "type": "string",
                    "description": "Description of the associated relationship.\n"
                },
                "associatedName": {
                    "type": "string",
                    "description": "API name of the associated link.\n"
                },
                "associatedTitle": {
                    "type": "string",
                    "description": "Display name of the associated link.\n"
                },
                "primaryDescription": {
                    "type": "string",
                    "description": "Description of the primary relationship.\n"
                },
                "primaryName": {
                    "type": "string",
                    "description": "API name of the primary link.\n"
                },
                "primaryTitle": {
                    "type": "string",
                    "description": "Display name of the primary link.\n"
                }
            },
            "required": [
                "associatedDescription",
                "associatedName",
                "associatedTitle",
                "primaryDescription",
                "primaryName",
                "primaryTitle"
            ],
            "inputProperties": {
                "associatedDescription": {
                    "type": "string",
                    "description": "Description of the associated relationship.\n",
                    "willReplaceOnChanges": true
                },
                "associatedName": {
                    "type": "string",
                    "description": "API name of the associated link.\n",
                    "willReplaceOnChanges": true
                },
                "associatedTitle": {
                    "type": "string",
                    "description": "Display name of the associated link.\n",
                    "willReplaceOnChanges": true
                },
                "primaryDescription": {
                    "type": "string",
                    "description": "Description of the primary relationship.\n",
                    "willReplaceOnChanges": true
                },
                "primaryName": {
                    "type": "string",
                    "description": "API name of the primary link.\n",
                    "willReplaceOnChanges": true
                },
                "primaryTitle": {
                    "type": "string",
                    "description": "Display name of the primary link.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "associatedDescription",
                "associatedName",
                "associatedTitle",
                "primaryDescription",
                "primaryName",
                "primaryTitle"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LinkDefinition resources.\n",
                "properties": {
                    "associatedDescription": {
                        "type": "string",
                        "description": "Description of the associated relationship.\n",
                        "willReplaceOnChanges": true
                    },
                    "associatedName": {
                        "type": "string",
                        "description": "API name of the associated link.\n",
                        "willReplaceOnChanges": true
                    },
                    "associatedTitle": {
                        "type": "string",
                        "description": "Display name of the associated link.\n",
                        "willReplaceOnChanges": true
                    },
                    "primaryDescription": {
                        "type": "string",
                        "description": "Description of the primary relationship.\n",
                        "willReplaceOnChanges": true
                    },
                    "primaryName": {
                        "type": "string",
                        "description": "API name of the primary link.\n",
                        "willReplaceOnChanges": true
                    },
                    "primaryTitle": {
                        "type": "string",
                        "description": "Display name of the primary link.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/linkValue:LinkValue": {
            "description": "Link value operations allow you to create relationships between primary and associated users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst padishah = new okta.LinkDefinition(\"padishah\", {\n    primaryName: \"emperor\",\n    primaryTitle: \"Emperor\",\n    primaryDescription: \"Hereditary ruler of the Imperium and the Known Universe\",\n    associatedName: \"sardaukar\",\n    associatedTitle: \"Sardaukar\",\n    associatedDescription: \"Elite military force member\",\n});\nconst emperor = new okta.user.User(\"emperor\", {\n    firstName: \"Shaddam\",\n    lastName: \"Corrino IV\",\n    login: \"shaddam.corrino.iv@salusa-secundus.planet\",\n    email: \"shaddam.corrino.iv@salusa-secundus.planet\",\n});\nconst sardaukars: okta.user.User[] = [];\nfor (const range = {value: 0}; range.value \u003c 5; range.value++) {\n    sardaukars.push(new okta.user.User(`sardaukars-${range.value}`, {\n        firstName: \"Amrit\",\n        lastName: `Sardaukar_${range.value}`,\n        login: `amritsardaukar_${range.value}@salusa-secundus.planet`,\n        email: `amritsardaukar_${range.value}@salusa-secundus.planet`,\n    }));\n}\nconst example = new okta.LinkValue(\"example\", {\n    primaryName: padishah.primaryName,\n    primaryUserId: emperor.id,\n    associatedUserIds: [\n        sardaukars[0].id,\n        sardaukars[1].id,\n        sardaukars[2].id,\n        sardaukars[3].id,\n        sardaukars[4].id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\npadishah = okta.LinkDefinition(\"padishah\",\n    primary_name=\"emperor\",\n    primary_title=\"Emperor\",\n    primary_description=\"Hereditary ruler of the Imperium and the Known Universe\",\n    associated_name=\"sardaukar\",\n    associated_title=\"Sardaukar\",\n    associated_description=\"Elite military force member\")\nemperor = okta.user.User(\"emperor\",\n    first_name=\"Shaddam\",\n    last_name=\"Corrino IV\",\n    login=\"shaddam.corrino.iv@salusa-secundus.planet\",\n    email=\"shaddam.corrino.iv@salusa-secundus.planet\")\nsardaukars = []\nfor range in [{\"value\": i} for i in range(0, 5)]:\n    sardaukars.append(okta.user.User(f\"sardaukars-{range['value']}\",\n        first_name=\"Amrit\",\n        last_name=f\"Sardaukar_{range['value']}\",\n        login=f\"amritsardaukar_{range['value']}@salusa-secundus.planet\",\n        email=f\"amritsardaukar_{range['value']}@salusa-secundus.planet\"))\nexample = okta.LinkValue(\"example\",\n    primary_name=padishah.primary_name,\n    primary_user_id=emperor.id,\n    associated_user_ids=[\n        sardaukars[0].id,\n        sardaukars[1].id,\n        sardaukars[2].id,\n        sardaukars[3].id,\n        sardaukars[4].id,\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var padishah = new Okta.LinkDefinition(\"padishah\", new()\n    {\n        PrimaryName = \"emperor\",\n        PrimaryTitle = \"Emperor\",\n        PrimaryDescription = \"Hereditary ruler of the Imperium and the Known Universe\",\n        AssociatedName = \"sardaukar\",\n        AssociatedTitle = \"Sardaukar\",\n        AssociatedDescription = \"Elite military force member\",\n    });\n\n    var emperor = new Okta.User.User(\"emperor\", new()\n    {\n        FirstName = \"Shaddam\",\n        LastName = \"Corrino IV\",\n        Login = \"shaddam.corrino.iv@salusa-secundus.planet\",\n        Email = \"shaddam.corrino.iv@salusa-secundus.planet\",\n    });\n\n    var sardaukars = new List\u003cOkta.User.User\u003e();\n    for (var rangeIndex = 0; rangeIndex \u003c 5; rangeIndex++)\n    {\n        var range = new { Value = rangeIndex };\n        sardaukars.Add(new Okta.User.User($\"sardaukars-{range.Value}\", new()\n        {\n            FirstName = \"Amrit\",\n            LastName = $\"Sardaukar_{range.Value}\",\n            Login = $\"amritsardaukar_{range.Value}@salusa-secundus.planet\",\n            Email = $\"amritsardaukar_{range.Value}@salusa-secundus.planet\",\n        }));\n    }\n    var example = new Okta.LinkValue(\"example\", new()\n    {\n        PrimaryName = padishah.PrimaryName,\n        PrimaryUserId = emperor.Id,\n        AssociatedUserIds = new[]\n        {\n            sardaukars[0].Id,\n            sardaukars[1].Id,\n            sardaukars[2].Id,\n            sardaukars[3].Id,\n            sardaukars[4].Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpadishah, err := okta.NewLinkDefinition(ctx, \"padishah\", \u0026okta.LinkDefinitionArgs{\n\t\t\tPrimaryName:           pulumi.String(\"emperor\"),\n\t\t\tPrimaryTitle:          pulumi.String(\"Emperor\"),\n\t\t\tPrimaryDescription:    pulumi.String(\"Hereditary ruler of the Imperium and the Known Universe\"),\n\t\t\tAssociatedName:        pulumi.String(\"sardaukar\"),\n\t\t\tAssociatedTitle:       pulumi.String(\"Sardaukar\"),\n\t\t\tAssociatedDescription: pulumi.String(\"Elite military force member\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\temperor, err := user.NewUser(ctx, \"emperor\", \u0026user.UserArgs{\n\t\t\tFirstName: pulumi.String(\"Shaddam\"),\n\t\t\tLastName:  pulumi.String(\"Corrino IV\"),\n\t\t\tLogin:     pulumi.String(\"shaddam.corrino.iv@salusa-secundus.planet\"),\n\t\t\tEmail:     pulumi.String(\"shaddam.corrino.iv@salusa-secundus.planet\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tvar sardaukars []*user.User\n\t\tfor index := 0; index \u003c 5; index++ {\n\t\t\tkey0 := index\n\t\t\tval0 := index\n\t\t\t__res, err := user.NewUser(ctx, fmt.Sprintf(\"sardaukars-%v\", key0), \u0026user.UserArgs{\n\t\t\t\tFirstName: pulumi.String(\"Amrit\"),\n\t\t\t\tLastName:  pulumi.String(fmt.Sprintf(\"Sardaukar_%v\", val0)),\n\t\t\t\tLogin:     pulumi.String(fmt.Sprintf(\"amritsardaukar_%v@salusa-secundus.planet\", val0)),\n\t\t\t\tEmail:     pulumi.String(fmt.Sprintf(\"amritsardaukar_%v@salusa-secundus.planet\", val0)),\n\t\t\t})\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tsardaukars = append(sardaukars, __res)\n\t\t}\n\t\t_, err = okta.NewLinkValue(ctx, \"example\", \u0026okta.LinkValueArgs{\n\t\t\tPrimaryName:   padishah.PrimaryName,\n\t\t\tPrimaryUserId: emperor.ID(),\n\t\t\tAssociatedUserIds: pulumi.StringArray{\n\t\t\t\tsardaukars[0].ID(),\n\t\t\t\tsardaukars[1].ID(),\n\t\t\t\tsardaukars[2].ID(),\n\t\t\t\tsardaukars[3].ID(),\n\t\t\t\tsardaukars[4].ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.LinkDefinition;\nimport com.pulumi.okta.LinkDefinitionArgs;\nimport com.pulumi.okta.user.User;\nimport com.pulumi.okta.user.UserArgs;\nimport com.pulumi.okta.LinkValue;\nimport com.pulumi.okta.LinkValueArgs;\nimport com.pulumi.codegen.internal.KeyedValue;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var padishah = new LinkDefinition(\"padishah\", LinkDefinitionArgs.builder()        \n            .primaryName(\"emperor\")\n            .primaryTitle(\"Emperor\")\n            .primaryDescription(\"Hereditary ruler of the Imperium and the Known Universe\")\n            .associatedName(\"sardaukar\")\n            .associatedTitle(\"Sardaukar\")\n            .associatedDescription(\"Elite military force member\")\n            .build());\n\n        var emperor = new User(\"emperor\", UserArgs.builder()        \n            .firstName(\"Shaddam\")\n            .lastName(\"Corrino IV\")\n            .login(\"shaddam.corrino.iv@salusa-secundus.planet\")\n            .email(\"shaddam.corrino.iv@salusa-secundus.planet\")\n            .build());\n\n        for (var i = 0; i \u003c 5; i++) {\n            new User(\"sardaukars-\" + i, UserArgs.builder()            \n                .firstName(\"Amrit\")\n                .lastName(String.format(\"Sardaukar_%s\", range.value()))\n                .login(String.format(\"amritsardaukar_%s@salusa-secundus.planet\", range.value()))\n                .email(String.format(\"amritsardaukar_%s@salusa-secundus.planet\", range.value()))\n                .build());\n\n        \n}\n        var example = new LinkValue(\"example\", LinkValueArgs.builder()        \n            .primaryName(padishah.primaryName())\n            .primaryUserId(emperor.id())\n            .associatedUserIds(            \n                sardaukars[0].id(),\n                sardaukars[1].id(),\n                sardaukars[2].id(),\n                sardaukars[3].id(),\n                sardaukars[4].id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  padishah:\n    type: okta:LinkDefinition\n    properties:\n      primaryName: emperor\n      primaryTitle: Emperor\n      primaryDescription: Hereditary ruler of the Imperium and the Known Universe\n      associatedName: sardaukar\n      associatedTitle: Sardaukar\n      associatedDescription: Elite military force member\n  emperor:\n    type: okta:user:User\n    properties:\n      firstName: Shaddam\n      lastName: Corrino IV\n      login: shaddam.corrino.iv@salusa-secundus.planet\n      email: shaddam.corrino.iv@salusa-secundus.planet\n  sardaukars:\n    type: okta:user:User\n    properties:\n      firstName: Amrit\n      lastName: Sardaukar_${range.value}\n      login: amritsardaukar_${range.value}@salusa-secundus.planet\n      email: amritsardaukar_${range.value}@salusa-secundus.planet\n    options: {}\n  example:\n    type: okta:LinkValue\n    properties:\n      primaryName: ${padishah.primaryName}\n      primaryUserId: ${emperor.id}\n      associatedUserIds:\n        - ${sardaukars[0].id}\n        - ${sardaukars[1].id}\n        - ${sardaukars[2].id}\n        - ${sardaukars[3].id}\n        - ${sardaukars[4].id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta Link Value can be imported via Primary Name and Primary User ID.\n\n```sh\n $ pulumi import okta:index/linkValue:LinkValue example \u0026#60;primary_name\u0026#62;/\u0026#60;primary_user_id\u0026#62;\n```\n\n ",
            "properties": {
                "associatedUserIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs or login values of the users to be assigned the 'associated' relationship.\n"
                },
                "primaryName": {
                    "type": "string",
                    "description": "Name of the `primary` relationship being assigned.\n"
                },
                "primaryUserId": {
                    "type": "string",
                    "description": "User ID to be assigned to `primary` for the `associated` user in the specified relationship.\n"
                }
            },
            "required": [
                "primaryName",
                "primaryUserId"
            ],
            "inputProperties": {
                "associatedUserIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs or login values of the users to be assigned the 'associated' relationship.\n"
                },
                "primaryName": {
                    "type": "string",
                    "description": "Name of the `primary` relationship being assigned.\n",
                    "willReplaceOnChanges": true
                },
                "primaryUserId": {
                    "type": "string",
                    "description": "User ID to be assigned to `primary` for the `associated` user in the specified relationship.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "primaryName",
                "primaryUserId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LinkValue resources.\n",
                "properties": {
                    "associatedUserIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of User IDs or login values of the users to be assigned the 'associated' relationship.\n"
                    },
                    "primaryName": {
                        "type": "string",
                        "description": "Name of the `primary` relationship being assigned.\n",
                        "willReplaceOnChanges": true
                    },
                    "primaryUserId": {
                        "type": "string",
                        "description": "User ID to be assigned to `primary` for the `associated` user in the specified relationship.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/orgConfiguration:OrgConfiguration": {
            "description": "This resource allows you manage org settings, logo, support and communication options.\n\n\u003e **IMPORTANT:** You must specify all Org Setting properties when you update an org's profile. Any property not specified in the script will be deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.OrgConfiguration(\"example\", {\n    companyName: \"Umbrella Corporation\",\n    website: \"https://terraform.io\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.OrgConfiguration(\"example\",\n    company_name=\"Umbrella Corporation\",\n    website=\"https://terraform.io\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.OrgConfiguration(\"example\", new()\n    {\n        CompanyName = \"Umbrella Corporation\",\n        Website = \"https://terraform.io\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewOrgConfiguration(ctx, \"example\", \u0026okta.OrgConfigurationArgs{\n\t\t\tCompanyName: pulumi.String(\"Umbrella Corporation\"),\n\t\t\tWebsite:     pulumi.String(\"https://terraform.io\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OrgConfiguration;\nimport com.pulumi.okta.OrgConfigurationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OrgConfiguration(\"example\", OrgConfigurationArgs.builder()        \n            .companyName(\"Umbrella Corporation\")\n            .website(\"https://terraform.io\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:OrgConfiguration\n    properties:\n      companyName: Umbrella Corporation\n      website: https://terraform.io\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta Org Configuration can be imported even without specifying the Org ID.\n\n```sh\n $ pulumi import okta:index/orgConfiguration:OrgConfiguration example _\n```\n\n ",
            "properties": {
                "address1": {
                    "type": "string",
                    "description": "Primary address of org\n"
                },
                "address2": {
                    "type": "string",
                    "description": "Secondary address of org\n"
                },
                "billingContactUser": {
                    "type": "string",
                    "description": "User ID representing the billing contact\n"
                },
                "city": {
                    "type": "string",
                    "description": "City of org\n"
                },
                "companyName": {
                    "type": "string",
                    "description": "Name of org\n"
                },
                "country": {
                    "type": "string",
                    "description": "Country of org\n"
                },
                "endUserSupportHelpUrl": {
                    "type": "string",
                    "description": "Support link of org\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "Expiration of org\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local path to logo of the org.\n"
                },
                "optOutCommunicationEmails": {
                    "type": "boolean",
                    "description": "Indicates whether the org's users receive Okta Communication emails\n"
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "Support help phone of org\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "Postal code of org\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of org\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Subdomain of org\n"
                },
                "supportPhoneNumber": {
                    "type": "string",
                    "description": "Support help phone of org\n"
                },
                "technicalContactUser": {
                    "type": "string",
                    "description": "User ID representing the technical contact\n"
                },
                "website": {
                    "type": "string",
                    "description": "The org's website\n"
                }
            },
            "required": [
                "companyName",
                "expiresAt",
                "subdomain"
            ],
            "inputProperties": {
                "address1": {
                    "type": "string",
                    "description": "Primary address of org\n"
                },
                "address2": {
                    "type": "string",
                    "description": "Secondary address of org\n"
                },
                "billingContactUser": {
                    "type": "string",
                    "description": "User ID representing the billing contact\n"
                },
                "city": {
                    "type": "string",
                    "description": "City of org\n"
                },
                "companyName": {
                    "type": "string",
                    "description": "Name of org\n"
                },
                "country": {
                    "type": "string",
                    "description": "Country of org\n"
                },
                "endUserSupportHelpUrl": {
                    "type": "string",
                    "description": "Support link of org\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local path to logo of the org.\n"
                },
                "optOutCommunicationEmails": {
                    "type": "boolean",
                    "description": "Indicates whether the org's users receive Okta Communication emails\n"
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "Support help phone of org\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "Postal code of org\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of org\n"
                },
                "supportPhoneNumber": {
                    "type": "string",
                    "description": "Support help phone of org\n"
                },
                "technicalContactUser": {
                    "type": "string",
                    "description": "User ID representing the technical contact\n"
                },
                "website": {
                    "type": "string",
                    "description": "The org's website\n"
                }
            },
            "requiredInputs": [
                "companyName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrgConfiguration resources.\n",
                "properties": {
                    "address1": {
                        "type": "string",
                        "description": "Primary address of org\n"
                    },
                    "address2": {
                        "type": "string",
                        "description": "Secondary address of org\n"
                    },
                    "billingContactUser": {
                        "type": "string",
                        "description": "User ID representing the billing contact\n"
                    },
                    "city": {
                        "type": "string",
                        "description": "City of org\n"
                    },
                    "companyName": {
                        "type": "string",
                        "description": "Name of org\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country of org\n"
                    },
                    "endUserSupportHelpUrl": {
                        "type": "string",
                        "description": "Support link of org\n"
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "Expiration of org\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local path to logo of the org.\n"
                    },
                    "optOutCommunicationEmails": {
                        "type": "boolean",
                        "description": "Indicates whether the org's users receive Okta Communication emails\n"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Support help phone of org\n"
                    },
                    "postalCode": {
                        "type": "string",
                        "description": "Postal code of org\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of org\n"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "Subdomain of org\n"
                    },
                    "supportPhoneNumber": {
                        "type": "string",
                        "description": "Support help phone of org\n"
                    },
                    "technicalContactUser": {
                        "type": "string",
                        "description": "User ID representing the technical contact\n"
                    },
                    "website": {
                        "type": "string",
                        "description": "The org's website\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/orgSupport:OrgSupport": {
            "description": "This resource allows you to temporarily allow Okta Support to access your org as an administrator. By default,\naccess will be granted for eight hours. Removing this resource will revoke Okta Support access to your org.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.OrgSupport(\"example\", {extendBy: 1});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.OrgSupport(\"example\", extend_by=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.OrgSupport(\"example\", new()\n    {\n        ExtendBy = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewOrgSupport(ctx, \"example\", \u0026okta.OrgSupportArgs{\n\t\t\tExtendBy: pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OrgSupport;\nimport com.pulumi.okta.OrgSupportArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OrgSupport(\"example\", OrgSupportArgs.builder()        \n            .extendBy(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:OrgSupport\n    properties:\n      extendBy: 1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThis resource does not support importing. ",
            "properties": {
                "expiration": {
                    "type": "string",
                    "description": "Expiration of Okta Support\n"
                },
                "extendBy": {
                    "type": "integer",
                    "description": "Number of days the support should be extended by in addition to the standard eight hours.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of Okta Support\n"
                }
            },
            "required": [
                "expiration",
                "status"
            ],
            "inputProperties": {
                "extendBy": {
                    "type": "integer",
                    "description": "Number of days the support should be extended by in addition to the standard eight hours.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrgSupport resources.\n",
                "properties": {
                    "expiration": {
                        "type": "string",
                        "description": "Expiration of Okta Support\n"
                    },
                    "extendBy": {
                        "type": "integer",
                        "description": "Number of days the support should be extended by in addition to the standard eight hours.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of Okta Support\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/policyMfaDefault:PolicyMfaDefault": {
            "description": "Configures default MFA Policy.\n\nThis resource allows you to configure default MFA Policy.\n\n\u003e Requires Org Feature Flag `OKTA_MFA_POLICY`. Contact support to have this feature flag ***enabled***.\n\n\u003e Unless Org Feature Flag `ENG_ENABLE_OPTIONAL_PASSWORD_ENROLLMENT` is ***disabled*** `okta_password` or `okta_email` must be present and its `enroll` value set to `REQUIRED`. Contact support to have this feature flag ***disabled***.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst classicExample = new okta.PolicyMfaDefault(\"classicExample\", {\n    isOie: false,\n    oktaOtp: {\n        enroll: \"REQUIRED\",\n    },\n    oktaPassword: {\n        enroll: \"REQUIRED\",\n    },\n});\nconst oieExample = new okta.PolicyMfaDefault(\"oieExample\", {\n    isOie: true,\n    oktaPassword: {\n        enroll: \"REQUIRED\",\n    },\n    oktaVerify: {\n        enroll: \"REQUIRED\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nclassic_example = okta.PolicyMfaDefault(\"classicExample\",\n    is_oie=False,\n    okta_otp={\n        \"enroll\": \"REQUIRED\",\n    },\n    okta_password={\n        \"enroll\": \"REQUIRED\",\n    })\noie_example = okta.PolicyMfaDefault(\"oieExample\",\n    is_oie=True,\n    okta_password={\n        \"enroll\": \"REQUIRED\",\n    },\n    okta_verify={\n        \"enroll\": \"REQUIRED\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var classicExample = new Okta.PolicyMfaDefault(\"classicExample\", new()\n    {\n        IsOie = false,\n        OktaOtp = \n        {\n            { \"enroll\", \"REQUIRED\" },\n        },\n        OktaPassword = \n        {\n            { \"enroll\", \"REQUIRED\" },\n        },\n    });\n\n    var oieExample = new Okta.PolicyMfaDefault(\"oieExample\", new()\n    {\n        IsOie = true,\n        OktaPassword = \n        {\n            { \"enroll\", \"REQUIRED\" },\n        },\n        OktaVerify = \n        {\n            { \"enroll\", \"REQUIRED\" },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewPolicyMfaDefault(ctx, \"classicExample\", \u0026okta.PolicyMfaDefaultArgs{\n\t\t\tIsOie: pulumi.Bool(false),\n\t\t\tOktaOtp: pulumi.StringMap{\n\t\t\t\t\"enroll\": pulumi.String(\"REQUIRED\"),\n\t\t\t},\n\t\t\tOktaPassword: pulumi.StringMap{\n\t\t\t\t\"enroll\": pulumi.String(\"REQUIRED\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewPolicyMfaDefault(ctx, \"oieExample\", \u0026okta.PolicyMfaDefaultArgs{\n\t\t\tIsOie: pulumi.Bool(true),\n\t\t\tOktaPassword: pulumi.StringMap{\n\t\t\t\t\"enroll\": pulumi.String(\"REQUIRED\"),\n\t\t\t},\n\t\t\tOktaVerify: pulumi.StringMap{\n\t\t\t\t\"enroll\": pulumi.String(\"REQUIRED\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.PolicyMfaDefault;\nimport com.pulumi.okta.PolicyMfaDefaultArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var classicExample = new PolicyMfaDefault(\"classicExample\", PolicyMfaDefaultArgs.builder()        \n            .isOie(false)\n            .oktaOtp(Map.of(\"enroll\", \"REQUIRED\"))\n            .oktaPassword(Map.of(\"enroll\", \"REQUIRED\"))\n            .build());\n\n        var oieExample = new PolicyMfaDefault(\"oieExample\", PolicyMfaDefaultArgs.builder()        \n            .isOie(true)\n            .oktaPassword(Map.of(\"enroll\", \"REQUIRED\"))\n            .oktaVerify(Map.of(\"enroll\", \"REQUIRED\"))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  classicExample:\n    type: okta:PolicyMfaDefault\n    properties:\n      isOie: false\n      oktaOtp:\n        enroll: REQUIRED\n      oktaPassword:\n        enroll: REQUIRED\n  oieExample:\n    type: okta:PolicyMfaDefault\n    properties:\n      isOie: true\n      oktaPassword:\n        enroll: REQUIRED\n      # The following authenticator can only be used when `is_oie` is set to true\n      oktaVerify:\n        enroll: REQUIRED\n```\n\n\u003e If the `okta.PolicyMfaDefault` is used in conjunction with `okta.policy.Mfa` resources, ensure to use a `depends_on` attribute for the default policy to ensure that all other policies are created/updated first such that the `priority` field can be appropriately computed on the first plan/apply.\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nDefault MFA Policy can be imported without providing Okta ID.\n\n```sh\n $ pulumi import okta:index/policyMfaDefault:PolicyMfaDefault example .\n```\n\n ",
            "properties": {
                "defaultIncludedGroupId": {
                    "type": "string",
                    "description": "ID of the default Okta group.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Default policy description.\n"
                },
                "duo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "DUO MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "externalIdp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "External IDP MFA policy settings (✓ OIE).\n"
                },
                "fidoU2f": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Fido U2F MFA policy settings (✓ Classic).\n"
                },
                "fidoWebauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Fido Web Authn MFA policy settings (✓ Classic).\n"
                },
                "googleOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Google OTP MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "hotp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "HMAC-based One-Time Password MFA policy settings (✓ Classic).\n"
                },
                "isOie": {
                    "type": "boolean",
                    "description": "Boolean that specifies whether to use the newer Okta Identity Engine (OIE) with policy authenticators instead of the classic engine with Factors. This value determines which of the following policy factor settings can be configured. (Default = `false`)\n\u003e **WARNING:** Tenant must have the Okta Identity Engine enabled in order to use this feature.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Default policy name.\n"
                },
                "oktaCall": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Call MFA policy settings (✓ Classic).\n"
                },
                "oktaEmail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Email MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "oktaOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta OTP (via the Okta Verify app) MFA policy settings (✓ Classic).\n"
                },
                "oktaPassword": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Password MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "oktaPush": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Push MFA policy settings (✓ Classic).\n"
                },
                "oktaQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Question MFA policy settings (✓ Classic).\n"
                },
                "oktaSms": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta SMS MFA policy settings (✓ Classic).\n"
                },
                "oktaVerify": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Verify MFA policy settings (✓ OIE).\n"
                },
                "onpremMfa": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "On-Prem MFA MFA policy settings (✓ OIE).\n"
                },
                "phoneNumber": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Phone Number MFA policy settings (✓ OIE).\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Default policy priority.\n"
                },
                "rsaToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "RSA Token MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "securityQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Security Question MFA policy settings (✓ OIE).\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default policy status.\n"
                },
                "symantecVip": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Symantec VIP MFA policy settings (✓ Classic).\n"
                },
                "webauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "FIDO2 (WebAuthn) MFA policy settings (✓ OIE).\n"
                },
                "yubikeyToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Yubikey Token MFA policy settings (✓ Classic, ✓ OIE).\n"
                }
            },
            "required": [
                "defaultIncludedGroupId",
                "description",
                "name",
                "priority",
                "status"
            ],
            "inputProperties": {
                "duo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "DUO MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "externalIdp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "External IDP MFA policy settings (✓ OIE).\n"
                },
                "fidoU2f": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Fido U2F MFA policy settings (✓ Classic).\n"
                },
                "fidoWebauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Fido Web Authn MFA policy settings (✓ Classic).\n"
                },
                "googleOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Google OTP MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "hotp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "HMAC-based One-Time Password MFA policy settings (✓ Classic).\n"
                },
                "isOie": {
                    "type": "boolean",
                    "description": "Boolean that specifies whether to use the newer Okta Identity Engine (OIE) with policy authenticators instead of the classic engine with Factors. This value determines which of the following policy factor settings can be configured. (Default = `false`)\n\u003e **WARNING:** Tenant must have the Okta Identity Engine enabled in order to use this feature.\n"
                },
                "oktaCall": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Call MFA policy settings (✓ Classic).\n"
                },
                "oktaEmail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Email MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "oktaOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta OTP (via the Okta Verify app) MFA policy settings (✓ Classic).\n"
                },
                "oktaPassword": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Password MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "oktaPush": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Push MFA policy settings (✓ Classic).\n"
                },
                "oktaQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Question MFA policy settings (✓ Classic).\n"
                },
                "oktaSms": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta SMS MFA policy settings (✓ Classic).\n"
                },
                "oktaVerify": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Verify MFA policy settings (✓ OIE).\n"
                },
                "onpremMfa": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "On-Prem MFA MFA policy settings (✓ OIE).\n"
                },
                "phoneNumber": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Phone Number MFA policy settings (✓ OIE).\n"
                },
                "rsaToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "RSA Token MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "securityQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Security Question MFA policy settings (✓ OIE).\n"
                },
                "symantecVip": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Symantec VIP MFA policy settings (✓ Classic).\n"
                },
                "webauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "FIDO2 (WebAuthn) MFA policy settings (✓ OIE).\n"
                },
                "yubikeyToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Yubikey Token MFA policy settings (✓ Classic, ✓ OIE).\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyMfaDefault resources.\n",
                "properties": {
                    "defaultIncludedGroupId": {
                        "type": "string",
                        "description": "ID of the default Okta group.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Default policy description.\n"
                    },
                    "duo": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "DUO MFA policy settings (✓ Classic, ✓ OIE).\n"
                    },
                    "externalIdp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "External IDP MFA policy settings (✓ OIE).\n"
                    },
                    "fidoU2f": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Fido U2F MFA policy settings (✓ Classic).\n"
                    },
                    "fidoWebauthn": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Fido Web Authn MFA policy settings (✓ Classic).\n"
                    },
                    "googleOtp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Google OTP MFA policy settings (✓ Classic, ✓ OIE).\n"
                    },
                    "hotp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "HMAC-based One-Time Password MFA policy settings (✓ Classic).\n"
                    },
                    "isOie": {
                        "type": "boolean",
                        "description": "Boolean that specifies whether to use the newer Okta Identity Engine (OIE) with policy authenticators instead of the classic engine with Factors. This value determines which of the following policy factor settings can be configured. (Default = `false`)\n\u003e **WARNING:** Tenant must have the Okta Identity Engine enabled in order to use this feature.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Default policy name.\n"
                    },
                    "oktaCall": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Call MFA policy settings (✓ Classic).\n"
                    },
                    "oktaEmail": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Email MFA policy settings (✓ Classic, ✓ OIE).\n"
                    },
                    "oktaOtp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta OTP (via the Okta Verify app) MFA policy settings (✓ Classic).\n"
                    },
                    "oktaPassword": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Password MFA policy settings (✓ Classic, ✓ OIE).\n"
                    },
                    "oktaPush": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Push MFA policy settings (✓ Classic).\n"
                    },
                    "oktaQuestion": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Question MFA policy settings (✓ Classic).\n"
                    },
                    "oktaSms": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta SMS MFA policy settings (✓ Classic).\n"
                    },
                    "oktaVerify": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Verify MFA policy settings (✓ OIE).\n"
                    },
                    "onpremMfa": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "On-Prem MFA MFA policy settings (✓ OIE).\n"
                    },
                    "phoneNumber": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Phone Number MFA policy settings (✓ OIE).\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Default policy priority.\n"
                    },
                    "rsaToken": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "RSA Token MFA policy settings (✓ Classic, ✓ OIE).\n"
                    },
                    "securityQuestion": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Security Question MFA policy settings (✓ OIE).\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default policy status.\n"
                    },
                    "symantecVip": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Symantec VIP MFA policy settings (✓ Classic).\n"
                    },
                    "webauthn": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "FIDO2 (WebAuthn) MFA policy settings (✓ OIE).\n"
                    },
                    "yubikeyToken": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Yubikey Token MFA policy settings (✓ Classic, ✓ OIE).\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/policyPasswordDefault:PolicyPasswordDefault": {
            "description": "Configures default password policy.\n\nThis resource allows you to configure default password policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst _default = new okta.PolicyPasswordDefault(\"default\", {});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ndefault = okta.PolicyPasswordDefault(\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @default = new Okta.PolicyPasswordDefault(\"default\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewPolicyPasswordDefault(ctx, \"default\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.PolicyPasswordDefault;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var default_ = new PolicyPasswordDefault(\"default\");\n\n    }\n}\n```\n```yaml\nresources:\n  default:\n    type: okta:PolicyPasswordDefault\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nDefault Password Policy can be imported without providing Okta ID.\n\n```sh\n $ pulumi import okta:index/policyPasswordDefault:PolicyPasswordDefault example .\n```\n\n ",
            "properties": {
                "callRecovery": {
                    "type": "string",
                    "description": "Enable or disable voice call password recovery: ACTIVE or INACTIVE.\n"
                },
                "defaultAuthProvider": {
                    "type": "string",
                    "description": "Default authentication provider.\n"
                },
                "defaultIncludedGroupId": {
                    "type": "string",
                    "description": "ID of the default Okta group.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Default policy description.\n"
                },
                "emailRecovery": {
                    "type": "string",
                    "description": "Enable or disable email password recovery: ACTIVE or INACTIVE.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Default policy name.\n"
                },
                "passwordAutoUnlockMinutes": {
                    "type": "integer",
                    "description": "Number of minutes before a locked account is unlocked: 0 = no limit.\n"
                },
                "passwordDictionaryLookup": {
                    "type": "boolean",
                    "description": "Check Passwords Against Common Password Dictionary.\n"
                },
                "passwordExcludeFirstName": {
                    "type": "boolean",
                    "description": "User firstName attribute must be excluded from the password.\n"
                },
                "passwordExcludeLastName": {
                    "type": "boolean",
                    "description": "User lastName attribute must be excluded from the password.\n"
                },
                "passwordExcludeUsername": {
                    "type": "boolean",
                    "description": "If the username must be excluded from the password.\n"
                },
                "passwordExpireWarnDays": {
                    "type": "integer",
                    "description": "Length in days a user will be warned before password expiry: 0 = no warning.\n"
                },
                "passwordHistoryCount": {
                    "type": "integer",
                    "description": "Number of distinct passwords that must be created before they can be reused: 0 =\nnone.\n"
                },
                "passwordLockoutNotificationChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification channels to use to notify a user when their account\nhas been locked.\n"
                },
                "passwordMaxAgeDays": {
                    "type": "integer",
                    "description": "Length in days a password is valid before expiry: 0 = no limit.,\n"
                },
                "passwordMaxLockoutAttempts": {
                    "type": "integer",
                    "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no\nlimit.\n"
                },
                "passwordMinAgeMinutes": {
                    "type": "integer",
                    "description": "Minimum time interval in minutes between password changes: 0 = no limit.\n"
                },
                "passwordMinLength": {
                    "type": "integer",
                    "description": "Minimum password length. Default is 8.\n"
                },
                "passwordMinLowercase": {
                    "type": "integer",
                    "description": "Minimum number of lower case characters in a password.\n"
                },
                "passwordMinNumber": {
                    "type": "integer",
                    "description": "Minimum number of numbers in a password.\n"
                },
                "passwordMinSymbol": {
                    "type": "integer",
                    "description": "Minimum number of symbols in a password.\n"
                },
                "passwordMinUppercase": {
                    "type": "integer",
                    "description": "Minimum number of upper case characters in a password.\n"
                },
                "passwordShowLockoutFailures": {
                    "type": "boolean",
                    "description": "If a user should be informed when their account is locked.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Default policy priority.\n"
                },
                "questionMinLength": {
                    "type": "integer",
                    "description": "Min length of the password recovery question answer.\n"
                },
                "questionRecovery": {
                    "type": "string",
                    "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE.\n"
                },
                "recoveryEmailToken": {
                    "type": "integer",
                    "description": "Lifetime in minutes of the recovery email token.\n"
                },
                "skipUnlock": {
                    "type": "boolean",
                    "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also\nattempt to unlock the user's Windows account.\n"
                },
                "smsRecovery": {
                    "type": "string",
                    "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default policy status.\n"
                }
            },
            "required": [
                "defaultAuthProvider",
                "defaultIncludedGroupId",
                "description",
                "name",
                "priority",
                "status"
            ],
            "inputProperties": {
                "callRecovery": {
                    "type": "string",
                    "description": "Enable or disable voice call password recovery: ACTIVE or INACTIVE.\n"
                },
                "emailRecovery": {
                    "type": "string",
                    "description": "Enable or disable email password recovery: ACTIVE or INACTIVE.\n"
                },
                "passwordAutoUnlockMinutes": {
                    "type": "integer",
                    "description": "Number of minutes before a locked account is unlocked: 0 = no limit.\n"
                },
                "passwordDictionaryLookup": {
                    "type": "boolean",
                    "description": "Check Passwords Against Common Password Dictionary.\n"
                },
                "passwordExcludeFirstName": {
                    "type": "boolean",
                    "description": "User firstName attribute must be excluded from the password.\n"
                },
                "passwordExcludeLastName": {
                    "type": "boolean",
                    "description": "User lastName attribute must be excluded from the password.\n"
                },
                "passwordExcludeUsername": {
                    "type": "boolean",
                    "description": "If the username must be excluded from the password.\n"
                },
                "passwordExpireWarnDays": {
                    "type": "integer",
                    "description": "Length in days a user will be warned before password expiry: 0 = no warning.\n"
                },
                "passwordHistoryCount": {
                    "type": "integer",
                    "description": "Number of distinct passwords that must be created before they can be reused: 0 =\nnone.\n"
                },
                "passwordLockoutNotificationChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification channels to use to notify a user when their account\nhas been locked.\n"
                },
                "passwordMaxAgeDays": {
                    "type": "integer",
                    "description": "Length in days a password is valid before expiry: 0 = no limit.,\n"
                },
                "passwordMaxLockoutAttempts": {
                    "type": "integer",
                    "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no\nlimit.\n"
                },
                "passwordMinAgeMinutes": {
                    "type": "integer",
                    "description": "Minimum time interval in minutes between password changes: 0 = no limit.\n"
                },
                "passwordMinLength": {
                    "type": "integer",
                    "description": "Minimum password length. Default is 8.\n"
                },
                "passwordMinLowercase": {
                    "type": "integer",
                    "description": "Minimum number of lower case characters in a password.\n"
                },
                "passwordMinNumber": {
                    "type": "integer",
                    "description": "Minimum number of numbers in a password.\n"
                },
                "passwordMinSymbol": {
                    "type": "integer",
                    "description": "Minimum number of symbols in a password.\n"
                },
                "passwordMinUppercase": {
                    "type": "integer",
                    "description": "Minimum number of upper case characters in a password.\n"
                },
                "passwordShowLockoutFailures": {
                    "type": "boolean",
                    "description": "If a user should be informed when their account is locked.\n"
                },
                "questionMinLength": {
                    "type": "integer",
                    "description": "Min length of the password recovery question answer.\n"
                },
                "questionRecovery": {
                    "type": "string",
                    "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE.\n"
                },
                "recoveryEmailToken": {
                    "type": "integer",
                    "description": "Lifetime in minutes of the recovery email token.\n"
                },
                "skipUnlock": {
                    "type": "boolean",
                    "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also\nattempt to unlock the user's Windows account.\n"
                },
                "smsRecovery": {
                    "type": "string",
                    "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyPasswordDefault resources.\n",
                "properties": {
                    "callRecovery": {
                        "type": "string",
                        "description": "Enable or disable voice call password recovery: ACTIVE or INACTIVE.\n"
                    },
                    "defaultAuthProvider": {
                        "type": "string",
                        "description": "Default authentication provider.\n"
                    },
                    "defaultIncludedGroupId": {
                        "type": "string",
                        "description": "ID of the default Okta group.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Default policy description.\n"
                    },
                    "emailRecovery": {
                        "type": "string",
                        "description": "Enable or disable email password recovery: ACTIVE or INACTIVE.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Default policy name.\n"
                    },
                    "passwordAutoUnlockMinutes": {
                        "type": "integer",
                        "description": "Number of minutes before a locked account is unlocked: 0 = no limit.\n"
                    },
                    "passwordDictionaryLookup": {
                        "type": "boolean",
                        "description": "Check Passwords Against Common Password Dictionary.\n"
                    },
                    "passwordExcludeFirstName": {
                        "type": "boolean",
                        "description": "User firstName attribute must be excluded from the password.\n"
                    },
                    "passwordExcludeLastName": {
                        "type": "boolean",
                        "description": "User lastName attribute must be excluded from the password.\n"
                    },
                    "passwordExcludeUsername": {
                        "type": "boolean",
                        "description": "If the username must be excluded from the password.\n"
                    },
                    "passwordExpireWarnDays": {
                        "type": "integer",
                        "description": "Length in days a user will be warned before password expiry: 0 = no warning.\n"
                    },
                    "passwordHistoryCount": {
                        "type": "integer",
                        "description": "Number of distinct passwords that must be created before they can be reused: 0 =\nnone.\n"
                    },
                    "passwordLockoutNotificationChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Notification channels to use to notify a user when their account\nhas been locked.\n"
                    },
                    "passwordMaxAgeDays": {
                        "type": "integer",
                        "description": "Length in days a password is valid before expiry: 0 = no limit.,\n"
                    },
                    "passwordMaxLockoutAttempts": {
                        "type": "integer",
                        "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no\nlimit.\n"
                    },
                    "passwordMinAgeMinutes": {
                        "type": "integer",
                        "description": "Minimum time interval in minutes between password changes: 0 = no limit.\n"
                    },
                    "passwordMinLength": {
                        "type": "integer",
                        "description": "Minimum password length. Default is 8.\n"
                    },
                    "passwordMinLowercase": {
                        "type": "integer",
                        "description": "Minimum number of lower case characters in a password.\n"
                    },
                    "passwordMinNumber": {
                        "type": "integer",
                        "description": "Minimum number of numbers in a password.\n"
                    },
                    "passwordMinSymbol": {
                        "type": "integer",
                        "description": "Minimum number of symbols in a password.\n"
                    },
                    "passwordMinUppercase": {
                        "type": "integer",
                        "description": "Minimum number of upper case characters in a password.\n"
                    },
                    "passwordShowLockoutFailures": {
                        "type": "boolean",
                        "description": "If a user should be informed when their account is locked.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Default policy priority.\n"
                    },
                    "questionMinLength": {
                        "type": "integer",
                        "description": "Min length of the password recovery question answer.\n"
                    },
                    "questionRecovery": {
                        "type": "string",
                        "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE.\n"
                    },
                    "recoveryEmailToken": {
                        "type": "integer",
                        "description": "Lifetime in minutes of the recovery email token.\n"
                    },
                    "skipUnlock": {
                        "type": "boolean",
                        "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also\nattempt to unlock the user's Windows account.\n"
                    },
                    "smsRecovery": {
                        "type": "string",
                        "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default policy status.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/policyProfileEnrollment:PolicyProfileEnrollment": {
            "description": "\u003e **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.\n\nThis resource allows you to create and configure a Profile Enrollment Policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.PolicyProfileEnrollment(\"example\", {status: \"ACTIVE\"});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.PolicyProfileEnrollment(\"example\", status=\"ACTIVE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.PolicyProfileEnrollment(\"example\", new()\n    {\n        Status = \"ACTIVE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewPolicyProfileEnrollment(ctx, \"example\", \u0026okta.PolicyProfileEnrollmentArgs{\n\t\t\tStatus: pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.PolicyProfileEnrollment;\nimport com.pulumi.okta.PolicyProfileEnrollmentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PolicyProfileEnrollment(\"example\", PolicyProfileEnrollmentArgs.builder()        \n            .status(\"ACTIVE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:PolicyProfileEnrollment\n    properties:\n      status: ACTIVE\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Profile Enrollment Policy can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/policyProfileEnrollment:PolicyProfileEnrollment example \u0026#60;policy id\u0026#62;\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Policy Name.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the policy.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Policy Name.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the policy.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyProfileEnrollment resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Policy Name.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the policy.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/policyProfileEnrollmentApps:PolicyProfileEnrollmentApps": {
            "description": "\u003e **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.\n\nThis resource allows you to manage the apps in the Profile Enrollment Policy. \n\n**Important Notes:** \n - Default Enrollment Policy can not be used in this resource since it is used as a policy to re-assign apps to when they are unassigned from this one.\n - When re-assigning the app to another policy, please use `depends_on` in the policy to which the app will be assigned. This is necessary to avoid \n  unexpected behavior, since if the app is unassigned from the policy it is just assigned to the `Default` one.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst examplePolicy = okta.policy.getPolicy({\n    name: \"My Policy\",\n    type: \"PROFILE_ENROLLMENT\",\n});\nconst test = okta.app.getApp({\n    label: \"My App\",\n});\nconst examplePolicyProfileEnrollmentApps = new okta.PolicyProfileEnrollmentApps(\"examplePolicyProfileEnrollmentApps\", {\n    policyId: okta_policy.example.id,\n    apps: [data.okta_app.id],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_policy = okta.policy.get_policy(name=\"My Policy\",\n    type=\"PROFILE_ENROLLMENT\")\ntest = okta.app.get_app(label=\"My App\")\nexample_policy_profile_enrollment_apps = okta.PolicyProfileEnrollmentApps(\"examplePolicyProfileEnrollmentApps\",\n    policy_id=okta_policy[\"example\"][\"id\"],\n    apps=[data[\"okta_app\"][\"id\"]])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var examplePolicy = Okta.Policy.GetPolicy.Invoke(new()\n    {\n        Name = \"My Policy\",\n        Type = \"PROFILE_ENROLLMENT\",\n    });\n\n    var test = Okta.App.GetApp.Invoke(new()\n    {\n        Label = \"My App\",\n    });\n\n    var examplePolicyProfileEnrollmentApps = new Okta.PolicyProfileEnrollmentApps(\"examplePolicyProfileEnrollmentApps\", new()\n    {\n        PolicyId = okta_policy.Example.Id,\n        Apps = new[]\n        {\n            data.Okta_app.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.GetPolicy(ctx, \u0026policy.GetPolicyArgs{\n\t\t\tName: \"My Policy\",\n\t\t\tType: \"PROFILE_ENROLLMENT\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = app.GetApp(ctx, \u0026app.GetAppArgs{\n\t\t\tLabel: pulumi.StringRef(\"My App\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewPolicyProfileEnrollmentApps(ctx, \"examplePolicyProfileEnrollmentApps\", \u0026okta.PolicyProfileEnrollmentAppsArgs{\n\t\t\tPolicyId: pulumi.Any(okta_policy.Example.Id),\n\t\t\tApps: pulumi.StringArray{\n\t\t\t\tdata.Okta_app.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.PolicyFunctions;\nimport com.pulumi.okta.policy.inputs.GetPolicyArgs;\nimport com.pulumi.okta.app.AppFunctions;\nimport com.pulumi.okta.app.inputs.GetAppArgs;\nimport com.pulumi.okta.PolicyProfileEnrollmentApps;\nimport com.pulumi.okta.PolicyProfileEnrollmentAppsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var examplePolicy = PolicyFunctions.getPolicy(GetPolicyArgs.builder()\n            .name(\"My Policy\")\n            .type(\"PROFILE_ENROLLMENT\")\n            .build());\n\n        final var test = AppFunctions.getApp(GetAppArgs.builder()\n            .label(\"My App\")\n            .build());\n\n        var examplePolicyProfileEnrollmentApps = new PolicyProfileEnrollmentApps(\"examplePolicyProfileEnrollmentApps\", PolicyProfileEnrollmentAppsArgs.builder()        \n            .policyId(okta_policy.example().id())\n            .apps(data.okta_app().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  examplePolicyProfileEnrollmentApps:\n    type: okta:PolicyProfileEnrollmentApps\n    properties:\n      policyId: ${okta_policy.example.id}\n      apps:\n        - ${data.okta_app.id}\nvariables:\n  examplePolicy:\n    fn::invoke:\n      Function: okta:policy:getPolicy\n      Arguments:\n        name: My Policy\n        type: PROFILE_ENROLLMENT\n  test:\n    fn::invoke:\n      Function: okta:app:getApp\n      Arguments:\n        label: My App\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Profile Enrollment Policy Apps can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/policyProfileEnrollmentApps:PolicyProfileEnrollmentApps example \u0026#60;policy id\u0026#62;\n```\n\n ",
            "properties": {
                "apps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of app IDs to be added to this policy.\n"
                },
                "defaultPolicyId": {
                    "type": "string",
                    "description": "ID of the default enrollment policy.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "ID of the enrollment policy.\n"
                }
            },
            "required": [
                "defaultPolicyId",
                "policyId"
            ],
            "inputProperties": {
                "apps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of app IDs to be added to this policy.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "ID of the enrollment policy.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "policyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyProfileEnrollmentApps resources.\n",
                "properties": {
                    "apps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of app IDs to be added to this policy.\n"
                    },
                    "defaultPolicyId": {
                        "type": "string",
                        "description": "ID of the default enrollment policy.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "ID of the enrollment policy.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/policyRuleProfileEnrollment:PolicyRuleProfileEnrollment": {
            "description": "\u003e **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.\n\nA [profile enrollment\npolicy](https://developer.okta.com/docs/reference/api/policy/#profile-enrollment-policy)\nis limited to one default rule. This resource does not create a rule for an\nenrollment policy, it allows the default policy rule to be updated.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst examplePolicyProfileEnrollment = new okta.PolicyProfileEnrollment(\"examplePolicyProfileEnrollment\", {});\nconst exampleHook = new okta.inline.Hook(\"exampleHook\", {\n    status: \"ACTIVE\",\n    type: \"com.okta.user.pre-registration\",\n    version: \"1.0.3\",\n    channel: {\n        type: \"HTTP\",\n        version: \"1.0.0\",\n        uri: \"https://example.com/test2\",\n        method: \"POST\",\n    },\n});\nconst exampleGroup = new okta.group.Group(\"exampleGroup\", {description: \"Group of some users\"});\nconst examplePolicyRuleProfileEnrollment = new okta.PolicyRuleProfileEnrollment(\"examplePolicyRuleProfileEnrollment\", {\n    policyId: examplePolicyProfileEnrollment.id,\n    inlineHookId: exampleHook.id,\n    targetGroupId: exampleGroup.id,\n    unknownUserAction: \"REGISTER\",\n    emailVerification: true,\n    access: \"ALLOW\",\n    profileAttributes: [\n        {\n            name: \"email\",\n            label: \"Email\",\n            required: true,\n        },\n        {\n            name: \"name\",\n            label: \"Name\",\n            required: true,\n        },\n        {\n            name: \"t-shirt\",\n            label: \"T-Shirt Size\",\n            required: false,\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_policy_profile_enrollment = okta.PolicyProfileEnrollment(\"examplePolicyProfileEnrollment\")\nexample_hook = okta.inline.Hook(\"exampleHook\",\n    status=\"ACTIVE\",\n    type=\"com.okta.user.pre-registration\",\n    version=\"1.0.3\",\n    channel={\n        \"type\": \"HTTP\",\n        \"version\": \"1.0.0\",\n        \"uri\": \"https://example.com/test2\",\n        \"method\": \"POST\",\n    })\nexample_group = okta.group.Group(\"exampleGroup\", description=\"Group of some users\")\nexample_policy_rule_profile_enrollment = okta.PolicyRuleProfileEnrollment(\"examplePolicyRuleProfileEnrollment\",\n    policy_id=example_policy_profile_enrollment.id,\n    inline_hook_id=example_hook.id,\n    target_group_id=example_group.id,\n    unknown_user_action=\"REGISTER\",\n    email_verification=True,\n    access=\"ALLOW\",\n    profile_attributes=[\n        okta.PolicyRuleProfileEnrollmentProfileAttributeArgs(\n            name=\"email\",\n            label=\"Email\",\n            required=True,\n        ),\n        okta.PolicyRuleProfileEnrollmentProfileAttributeArgs(\n            name=\"name\",\n            label=\"Name\",\n            required=True,\n        ),\n        okta.PolicyRuleProfileEnrollmentProfileAttributeArgs(\n            name=\"t-shirt\",\n            label=\"T-Shirt Size\",\n            required=False,\n        ),\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var examplePolicyProfileEnrollment = new Okta.PolicyProfileEnrollment(\"examplePolicyProfileEnrollment\");\n\n    var exampleHook = new Okta.Inline.Hook(\"exampleHook\", new()\n    {\n        Status = \"ACTIVE\",\n        Type = \"com.okta.user.pre-registration\",\n        Version = \"1.0.3\",\n        Channel = \n        {\n            { \"type\", \"HTTP\" },\n            { \"version\", \"1.0.0\" },\n            { \"uri\", \"https://example.com/test2\" },\n            { \"method\", \"POST\" },\n        },\n    });\n\n    var exampleGroup = new Okta.Group.Group(\"exampleGroup\", new()\n    {\n        Description = \"Group of some users\",\n    });\n\n    var examplePolicyRuleProfileEnrollment = new Okta.PolicyRuleProfileEnrollment(\"examplePolicyRuleProfileEnrollment\", new()\n    {\n        PolicyId = examplePolicyProfileEnrollment.Id,\n        InlineHookId = exampleHook.Id,\n        TargetGroupId = exampleGroup.Id,\n        UnknownUserAction = \"REGISTER\",\n        EmailVerification = true,\n        Access = \"ALLOW\",\n        ProfileAttributes = new[]\n        {\n            new Okta.Inputs.PolicyRuleProfileEnrollmentProfileAttributeArgs\n            {\n                Name = \"email\",\n                Label = \"Email\",\n                Required = true,\n            },\n            new Okta.Inputs.PolicyRuleProfileEnrollmentProfileAttributeArgs\n            {\n                Name = \"name\",\n                Label = \"Name\",\n                Required = true,\n            },\n            new Okta.Inputs.PolicyRuleProfileEnrollmentProfileAttributeArgs\n            {\n                Name = \"t-shirt\",\n                Label = \"T-Shirt Size\",\n                Required = false,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/group\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/inline\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texamplePolicyProfileEnrollment, err := okta.NewPolicyProfileEnrollment(ctx, \"examplePolicyProfileEnrollment\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleHook, err := inline.NewHook(ctx, \"exampleHook\", \u0026inline.HookArgs{\n\t\t\tStatus:  pulumi.String(\"ACTIVE\"),\n\t\t\tType:    pulumi.String(\"com.okta.user.pre-registration\"),\n\t\t\tVersion: pulumi.String(\"1.0.3\"),\n\t\t\tChannel: pulumi.StringMap{\n\t\t\t\t\"type\":    pulumi.String(\"HTTP\"),\n\t\t\t\t\"version\": pulumi.String(\"1.0.0\"),\n\t\t\t\t\"uri\":     pulumi.String(\"https://example.com/test2\"),\n\t\t\t\t\"method\":  pulumi.String(\"POST\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleGroup, err := group.NewGroup(ctx, \"exampleGroup\", \u0026group.GroupArgs{\n\t\t\tDescription: pulumi.String(\"Group of some users\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewPolicyRuleProfileEnrollment(ctx, \"examplePolicyRuleProfileEnrollment\", \u0026okta.PolicyRuleProfileEnrollmentArgs{\n\t\t\tPolicyId:          examplePolicyProfileEnrollment.ID(),\n\t\t\tInlineHookId:      exampleHook.ID(),\n\t\t\tTargetGroupId:     exampleGroup.ID(),\n\t\t\tUnknownUserAction: pulumi.String(\"REGISTER\"),\n\t\t\tEmailVerification: pulumi.Bool(true),\n\t\t\tAccess:            pulumi.String(\"ALLOW\"),\n\t\t\tProfileAttributes: okta.PolicyRuleProfileEnrollmentProfileAttributeArray{\n\t\t\t\t\u0026okta.PolicyRuleProfileEnrollmentProfileAttributeArgs{\n\t\t\t\t\tName:     pulumi.String(\"email\"),\n\t\t\t\t\tLabel:    pulumi.String(\"Email\"),\n\t\t\t\t\tRequired: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t\t\u0026okta.PolicyRuleProfileEnrollmentProfileAttributeArgs{\n\t\t\t\t\tName:     pulumi.String(\"name\"),\n\t\t\t\t\tLabel:    pulumi.String(\"Name\"),\n\t\t\t\t\tRequired: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t\t\u0026okta.PolicyRuleProfileEnrollmentProfileAttributeArgs{\n\t\t\t\t\tName:     pulumi.String(\"t-shirt\"),\n\t\t\t\t\tLabel:    pulumi.String(\"T-Shirt Size\"),\n\t\t\t\t\tRequired: pulumi.Bool(false),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.PolicyProfileEnrollment;\nimport com.pulumi.okta.inline.Hook;\nimport com.pulumi.okta.inline.HookArgs;\nimport com.pulumi.okta.group.Group;\nimport com.pulumi.okta.group.GroupArgs;\nimport com.pulumi.okta.PolicyRuleProfileEnrollment;\nimport com.pulumi.okta.PolicyRuleProfileEnrollmentArgs;\nimport com.pulumi.okta.inputs.PolicyRuleProfileEnrollmentProfileAttributeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var examplePolicyProfileEnrollment = new PolicyProfileEnrollment(\"examplePolicyProfileEnrollment\");\n\n        var exampleHook = new Hook(\"exampleHook\", HookArgs.builder()        \n            .status(\"ACTIVE\")\n            .type(\"com.okta.user.pre-registration\")\n            .version(\"1.0.3\")\n            .channel(Map.ofEntries(\n                Map.entry(\"type\", \"HTTP\"),\n                Map.entry(\"version\", \"1.0.0\"),\n                Map.entry(\"uri\", \"https://example.com/test2\"),\n                Map.entry(\"method\", \"POST\")\n            ))\n            .build());\n\n        var exampleGroup = new Group(\"exampleGroup\", GroupArgs.builder()        \n            .description(\"Group of some users\")\n            .build());\n\n        var examplePolicyRuleProfileEnrollment = new PolicyRuleProfileEnrollment(\"examplePolicyRuleProfileEnrollment\", PolicyRuleProfileEnrollmentArgs.builder()        \n            .policyId(examplePolicyProfileEnrollment.id())\n            .inlineHookId(exampleHook.id())\n            .targetGroupId(exampleGroup.id())\n            .unknownUserAction(\"REGISTER\")\n            .emailVerification(true)\n            .access(\"ALLOW\")\n            .profileAttributes(            \n                PolicyRuleProfileEnrollmentProfileAttributeArgs.builder()\n                    .name(\"email\")\n                    .label(\"Email\")\n                    .required(true)\n                    .build(),\n                PolicyRuleProfileEnrollmentProfileAttributeArgs.builder()\n                    .name(\"name\")\n                    .label(\"Name\")\n                    .required(true)\n                    .build(),\n                PolicyRuleProfileEnrollmentProfileAttributeArgs.builder()\n                    .name(\"t-shirt\")\n                    .label(\"T-Shirt Size\")\n                    .required(false)\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  examplePolicyProfileEnrollment:\n    type: okta:PolicyProfileEnrollment\n  exampleHook:\n    type: okta:inline:Hook\n    properties:\n      status: ACTIVE\n      type: com.okta.user.pre-registration\n      version: 1.0.3\n      channel:\n        type: HTTP\n        version: 1.0.0\n        uri: https://example.com/test2\n        method: POST\n  exampleGroup:\n    type: okta:group:Group\n    properties:\n      description: Group of some users\n  examplePolicyRuleProfileEnrollment:\n    type: okta:PolicyRuleProfileEnrollment\n    properties:\n      policyId: ${examplePolicyProfileEnrollment.id}\n      inlineHookId: ${exampleHook.id}\n      targetGroupId: ${exampleGroup.id}\n      unknownUserAction: REGISTER\n      emailVerification: true\n      access: ALLOW\n      profileAttributes:\n        - name: email\n          label: Email\n          required: true\n        - name: name\n          label: Name\n          required: true\n        - name: t-shirt\n          label: T-Shirt Size\n          required: false\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Policy Rule can be imported via the Policy and Rule ID.\n\n```sh\n $ pulumi import okta:index/policyRuleProfileEnrollment:PolicyRuleProfileEnrollment example \u0026#60;policy id\u0026#62;/\u0026#60;rule id\u0026#62;\n```\n\n ",
            "properties": {
                "access": {
                    "type": "string",
                    "description": "Allow or deny access based on the rule conditions. Valid values are: `\"ALLOW\"`, `\"DENY\"`. Default is `\"ALLOW\"`.\n"
                },
                "emailVerification": {
                    "type": "boolean",
                    "description": "Indicates whether email verification should occur before access is granted. Default is `true`.\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "ID of a Registration Inline Hook.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of a User Profile property\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n"
                },
                "profileAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/PolicyRuleProfileEnrollmentProfileAttribute:PolicyRuleProfileEnrollmentProfileAttribute"
                    },
                    "description": "A list of attributes to prompt the user during registration or progressive profiling. Where defined on the User schema, these attributes are persisted in the User profile. Non-schema attributes may also be added, which aren't persisted to the User's profile, but are included in requests to the registration inline hook. A maximum of 10 Profile properties is supported.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the Rule.\n"
                },
                "targetGroupId": {
                    "type": "string",
                    "description": "The ID of a Group that this User should be added to.\n"
                },
                "uiSchemaId": {
                    "type": "string",
                    "description": "Value created by the backend. If present all policy updates must include this attribute/value.\n"
                },
                "unknownUserAction": {
                    "type": "string",
                    "description": "Which action should be taken if this User is new. Valid values are: `\"DENY\"`, `\"REGISTER\"`.\n"
                }
            },
            "required": [
                "name",
                "policyId",
                "status",
                "unknownUserAction"
            ],
            "inputProperties": {
                "access": {
                    "type": "string",
                    "description": "Allow or deny access based on the rule conditions. Valid values are: `\"ALLOW\"`, `\"DENY\"`. Default is `\"ALLOW\"`.\n"
                },
                "emailVerification": {
                    "type": "boolean",
                    "description": "Indicates whether email verification should occur before access is granted. Default is `true`.\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "ID of a Registration Inline Hook.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n",
                    "willReplaceOnChanges": true
                },
                "profileAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/PolicyRuleProfileEnrollmentProfileAttribute:PolicyRuleProfileEnrollmentProfileAttribute"
                    },
                    "description": "A list of attributes to prompt the user during registration or progressive profiling. Where defined on the User schema, these attributes are persisted in the User profile. Non-schema attributes may also be added, which aren't persisted to the User's profile, but are included in requests to the registration inline hook. A maximum of 10 Profile properties is supported.\n"
                },
                "targetGroupId": {
                    "type": "string",
                    "description": "The ID of a Group that this User should be added to.\n"
                },
                "uiSchemaId": {
                    "type": "string",
                    "description": "Value created by the backend. If present all policy updates must include this attribute/value.\n"
                },
                "unknownUserAction": {
                    "type": "string",
                    "description": "Which action should be taken if this User is new. Valid values are: `\"DENY\"`, `\"REGISTER\"`.\n"
                }
            },
            "requiredInputs": [
                "policyId",
                "unknownUserAction"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyRuleProfileEnrollment resources.\n",
                "properties": {
                    "access": {
                        "type": "string",
                        "description": "Allow or deny access based on the rule conditions. Valid values are: `\"ALLOW\"`, `\"DENY\"`. Default is `\"ALLOW\"`.\n"
                    },
                    "emailVerification": {
                        "type": "boolean",
                        "description": "Indicates whether email verification should occur before access is granted. Default is `true`.\n"
                    },
                    "inlineHookId": {
                        "type": "string",
                        "description": "ID of a Registration Inline Hook.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a User Profile property\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Policy ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "profileAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/PolicyRuleProfileEnrollmentProfileAttribute:PolicyRuleProfileEnrollmentProfileAttribute"
                        },
                        "description": "A list of attributes to prompt the user during registration or progressive profiling. Where defined on the User schema, these attributes are persisted in the User profile. Non-schema attributes may also be added, which aren't persisted to the User's profile, but are included in requests to the registration inline hook. A maximum of 10 Profile properties is supported.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the Rule.\n"
                    },
                    "targetGroupId": {
                        "type": "string",
                        "description": "The ID of a Group that this User should be added to.\n"
                    },
                    "uiSchemaId": {
                        "type": "string",
                        "description": "Value created by the backend. If present all policy updates must include this attribute/value.\n"
                    },
                    "unknownUserAction": {
                        "type": "string",
                        "description": "Which action should be taken if this User is new. Valid values are: `\"DENY\"`, `\"REGISTER\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/rateLimiting:RateLimiting": {
            "description": "This resource allows you to configure the client-based rate limit and rate limiting communications settings.\n\n\u003e **WARNING:** This resource is available only when using api token in the provider config.\n\n\u003e **WARNING:** This resource makes use of an internal/private Okta API endpoint that could change without notice rendering this resource inoperable. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.RateLimiting(\"example\", {\n    authorize: \"ENFORCE\",\n    communicationsEnabled: true,\n    login: \"ENFORCE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.RateLimiting(\"example\",\n    authorize=\"ENFORCE\",\n    communications_enabled=True,\n    login=\"ENFORCE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.RateLimiting(\"example\", new()\n    {\n        Authorize = \"ENFORCE\",\n        CommunicationsEnabled = true,\n        Login = \"ENFORCE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewRateLimiting(ctx, \"example\", \u0026okta.RateLimitingArgs{\n\t\t\tAuthorize:             pulumi.String(\"ENFORCE\"),\n\t\t\tCommunicationsEnabled: pulumi.Bool(true),\n\t\t\tLogin:                 pulumi.String(\"ENFORCE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.RateLimiting;\nimport com.pulumi.okta.RateLimitingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new RateLimiting(\"example\", RateLimitingArgs.builder()        \n            .authorize(\"ENFORCE\")\n            .communicationsEnabled(true)\n            .login(\"ENFORCE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:RateLimiting\n    properties:\n      authorize: ENFORCE\n      communicationsEnabled: true\n      login: ENFORCE\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRate limit settings can be imported without any parameters.\n\n```sh\n $ pulumi import okta:index/rateLimiting:RateLimiting example .\n```\n\n ",
            "properties": {
                "authorize": {
                    "type": "string",
                    "description": "Called during authentication. Valid values: `\"ENFORCE\"` _(Enforce limit and\nlog per client (recommended))_, `\"DISABLE\"` _(Do nothing (not recommended))_, `\"PREVIEW\"` _(Log per client)_.\n"
                },
                "communicationsEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable rate limiting communications. By default, it is `true`.\n"
                },
                "login": {
                    "type": "string",
                    "description": "Called when accessing the Okta hosted login page. Valid values: `\"ENFORCE\"` _(Enforce limit and \nlog per client (recommended))_, `\"DISABLE\"` _(Do nothing (not recommended))_, `\"PREVIEW\"` _(Log per client)_.\n"
                }
            },
            "required": [
                "authorize",
                "login"
            ],
            "inputProperties": {
                "authorize": {
                    "type": "string",
                    "description": "Called during authentication. Valid values: `\"ENFORCE\"` _(Enforce limit and\nlog per client (recommended))_, `\"DISABLE\"` _(Do nothing (not recommended))_, `\"PREVIEW\"` _(Log per client)_.\n"
                },
                "communicationsEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable rate limiting communications. By default, it is `true`.\n"
                },
                "login": {
                    "type": "string",
                    "description": "Called when accessing the Okta hosted login page. Valid values: `\"ENFORCE\"` _(Enforce limit and \nlog per client (recommended))_, `\"DISABLE\"` _(Do nothing (not recommended))_, `\"PREVIEW\"` _(Log per client)_.\n"
                }
            },
            "requiredInputs": [
                "authorize",
                "login"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RateLimiting resources.\n",
                "properties": {
                    "authorize": {
                        "type": "string",
                        "description": "Called during authentication. Valid values: `\"ENFORCE\"` _(Enforce limit and\nlog per client (recommended))_, `\"DISABLE\"` _(Do nothing (not recommended))_, `\"PREVIEW\"` _(Log per client)_.\n"
                    },
                    "communicationsEnabled": {
                        "type": "boolean",
                        "description": "Enable or disable rate limiting communications. By default, it is `true`.\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "Called when accessing the Okta hosted login page. Valid values: `\"ENFORCE\"` _(Enforce limit and \nlog per client (recommended))_, `\"DISABLE\"` _(Do nothing (not recommended))_, `\"PREVIEW\"` _(Log per client)_.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/resourceSet:ResourceSet": {
            "description": "This resource allows the creation and manipulation of Okta Resource Sets as custom collections of Okta resources. You can use \nOkta Resource Sets to assign Custom Roles to administrators who are scoped to the designated resources.\nThe `resources` field supports the following:\n - Apps\n - Groups\n - All Users within a Group\n - All Users within the org\n - All Groups within the org\n - All Apps within the org\n - All Apps of the same type\n\n\u003e **NOTE:** This an `Early Access` feature.\n\n\n## Import\n\nOkta Resource Set can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/resourceSet:ResourceSet example \u0026#60;resource_set_id\u0026#62;\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the Resource Set.\n"
                },
                "label": {
                    "type": "string",
                    "description": "Unique name given to the Resource Set.\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The endpoints that reference the resources to be included in the new Resource Set. At least one\nendpoint must be specified when creating resource set.\n"
                }
            },
            "required": [
                "description",
                "label"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of the Resource Set.\n"
                },
                "label": {
                    "type": "string",
                    "description": "Unique name given to the Resource Set.\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The endpoints that reference the resources to be included in the new Resource Set. At least one\nendpoint must be specified when creating resource set.\n"
                }
            },
            "requiredInputs": [
                "description",
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourceSet resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of the Resource Set.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Unique name given to the Resource Set.\n"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The endpoints that reference the resources to be included in the new Resource Set. At least one\nendpoint must be specified when creating resource set.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/roleSubscription:RoleSubscription": {
            "description": "This resource allows you to configure subscriptions of a Role with a specific type. \nCheck [configure email notifications](https://help.okta.com/oie/en-us/Content/Topics/Security/custom-admin-role/administrator-email-settings.htm) \npage regarding what notifications are available for specific admin roles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.RoleSubscription(\"test\", {\n    notificationType: \"APP_IMPORT\",\n    roleType: \"SUPER_ADMIN\",\n    status: \"unsubscribed\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.RoleSubscription(\"test\",\n    notification_type=\"APP_IMPORT\",\n    role_type=\"SUPER_ADMIN\",\n    status=\"unsubscribed\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Okta.RoleSubscription(\"test\", new()\n    {\n        NotificationType = \"APP_IMPORT\",\n        RoleType = \"SUPER_ADMIN\",\n        Status = \"unsubscribed\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewRoleSubscription(ctx, \"test\", \u0026okta.RoleSubscriptionArgs{\n\t\t\tNotificationType: pulumi.String(\"APP_IMPORT\"),\n\t\t\tRoleType:         pulumi.String(\"SUPER_ADMIN\"),\n\t\t\tStatus:           pulumi.String(\"unsubscribed\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.RoleSubscription;\nimport com.pulumi.okta.RoleSubscriptionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new RoleSubscription(\"test\", RoleSubscriptionArgs.builder()        \n            .notificationType(\"APP_IMPORT\")\n            .roleType(\"SUPER_ADMIN\")\n            .status(\"unsubscribed\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: okta:RoleSubscription\n    properties:\n      notificationType: APP_IMPORT\n      roleType: SUPER_ADMIN\n      status: unsubscribed\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA role subscription can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:index/roleSubscription:RoleSubscription example \u0026#60;role_type\u0026#62;/\u0026#60;notification_type\u0026#62;\n```\n\n ",
            "properties": {
                "notificationType": {
                    "type": "string",
                    "description": "Type of the notification. Valid values: \n- `\"CONNECTOR_AGENT\"` -  Disconnects and reconnects: On-prem provisioning, on-prem MFA agents, and RADIUS server agent.\n- `\"USER_LOCKED_OUT\"` - User lockouts.\n- `\"APP_IMPORT\"` - App user import status.\n- `\"LDAP_AGENT\"` - Disconnects and reconnects: LDAP agent.\n- `\"AD_AGENT\"` - Disconnects and reconnects: AD agent.\n- `\"OKTA_ANNOUNCEMENT\"` - Okta release notes and announcements.\n- `\"OKTA_ISSUE\"` - Trust incidents and updates.\n- `\"OKTA_UPDATE\"` - Scheduled system updates.\n- `\"IWA_AGENT\"` - Disconnects and reconnects: IWA agent.\n- `\"USER_DEPROVISION\"` - User deprovisions.\n- `\"REPORT_SUSPICIOUS_ACTIVITY\"` - User reporting of suspicious activity.\n- `\"RATELIMIT_NOTIFICATION\"` - Rate limit warning and violation.\n- `\"AGENT_AUTO_UPDATE_NOTIFICATION\"` - Agent auto-update notifications: AD Agent.\n"
                },
                "roleType": {
                    "type": "string",
                    "description": "Type of the role. Valid values:\n`\"API_ADMIN\"`,\n`\"APP_ADMIN\"`,\n`\"CUSTOM\"`,\n`\"GROUP_MEMBERSHIP_ADMIN\"`,\n`\"HELP_DESK_ADMIN\"`,\n`\"MOBILE_ADMIN\"`,\n`\"ORG_ADMIN\"`,\n`\"READ_ONLY_ADMIN\"`,\n`\"REPORT_ADMIN\"`,\n`\"SUPER_ADMIN\"`,\n`\"USER_ADMIN\"`\n. See [API docs](https://developer.okta.com/docs/reference/api/admin-notifications/#role-types)\n"
                },
                "status": {
                    "type": "string",
                    "description": "Subscription status. Valid values: `\"subscribed\"`, `\"unsubscribed\"`.\n"
                }
            },
            "required": [
                "notificationType",
                "roleType"
            ],
            "inputProperties": {
                "notificationType": {
                    "type": "string",
                    "description": "Type of the notification. Valid values: \n- `\"CONNECTOR_AGENT\"` -  Disconnects and reconnects: On-prem provisioning, on-prem MFA agents, and RADIUS server agent.\n- `\"USER_LOCKED_OUT\"` - User lockouts.\n- `\"APP_IMPORT\"` - App user import status.\n- `\"LDAP_AGENT\"` - Disconnects and reconnects: LDAP agent.\n- `\"AD_AGENT\"` - Disconnects and reconnects: AD agent.\n- `\"OKTA_ANNOUNCEMENT\"` - Okta release notes and announcements.\n- `\"OKTA_ISSUE\"` - Trust incidents and updates.\n- `\"OKTA_UPDATE\"` - Scheduled system updates.\n- `\"IWA_AGENT\"` - Disconnects and reconnects: IWA agent.\n- `\"USER_DEPROVISION\"` - User deprovisions.\n- `\"REPORT_SUSPICIOUS_ACTIVITY\"` - User reporting of suspicious activity.\n- `\"RATELIMIT_NOTIFICATION\"` - Rate limit warning and violation.\n- `\"AGENT_AUTO_UPDATE_NOTIFICATION\"` - Agent auto-update notifications: AD Agent.\n",
                    "willReplaceOnChanges": true
                },
                "roleType": {
                    "type": "string",
                    "description": "Type of the role. Valid values:\n`\"API_ADMIN\"`,\n`\"APP_ADMIN\"`,\n`\"CUSTOM\"`,\n`\"GROUP_MEMBERSHIP_ADMIN\"`,\n`\"HELP_DESK_ADMIN\"`,\n`\"MOBILE_ADMIN\"`,\n`\"ORG_ADMIN\"`,\n`\"READ_ONLY_ADMIN\"`,\n`\"REPORT_ADMIN\"`,\n`\"SUPER_ADMIN\"`,\n`\"USER_ADMIN\"`\n. See [API docs](https://developer.okta.com/docs/reference/api/admin-notifications/#role-types)\n",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "string",
                    "description": "Subscription status. Valid values: `\"subscribed\"`, `\"unsubscribed\"`.\n"
                }
            },
            "requiredInputs": [
                "notificationType",
                "roleType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RoleSubscription resources.\n",
                "properties": {
                    "notificationType": {
                        "type": "string",
                        "description": "Type of the notification. Valid values: \n- `\"CONNECTOR_AGENT\"` -  Disconnects and reconnects: On-prem provisioning, on-prem MFA agents, and RADIUS server agent.\n- `\"USER_LOCKED_OUT\"` - User lockouts.\n- `\"APP_IMPORT\"` - App user import status.\n- `\"LDAP_AGENT\"` - Disconnects and reconnects: LDAP agent.\n- `\"AD_AGENT\"` - Disconnects and reconnects: AD agent.\n- `\"OKTA_ANNOUNCEMENT\"` - Okta release notes and announcements.\n- `\"OKTA_ISSUE\"` - Trust incidents and updates.\n- `\"OKTA_UPDATE\"` - Scheduled system updates.\n- `\"IWA_AGENT\"` - Disconnects and reconnects: IWA agent.\n- `\"USER_DEPROVISION\"` - User deprovisions.\n- `\"REPORT_SUSPICIOUS_ACTIVITY\"` - User reporting of suspicious activity.\n- `\"RATELIMIT_NOTIFICATION\"` - Rate limit warning and violation.\n- `\"AGENT_AUTO_UPDATE_NOTIFICATION\"` - Agent auto-update notifications: AD Agent.\n",
                        "willReplaceOnChanges": true
                    },
                    "roleType": {
                        "type": "string",
                        "description": "Type of the role. Valid values:\n`\"API_ADMIN\"`,\n`\"APP_ADMIN\"`,\n`\"CUSTOM\"`,\n`\"GROUP_MEMBERSHIP_ADMIN\"`,\n`\"HELP_DESK_ADMIN\"`,\n`\"MOBILE_ADMIN\"`,\n`\"ORG_ADMIN\"`,\n`\"READ_ONLY_ADMIN\"`,\n`\"REPORT_ADMIN\"`,\n`\"SUPER_ADMIN\"`,\n`\"USER_ADMIN\"`\n. See [API docs](https://developer.okta.com/docs/reference/api/admin-notifications/#role-types)\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Subscription status. Valid values: `\"subscribed\"`, `\"unsubscribed\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/securityNotificationEmails:SecurityNotificationEmails": {
            "description": "This resource allows you to configure Security Notification Emails.\n\n\u003e **WARNING:** This resource is available only when using api token in the provider config.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.SecurityNotificationEmails(\"example\", {\n    reportSuspiciousActivityEnabled: true,\n    sendEmailForFactorEnrollmentEnabled: true,\n    sendEmailForFactorResetEnabled: true,\n    sendEmailForNewDeviceEnabled: true,\n    sendEmailForPasswordChangedEnabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.SecurityNotificationEmails(\"example\",\n    report_suspicious_activity_enabled=True,\n    send_email_for_factor_enrollment_enabled=True,\n    send_email_for_factor_reset_enabled=True,\n    send_email_for_new_device_enabled=True,\n    send_email_for_password_changed_enabled=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.SecurityNotificationEmails(\"example\", new()\n    {\n        ReportSuspiciousActivityEnabled = true,\n        SendEmailForFactorEnrollmentEnabled = true,\n        SendEmailForFactorResetEnabled = true,\n        SendEmailForNewDeviceEnabled = true,\n        SendEmailForPasswordChangedEnabled = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewSecurityNotificationEmails(ctx, \"example\", \u0026okta.SecurityNotificationEmailsArgs{\n\t\t\tReportSuspiciousActivityEnabled:     pulumi.Bool(true),\n\t\t\tSendEmailForFactorEnrollmentEnabled: pulumi.Bool(true),\n\t\t\tSendEmailForFactorResetEnabled:      pulumi.Bool(true),\n\t\t\tSendEmailForNewDeviceEnabled:        pulumi.Bool(true),\n\t\t\tSendEmailForPasswordChangedEnabled:  pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.SecurityNotificationEmails;\nimport com.pulumi.okta.SecurityNotificationEmailsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new SecurityNotificationEmails(\"example\", SecurityNotificationEmailsArgs.builder()        \n            .reportSuspiciousActivityEnabled(true)\n            .sendEmailForFactorEnrollmentEnabled(true)\n            .sendEmailForFactorResetEnabled(true)\n            .sendEmailForNewDeviceEnabled(true)\n            .sendEmailForPasswordChangedEnabled(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:SecurityNotificationEmails\n    properties:\n      reportSuspiciousActivityEnabled: true\n      sendEmailForFactorEnrollmentEnabled: true\n      sendEmailForFactorResetEnabled: true\n      sendEmailForNewDeviceEnabled: true\n      sendEmailForPasswordChangedEnabled: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nSecurity Notification Emails can be imported without any parameters.\n\n```sh\n $ pulumi import okta:index/securityNotificationEmails:SecurityNotificationEmails example _\n```\n\n ",
            "properties": {
                "reportSuspiciousActivityEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users about suspicious or unrecognized activity from their account. Default is `true`.\n"
                },
                "sendEmailForFactorEnrollmentEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users of any activity on their account related to MFA factor enrollment. Default is `true`.\n"
                },
                "sendEmailForFactorResetEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users that one or more factors have been reset for their account. Default is `true`.\n"
                },
                "sendEmailForNewDeviceEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users about new sign-on activity. Default is `true`.\n"
                },
                "sendEmailForPasswordChangedEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users that the password for their account has changed. Default is `true`.\n"
                }
            },
            "inputProperties": {
                "reportSuspiciousActivityEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users about suspicious or unrecognized activity from their account. Default is `true`.\n"
                },
                "sendEmailForFactorEnrollmentEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users of any activity on their account related to MFA factor enrollment. Default is `true`.\n"
                },
                "sendEmailForFactorResetEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users that one or more factors have been reset for their account. Default is `true`.\n"
                },
                "sendEmailForNewDeviceEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users about new sign-on activity. Default is `true`.\n"
                },
                "sendEmailForPasswordChangedEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users that the password for their account has changed. Default is `true`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurityNotificationEmails resources.\n",
                "properties": {
                    "reportSuspiciousActivityEnabled": {
                        "type": "boolean",
                        "description": "Notifies end users about suspicious or unrecognized activity from their account. Default is `true`.\n"
                    },
                    "sendEmailForFactorEnrollmentEnabled": {
                        "type": "boolean",
                        "description": "Notifies end users of any activity on their account related to MFA factor enrollment. Default is `true`.\n"
                    },
                    "sendEmailForFactorResetEnabled": {
                        "type": "boolean",
                        "description": "Notifies end users that one or more factors have been reset for their account. Default is `true`.\n"
                    },
                    "sendEmailForNewDeviceEnabled": {
                        "type": "boolean",
                        "description": "Notifies end users about new sign-on activity. Default is `true`.\n"
                    },
                    "sendEmailForPasswordChangedEnabled": {
                        "type": "boolean",
                        "description": "Notifies end users that the password for their account has changed. Default is `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/templateSms:TemplateSms": {
            "description": "Creates an Okta SMS Template.\n\nThis resource allows you to create and configure an Okta SMS Template.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.TemplateSms(\"example\", {\n    template: \"Your ${org.name} code is: ${code}\",\n    translations: [\n        {\n            language: \"en\",\n            template: \"Your ${org.name} code is: ${code}\",\n        },\n        {\n            language: \"es\",\n            template: \"Tu código de ${org.name} es: ${code}.\",\n        },\n    ],\n    type: \"SMS_VERIFY_CODE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.TemplateSms(\"example\",\n    template=\"Your ${org.name} code is: ${code}\",\n    translations=[\n        okta.TemplateSmsTranslationArgs(\n            language=\"en\",\n            template=\"Your ${org.name} code is: ${code}\",\n        ),\n        okta.TemplateSmsTranslationArgs(\n            language=\"es\",\n            template=\"Tu código de ${org.name} es: ${code}.\",\n        ),\n    ],\n    type=\"SMS_VERIFY_CODE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.TemplateSms(\"example\", new()\n    {\n        Template = \"Your ${org.name} code is: ${code}\",\n        Translations = new[]\n        {\n            new Okta.Inputs.TemplateSmsTranslationArgs\n            {\n                Language = \"en\",\n                Template = \"Your ${org.name} code is: ${code}\",\n            },\n            new Okta.Inputs.TemplateSmsTranslationArgs\n            {\n                Language = \"es\",\n                Template = \"Tu código de ${org.name} es: ${code}.\",\n            },\n        },\n        Type = \"SMS_VERIFY_CODE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewTemplateSms(ctx, \"example\", \u0026okta.TemplateSmsArgs{\n\t\t\tTemplate: pulumi.String(\"Your ${org.name} code is: ${code}\"),\n\t\t\tTranslations: okta.TemplateSmsTranslationArray{\n\t\t\t\t\u0026okta.TemplateSmsTranslationArgs{\n\t\t\t\t\tLanguage: pulumi.String(\"en\"),\n\t\t\t\t\tTemplate: pulumi.String(\"Your ${org.name} code is: ${code}\"),\n\t\t\t\t},\n\t\t\t\t\u0026okta.TemplateSmsTranslationArgs{\n\t\t\t\t\tLanguage: pulumi.String(\"es\"),\n\t\t\t\t\tTemplate: pulumi.String(\"Tu código de ${org.name} es: ${code}.\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tType: pulumi.String(\"SMS_VERIFY_CODE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.TemplateSms;\nimport com.pulumi.okta.TemplateSmsArgs;\nimport com.pulumi.okta.inputs.TemplateSmsTranslationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new TemplateSms(\"example\", TemplateSmsArgs.builder()        \n            .template(\"Your ${org.name} code is: ${code}\")\n            .translations(            \n                TemplateSmsTranslationArgs.builder()\n                    .language(\"en\")\n                    .template(\"Your ${org.name} code is: ${code}\")\n                    .build(),\n                TemplateSmsTranslationArgs.builder()\n                    .language(\"es\")\n                    .template(\"Tu código de ${org.name} es: ${code}.\")\n                    .build())\n            .type(\"SMS_VERIFY_CODE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:TemplateSms\n    properties:\n      template: 'Your ${org.name} code is: ${code}'\n      translations:\n        - language: en\n          template: 'Your ${org.name} code is: ${code}'\n        - language: es\n          template: 'Tu código de ${org.name} es: ${code}.'\n      type: SMS_VERIFY_CODE\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn Okta SMS Template can be imported via the template type.\n\n```sh\n $ pulumi import okta:index/templateSms:TemplateSms example \u0026#60;template type\u0026#62;\n```\n\n ",
            "properties": {
                "template": {
                    "type": "string",
                    "description": "The SMS message.\n"
                },
                "translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/TemplateSmsTranslation:TemplateSmsTranslation"
                    },
                    "description": "Set of translations for a particular template.\n"
                },
                "type": {
                    "type": "string",
                    "description": "SMS template type\n"
                }
            },
            "required": [
                "template",
                "type"
            ],
            "inputProperties": {
                "template": {
                    "type": "string",
                    "description": "The SMS message.\n"
                },
                "translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/TemplateSmsTranslation:TemplateSmsTranslation"
                    },
                    "description": "Set of translations for a particular template.\n"
                },
                "type": {
                    "type": "string",
                    "description": "SMS template type\n"
                }
            },
            "requiredInputs": [
                "template",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TemplateSms resources.\n",
                "properties": {
                    "template": {
                        "type": "string",
                        "description": "The SMS message.\n"
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/TemplateSmsTranslation:TemplateSmsTranslation"
                        },
                        "description": "Set of translations for a particular template.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "SMS template type\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/theme:Theme": {
            "description": "\n\n## Import\n\nAn Okta Brand can be imported via the ID.\n\n```sh\n $ pulumi import okta:index/theme:Theme example \u0026#60;brand id\u0026#62;/\u0026#60;theme id\u0026#62;\n```\n\n ",
            "properties": {
                "backgroundImage": {
                    "type": "string",
                    "description": "(Optional) Local path to background image file. Setting the value to the blank string `\"\"` will delete the favicon on the theme at Okta but will not delete the local file.\n"
                },
                "backgroundImageUrl": {
                    "type": "string",
                    "description": "(Read-Only) Background image URL\n"
                },
                "brandId": {
                    "type": "string",
                    "description": "Brand ID\n"
                },
                "emailTemplateTouchPointVariant": {
                    "type": "string",
                    "description": "(Required) Variant for email templates. Valid values: (`OKTA_DEFAULT`, `FULL_THEME`)\n"
                },
                "endUserDashboardTouchPointVariant": {
                    "type": "string",
                    "description": "(Required) Variant for the Okta End-User Dashboard. Valid values: (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)\n"
                },
                "errorPageTouchPointVariant": {
                    "type": "string",
                    "description": "(Required) Variant for the error page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n"
                },
                "favicon": {
                    "type": "string",
                    "description": "(Optional) Local path to favicon file. Setting the value to the blank string `\"\"` will delete the favicon on the theme at Okta but will not delete the local file.\n"
                },
                "faviconUrl": {
                    "type": "string",
                    "description": "(Read-Only) Favicon URL\n"
                },
                "links": {
                    "type": "string",
                    "description": "Link relations for this object - JSON HAL - (Read-Only) Discoverable resources related to the brand\n"
                },
                "logo": {
                    "type": "string",
                    "description": "(Optional) Local path to logo file. Setting the value to the blank string `\"\"` will delete the logo on the theme at Okta but will not delete the local file.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "(Read-Only) Logo URL\n"
                },
                "primaryColorContrastHex": {
                    "type": "string",
                    "description": "(Optional) Primary color contrast hex code\n"
                },
                "primaryColorHex": {
                    "type": "string",
                    "description": "(Required) Primary color hex code\n"
                },
                "secondaryColorContrastHex": {
                    "type": "string",
                    "description": "(Optional) Secondary color contrast hex code\n"
                },
                "secondaryColorHex": {
                    "type": "string",
                    "description": "(Required) Secondary color hex code\n"
                },
                "signInPageTouchPointVariant": {
                    "type": "string",
                    "description": "(Required) Variant for the Okta Sign-In Page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n"
                },
                "themeId": {
                    "type": "string",
                    "description": "Theme ID, used for read (faux-create)\n"
                }
            },
            "required": [
                "backgroundImageUrl",
                "brandId",
                "faviconUrl",
                "links",
                "logoUrl"
            ],
            "inputProperties": {
                "backgroundImage": {
                    "type": "string",
                    "description": "(Optional) Local path to background image file. Setting the value to the blank string `\"\"` will delete the favicon on the theme at Okta but will not delete the local file.\n"
                },
                "brandId": {
                    "type": "string",
                    "description": "Brand ID\n"
                },
                "emailTemplateTouchPointVariant": {
                    "type": "string",
                    "description": "(Required) Variant for email templates. Valid values: (`OKTA_DEFAULT`, `FULL_THEME`)\n"
                },
                "endUserDashboardTouchPointVariant": {
                    "type": "string",
                    "description": "(Required) Variant for the Okta End-User Dashboard. Valid values: (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)\n"
                },
                "errorPageTouchPointVariant": {
                    "type": "string",
                    "description": "(Required) Variant for the error page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n"
                },
                "favicon": {
                    "type": "string",
                    "description": "(Optional) Local path to favicon file. Setting the value to the blank string `\"\"` will delete the favicon on the theme at Okta but will not delete the local file.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "(Optional) Local path to logo file. Setting the value to the blank string `\"\"` will delete the logo on the theme at Okta but will not delete the local file.\n"
                },
                "primaryColorContrastHex": {
                    "type": "string",
                    "description": "(Optional) Primary color contrast hex code\n"
                },
                "primaryColorHex": {
                    "type": "string",
                    "description": "(Required) Primary color hex code\n"
                },
                "secondaryColorContrastHex": {
                    "type": "string",
                    "description": "(Optional) Secondary color contrast hex code\n"
                },
                "secondaryColorHex": {
                    "type": "string",
                    "description": "(Required) Secondary color hex code\n"
                },
                "signInPageTouchPointVariant": {
                    "type": "string",
                    "description": "(Required) Variant for the Okta Sign-In Page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n"
                },
                "themeId": {
                    "type": "string",
                    "description": "Theme ID, used for read (faux-create)\n"
                }
            },
            "requiredInputs": [
                "brandId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Theme resources.\n",
                "properties": {
                    "backgroundImage": {
                        "type": "string",
                        "description": "(Optional) Local path to background image file. Setting the value to the blank string `\"\"` will delete the favicon on the theme at Okta but will not delete the local file.\n"
                    },
                    "backgroundImageUrl": {
                        "type": "string",
                        "description": "(Read-Only) Background image URL\n"
                    },
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    },
                    "emailTemplateTouchPointVariant": {
                        "type": "string",
                        "description": "(Required) Variant for email templates. Valid values: (`OKTA_DEFAULT`, `FULL_THEME`)\n"
                    },
                    "endUserDashboardTouchPointVariant": {
                        "type": "string",
                        "description": "(Required) Variant for the Okta End-User Dashboard. Valid values: (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)\n"
                    },
                    "errorPageTouchPointVariant": {
                        "type": "string",
                        "description": "(Required) Variant for the error page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n"
                    },
                    "favicon": {
                        "type": "string",
                        "description": "(Optional) Local path to favicon file. Setting the value to the blank string `\"\"` will delete the favicon on the theme at Okta but will not delete the local file.\n"
                    },
                    "faviconUrl": {
                        "type": "string",
                        "description": "(Read-Only) Favicon URL\n"
                    },
                    "links": {
                        "type": "string",
                        "description": "Link relations for this object - JSON HAL - (Read-Only) Discoverable resources related to the brand\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "(Optional) Local path to logo file. Setting the value to the blank string `\"\"` will delete the logo on the theme at Okta but will not delete the local file.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "(Read-Only) Logo URL\n"
                    },
                    "primaryColorContrastHex": {
                        "type": "string",
                        "description": "(Optional) Primary color contrast hex code\n"
                    },
                    "primaryColorHex": {
                        "type": "string",
                        "description": "(Required) Primary color hex code\n"
                    },
                    "secondaryColorContrastHex": {
                        "type": "string",
                        "description": "(Optional) Secondary color contrast hex code\n"
                    },
                    "secondaryColorHex": {
                        "type": "string",
                        "description": "(Required) Secondary color hex code\n"
                    },
                    "signInPageTouchPointVariant": {
                        "type": "string",
                        "description": "(Required) Variant for the Okta Sign-In Page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n"
                    },
                    "themeId": {
                        "type": "string",
                        "description": "Theme ID, used for read (faux-create)\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/threatInsightSettings:ThreatInsightSettings": {
            "description": "This resource allows you to configure Threat Insight Settings.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst ipNetworkZoneExample = new okta.network.Zone(\"ipNetworkZoneExample\", {\n    type: \"IP\",\n    gateways: [\n        \"1.2.3.4/24\",\n        \"2.3.4.5-2.3.4.15\",\n    ],\n    proxies: [\n        \"2.2.3.4/24\",\n        \"3.3.4.5-3.3.4.15\",\n    ],\n});\nconst example = new okta.ThreatInsightSettings(\"example\", {\n    action: \"block\",\n    networkExcludes: [ipNetworkZoneExample.id],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nip_network_zone_example = okta.network.Zone(\"ipNetworkZoneExample\",\n    type=\"IP\",\n    gateways=[\n        \"1.2.3.4/24\",\n        \"2.3.4.5-2.3.4.15\",\n    ],\n    proxies=[\n        \"2.2.3.4/24\",\n        \"3.3.4.5-3.3.4.15\",\n    ])\nexample = okta.ThreatInsightSettings(\"example\",\n    action=\"block\",\n    network_excludes=[ip_network_zone_example.id])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ipNetworkZoneExample = new Okta.Network.Zone(\"ipNetworkZoneExample\", new()\n    {\n        Type = \"IP\",\n        Gateways = new[]\n        {\n            \"1.2.3.4/24\",\n            \"2.3.4.5-2.3.4.15\",\n        },\n        Proxies = new[]\n        {\n            \"2.2.3.4/24\",\n            \"3.3.4.5-3.3.4.15\",\n        },\n    });\n\n    var example = new Okta.ThreatInsightSettings(\"example\", new()\n    {\n        Action = \"block\",\n        NetworkExcludes = new[]\n        {\n            ipNetworkZoneExample.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/network\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tipNetworkZoneExample, err := network.NewZone(ctx, \"ipNetworkZoneExample\", \u0026network.ZoneArgs{\n\t\t\tType: pulumi.String(\"IP\"),\n\t\t\tGateways: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"1.2.3.4/24\"),\n\t\t\t\tpulumi.String(\"2.3.4.5-2.3.4.15\"),\n\t\t\t},\n\t\t\tProxies: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"2.2.3.4/24\"),\n\t\t\t\tpulumi.String(\"3.3.4.5-3.3.4.15\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewThreatInsightSettings(ctx, \"example\", \u0026okta.ThreatInsightSettingsArgs{\n\t\t\tAction: pulumi.String(\"block\"),\n\t\t\tNetworkExcludes: pulumi.StringArray{\n\t\t\t\tipNetworkZoneExample.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.network.Zone;\nimport com.pulumi.okta.network.ZoneArgs;\nimport com.pulumi.okta.ThreatInsightSettings;\nimport com.pulumi.okta.ThreatInsightSettingsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var ipNetworkZoneExample = new Zone(\"ipNetworkZoneExample\", ZoneArgs.builder()        \n            .type(\"IP\")\n            .gateways(            \n                \"1.2.3.4/24\",\n                \"2.3.4.5-2.3.4.15\")\n            .proxies(            \n                \"2.2.3.4/24\",\n                \"3.3.4.5-3.3.4.15\")\n            .build());\n\n        var example = new ThreatInsightSettings(\"example\", ThreatInsightSettingsArgs.builder()        \n            .action(\"block\")\n            .networkExcludes(ipNetworkZoneExample.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  ipNetworkZoneExample:\n    type: okta:network:Zone\n    properties:\n      type: IP\n      gateways:\n        - 1.2.3.4/24\n        - 2.3.4.5-2.3.4.15\n      proxies:\n        - 2.2.3.4/24\n        - 3.3.4.5-3.3.4.15\n  example:\n    type: okta:ThreatInsightSettings\n    properties:\n      action: block\n      networkExcludes:\n        - ${ipNetworkZoneExample.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThreat Insight Settings can be imported without any parameters.\n\n```sh\n $ pulumi import okta:index/threatInsightSettings:ThreatInsightSettings example _\n```\n\n ",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Specifies how Okta responds to authentication requests from suspicious IPs. Valid values \nare `\"none\"`, `\"audit\"`, or `\"block\"`. A value of `\"none\"` indicates that ThreatInsight is disabled. A value of `\"audit\"`\nindicates that Okta logs suspicious requests in the System Log. A value of `\"block\"` indicates that Okta logs suspicious\nrequests in the System Log and blocks the requests.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Accepts a list of Network Zone IDs. Can only accept zones of `\"IP\"` type. \nIPs in the excluded Network Zones aren't logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation.\nThis ensures that traffic from known, trusted IPs isn't accidentally logged or blocked. The ordering of the network zone\nis not guarantee from the API sides\n"
                }
            },
            "required": [
                "action"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Specifies how Okta responds to authentication requests from suspicious IPs. Valid values \nare `\"none\"`, `\"audit\"`, or `\"block\"`. A value of `\"none\"` indicates that ThreatInsight is disabled. A value of `\"audit\"`\nindicates that Okta logs suspicious requests in the System Log. A value of `\"block\"` indicates that Okta logs suspicious\nrequests in the System Log and blocks the requests.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Accepts a list of Network Zone IDs. Can only accept zones of `\"IP\"` type. \nIPs in the excluded Network Zones aren't logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation.\nThis ensures that traffic from known, trusted IPs isn't accidentally logged or blocked. The ordering of the network zone\nis not guarantee from the API sides\n"
                }
            },
            "requiredInputs": [
                "action"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ThreatInsightSettings resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Specifies how Okta responds to authentication requests from suspicious IPs. Valid values \nare `\"none\"`, `\"audit\"`, or `\"block\"`. A value of `\"none\"` indicates that ThreatInsight is disabled. A value of `\"audit\"`\nindicates that Okta logs suspicious requests in the System Log. A value of `\"block\"` indicates that Okta logs suspicious\nrequests in the System Log and blocks the requests.\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Accepts a list of Network Zone IDs. Can only accept zones of `\"IP\"` type. \nIPs in the excluded Network Zones aren't logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation.\nThis ensures that traffic from known, trusted IPs isn't accidentally logged or blocked. The ordering of the network zone\nis not guarantee from the API sides\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/userAdminRoles:UserAdminRoles": {
            "description": "Resource to manage a set of admin roles for a specific user.\n\nThis resource allows you to manage admin roles for a single user, independent of the user schema itself.\n\nWhen using this with a `okta.user.User` resource, you should add a lifecycle ignore for admin roles to avoid conflicts\nin desired state.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst testUser = new okta.user.User(\"testUser\", {\n    firstName: \"TestAcc\",\n    lastName: \"Smith\",\n    login: \"testAcc-replace_with_uuid@example.com\",\n    email: \"testAcc-replace_with_uuid@example.com\",\n});\nconst testUserAdminRoles = new okta.UserAdminRoles(\"testUserAdminRoles\", {\n    userId: testUser.id,\n    adminRoles: [\"APP_ADMIN\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest_user = okta.user.User(\"testUser\",\n    first_name=\"TestAcc\",\n    last_name=\"Smith\",\n    login=\"testAcc-replace_with_uuid@example.com\",\n    email=\"testAcc-replace_with_uuid@example.com\")\ntest_user_admin_roles = okta.UserAdminRoles(\"testUserAdminRoles\",\n    user_id=test_user.id,\n    admin_roles=[\"APP_ADMIN\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testUser = new Okta.User.User(\"testUser\", new()\n    {\n        FirstName = \"TestAcc\",\n        LastName = \"Smith\",\n        Login = \"testAcc-replace_with_uuid@example.com\",\n        Email = \"testAcc-replace_with_uuid@example.com\",\n    });\n\n    var testUserAdminRoles = new Okta.UserAdminRoles(\"testUserAdminRoles\", new()\n    {\n        UserId = testUser.Id,\n        AdminRoles = new[]\n        {\n            \"APP_ADMIN\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestUser, err := user.NewUser(ctx, \"testUser\", \u0026user.UserArgs{\n\t\t\tFirstName: pulumi.String(\"TestAcc\"),\n\t\t\tLastName:  pulumi.String(\"Smith\"),\n\t\t\tLogin:     pulumi.String(\"testAcc-replace_with_uuid@example.com\"),\n\t\t\tEmail:     pulumi.String(\"testAcc-replace_with_uuid@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewUserAdminRoles(ctx, \"testUserAdminRoles\", \u0026okta.UserAdminRolesArgs{\n\t\t\tUserId: testUser.ID(),\n\t\t\tAdminRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"APP_ADMIN\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.User;\nimport com.pulumi.okta.user.UserArgs;\nimport com.pulumi.okta.UserAdminRoles;\nimport com.pulumi.okta.UserAdminRolesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testUser = new User(\"testUser\", UserArgs.builder()        \n            .firstName(\"TestAcc\")\n            .lastName(\"Smith\")\n            .login(\"testAcc-replace_with_uuid@example.com\")\n            .email(\"testAcc-replace_with_uuid@example.com\")\n            .build());\n\n        var testUserAdminRoles = new UserAdminRoles(\"testUserAdminRoles\", UserAdminRolesArgs.builder()        \n            .userId(testUser.id())\n            .adminRoles(\"APP_ADMIN\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testUser:\n    type: okta:user:User\n    properties:\n      firstName: TestAcc\n      lastName: Smith\n      login: testAcc-replace_with_uuid@example.com\n      email: testAcc-replace_with_uuid@example.com\n  testUserAdminRoles:\n    type: okta:UserAdminRoles\n    properties:\n      userId: ${testUser.id}\n      adminRoles:\n        - APP_ADMIN\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nExisting user admin roles can be imported via the Okta User ID.\n\n```sh\n $ pulumi import okta:index/userAdminRoles:UserAdminRoles example \u0026#60;user id\u0026#62;\n```\n\n ",
            "properties": {
                "adminRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta user admin roles, e.g. `[\"APP_ADMIN\", \"USER_ADMIN\"]` See [API Docs](https://developer.okta.com/docs/reference/api/roles/#role-types).\n"
                },
                "disableNotifications": {
                    "type": "boolean",
                    "description": "When this setting is enabled, the admins won't receive any of the default Okta\nadministrator emails. These admins also won't have access to contact Okta Support and open support cases on behalf of your org.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "Okta user ID.\n"
                }
            },
            "required": [
                "adminRoles",
                "userId"
            ],
            "inputProperties": {
                "adminRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta user admin roles, e.g. `[\"APP_ADMIN\", \"USER_ADMIN\"]` See [API Docs](https://developer.okta.com/docs/reference/api/roles/#role-types).\n"
                },
                "disableNotifications": {
                    "type": "boolean",
                    "description": "When this setting is enabled, the admins won't receive any of the default Okta\nadministrator emails. These admins also won't have access to contact Okta Support and open support cases on behalf of your org.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "Okta user ID.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "adminRoles",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserAdminRoles resources.\n",
                "properties": {
                    "adminRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of Okta user admin roles, e.g. `[\"APP_ADMIN\", \"USER_ADMIN\"]` See [API Docs](https://developer.okta.com/docs/reference/api/roles/#role-types).\n"
                    },
                    "disableNotifications": {
                        "type": "boolean",
                        "description": "When this setting is enabled, the admins won't receive any of the default Okta\nadministrator emails. These admins also won't have access to contact Okta Support and open support cases on behalf of your org.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "Okta user ID.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/userBaseSchemaProperty:UserBaseSchemaProperty": {
            "description": "Manages a User Base Schema property.\n\nThis resource allows you to configure a base user schema property.\n\n## IMPORTANT NOTE: \n\nBased on the [official documentation](https://developer.okta.com/docs/reference/api/schemas/#user-profile-base-subschema)\nbase properties can not be modified, except to update permissions, to change the nullability of `firstName` and \n`lastName` (`required` property) or to specify a `pattern` for `login`. Currently, `title` and `type` are required, so\nthey should be set to the current values of the base property. This will be fixed in the future releases, as this is \na breaking change.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.UserBaseSchemaProperty(\"example\", {\n    index: \"firstName\",\n    master: \"OKTA\",\n    required: true,\n    title: \"First name\",\n    type: \"string\",\n    userType: data.okta_user_type.example.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.UserBaseSchemaProperty(\"example\",\n    index=\"firstName\",\n    master=\"OKTA\",\n    required=True,\n    title=\"First name\",\n    type=\"string\",\n    user_type=data[\"okta_user_type\"][\"example\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.UserBaseSchemaProperty(\"example\", new()\n    {\n        Index = \"firstName\",\n        Master = \"OKTA\",\n        Required = true,\n        Title = \"First name\",\n        Type = \"string\",\n        UserType = data.Okta_user_type.Example.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewUserBaseSchemaProperty(ctx, \"example\", \u0026okta.UserBaseSchemaPropertyArgs{\n\t\t\tIndex:    pulumi.String(\"firstName\"),\n\t\t\tMaster:   pulumi.String(\"OKTA\"),\n\t\t\tRequired: pulumi.Bool(true),\n\t\t\tTitle:    pulumi.String(\"First name\"),\n\t\t\tType:     pulumi.String(\"string\"),\n\t\t\tUserType: pulumi.Any(data.Okta_user_type.Example.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.UserBaseSchemaProperty;\nimport com.pulumi.okta.UserBaseSchemaPropertyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new UserBaseSchemaProperty(\"example\", UserBaseSchemaPropertyArgs.builder()        \n            .index(\"firstName\")\n            .master(\"OKTA\")\n            .required(true)\n            .title(\"First name\")\n            .type(\"string\")\n            .userType(data.okta_user_type().example().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:UserBaseSchemaProperty\n    properties:\n      index: firstName\n      master: OKTA\n      required: true\n      title: First name\n      type: string\n      userType: ${data.okta_user_type.example.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUser schema property of default user type can be imported via the property index.\n\n```sh\n $ pulumi import okta:index/userBaseSchemaProperty:UserBaseSchemaProperty example \u0026#60;property name\u0026#62;\n```\n\n User schema property of custom user type can be imported via user type id and property index\n\n```sh\n $ pulumi import okta:index/userBaseSchemaProperty:UserBaseSchemaProperty example \u0026#60;user type id\u0026#62;.\u0026#60;property name\u0026#62;\n```\n\n ",
            "properties": {
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The property display name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID.\n"
                }
            },
            "required": [
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "index": {
                    "type": "string",
                    "description": "The property name.\n",
                    "willReplaceOnChanges": true
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for this application's users.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The property display name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n",
                    "willReplaceOnChanges": true
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID.\n"
                }
            },
            "requiredInputs": [
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserBaseSchemaProperty resources.\n",
                "properties": {
                    "index": {
                        "type": "string",
                        "description": "The property name.\n",
                        "willReplaceOnChanges": true
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"` or `\"OKTA\"`.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The validation pattern to use for the subschema, only available for `login` property. Must be in form of `.+`, or `[\u003cpattern\u003e]+`.\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the property is required for this application's users.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The property display name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the schema property. It can be `\"string\"`, `\"boolean\"`, `\"number\"`, `\"integer\"`, `\"array\"`, or `\"object\"`.\n",
                        "willReplaceOnChanges": true
                    },
                    "userType": {
                        "type": "string",
                        "description": "User type ID.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/userFactorQuestion:UserFactorQuestion": {
            "description": "Creates security question factor for a user.\n\nThis resource allows you to create and configure security question factor for a user.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleUser = new okta.user.User(\"exampleUser\", {\n    firstName: \"John\",\n    lastName: \"Smith\",\n    login: \"john.smith@example.com\",\n    email: \"john.smith@example.com\",\n});\nconst exampleUserSecurityQuestions = okta.getUserSecurityQuestionsOutput({\n    userId: exampleUser.id,\n});\nconst exampleFactor = new okta.factor.Factor(\"exampleFactor\", {\n    providerId: \"okta_question\",\n    active: true,\n});\nconst exampleUserFactorQuestion = new okta.UserFactorQuestion(\"exampleUserFactorQuestion\", {\n    userId: exampleUser.id,\n    key: exampleUserSecurityQuestions.apply(exampleUserSecurityQuestions =\u003e exampleUserSecurityQuestions.questions?.[0]?.key),\n    answer: \"meatball\",\n}, {\n    dependsOn: [exampleFactor],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_user = okta.user.User(\"exampleUser\",\n    first_name=\"John\",\n    last_name=\"Smith\",\n    login=\"john.smith@example.com\",\n    email=\"john.smith@example.com\")\nexample_user_security_questions = okta.get_user_security_questions_output(user_id=example_user.id)\nexample_factor = okta.factor.Factor(\"exampleFactor\",\n    provider_id=\"okta_question\",\n    active=True)\nexample_user_factor_question = okta.UserFactorQuestion(\"exampleUserFactorQuestion\",\n    user_id=example_user.id,\n    key=example_user_security_questions.questions[0].key,\n    answer=\"meatball\",\n    opts=pulumi.ResourceOptions(depends_on=[example_factor]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleUser = new Okta.User.User(\"exampleUser\", new()\n    {\n        FirstName = \"John\",\n        LastName = \"Smith\",\n        Login = \"john.smith@example.com\",\n        Email = \"john.smith@example.com\",\n    });\n\n    var exampleUserSecurityQuestions = Okta.GetUserSecurityQuestions.Invoke(new()\n    {\n        UserId = exampleUser.Id,\n    });\n\n    var exampleFactor = new Okta.Factor.Factor(\"exampleFactor\", new()\n    {\n        ProviderId = \"okta_question\",\n        Active = true,\n    });\n\n    var exampleUserFactorQuestion = new Okta.UserFactorQuestion(\"exampleUserFactorQuestion\", new()\n    {\n        UserId = exampleUser.Id,\n        Key = exampleUserSecurityQuestions.Apply(getUserSecurityQuestionsResult =\u003e getUserSecurityQuestionsResult.Questions[0]?.Key),\n        Answer = \"meatball\",\n    }, new CustomResourceOptions\n    {\n        DependsOn = new[]\n        {\n            exampleFactor,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/factor\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleUser, err := user.NewUser(ctx, \"exampleUser\", \u0026user.UserArgs{\n\t\t\tFirstName: pulumi.String(\"John\"),\n\t\t\tLastName:  pulumi.String(\"Smith\"),\n\t\t\tLogin:     pulumi.String(\"john.smith@example.com\"),\n\t\t\tEmail:     pulumi.String(\"john.smith@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleUserSecurityQuestions := okta.GetUserSecurityQuestionsOutput(ctx, okta.GetUserSecurityQuestionsOutputArgs{\n\t\t\tUserId: exampleUser.ID(),\n\t\t}, nil)\n\t\texampleFactor, err := factor.NewFactor(ctx, \"exampleFactor\", \u0026factor.FactorArgs{\n\t\t\tProviderId: pulumi.String(\"okta_question\"),\n\t\t\tActive:     pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewUserFactorQuestion(ctx, \"exampleUserFactorQuestion\", \u0026okta.UserFactorQuestionArgs{\n\t\t\tUserId: exampleUser.ID(),\n\t\t\tKey: exampleUserSecurityQuestions.ApplyT(func(exampleUserSecurityQuestions okta.GetUserSecurityQuestionsResult) (*string, error) {\n\t\t\t\treturn \u0026exampleUserSecurityQuestions.Questions[0].Key, nil\n\t\t\t}).(pulumi.StringPtrOutput),\n\t\t\tAnswer: pulumi.String(\"meatball\"),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\texampleFactor,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.User;\nimport com.pulumi.okta.user.UserArgs;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetUserSecurityQuestionsArgs;\nimport com.pulumi.okta.factor.Factor;\nimport com.pulumi.okta.factor.FactorArgs;\nimport com.pulumi.okta.UserFactorQuestion;\nimport com.pulumi.okta.UserFactorQuestionArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleUser = new User(\"exampleUser\", UserArgs.builder()        \n            .firstName(\"John\")\n            .lastName(\"Smith\")\n            .login(\"john.smith@example.com\")\n            .email(\"john.smith@example.com\")\n            .build());\n\n        final var exampleUserSecurityQuestions = OktaFunctions.getUserSecurityQuestions(GetUserSecurityQuestionsArgs.builder()\n            .userId(exampleUser.id())\n            .build());\n\n        var exampleFactor = new Factor(\"exampleFactor\", FactorArgs.builder()        \n            .providerId(\"okta_question\")\n            .active(true)\n            .build());\n\n        var exampleUserFactorQuestion = new UserFactorQuestion(\"exampleUserFactorQuestion\", UserFactorQuestionArgs.builder()        \n            .userId(exampleUser.id())\n            .key(exampleUserSecurityQuestions.applyValue(getUserSecurityQuestionsResult -\u003e getUserSecurityQuestionsResult).applyValue(exampleUserSecurityQuestions -\u003e exampleUserSecurityQuestions.applyValue(getUserSecurityQuestionsResult -\u003e getUserSecurityQuestionsResult.questions()[0].key())))\n            .answer(\"meatball\")\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(exampleFactor)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleUser:\n    type: okta:user:User\n    properties:\n      firstName: John\n      lastName: Smith\n      login: john.smith@example.com\n      email: john.smith@example.com\n  exampleFactor:\n    type: okta:factor:Factor\n    properties:\n      providerId: okta_question\n      active: true\n  exampleUserFactorQuestion:\n    type: okta:UserFactorQuestion\n    properties:\n      userId: ${exampleUser.id}\n      key: ${exampleUserSecurityQuestions.questions[0].key}\n      answer: meatball\n    options:\n      dependson:\n        - ${exampleFactor}\nvariables:\n  exampleUserSecurityQuestions:\n    fn::invoke:\n      Function: okta:getUserSecurityQuestions\n      Arguments:\n        userId: ${exampleUser.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nSecurity question factor for a user can be imported via the `user_id` and the `factor_id`.\n\n```sh\n $ pulumi import okta:index/userFactorQuestion:UserFactorQuestion example \u0026#60;user id\u0026#62;/\u0026#60;question factor id\u0026#62;\n```\n\n ",
            "properties": {
                "answer": {
                    "type": "string",
                    "description": "Security question answer. Note here that answer won't be set during the resource import.\n",
                    "secret": true
                },
                "key": {
                    "type": "string",
                    "description": "Security question unique key.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the security question factor.\n"
                },
                "text": {
                    "type": "string",
                    "description": "Display text for security question.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user. Resource will be recreated when `user_id` changes.\n"
                }
            },
            "required": [
                "answer",
                "key",
                "status",
                "text",
                "userId"
            ],
            "inputProperties": {
                "answer": {
                    "type": "string",
                    "description": "Security question answer. Note here that answer won't be set during the resource import.\n",
                    "secret": true
                },
                "key": {
                    "type": "string",
                    "description": "Security question unique key.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user. Resource will be recreated when `user_id` changes.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "answer",
                "key",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserFactorQuestion resources.\n",
                "properties": {
                    "answer": {
                        "type": "string",
                        "description": "Security question answer. Note here that answer won't be set during the resource import.\n",
                        "secret": true
                    },
                    "key": {
                        "type": "string",
                        "description": "Security question unique key.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the security question factor.\n"
                    },
                    "text": {
                        "type": "string",
                        "description": "Display text for security question.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of the user. Resource will be recreated when `user_id` changes.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/userGroupMemberships:UserGroupMemberships": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst testUser = new okta.user.User(\"testUser\", {\n    firstName: \"TestAcc\",\n    lastName: \"Smith\",\n    login: \"testAcc-replace_with_uuid@example.com\",\n    email: \"testAcc-replace_with_uuid@example.com\",\n});\nconst testUserGroupMemberships = new okta.UserGroupMemberships(\"testUserGroupMemberships\", {\n    userId: testUser.id,\n    groups: [\n        okta_group.test_1.id,\n        okta_group.test_2.id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest_user = okta.user.User(\"testUser\",\n    first_name=\"TestAcc\",\n    last_name=\"Smith\",\n    login=\"testAcc-replace_with_uuid@example.com\",\n    email=\"testAcc-replace_with_uuid@example.com\")\ntest_user_group_memberships = okta.UserGroupMemberships(\"testUserGroupMemberships\",\n    user_id=test_user.id,\n    groups=[\n        okta_group[\"test_1\"][\"id\"],\n        okta_group[\"test_2\"][\"id\"],\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testUser = new Okta.User.User(\"testUser\", new()\n    {\n        FirstName = \"TestAcc\",\n        LastName = \"Smith\",\n        Login = \"testAcc-replace_with_uuid@example.com\",\n        Email = \"testAcc-replace_with_uuid@example.com\",\n    });\n\n    var testUserGroupMemberships = new Okta.UserGroupMemberships(\"testUserGroupMemberships\", new()\n    {\n        UserId = testUser.Id,\n        Groups = new[]\n        {\n            okta_group.Test_1.Id,\n            okta_group.Test_2.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestUser, err := user.NewUser(ctx, \"testUser\", \u0026user.UserArgs{\n\t\t\tFirstName: pulumi.String(\"TestAcc\"),\n\t\t\tLastName:  pulumi.String(\"Smith\"),\n\t\t\tLogin:     pulumi.String(\"testAcc-replace_with_uuid@example.com\"),\n\t\t\tEmail:     pulumi.String(\"testAcc-replace_with_uuid@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewUserGroupMemberships(ctx, \"testUserGroupMemberships\", \u0026okta.UserGroupMembershipsArgs{\n\t\t\tUserId: testUser.ID(),\n\t\t\tGroups: pulumi.StringArray{\n\t\t\t\tokta_group.Test_1.Id,\n\t\t\t\tokta_group.Test_2.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.User;\nimport com.pulumi.okta.user.UserArgs;\nimport com.pulumi.okta.UserGroupMemberships;\nimport com.pulumi.okta.UserGroupMembershipsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testUser = new User(\"testUser\", UserArgs.builder()        \n            .firstName(\"TestAcc\")\n            .lastName(\"Smith\")\n            .login(\"testAcc-replace_with_uuid@example.com\")\n            .email(\"testAcc-replace_with_uuid@example.com\")\n            .build());\n\n        var testUserGroupMemberships = new UserGroupMemberships(\"testUserGroupMemberships\", UserGroupMembershipsArgs.builder()        \n            .userId(testUser.id())\n            .groups(            \n                okta_group.test_1().id(),\n                okta_group.test_2().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testUser:\n    type: okta:user:User\n    properties:\n      firstName: TestAcc\n      lastName: Smith\n      login: testAcc-replace_with_uuid@example.com\n      email: testAcc-replace_with_uuid@example.com\n  testUserGroupMemberships:\n    type: okta:UserGroupMemberships\n    properties:\n      userId: ${testUser.id}\n      groups:\n        - ${okta_group.test_1.id}\n        - ${okta_group.test_2.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta group IDs which the user should have membership managed for.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "Okta user ID.\n"
                }
            },
            "required": [
                "groups",
                "userId"
            ],
            "inputProperties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta group IDs which the user should have membership managed for.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "Okta user ID.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "groups",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserGroupMemberships resources.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of Okta group IDs which the user should have membership managed for.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "Okta user ID.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/userSchemaProperty:UserSchemaProperty": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.UserSchemaProperty(\"example\", {\n    description: \"My custom property name\",\n    index: \"customPropertyName\",\n    master: \"OKTA\",\n    scope: \"SELF\",\n    title: \"customPropertyName\",\n    type: \"string\",\n    userType: data.okta_user_type.example.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.UserSchemaProperty(\"example\",\n    description=\"My custom property name\",\n    index=\"customPropertyName\",\n    master=\"OKTA\",\n    scope=\"SELF\",\n    title=\"customPropertyName\",\n    type=\"string\",\n    user_type=data[\"okta_user_type\"][\"example\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.UserSchemaProperty(\"example\", new()\n    {\n        Description = \"My custom property name\",\n        Index = \"customPropertyName\",\n        Master = \"OKTA\",\n        Scope = \"SELF\",\n        Title = \"customPropertyName\",\n        Type = \"string\",\n        UserType = data.Okta_user_type.Example.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewUserSchemaProperty(ctx, \"example\", \u0026okta.UserSchemaPropertyArgs{\n\t\t\tDescription: pulumi.String(\"My custom property name\"),\n\t\t\tIndex:       pulumi.String(\"customPropertyName\"),\n\t\t\tMaster:      pulumi.String(\"OKTA\"),\n\t\t\tScope:       pulumi.String(\"SELF\"),\n\t\t\tTitle:       pulumi.String(\"customPropertyName\"),\n\t\t\tType:        pulumi.String(\"string\"),\n\t\t\tUserType:    pulumi.Any(data.Okta_user_type.Example.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.UserSchemaProperty;\nimport com.pulumi.okta.UserSchemaPropertyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new UserSchemaProperty(\"example\", UserSchemaPropertyArgs.builder()        \n            .description(\"My custom property name\")\n            .index(\"customPropertyName\")\n            .master(\"OKTA\")\n            .scope(\"SELF\")\n            .title(\"customPropertyName\")\n            .type(\"string\")\n            .userType(data.okta_user_type().example().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:UserSchemaProperty\n    properties:\n      description: My custom property name\n      index: customPropertyName\n      master: OKTA\n      scope: SELF\n      title: customPropertyName\n      type: string\n      userType: ${data.okta_user_type.example.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUser schema property of default user type can be imported via the property variableName.\n\n```sh\n $ pulumi import okta:index/userSchemaProperty:UserSchemaProperty example \u0026#60;variableName\u0026#62;\n```\n\n User schema property of custom user type can be imported via user type id and property index\n\n```sh\n $ pulumi import okta:index/userSchemaProperty:UserSchemaProperty example \u0026#60;user type id\u0026#62;.\u0026#60;index\u0026#62;\n```\n\n ",
            "properties": {
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyArrayOneOf:UserSchemaPropertyArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `\"array\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"`, `\"OVERRIDE\"` or `\"OKTA\"`.\n"
                },
                "masterOverridePriorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyMasterOverridePriority:UserSchemaPropertyMasterOverridePriority"
                    },
                    "description": "Prioritized list of profile sources (required when `master` is `\"OVERRIDE\"`).\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyOneOf:UserSchemaPropertyOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for these users.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of profile source.\n"
                },
                "unique": {
                    "type": "string",
                    "description": "Whether the property should be unique. It can be set to `\"UNIQUE_VALIDATED\"` or `\"NOT_UNIQUE\"`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID\n"
                }
            },
            "required": [
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyArrayOneOf:UserSchemaPropertyArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `\"array\"`.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n",
                    "willReplaceOnChanges": true
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External name of the user schema property.\n",
                    "willReplaceOnChanges": true
                },
                "index": {
                    "type": "string",
                    "description": "The property name.\n",
                    "willReplaceOnChanges": true
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"`, `\"OVERRIDE\"` or `\"OKTA\"`.\n"
                },
                "masterOverridePriorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyMasterOverridePriority:UserSchemaPropertyMasterOverridePriority"
                    },
                    "description": "Prioritized list of profile sources (required when `master` is `\"OVERRIDE\"`).\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyOneOf:UserSchemaPropertyOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required for these users.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                },
                "title": {
                    "type": "string",
                    "description": "display name for the enum value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of profile source.\n",
                    "willReplaceOnChanges": true
                },
                "unique": {
                    "type": "string",
                    "description": "Whether the property should be unique. It can be set to `\"UNIQUE_VALIDATED\"` or `\"NOT_UNIQUE\"`.\n",
                    "willReplaceOnChanges": true
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID\n"
                }
            },
            "requiredInputs": [
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserSchemaProperty resources.\n",
                "properties": {
                    "arrayEnums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values that an array property's items can be set to.\n"
                    },
                    "arrayOneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/UserSchemaPropertyArrayOneOf:UserSchemaPropertyArrayOneOf"
                        },
                        "description": "Display name and value an enum array can be set to.\n"
                    },
                    "arrayType": {
                        "type": "string",
                        "description": "The type of the array elements if `type` is set to `\"array\"`.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the user schema property.\n"
                    },
                    "enums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                    },
                    "externalName": {
                        "type": "string",
                        "description": "External name of the user schema property.\n",
                        "willReplaceOnChanges": true
                    },
                    "externalNamespace": {
                        "type": "string",
                        "description": "External name of the user schema property.\n",
                        "willReplaceOnChanges": true
                    },
                    "index": {
                        "type": "string",
                        "description": "The property name.\n",
                        "willReplaceOnChanges": true
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the user schema property. It can be set to `\"PROFILE_MASTER\"`, `\"OVERRIDE\"` or `\"OKTA\"`.\n"
                    },
                    "masterOverridePriorities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/UserSchemaPropertyMasterOverridePriority:UserSchemaPropertyMasterOverridePriority"
                        },
                        "description": "Prioritized list of profile sources (required when `master` is `\"OVERRIDE\"`).\n"
                    },
                    "maxLength": {
                        "type": "integer",
                        "description": "The maximum length of the user property value. Only applies to type `\"string\"`.\n"
                    },
                    "minLength": {
                        "type": "integer",
                        "description": "The minimum length of the user property value. Only applies to type `\"string\"`.\n"
                    },
                    "oneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/UserSchemaPropertyOneOf:UserSchemaPropertyOneOf"
                        },
                        "description": "Array of maps containing a mapping for display name to enum value.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `\"READ_WRITE\"`, `\"READ_ONLY\"`, `\"HIDE\"`.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the property is required for these users.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "determines whether an app user attribute can be set at the Individual or Group Level.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "display name for the enum value.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of profile source.\n",
                        "willReplaceOnChanges": true
                    },
                    "unique": {
                        "type": "string",
                        "description": "Whether the property should be unique. It can be set to `\"UNIQUE_VALIDATED\"` or `\"NOT_UNIQUE\"`.\n",
                        "willReplaceOnChanges": true
                    },
                    "userType": {
                        "type": "string",
                        "description": "User type ID\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:inline/hook:Hook": {
            "description": "Creates an inline hook.\n\nThis resource allows you to create and configure an inline hook.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.inline.Hook(\"example\", {\n    auth: {\n        key: \"Authorization\",\n        type: \"HEADER\",\n        value: \"secret\",\n    },\n    channel: {\n        method: \"POST\",\n        uri: \"https://example.com/test\",\n        version: \"1.0.0\",\n    },\n    type: \"com.okta.oauth2.tokens.transform\",\n    version: \"1.0.0\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.inline.Hook(\"example\",\n    auth={\n        \"key\": \"Authorization\",\n        \"type\": \"HEADER\",\n        \"value\": \"secret\",\n    },\n    channel={\n        \"method\": \"POST\",\n        \"uri\": \"https://example.com/test\",\n        \"version\": \"1.0.0\",\n    },\n    type=\"com.okta.oauth2.tokens.transform\",\n    version=\"1.0.0\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Inline.Hook(\"example\", new()\n    {\n        Auth = \n        {\n            { \"key\", \"Authorization\" },\n            { \"type\", \"HEADER\" },\n            { \"value\", \"secret\" },\n        },\n        Channel = \n        {\n            { \"method\", \"POST\" },\n            { \"uri\", \"https://example.com/test\" },\n            { \"version\", \"1.0.0\" },\n        },\n        Type = \"com.okta.oauth2.tokens.transform\",\n        Version = \"1.0.0\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/inline\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := inline.NewHook(ctx, \"example\", \u0026inline.HookArgs{\n\t\t\tAuth: pulumi.StringMap{\n\t\t\t\t\"key\":   pulumi.String(\"Authorization\"),\n\t\t\t\t\"type\":  pulumi.String(\"HEADER\"),\n\t\t\t\t\"value\": pulumi.String(\"secret\"),\n\t\t\t},\n\t\t\tChannel: pulumi.StringMap{\n\t\t\t\t\"method\":  pulumi.String(\"POST\"),\n\t\t\t\t\"uri\":     pulumi.String(\"https://example.com/test\"),\n\t\t\t\t\"version\": pulumi.String(\"1.0.0\"),\n\t\t\t},\n\t\t\tType:    pulumi.String(\"com.okta.oauth2.tokens.transform\"),\n\t\t\tVersion: pulumi.String(\"1.0.0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.inline.Hook;\nimport com.pulumi.okta.inline.HookArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Hook(\"example\", HookArgs.builder()        \n            .auth(Map.ofEntries(\n                Map.entry(\"key\", \"Authorization\"),\n                Map.entry(\"type\", \"HEADER\"),\n                Map.entry(\"value\", \"secret\")\n            ))\n            .channel(Map.ofEntries(\n                Map.entry(\"method\", \"POST\"),\n                Map.entry(\"uri\", \"https://example.com/test\"),\n                Map.entry(\"version\", \"1.0.0\")\n            ))\n            .type(\"com.okta.oauth2.tokens.transform\")\n            .version(\"1.0.0\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:inline:Hook\n    properties:\n      auth:\n        key: Authorization\n        type: HEADER\n        value: secret\n      channel:\n        method: POST\n        uri: https://example.com/test\n        version: 1.0.0\n      type: com.okta.oauth2.tokens.transform\n      version: 1.0.0\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn inline hook can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:inline/hook:Hook example \u0026#60;hook id\u0026#62;\n```\n\n ",
            "properties": {
                "auth": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Authentication required for inline hook request.\n"
                },
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Details of the endpoint the inline hook will hit.\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:inline/HookHeader:HookHeader"
                    },
                    "description": "Map of headers to send along in inline hook request.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The inline hook display name.\n"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The type of hook to trigger. Currently, the only supported type is `\"HTTP\"`.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the channel. The currently-supported version is `\"1.0.0\"`.\n"
                }
            },
            "required": [
                "channel",
                "name",
                "type",
                "version"
            ],
            "inputProperties": {
                "auth": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Authentication required for inline hook request.\n"
                },
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Details of the endpoint the inline hook will hit.\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:inline/HookHeader:HookHeader"
                    },
                    "description": "Map of headers to send along in inline hook request.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The inline hook display name.\n"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The type of hook to trigger. Currently, the only supported type is `\"HTTP\"`.\n",
                    "willReplaceOnChanges": true
                },
                "version": {
                    "type": "string",
                    "description": "Version of the channel. The currently-supported version is `\"1.0.0\"`.\n"
                }
            },
            "requiredInputs": [
                "channel",
                "type",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Hook resources.\n",
                "properties": {
                    "auth": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Authentication required for inline hook request.\n"
                    },
                    "channel": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Details of the endpoint the inline hook will hit.\n"
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:inline/HookHeader:HookHeader"
                        },
                        "description": "Map of headers to send along in inline hook request.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The inline hook display name.\n"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of hook to trigger. Currently, the only supported type is `\"HTTP\"`.\n",
                        "willReplaceOnChanges": true
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of the channel. The currently-supported version is `\"1.0.0\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:network/zone:Zone": {
            "description": "Creates an Okta Network Zone.\n\nThis resource allows you to create and configure an Okta Network Zone.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.network.Zone(\"example\", {\n    gateways: [\n        \"1.2.3.4/24\",\n        \"2.3.4.5-2.3.4.15\",\n    ],\n    proxies: [\n        \"2.2.3.4/24\",\n        \"3.3.4.5-3.3.4.15\",\n    ],\n    type: \"IP\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.network.Zone(\"example\",\n    gateways=[\n        \"1.2.3.4/24\",\n        \"2.3.4.5-2.3.4.15\",\n    ],\n    proxies=[\n        \"2.2.3.4/24\",\n        \"3.3.4.5-3.3.4.15\",\n    ],\n    type=\"IP\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Network.Zone(\"example\", new()\n    {\n        Gateways = new[]\n        {\n            \"1.2.3.4/24\",\n            \"2.3.4.5-2.3.4.15\",\n        },\n        Proxies = new[]\n        {\n            \"2.2.3.4/24\",\n            \"3.3.4.5-3.3.4.15\",\n        },\n        Type = \"IP\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/network\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := network.NewZone(ctx, \"example\", \u0026network.ZoneArgs{\n\t\t\tGateways: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"1.2.3.4/24\"),\n\t\t\t\tpulumi.String(\"2.3.4.5-2.3.4.15\"),\n\t\t\t},\n\t\t\tProxies: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"2.2.3.4/24\"),\n\t\t\t\tpulumi.String(\"3.3.4.5-3.3.4.15\"),\n\t\t\t},\n\t\t\tType: pulumi.String(\"IP\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.network.Zone;\nimport com.pulumi.okta.network.ZoneArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Zone(\"example\", ZoneArgs.builder()        \n            .gateways(            \n                \"1.2.3.4/24\",\n                \"2.3.4.5-2.3.4.15\")\n            .proxies(            \n                \"2.2.3.4/24\",\n                \"3.3.4.5-3.3.4.15\")\n            .type(\"IP\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:network:Zone\n    properties:\n      gateways:\n        - 1.2.3.4/24\n        - 2.3.4.5-2.3.4.15\n      proxies:\n        - 2.2.3.4/24\n        - 3.3.4.5-3.3.4.15\n      type: IP\n```\n{{% /example %}}\n{{% example %}}\n### Dynamic Tor Blocker\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.network.Zone(\"example\", {\n    dynamicProxyType: \"TorAnonymizer\",\n    type: \"DYNAMIC\",\n    usage: \"BLOCKLIST\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.network.Zone(\"example\",\n    dynamic_proxy_type=\"TorAnonymizer\",\n    type=\"DYNAMIC\",\n    usage=\"BLOCKLIST\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Network.Zone(\"example\", new()\n    {\n        DynamicProxyType = \"TorAnonymizer\",\n        Type = \"DYNAMIC\",\n        Usage = \"BLOCKLIST\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/network\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := network.NewZone(ctx, \"example\", \u0026network.ZoneArgs{\n\t\t\tDynamicProxyType: pulumi.String(\"TorAnonymizer\"),\n\t\t\tType:             pulumi.String(\"DYNAMIC\"),\n\t\t\tUsage:            pulumi.String(\"BLOCKLIST\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.network.Zone;\nimport com.pulumi.okta.network.ZoneArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Zone(\"example\", ZoneArgs.builder()        \n            .dynamicProxyType(\"TorAnonymizer\")\n            .type(\"DYNAMIC\")\n            .usage(\"BLOCKLIST\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:network:Zone\n    properties:\n      dynamicProxyType: TorAnonymizer\n      type: DYNAMIC\n      usage: BLOCKLIST\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOkta Network Zone can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:network/zone:Zone example \u0026#60;zone id\u0026#62;\n```\n\n ",
            "properties": {
                "asns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of Autonomous System Numbers (each element is a string representation of an ASN numeric value).\n"
                },
                "dynamicLocations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of locations [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\nand [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2). Format code: countryCode OR countryCode-regionCode.\n"
                },
                "dynamicProxyType": {
                    "type": "string",
                    "description": "Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or `NotTorAnonymizer`.\n"
                },
                "gateways": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values in CIDR/range form.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Network Zone Resource.\n"
                },
                "proxies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values in CIDR/range form. Can not be set if `usage` is set to `\"BLOCKLIST\"`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the Network Zone - can either be `\"IP\"` or `\"DYNAMIC\"` only.\n"
                },
                "usage": {
                    "type": "string",
                    "description": "Usage of the Network Zone - can be either `\"POLICY\"` or `\"BLOCKLIST\"`. By default, it is `\"POLICY\"`.\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "asns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of Autonomous System Numbers (each element is a string representation of an ASN numeric value).\n"
                },
                "dynamicLocations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of locations [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\nand [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2). Format code: countryCode OR countryCode-regionCode.\n"
                },
                "dynamicProxyType": {
                    "type": "string",
                    "description": "Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or `NotTorAnonymizer`.\n"
                },
                "gateways": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values in CIDR/range form.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Network Zone Resource.\n"
                },
                "proxies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values in CIDR/range form. Can not be set if `usage` is set to `\"BLOCKLIST\"`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the Network Zone - can either be `\"IP\"` or `\"DYNAMIC\"` only.\n"
                },
                "usage": {
                    "type": "string",
                    "description": "Usage of the Network Zone - can be either `\"POLICY\"` or `\"BLOCKLIST\"`. By default, it is `\"POLICY\"`.\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Zone resources.\n",
                "properties": {
                    "asns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of Autonomous System Numbers (each element is a string representation of an ASN numeric value).\n"
                    },
                    "dynamicLocations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of locations [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\nand [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2). Format code: countryCode OR countryCode-regionCode.\n"
                    },
                    "dynamicProxyType": {
                        "type": "string",
                        "description": "Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or `NotTorAnonymizer`.\n"
                    },
                    "gateways": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values in CIDR/range form.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Network Zone Resource.\n"
                    },
                    "proxies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values in CIDR/range form. Can not be set if `usage` is set to `\"BLOCKLIST\"`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the Network Zone - can either be `\"IP\"` or `\"DYNAMIC\"` only.\n"
                    },
                    "usage": {
                        "type": "string",
                        "description": "Usage of the Network Zone - can be either `\"POLICY\"` or `\"BLOCKLIST\"`. By default, it is `\"POLICY\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/mfa:Mfa": {
            "description": "Creates an MFA Policy.\n\nThis resource allows you to create and configure an MFA Policy.\n\n\u003e Requires Org Feature Flag `OKTA_MFA_POLICY`. Contact support to have this feature flag ***enabled***.\n\n\u003e Unless Org Feature Flag `ENG_ENABLE_OPTIONAL_PASSWORD_ENROLLMENT` is ***disabled*** `okta_password` or `okta_email` must be present and its `enroll` value set to `REQUIRED`. Contact support to have this feature flag ***disabled***.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst classicExample = new okta.policy.Mfa(\"classicExample\", {\n    description: \"Example MFA policy using Okta Classic engine with factors.\",\n    groupsIncludeds: [data.okta_group.everyone.id],\n    isOie: false,\n    oktaOtp: {\n        enroll: \"REQUIRED\",\n    },\n    oktaPassword: {\n        enroll: \"REQUIRED\",\n    },\n    status: \"ACTIVE\",\n});\nconst oieExample = new okta.policy.Mfa(\"oieExample\", {\n    description: \"Example MFA policy that uses Okta Identity Engine (OIE) with authenticators\",\n    groupsIncludeds: [data.okta_group.everyone.id],\n    isOie: true,\n    oktaPassword: {\n        enroll: \"REQUIRED\",\n    },\n    oktaVerify: {\n        enroll: \"REQUIRED\",\n    },\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nclassic_example = okta.policy.Mfa(\"classicExample\",\n    description=\"Example MFA policy using Okta Classic engine with factors.\",\n    groups_includeds=[data[\"okta_group\"][\"everyone\"][\"id\"]],\n    is_oie=False,\n    okta_otp={\n        \"enroll\": \"REQUIRED\",\n    },\n    okta_password={\n        \"enroll\": \"REQUIRED\",\n    },\n    status=\"ACTIVE\")\noie_example = okta.policy.Mfa(\"oieExample\",\n    description=\"Example MFA policy that uses Okta Identity Engine (OIE) with authenticators\",\n    groups_includeds=[data[\"okta_group\"][\"everyone\"][\"id\"]],\n    is_oie=True,\n    okta_password={\n        \"enroll\": \"REQUIRED\",\n    },\n    okta_verify={\n        \"enroll\": \"REQUIRED\",\n    },\n    status=\"ACTIVE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var classicExample = new Okta.Policy.Mfa(\"classicExample\", new()\n    {\n        Description = \"Example MFA policy using Okta Classic engine with factors.\",\n        GroupsIncludeds = new[]\n        {\n            data.Okta_group.Everyone.Id,\n        },\n        IsOie = false,\n        OktaOtp = \n        {\n            { \"enroll\", \"REQUIRED\" },\n        },\n        OktaPassword = \n        {\n            { \"enroll\", \"REQUIRED\" },\n        },\n        Status = \"ACTIVE\",\n    });\n\n    var oieExample = new Okta.Policy.Mfa(\"oieExample\", new()\n    {\n        Description = \"Example MFA policy that uses Okta Identity Engine (OIE) with authenticators\",\n        GroupsIncludeds = new[]\n        {\n            data.Okta_group.Everyone.Id,\n        },\n        IsOie = true,\n        OktaPassword = \n        {\n            { \"enroll\", \"REQUIRED\" },\n        },\n        OktaVerify = \n        {\n            { \"enroll\", \"REQUIRED\" },\n        },\n        Status = \"ACTIVE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.NewMfa(ctx, \"classicExample\", \u0026policy.MfaArgs{\n\t\t\tDescription: pulumi.String(\"Example MFA policy using Okta Classic engine with factors.\"),\n\t\t\tGroupsIncludeds: pulumi.StringArray{\n\t\t\t\tdata.Okta_group.Everyone.Id,\n\t\t\t},\n\t\t\tIsOie: pulumi.Bool(false),\n\t\t\tOktaOtp: pulumi.StringMap{\n\t\t\t\t\"enroll\": pulumi.String(\"REQUIRED\"),\n\t\t\t},\n\t\t\tOktaPassword: pulumi.StringMap{\n\t\t\t\t\"enroll\": pulumi.String(\"REQUIRED\"),\n\t\t\t},\n\t\t\tStatus: pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = policy.NewMfa(ctx, \"oieExample\", \u0026policy.MfaArgs{\n\t\t\tDescription: pulumi.String(\"Example MFA policy that uses Okta Identity Engine (OIE) with authenticators\"),\n\t\t\tGroupsIncludeds: pulumi.StringArray{\n\t\t\t\tdata.Okta_group.Everyone.Id,\n\t\t\t},\n\t\t\tIsOie: pulumi.Bool(true),\n\t\t\tOktaPassword: pulumi.StringMap{\n\t\t\t\t\"enroll\": pulumi.String(\"REQUIRED\"),\n\t\t\t},\n\t\t\tOktaVerify: pulumi.StringMap{\n\t\t\t\t\"enroll\": pulumi.String(\"REQUIRED\"),\n\t\t\t},\n\t\t\tStatus: pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.Mfa;\nimport com.pulumi.okta.policy.MfaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var classicExample = new Mfa(\"classicExample\", MfaArgs.builder()        \n            .description(\"Example MFA policy using Okta Classic engine with factors.\")\n            .groupsIncludeds(data.okta_group().everyone().id())\n            .isOie(false)\n            .oktaOtp(Map.of(\"enroll\", \"REQUIRED\"))\n            .oktaPassword(Map.of(\"enroll\", \"REQUIRED\"))\n            .status(\"ACTIVE\")\n            .build());\n\n        var oieExample = new Mfa(\"oieExample\", MfaArgs.builder()        \n            .description(\"Example MFA policy that uses Okta Identity Engine (OIE) with authenticators\")\n            .groupsIncludeds(data.okta_group().everyone().id())\n            .isOie(true)\n            .oktaPassword(Map.of(\"enroll\", \"REQUIRED\"))\n            .oktaVerify(Map.of(\"enroll\", \"REQUIRED\"))\n            .status(\"ACTIVE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  classicExample:\n    type: okta:policy:Mfa\n    properties:\n      description: Example MFA policy using Okta Classic engine with factors.\n      groupsIncludeds:\n        - ${data.okta_group.everyone.id}\n      isOie: false\n      oktaOtp:\n        enroll: REQUIRED\n      oktaPassword:\n        enroll: REQUIRED\n      status: ACTIVE\n  oieExample:\n    type: okta:policy:Mfa\n    properties:\n      description: Example MFA policy that uses Okta Identity Engine (OIE) with authenticators\n      groupsIncludeds:\n        - ${data.okta_group.everyone.id}\n      isOie: true\n      oktaPassword:\n        enroll: REQUIRED\n      # The following authenticator can only be used when `is_oie` is set to true\n      oktaVerify:\n        enroll: REQUIRED\n      status: ACTIVE\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn MFA Policy can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:policy/mfa:Mfa example \u0026#60;policy id\u0026#62;\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Policy Description.\n"
                },
                "duo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "DUO MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "externalIdp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "External IDP MFA policy settings (✓ OIE).\n"
                },
                "fidoU2f": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Fido U2F MFA policy settings (✓ Classic).\n"
                },
                "fidoWebauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Fido Web Authn MFA policy settings (✓ Classic).\n"
                },
                "googleOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Google OTP MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include.\n"
                },
                "hotp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "HMAC-based One-Time Password MFA policy settings (✓ Classic).\n"
                },
                "isOie": {
                    "type": "boolean",
                    "description": "Boolean that specifies whether to use the newer Okta Identity Engine (OIE) with policy authenticators instead of the classic engine with Factors. This value determines which of the following policy factor settings can be configured. (Default = `false`)\n\u003e **WARNING:** Tenant must have the Okta Identity Engine enabled in order to use this feature.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name.\n"
                },
                "oktaCall": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Call MFA policy settings (✓ Classic).\n"
                },
                "oktaEmail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Email MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "oktaOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta OTP (via the Okta Verify app) MFA policy settings (✓ Classic).\n"
                },
                "oktaPassword": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Password MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "oktaPush": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Push MFA policy settings (✓ Classic).\n"
                },
                "oktaQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Question MFA policy settings (✓ Classic).\n"
                },
                "oktaSms": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta SMS MFA policy settings (✓ Classic).\n"
                },
                "oktaVerify": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Verify MFA policy settings (✓ OIE).\n"
                },
                "onpremMfa": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "On-Prem MFA MFA policy settings (✓ OIE).\n"
                },
                "phoneNumber": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Phone Number MFA policy settings (✓ OIE).\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the policy.\n"
                },
                "rsaToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "RSA Token MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "securityQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Security Question MFA policy settings (✓ OIE).\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                },
                "symantecVip": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Symantec VIP MFA policy settings (✓ Classic).\n"
                },
                "webauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "FIDO2 (WebAuthn) MFA policy settings (✓ OIE).\n"
                },
                "yubikeyToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Yubikey Token MFA policy settings (✓ Classic, ✓ OIE).\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Policy Description.\n"
                },
                "duo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "DUO MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "externalIdp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "External IDP MFA policy settings (✓ OIE).\n"
                },
                "fidoU2f": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Fido U2F MFA policy settings (✓ Classic).\n"
                },
                "fidoWebauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Fido Web Authn MFA policy settings (✓ Classic).\n"
                },
                "googleOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Google OTP MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include.\n"
                },
                "hotp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "HMAC-based One-Time Password MFA policy settings (✓ Classic).\n"
                },
                "isOie": {
                    "type": "boolean",
                    "description": "Boolean that specifies whether to use the newer Okta Identity Engine (OIE) with policy authenticators instead of the classic engine with Factors. This value determines which of the following policy factor settings can be configured. (Default = `false`)\n\u003e **WARNING:** Tenant must have the Okta Identity Engine enabled in order to use this feature.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name.\n"
                },
                "oktaCall": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Call MFA policy settings (✓ Classic).\n"
                },
                "oktaEmail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Email MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "oktaOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta OTP (via the Okta Verify app) MFA policy settings (✓ Classic).\n"
                },
                "oktaPassword": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Password MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "oktaPush": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Push MFA policy settings (✓ Classic).\n"
                },
                "oktaQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Question MFA policy settings (✓ Classic).\n"
                },
                "oktaSms": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta SMS MFA policy settings (✓ Classic).\n"
                },
                "oktaVerify": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Okta Verify MFA policy settings (✓ OIE).\n"
                },
                "onpremMfa": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "On-Prem MFA MFA policy settings (✓ OIE).\n"
                },
                "phoneNumber": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Phone Number MFA policy settings (✓ OIE).\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the policy.\n"
                },
                "rsaToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "RSA Token MFA policy settings (✓ Classic, ✓ OIE).\n"
                },
                "securityQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Security Question MFA policy settings (✓ OIE).\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                },
                "symantecVip": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Symantec VIP MFA policy settings (✓ Classic).\n"
                },
                "webauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "FIDO2 (WebAuthn) MFA policy settings (✓ OIE).\n"
                },
                "yubikeyToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Yubikey Token MFA policy settings (✓ Classic, ✓ OIE).\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Mfa resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Policy Description.\n"
                    },
                    "duo": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "DUO MFA policy settings (✓ Classic, ✓ OIE).\n"
                    },
                    "externalIdp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "External IDP MFA policy settings (✓ OIE).\n"
                    },
                    "fidoU2f": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Fido U2F MFA policy settings (✓ Classic).\n"
                    },
                    "fidoWebauthn": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Fido Web Authn MFA policy settings (✓ Classic).\n"
                    },
                    "googleOtp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Google OTP MFA policy settings (✓ Classic, ✓ OIE).\n"
                    },
                    "groupsIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Group IDs to Include.\n"
                    },
                    "hotp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "HMAC-based One-Time Password MFA policy settings (✓ Classic).\n"
                    },
                    "isOie": {
                        "type": "boolean",
                        "description": "Boolean that specifies whether to use the newer Okta Identity Engine (OIE) with policy authenticators instead of the classic engine with Factors. This value determines which of the following policy factor settings can be configured. (Default = `false`)\n\u003e **WARNING:** Tenant must have the Okta Identity Engine enabled in order to use this feature.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Name.\n"
                    },
                    "oktaCall": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Call MFA policy settings (✓ Classic).\n"
                    },
                    "oktaEmail": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Email MFA policy settings (✓ Classic, ✓ OIE).\n"
                    },
                    "oktaOtp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta OTP (via the Okta Verify app) MFA policy settings (✓ Classic).\n"
                    },
                    "oktaPassword": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Password MFA policy settings (✓ Classic, ✓ OIE).\n"
                    },
                    "oktaPush": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Push MFA policy settings (✓ Classic).\n"
                    },
                    "oktaQuestion": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Question MFA policy settings (✓ Classic).\n"
                    },
                    "oktaSms": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta SMS MFA policy settings (✓ Classic).\n"
                    },
                    "oktaVerify": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Okta Verify MFA policy settings (✓ OIE).\n"
                    },
                    "onpremMfa": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "On-Prem MFA MFA policy settings (✓ OIE).\n"
                    },
                    "phoneNumber": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Phone Number MFA policy settings (✓ OIE).\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of the policy.\n"
                    },
                    "rsaToken": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "RSA Token MFA policy settings (✓ Classic, ✓ OIE).\n"
                    },
                    "securityQuestion": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Security Question MFA policy settings (✓ OIE).\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                    },
                    "symantecVip": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Symantec VIP MFA policy settings (✓ Classic).\n"
                    },
                    "webauthn": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "FIDO2 (WebAuthn) MFA policy settings (✓ OIE).\n"
                    },
                    "yubikeyToken": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Yubikey Token MFA policy settings (✓ Classic, ✓ OIE).\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/password:Password": {
            "description": "Creates a Password Policy.\n\nThis resource allows you to create and configure a Password Policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.policy.Password(\"example\", {\n    description: \"Example\",\n    groupsIncludeds: [data.okta_group.everyone.id],\n    passwordHistoryCount: 4,\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.policy.Password(\"example\",\n    description=\"Example\",\n    groups_includeds=[data[\"okta_group\"][\"everyone\"][\"id\"]],\n    password_history_count=4,\n    status=\"ACTIVE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Policy.Password(\"example\", new()\n    {\n        Description = \"Example\",\n        GroupsIncludeds = new[]\n        {\n            data.Okta_group.Everyone.Id,\n        },\n        PasswordHistoryCount = 4,\n        Status = \"ACTIVE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.NewPassword(ctx, \"example\", \u0026policy.PasswordArgs{\n\t\t\tDescription: pulumi.String(\"Example\"),\n\t\t\tGroupsIncludeds: pulumi.StringArray{\n\t\t\t\tdata.Okta_group.Everyone.Id,\n\t\t\t},\n\t\t\tPasswordHistoryCount: pulumi.Int(4),\n\t\t\tStatus:               pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.Password;\nimport com.pulumi.okta.policy.PasswordArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Password(\"example\", PasswordArgs.builder()        \n            .description(\"Example\")\n            .groupsIncludeds(data.okta_group().everyone().id())\n            .passwordHistoryCount(4)\n            .status(\"ACTIVE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:policy:Password\n    properties:\n      description: Example\n      groupsIncludeds:\n        - ${data.okta_group.everyone.id}\n      passwordHistoryCount: 4\n      status: ACTIVE\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Password Policy can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:policy/password:Password example \u0026#60;policy id\u0026#62;\n```\n\n ",
            "properties": {
                "authProvider": {
                    "type": "string",
                    "description": "Authentication Provider: `\"OKTA\"`, `\"ACTIVE_DIRECTORY\"` or `\"LDAP\"`. Default is `\"OKTA\"`. Type `\"string\"`\n"
                },
                "callRecovery": {
                    "type": "string",
                    "description": "Enable or disable voice call password recovery: ACTIVE or INACTIVE.  Type `\"string\"`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Policy Description. Type `\"string\"`\n"
                },
                "emailRecovery": {
                    "type": "string",
                    "description": "Enable or disable email password recovery: ACTIVE or INACTIVE. Type `\"string\"`\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include. Type `\"list(string)\"`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name. Type `\"string\"`\n"
                },
                "passwordAutoUnlockMinutes": {
                    "type": "integer",
                    "description": "Number of minutes before a locked account is unlocked: 0 = no limit.  Type `\"number\"`\n"
                },
                "passwordDictionaryLookup": {
                    "type": "boolean",
                    "description": "Check Passwords Against Common Password Dictionary. Type `\"bool\"`\n"
                },
                "passwordExcludeFirstName": {
                    "type": "boolean",
                    "description": "User firstName attribute must be excluded from the password. Type `\"bool\"`\n"
                },
                "passwordExcludeLastName": {
                    "type": "boolean",
                    "description": "User lastName attribute must be excluded from the password. Type `\"bool\"`\n"
                },
                "passwordExcludeUsername": {
                    "type": "boolean",
                    "description": "If the username must be excluded from the password. Type `\"bool\"`\n"
                },
                "passwordExpireWarnDays": {
                    "type": "integer",
                    "description": "Length in days a user will be warned before password expiry: 0 = no warning.  Type `\"number\"`\n"
                },
                "passwordHistoryCount": {
                    "type": "integer",
                    "description": "Number of distinct passwords that must be created before they can be reused: 0 = none.  Type `\"number\"`\n"
                },
                "passwordLockoutNotificationChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification channels to use to notify a user when their account has been locked. Type `\"set(string)\"`\n"
                },
                "passwordMaxAgeDays": {
                    "type": "integer",
                    "description": "Length in days a password is valid before expiry: 0 = no limit.  Type `\"number\"`\n"
                },
                "passwordMaxLockoutAttempts": {
                    "type": "integer",
                    "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit.  Type `\"number\"`\n"
                },
                "passwordMinAgeMinutes": {
                    "type": "integer",
                    "description": "Minimum time interval in minutes between password changes: 0 = no limit.  Type `\"number\"`\n"
                },
                "passwordMinLength": {
                    "type": "integer",
                    "description": "Minimum password length. Default is 8. Type `\"number\"`\n"
                },
                "passwordMinLowercase": {
                    "type": "integer",
                    "description": "Minimum number of lower case characters in a password. Type `\"number\"`\n"
                },
                "passwordMinNumber": {
                    "type": "integer",
                    "description": "Minimum number of numbers in a password. Type `\"number\"`\n"
                },
                "passwordMinSymbol": {
                    "type": "integer",
                    "description": "Minimum number of symbols in a password. Type `\"number\"`\n"
                },
                "passwordMinUppercase": {
                    "type": "integer",
                    "description": "Minimum number of upper case characters in a password. Type `\"number\"`\n"
                },
                "passwordShowLockoutFailures": {
                    "type": "boolean",
                    "description": "If a user should be informed when their account is locked.  Type `\"bool\"`\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the policy. Type `\"number\"`\n"
                },
                "questionMinLength": {
                    "type": "integer",
                    "description": "Min length of the password recovery question answer.  Type `\"number\"`\n"
                },
                "questionRecovery": {
                    "type": "string",
                    "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE. Type `\"string\"`\n"
                },
                "recoveryEmailToken": {
                    "type": "integer",
                    "description": "Lifetime in minutes of the recovery email token.  Type `\"number\"`\n"
                },
                "skipUnlock": {
                    "type": "boolean",
                    "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's Windows account. Type `\"bool\"`\n"
                },
                "smsRecovery": {
                    "type": "string",
                    "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE. Type `\"string\"`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`. Type `\"string\"`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "authProvider": {
                    "type": "string",
                    "description": "Authentication Provider: `\"OKTA\"`, `\"ACTIVE_DIRECTORY\"` or `\"LDAP\"`. Default is `\"OKTA\"`. Type `\"string\"`\n"
                },
                "callRecovery": {
                    "type": "string",
                    "description": "Enable or disable voice call password recovery: ACTIVE or INACTIVE.  Type `\"string\"`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Policy Description. Type `\"string\"`\n"
                },
                "emailRecovery": {
                    "type": "string",
                    "description": "Enable or disable email password recovery: ACTIVE or INACTIVE. Type `\"string\"`\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include. Type `\"list(string)\"`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name. Type `\"string\"`\n"
                },
                "passwordAutoUnlockMinutes": {
                    "type": "integer",
                    "description": "Number of minutes before a locked account is unlocked: 0 = no limit.  Type `\"number\"`\n"
                },
                "passwordDictionaryLookup": {
                    "type": "boolean",
                    "description": "Check Passwords Against Common Password Dictionary. Type `\"bool\"`\n"
                },
                "passwordExcludeFirstName": {
                    "type": "boolean",
                    "description": "User firstName attribute must be excluded from the password. Type `\"bool\"`\n"
                },
                "passwordExcludeLastName": {
                    "type": "boolean",
                    "description": "User lastName attribute must be excluded from the password. Type `\"bool\"`\n"
                },
                "passwordExcludeUsername": {
                    "type": "boolean",
                    "description": "If the username must be excluded from the password. Type `\"bool\"`\n"
                },
                "passwordExpireWarnDays": {
                    "type": "integer",
                    "description": "Length in days a user will be warned before password expiry: 0 = no warning.  Type `\"number\"`\n"
                },
                "passwordHistoryCount": {
                    "type": "integer",
                    "description": "Number of distinct passwords that must be created before they can be reused: 0 = none.  Type `\"number\"`\n"
                },
                "passwordLockoutNotificationChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification channels to use to notify a user when their account has been locked. Type `\"set(string)\"`\n"
                },
                "passwordMaxAgeDays": {
                    "type": "integer",
                    "description": "Length in days a password is valid before expiry: 0 = no limit.  Type `\"number\"`\n"
                },
                "passwordMaxLockoutAttempts": {
                    "type": "integer",
                    "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit.  Type `\"number\"`\n"
                },
                "passwordMinAgeMinutes": {
                    "type": "integer",
                    "description": "Minimum time interval in minutes between password changes: 0 = no limit.  Type `\"number\"`\n"
                },
                "passwordMinLength": {
                    "type": "integer",
                    "description": "Minimum password length. Default is 8. Type `\"number\"`\n"
                },
                "passwordMinLowercase": {
                    "type": "integer",
                    "description": "Minimum number of lower case characters in a password. Type `\"number\"`\n"
                },
                "passwordMinNumber": {
                    "type": "integer",
                    "description": "Minimum number of numbers in a password. Type `\"number\"`\n"
                },
                "passwordMinSymbol": {
                    "type": "integer",
                    "description": "Minimum number of symbols in a password. Type `\"number\"`\n"
                },
                "passwordMinUppercase": {
                    "type": "integer",
                    "description": "Minimum number of upper case characters in a password. Type `\"number\"`\n"
                },
                "passwordShowLockoutFailures": {
                    "type": "boolean",
                    "description": "If a user should be informed when their account is locked.  Type `\"bool\"`\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the policy. Type `\"number\"`\n"
                },
                "questionMinLength": {
                    "type": "integer",
                    "description": "Min length of the password recovery question answer.  Type `\"number\"`\n"
                },
                "questionRecovery": {
                    "type": "string",
                    "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE. Type `\"string\"`\n"
                },
                "recoveryEmailToken": {
                    "type": "integer",
                    "description": "Lifetime in minutes of the recovery email token.  Type `\"number\"`\n"
                },
                "skipUnlock": {
                    "type": "boolean",
                    "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's Windows account. Type `\"bool\"`\n"
                },
                "smsRecovery": {
                    "type": "string",
                    "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE. Type `\"string\"`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`. Type `\"string\"`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Password resources.\n",
                "properties": {
                    "authProvider": {
                        "type": "string",
                        "description": "Authentication Provider: `\"OKTA\"`, `\"ACTIVE_DIRECTORY\"` or `\"LDAP\"`. Default is `\"OKTA\"`. Type `\"string\"`\n"
                    },
                    "callRecovery": {
                        "type": "string",
                        "description": "Enable or disable voice call password recovery: ACTIVE or INACTIVE.  Type `\"string\"`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Policy Description. Type `\"string\"`\n"
                    },
                    "emailRecovery": {
                        "type": "string",
                        "description": "Enable or disable email password recovery: ACTIVE or INACTIVE. Type `\"string\"`\n"
                    },
                    "groupsIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Group IDs to Include. Type `\"list(string)\"`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Name. Type `\"string\"`\n"
                    },
                    "passwordAutoUnlockMinutes": {
                        "type": "integer",
                        "description": "Number of minutes before a locked account is unlocked: 0 = no limit.  Type `\"number\"`\n"
                    },
                    "passwordDictionaryLookup": {
                        "type": "boolean",
                        "description": "Check Passwords Against Common Password Dictionary. Type `\"bool\"`\n"
                    },
                    "passwordExcludeFirstName": {
                        "type": "boolean",
                        "description": "User firstName attribute must be excluded from the password. Type `\"bool\"`\n"
                    },
                    "passwordExcludeLastName": {
                        "type": "boolean",
                        "description": "User lastName attribute must be excluded from the password. Type `\"bool\"`\n"
                    },
                    "passwordExcludeUsername": {
                        "type": "boolean",
                        "description": "If the username must be excluded from the password. Type `\"bool\"`\n"
                    },
                    "passwordExpireWarnDays": {
                        "type": "integer",
                        "description": "Length in days a user will be warned before password expiry: 0 = no warning.  Type `\"number\"`\n"
                    },
                    "passwordHistoryCount": {
                        "type": "integer",
                        "description": "Number of distinct passwords that must be created before they can be reused: 0 = none.  Type `\"number\"`\n"
                    },
                    "passwordLockoutNotificationChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Notification channels to use to notify a user when their account has been locked. Type `\"set(string)\"`\n"
                    },
                    "passwordMaxAgeDays": {
                        "type": "integer",
                        "description": "Length in days a password is valid before expiry: 0 = no limit.  Type `\"number\"`\n"
                    },
                    "passwordMaxLockoutAttempts": {
                        "type": "integer",
                        "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit.  Type `\"number\"`\n"
                    },
                    "passwordMinAgeMinutes": {
                        "type": "integer",
                        "description": "Minimum time interval in minutes between password changes: 0 = no limit.  Type `\"number\"`\n"
                    },
                    "passwordMinLength": {
                        "type": "integer",
                        "description": "Minimum password length. Default is 8. Type `\"number\"`\n"
                    },
                    "passwordMinLowercase": {
                        "type": "integer",
                        "description": "Minimum number of lower case characters in a password. Type `\"number\"`\n"
                    },
                    "passwordMinNumber": {
                        "type": "integer",
                        "description": "Minimum number of numbers in a password. Type `\"number\"`\n"
                    },
                    "passwordMinSymbol": {
                        "type": "integer",
                        "description": "Minimum number of symbols in a password. Type `\"number\"`\n"
                    },
                    "passwordMinUppercase": {
                        "type": "integer",
                        "description": "Minimum number of upper case characters in a password. Type `\"number\"`\n"
                    },
                    "passwordShowLockoutFailures": {
                        "type": "boolean",
                        "description": "If a user should be informed when their account is locked.  Type `\"bool\"`\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of the policy. Type `\"number\"`\n"
                    },
                    "questionMinLength": {
                        "type": "integer",
                        "description": "Min length of the password recovery question answer.  Type `\"number\"`\n"
                    },
                    "questionRecovery": {
                        "type": "string",
                        "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE. Type `\"string\"`\n"
                    },
                    "recoveryEmailToken": {
                        "type": "integer",
                        "description": "Lifetime in minutes of the recovery email token.  Type `\"number\"`\n"
                    },
                    "skipUnlock": {
                        "type": "boolean",
                        "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's Windows account. Type `\"bool\"`\n"
                    },
                    "smsRecovery": {
                        "type": "string",
                        "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE. Type `\"string\"`\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`. Type `\"string\"`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/ruleIdpDiscovery:RuleIdpDiscovery": {
            "description": "This resource allows you to create and configure an IdP Discovery Policy Rule.\n\n\u003e If you receive the error `You do not have permission to access the feature\nyou are requesting` contact support and\nrequest feature flag `ADVANCED_SSO` be applied to your org.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst idpDiscoveryPolicy = okta.policy.getPolicy({\n    name: \"Idp Discovery Policy\",\n    type: \"IDP_DISCOVERY\",\n});\nconst example = new okta.policy.RuleIdpDiscovery(\"example\", {\n    policyId: idpDiscoveryPolicy.then(idpDiscoveryPolicy =\u003e idpDiscoveryPolicy.id),\n    idpId: \"\u003cidp id\u003e\",\n    idpType: \"OIDC\",\n    networkConnection: \"ANYWHERE\",\n    priority: 1,\n    status: \"ACTIVE\",\n    userIdentifierType: \"ATTRIBUTE\",\n    userIdentifierAttribute: \"company\",\n    appExcludes: [\n        {\n            id: \"\u003capp id\u003e\",\n            type: \"APP\",\n        },\n        {\n            name: \"yahoo_mail\",\n            type: \"APP_TYPE\",\n        },\n    ],\n    appIncludes: [\n        {\n            id: \"\u003capp id\u003e\",\n            type: \"APP\",\n        },\n        {\n            name: \"\u003capp type name\u003e\",\n            type: \"APP_TYPE\",\n        },\n    ],\n    platformIncludes: [{\n        type: \"MOBILE\",\n        osType: \"OSX\",\n    }],\n    userIdentifierPatterns: [{\n        matchType: \"EQUALS\",\n        value: \"Articulate\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nidp_discovery_policy = okta.policy.get_policy(name=\"Idp Discovery Policy\",\n    type=\"IDP_DISCOVERY\")\nexample = okta.policy.RuleIdpDiscovery(\"example\",\n    policy_id=idp_discovery_policy.id,\n    idp_id=\"\u003cidp id\u003e\",\n    idp_type=\"OIDC\",\n    network_connection=\"ANYWHERE\",\n    priority=1,\n    status=\"ACTIVE\",\n    user_identifier_type=\"ATTRIBUTE\",\n    user_identifier_attribute=\"company\",\n    app_excludes=[\n        okta.policy.RuleIdpDiscoveryAppExcludeArgs(\n            id=\"\u003capp id\u003e\",\n            type=\"APP\",\n        ),\n        okta.policy.RuleIdpDiscoveryAppExcludeArgs(\n            name=\"yahoo_mail\",\n            type=\"APP_TYPE\",\n        ),\n    ],\n    app_includes=[\n        okta.policy.RuleIdpDiscoveryAppIncludeArgs(\n            id=\"\u003capp id\u003e\",\n            type=\"APP\",\n        ),\n        okta.policy.RuleIdpDiscoveryAppIncludeArgs(\n            name=\"\u003capp type name\u003e\",\n            type=\"APP_TYPE\",\n        ),\n    ],\n    platform_includes=[okta.policy.RuleIdpDiscoveryPlatformIncludeArgs(\n        type=\"MOBILE\",\n        os_type=\"OSX\",\n    )],\n    user_identifier_patterns=[okta.policy.RuleIdpDiscoveryUserIdentifierPatternArgs(\n        match_type=\"EQUALS\",\n        value=\"Articulate\",\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var idpDiscoveryPolicy = Okta.Policy.GetPolicy.Invoke(new()\n    {\n        Name = \"Idp Discovery Policy\",\n        Type = \"IDP_DISCOVERY\",\n    });\n\n    var example = new Okta.Policy.RuleIdpDiscovery(\"example\", new()\n    {\n        PolicyId = idpDiscoveryPolicy.Apply(getPolicyResult =\u003e getPolicyResult.Id),\n        IdpId = \"\u003cidp id\u003e\",\n        IdpType = \"OIDC\",\n        NetworkConnection = \"ANYWHERE\",\n        Priority = 1,\n        Status = \"ACTIVE\",\n        UserIdentifierType = \"ATTRIBUTE\",\n        UserIdentifierAttribute = \"company\",\n        AppExcludes = new[]\n        {\n            new Okta.Policy.Inputs.RuleIdpDiscoveryAppExcludeArgs\n            {\n                Id = \"\u003capp id\u003e\",\n                Type = \"APP\",\n            },\n            new Okta.Policy.Inputs.RuleIdpDiscoveryAppExcludeArgs\n            {\n                Name = \"yahoo_mail\",\n                Type = \"APP_TYPE\",\n            },\n        },\n        AppIncludes = new[]\n        {\n            new Okta.Policy.Inputs.RuleIdpDiscoveryAppIncludeArgs\n            {\n                Id = \"\u003capp id\u003e\",\n                Type = \"APP\",\n            },\n            new Okta.Policy.Inputs.RuleIdpDiscoveryAppIncludeArgs\n            {\n                Name = \"\u003capp type name\u003e\",\n                Type = \"APP_TYPE\",\n            },\n        },\n        PlatformIncludes = new[]\n        {\n            new Okta.Policy.Inputs.RuleIdpDiscoveryPlatformIncludeArgs\n            {\n                Type = \"MOBILE\",\n                OsType = \"OSX\",\n            },\n        },\n        UserIdentifierPatterns = new[]\n        {\n            new Okta.Policy.Inputs.RuleIdpDiscoveryUserIdentifierPatternArgs\n            {\n                MatchType = \"EQUALS\",\n                Value = \"Articulate\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tidpDiscoveryPolicy, err := policy.GetPolicy(ctx, \u0026policy.GetPolicyArgs{\n\t\t\tName: \"Idp Discovery Policy\",\n\t\t\tType: \"IDP_DISCOVERY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = policy.NewRuleIdpDiscovery(ctx, \"example\", \u0026policy.RuleIdpDiscoveryArgs{\n\t\t\tPolicyId:                *pulumi.String(idpDiscoveryPolicy.Id),\n\t\t\tIdpId:                   pulumi.String(\"\u003cidp id\u003e\"),\n\t\t\tIdpType:                 pulumi.String(\"OIDC\"),\n\t\t\tNetworkConnection:       pulumi.String(\"ANYWHERE\"),\n\t\t\tPriority:                pulumi.Int(1),\n\t\t\tStatus:                  pulumi.String(\"ACTIVE\"),\n\t\t\tUserIdentifierType:      pulumi.String(\"ATTRIBUTE\"),\n\t\t\tUserIdentifierAttribute: pulumi.String(\"company\"),\n\t\t\tAppExcludes: policy.RuleIdpDiscoveryAppExcludeArray{\n\t\t\t\t\u0026policy.RuleIdpDiscoveryAppExcludeArgs{\n\t\t\t\t\tId:   pulumi.String(\"\u003capp id\u003e\"),\n\t\t\t\t\tType: pulumi.String(\"APP\"),\n\t\t\t\t},\n\t\t\t\t\u0026policy.RuleIdpDiscoveryAppExcludeArgs{\n\t\t\t\t\tName: pulumi.String(\"yahoo_mail\"),\n\t\t\t\t\tType: pulumi.String(\"APP_TYPE\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tAppIncludes: policy.RuleIdpDiscoveryAppIncludeArray{\n\t\t\t\t\u0026policy.RuleIdpDiscoveryAppIncludeArgs{\n\t\t\t\t\tId:   pulumi.String(\"\u003capp id\u003e\"),\n\t\t\t\t\tType: pulumi.String(\"APP\"),\n\t\t\t\t},\n\t\t\t\t\u0026policy.RuleIdpDiscoveryAppIncludeArgs{\n\t\t\t\t\tName: pulumi.String(\"\u003capp type name\u003e\"),\n\t\t\t\t\tType: pulumi.String(\"APP_TYPE\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPlatformIncludes: policy.RuleIdpDiscoveryPlatformIncludeArray{\n\t\t\t\t\u0026policy.RuleIdpDiscoveryPlatformIncludeArgs{\n\t\t\t\t\tType:   pulumi.String(\"MOBILE\"),\n\t\t\t\t\tOsType: pulumi.String(\"OSX\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUserIdentifierPatterns: policy.RuleIdpDiscoveryUserIdentifierPatternArray{\n\t\t\t\t\u0026policy.RuleIdpDiscoveryUserIdentifierPatternArgs{\n\t\t\t\t\tMatchType: pulumi.String(\"EQUALS\"),\n\t\t\t\t\tValue:     pulumi.String(\"Articulate\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.PolicyFunctions;\nimport com.pulumi.okta.policy.inputs.GetPolicyArgs;\nimport com.pulumi.okta.policy.RuleIdpDiscovery;\nimport com.pulumi.okta.policy.RuleIdpDiscoveryArgs;\nimport com.pulumi.okta.policy.inputs.RuleIdpDiscoveryAppExcludeArgs;\nimport com.pulumi.okta.policy.inputs.RuleIdpDiscoveryAppIncludeArgs;\nimport com.pulumi.okta.policy.inputs.RuleIdpDiscoveryPlatformIncludeArgs;\nimport com.pulumi.okta.policy.inputs.RuleIdpDiscoveryUserIdentifierPatternArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var idpDiscoveryPolicy = PolicyFunctions.getPolicy(GetPolicyArgs.builder()\n            .name(\"Idp Discovery Policy\")\n            .type(\"IDP_DISCOVERY\")\n            .build());\n\n        var example = new RuleIdpDiscovery(\"example\", RuleIdpDiscoveryArgs.builder()        \n            .policyId(idpDiscoveryPolicy.applyValue(getPolicyResult -\u003e getPolicyResult.id()))\n            .idpId(\"\u003cidp id\u003e\")\n            .idpType(\"OIDC\")\n            .networkConnection(\"ANYWHERE\")\n            .priority(1)\n            .status(\"ACTIVE\")\n            .userIdentifierType(\"ATTRIBUTE\")\n            .userIdentifierAttribute(\"company\")\n            .appExcludes(            \n                RuleIdpDiscoveryAppExcludeArgs.builder()\n                    .id(\"\u003capp id\u003e\")\n                    .type(\"APP\")\n                    .build(),\n                RuleIdpDiscoveryAppExcludeArgs.builder()\n                    .name(\"yahoo_mail\")\n                    .type(\"APP_TYPE\")\n                    .build())\n            .appIncludes(            \n                RuleIdpDiscoveryAppIncludeArgs.builder()\n                    .id(\"\u003capp id\u003e\")\n                    .type(\"APP\")\n                    .build(),\n                RuleIdpDiscoveryAppIncludeArgs.builder()\n                    .name(\"\u003capp type name\u003e\")\n                    .type(\"APP_TYPE\")\n                    .build())\n            .platformIncludes(RuleIdpDiscoveryPlatformIncludeArgs.builder()\n                .type(\"MOBILE\")\n                .osType(\"OSX\")\n                .build())\n            .userIdentifierPatterns(RuleIdpDiscoveryUserIdentifierPatternArgs.builder()\n                .matchType(\"EQUALS\")\n                .value(\"Articulate\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:policy:RuleIdpDiscovery\n    properties:\n      policyId: ${idpDiscoveryPolicy.id}\n      idpId: \u003cidp id\u003e\n      idpType: OIDC\n      networkConnection: ANYWHERE\n      priority: 1\n      status: ACTIVE\n      userIdentifierType: ATTRIBUTE\n      userIdentifierAttribute: company\n      appExcludes:\n        - id: \u003capp id\u003e\n          type: APP\n        - name: yahoo_mail\n          type: APP_TYPE\n      appIncludes:\n        - id: \u003capp id\u003e\n          type: APP\n        - name: \u003capp type name\u003e\n          type: APP_TYPE\n      platformIncludes:\n        - type: MOBILE\n          osType: OSX\n      userIdentifierPatterns:\n        - matchType: EQUALS\n          value: Articulate\nvariables:\n  idpDiscoveryPolicy:\n    fn::invoke:\n      Function: okta:policy:getPolicy\n      Arguments:\n        name: Idp Discovery Policy\n        type: IDP_DISCOVERY\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Policy Rule can be imported via the Policy and Rule ID.\n\n```sh\n $ pulumi import okta:policy/ruleIdpDiscovery:RuleIdpDiscovery example \u0026#60;policy id\u0026#62;/\u0026#60;rule id\u0026#62;\n```\n\n ",
            "properties": {
                "appExcludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppExclude:RuleIdpDiscoveryAppExclude"
                    },
                    "description": "Applications to exclude in discovery. See `app_include` for details.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "appIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppInclude:RuleIdpDiscoveryAppInclude"
                    },
                    "description": "Applications to include in discovery rule.\n"
                },
                "idpId": {
                    "type": "string",
                    "description": "The identifier for the Idp the rule should route to if all conditions are met.\n"
                },
                "idpType": {
                    "type": "string",
                    "description": "Type of Idp. One of: `\"SAML2\"`, `\"IWA\"`, `\"AgentlessDSSO\"`, `\"X509\"`, `\"FACEBOOK\"`, `\"GOOGLE\"`, `\"LINKEDIN\"`, `\"MICROSOFT\"`, `\"OIDC\"`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Use if the `type` is `\"APP_TYPE\"` to indicate the type of application(s) to include in instances where an entire group (i.e. `yahoo_mail`) of applications should be included.\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "The network selection mode. One of `\"ANYWEHRE\"` or `\"ZONE\"`.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `\"ZONE\"`. Indicates the network zones to exclude.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `\"ZONE\"`. Indicates the network zones to include.\n"
                },
                "platformIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryPlatformInclude:RuleIdpDiscoveryPlatformInclude"
                    }
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Idp rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if an invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Idp rule status: `\"ACTIVE\"` or `\"INACTIVE\"`. By default, it is `\"ACTIVE\"`.\n"
                },
                "userIdentifierAttribute": {
                    "type": "string",
                    "description": "Profile attribute matching can only have a single value that describes the type indicated in `user_identifier_type`. This is the attribute or identifier that the `user_identifier_patterns` are checked against.\n"
                },
                "userIdentifierPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryUserIdentifierPattern:RuleIdpDiscoveryUserIdentifierPattern"
                    },
                    "description": "Specifies a User Identifier pattern condition to match against. If `match_type` of `\"EXPRESSION\"` is used, only a *single* element can be set, otherwise multiple elements of matching patterns may be provided.\n"
                },
                "userIdentifierType": {
                    "type": "string",
                    "description": "One of: `\"IDENTIFIER\"`, `\"ATTRIBUTE\"`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "appExcludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppExclude:RuleIdpDiscoveryAppExclude"
                    },
                    "description": "Applications to exclude in discovery. See `app_include` for details.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "appIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppInclude:RuleIdpDiscoveryAppInclude"
                    },
                    "description": "Applications to include in discovery rule.\n"
                },
                "idpId": {
                    "type": "string",
                    "description": "The identifier for the Idp the rule should route to if all conditions are met.\n"
                },
                "idpType": {
                    "type": "string",
                    "description": "Type of Idp. One of: `\"SAML2\"`, `\"IWA\"`, `\"AgentlessDSSO\"`, `\"X509\"`, `\"FACEBOOK\"`, `\"GOOGLE\"`, `\"LINKEDIN\"`, `\"MICROSOFT\"`, `\"OIDC\"`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Use if the `type` is `\"APP_TYPE\"` to indicate the type of application(s) to include in instances where an entire group (i.e. `yahoo_mail`) of applications should be included.\n",
                    "willReplaceOnChanges": true
                },
                "networkConnection": {
                    "type": "string",
                    "description": "The network selection mode. One of `\"ANYWEHRE\"` or `\"ZONE\"`.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `\"ZONE\"`. Indicates the network zones to exclude.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `\"ZONE\"`. Indicates the network zones to include.\n"
                },
                "platformIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryPlatformInclude:RuleIdpDiscoveryPlatformInclude"
                    }
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n",
                    "willReplaceOnChanges": true
                },
                "priority": {
                    "type": "integer",
                    "description": "Idp rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if an invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Idp rule status: `\"ACTIVE\"` or `\"INACTIVE\"`. By default, it is `\"ACTIVE\"`.\n"
                },
                "userIdentifierAttribute": {
                    "type": "string",
                    "description": "Profile attribute matching can only have a single value that describes the type indicated in `user_identifier_type`. This is the attribute or identifier that the `user_identifier_patterns` are checked against.\n"
                },
                "userIdentifierPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryUserIdentifierPattern:RuleIdpDiscoveryUserIdentifierPattern"
                    },
                    "description": "Specifies a User Identifier pattern condition to match against. If `match_type` of `\"EXPRESSION\"` is used, only a *single* element can be set, otherwise multiple elements of matching patterns may be provided.\n"
                },
                "userIdentifierType": {
                    "type": "string",
                    "description": "One of: `\"IDENTIFIER\"`, `\"ATTRIBUTE\"`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RuleIdpDiscovery resources.\n",
                "properties": {
                    "appExcludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppExclude:RuleIdpDiscoveryAppExclude"
                        },
                        "description": "Applications to exclude in discovery. See `app_include` for details.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                    },
                    "appIncludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppInclude:RuleIdpDiscoveryAppInclude"
                        },
                        "description": "Applications to include in discovery rule.\n"
                    },
                    "idpId": {
                        "type": "string",
                        "description": "The identifier for the Idp the rule should route to if all conditions are met.\n"
                    },
                    "idpType": {
                        "type": "string",
                        "description": "Type of Idp. One of: `\"SAML2\"`, `\"IWA\"`, `\"AgentlessDSSO\"`, `\"X509\"`, `\"FACEBOOK\"`, `\"GOOGLE\"`, `\"LINKEDIN\"`, `\"MICROSOFT\"`, `\"OIDC\"`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Use if the `type` is `\"APP_TYPE\"` to indicate the type of application(s) to include in instances where an entire group (i.e. `yahoo_mail`) of applications should be included.\n",
                        "willReplaceOnChanges": true
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "The network selection mode. One of `\"ANYWEHRE\"` or `\"ZONE\"`.\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required if `network_connection` = `\"ZONE\"`. Indicates the network zones to exclude.\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required if `network_connection` = `\"ZONE\"`. Indicates the network zones to include.\n"
                    },
                    "platformIncludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleIdpDiscoveryPlatformInclude:RuleIdpDiscoveryPlatformInclude"
                        }
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Policy ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Idp rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if an invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Idp rule status: `\"ACTIVE\"` or `\"INACTIVE\"`. By default, it is `\"ACTIVE\"`.\n"
                    },
                    "userIdentifierAttribute": {
                        "type": "string",
                        "description": "Profile attribute matching can only have a single value that describes the type indicated in `user_identifier_type`. This is the attribute or identifier that the `user_identifier_patterns` are checked against.\n"
                    },
                    "userIdentifierPatterns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleIdpDiscoveryUserIdentifierPattern:RuleIdpDiscoveryUserIdentifierPattern"
                        },
                        "description": "Specifies a User Identifier pattern condition to match against. If `match_type` of `\"EXPRESSION\"` is used, only a *single* element can be set, otherwise multiple elements of matching patterns may be provided.\n"
                    },
                    "userIdentifierType": {
                        "type": "string",
                        "description": "One of: `\"IDENTIFIER\"`, `\"ATTRIBUTE\"`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/ruleMfa:RuleMfa": {
            "description": "This resource allows you to create and configure an MFA Policy Rule.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.PolicyFunctions;\nimport com.pulumi.okta.policy.inputs.GetDefaultPolicyArgs;\nimport com.pulumi.okta.app.OAuth;\nimport com.pulumi.okta.app.OAuthArgs;\nimport com.pulumi.okta.policy.RuleMfa;\nimport com.pulumi.okta.policy.RuleMfaArgs;\nimport com.pulumi.okta.policy.inputs.RuleMfaAppIncludeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var exampleDefaultPolicy = PolicyFunctions.getDefaultPolicy(GetDefaultPolicyArgs.builder()\n            .type(\"MFA_ENROLL\")\n            .build());\n\n        var exampleOAuth = new OAuth(\"exampleOAuth\", OAuthArgs.builder()        \n            .label(\"My App\")\n            .type(\"web\")\n            .grantTypes(\"authorization_code\")\n            .redirectUris(\"http://localhost:8000\")\n            .responseTypes(\"code\")\n            .skipGroups(true)\n            .build());\n\n        var exampleRuleMfa = new RuleMfa(\"exampleRuleMfa\", RuleMfaArgs.builder()        \n            .policyId(exampleDefaultPolicy.applyValue(getDefaultPolicyResult -\u003e getDefaultPolicyResult.id()))\n            .status(\"ACTIVE\")\n            .enroll(\"LOGIN\")\n            .appIncludes(            \n                RuleMfaAppIncludeArgs.builder()\n                    .id(exampleOAuth.id())\n                    .type(\"APP\")\n                    .build(),\n                RuleMfaAppIncludeArgs.builder()\n                    .type(\"APP_TYPE\")\n                    .name(\"yahoo_mail\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleRuleMfa:\n    type: okta:policy:RuleMfa\n    properties:\n      policyId: ${exampleDefaultPolicy.id}\n      status: ACTIVE\n      enroll: LOGIN\n      appIncludes:\n        - id: ${exampleOAuth.id}\n          type: APP\n        - type: APP_TYPE\n          name: yahoo_mail\n  exampleOAuth:\n    type: okta:app:OAuth\n    properties:\n      label: My App\n      type: web\n      grantTypes:\n        - authorization_code\n      redirectUris:\n        - http://localhost:8000\n      responseTypes:\n        - code\n      skipGroups: true\nvariables:\n  exampleDefaultPolicy:\n    fn::invoke:\n      Function: okta:policy:getDefaultPolicy\n      Arguments:\n        type: MFA_ENROLL\n```\n\nUnchecked `Okta` and checked `Applications` (with `Any application that supports MFA enrollment` option) checkboxes in the `User is accessing` section corresponds to the following config:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleDefaultPolicy = okta.policy.getDefaultPolicy({\n    type: \"MFA_ENROLL\",\n});\nconst exampleRuleMfa = new okta.policy.RuleMfa(\"exampleRuleMfa\", {\n    policyId: exampleDefaultPolicy.then(exampleDefaultPolicy =\u003e exampleDefaultPolicy.id),\n    appExcludes: [{\n        name: \"okta\",\n        type: \"APP_TYPE\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_default_policy = okta.policy.get_default_policy(type=\"MFA_ENROLL\")\nexample_rule_mfa = okta.policy.RuleMfa(\"exampleRuleMfa\",\n    policy_id=example_default_policy.id,\n    app_excludes=[okta.policy.RuleMfaAppExcludeArgs(\n        name=\"okta\",\n        type=\"APP_TYPE\",\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleDefaultPolicy = Okta.Policy.GetDefaultPolicy.Invoke(new()\n    {\n        Type = \"MFA_ENROLL\",\n    });\n\n    var exampleRuleMfa = new Okta.Policy.RuleMfa(\"exampleRuleMfa\", new()\n    {\n        PolicyId = exampleDefaultPolicy.Apply(getDefaultPolicyResult =\u003e getDefaultPolicyResult.Id),\n        AppExcludes = new[]\n        {\n            new Okta.Policy.Inputs.RuleMfaAppExcludeArgs\n            {\n                Name = \"okta\",\n                Type = \"APP_TYPE\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleDefaultPolicy, err := policy.GetDefaultPolicy(ctx, \u0026policy.GetDefaultPolicyArgs{\n\t\t\tType: \"MFA_ENROLL\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = policy.NewRuleMfa(ctx, \"exampleRuleMfa\", \u0026policy.RuleMfaArgs{\n\t\t\tPolicyId: *pulumi.String(exampleDefaultPolicy.Id),\n\t\t\tAppExcludes: policy.RuleMfaAppExcludeArray{\n\t\t\t\t\u0026policy.RuleMfaAppExcludeArgs{\n\t\t\t\t\tName: pulumi.String(\"okta\"),\n\t\t\t\t\tType: pulumi.String(\"APP_TYPE\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.PolicyFunctions;\nimport com.pulumi.okta.policy.inputs.GetDefaultPolicyArgs;\nimport com.pulumi.okta.policy.RuleMfa;\nimport com.pulumi.okta.policy.RuleMfaArgs;\nimport com.pulumi.okta.policy.inputs.RuleMfaAppExcludeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var exampleDefaultPolicy = PolicyFunctions.getDefaultPolicy(GetDefaultPolicyArgs.builder()\n            .type(\"MFA_ENROLL\")\n            .build());\n\n        var exampleRuleMfa = new RuleMfa(\"exampleRuleMfa\", RuleMfaArgs.builder()        \n            .policyId(exampleDefaultPolicy.applyValue(getDefaultPolicyResult -\u003e getDefaultPolicyResult.id()))\n            .appExcludes(RuleMfaAppExcludeArgs.builder()\n                .name(\"okta\")\n                .type(\"APP_TYPE\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleRuleMfa:\n    type: okta:policy:RuleMfa\n    properties:\n      policyId: ${exampleDefaultPolicy.id}\n      appExcludes:\n        - name: okta\n          type: APP_TYPE\nvariables:\n  exampleDefaultPolicy:\n    fn::invoke:\n      Function: okta:policy:getDefaultPolicy\n      Arguments:\n        type: MFA_ENROLL\n```\n\nUnchecked `Okta` and checked `Applications` (with `Specific applications` option) checkboxes in the `User is accessing` section corresponds to the following config:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleDefaultPolicy = okta.policy.getDefaultPolicy({\n    type: \"MFA_ENROLL\",\n});\nconst exampleRuleMfa = new okta.policy.RuleMfa(\"exampleRuleMfa\", {\n    policyId: exampleDefaultPolicy.then(exampleDefaultPolicy =\u003e exampleDefaultPolicy.id),\n    appExcludes: [{\n        name: \"okta\",\n        type: \"APP_TYPE\",\n    }],\n    appIncludes: [{\n        id: \"some_app_id\",\n        type: \"APP\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_default_policy = okta.policy.get_default_policy(type=\"MFA_ENROLL\")\nexample_rule_mfa = okta.policy.RuleMfa(\"exampleRuleMfa\",\n    policy_id=example_default_policy.id,\n    app_excludes=[okta.policy.RuleMfaAppExcludeArgs(\n        name=\"okta\",\n        type=\"APP_TYPE\",\n    )],\n    app_includes=[okta.policy.RuleMfaAppIncludeArgs(\n        id=\"some_app_id\",\n        type=\"APP\",\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleDefaultPolicy = Okta.Policy.GetDefaultPolicy.Invoke(new()\n    {\n        Type = \"MFA_ENROLL\",\n    });\n\n    var exampleRuleMfa = new Okta.Policy.RuleMfa(\"exampleRuleMfa\", new()\n    {\n        PolicyId = exampleDefaultPolicy.Apply(getDefaultPolicyResult =\u003e getDefaultPolicyResult.Id),\n        AppExcludes = new[]\n        {\n            new Okta.Policy.Inputs.RuleMfaAppExcludeArgs\n            {\n                Name = \"okta\",\n                Type = \"APP_TYPE\",\n            },\n        },\n        AppIncludes = new[]\n        {\n            new Okta.Policy.Inputs.RuleMfaAppIncludeArgs\n            {\n                Id = \"some_app_id\",\n                Type = \"APP\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleDefaultPolicy, err := policy.GetDefaultPolicy(ctx, \u0026policy.GetDefaultPolicyArgs{\n\t\t\tType: \"MFA_ENROLL\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = policy.NewRuleMfa(ctx, \"exampleRuleMfa\", \u0026policy.RuleMfaArgs{\n\t\t\tPolicyId: *pulumi.String(exampleDefaultPolicy.Id),\n\t\t\tAppExcludes: policy.RuleMfaAppExcludeArray{\n\t\t\t\t\u0026policy.RuleMfaAppExcludeArgs{\n\t\t\t\t\tName: pulumi.String(\"okta\"),\n\t\t\t\t\tType: pulumi.String(\"APP_TYPE\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tAppIncludes: policy.RuleMfaAppIncludeArray{\n\t\t\t\t\u0026policy.RuleMfaAppIncludeArgs{\n\t\t\t\t\tId:   pulumi.String(\"some_app_id\"),\n\t\t\t\t\tType: pulumi.String(\"APP\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.PolicyFunctions;\nimport com.pulumi.okta.policy.inputs.GetDefaultPolicyArgs;\nimport com.pulumi.okta.policy.RuleMfa;\nimport com.pulumi.okta.policy.RuleMfaArgs;\nimport com.pulumi.okta.policy.inputs.RuleMfaAppExcludeArgs;\nimport com.pulumi.okta.policy.inputs.RuleMfaAppIncludeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var exampleDefaultPolicy = PolicyFunctions.getDefaultPolicy(GetDefaultPolicyArgs.builder()\n            .type(\"MFA_ENROLL\")\n            .build());\n\n        var exampleRuleMfa = new RuleMfa(\"exampleRuleMfa\", RuleMfaArgs.builder()        \n            .policyId(exampleDefaultPolicy.applyValue(getDefaultPolicyResult -\u003e getDefaultPolicyResult.id()))\n            .appExcludes(RuleMfaAppExcludeArgs.builder()\n                .name(\"okta\")\n                .type(\"APP_TYPE\")\n                .build())\n            .appIncludes(RuleMfaAppIncludeArgs.builder()\n                .id(\"some_app_id\")\n                .type(\"APP\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleRuleMfa:\n    type: okta:policy:RuleMfa\n    properties:\n      policyId: ${exampleDefaultPolicy.id}\n      appExcludes:\n        - name: okta\n          type: APP_TYPE\n      appIncludes:\n        - id: some_app_id\n          type: APP\nvariables:\n  exampleDefaultPolicy:\n    fn::invoke:\n      Function: okta:policy:getDefaultPolicy\n      Arguments:\n        type: MFA_ENROLL\n```\n\nChecked `Okta` and unchecked `Applications` checkboxes in the `User is accessing` section corresponds to the following config:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleDefaultPolicy = okta.policy.getDefaultPolicy({\n    type: \"MFA_ENROLL\",\n});\nconst exampleRuleMfa = new okta.policy.RuleMfa(\"exampleRuleMfa\", {\n    policyId: exampleDefaultPolicy.then(exampleDefaultPolicy =\u003e exampleDefaultPolicy.id),\n    appIncludes: [{\n        name: \"okta\",\n        type: \"APP_TYPE\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_default_policy = okta.policy.get_default_policy(type=\"MFA_ENROLL\")\nexample_rule_mfa = okta.policy.RuleMfa(\"exampleRuleMfa\",\n    policy_id=example_default_policy.id,\n    app_includes=[okta.policy.RuleMfaAppIncludeArgs(\n        name=\"okta\",\n        type=\"APP_TYPE\",\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleDefaultPolicy = Okta.Policy.GetDefaultPolicy.Invoke(new()\n    {\n        Type = \"MFA_ENROLL\",\n    });\n\n    var exampleRuleMfa = new Okta.Policy.RuleMfa(\"exampleRuleMfa\", new()\n    {\n        PolicyId = exampleDefaultPolicy.Apply(getDefaultPolicyResult =\u003e getDefaultPolicyResult.Id),\n        AppIncludes = new[]\n        {\n            new Okta.Policy.Inputs.RuleMfaAppIncludeArgs\n            {\n                Name = \"okta\",\n                Type = \"APP_TYPE\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleDefaultPolicy, err := policy.GetDefaultPolicy(ctx, \u0026policy.GetDefaultPolicyArgs{\n\t\t\tType: \"MFA_ENROLL\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = policy.NewRuleMfa(ctx, \"exampleRuleMfa\", \u0026policy.RuleMfaArgs{\n\t\t\tPolicyId: *pulumi.String(exampleDefaultPolicy.Id),\n\t\t\tAppIncludes: policy.RuleMfaAppIncludeArray{\n\t\t\t\t\u0026policy.RuleMfaAppIncludeArgs{\n\t\t\t\t\tName: pulumi.String(\"okta\"),\n\t\t\t\t\tType: pulumi.String(\"APP_TYPE\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.PolicyFunctions;\nimport com.pulumi.okta.policy.inputs.GetDefaultPolicyArgs;\nimport com.pulumi.okta.policy.RuleMfa;\nimport com.pulumi.okta.policy.RuleMfaArgs;\nimport com.pulumi.okta.policy.inputs.RuleMfaAppIncludeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var exampleDefaultPolicy = PolicyFunctions.getDefaultPolicy(GetDefaultPolicyArgs.builder()\n            .type(\"MFA_ENROLL\")\n            .build());\n\n        var exampleRuleMfa = new RuleMfa(\"exampleRuleMfa\", RuleMfaArgs.builder()        \n            .policyId(exampleDefaultPolicy.applyValue(getDefaultPolicyResult -\u003e getDefaultPolicyResult.id()))\n            .appIncludes(RuleMfaAppIncludeArgs.builder()\n                .name(\"okta\")\n                .type(\"APP_TYPE\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleRuleMfa:\n    type: okta:policy:RuleMfa\n    properties:\n      policyId: ${exampleDefaultPolicy.id}\n      appIncludes:\n        - name: okta\n          type: APP_TYPE\nvariables:\n  exampleDefaultPolicy:\n    fn::invoke:\n      Function: okta:policy:getDefaultPolicy\n      Arguments:\n        type: MFA_ENROLL\n```\n\nChecked `Okta` and checked `Applications` (with `Any application that supports MFA enrollment` option) checkboxes in the `User is accessing` section corresponds to the following config:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleDefaultPolicy = okta.policy.getDefaultPolicy({\n    type: \"MFA_ENROLL\",\n});\nconst exampleRuleMfa = new okta.policy.RuleMfa(\"exampleRuleMfa\", {policyId: exampleDefaultPolicy.then(exampleDefaultPolicy =\u003e exampleDefaultPolicy.id)});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_default_policy = okta.policy.get_default_policy(type=\"MFA_ENROLL\")\nexample_rule_mfa = okta.policy.RuleMfa(\"exampleRuleMfa\", policy_id=example_default_policy.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleDefaultPolicy = Okta.Policy.GetDefaultPolicy.Invoke(new()\n    {\n        Type = \"MFA_ENROLL\",\n    });\n\n    var exampleRuleMfa = new Okta.Policy.RuleMfa(\"exampleRuleMfa\", new()\n    {\n        PolicyId = exampleDefaultPolicy.Apply(getDefaultPolicyResult =\u003e getDefaultPolicyResult.Id),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleDefaultPolicy, err := policy.GetDefaultPolicy(ctx, \u0026policy.GetDefaultPolicyArgs{\n\t\t\tType: \"MFA_ENROLL\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = policy.NewRuleMfa(ctx, \"exampleRuleMfa\", \u0026policy.RuleMfaArgs{\n\t\t\tPolicyId: *pulumi.String(exampleDefaultPolicy.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.PolicyFunctions;\nimport com.pulumi.okta.policy.inputs.GetDefaultPolicyArgs;\nimport com.pulumi.okta.policy.RuleMfa;\nimport com.pulumi.okta.policy.RuleMfaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var exampleDefaultPolicy = PolicyFunctions.getDefaultPolicy(GetDefaultPolicyArgs.builder()\n            .type(\"MFA_ENROLL\")\n            .build());\n\n        var exampleRuleMfa = new RuleMfa(\"exampleRuleMfa\", RuleMfaArgs.builder()        \n            .policyId(exampleDefaultPolicy.applyValue(getDefaultPolicyResult -\u003e getDefaultPolicyResult.id()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleRuleMfa:\n    type: okta:policy:RuleMfa\n    properties:\n      policyId: ${exampleDefaultPolicy.id}\nvariables:\n  exampleDefaultPolicy:\n    fn::invoke:\n      Function: okta:policy:getDefaultPolicy\n      Arguments:\n        type: MFA_ENROLL\n```\n\nChecked `Okta` and checked `Applications` (with `Specific applications` option) checkboxes in the `User is accessing` section corresponds to the following config:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleDefaultPolicy = okta.policy.getDefaultPolicy({\n    type: \"MFA_ENROLL\",\n});\nconst exampleRuleMfa = new okta.policy.RuleMfa(\"exampleRuleMfa\", {\n    policyId: exampleDefaultPolicy.then(exampleDefaultPolicy =\u003e exampleDefaultPolicy.id),\n    appIncludes: [\n        {\n            name: \"okta\",\n            type: \"APP_TYPE\",\n        },\n        {\n            id: \"some_app_id\",\n            type: \"APP\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_default_policy = okta.policy.get_default_policy(type=\"MFA_ENROLL\")\nexample_rule_mfa = okta.policy.RuleMfa(\"exampleRuleMfa\",\n    policy_id=example_default_policy.id,\n    app_includes=[\n        okta.policy.RuleMfaAppIncludeArgs(\n            name=\"okta\",\n            type=\"APP_TYPE\",\n        ),\n        okta.policy.RuleMfaAppIncludeArgs(\n            id=\"some_app_id\",\n            type=\"APP\",\n        ),\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleDefaultPolicy = Okta.Policy.GetDefaultPolicy.Invoke(new()\n    {\n        Type = \"MFA_ENROLL\",\n    });\n\n    var exampleRuleMfa = new Okta.Policy.RuleMfa(\"exampleRuleMfa\", new()\n    {\n        PolicyId = exampleDefaultPolicy.Apply(getDefaultPolicyResult =\u003e getDefaultPolicyResult.Id),\n        AppIncludes = new[]\n        {\n            new Okta.Policy.Inputs.RuleMfaAppIncludeArgs\n            {\n                Name = \"okta\",\n                Type = \"APP_TYPE\",\n            },\n            new Okta.Policy.Inputs.RuleMfaAppIncludeArgs\n            {\n                Id = \"some_app_id\",\n                Type = \"APP\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleDefaultPolicy, err := policy.GetDefaultPolicy(ctx, \u0026policy.GetDefaultPolicyArgs{\n\t\t\tType: \"MFA_ENROLL\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = policy.NewRuleMfa(ctx, \"exampleRuleMfa\", \u0026policy.RuleMfaArgs{\n\t\t\tPolicyId: *pulumi.String(exampleDefaultPolicy.Id),\n\t\t\tAppIncludes: policy.RuleMfaAppIncludeArray{\n\t\t\t\t\u0026policy.RuleMfaAppIncludeArgs{\n\t\t\t\t\tName: pulumi.String(\"okta\"),\n\t\t\t\t\tType: pulumi.String(\"APP_TYPE\"),\n\t\t\t\t},\n\t\t\t\t\u0026policy.RuleMfaAppIncludeArgs{\n\t\t\t\t\tId:   pulumi.String(\"some_app_id\"),\n\t\t\t\t\tType: pulumi.String(\"APP\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.PolicyFunctions;\nimport com.pulumi.okta.policy.inputs.GetDefaultPolicyArgs;\nimport com.pulumi.okta.policy.RuleMfa;\nimport com.pulumi.okta.policy.RuleMfaArgs;\nimport com.pulumi.okta.policy.inputs.RuleMfaAppIncludeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var exampleDefaultPolicy = PolicyFunctions.getDefaultPolicy(GetDefaultPolicyArgs.builder()\n            .type(\"MFA_ENROLL\")\n            .build());\n\n        var exampleRuleMfa = new RuleMfa(\"exampleRuleMfa\", RuleMfaArgs.builder()        \n            .policyId(exampleDefaultPolicy.applyValue(getDefaultPolicyResult -\u003e getDefaultPolicyResult.id()))\n            .appIncludes(            \n                RuleMfaAppIncludeArgs.builder()\n                    .name(\"okta\")\n                    .type(\"APP_TYPE\")\n                    .build(),\n                RuleMfaAppIncludeArgs.builder()\n                    .id(\"some_app_id\")\n                    .type(\"APP\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleRuleMfa:\n    type: okta:policy:RuleMfa\n    properties:\n      policyId: ${exampleDefaultPolicy.id}\n      appIncludes:\n        - name: okta\n          type: APP_TYPE\n        - id: some_app_id\n          type: APP\nvariables:\n  exampleDefaultPolicy:\n    fn::invoke:\n      Function: okta:policy:getDefaultPolicy\n      Arguments:\n        type: MFA_ENROLL\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Policy Rule can be imported via the Policy and Rule ID.\n\n```sh\n $ pulumi import okta:policy/ruleMfa:RuleMfa example \u0026#60;policy id\u0026#62;/\u0026#60;rule id\u0026#62;\n```\n\n ",
            "properties": {
                "appExcludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleMfaAppExclude:RuleMfaAppExclude"
                    },
                    "description": "Applications to exclude\n"
                },
                "appIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleMfaAppInclude:RuleMfaAppInclude"
                    },
                    "description": "Applications to include in discovery rule. **IMPORTANT**: this field is only available in Classic Organizations.\n"
                },
                "enroll": {
                    "type": "string",
                    "description": "When a user should be prompted for MFA. It can be `\"CHALLENGE\"`, `\"LOGIN\"`, or `\"NEVER\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Use if the `type` is `\"APP_TYPE\"` to indicate the type of application(s) to include in instances where an entire group (i.e. `yahoo_mail`) of applications should be included.\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to exclude. Conflicts with `network_includes`.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to include. Conflicts with `network_excludes`.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "appExcludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleMfaAppExclude:RuleMfaAppExclude"
                    },
                    "description": "Applications to exclude\n"
                },
                "appIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleMfaAppInclude:RuleMfaAppInclude"
                    },
                    "description": "Applications to include in discovery rule. **IMPORTANT**: this field is only available in Classic Organizations.\n"
                },
                "enroll": {
                    "type": "string",
                    "description": "When a user should be prompted for MFA. It can be `\"CHALLENGE\"`, `\"LOGIN\"`, or `\"NEVER\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Use if the `type` is `\"APP_TYPE\"` to indicate the type of application(s) to include in instances where an entire group (i.e. `yahoo_mail`) of applications should be included.\n",
                    "willReplaceOnChanges": true
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to exclude. Conflicts with `network_includes`.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to include. Conflicts with `network_excludes`.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n",
                    "willReplaceOnChanges": true
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RuleMfa resources.\n",
                "properties": {
                    "appExcludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleMfaAppExclude:RuleMfaAppExclude"
                        },
                        "description": "Applications to exclude\n"
                    },
                    "appIncludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleMfaAppInclude:RuleMfaAppInclude"
                        },
                        "description": "Applications to include in discovery rule. **IMPORTANT**: this field is only available in Classic Organizations.\n"
                    },
                    "enroll": {
                        "type": "string",
                        "description": "When a user should be prompted for MFA. It can be `\"CHALLENGE\"`, `\"LOGIN\"`, or `\"NEVER\"`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Use if the `type` is `\"APP_TYPE\"` to indicate the type of application(s) to include in instances where an entire group (i.e. `yahoo_mail`) of applications should be included.\n",
                        "willReplaceOnChanges": true
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network zones to exclude. Conflicts with `network_includes`.\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network zones to include. Conflicts with `network_excludes`.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Policy ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                    },
                    "usersExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of User IDs to Exclude\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/rulePassword:RulePassword": {
            "description": "Creates a Password Policy Rule.\n\nThis resource allows you to create and configure a Password Policy Rule.\n\n\n## Import\n\nA Policy Rule can be imported via the Policy and Rule ID.\n\n```sh\n $ pulumi import okta:policy/rulePassword:RulePassword example \u0026#60;policy id\u0026#62;/\u0026#60;rule id\u0026#62;\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name. Type `\"string\"`\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`. Type `\"string\"`\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to exclude. Conflicts with `network_includes`. Type `\"list(string)\"`\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to include. Conflicts with `network_excludes`. Type `\"list(string)\"`\n"
                },
                "passwordChange": {
                    "type": "string",
                    "description": "Allow or deny a user to change their password: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"ALLOW\"`. Type `\"string\"`\n"
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Allow or deny a user to reset their password: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"ALLOW\"`. Type `\"string\"`\n"
                },
                "passwordUnlock": {
                    "type": "string",
                    "description": "Allow or deny a user to unlock: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"DENY\"`, Type `\"string\"`\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there. Type `\"number\"`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`. Type `\"string\"`\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The users to exclude. Type `\"set(string)\"`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name. Type `\"string\"`\n",
                    "willReplaceOnChanges": true
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`. Type `\"string\"`\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to exclude. Conflicts with `network_includes`. Type `\"list(string)\"`\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to include. Conflicts with `network_excludes`. Type `\"list(string)\"`\n"
                },
                "passwordChange": {
                    "type": "string",
                    "description": "Allow or deny a user to change their password: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"ALLOW\"`. Type `\"string\"`\n"
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Allow or deny a user to reset their password: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"ALLOW\"`. Type `\"string\"`\n"
                },
                "passwordUnlock": {
                    "type": "string",
                    "description": "Allow or deny a user to unlock: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"DENY\"`, Type `\"string\"`\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n",
                    "willReplaceOnChanges": true
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there. Type `\"number\"`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`. Type `\"string\"`\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The users to exclude. Type `\"set(string)\"`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RulePassword resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Policy Rule Name. Type `\"string\"`\n",
                        "willReplaceOnChanges": true
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`. Type `\"string\"`\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network zones to exclude. Conflicts with `network_includes`. Type `\"list(string)\"`\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network zones to include. Conflicts with `network_excludes`. Type `\"list(string)\"`\n"
                    },
                    "passwordChange": {
                        "type": "string",
                        "description": "Allow or deny a user to change their password: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"ALLOW\"`. Type `\"string\"`\n"
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Allow or deny a user to reset their password: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"ALLOW\"`. Type `\"string\"`\n"
                    },
                    "passwordUnlock": {
                        "type": "string",
                        "description": "Allow or deny a user to unlock: `\"ALLOW\"` or `\"DENY\"`. By default, it is `\"DENY\"`, Type `\"string\"`\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Policy ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there. Type `\"number\"`\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`. Type `\"string\"`\n"
                    },
                    "usersExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The users to exclude. Type `\"set(string)\"`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/ruleSignon:RuleSignon": {
            "description": "Creates a Sign On Policy Rule. In case `Invalid condition type specified: riskScore.` error is thrown, set `risc_level`\nto an empty string, since this feature is not enabled.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.policy.Signon(\"test\", {\n    status: \"ACTIVE\",\n    description: \"Example Policy\",\n});\nconst newCity = okta.getBehaviour({\n    name: \"New City\",\n});\nconst example = new okta.policy.RuleSignon(\"example\", {\n    access: \"CHALLENGE\",\n    authtype: \"RADIUS\",\n    networkConnection: \"ANYWHERE\",\n    policyId: okta_policy_signon.example.id,\n    status: \"ACTIVE\",\n    riscLevel: \"HIGH\",\n    behaviors: [newCity.then(newCity =\u003e newCity.id)],\n    factorSequences: [\n        {\n            primaryCriteriaFactorType: \"token:hotp\",\n            primaryCriteriaProvider: \"CUSTOM\",\n            secondaryCriterias: [\n                {\n                    factorType: \"token:software:totp\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"push\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"password\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"question\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"sms\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"token:software:totp\",\n                    provider: \"GOOGLE\",\n                },\n                {\n                    factorType: \"email\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"call\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"webauthn\",\n                    provider: \"FIDO\",\n                },\n                {\n                    factorType: \"token\",\n                    provider: \"RSA\",\n                },\n                {\n                    factorType: \"token\",\n                    provider: \"SYMANTEC\",\n                },\n            ],\n        },\n        {\n            primaryCriteriaFactorType: \"token:software:totp\",\n            primaryCriteriaProvider: \"OKTA\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.policy.Signon(\"test\",\n    status=\"ACTIVE\",\n    description=\"Example Policy\")\nnew_city = okta.get_behaviour(name=\"New City\")\nexample = okta.policy.RuleSignon(\"example\",\n    access=\"CHALLENGE\",\n    authtype=\"RADIUS\",\n    network_connection=\"ANYWHERE\",\n    policy_id=okta_policy_signon[\"example\"][\"id\"],\n    status=\"ACTIVE\",\n    risc_level=\"HIGH\",\n    behaviors=[new_city.id],\n    factor_sequences=[\n        okta.policy.RuleSignonFactorSequenceArgs(\n            primary_criteria_factor_type=\"token:hotp\",\n            primary_criteria_provider=\"CUSTOM\",\n            secondary_criterias=[\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"token:software:totp\",\n                    provider=\"OKTA\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"push\",\n                    provider=\"OKTA\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"password\",\n                    provider=\"OKTA\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"question\",\n                    provider=\"OKTA\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"sms\",\n                    provider=\"OKTA\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"token:software:totp\",\n                    provider=\"GOOGLE\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"email\",\n                    provider=\"OKTA\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"call\",\n                    provider=\"OKTA\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"webauthn\",\n                    provider=\"FIDO\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"token\",\n                    provider=\"RSA\",\n                ),\n                okta.policy.RuleSignonFactorSequenceSecondaryCriteriaArgs(\n                    factor_type=\"token\",\n                    provider=\"SYMANTEC\",\n                ),\n            ],\n        ),\n        okta.policy.RuleSignonFactorSequenceArgs(\n            primary_criteria_factor_type=\"token:software:totp\",\n            primary_criteria_provider=\"OKTA\",\n        ),\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Okta.Policy.Signon(\"test\", new()\n    {\n        Status = \"ACTIVE\",\n        Description = \"Example Policy\",\n    });\n\n    var newCity = Okta.GetBehaviour.Invoke(new()\n    {\n        Name = \"New City\",\n    });\n\n    var example = new Okta.Policy.RuleSignon(\"example\", new()\n    {\n        Access = \"CHALLENGE\",\n        Authtype = \"RADIUS\",\n        NetworkConnection = \"ANYWHERE\",\n        PolicyId = okta_policy_signon.Example.Id,\n        Status = \"ACTIVE\",\n        RiscLevel = \"HIGH\",\n        Behaviors = new[]\n        {\n            newCity.Apply(getBehaviourResult =\u003e getBehaviourResult.Id),\n        },\n        FactorSequences = new[]\n        {\n            new Okta.Policy.Inputs.RuleSignonFactorSequenceArgs\n            {\n                PrimaryCriteriaFactorType = \"token:hotp\",\n                PrimaryCriteriaProvider = \"CUSTOM\",\n                SecondaryCriterias = new[]\n                {\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"token:software:totp\",\n                        Provider = \"OKTA\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"push\",\n                        Provider = \"OKTA\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"password\",\n                        Provider = \"OKTA\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"question\",\n                        Provider = \"OKTA\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"sms\",\n                        Provider = \"OKTA\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"token:software:totp\",\n                        Provider = \"GOOGLE\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"email\",\n                        Provider = \"OKTA\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"call\",\n                        Provider = \"OKTA\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"webauthn\",\n                        Provider = \"FIDO\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"token\",\n                        Provider = \"RSA\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"token\",\n                        Provider = \"SYMANTEC\",\n                    },\n                },\n            },\n            new Okta.Policy.Inputs.RuleSignonFactorSequenceArgs\n            {\n                PrimaryCriteriaFactorType = \"token:software:totp\",\n                PrimaryCriteriaProvider = \"OKTA\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.NewSignon(ctx, \"test\", \u0026policy.SignonArgs{\n\t\t\tStatus:      pulumi.String(\"ACTIVE\"),\n\t\t\tDescription: pulumi.String(\"Example Policy\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tnewCity, err := okta.LookupBehaviour(ctx, \u0026okta.LookupBehaviourArgs{\n\t\t\tName: pulumi.StringRef(\"New City\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = policy.NewRuleSignon(ctx, \"example\", \u0026policy.RuleSignonArgs{\n\t\t\tAccess:            pulumi.String(\"CHALLENGE\"),\n\t\t\tAuthtype:          pulumi.String(\"RADIUS\"),\n\t\t\tNetworkConnection: pulumi.String(\"ANYWHERE\"),\n\t\t\tPolicyId:          pulumi.Any(okta_policy_signon.Example.Id),\n\t\t\tStatus:            pulumi.String(\"ACTIVE\"),\n\t\t\tRiscLevel:         pulumi.String(\"HIGH\"),\n\t\t\tBehaviors: pulumi.StringArray{\n\t\t\t\t*pulumi.String(newCity.Id),\n\t\t\t},\n\t\t\tFactorSequences: policy.RuleSignonFactorSequenceArray{\n\t\t\t\t\u0026policy.RuleSignonFactorSequenceArgs{\n\t\t\t\t\tPrimaryCriteriaFactorType: pulumi.String(\"token:hotp\"),\n\t\t\t\t\tPrimaryCriteriaProvider:   pulumi.String(\"CUSTOM\"),\n\t\t\t\t\tSecondaryCriterias: policy.RuleSignonFactorSequenceSecondaryCriteriaArray{\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"token:software:totp\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"OKTA\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"push\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"OKTA\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"password\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"OKTA\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"question\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"OKTA\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"sms\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"OKTA\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"token:software:totp\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"GOOGLE\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"email\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"OKTA\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"call\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"OKTA\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"webauthn\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"FIDO\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"token\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"RSA\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"token\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"SYMANTEC\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026policy.RuleSignonFactorSequenceArgs{\n\t\t\t\t\tPrimaryCriteriaFactorType: pulumi.String(\"token:software:totp\"),\n\t\t\t\t\tPrimaryCriteriaProvider:   pulumi.String(\"OKTA\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.Signon;\nimport com.pulumi.okta.policy.SignonArgs;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetBehaviourArgs;\nimport com.pulumi.okta.policy.RuleSignon;\nimport com.pulumi.okta.policy.RuleSignonArgs;\nimport com.pulumi.okta.policy.inputs.RuleSignonFactorSequenceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new Signon(\"test\", SignonArgs.builder()        \n            .status(\"ACTIVE\")\n            .description(\"Example Policy\")\n            .build());\n\n        final var newCity = OktaFunctions.getBehaviour(GetBehaviourArgs.builder()\n            .name(\"New City\")\n            .build());\n\n        var example = new RuleSignon(\"example\", RuleSignonArgs.builder()        \n            .access(\"CHALLENGE\")\n            .authtype(\"RADIUS\")\n            .networkConnection(\"ANYWHERE\")\n            .policyId(okta_policy_signon.example().id())\n            .status(\"ACTIVE\")\n            .riscLevel(\"HIGH\")\n            .behaviors(newCity.applyValue(getBehaviourResult -\u003e getBehaviourResult.id()))\n            .factorSequences(            \n                RuleSignonFactorSequenceArgs.builder()\n                    .primaryCriteriaFactorType(\"token:hotp\")\n                    .primaryCriteriaProvider(\"CUSTOM\")\n                    .secondaryCriterias(                    \n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"token:software:totp\")\n                            .provider(\"OKTA\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"push\")\n                            .provider(\"OKTA\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"password\")\n                            .provider(\"OKTA\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"question\")\n                            .provider(\"OKTA\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"sms\")\n                            .provider(\"OKTA\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"token:software:totp\")\n                            .provider(\"GOOGLE\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"email\")\n                            .provider(\"OKTA\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"call\")\n                            .provider(\"OKTA\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"webauthn\")\n                            .provider(\"FIDO\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"token\")\n                            .provider(\"RSA\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"token\")\n                            .provider(\"SYMANTEC\")\n                            .build())\n                    .build(),\n                RuleSignonFactorSequenceArgs.builder()\n                    .primaryCriteriaFactorType(\"token:software:totp\")\n                    .primaryCriteriaProvider(\"OKTA\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: okta:policy:Signon\n    properties:\n      status: ACTIVE\n      description: Example Policy\n  example:\n    type: okta:policy:RuleSignon\n    properties:\n      access: CHALLENGE\n      authtype: RADIUS\n      networkConnection: ANYWHERE\n      policyId: ${okta_policy_signon.example.id}\n      status: ACTIVE\n      riscLevel: HIGH\n      behaviors:\n        - ${newCity.id}\n      factorSequences:\n        - primaryCriteriaFactorType: token:hotp\n          primaryCriteriaProvider: CUSTOM\n          secondaryCriterias:\n            - factorType: token:software:totp\n              provider: OKTA\n            - factorType: push\n              provider: OKTA\n            - factorType: password\n              provider: OKTA\n            - factorType: question\n              provider: OKTA\n            - factorType: sms\n              provider: OKTA\n            - factorType: token:software:totp\n              provider: GOOGLE\n            - factorType: email\n              provider: OKTA\n            - factorType: call\n              provider: OKTA\n            - factorType: webauthn\n              provider: FIDO\n            - factorType: token\n              provider: RSA\n            - factorType: token\n              provider: SYMANTEC\n        - primaryCriteriaFactorType: token:software:totp\n          primaryCriteriaProvider: OKTA\nvariables:\n  newCity:\n    fn::invoke:\n      Function: okta:getBehaviour\n      Arguments:\n        name: New City\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Policy Rule can be imported via the Policy and Rule ID.\n\n```sh\n $ pulumi import okta:policy/ruleSignon:RuleSignon example \u0026#60;policy id\u0026#62;/\u0026#60;rule id\u0026#62;\n```\n\n ",
            "properties": {
                "access": {
                    "type": "string",
                    "description": "Allow or deny access based on the rule conditions: `\"ALLOW\"`, `\"DENY\"` or `\"CHALLENGE\"`. The default is `\"ALLOW\"`.\n"
                },
                "authtype": {
                    "type": "string",
                    "description": "Authentication entrypoint: `\"ANY\"`, `\"LDAP_INTERFACE\"` or `\"RADIUS\"`.\n"
                },
                "behaviors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of behavior IDs.\n"
                },
                "factorSequences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleSignonFactorSequence:RuleSignonFactorSequence"
                    },
                    "description": "Auth factor sequences. Should be set if `access = \"CHALLENGE\"`.\n"
                },
                "identityProvider": {
                    "type": "string",
                    "description": "Defines the identity provider for this rule. Valid values are `\"ANY\"`, `\"OKTA\"`, and `\"SPECIFIC_IDP\"`.\n\n\u003e **WARNING**: Use of `identity_provider` requires a feature flag to be enabled.\n"
                },
                "identityProviderIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When identity_provider is `\"SPECIFIC_IDP\"` then this is the list of IdP IDs to apply the rule on.\n"
                },
                "mfaLifetime": {
                    "type": "integer",
                    "description": "Elapsed time before the next MFA challenge.\n"
                },
                "mfaPrompt": {
                    "type": "string",
                    "description": "Prompt for MFA based on the device used, a factor session lifetime, or every sign-on attempt: `\"DEVICE\"`, `\"SESSION\"` or `\"ALWAYS\"`.\n"
                },
                "mfaRememberDevice": {
                    "type": "boolean",
                    "description": "Remember MFA device. The default `false`.\n"
                },
                "mfaRequired": {
                    "type": "boolean",
                    "description": "Require MFA. By default is `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name.\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to exclude. Conflicts with `network_includes`.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to include. Conflicts with `network_excludes`.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n"
                },
                "primaryFactor": {
                    "type": "string",
                    "description": "Rule's primary factor. **WARNING** Ony works as a part of the Identity Engine. Valid values: \n`\"PASSWORD_IDP_ANY_FACTOR\"`, `\"PASSWORD_IDP\"`.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "riscLevel": {
                    "type": "string",
                    "description": "Risc level: `\"ANY\"`, `\"LOW\"`, `\"MEDIUM\"` or `\"HIGH\"`. Default is `\"ANY\"`. It can be also \nset to an empty string in case `RISC_SCORING` org feature flag is disabled.\n"
                },
                "sessionIdle": {
                    "type": "integer",
                    "description": "Max minutes a session can be idle.,\n"
                },
                "sessionLifetime": {
                    "type": "integer",
                    "description": "Max minutes a session is active: Disable = 0.\n"
                },
                "sessionPersistent": {
                    "type": "boolean",
                    "description": "Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session cookies.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of user IDs that would be excluded when rules are processed.\n"
                }
            },
            "required": [
                "name",
                "primaryFactor"
            ],
            "inputProperties": {
                "access": {
                    "type": "string",
                    "description": "Allow or deny access based on the rule conditions: `\"ALLOW\"`, `\"DENY\"` or `\"CHALLENGE\"`. The default is `\"ALLOW\"`.\n"
                },
                "authtype": {
                    "type": "string",
                    "description": "Authentication entrypoint: `\"ANY\"`, `\"LDAP_INTERFACE\"` or `\"RADIUS\"`.\n"
                },
                "behaviors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of behavior IDs.\n"
                },
                "factorSequences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleSignonFactorSequence:RuleSignonFactorSequence"
                    },
                    "description": "Auth factor sequences. Should be set if `access = \"CHALLENGE\"`.\n"
                },
                "identityProvider": {
                    "type": "string",
                    "description": "Defines the identity provider for this rule. Valid values are `\"ANY\"`, `\"OKTA\"`, and `\"SPECIFIC_IDP\"`.\n\n\u003e **WARNING**: Use of `identity_provider` requires a feature flag to be enabled.\n"
                },
                "identityProviderIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When identity_provider is `\"SPECIFIC_IDP\"` then this is the list of IdP IDs to apply the rule on.\n"
                },
                "mfaLifetime": {
                    "type": "integer",
                    "description": "Elapsed time before the next MFA challenge.\n"
                },
                "mfaPrompt": {
                    "type": "string",
                    "description": "Prompt for MFA based on the device used, a factor session lifetime, or every sign-on attempt: `\"DEVICE\"`, `\"SESSION\"` or `\"ALWAYS\"`.\n"
                },
                "mfaRememberDevice": {
                    "type": "boolean",
                    "description": "Remember MFA device. The default `false`.\n"
                },
                "mfaRequired": {
                    "type": "boolean",
                    "description": "Require MFA. By default is `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name.\n",
                    "willReplaceOnChanges": true
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to exclude. Conflicts with `network_includes`.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network zones to include. Conflicts with `network_excludes`.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID.\n",
                    "willReplaceOnChanges": true
                },
                "primaryFactor": {
                    "type": "string",
                    "description": "Rule's primary factor. **WARNING** Ony works as a part of the Identity Engine. Valid values: \n`\"PASSWORD_IDP_ANY_FACTOR\"`, `\"PASSWORD_IDP\"`.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "riscLevel": {
                    "type": "string",
                    "description": "Risc level: `\"ANY\"`, `\"LOW\"`, `\"MEDIUM\"` or `\"HIGH\"`. Default is `\"ANY\"`. It can be also \nset to an empty string in case `RISC_SCORING` org feature flag is disabled.\n"
                },
                "sessionIdle": {
                    "type": "integer",
                    "description": "Max minutes a session can be idle.,\n"
                },
                "sessionLifetime": {
                    "type": "integer",
                    "description": "Max minutes a session is active: Disable = 0.\n"
                },
                "sessionPersistent": {
                    "type": "boolean",
                    "description": "Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session cookies.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of user IDs that would be excluded when rules are processed.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RuleSignon resources.\n",
                "properties": {
                    "access": {
                        "type": "string",
                        "description": "Allow or deny access based on the rule conditions: `\"ALLOW\"`, `\"DENY\"` or `\"CHALLENGE\"`. The default is `\"ALLOW\"`.\n"
                    },
                    "authtype": {
                        "type": "string",
                        "description": "Authentication entrypoint: `\"ANY\"`, `\"LDAP_INTERFACE\"` or `\"RADIUS\"`.\n"
                    },
                    "behaviors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of behavior IDs.\n"
                    },
                    "factorSequences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleSignonFactorSequence:RuleSignonFactorSequence"
                        },
                        "description": "Auth factor sequences. Should be set if `access = \"CHALLENGE\"`.\n"
                    },
                    "identityProvider": {
                        "type": "string",
                        "description": "Defines the identity provider for this rule. Valid values are `\"ANY\"`, `\"OKTA\"`, and `\"SPECIFIC_IDP\"`.\n\n\u003e **WARNING**: Use of `identity_provider` requires a feature flag to be enabled.\n"
                    },
                    "identityProviderIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "When identity_provider is `\"SPECIFIC_IDP\"` then this is the list of IdP IDs to apply the rule on.\n"
                    },
                    "mfaLifetime": {
                        "type": "integer",
                        "description": "Elapsed time before the next MFA challenge.\n"
                    },
                    "mfaPrompt": {
                        "type": "string",
                        "description": "Prompt for MFA based on the device used, a factor session lifetime, or every sign-on attempt: `\"DEVICE\"`, `\"SESSION\"` or `\"ALWAYS\"`.\n"
                    },
                    "mfaRememberDevice": {
                        "type": "boolean",
                        "description": "Remember MFA device. The default `false`.\n"
                    },
                    "mfaRequired": {
                        "type": "boolean",
                        "description": "Require MFA. By default is `false`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Rule Name.\n",
                        "willReplaceOnChanges": true
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "Network selection mode: `\"ANYWHERE\"`, `\"ZONE\"`, `\"ON_NETWORK\"`, or `\"OFF_NETWORK\"`.\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network zones to exclude. Conflicts with `network_includes`.\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network zones to include. Conflicts with `network_excludes`.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Policy ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "primaryFactor": {
                        "type": "string",
                        "description": "Rule's primary factor. **WARNING** Ony works as a part of the Identity Engine. Valid values: \n`\"PASSWORD_IDP_ANY_FACTOR\"`, `\"PASSWORD_IDP\"`.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                    },
                    "riscLevel": {
                        "type": "string",
                        "description": "Risc level: `\"ANY\"`, `\"LOW\"`, `\"MEDIUM\"` or `\"HIGH\"`. Default is `\"ANY\"`. It can be also \nset to an empty string in case `RISC_SCORING` org feature flag is disabled.\n"
                    },
                    "sessionIdle": {
                        "type": "integer",
                        "description": "Max minutes a session can be idle.,\n"
                    },
                    "sessionLifetime": {
                        "type": "integer",
                        "description": "Max minutes a session is active: Disable = 0.\n"
                    },
                    "sessionPersistent": {
                        "type": "boolean",
                        "description": "Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session cookies.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Rule Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                    },
                    "usersExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of user IDs that would be excluded when rules are processed.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/signon:Signon": {
            "description": "Creates a Sign On Policy.\n\nThis resource allows you to create and configure a Sign On Policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.policy.Signon(\"example\", {\n    description: \"Example\",\n    groupsIncludeds: [data.okta_group.everyone.id],\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.policy.Signon(\"example\",\n    description=\"Example\",\n    groups_includeds=[data[\"okta_group\"][\"everyone\"][\"id\"]],\n    status=\"ACTIVE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Policy.Signon(\"example\", new()\n    {\n        Description = \"Example\",\n        GroupsIncludeds = new[]\n        {\n            data.Okta_group.Everyone.Id,\n        },\n        Status = \"ACTIVE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.NewSignon(ctx, \"example\", \u0026policy.SignonArgs{\n\t\t\tDescription: pulumi.String(\"Example\"),\n\t\t\tGroupsIncludeds: pulumi.StringArray{\n\t\t\t\tdata.Okta_group.Everyone.Id,\n\t\t\t},\n\t\t\tStatus: pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.Signon;\nimport com.pulumi.okta.policy.SignonArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Signon(\"example\", SignonArgs.builder()        \n            .description(\"Example\")\n            .groupsIncludeds(data.okta_group().everyone().id())\n            .status(\"ACTIVE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:policy:Signon\n    properties:\n      description: Example\n      groupsIncludeds:\n        - ${data.okta_group.everyone.id}\n      status: ACTIVE\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Sign On Policy can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:policy/signon:Signon example \u0026#60;policy id\u0026#62;\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Policy Description.\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the policy.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Policy Description.\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the policy.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Signon resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Policy Description.\n"
                    },
                    "groupsIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Group IDs to Include.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Name.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of the policy.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Status: `\"ACTIVE\"` or `\"INACTIVE\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:profile/mapping:Mapping": {
            "description": "This resource allows you to manage a profile mapping by source and target IDs.\n\n\u003e **NOTE:** If using this resource with OAuth2 scopes, this resource requires `okta.profileMappings.manage` scope.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst user = okta.user.getUserProfileMappingSource({});\nconst example = new okta.profile.Mapping(\"example\", {\n    deleteWhenAbsent: true,\n    mappings: [\n        {\n            expression: \"appuser.firstName\",\n            id: \"firstName\",\n        },\n        {\n            expression: \"appuser.lastName\",\n            id: \"lastName\",\n        },\n        {\n            expression: \"appuser.email\",\n            id: \"email\",\n        },\n        {\n            expression: \"appuser.email\",\n            id: \"login\",\n        },\n    ],\n    sourceId: \"\u003csource id\u003e\",\n    targetId: user.then(user =\u003e user.id),\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nuser = okta.user.get_user_profile_mapping_source()\nexample = okta.profile.Mapping(\"example\",\n    delete_when_absent=True,\n    mappings=[\n        okta.profile.MappingMappingArgs(\n            expression=\"appuser.firstName\",\n            id=\"firstName\",\n        ),\n        okta.profile.MappingMappingArgs(\n            expression=\"appuser.lastName\",\n            id=\"lastName\",\n        ),\n        okta.profile.MappingMappingArgs(\n            expression=\"appuser.email\",\n            id=\"email\",\n        ),\n        okta.profile.MappingMappingArgs(\n            expression=\"appuser.email\",\n            id=\"login\",\n        ),\n    ],\n    source_id=\"\u003csource id\u003e\",\n    target_id=user.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = Okta.User.GetUserProfileMappingSource.Invoke();\n\n    var example = new Okta.Profile.Mapping(\"example\", new()\n    {\n        DeleteWhenAbsent = true,\n        Mappings = new[]\n        {\n            new Okta.Profile.Inputs.MappingMappingArgs\n            {\n                Expression = \"appuser.firstName\",\n                Id = \"firstName\",\n            },\n            new Okta.Profile.Inputs.MappingMappingArgs\n            {\n                Expression = \"appuser.lastName\",\n                Id = \"lastName\",\n            },\n            new Okta.Profile.Inputs.MappingMappingArgs\n            {\n                Expression = \"appuser.email\",\n                Id = \"email\",\n            },\n            new Okta.Profile.Inputs.MappingMappingArgs\n            {\n                Expression = \"appuser.email\",\n                Id = \"login\",\n            },\n        },\n        SourceId = \"\u003csource id\u003e\",\n        TargetId = user.Apply(getUserProfileMappingSourceResult =\u003e getUserProfileMappingSourceResult.Id),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/profile\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tuser, err := user.GetUserProfileMappingSource(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = profile.NewMapping(ctx, \"example\", \u0026profile.MappingArgs{\n\t\t\tDeleteWhenAbsent: pulumi.Bool(true),\n\t\t\tMappings: profile.MappingMappingArray{\n\t\t\t\t\u0026profile.MappingMappingArgs{\n\t\t\t\t\tExpression: pulumi.String(\"appuser.firstName\"),\n\t\t\t\t\tId:         pulumi.String(\"firstName\"),\n\t\t\t\t},\n\t\t\t\t\u0026profile.MappingMappingArgs{\n\t\t\t\t\tExpression: pulumi.String(\"appuser.lastName\"),\n\t\t\t\t\tId:         pulumi.String(\"lastName\"),\n\t\t\t\t},\n\t\t\t\t\u0026profile.MappingMappingArgs{\n\t\t\t\t\tExpression: pulumi.String(\"appuser.email\"),\n\t\t\t\t\tId:         pulumi.String(\"email\"),\n\t\t\t\t},\n\t\t\t\t\u0026profile.MappingMappingArgs{\n\t\t\t\t\tExpression: pulumi.String(\"appuser.email\"),\n\t\t\t\t\tId:         pulumi.String(\"login\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tSourceId: pulumi.String(\"\u003csource id\u003e\"),\n\t\t\tTargetId: *pulumi.String(user.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.UserFunctions;\nimport com.pulumi.okta.profile.Mapping;\nimport com.pulumi.okta.profile.MappingArgs;\nimport com.pulumi.okta.profile.inputs.MappingMappingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = UserFunctions.getUserProfileMappingSource();\n\n        var example = new Mapping(\"example\", MappingArgs.builder()        \n            .deleteWhenAbsent(true)\n            .mappings(            \n                MappingMappingArgs.builder()\n                    .expression(\"appuser.firstName\")\n                    .id(\"firstName\")\n                    .build(),\n                MappingMappingArgs.builder()\n                    .expression(\"appuser.lastName\")\n                    .id(\"lastName\")\n                    .build(),\n                MappingMappingArgs.builder()\n                    .expression(\"appuser.email\")\n                    .id(\"email\")\n                    .build(),\n                MappingMappingArgs.builder()\n                    .expression(\"appuser.email\")\n                    .id(\"login\")\n                    .build())\n            .sourceId(\"\u003csource id\u003e\")\n            .targetId(user.applyValue(getUserProfileMappingSourceResult -\u003e getUserProfileMappingSourceResult.id()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:profile:Mapping\n    properties:\n      deleteWhenAbsent: true\n      mappings:\n        - expression: appuser.firstName\n          id: firstName\n        - expression: appuser.lastName\n          id: lastName\n        - expression: appuser.email\n          id: email\n        - expression: appuser.email\n          id: login\n      sourceId: \u003csource id\u003e\n      targetId: ${user.id}\nvariables:\n  user:\n    fn::invoke:\n      Function: okta:user:getUserProfileMappingSource\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThere is no reason to import this resource. You can simply create the resource config and point it to a source ID. Mind here, once the source is deleted this resources will no longer exist. ",
            "properties": {
                "alwaysApply": {
                    "type": "boolean",
                    "description": "Whether apply the changes to all users with this profile after updating or creating the these mappings.\n\n\u003e **WARNING**: `always_apply` is available only when using api token in the provider config.\n"
                },
                "deleteWhenAbsent": {
                    "type": "boolean",
                    "description": "Tells the provider whether to attempt to delete missing mappings under profile mapping.\n"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:profile/MappingMapping:MappingMapping"
                    },
                    "description": "Priority of the policy.\n"
                },
                "sourceId": {
                    "type": "string",
                    "description": "Source id of the profile mapping.\n"
                },
                "sourceName": {
                    "type": "string",
                    "description": "Name of the mapping source.\n"
                },
                "sourceType": {
                    "type": "string",
                    "description": "ID of the mapping source.\n"
                },
                "targetId": {
                    "type": "string",
                    "description": "ID of the mapping target.\n"
                },
                "targetName": {
                    "type": "string",
                    "description": "Name of the mapping target.\n"
                },
                "targetType": {
                    "type": "string",
                    "description": "ID of the mapping target.\n"
                }
            },
            "required": [
                "sourceId",
                "sourceName",
                "sourceType",
                "targetId",
                "targetName",
                "targetType"
            ],
            "inputProperties": {
                "alwaysApply": {
                    "type": "boolean",
                    "description": "Whether apply the changes to all users with this profile after updating or creating the these mappings.\n\n\u003e **WARNING**: `always_apply` is available only when using api token in the provider config.\n"
                },
                "deleteWhenAbsent": {
                    "type": "boolean",
                    "description": "Tells the provider whether to attempt to delete missing mappings under profile mapping.\n"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:profile/MappingMapping:MappingMapping"
                    },
                    "description": "Priority of the policy.\n"
                },
                "sourceId": {
                    "type": "string",
                    "description": "Source id of the profile mapping.\n"
                },
                "targetId": {
                    "type": "string",
                    "description": "ID of the mapping target.\n"
                }
            },
            "requiredInputs": [
                "sourceId",
                "targetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Mapping resources.\n",
                "properties": {
                    "alwaysApply": {
                        "type": "boolean",
                        "description": "Whether apply the changes to all users with this profile after updating or creating the these mappings.\n\n\u003e **WARNING**: `always_apply` is available only when using api token in the provider config.\n"
                    },
                    "deleteWhenAbsent": {
                        "type": "boolean",
                        "description": "Tells the provider whether to attempt to delete missing mappings under profile mapping.\n"
                    },
                    "mappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:profile/MappingMapping:MappingMapping"
                        },
                        "description": "Priority of the policy.\n"
                    },
                    "sourceId": {
                        "type": "string",
                        "description": "Source id of the profile mapping.\n"
                    },
                    "sourceName": {
                        "type": "string",
                        "description": "Name of the mapping source.\n"
                    },
                    "sourceType": {
                        "type": "string",
                        "description": "ID of the mapping source.\n"
                    },
                    "targetId": {
                        "type": "string",
                        "description": "ID of the mapping target.\n"
                    },
                    "targetName": {
                        "type": "string",
                        "description": "Name of the mapping target.\n"
                    },
                    "targetType": {
                        "type": "string",
                        "description": "ID of the mapping target.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:trustedorigin/origin:Origin": {
            "description": "Creates a Trusted Origin.\n\nThis resource allows you to create and configure a Trusted Origin.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.trustedorigin.Origin(\"example\", {\n    origin: \"https://example.com\",\n    scopes: [\"CORS\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.trustedorigin.Origin(\"example\",\n    origin=\"https://example.com\",\n    scopes=[\"CORS\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.TrustedOrigin.Origin(\"example\", new()\n    {\n        OriginName = \"https://example.com\",\n        Scopes = new[]\n        {\n            \"CORS\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/trustedorigin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := trustedorigin.NewOrigin(ctx, \"example\", \u0026trustedorigin.OriginArgs{\n\t\t\tOrigin: pulumi.String(\"https://example.com\"),\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"CORS\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.trustedorigin.Origin;\nimport com.pulumi.okta.trustedorigin.OriginArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Origin(\"example\", OriginArgs.builder()        \n            .origin(\"https://example.com\")\n            .scopes(\"CORS\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:trustedorigin:Origin\n    properties:\n      origin: https://example.com\n      scopes:\n        - CORS\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA Trusted Origin can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:trustedorigin/origin:Origin example \u0026#60;trusted origin id\u0026#62;\n```\n\n ",
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the Trusted Origin is active or not - can only be issued post-creation. By default, it is 'true'.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name for this trusted origin.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "Unique origin URL for this trusted origin.\n",
                    "language": {
                        "csharp": {
                            "name": "OriginName"
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of the Trusted Origin - can be `\"CORS\"` and/or `\"REDIRECT\"`.\n"
                }
            },
            "required": [
                "name",
                "origin",
                "scopes"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the Trusted Origin is active or not - can only be issued post-creation. By default, it is 'true'.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name for this trusted origin.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "Unique origin URL for this trusted origin.\n",
                    "language": {
                        "csharp": {
                            "name": "OriginName"
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of the Trusted Origin - can be `\"CORS\"` and/or `\"REDIRECT\"`.\n"
                }
            },
            "requiredInputs": [
                "origin",
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Origin resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Whether the Trusted Origin is active or not - can only be issued post-creation. By default, it is 'true'.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name for this trusted origin.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "Unique origin URL for this trusted origin.\n",
                        "language": {
                            "csharp": {
                                "name": "OriginName"
                            }
                        }
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Scopes of the Trusted Origin - can be `\"CORS\"` and/or `\"REDIRECT\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:user/user:User": {
            "description": "Creates an Okta User.\n\nThis resource allows you to create and configure an Okta User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nFull profile:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.user.User(\"example\", {\n    city: \"New York\",\n    costCenter: \"10\",\n    countryCode: \"US\",\n    department: \"IT\",\n    displayName: \"Dr. John Smith\",\n    division: \"Acquisitions\",\n    email: \"john.smith@example.com\",\n    employeeNumber: \"111111\",\n    firstName: \"John\",\n    honorificPrefix: \"Dr.\",\n    honorificSuffix: \"Jr.\",\n    lastName: \"Smith\",\n    locale: \"en_US\",\n    login: \"john.smith@example.com\",\n    manager: \"Jimbo\",\n    managerId: \"222222\",\n    middleName: \"John\",\n    mobilePhone: \"1112223333\",\n    nickName: \"Johnny\",\n    organization: \"Testing Inc.\",\n    postalAddress: \"1234 Testing St.\",\n    preferredLanguage: \"en-us\",\n    primaryPhone: \"4445556666\",\n    profileUrl: \"https://www.example.com/profile\",\n    secondEmail: \"john.smith.fun@example.com\",\n    state: \"NY\",\n    streetAddress: \"5678 Testing Ave.\",\n    timezone: \"America/New_York\",\n    title: \"Director\",\n    userType: \"Employee\",\n    zipCode: \"11111\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.user.User(\"example\",\n    city=\"New York\",\n    cost_center=\"10\",\n    country_code=\"US\",\n    department=\"IT\",\n    display_name=\"Dr. John Smith\",\n    division=\"Acquisitions\",\n    email=\"john.smith@example.com\",\n    employee_number=\"111111\",\n    first_name=\"John\",\n    honorific_prefix=\"Dr.\",\n    honorific_suffix=\"Jr.\",\n    last_name=\"Smith\",\n    locale=\"en_US\",\n    login=\"john.smith@example.com\",\n    manager=\"Jimbo\",\n    manager_id=\"222222\",\n    middle_name=\"John\",\n    mobile_phone=\"1112223333\",\n    nick_name=\"Johnny\",\n    organization=\"Testing Inc.\",\n    postal_address=\"1234 Testing St.\",\n    preferred_language=\"en-us\",\n    primary_phone=\"4445556666\",\n    profile_url=\"https://www.example.com/profile\",\n    second_email=\"john.smith.fun@example.com\",\n    state=\"NY\",\n    street_address=\"5678 Testing Ave.\",\n    timezone=\"America/New_York\",\n    title=\"Director\",\n    user_type=\"Employee\",\n    zip_code=\"11111\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.User.User(\"example\", new()\n    {\n        City = \"New York\",\n        CostCenter = \"10\",\n        CountryCode = \"US\",\n        Department = \"IT\",\n        DisplayName = \"Dr. John Smith\",\n        Division = \"Acquisitions\",\n        Email = \"john.smith@example.com\",\n        EmployeeNumber = \"111111\",\n        FirstName = \"John\",\n        HonorificPrefix = \"Dr.\",\n        HonorificSuffix = \"Jr.\",\n        LastName = \"Smith\",\n        Locale = \"en_US\",\n        Login = \"john.smith@example.com\",\n        Manager = \"Jimbo\",\n        ManagerId = \"222222\",\n        MiddleName = \"John\",\n        MobilePhone = \"1112223333\",\n        NickName = \"Johnny\",\n        Organization = \"Testing Inc.\",\n        PostalAddress = \"1234 Testing St.\",\n        PreferredLanguage = \"en-us\",\n        PrimaryPhone = \"4445556666\",\n        ProfileUrl = \"https://www.example.com/profile\",\n        SecondEmail = \"john.smith.fun@example.com\",\n        State = \"NY\",\n        StreetAddress = \"5678 Testing Ave.\",\n        Timezone = \"America/New_York\",\n        Title = \"Director\",\n        UserType = \"Employee\",\n        ZipCode = \"11111\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.NewUser(ctx, \"example\", \u0026user.UserArgs{\n\t\t\tCity:              pulumi.String(\"New York\"),\n\t\t\tCostCenter:        pulumi.String(\"10\"),\n\t\t\tCountryCode:       pulumi.String(\"US\"),\n\t\t\tDepartment:        pulumi.String(\"IT\"),\n\t\t\tDisplayName:       pulumi.String(\"Dr. John Smith\"),\n\t\t\tDivision:          pulumi.String(\"Acquisitions\"),\n\t\t\tEmail:             pulumi.String(\"john.smith@example.com\"),\n\t\t\tEmployeeNumber:    pulumi.String(\"111111\"),\n\t\t\tFirstName:         pulumi.String(\"John\"),\n\t\t\tHonorificPrefix:   pulumi.String(\"Dr.\"),\n\t\t\tHonorificSuffix:   pulumi.String(\"Jr.\"),\n\t\t\tLastName:          pulumi.String(\"Smith\"),\n\t\t\tLocale:            pulumi.String(\"en_US\"),\n\t\t\tLogin:             pulumi.String(\"john.smith@example.com\"),\n\t\t\tManager:           pulumi.String(\"Jimbo\"),\n\t\t\tManagerId:         pulumi.String(\"222222\"),\n\t\t\tMiddleName:        pulumi.String(\"John\"),\n\t\t\tMobilePhone:       pulumi.String(\"1112223333\"),\n\t\t\tNickName:          pulumi.String(\"Johnny\"),\n\t\t\tOrganization:      pulumi.String(\"Testing Inc.\"),\n\t\t\tPostalAddress:     pulumi.String(\"1234 Testing St.\"),\n\t\t\tPreferredLanguage: pulumi.String(\"en-us\"),\n\t\t\tPrimaryPhone:      pulumi.String(\"4445556666\"),\n\t\t\tProfileUrl:        pulumi.String(\"https://www.example.com/profile\"),\n\t\t\tSecondEmail:       pulumi.String(\"john.smith.fun@example.com\"),\n\t\t\tState:             pulumi.String(\"NY\"),\n\t\t\tStreetAddress:     pulumi.String(\"5678 Testing Ave.\"),\n\t\t\tTimezone:          pulumi.String(\"America/New_York\"),\n\t\t\tTitle:             pulumi.String(\"Director\"),\n\t\t\tUserType:          pulumi.String(\"Employee\"),\n\t\t\tZipCode:           pulumi.String(\"11111\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.User;\nimport com.pulumi.okta.user.UserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new User(\"example\", UserArgs.builder()        \n            .city(\"New York\")\n            .costCenter(\"10\")\n            .countryCode(\"US\")\n            .department(\"IT\")\n            .displayName(\"Dr. John Smith\")\n            .division(\"Acquisitions\")\n            .email(\"john.smith@example.com\")\n            .employeeNumber(\"111111\")\n            .firstName(\"John\")\n            .honorificPrefix(\"Dr.\")\n            .honorificSuffix(\"Jr.\")\n            .lastName(\"Smith\")\n            .locale(\"en_US\")\n            .login(\"john.smith@example.com\")\n            .manager(\"Jimbo\")\n            .managerId(\"222222\")\n            .middleName(\"John\")\n            .mobilePhone(\"1112223333\")\n            .nickName(\"Johnny\")\n            .organization(\"Testing Inc.\")\n            .postalAddress(\"1234 Testing St.\")\n            .preferredLanguage(\"en-us\")\n            .primaryPhone(\"4445556666\")\n            .profileUrl(\"https://www.example.com/profile\")\n            .secondEmail(\"john.smith.fun@example.com\")\n            .state(\"NY\")\n            .streetAddress(\"5678 Testing Ave.\")\n            .timezone(\"America/New_York\")\n            .title(\"Director\")\n            .userType(\"Employee\")\n            .zipCode(\"11111\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:user:User\n    properties:\n      city: New York\n      costCenter: '10'\n      countryCode: US\n      department: IT\n      displayName: Dr. John Smith\n      division: Acquisitions\n      email: john.smith@example.com\n      employeeNumber: '111111'\n      firstName: John\n      honorificPrefix: Dr.\n      honorificSuffix: Jr.\n      lastName: Smith\n      locale: en_US\n      login: john.smith@example.com\n      manager: Jimbo\n      managerId: '222222'\n      middleName: John\n      mobilePhone: '1112223333'\n      nickName: Johnny\n      organization: Testing Inc.\n      postalAddress: 1234 Testing St.\n      preferredLanguage: en-us\n      primaryPhone: '4445556666'\n      profileUrl: https://www.example.com/profile\n      secondEmail: john.smith.fun@example.com\n      state: NY\n      streetAddress: 5678 Testing Ave.\n      timezone: America/New_York\n      title: Director\n      userType: Employee\n      zipCode: '11111'\n```\n\nWith Password Inline Hook:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test2 = new okta.user.User(\"test2\", {\n    email: \"example@example.com\",\n    firstName: \"John\",\n    lastName: \"Smith\",\n    login: \"example@example.com\",\n    passwordInlineHook: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest2 = okta.user.User(\"test2\",\n    email=\"example@example.com\",\n    first_name=\"John\",\n    last_name=\"Smith\",\n    login=\"example@example.com\",\n    password_inline_hook=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test2 = new Okta.User.User(\"test2\", new()\n    {\n        Email = \"example@example.com\",\n        FirstName = \"John\",\n        LastName = \"Smith\",\n        Login = \"example@example.com\",\n        PasswordInlineHook = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.NewUser(ctx, \"test2\", \u0026user.UserArgs{\n\t\t\tEmail:              pulumi.String(\"example@example.com\"),\n\t\t\tFirstName:          pulumi.String(\"John\"),\n\t\t\tLastName:           pulumi.String(\"Smith\"),\n\t\t\tLogin:              pulumi.String(\"example@example.com\"),\n\t\t\tPasswordInlineHook: pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.User;\nimport com.pulumi.okta.user.UserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test2 = new User(\"test2\", UserArgs.builder()        \n            .email(\"example@example.com\")\n            .firstName(\"John\")\n            .lastName(\"Smith\")\n            .login(\"example@example.com\")\n            .passwordInlineHook(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test2:\n    type: okta:user:User\n    properties:\n      email: example@example.com\n      firstName: John\n      lastName: Smith\n      login: example@example.com\n      passwordInlineHook: default\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn Okta User can be imported via the ID.\n\n```sh\n $ pulumi import okta:user/user:User example \u0026#60;user id\u0026#62;\n```\n\n ",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "costCenter": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "customProfileAttributes": {
                    "type": "string",
                    "description": "raw JSON containing all custom profile attributes.\n"
                },
                "customProfileAttributesToIgnores": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of custom_profile_attribute keys that should be excluded from being managed by Terraform.\n"
                },
                "department": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "division": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "email": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "employeeNumber": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "expirePasswordOnCreate": {
                    "type": "boolean",
                    "description": "If set to `true`, the user will have to change the password at the next login. This property will be used\nwhen user is being created and works only when `password` field is set. Default is `false`.\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "User's First Name, required by default.\n"
                },
                "honorificPrefix": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "honorificSuffix": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "User's Last Name, required by default.\n"
                },
                "locale": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "login": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "manager": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "managerId": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "middleName": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "mobilePhone": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "nickName": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "oldPassword": {
                    "type": "string",
                    "description": "Old user password. **IMPORTANT**: Should be ONLY set in case the password was changed\noutside the provider. After successful password change this field should be removed and `password` field should be used\nfor further changes.\n",
                    "secret": true
                },
                "organization": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "password": {
                    "type": "string",
                    "description": "User password.\n",
                    "secret": true
                },
                "passwordHash": {
                    "$ref": "#/types/okta:user/UserPasswordHash:UserPasswordHash",
                    "description": "Specifies a hashed password to import into Okta.\n"
                },
                "passwordInlineHook": {
                    "type": "string",
                    "description": "Specifies that a Password Import Inline Hook should be triggered to handle verification\nof the user's password the first time the user logs in. This allows an existing password to be imported into Okta directly\nfrom some other store. When updating a user with a password hook the user must be in the `STAGED` status. The `password`\nfield should not be specified when using Password Import Inline Hook.\n"
                },
                "postalAddress": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "preferredLanguage": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "primaryPhone": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "profileUrl": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "rawStatus": {
                    "type": "string",
                    "description": "The raw status of the User in Okta - (status is mapped)\n"
                },
                "recoveryAnswer": {
                    "type": "string",
                    "description": "User password recovery answer.\n\n- `password hash` - (Optional) Specifies a hashed password to import into Okta. When updating a user with a hashed password the user must be in the `STAGED` status.\n- `algorithm\"` - (Required) The algorithm used to generate the hash using the password (and salt, when applicable). Must be set to BCRYPT, SHA-512, SHA-256, SHA-1 or MD5.\n",
                    "secret": true
                },
                "recoveryQuestion": {
                    "type": "string",
                    "description": "User password recovery question.\n"
                },
                "secondEmail": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "skipRoles": {
                    "type": "boolean",
                    "description": "Do not populate user roles information (prevents additional API call)\n",
                    "deprecationMessage": "Because admin_roles has been removed, this attribute is a no op and will be removed"
                },
                "state": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "status": {
                    "type": "string",
                    "description": "User profile property. Valid values are \"ACTIVE\", \"DEPROVISIONED\", \"STAGED\", \"SUSPENDED\"\n"
                },
                "streetAddress": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "title": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "zipCode": {
                    "type": "string",
                    "description": "User profile property.\n"
                }
            },
            "required": [
                "customProfileAttributes",
                "email",
                "firstName",
                "lastName",
                "login",
                "rawStatus"
            ],
            "inputProperties": {
                "city": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "costCenter": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "customProfileAttributes": {
                    "type": "string",
                    "description": "raw JSON containing all custom profile attributes.\n"
                },
                "customProfileAttributesToIgnores": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of custom_profile_attribute keys that should be excluded from being managed by Terraform.\n"
                },
                "department": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "division": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "email": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "employeeNumber": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "expirePasswordOnCreate": {
                    "type": "boolean",
                    "description": "If set to `true`, the user will have to change the password at the next login. This property will be used\nwhen user is being created and works only when `password` field is set. Default is `false`.\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "User's First Name, required by default.\n"
                },
                "honorificPrefix": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "honorificSuffix": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "User's Last Name, required by default.\n"
                },
                "locale": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "login": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "manager": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "managerId": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "middleName": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "mobilePhone": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "nickName": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "oldPassword": {
                    "type": "string",
                    "description": "Old user password. **IMPORTANT**: Should be ONLY set in case the password was changed\noutside the provider. After successful password change this field should be removed and `password` field should be used\nfor further changes.\n",
                    "secret": true
                },
                "organization": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "password": {
                    "type": "string",
                    "description": "User password.\n",
                    "secret": true
                },
                "passwordHash": {
                    "$ref": "#/types/okta:user/UserPasswordHash:UserPasswordHash",
                    "description": "Specifies a hashed password to import into Okta.\n"
                },
                "passwordInlineHook": {
                    "type": "string",
                    "description": "Specifies that a Password Import Inline Hook should be triggered to handle verification\nof the user's password the first time the user logs in. This allows an existing password to be imported into Okta directly\nfrom some other store. When updating a user with a password hook the user must be in the `STAGED` status. The `password`\nfield should not be specified when using Password Import Inline Hook.\n"
                },
                "postalAddress": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "preferredLanguage": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "primaryPhone": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "profileUrl": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "recoveryAnswer": {
                    "type": "string",
                    "description": "User password recovery answer.\n\n- `password hash` - (Optional) Specifies a hashed password to import into Okta. When updating a user with a hashed password the user must be in the `STAGED` status.\n- `algorithm\"` - (Required) The algorithm used to generate the hash using the password (and salt, when applicable). Must be set to BCRYPT, SHA-512, SHA-256, SHA-1 or MD5.\n",
                    "secret": true
                },
                "recoveryQuestion": {
                    "type": "string",
                    "description": "User password recovery question.\n"
                },
                "secondEmail": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "skipRoles": {
                    "type": "boolean",
                    "description": "Do not populate user roles information (prevents additional API call)\n",
                    "deprecationMessage": "Because admin_roles has been removed, this attribute is a no op and will be removed"
                },
                "state": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "status": {
                    "type": "string",
                    "description": "User profile property. Valid values are \"ACTIVE\", \"DEPROVISIONED\", \"STAGED\", \"SUSPENDED\"\n"
                },
                "streetAddress": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "title": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User profile property.\n"
                },
                "zipCode": {
                    "type": "string",
                    "description": "User profile property.\n"
                }
            },
            "requiredInputs": [
                "email",
                "firstName",
                "lastName",
                "login"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "city": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "costCenter": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "customProfileAttributes": {
                        "type": "string",
                        "description": "raw JSON containing all custom profile attributes.\n"
                    },
                    "customProfileAttributesToIgnores": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of custom_profile_attribute keys that should be excluded from being managed by Terraform.\n"
                    },
                    "department": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "division": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "employeeNumber": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "expirePasswordOnCreate": {
                        "type": "boolean",
                        "description": "If set to `true`, the user will have to change the password at the next login. This property will be used\nwhen user is being created and works only when `password` field is set. Default is `false`.\n"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "User's First Name, required by default.\n"
                    },
                    "honorificPrefix": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "honorificSuffix": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User's Last Name, required by default.\n"
                    },
                    "locale": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "manager": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "managerId": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "middleName": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "mobilePhone": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "nickName": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "oldPassword": {
                        "type": "string",
                        "description": "Old user password. **IMPORTANT**: Should be ONLY set in case the password was changed\noutside the provider. After successful password change this field should be removed and `password` field should be used\nfor further changes.\n",
                        "secret": true
                    },
                    "organization": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "User password.\n",
                        "secret": true
                    },
                    "passwordHash": {
                        "$ref": "#/types/okta:user/UserPasswordHash:UserPasswordHash",
                        "description": "Specifies a hashed password to import into Okta.\n"
                    },
                    "passwordInlineHook": {
                        "type": "string",
                        "description": "Specifies that a Password Import Inline Hook should be triggered to handle verification\nof the user's password the first time the user logs in. This allows an existing password to be imported into Okta directly\nfrom some other store. When updating a user with a password hook the user must be in the `STAGED` status. The `password`\nfield should not be specified when using Password Import Inline Hook.\n"
                    },
                    "postalAddress": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "preferredLanguage": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "primaryPhone": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "profileUrl": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "rawStatus": {
                        "type": "string",
                        "description": "The raw status of the User in Okta - (status is mapped)\n"
                    },
                    "recoveryAnswer": {
                        "type": "string",
                        "description": "User password recovery answer.\n\n- `password hash` - (Optional) Specifies a hashed password to import into Okta. When updating a user with a hashed password the user must be in the `STAGED` status.\n- `algorithm\"` - (Required) The algorithm used to generate the hash using the password (and salt, when applicable). Must be set to BCRYPT, SHA-512, SHA-256, SHA-1 or MD5.\n",
                        "secret": true
                    },
                    "recoveryQuestion": {
                        "type": "string",
                        "description": "User password recovery question.\n"
                    },
                    "secondEmail": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "skipRoles": {
                        "type": "boolean",
                        "description": "Do not populate user roles information (prevents additional API call)\n",
                        "deprecationMessage": "Because admin_roles has been removed, this attribute is a no op and will be removed"
                    },
                    "state": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "User profile property. Valid values are \"ACTIVE\", \"DEPROVISIONED\", \"STAGED\", \"SUSPENDED\"\n"
                    },
                    "streetAddress": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "userType": {
                        "type": "string",
                        "description": "User profile property.\n"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "User profile property.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:user/userType:UserType": {
            "description": "Creates a User type.\n\nThis resource allows you to create and configure a User Type.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.user.UserType(\"example\", {\n    description: \"example\",\n    displayName: \"example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.user.UserType(\"example\",\n    description=\"example\",\n    display_name=\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.User.UserType(\"example\", new()\n    {\n        Description = \"example\",\n        DisplayName = \"example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.NewUserType(ctx, \"example\", \u0026user.UserTypeArgs{\n\t\t\tDescription: pulumi.String(\"example\"),\n\t\t\tDisplayName: pulumi.String(\"example\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.UserType;\nimport com.pulumi.okta.user.UserTypeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new UserType(\"example\", UserTypeArgs.builder()        \n            .description(\"example\")\n            .displayName(\"example\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:user:UserType\n    properties:\n      description: example\n      displayName: example\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA User Type can be imported via the Okta ID.\n\n```sh\n $ pulumi import okta:user/userType:UserType example \u0026#60;user type id\u0026#62;\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the User Type.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display Name of the User Type.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the User Type.\n"
                }
            },
            "required": [
                "description",
                "displayName",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the User Type.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display Name of the User Type.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the User Type.\n"
                }
            },
            "requiredInputs": [
                "description",
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserType resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the User Type.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display Name of the User Type.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the User Type.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "okta:Index/getDomain:getDomain": {
            "description": "Use this data source to retrieve a domain from Okta.\n\n- https://developer.okta.com/docs/reference/api/domains/#get-domain\n- https://developer.okta.com/docs/reference/api/domains/#domainresponse-object\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.Domain(\"example\", {});\nconst by-name = okta.Index.getDomain({\n    domainIdOrName: \"www.example.com\",\n});\nconst by-id = okta.Index.getDomainOutput({\n    domainIdOrName: example.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.Domain(\"example\")\nby_name = okta.Index.get_domain(domain_id_or_name=\"www.example.com\")\nby_id = okta.Index.get_domain_output(domain_id_or_name=example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Domain(\"example\");\n\n    var by_name = Okta.Index.GetDomain.Invoke(new()\n    {\n        DomainIdOrName = \"www.example.com\",\n    });\n\n    var by_id = Okta.Index.GetDomain.Invoke(new()\n    {\n        DomainIdOrName = example.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/Index\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := okta.NewDomain(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Index.GetDomain(ctx, \u0026index.GetDomainArgs{\n\t\t\tDomainIdOrName: \"www.example.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_ = Index.GetDomainOutput(ctx, index.GetDomainOutputArgs{\n\t\t\tDomainIdOrName: example.ID(),\n\t\t}, nil)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Domain;\nimport com.pulumi.okta.Index.IndexFunctions;\nimport com.pulumi.okta.Index.inputs.GetDomainArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Domain(\"example\");\n\n        final var by-name = IndexFunctions.getDomain(GetDomainArgs.builder()\n            .domainIdOrName(\"www.example.com\")\n            .build());\n\n        final var by-id = IndexFunctions.getDomain(GetDomainArgs.builder()\n            .domainIdOrName(example.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:Domain\nvariables:\n  by-name:\n    fn::invoke:\n      Function: okta:Index:getDomain\n      Arguments:\n        domainIdOrName: www.example.com\n  by-id:\n    fn::invoke:\n      Function: okta:Index:getDomain\n      Arguments:\n        domainIdOrName: ${example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDomain.\n",
                "properties": {
                    "domainIdOrName": {
                        "type": "string",
                        "description": "The Okta ID of the domain or the domain name itself.\n"
                    }
                },
                "type": "object",
                "required": [
                    "domainIdOrName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDomain.\n",
                "properties": {
                    "certificateSourceType": {
                        "type": "string",
                        "description": "Certificate source type that indicates whether the certificate is provided by the user or Okta. Values: MANUAL, OKTA_MANAGED\"\n"
                    },
                    "dnsRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:Index/getDomainDnsRecord:getDomainDnsRecord"
                        },
                        "description": "TXT and CNAME records to be registered for the Domain.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Domain name\n"
                    },
                    "domainIdOrName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "Domain ID\n"
                    },
                    "publicCertificate": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Certificate metadata for the Domain\n"
                    },
                    "validationStatus": {
                        "type": "string",
                        "description": "Status of the domain. Values: `NOT_STARTED`, `IN_PROGRESS`, `VERIFIED`, `COMPLETED`\n"
                    }
                },
                "type": "object",
                "required": [
                    "certificateSourceType",
                    "dnsRecords",
                    "domain",
                    "domainIdOrName",
                    "id",
                    "publicCertificate",
                    "validationStatus"
                ]
            }
        },
        "okta:app/getApp:getApp": {
            "description": "Use this data source to retrieve an application from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.app.getApp({\n    label: \"Example App\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.get_app(label=\"Example App\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.App.GetApp.Invoke(new()\n    {\n        Label = \"Example App\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.GetApp(ctx, \u0026app.GetAppArgs{\n\t\t\tLabel: pulumi.StringRef(\"Example App\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.AppFunctions;\nimport com.pulumi.okta.app.inputs.GetAppArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = AppFunctions.getApp(GetAppArgs.builder()\n            .label(\"Example App\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:app:getApp\n      Arguments:\n        label: Example App\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getApp.\n",
                "properties": {
                    "activeOnly": {
                        "type": "boolean",
                        "description": "tells the provider to query for only `ACTIVE` applications.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "`id` of application to retrieve, conflicts with `label` and `label_prefix`.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the app to retrieve, conflicts with `label_prefix` and `id`. Label uses\nthe `?q=\u003clabel\u003e` query parameter exposed by Okta's API. It should be noted that at this time the API searches both `name`\nand `label` with a [starts with query](https://developer.okta.com/docs/reference/api/apps/#list-applications) which\nmay result in multiple apps being returned for the query. The data source further inspects the lables looking for\nan exact match.\n"
                    },
                    "labelPrefix": {
                        "type": "string",
                        "description": "Label prefix of the app to retrieve, conflicts with `label` and `id`. This will tell the\nprovider to do a `starts with` query as opposed to an `equals` query.\n"
                    },
                    "skipGroups": {
                        "type": "boolean",
                        "deprecationMessage": "Because groups has been removed, this attribute is a no op and will be removed"
                    },
                    "skipUsers": {
                        "type": "boolean",
                        "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getApp.\n",
                "properties": {
                    "activeOnly": {
                        "type": "boolean"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "The `groups` field is now deprecated for the data source `okta_app`, please replace all uses of this with: `okta_app_group_assignments`"
                    },
                    "id": {
                        "type": "string",
                        "description": "Application ID.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Application label.\n"
                    },
                    "labelPrefix": {
                        "type": "string"
                    },
                    "links": {
                        "type": "string",
                        "description": "Generic JSON containing discoverable resources related to the app.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Application name.\n"
                    },
                    "skipGroups": {
                        "type": "boolean",
                        "deprecationMessage": "Because groups has been removed, this attribute is a no op and will be removed"
                    },
                    "skipUsers": {
                        "type": "boolean",
                        "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed"
                    },
                    "status": {
                        "type": "string",
                        "description": "Application status.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "The `users` field is now deprecated for the data source `okta_app`, please replace all uses of this with: `okta_app_user_assignments`"
                    }
                },
                "type": "object",
                "required": [
                    "groups",
                    "links",
                    "name",
                    "status",
                    "users"
                ]
            }
        },
        "okta:app/getMetadataSaml:getMetadataSaml": {
            "description": "Use this data source to retrieve the metadata for SAML application from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.app.getMetadataSaml({\n    appId: \"\u003capp id\u003e\",\n    keyId: \"\u003ccert key id\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.get_metadata_saml(app_id=\"\u003capp id\u003e\",\n    key_id=\"\u003ccert key id\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.App.GetMetadataSaml.Invoke(new()\n    {\n        AppId = \"\u003capp id\u003e\",\n        KeyId = \"\u003ccert key id\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.GetMetadataSaml(ctx, \u0026app.GetMetadataSamlArgs{\n\t\t\tAppId: \"\u003capp id\u003e\",\n\t\t\tKeyId: pulumi.StringRef(\"\u003ccert key id\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.AppFunctions;\nimport com.pulumi.okta.app.inputs.GetMetadataSamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = AppFunctions.getMetadataSaml(GetMetadataSamlArgs.builder()\n            .appId(\"\u003capp id\u003e\")\n            .keyId(\"\u003ccert key id\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:app:getMetadataSaml\n      Arguments:\n        appId: \u003capp id\u003e\n        keyId: \u003ccert key id\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMetadataSaml.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The application ID.\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "Certificate Key ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMetadataSaml.\n",
                "properties": {
                    "appId": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string",
                        "description": "public certificate from application metadata.\n"
                    },
                    "entityId": {
                        "type": "string",
                        "description": "Entity URL for instance `https://www.okta.com/saml2/service-provider/sposcfdmlybtwkdcgtuf`.\n"
                    },
                    "httpPostBinding": {
                        "type": "string",
                        "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.\n"
                    },
                    "httpRedirectBinding": {
                        "type": "string",
                        "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "keyId": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "string",
                        "description": "raw metadata of application.\n"
                    },
                    "wantAuthnRequestsSigned": {
                        "type": "boolean",
                        "description": "Whether authn requests are signed.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appId",
                    "certificate",
                    "entityId",
                    "httpPostBinding",
                    "httpRedirectBinding",
                    "metadata",
                    "wantAuthnRequestsSigned",
                    "id"
                ]
            }
        },
        "okta:app/getOauth:getOauth": {
            "description": "Use this data source to retrieve an OIDC application from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.app.getOauth({\n    label: \"Example App\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.app.get_oauth(label=\"Example App\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.App.GetOauth.Invoke(new()\n    {\n        Label = \"Example App\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.GetOauth(ctx, \u0026app.GetOauthArgs{\n\t\t\tLabel: pulumi.StringRef(\"Example App\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.AppFunctions;\nimport com.pulumi.okta.app.inputs.GetOauthArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = AppFunctions.getOauth(GetOauthArgs.builder()\n            .label(\"Example App\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: okta:app:getOauth\n      Arguments:\n        label: Example App\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOauth.\n",
                "properties": {
                    "activeOnly": {
                        "type": "boolean",
                        "description": "tells the provider to query for only `ACTIVE` applications.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "`id` of application to retrieve, conflicts with `label` and `label_prefix`.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the app to retrieve, conflicts with\n`label_prefix` and `id`. Label uses the `?q=\u003clabel\u003e` query parameter exposed by\nOkta's List Apps API. The API will search both `name` and `label` using that\nquery. Therefore similarily named and labeled apps may be returned in the query\nand have the unitended result of associating the wrong app with this data\nsource. See:\nhttps://developer.okta.com/docs/reference/api/apps/#list-applications\n"
                    },
                    "labelPrefix": {
                        "type": "string",
                        "description": "Label prefix of the app to retrieve, conflicts with `label` and `id`. This will tell the\nprovider to do a `starts with` query as opposed to an `equals` query.\n"
                    },
                    "skipGroups": {
                        "type": "boolean",
                        "deprecationMessage": "Because groups has been removed, this attribute is a no op and will be removed"
                    },
                    "skipUsers": {
                        "type": "boolean",
                        "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOauth.\n",
                "properties": {
                    "activeOnly": {
                        "type": "boolean"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "OAuth client ID. If set during creation, app is created with this id.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "The latest active client secret of the application. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n",
                        "secret": true
                    },
                    "clientUri": {
                        "type": "string",
                        "description": "URI to a web page providing information about the client.\n"
                    },
                    "grantTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OAuth 2.0 grant types.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of application.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Label of application.\n"
                    },
                    "labelPrefix": {
                        "type": "string"
                    },
                    "links": {
                        "type": "string",
                        "description": "generic JSON containing discoverable resources related to the app\n"
                    },
                    "loginMode": {
                        "type": "string",
                        "description": "The type of Idp-Initiated login that the client supports, if any.\n"
                    },
                    "loginScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of scopes to use for the request.\n"
                    },
                    "loginUri": {
                        "type": "string",
                        "description": "URI that initiates login.\n"
                    },
                    "logoUri": {
                        "type": "string",
                        "description": "URI that references a logo for the client.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of application.\n"
                    },
                    "policyUri": {
                        "type": "string",
                        "description": "URI to web page providing client policy document.\n"
                    },
                    "postLogoutRedirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of URIs for redirection after logout.\n"
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of URIs for use in the redirect-based flow.\n"
                    },
                    "responseTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OAuth 2.0 response type strings.\n"
                    },
                    "skipGroups": {
                        "type": "boolean",
                        "deprecationMessage": "Because groups has been removed, this attribute is a no op and will be removed"
                    },
                    "skipUsers": {
                        "type": "boolean",
                        "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of OAuth application.\n"
                    },
                    "wildcardRedirect": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "autoSubmitToolbar",
                    "clientId",
                    "clientSecret",
                    "clientUri",
                    "grantTypes",
                    "hideIos",
                    "hideWeb",
                    "links",
                    "loginMode",
                    "loginScopes",
                    "loginUri",
                    "logoUri",
                    "name",
                    "policyUri",
                    "postLogoutRedirectUris",
                    "redirectUris",
                    "responseTypes",
                    "status",
                    "type",
                    "wildcardRedirect"
                ]
            }
        },
        "okta:app/getSaml:getSaml": {
            "description": "Use this data source to retrieve an SAML application from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.app.getSaml({\n    label: \"Example App\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.get_saml(label=\"Example App\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.App.GetSaml.Invoke(new()\n    {\n        Label = \"Example App\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.LookupSaml(ctx, \u0026app.LookupSamlArgs{\n\t\t\tLabel: pulumi.StringRef(\"Example App\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.AppFunctions;\nimport com.pulumi.okta.app.inputs.GetSamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = AppFunctions.getSaml(GetSamlArgs.builder()\n            .label(\"Example App\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:app:getSaml\n      Arguments:\n        label: Example App\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSaml.\n",
                "properties": {
                    "activeOnly": {
                        "type": "boolean",
                        "description": "tells the provider to query for only `ACTIVE` applications.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "`id` of application to retrieve, conflicts with `label` and `label_prefix`.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the app to retrieve, conflicts with `label_prefix` and `id`. Label uses\nthe `?q=\u003clabel\u003e` query parameter exposed by Okta's API. It should be noted that at this time this searches both `name`\nand `label`. This is used to avoid paginating through all applications.\n"
                    },
                    "labelPrefix": {
                        "type": "string",
                        "description": "Label prefix of the app to retrieve, conflicts with `label` and `id`. This will tell the\nprovider to do a `starts with` query as opposed to an `equals` query.\n"
                    },
                    "requestCompressed": {
                        "type": "boolean",
                        "description": "Denotes whether the request is compressed or not.\n"
                    },
                    "skipGroups": {
                        "type": "boolean",
                        "deprecationMessage": "Because groups has been removed, this attribute is a no op and will be removed"
                    },
                    "skipUsers": {
                        "type": "boolean",
                        "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSaml.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL.\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page URL.\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self-service.\n"
                    },
                    "acsEndpoints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of ACS endpoints. You can configure a maximum of 100 endpoints.\n"
                    },
                    "activeOnly": {
                        "type": "boolean"
                    },
                    "appSettingsJson": {
                        "type": "string",
                        "description": "Application settings in JSON format.\n"
                    },
                    "assertionSigned": {
                        "type": "boolean",
                        "description": "Determines whether the SAML assertion is digitally signed.\n"
                    },
                    "attributeStatements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/getSamlAttributeStatement:getSamlAttributeStatement"
                        },
                        "description": "List of SAML Attribute statements.\n"
                    },
                    "audience": {
                        "type": "string",
                        "description": "Audience restriction.\n"
                    },
                    "authnContextClassRef": {
                        "type": "string",
                        "description": "Identifies the SAML authentication context class for the assertion’s authentication statement.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar.\n"
                    },
                    "defaultRelayState": {
                        "type": "string",
                        "description": "Identifies a specific application resource in an IDP initiated SSO scenario.\n"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Identifies the location where the SAML response is intended to be sent inside the SAML assertion.\n"
                    },
                    "digestAlgorithm": {
                        "type": "string",
                        "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response.\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "features enabled.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups IDs assigned to the application.\n",
                        "deprecationMessage": "The `groups` field is now deprecated for the data source `okta_app_saml`, please replace all uses of this with: `okta_app_group_assignments`"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app.\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "honorForceAuthn": {
                        "type": "boolean",
                        "description": "Prompt user to re-authenticate if SP asks for it.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "id of application.\n"
                    },
                    "idpIssuer": {
                        "type": "string",
                        "description": "SAML issuer ID.\n"
                    },
                    "inlineHookId": {
                        "type": "string",
                        "description": "Saml Inline Hook associated with the application.\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "Certificate key ID.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "label of application.\n"
                    },
                    "labelPrefix": {
                        "type": "string"
                    },
                    "links": {
                        "type": "string",
                        "description": "Generic JSON containing discoverable resources related to the app.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of application.\n"
                    },
                    "recipient": {
                        "type": "string",
                        "description": "The location where the app may present the SAML assertion.\n"
                    },
                    "requestCompressed": {
                        "type": "boolean",
                        "description": "Denotes whether the request is compressed or not.\n"
                    },
                    "responseSigned": {
                        "type": "boolean",
                        "description": "Determines whether the SAML auth response message is digitally signed.\n"
                    },
                    "samlSignedRequestEnabled": {
                        "type": "boolean",
                        "description": "SAML Signed Request enabled\n"
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "Signature algorithm used ot digitally sign the assertion and response.\n"
                    },
                    "singleLogoutCertificate": {
                        "type": "string",
                        "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests.\n"
                    },
                    "singleLogoutIssuer": {
                        "type": "string",
                        "description": "The issuer of the Service Provider that generates the Single Logout request.\n"
                    },
                    "singleLogoutUrl": {
                        "type": "string",
                        "description": "The location where the logout response is sent.\n"
                    },
                    "skipGroups": {
                        "type": "boolean",
                        "deprecationMessage": "Because groups has been removed, this attribute is a no op and will be removed"
                    },
                    "skipUsers": {
                        "type": "boolean",
                        "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed"
                    },
                    "spIssuer": {
                        "type": "string",
                        "description": "SAML service provider issuer.\n"
                    },
                    "ssoUrl": {
                        "type": "string",
                        "description": "Single Sign-on Url.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "status of application.\n"
                    },
                    "subjectNameIdFormat": {
                        "type": "string",
                        "description": "Identifies the SAML processing rules.\n"
                    },
                    "subjectNameIdTemplate": {
                        "type": "string",
                        "description": "Template for app user's username when a user is assigned to the app.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template.\n"
                    },
                    "userNameTemplatePushStatus": {
                        "type": "string",
                        "description": "Push username on update.\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix.\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "The `users` field is now deprecated for the data source `okta_app_saml`, please replace all uses of this with: `okta_app_user_assignments`"
                    }
                },
                "type": "object",
                "required": [
                    "accessibilityErrorRedirectUrl",
                    "accessibilityLoginRedirectUrl",
                    "accessibilitySelfService",
                    "acsEndpoints",
                    "appSettingsJson",
                    "assertionSigned",
                    "attributeStatements",
                    "audience",
                    "authnContextClassRef",
                    "autoSubmitToolbar",
                    "defaultRelayState",
                    "destination",
                    "digestAlgorithm",
                    "features",
                    "groups",
                    "hideIos",
                    "hideWeb",
                    "honorForceAuthn",
                    "idpIssuer",
                    "inlineHookId",
                    "keyId",
                    "links",
                    "name",
                    "recipient",
                    "responseSigned",
                    "samlSignedRequestEnabled",
                    "signatureAlgorithm",
                    "singleLogoutCertificate",
                    "singleLogoutIssuer",
                    "singleLogoutUrl",
                    "spIssuer",
                    "ssoUrl",
                    "status",
                    "subjectNameIdFormat",
                    "subjectNameIdTemplate",
                    "userNameTemplate",
                    "userNameTemplatePushStatus",
                    "userNameTemplateSuffix",
                    "userNameTemplateType",
                    "users"
                ]
            }
        },
        "okta:auth/getServer:getServer": {
            "description": "Use this data source to retrieve an auth server from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.auth.getServer({\n    name: \"Example Auth\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.get_server(name=\"Example Auth\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Auth.GetServer.Invoke(new()\n    {\n        Name = \"Example Auth\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.LookupServer(ctx, \u0026auth.LookupServerArgs{\n\t\t\tName: \"Example Auth\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.AuthFunctions;\nimport com.pulumi.okta.auth.inputs.GetServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = AuthFunctions.getServer(GetServerArgs.builder()\n            .name(\"Example Auth\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:auth:getServer\n      Arguments:\n        name: Example Auth\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServer.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the auth server to retrieve.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServer.\n",
                "properties": {
                    "audiences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of audiences.\n"
                    },
                    "credentialsLastRotated": {
                        "type": "string",
                        "description": "last time credentials were rotated.\n"
                    },
                    "credentialsNextRotation": {
                        "type": "string",
                        "description": "next time credentials will be rotated\n"
                    },
                    "credentialsRotationMode": {
                        "type": "string",
                        "description": "mode of credential rotation, auto or manual.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "description of Authorization server.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The complete URL of the authorization server. This becomes the `iss` claim in an access token.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Can be set to `\"CUSTOM_URL\"` or `\"ORG_URL\"`\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "auth server key id.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the auth server.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "the activation status of the authorization server.\n"
                    }
                },
                "type": "object",
                "required": [
                    "audiences",
                    "credentialsLastRotated",
                    "credentialsNextRotation",
                    "credentialsRotationMode",
                    "description",
                    "issuer",
                    "issuerMode",
                    "kid",
                    "name",
                    "status",
                    "id"
                ]
            }
        },
        "okta:auth/getServerPolicy:getServerPolicy": {
            "description": "Use this data source to retrieve an authorization server policy from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.auth.getServerPolicy({\n    authServerId: \"\u003cauth server id\u003e\",\n    name: \"staff\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.get_server_policy(auth_server_id=\"\u003cauth server id\u003e\",\n    name=\"staff\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Auth.GetServerPolicy.Invoke(new()\n    {\n        AuthServerId = \"\u003cauth server id\u003e\",\n        Name = \"staff\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.LookupServerPolicy(ctx, \u0026auth.LookupServerPolicyArgs{\n\t\t\tAuthServerId: \"\u003cauth server id\u003e\",\n\t\t\tName:         \"staff\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.AuthFunctions;\nimport com.pulumi.okta.auth.inputs.GetServerPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = AuthFunctions.getServerPolicy(GetServerPolicyArgs.builder()\n            .authServerId(\"\u003cauth server id\u003e\")\n            .name(\"staff\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:auth:getServerPolicy\n      Arguments:\n        authServerId: \u003cauth server id\u003e\n        name: staff\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServerPolicy.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "The ID of the Auth Server.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of policy to retrieve.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authServerId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServerPolicy.\n",
                "properties": {
                    "assignedClients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of clients this policy is assigned to. `[\"ALL_CLIENTS\"]` is a special value when policy is assigned to all clients.\n"
                    },
                    "authServerId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "description of authorization server policy.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "the priority of the Auth Server Policy.\n"
                    }
                },
                "type": "object",
                "required": [
                    "assignedClients",
                    "authServerId",
                    "description",
                    "name",
                    "priority",
                    "id"
                ]
            }
        },
        "okta:auth/getServerScopes:getServerScopes": {
            "description": "Use this data source to retrieve a list of authorization server scopes from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.auth.getServerScopes({\n    authServerId: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.auth.get_server_scopes(auth_server_id=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.Auth.GetServerScopes.Invoke(new()\n    {\n        AuthServerId = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.GetServerScopes(ctx, \u0026auth.GetServerScopesArgs{\n\t\t\tAuthServerId: \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.AuthFunctions;\nimport com.pulumi.okta.auth.inputs.GetServerScopesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = AuthFunctions.getServerScopes(GetServerScopesArgs.builder()\n            .authServerId(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: okta:auth:getServerScopes\n      Arguments:\n        authServerId: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServerScopes.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "Auth server ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authServerId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServerScopes.\n",
                "properties": {
                    "authServerId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:auth/getServerScopesScope:getServerScopesScope"
                        },
                        "description": "collection of authorization server scopes retrieved from Okta with the following properties.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authServerId",
                    "scopes",
                    "id"
                ]
            }
        },
        "okta:group/getEveryoneGroup:getEveryoneGroup": {
            "description": "Use this data source to retrieve the `Everyone` group from Okta. The same can be achieved with the `okta.group.Group` data\nsource with `name = \"Everyone\"`. This is simply a shortcut.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.group.getEveryoneGroup({});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.group.get_everyone_group()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Group.GetEveryoneGroup.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := group.GetEveryoneGroup(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.group.GroupFunctions;\nimport com.pulumi.okta.group.inputs.GetEveryoneGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = GroupFunctions.getEveryoneGroup();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:group:getEveryoneGroup\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getEveryoneGroup.\n",
                "properties": {
                    "includeUsers": {
                        "type": "boolean",
                        "description": "whether to retrieve all member ids.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEveryoneGroup.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "description of group.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "includeUsers": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id"
                ]
            }
        },
        "okta:group/getGroup:getGroup": {
            "description": "Use this data source to retrieve a group from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.group.getGroup({\n    name: \"Example App\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.group.get_group(name=\"Example App\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Group.GetGroup.Invoke(new()\n    {\n        Name = \"Example App\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := group.LookupGroup(ctx, \u0026group.LookupGroupArgs{\n\t\t\tName: pulumi.StringRef(\"Example App\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.group.GroupFunctions;\nimport com.pulumi.okta.group.inputs.GetGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = GroupFunctions.getGroup(GetGroupArgs.builder()\n            .name(\"Example App\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:group:getGroup\n      Arguments:\n        name: Example App\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGroup.\n",
                "properties": {
                    "delayReadSeconds": {
                        "type": "string",
                        "description": "Force delay of the group read by N seconds. Useful when eventual consistency of group information needs to be allowed for; for instance, when group rules are known to have been applied.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of the group. Conflicts with `\"name\"` and `\"type\"`.\n"
                    },
                    "includeUsers": {
                        "type": "boolean",
                        "description": "whether to retrieve all member ids.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of group to retrieve.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of the group to retrieve. Can only be one of `OKTA_GROUP` (Native Okta Groups), `APP_GROUP`\n(Imported App Groups), or `BUILT_IN` (Okta System Groups).\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroup.\n",
                "properties": {
                    "delayReadSeconds": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "description of group.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of group.\n"
                    },
                    "includeUsers": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of group.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of group.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "user ids that are members of this group, only included if `include_users` is set to `true`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "users"
                ]
            }
        },
        "okta:idp/getMetadataSaml:getMetadataSaml": {
            "description": "Use this data source to retrieve SAML IdP metadata from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.idp.getMetadataSaml({\n    idpId: \"\u003cidp id\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.get_metadata_saml(idp_id=\"\u003cidp id\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Idp.GetMetadataSaml.Invoke(new()\n    {\n        IdpId = \"\u003cidp id\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.GetMetadataSaml(ctx, \u0026idp.GetMetadataSamlArgs{\n\t\t\tIdpId: pulumi.StringRef(\"\u003cidp id\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.idp.IdpFunctions;\nimport com.pulumi.okta.idp.inputs.GetMetadataSamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IdpFunctions.getMetadataSaml(GetMetadataSamlArgs.builder()\n            .idpId(\"\u003cidp id\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:idp:getMetadataSaml\n      Arguments:\n        idpId: \u003cidp id\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMetadataSaml.\n",
                "properties": {
                    "idpId": {
                        "type": "string",
                        "description": "The id of the IdP to retrieve metadata for.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMetadataSaml.\n",
                "properties": {
                    "assertionsSigned": {
                        "type": "boolean",
                        "description": "whether assertions are signed.\n"
                    },
                    "authnRequestSigned": {
                        "type": "boolean",
                        "description": "whether authn requests are signed.\n"
                    },
                    "encryptionCertificate": {
                        "type": "string",
                        "description": "SAML request encryption certificate.\n"
                    },
                    "entityId": {
                        "type": "string",
                        "description": "Entity URL for instance `https://www.okta.com/saml2/service-provider/sposcfdmlybtwkdcgtuf`.\n"
                    },
                    "httpPostBinding": {
                        "type": "string",
                        "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.\n"
                    },
                    "httpRedirectBinding": {
                        "type": "string",
                        "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "idpId": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "string",
                        "description": "raw IdP metadata.\n"
                    },
                    "signingCertificate": {
                        "type": "string",
                        "description": "SAML request signing certificate.\n"
                    }
                },
                "type": "object",
                "required": [
                    "assertionsSigned",
                    "authnRequestSigned",
                    "encryptionCertificate",
                    "entityId",
                    "httpPostBinding",
                    "httpRedirectBinding",
                    "metadata",
                    "signingCertificate",
                    "id"
                ]
            }
        },
        "okta:idp/getOidc:getOidc": {
            "description": "Use this data source to retrieve a OIDC IdP from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.idp.getOidc({\n    name: \"Example Provider\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.get_oidc(name=\"Example Provider\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Idp.GetOidc.Invoke(new()\n    {\n        Name = \"Example Provider\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.LookupOidc(ctx, \u0026idp.LookupOidcArgs{\n\t\t\tName: pulumi.StringRef(\"Example Provider\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.idp.IdpFunctions;\nimport com.pulumi.okta.idp.inputs.GetOidcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IdpFunctions.getOidc(GetOidcArgs.builder()\n            .name(\"Example Provider\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:idp:getOidc\n      Arguments:\n        name: Example Provider\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOidc.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the idp to retrieve, conflicts with `name`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the idp to retrieve, conflicts with `id`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOidc.\n",
                "properties": {
                    "authorizationBinding": {
                        "type": "string",
                        "description": "The method of making an authorization request.\n"
                    },
                    "authorizationUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "Client secret issued by AS for the Okta IdP instance.\n",
                        "secret": true
                    },
                    "id": {
                        "type": "string",
                        "description": "id of idp.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether Okta uses the original Okta org domain URL, a custom domain URL, or dynamic.\n"
                    },
                    "issuerUrl": {
                        "type": "string",
                        "description": "URI that identifies the issuer.\n"
                    },
                    "jwksBinding": {
                        "type": "string",
                        "description": "The method of making a request for the OIDC JWKS.\n"
                    },
                    "jwksUrl": {
                        "type": "string",
                        "description": "Endpoint where the keys signer publishes its keys in a JWK Set.\n"
                    },
                    "maxClockSkew": {
                        "type": "integer",
                        "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the idp.\n"
                    },
                    "protocolType": {
                        "type": "string",
                        "description": "The type of protocol to use.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The scopes of the IdP.\n"
                    },
                    "tokenBinding": {
                        "type": "string",
                        "description": "The method of making a token request.\n"
                    },
                    "tokenUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of idp.\n"
                    },
                    "userInfoBinding": {
                        "type": "string",
                        "description": "The method of making a user info request.\n"
                    },
                    "userInfoUrl": {
                        "type": "string",
                        "description": "Protected resource endpoint that returns claims about the authenticated user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authorizationBinding",
                    "authorizationUrl",
                    "clientId",
                    "clientSecret",
                    "issuerMode",
                    "issuerUrl",
                    "jwksBinding",
                    "jwksUrl",
                    "maxClockSkew",
                    "protocolType",
                    "scopes",
                    "tokenBinding",
                    "tokenUrl",
                    "type",
                    "userInfoBinding",
                    "userInfoUrl"
                ]
            }
        },
        "okta:idp/getSaml:getSaml": {
            "description": "Use this data source to retrieve a SAML IdP from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.idp.getSaml({\n    name: \"Example App\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.get_saml(name=\"Example App\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Idp.GetSaml.Invoke(new()\n    {\n        Name = \"Example App\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.LookupSaml(ctx, \u0026idp.LookupSamlArgs{\n\t\t\tName: pulumi.StringRef(\"Example App\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.idp.IdpFunctions;\nimport com.pulumi.okta.idp.inputs.GetSamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IdpFunctions.getSaml(GetSamlArgs.builder()\n            .name(\"Example App\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:idp:getSaml\n      Arguments:\n        name: Example App\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSaml.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the idp to retrieve, conflicts with `name`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the idp to retrieve, conflicts with `id`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSaml.\n",
                "properties": {
                    "acsBinding": {
                        "type": "string"
                    },
                    "acsType": {
                        "type": "string",
                        "description": "Determines whether to publish an instance-specific (trust) or organization (shared) ACS endpoint in the SAML metadata.\n"
                    },
                    "audience": {
                        "type": "string",
                        "description": "URI that identifies the target Okta IdP instance (SP)\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "id of idp.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "URI that identifies the issuer (IdP).\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "indicates whether Okta uses the original Okta org domain URL, or a custom domain URL in the request to the IdP.\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "Key ID reference to the IdP's X.509 signature certificate.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the idp.\n"
                    },
                    "ssoBinding": {
                        "type": "string",
                        "description": "single sign-on binding.\n"
                    },
                    "ssoDestination": {
                        "type": "string",
                        "description": "SSO request binding, HTTP-POST or HTTP-REDIRECT.\n"
                    },
                    "ssoUrl": {
                        "type": "string",
                        "description": "single sign-on url.\n"
                    },
                    "subjectFilter": {
                        "type": "string",
                        "description": "regular expression pattern used to filter untrusted IdP usernames.\n"
                    },
                    "subjectFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Expression to generate or transform a unique username for the IdP user.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of idp.\n"
                    }
                },
                "type": "object",
                "required": [
                    "acsBinding",
                    "acsType",
                    "audience",
                    "issuer",
                    "issuerMode",
                    "kid",
                    "ssoBinding",
                    "ssoDestination",
                    "ssoUrl",
                    "subjectFilter",
                    "subjectFormats",
                    "type"
                ]
            }
        },
        "okta:idp/getSocial:getSocial": {
            "description": "Use this data source to retrieve a social IdP from Okta, namely `APPLE`, `FACEBOOK`, `LINKEDIN`, `MICROSOFT`, or  `GOOGLE`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.idp.getSocial({\n    name: \"My Facebook IdP\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.get_social(name=\"My Facebook IdP\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Idp.GetSocial.Invoke(new()\n    {\n        Name = \"My Facebook IdP\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.LookupSocial(ctx, \u0026idp.LookupSocialArgs{\n\t\t\tName: pulumi.StringRef(\"My Facebook IdP\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.idp.IdpFunctions;\nimport com.pulumi.okta.idp.inputs.GetSocialArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IdpFunctions.getSocial(GetSocialArgs.builder()\n            .name(\"My Facebook IdP\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:idp:getSocial\n      Arguments:\n        name: My Facebook IdP\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSocial.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the social idp to retrieve, conflicts with `name`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the social idp to retrieve, conflicts with `id`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSocial.\n",
                "properties": {
                    "accountLinkAction": {
                        "type": "string",
                        "description": "Specifies the account linking action for an IdP user.\n"
                    },
                    "accountLinkGroupIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group memberships to determine link candidates.\n"
                    },
                    "authorizationBinding": {
                        "type": "string",
                        "description": "The method of making an authorization request.\n"
                    },
                    "authorizationUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "Client secret issued by AS for the Okta IdP instance.\n",
                        "secret": true
                    },
                    "deprovisionedAction": {
                        "type": "string",
                        "description": "Action for a previously deprovisioned IdP user during authentication.\n"
                    },
                    "groupsAction": {
                        "type": "string",
                        "description": "Provisioning action for IdP user's group memberships.\n"
                    },
                    "groupsAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Okta Group IDs.\n"
                    },
                    "groupsAttribute": {
                        "type": "string",
                        "description": "IdP user profile attribute name for an array value that contains group memberships.\n"
                    },
                    "groupsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Whitelist of Okta Group identifiers.\n"
                    },
                    "id": {
                        "type": "string"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL.\n"
                    },
                    "maxClockSkew": {
                        "type": "integer",
                        "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "profileMaster": {
                        "type": "boolean",
                        "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                    },
                    "protocolType": {
                        "type": "string",
                        "description": "The type of protocol to use.\n"
                    },
                    "provisioningAction": {
                        "type": "string",
                        "description": "Provisioning action for an IdP user during authentication.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The scopes of the IdP.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the IdP.\n"
                    },
                    "subjectMatchAttribute": {
                        "type": "string",
                        "description": "Okta user profile attribute for matching transformed IdP username.\n"
                    },
                    "subjectMatchType": {
                        "type": "string",
                        "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username.\n"
                    },
                    "suspendedAction": {
                        "type": "string",
                        "description": "Action for a previously suspended IdP user during authentication.\n"
                    },
                    "tokenBinding": {
                        "type": "string",
                        "description": "The method of making a token request.\n"
                    },
                    "tokenUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of Social IdP. See API docs [Identity Provider Type](https://developer.okta.com/docs/reference/api/idps/#identity-provider-type)\n"
                    },
                    "usernameTemplate": {
                        "type": "string",
                        "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountLinkAction",
                    "accountLinkGroupIncludes",
                    "authorizationBinding",
                    "authorizationUrl",
                    "clientId",
                    "clientSecret",
                    "deprovisionedAction",
                    "groupsAction",
                    "groupsAssignments",
                    "groupsAttribute",
                    "groupsFilters",
                    "issuerMode",
                    "maxClockSkew",
                    "profileMaster",
                    "protocolType",
                    "provisioningAction",
                    "scopes",
                    "status",
                    "subjectMatchAttribute",
                    "subjectMatchType",
                    "suspendedAction",
                    "tokenBinding",
                    "tokenUrl",
                    "type",
                    "usernameTemplate"
                ]
            }
        },
        "okta:index/getAppGroupAssignments:getAppGroupAssignments": {
            "description": "Use this data source to retrieve the list of groups assigned to the given Okta application (by ID).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.getAppGroupAssignments({\n    id: okta_app_oauth.test.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.get_app_group_assignments(id=okta_app_oauth[\"test\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.GetAppGroupAssignments.Invoke(new()\n    {\n        Id = okta_app_oauth.Test.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.LookupAppGroupAssignments(ctx, \u0026okta.LookupAppGroupAssignmentsArgs{\n\t\t\tId: okta_app_oauth.Test.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetAppGroupAssignmentsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OktaFunctions.getAppGroupAssignments(GetAppGroupAssignmentsArgs.builder()\n            .id(okta_app_oauth.test().id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: okta:getAppGroupAssignments\n      Arguments:\n        id: ${okta_app_oauth.test.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppGroupAssignments.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Okta application you want to retrieve the groups for.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppGroupAssignments.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of groups IDs assigned to the application.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of application.\n"
                    }
                },
                "type": "object",
                "required": [
                    "groups",
                    "id"
                ]
            }
        },
        "okta:index/getAppSignonPolicy:getAppSignonPolicy": {
            "description": "\u003e **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.\n\nUse this data source to retrieve a sign-on policy for the application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.getAppSignonPolicy({\n    appId: \"app_id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.get_app_signon_policy(app_id=\"app_id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.GetAppSignonPolicy.Invoke(new()\n    {\n        AppId = \"app_id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.LookupAppSignonPolicy(ctx, \u0026okta.LookupAppSignonPolicyArgs{\n\t\t\tAppId: \"app_id\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetAppSignonPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OktaFunctions.getAppSignonPolicy(GetAppSignonPolicyArgs.builder()\n            .appId(\"app_id\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:getAppSignonPolicy\n      Arguments:\n        appId: app_id\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSignonPolicy.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The application ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSignonPolicy.\n",
                "properties": {
                    "appId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "appId",
                    "name",
                    "id"
                ]
            }
        },
        "okta:index/getAppUserAssignments:getAppUserAssignments": {
            "description": "Use this data source to retrieve the list of users assigned to the given Okta application (by ID).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.getAppUserAssignments({\n    id: okta_app_oauth.test.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.get_app_user_assignments(id=okta_app_oauth[\"test\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.GetAppUserAssignments.Invoke(new()\n    {\n        Id = okta_app_oauth.Test.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetAppUserAssignments(ctx, \u0026okta.GetAppUserAssignmentsArgs{\n\t\t\tId: okta_app_oauth.Test.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetAppUserAssignmentsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OktaFunctions.getAppUserAssignments(GetAppUserAssignmentsArgs.builder()\n            .id(okta_app_oauth.test().id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: okta:getAppUserAssignments\n      Arguments:\n        id: ${okta_app_oauth.test.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppUserAssignments.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Okta application you want to retrieve the groups for.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppUserAssignments.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of application.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of user IDs assigned to the application.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "users"
                ]
            }
        },
        "okta:index/getAuthServerClaim:getAuthServerClaim": {
            "description": "Use this data source to retrieve authorization server claim from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.getAuthServerClaim({\n    authServerId: \"default\",\n    name: \"birthdate\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.get_auth_server_claim(auth_server_id=\"default\",\n    name=\"birthdate\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.GetAuthServerClaim.Invoke(new()\n    {\n        AuthServerId = \"default\",\n        Name = \"birthdate\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetAuthServerClaim(ctx, \u0026okta.GetAuthServerClaimArgs{\n\t\t\tAuthServerId: \"default\",\n\t\t\tName:         pulumi.StringRef(\"birthdate\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetAuthServerClaimArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OktaFunctions.getAuthServerClaim(GetAuthServerClaimArgs.builder()\n            .authServerId(\"default\")\n            .name(\"birthdate\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: okta:getAuthServerClaim\n      Arguments:\n        authServerId: default\n        name: birthdate\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAuthServerClaim.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "Auth server ID.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of the claim. Conflicts with `name`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the claim. Conflicts with `id`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authServerId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAuthServerClaim.\n",
                "properties": {
                    "alwaysIncludeInToken": {
                        "type": "boolean",
                        "description": "Specifies whether to include Claims in the token.\n"
                    },
                    "authServerId": {
                        "type": "string"
                    },
                    "claimType": {
                        "type": "string",
                        "description": "Specifies whether the Claim is for an access token (`\"RESOURCE\"`) or ID token (`\"IDENTITY\"`).\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of the claim.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the claim.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the scopes for this Claim.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the claim.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the claim\n"
                    },
                    "valueType": {
                        "type": "string",
                        "description": "Specifies whether the Claim is an Okta EL expression (`\"EXPRESSION\"`), a set of groups (`\"GROUPS\"`), or a system claim (`\"SYSTEM\"`)\n"
                    }
                },
                "type": "object",
                "required": [
                    "alwaysIncludeInToken",
                    "authServerId",
                    "claimType",
                    "scopes",
                    "status",
                    "value",
                    "valueType"
                ]
            }
        },
        "okta:index/getAuthServerClaims:getAuthServerClaims": {
            "description": "Use this data source to retrieve a list of authorization server claims from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.getAuthServerClaims({\n    authServerId: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.get_auth_server_claims(auth_server_id=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.GetAuthServerClaims.Invoke(new()\n    {\n        AuthServerId = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetAuthServerClaims(ctx, \u0026okta.GetAuthServerClaimsArgs{\n\t\t\tAuthServerId: \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetAuthServerClaimsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OktaFunctions.getAuthServerClaims(GetAuthServerClaimsArgs.builder()\n            .authServerId(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: okta:getAuthServerClaims\n      Arguments:\n        authServerId: default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAuthServerClaims.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "Auth server ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authServerId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAuthServerClaims.\n",
                "properties": {
                    "authServerId": {
                        "type": "string"
                    },
                    "claims": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/getAuthServerClaimsClaim:getAuthServerClaimsClaim"
                        },
                        "description": "collection of authorization server claims retrieved from Okta with the following properties.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authServerId",
                    "claims",
                    "id"
                ]
            }
        },
        "okta:index/getAuthenticator:getAuthenticator": {
            "description": "\u003e **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.\n\nUse this data source to retrieve an authenticator.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.getAuthenticator({\n    name: \"Security Question\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.get_authenticator(name=\"Security Question\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.GetAuthenticator.Invoke(new()\n    {\n        Name = \"Security Question\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.LookupAuthenticator(ctx, \u0026okta.LookupAuthenticatorArgs{\n\t\t\tName: pulumi.StringRef(\"Security Question\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetAuthenticatorArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()\n            .name(\"Security Question\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: okta:getAuthenticator\n      Arguments:\n        name: Security Question\n```\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.getAuthenticator({\n    key: \"okta_email\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.get_authenticator(key=\"okta_email\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.GetAuthenticator.Invoke(new()\n    {\n        Key = \"okta_email\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.LookupAuthenticator(ctx, \u0026okta.LookupAuthenticatorArgs{\n\t\t\tKey: pulumi.StringRef(\"okta_email\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetAuthenticatorArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()\n            .key(\"okta_email\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: okta:getAuthenticator\n      Arguments:\n        key: okta_email\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAuthenticator.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the authenticator.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A human-readable string that identifies the authenticator.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the authenticator.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAuthenticator.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the authenticator.\n"
                    },
                    "key": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the authenticator.\n"
                    },
                    "providerAuthPort": {
                        "type": "integer",
                        "description": "(Specific to `security_key`) The provider server port (for example 1812).\n"
                    },
                    "providerHostname": {
                        "type": "string",
                        "description": "(Specific to `security_key`) Server host name or IP address.\n"
                    },
                    "providerInstanceId": {
                        "type": "string",
                        "description": "(Specific to `security_key`) App Instance ID.\n"
                    },
                    "providerJson": {
                        "type": "string"
                    },
                    "providerType": {
                        "type": "string",
                        "description": "Provider type.\n"
                    },
                    "providerUserNameTemplate": {
                        "type": "string",
                        "description": "Username template expected by the provider.\n"
                    },
                    "settings": {
                        "type": "string",
                        "description": "Settings for the authenticator (expressed in JSON).\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the Authenticator.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of Authenticator.\n"
                    }
                },
                "type": "object",
                "required": [
                    "providerAuthPort",
                    "providerHostname",
                    "providerInstanceId",
                    "providerJson",
                    "providerType",
                    "providerUserNameTemplate",
                    "settings",
                    "status",
                    "type"
                ]
            }
        },
        "okta:index/getBehaviour:getBehaviour": {
            "description": "Use this data source to retrieve a behavior from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetBehaviourArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OktaFunctions.getBehaviour(GetBehaviourArgs.builder()\n            .label(\"New City\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:getBehaviour\n      Arguments:\n        label: New City\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBehaviour.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "`id` of behavior to retrieve, conflicts with `name`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the behavior to retrieve. Name uses the `?q=\u003cname\u003e` query parameter exposed by \nOkta's API.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBehaviour.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Behavior ID.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Behavior name.\n"
                    },
                    "settings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of behavior settings.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Behavior status.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Behavior type.\n"
                    }
                },
                "type": "object",
                "required": [
                    "settings",
                    "status",
                    "type"
                ]
            }
        },
        "okta:index/getBehaviours:getBehaviours": {
            "description": "Use this data source to retrieve a behaviors from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.getBehaviours({\n    q: \"New\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.get_behaviours(q=\"New\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.GetBehaviours.Invoke(new()\n    {\n        Q = \"New\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetBehaviours(ctx, \u0026okta.GetBehavioursArgs{\n\t\t\tQ: pulumi.StringRef(\"New\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetBehavioursArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OktaFunctions.getBehaviours(GetBehavioursArgs.builder()\n            .q(\"New\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:getBehaviours\n      Arguments:\n        q: New\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBehaviours.\n",
                "properties": {
                    "q": {
                        "type": "string",
                        "description": "Searches query to look up behaviors.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBehaviours.\n",
                "properties": {
                    "behaviors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/getBehavioursBehavior:getBehavioursBehavior"
                        },
                        "description": "List of behaviors.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "q": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "behaviors",
                    "id"
                ]
            }
        },
        "okta:index/getBrand:getBrand": {
            "description": "Use this data source to retrieve a [Brand](https://developer.okta.com/docs/reference/api/brands/#brand-object) from Okta.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getBrand.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBrand.\n",
                "properties": {
                    "brandId": {
                        "type": "string"
                    },
                    "customPrivacyPolicyUrl": {
                        "type": "string",
                        "description": "Custom privacy policy URL\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Brand ID\n"
                    },
                    "links": {
                        "type": "string",
                        "description": "Link relations for this object - JSON HAL - Discoverable resources related to the brand\n"
                    },
                    "removePoweredByOkta": {
                        "type": "boolean",
                        "description": "Removes \"Powered by Okta\" from the Okta-hosted sign-in page, and \"© 2021 Okta, Inc.\" from the Okta End-User Dashboard\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId",
                    "customPrivacyPolicyUrl",
                    "id",
                    "links",
                    "removePoweredByOkta"
                ]
            }
        },
        "okta:index/getBrands:getBrands": {
            "description": "Use this data source to retrieve the brands belonging to an Okta organization.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.getBrands({});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.get_brands()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.GetBrands.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetBrands(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OktaFunctions.getBrands();\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: okta:getBrands\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getBrands.\n",
                "properties": {
                    "brands": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/getBrandsBrand:getBrandsBrand"
                        },
                        "description": "List of `okta.Brand` belonging to the organization\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "brands",
                    "id"
                ]
            }
        },
        "okta:index/getEmailCustomization:getEmailCustomization": {
            "description": "Use this data source to retrieve the [email\ncustomization](https://developer.okta.com/docs/reference/api/brands/#get-email-customization)\nof an email template belonging to a brand in an Okta organization.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getEmailCustomization.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    },
                    "customizationId": {
                        "type": "string",
                        "description": "Customization ID\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template Name\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId",
                    "customizationId",
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEmailCustomization.\n",
                "properties": {
                    "body": {
                        "type": "string",
                        "description": "The body of the customization\n"
                    },
                    "brandId": {
                        "type": "string"
                    },
                    "customizationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "Customization ID\n"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Whether the customization is the default\n"
                    },
                    "language": {
                        "type": "string",
                        "description": "The language supported by the customization\n"
                    },
                    "links": {
                        "type": "string",
                        "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template\n"
                    },
                    "subject": {
                        "type": "string",
                        "description": "The subject of the customization\n"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "body",
                    "brandId",
                    "customizationId",
                    "id",
                    "isDefault",
                    "language",
                    "links",
                    "subject",
                    "templateName"
                ]
            }
        },
        "okta:index/getEmailCustomizations:getEmailCustomizations": {
            "description": "Use this data source to retrieve the [email\ncustomizations](https://developer.okta.com/docs/reference/api/brands/#list-email-customizations)\nof an email template belonging to a brand in an Okta organization.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getEmailCustomizations.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Name of an Email Template\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId",
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEmailCustomizations.\n",
                "properties": {
                    "brandId": {
                        "type": "string"
                    },
                    "emailCustomizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/getEmailCustomizationsEmailCustomization:getEmailCustomizationsEmailCustomization"
                        },
                        "description": "List of `okta.EmailCustomization` belonging to the named email template of the brand\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "brandId",
                    "emailCustomizations",
                    "templateName",
                    "id"
                ]
            }
        },
        "okta:index/getGroups:getGroups": {
            "description": "Use this data source to retrieve a list of groups from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.getGroups({\n    q: \"Engineering - \",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.get_groups(q=\"Engineering - \")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.GetGroups.Invoke(new()\n    {\n        Q = \"Engineering - \",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetGroups(ctx, \u0026okta.GetGroupsArgs{\n\t\t\tQ: pulumi.StringRef(\"Engineering - \"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetGroupsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OktaFunctions.getGroups(GetGroupsArgs.builder()\n            .q(\"Engineering - \")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:getGroups\n      Arguments:\n        q: 'Engineering - '\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGroups.\n",
                "properties": {
                    "q": {
                        "type": "string",
                        "description": "Searches the name property of groups for matching value.\n"
                    },
                    "search": {
                        "type": "string",
                        "description": "Searches for groups with a\nsupported [filtering](https://developer.okta.com/docs/reference/api-overview/#filtering) expression for\nall [attributes](https://developer.okta.com/docs/reference/api/groups/#group-attributes)\nexcept for `\"_embedded\"`, `\"_links\"`, and `\"objectClass\"`\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of the group to retrieve. Can only be one of `OKTA_GROUP` (Native Okta Groups), `APP_GROUP`\n(Imported App Groups), or `BUILT_IN` (Okta System Groups).\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroups.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/getGroupsGroup:getGroupsGroup"
                        },
                        "description": "collection of groups retrieved from Okta with the following properties.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "q": {
                        "type": "string"
                    },
                    "search": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Group type.\n"
                    }
                },
                "type": "object",
                "required": [
                    "groups",
                    "id"
                ]
            }
        },
        "okta:index/getNetworkZone:getNetworkZone": {
            "description": "Use this data source to retrieve a network zone from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.getNetworkZone({\n    name: \"Block Antarctica\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.get_network_zone(name=\"Block Antarctica\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.GetNetworkZone.Invoke(new()\n    {\n        Name = \"Block Antarctica\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetNetworkZone(ctx, \u0026okta.GetNetworkZoneArgs{\n\t\t\tName: pulumi.StringRef(\"Block Antarctica\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetNetworkZoneArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OktaFunctions.getNetworkZone(GetNetworkZoneArgs.builder()\n            .name(\"Block Antarctica\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:getNetworkZone\n      Arguments:\n        name: Block Antarctica\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getNetworkZone.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the network zone to retrieve, conflicts with `name`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the network zone to retrieve, conflicts with `id`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNetworkZone.\n",
                "properties": {
                    "asns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of Autonomous System Numbers.\n"
                    },
                    "dynamicLocations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of locations.\n"
                    },
                    "dynamicProxyType": {
                        "type": "string",
                        "description": "Type of proxy being controlled by this dynamic network zone.\n"
                    },
                    "gateways": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values in CIDR/range form.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of the network zone.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the network zone.\n"
                    },
                    "proxies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values in CIDR/range form.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the Network Zone.\n"
                    },
                    "usage": {
                        "type": "string",
                        "description": "Usage of the Network Zone.\n"
                    }
                },
                "type": "object",
                "required": [
                    "asns",
                    "dynamicLocations",
                    "dynamicProxyType",
                    "gateways",
                    "proxies",
                    "type",
                    "usage"
                ]
            }
        },
        "okta:index/getRoleSubscription:getRoleSubscription": {
            "description": "Use this data source to retrieve role subscription with a specific type.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.getRoleSubscription({\n    notificationType: \"APP_IMPORT\",\n    roleType: \"SUPER_ADMIN\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.get_role_subscription(notification_type=\"APP_IMPORT\",\n    role_type=\"SUPER_ADMIN\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.GetRoleSubscription.Invoke(new()\n    {\n        NotificationType = \"APP_IMPORT\",\n        RoleType = \"SUPER_ADMIN\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.LookupRoleSubscription(ctx, \u0026okta.LookupRoleSubscriptionArgs{\n\t\t\tNotificationType: \"APP_IMPORT\",\n\t\t\tRoleType:         \"SUPER_ADMIN\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetRoleSubscriptionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OktaFunctions.getRoleSubscription(GetRoleSubscriptionArgs.builder()\n            .notificationType(\"APP_IMPORT\")\n            .roleType(\"SUPER_ADMIN\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:getRoleSubscription\n      Arguments:\n        notificationType: APP_IMPORT\n        roleType: SUPER_ADMIN\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRoleSubscription.\n",
                "properties": {
                    "notificationType": {
                        "type": "string",
                        "description": "Type of the notification. Valid values: `\"CONNECTOR_AGENT\"`, `\"USER_LOCKED_OUT\"`, \n`\"APP_IMPORT\"`, `\"LDAP_AGENT\"`, `\"AD_AGENT\"`, `\"OKTA_ANNOUNCEMENT\"`, `\"OKTA_ISSUE\"`, `\"OKTA_UPDATE\"`, `\"IWA_AGENT\"`,\n`\"USER_DEPROVISION\"`, `\"REPORT_SUSPICIOUS_ACTIVITY\"`, `\"RATELIMIT_NOTIFICATION\"`.\n"
                    },
                    "roleType": {
                        "type": "string",
                        "description": "Type of the role. Valid values:\n`\"API_ADMIN\"`,\n`\"APP_ADMIN\"`,\n`\"CUSTOM\"`,\n`\"GROUP_MEMBERSHIP_ADMIN\"`,\n`\"HELP_DESK_ADMIN\"`,\n`\"MOBILE_ADMIN\"`,\n`\"ORG_ADMIN\"`,\n`\"READ_ONLY_ADMIN\"`,\n`\"REPORT_ADMIN\"`,\n`\"SUPER_ADMIN\"`,\n`\"USER_ADMIN\"`\n.\n"
                    }
                },
                "type": "object",
                "required": [
                    "notificationType",
                    "roleType"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRoleSubscription.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "notificationType": {
                        "type": "string"
                    },
                    "roleType": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "description": "Subscription status.\n"
                    }
                },
                "type": "object",
                "required": [
                    "notificationType",
                    "roleType",
                    "status",
                    "id"
                ]
            }
        },
        "okta:index/getTemplate:getTemplate": {
            "description": "Use this data source to retrieve a specific [email\ntemplate](https://developer.okta.com/docs/reference/api/brands/#email-template)\nof a brand in an Okta organization.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTemplate.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Template Name\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTemplate.\n",
                "properties": {
                    "brandId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "links": {
                        "type": "string",
                        "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "brandId",
                    "links",
                    "name",
                    "id"
                ]
            }
        },
        "okta:index/getTemplates:getTemplates": {
            "description": "Use this data source to retrieve the [email\ntemplates](https://developer.okta.com/docs/reference/api/brands/#email-template)\nof a brand in an Okta organization.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTemplates.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTemplates.\n",
                "properties": {
                    "brandId": {
                        "type": "string"
                    },
                    "emailTemplates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/getTemplatesEmailTemplate:getTemplatesEmailTemplate"
                        },
                        "description": "List of `okta.getTemplate` belonging to the brand\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId",
                    "emailTemplates",
                    "id"
                ]
            }
        },
        "okta:index/getTheme:getTheme": {
            "description": "Use this data source to retrieve a \n[Theme](https://developer.okta.com/docs/reference/api/brands/#theme-response-object)\nof a brand for an Okta orgnanization.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTheme.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    },
                    "themeId": {
                        "type": "string",
                        "description": "Theme ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId",
                    "themeId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTheme.\n",
                "properties": {
                    "backgroundImageUrl": {
                        "type": "string",
                        "description": "Background image URL\n"
                    },
                    "brandId": {
                        "type": "string"
                    },
                    "emailTemplateTouchPointVariant": {
                        "type": "string",
                        "description": "(Enum) Variant for email templates (`OKTA_DEFAULT`, `FULL_THEME`)\n"
                    },
                    "endUserDashboardTouchPointVariant": {
                        "type": "string",
                        "description": "(Enum) Variant for the Okta End-User Dashboard (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)\n"
                    },
                    "errorPageTouchPointVariant": {
                        "type": "string",
                        "description": "(Enum) Variant for the error page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n"
                    },
                    "faviconUrl": {
                        "type": "string",
                        "description": "Favicon URL\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Theme URL\n"
                    },
                    "links": {
                        "type": "string",
                        "description": "Link relations for this object - JSON HAL - Discoverable resources related to the brand\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Logo URL\n"
                    },
                    "primaryColorContrastHex": {
                        "type": "string",
                        "description": "Primary color contrast hex code\n"
                    },
                    "primaryColorHex": {
                        "type": "string",
                        "description": "Primary color hex code\n"
                    },
                    "secondaryColorContrastHex": {
                        "type": "string",
                        "description": "Secondary color contrast hex code\n"
                    },
                    "secondaryColorHex": {
                        "type": "string",
                        "description": "Secondary color hex code\n"
                    },
                    "signInPageTouchPointVariant": {
                        "type": "string",
                        "description": "(Enum) Variant for the Okta Sign-In Page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n"
                    },
                    "themeId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "backgroundImageUrl",
                    "brandId",
                    "emailTemplateTouchPointVariant",
                    "endUserDashboardTouchPointVariant",
                    "errorPageTouchPointVariant",
                    "faviconUrl",
                    "id",
                    "links",
                    "logoUrl",
                    "primaryColorContrastHex",
                    "primaryColorHex",
                    "secondaryColorContrastHex",
                    "secondaryColorHex",
                    "signInPageTouchPointVariant",
                    "themeId"
                ]
            }
        },
        "okta:index/getThemes:getThemes": {
            "description": "Use this data source to retrieve \n[Themes](https://developer.okta.com/docs/reference/api/brands/#theme-response-object)\nof a brand for an Okta orgnanization.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getThemes.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getThemes.\n",
                "properties": {
                    "brandId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "themes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/getThemesTheme:getThemesTheme"
                        },
                        "description": "List of `okta.Theme` belonging to the brand.\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId",
                    "themes",
                    "id"
                ]
            }
        },
        "okta:index/getTrustedOrigins:getTrustedOrigins": {
            "description": "This resource allows you to retrieve a list of trusted origins from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst all = okta.getTrustedOrigins({});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nall = okta.get_trusted_origins()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Okta.GetTrustedOrigins.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetTrustedOrigins(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetTrustedOriginsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = OktaFunctions.getTrustedOrigins();\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: okta:getTrustedOrigins\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTrustedOrigins.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "Filter criteria (will be URL-encoded by the provider). See [Filtering](https://developer.okta.com/docs/reference/core-okta-api/#filter) for more information on the expressions used in filtering.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTrustedOrigins.\n",
                "properties": {
                    "filter": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "trustedOrigins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/getTrustedOriginsTrustedOrigin:getTrustedOriginsTrustedOrigin"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "trustedOrigins",
                    "id"
                ]
            }
        },
        "okta:index/getUserSecurityQuestions:getUserSecurityQuestions": {
            "description": "Use this data source to retrieve a list of user's security questions.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleUser = new okta.user.User(\"exampleUser\", {\n    firstName: \"John\",\n    lastName: \"Smith\",\n    login: \"john.smith@example.com\",\n    email: \"john.smith@example.com\",\n});\nconst exampleUserSecurityQuestions = okta.getUserSecurityQuestionsOutput({\n    userId: exampleUser.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_user = okta.user.User(\"exampleUser\",\n    first_name=\"John\",\n    last_name=\"Smith\",\n    login=\"john.smith@example.com\",\n    email=\"john.smith@example.com\")\nexample_user_security_questions = okta.get_user_security_questions_output(user_id=example_user.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleUser = new Okta.User.User(\"exampleUser\", new()\n    {\n        FirstName = \"John\",\n        LastName = \"Smith\",\n        Login = \"john.smith@example.com\",\n        Email = \"john.smith@example.com\",\n    });\n\n    var exampleUserSecurityQuestions = Okta.GetUserSecurityQuestions.Invoke(new()\n    {\n        UserId = exampleUser.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleUser, err := user.NewUser(ctx, \"exampleUser\", \u0026user.UserArgs{\n\t\t\tFirstName: pulumi.String(\"John\"),\n\t\t\tLastName:  pulumi.String(\"Smith\"),\n\t\t\tLogin:     pulumi.String(\"john.smith@example.com\"),\n\t\t\tEmail:     pulumi.String(\"john.smith@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_ = okta.GetUserSecurityQuestionsOutput(ctx, okta.GetUserSecurityQuestionsOutputArgs{\n\t\t\tUserId: exampleUser.ID(),\n\t\t}, nil)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.User;\nimport com.pulumi.okta.user.UserArgs;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetUserSecurityQuestionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleUser = new User(\"exampleUser\", UserArgs.builder()        \n            .firstName(\"John\")\n            .lastName(\"Smith\")\n            .login(\"john.smith@example.com\")\n            .email(\"john.smith@example.com\")\n            .build());\n\n        final var exampleUserSecurityQuestions = OktaFunctions.getUserSecurityQuestions(GetUserSecurityQuestionsArgs.builder()\n            .userId(exampleUser.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleUser:\n    type: okta:user:User\n    properties:\n      firstName: John\n      lastName: Smith\n      login: john.smith@example.com\n      email: john.smith@example.com\nvariables:\n  exampleUserSecurityQuestions:\n    fn::invoke:\n      Function: okta:getUserSecurityQuestions\n      Arguments:\n        userId: ${exampleUser.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUserSecurityQuestions.\n",
                "properties": {
                    "userId": {
                        "type": "string",
                        "description": "User ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUserSecurityQuestions.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "questions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/getUserSecurityQuestionsQuestion:getUserSecurityQuestionsQuestion"
                        },
                        "description": "collection of user's security question retrieved from Okta with the following properties:\n"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "questions",
                    "userId",
                    "id"
                ]
            }
        },
        "okta:policy/getDefaultPolicy:getDefaultPolicy": {
            "description": "Use this data source to retrieve a default policy from Okta. This same thing can be achieved using the `okta.policy.getPolicy` with default names, this is simply a shortcut.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.policy.getDefaultPolicy({\n    type: \"PASSWORD\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.policy.get_default_policy(type=\"PASSWORD\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Policy.GetDefaultPolicy.Invoke(new()\n    {\n        Type = \"PASSWORD\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.GetDefaultPolicy(ctx, \u0026policy.GetDefaultPolicyArgs{\n\t\t\tType: \"PASSWORD\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.PolicyFunctions;\nimport com.pulumi.okta.policy.inputs.GetDefaultPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = PolicyFunctions.getDefaultPolicy(GetDefaultPolicyArgs.builder()\n            .type(\"PASSWORD\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:policy:getDefaultPolicy\n      Arguments:\n        type: PASSWORD\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultPolicy.\n",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of policy to retrieve.  Valid values: `OKTA_SIGN_ON`, `PASSWORD`, `MFA_ENROLL`, `IDP_DISCOVERY`\n`\"IDP_DISCOVERY\"`, `\"ACCESS_POLICY\"` (**only available as a part of the Identity Engine**), `\"PROFILE_ENROLLMENT\"` (**only available as a part of the Identity Engine**)\n"
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultPolicy.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of policy.\n"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "id"
                ]
            }
        },
        "okta:policy/getPolicy:getPolicy": {
            "description": "Use this data source to retrieve a policy from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.policy.getPolicy({\n    name: \"Password Policy Example\",\n    type: \"PASSWORD\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.policy.get_policy(name=\"Password Policy Example\",\n    type=\"PASSWORD\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Policy.GetPolicy.Invoke(new()\n    {\n        Name = \"Password Policy Example\",\n        Type = \"PASSWORD\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.GetPolicy(ctx, \u0026policy.GetPolicyArgs{\n\t\t\tName: \"Password Policy Example\",\n\t\t\tType: \"PASSWORD\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.PolicyFunctions;\nimport com.pulumi.okta.policy.inputs.GetPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = PolicyFunctions.getPolicy(GetPolicyArgs.builder()\n            .name(\"Password Policy Example\")\n            .type(\"PASSWORD\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:policy:getPolicy\n      Arguments:\n        name: Password Policy Example\n        type: PASSWORD\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPolicy.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of policy to retrieve.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of policy to retrieve. See https://developer.okta.com/docs/reference/api/policy/#policy-object for valid values. Currently:\n- All:\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPolicy.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of policy.\n"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of policy.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "status",
                    "type",
                    "id"
                ]
            }
        },
        "okta:user/getUser:getUser": {
            "description": "Use this data source to retrieve a users from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.user.getUser({\n    searches: [{\n        expression: \"profile.firstName eq \\\"John\\\"\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.user.get_user(searches=[okta.user.GetUserSearchArgs(\n    expression=\"profile.firstName eq \\\"John\\\"\",\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.User.GetUser.Invoke(new()\n    {\n        Searches = new[]\n        {\n            new Okta.User.Inputs.GetUserSearchInputArgs\n            {\n                Expression = \"profile.firstName eq \\\"John\\\"\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.LookupUser(ctx, \u0026user.LookupUserArgs{\n\t\t\tSearches: []user.GetUserSearch{\n\t\t\t\t{\n\t\t\t\t\tExpression: pulumi.StringRef(\"profile.firstName eq \\\"John\\\"\"),\n\t\t\t\t},\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.UserFunctions;\nimport com.pulumi.okta.user.inputs.GetUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = UserFunctions.getUser(GetUserArgs.builder()\n            .searches(GetUserSearchArgs.builder()\n                .expression(\"profile.firstName eq \\\"John\\\"\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:user:getUser\n      Arguments:\n        searches:\n          - expression: profile.firstName eq \"John\"\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "compoundSearchOperator": {
                        "type": "string",
                        "description": "Given multiple search elements they will be compounded together with the op. Default is `and`, `or` is also valid.\n"
                    },
                    "delayReadSeconds": {
                        "type": "string",
                        "description": "Force delay of the user read by N seconds. Useful when eventual consistency of user information needs to be allowed for.\n"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:user/getUserSearch:getUserSearch"
                        },
                        "description": "Map of search criteria. It supports the following properties.\n"
                    },
                    "skipGroups": {
                        "type": "boolean"
                    },
                    "skipRoles": {
                        "type": "boolean"
                    },
                    "userId": {
                        "type": "string",
                        "description": "String representing a specific user's id value\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "adminRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "city": {
                        "type": "string",
                        "description": "City or locality component of user's address.\n"
                    },
                    "compoundSearchOperator": {
                        "type": "string"
                    },
                    "costCenter": {
                        "type": "string",
                        "description": "Name of a cost center assigned to user.\n"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "Country name component of user's address.\n"
                    },
                    "customProfileAttributes": {
                        "type": "string",
                        "description": "Raw JSON containing all custom profile attributes.\n"
                    },
                    "delayReadSeconds": {
                        "type": "string"
                    },
                    "department": {
                        "type": "string",
                        "description": "Name of user's department.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Name of the user, suitable for display to end users.\n"
                    },
                    "division": {
                        "type": "string",
                        "description": "Name of user's division.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Primary email address of user.\n"
                    },
                    "employeeNumber": {
                        "type": "string",
                        "description": "Organization or company assigned unique identifier for the user.\n"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "Given name of the user.\n"
                    },
                    "groupMemberships": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "honorificPrefix": {
                        "type": "string",
                        "description": "Honorific prefix(es) of the user, or title in most Western languages.\n"
                    },
                    "honorificSuffix": {
                        "type": "string",
                        "description": "Honorific suffix(es) of the user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Family name of the user.\n"
                    },
                    "locale": {
                        "type": "string",
                        "description": "User's default location for purposes of localizing items such as currency, date time format, numerical representations, etc.\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "Unique identifier for the user.\n"
                    },
                    "manager": {
                        "type": "string",
                        "description": "Display name of the user's manager.\n"
                    },
                    "managerId": {
                        "type": "string",
                        "description": "`id` of a user's manager.\n"
                    },
                    "middleName": {
                        "type": "string",
                        "description": "Middle name(s) of the user.\n"
                    },
                    "mobilePhone": {
                        "type": "string",
                        "description": "Mobile phone number of user.\n"
                    },
                    "nickName": {
                        "type": "string",
                        "description": "Casual way to address the user in real life.\n"
                    },
                    "organization": {
                        "type": "string",
                        "description": "Name of user's organization.\n"
                    },
                    "postalAddress": {
                        "type": "string",
                        "description": "Mailing address component of user's address.\n"
                    },
                    "preferredLanguage": {
                        "type": "string",
                        "description": "User's preferred written or spoken languages.\n"
                    },
                    "primaryPhone": {
                        "type": "string",
                        "description": "Primary phone number of user such as home number.\n"
                    },
                    "profileUrl": {
                        "type": "string",
                        "description": "URL of user's online profile (e.g. a web page).\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "All roles assigned to user.\n"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:user/getUserSearch:getUserSearch"
                        }
                    },
                    "secondEmail": {
                        "type": "string",
                        "description": "Secondary email address of user typically used for account recovery.\n"
                    },
                    "skipGroups": {
                        "type": "boolean"
                    },
                    "skipRoles": {
                        "type": "boolean"
                    },
                    "state": {
                        "type": "string",
                        "description": "State or region component of user's address (region).\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of user.\n"
                    },
                    "streetAddress": {
                        "type": "string",
                        "description": "Full street address component of user's address.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "User's time zone.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "User's title, such as \"Vice President\".\n"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "userType": {
                        "type": "string",
                        "description": "Used to describe the organization to user relationship such as \"Employee\" or \"Contractor\".\n"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "Zipcode or postal code component of user's address (postalCode)\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminRoles",
                    "city",
                    "costCenter",
                    "countryCode",
                    "customProfileAttributes",
                    "department",
                    "displayName",
                    "division",
                    "email",
                    "employeeNumber",
                    "firstName",
                    "groupMemberships",
                    "honorificPrefix",
                    "honorificSuffix",
                    "lastName",
                    "locale",
                    "login",
                    "manager",
                    "managerId",
                    "middleName",
                    "mobilePhone",
                    "nickName",
                    "organization",
                    "postalAddress",
                    "preferredLanguage",
                    "primaryPhone",
                    "profileUrl",
                    "roles",
                    "secondEmail",
                    "state",
                    "status",
                    "streetAddress",
                    "timezone",
                    "title",
                    "userType",
                    "zipCode",
                    "id"
                ]
            }
        },
        "okta:user/getUserProfileMappingSource:getUserProfileMappingSource": {
            "description": "Use this data source to retrieve the base user Profile Mapping source or target from Okta.\n\n\u003e **NOTE:** If using this resource with OAuth2 scopes, this resource requires `okta.profileMappings.read` scope.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.user.getUserProfileMappingSource({});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.user.get_user_profile_mapping_source()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.User.GetUserProfileMappingSource.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.GetUserProfileMappingSource(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.UserFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = UserFunctions.getUserProfileMappingSource();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:user:getUserProfileMappingSource\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getUserProfileMappingSource.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "id of the source.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of source.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of source.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "type"
                ]
            }
        },
        "okta:user/getUserType:getUserType": {
            "description": "Use this data source to retrieve a user type from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.user.getUserType({\n    name: \"example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.user.get_user_type(name=\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.User.GetUserType.Invoke(new()\n    {\n        Name = \"example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.LookupUserType(ctx, \u0026user.LookupUserTypeArgs{\n\t\t\tName: \"example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.UserFunctions;\nimport com.pulumi.okta.user.inputs.GetUserTypeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = UserFunctions.getUserType(GetUserTypeArgs.builder()\n            .name(\"example\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:user:getUserType\n      Arguments:\n        name: example\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUserType.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "name of user type to retrieve.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUserType.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "description of user type.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "display name of user type.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of user type.\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "name",
                    "id"
                ]
            }
        },
        "okta:user/getUsers:getUsers": {
            "description": "Use this data source to retrieve a list of users from Okta.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### Lookup Users by Search Criteria\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.user.getUsers({\n    searches: [{\n        expression: \"profile.department eq \\\"Engineering\\\" and (created lt \\\"2014-01-01T00:00:00.000Z\\\" or status eq \\\"ACTIVE\\\")\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.user.get_users(searches=[okta.user.GetUsersSearchArgs(\n    expression=\"profile.department eq \\\"Engineering\\\" and (created lt \\\"2014-01-01T00:00:00.000Z\\\" or status eq \\\"ACTIVE\\\")\",\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.User.GetUsers.Invoke(new()\n    {\n        Searches = new[]\n        {\n            new Okta.User.Inputs.GetUsersSearchInputArgs\n            {\n                Expression = \"profile.department eq \\\"Engineering\\\" and (created lt \\\"2014-01-01T00:00:00.000Z\\\" or status eq \\\"ACTIVE\\\")\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.GetUsers(ctx, \u0026user.GetUsersArgs{\n\t\t\tSearches: []user.GetUsersSearch{\n\t\t\t\t{\n\t\t\t\t\tExpression: pulumi.StringRef(\"profile.department eq \\\"Engineering\\\" and (created lt \\\"2014-01-01T00:00:00.000Z\\\" or status eq \\\"ACTIVE\\\")\"),\n\t\t\t\t},\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.UserFunctions;\nimport com.pulumi.okta.user.inputs.GetUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = UserFunctions.getUsers(GetUsersArgs.builder()\n            .searches(GetUsersSearchArgs.builder()\n                .expression(\"profile.department eq \\\"Engineering\\\" and (created lt \\\"2014-01-01T00:00:00.000Z\\\" or status eq \\\"ACTIVE\\\")\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: okta:user:getUsers\n      Arguments:\n        searches:\n          - expression: profile.department eq \"Engineering\" and (created lt \"2014-01-01T00:00:00.000Z\" or status eq \"ACTIVE\")\n```\n{{% /example %}}\n{{% example %}}\n### Lookup Users by Group Membership\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleGroup = new okta.group.Group(\"exampleGroup\", {});\nconst exampleUsers = okta.user.getUsersOutput({\n    groupId: exampleGroup.id,\n    includeGroups: true,\n    includeRoles: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_group = okta.group.Group(\"exampleGroup\")\nexample_users = okta.user.get_users_output(group_id=example_group.id,\n    include_groups=True,\n    include_roles=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleGroup = new Okta.Group.Group(\"exampleGroup\");\n\n    var exampleUsers = Okta.User.GetUsers.Invoke(new()\n    {\n        GroupId = exampleGroup.Id,\n        IncludeGroups = true,\n        IncludeRoles = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/group\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleGroup, err := group.NewGroup(ctx, \"exampleGroup\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_ = user.GetUsersOutput(ctx, user.GetUsersOutputArgs{\n\t\t\tGroupId:       exampleGroup.ID(),\n\t\t\tIncludeGroups: pulumi.Bool(true),\n\t\t\tIncludeRoles:  pulumi.Bool(true),\n\t\t}, nil)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.group.Group;\nimport com.pulumi.okta.user.UserFunctions;\nimport com.pulumi.okta.user.inputs.GetUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleGroup = new Group(\"exampleGroup\");\n\n        final var exampleUsers = UserFunctions.getUsers(GetUsersArgs.builder()\n            .groupId(exampleGroup.id())\n            .includeGroups(true)\n            .includeRoles(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleGroup:\n    type: okta:group:Group\nvariables:\n  exampleUsers:\n    fn::invoke:\n      Function: okta:user:getUsers\n      Arguments:\n        groupId: ${exampleGroup.id}\n        includeGroups: true\n        includeRoles: true\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "compoundSearchOperator": {
                        "type": "string",
                        "description": "Given multiple search elements they will be compounded together with the op. Default is `and`, `or` is also valid.\n"
                    },
                    "delayReadSeconds": {
                        "type": "string",
                        "description": "Force delay of the users read by N seconds. Useful when eventual consistency of users information needs to be allowed for; for instance, when administrator roles are known to have been applied.\n"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Id of group used to find users based on membership.\n"
                    },
                    "includeGroups": {
                        "type": "boolean",
                        "description": "Fetch each user's group memberships. Defaults to `false`, in which case the `group_memberships` user attribute will be empty.\n"
                    },
                    "includeRoles": {
                        "type": "boolean",
                        "description": "Fetch each user's administrator roles. Defaults to `false`, in which case the `admin_roles` user attribute will be empty.\n"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:user/getUsersSearch:getUsersSearch"
                        },
                        "description": "Map of search criteria. It supports the following properties.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "compoundSearchOperator": {
                        "type": "string"
                    },
                    "delayReadSeconds": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "includeGroups": {
                        "type": "boolean"
                    },
                    "includeRoles": {
                        "type": "boolean"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:user/getUsersSearch:getUsersSearch"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:user/getUsersUser:getUsersUser"
                        },
                        "description": "collection of users retrieved from Okta with the following properties.\n"
                    }
                },
                "type": "object",
                "required": [
                    "users",
                    "id"
                ]
            }
        }
    }
}
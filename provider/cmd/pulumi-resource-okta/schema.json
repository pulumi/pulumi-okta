{
    "name": "okta",
    "description": "A Pulumi package for creating and managing okta resources.",
    "keywords": [
        "pulumi",
        "okta"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`okta` Terraform Provider](https://github.com/okta/terraform-provider-okta).",
    "repository": "https://github.com/pulumi/pulumi-okta",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "namespaces": {
                "app": "App",
                "auth": "Auth",
                "factor": "Factor",
                "group": "Group",
                "idp": "Idp",
                "index": "Index",
                "inline": "Inline",
                "network": "Network",
                "okta": "Okta",
                "policy": "Policy",
                "profile": "Profile",
                "trustedorigin": "TrustedOrigin",
                "user": "User"
            },
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-okta/sdk/v5/go/okta",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing okta resources.. Based on terraform-provider-okta: version v5.3.0",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/okta/terraform-provider-okta)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-okta` repo](https://github.com/pulumi/pulumi-okta/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-okta` repo](https://github.com/okta/terraform-provider-okta/issues).",
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/okta/terraform-provider-okta)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-okta` repo](https://github.com/pulumi/pulumi-okta/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-okta` repo](https://github.com/okta/terraform-provider-okta/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "accessToken": {
                "type": "string",
                "description": "Bearer token granting privileges to Okta API.\n",
                "secret": true
            },
            "apiToken": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n",
                "secret": true
            },
            "backoff": {
                "type": "boolean",
                "description": "Use exponential back off strategy for rate limits.\n"
            },
            "baseUrl": {
                "type": "string",
                "description": "The Okta url. (Use 'oktapreview.com' for Okta testing)\n"
            },
            "clientId": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "httpProxy": {
                "type": "string",
                "description": "Alternate HTTP proxy of scheme://hostname or scheme://hostname:port format\n"
            },
            "logLevel": {
                "type": "integer",
                "description": "providers log level. Minimum is 1 (TRACE), and maximum is 5 (ERROR)\n"
            },
            "maxApiCapacity": {
                "type": "integer",
                "description": "Sets what percentage of capacity the provider can use of the total rate limit capacity while making calls to the Okta\nmanagement API endpoints. Okta API operates in one minute buckets. See Okta Management API Rate Limits:\nhttps://developer.okta.com/docs/reference/rl-global-mgmt/\n"
            },
            "maxRetries": {
                "type": "integer",
                "description": "maximum number of retries to attempt before erroring out.\n"
            },
            "maxWaitSeconds": {
                "type": "integer",
                "description": "maximum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.\n"
            },
            "minWaitSeconds": {
                "type": "integer",
                "description": "minimum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.\n"
            },
            "orgName": {
                "type": "string",
                "description": "The organization to manage in Okta.\n"
            },
            "parallelism": {
                "type": "integer",
                "description": "Number of concurrent requests to make within a resource where bulk operations are not possible. Take note of\nhttps://developer.okta.com/docs/api/getting_started/rate-limits.\n"
            },
            "privateKey": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n",
                "secret": true
            },
            "privateKeyId": {
                "type": "string",
                "description": "API Token Id granting privileges to Okta API.\n"
            },
            "requestTimeout": {
                "type": "integer",
                "description": "Timeout for single request (in seconds) which is made to Okta, the default is `0` (means no limit is set). The maximum\nvalue can be `300`.\n"
            },
            "scopes": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "API Token granting privileges to Okta API.\n"
            }
        }
    },
    "types": {
        "okta:app/OAuthGroupsClaim:OAuthGroupsClaim": {
            "properties": {
                "filterType": {
                    "type": "string",
                    "description": "Groups claim filter. Can only be set if type is FILTER.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Issuer mode inherited from OAuth App\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the claim that will be used in the token.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Groups claim type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value of the claim. Can be an Okta Expression Language statement that evaluates at the time the token is minted.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "issuerMode",
                        "name",
                        "type",
                        "value"
                    ]
                }
            }
        },
        "okta:app/OAuthJwk:OAuthJwk": {
            "properties": {
                "e": {
                    "type": "string",
                    "description": "RSA Exponent\n"
                },
                "kid": {
                    "type": "string",
                    "description": "Key ID\n"
                },
                "kty": {
                    "type": "string",
                    "description": "Key type\n"
                },
                "n": {
                    "type": "string",
                    "description": "RSA Modulus\n"
                },
                "x": {
                    "type": "string",
                    "description": "X coordinate of the elliptic curve point\n"
                },
                "y": {
                    "type": "string",
                    "description": "Y coordinate of the elliptic curve point\n"
                }
            },
            "type": "object",
            "required": [
                "kid",
                "kty"
            ]
        },
        "okta:app/SamlAcsEndpointsIndex:SamlAcsEndpointsIndex": {
            "properties": {
                "index": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index",
                "url"
            ]
        },
        "okta:app/SamlAttributeStatement:SamlAttributeStatement": {
            "properties": {
                "filterType": {
                    "type": "string",
                    "description": "Type of group attribute filter. Valid values are: `STARTS_WITH`, `EQUALS`, `CONTAINS`, or `REGEX`\n"
                },
                "filterValue": {
                    "type": "string",
                    "description": "Filter value to use\n"
                },
                "name": {
                    "type": "string",
                    "description": "The reference name of the attribute statement\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The attribute namespace. It can be set to `urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified`, `urn:oasis:names:tc:SAML:2.0:attrname-format:uri`, or `urn:oasis:names:tc:SAML:2.0:attrname-format:basic`\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of attribute statements object\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "okta:app/SamlKey:SamlKey": {
            "properties": {
                "created": {
                    "type": "string",
                    "description": "Created date\n"
                },
                "e": {
                    "type": "string",
                    "description": "RSA exponent\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "Expiration date\n"
                },
                "kid": {
                    "type": "string",
                    "description": "Key ID\n"
                },
                "kty": {
                    "type": "string",
                    "description": "Key type. Identifies the cryptographic algorithm family used with the key.\n"
                },
                "lastUpdated": {
                    "type": "string",
                    "description": "Last updated date\n"
                },
                "n": {
                    "type": "string",
                    "description": "RSA modulus\n"
                },
                "use": {
                    "type": "string",
                    "description": "Intended use of the public key.\n"
                },
                "x5cs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "X.509 Certificate Chain\n"
                },
                "x5tS256": {
                    "type": "string",
                    "description": "X.509 certificate SHA-256 thumbprint\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "created",
                        "e",
                        "expiresAt",
                        "kid",
                        "kty",
                        "lastUpdated",
                        "n",
                        "use",
                        "x5cs",
                        "x5tS256"
                    ]
                }
            }
        },
        "okta:app/getSamlAttributeStatement:getSamlAttributeStatement": {
            "properties": {
                "filterType": {
                    "type": "string",
                    "description": "Type of group attribute filter\n"
                },
                "filterValue": {
                    "type": "string",
                    "description": "Filter value to use\n"
                },
                "name": {
                    "type": "string",
                    "description": "The reference name of the attribute statement\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The name format of the attribute\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of attribute statements object\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "filterType",
                "filterValue",
                "name",
                "namespace",
                "type",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:auth/getServerScopesScope:getServerScopesScope": {
            "properties": {
                "consent": {
                    "type": "string",
                    "description": "Indicates whether a consent dialog is needed for the Scope\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "Whether the Scope is a default Scope\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Scope\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Name of the end user displayed in a consent dialog box\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the Scope\n"
                },
                "metadataPublish": {
                    "type": "string",
                    "description": "Whether the Scope should be included in the metadata\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Scope\n"
                },
                "optional": {
                    "type": "boolean",
                    "description": "Whether the Scope is optional\n"
                },
                "system": {
                    "type": "boolean",
                    "description": "Whether Okta created the Scope\n"
                }
            },
            "type": "object",
            "required": [
                "consent",
                "default",
                "description",
                "displayName",
                "id",
                "metadataPublish",
                "name",
                "optional",
                "system"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/AppGroupAssignmentsGroup:AppGroupAssignmentsGroup": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "A group to associate with the application\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of group assignment\n"
                },
                "profile": {
                    "type": "string",
                    "description": "JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "profile"
            ]
        },
        "okta:index/AppSignonPolicyRulePlatformInclude:AppSignonPolicyRulePlatformInclude": {
            "properties": {
                "osExpression": {
                    "type": "string",
                    "description": "Only available with OTHER OS type\n"
                },
                "osType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "okta:index/AppUserSchemaPropertyArrayOneOf:AppUserSchemaPropertyArrayOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "Value mapping to member of `array_enum`\n"
                },
                "title": {
                    "type": "string",
                    "description": "Display name for the enum value.\n"
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:index/AppUserSchemaPropertyOneOf:AppUserSchemaPropertyOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "Enum value\n"
                },
                "title": {
                    "type": "string",
                    "description": "Enum title\n"
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:index/CustomizedSigninPageContentSecurityPolicySetting:CustomizedSigninPageContentSecurityPolicySetting": {
            "properties": {
                "mode": {
                    "type": "string",
                    "description": "enforced or report_only\n"
                },
                "reportUri": {
                    "type": "string"
                },
                "srcLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "okta:index/CustomizedSigninPageWidgetCustomizations:CustomizedSigninPageWidgetCustomizations": {
            "properties": {
                "authenticatorPageCustomLinkLabel": {
                    "type": "string"
                },
                "authenticatorPageCustomLinkUrl": {
                    "type": "string"
                },
                "classicRecoveryFlowEmailOrUsernameLabel": {
                    "type": "string"
                },
                "customLink1Label": {
                    "type": "string"
                },
                "customLink1Url": {
                    "type": "string"
                },
                "customLink2Label": {
                    "type": "string"
                },
                "customLink2Url": {
                    "type": "string"
                },
                "forgotPasswordLabel": {
                    "type": "string"
                },
                "forgotPasswordUrl": {
                    "type": "string"
                },
                "helpLabel": {
                    "type": "string"
                },
                "helpUrl": {
                    "type": "string"
                },
                "passwordInfoTip": {
                    "type": "string"
                },
                "passwordLabel": {
                    "type": "string"
                },
                "showPasswordVisibilityToggle": {
                    "type": "boolean"
                },
                "showUserIdentifier": {
                    "type": "boolean"
                },
                "signInLabel": {
                    "type": "string"
                },
                "unlockAccountLabel": {
                    "type": "string"
                },
                "unlockAccountUrl": {
                    "type": "string"
                },
                "usernameInfoTip": {
                    "type": "string"
                },
                "usernameLabel": {
                    "type": "string"
                },
                "widgetGeneration": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "widgetGeneration"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "showPasswordVisibilityToggle",
                        "showUserIdentifier",
                        "widgetGeneration"
                    ]
                }
            }
        },
        "okta:index/DomainDnsRecord:DomainDnsRecord": {
            "properties": {
                "expiration": {
                    "type": "string",
                    "description": "TXT record expiration\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "DNS record name\n"
                },
                "recordType": {
                    "type": "string",
                    "description": "Record type can be TXT or CNAME\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "DNS verification value\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expiration",
                        "fqdn",
                        "recordType",
                        "values"
                    ]
                }
            }
        },
        "okta:index/EmailDomainDnsValidationRecord:EmailDomainDnsValidationRecord": {
            "properties": {
                "expiration": {
                    "type": "string",
                    "description": "DNS TXT record expiration\n",
                    "deprecationMessage": "This field has been removed in the newest go sdk version and has become noop"
                },
                "fqdn": {
                    "type": "string",
                    "description": "DNS record name\n"
                },
                "recordType": {
                    "type": "string",
                    "description": "Record type can be TXT or cname\n"
                },
                "value": {
                    "type": "string",
                    "description": "DNS record value\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expiration",
                        "fqdn",
                        "recordType",
                        "value"
                    ]
                }
            }
        },
        "okta:index/EmailSenderDnsRecord:EmailSenderDnsRecord": {
            "properties": {
                "fqdn": {
                    "type": "string",
                    "description": "DNS record name\n"
                },
                "recordType": {
                    "type": "string",
                    "description": "Record type can be TXT or CNAME\n"
                },
                "value": {
                    "type": "string",
                    "description": "DNS verification value\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fqdn",
                        "recordType",
                        "value"
                    ]
                }
            }
        },
        "okta:index/EventHookHeader:EventHookHeader": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "okta:index/FeatureStage:FeatureStage": {
            "properties": {
                "state": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "state",
                "value"
            ]
        },
        "okta:index/GroupSchemaPropertyArrayOneOf:GroupSchemaPropertyArrayOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "Value mapping to member of `array_enum`\n"
                },
                "title": {
                    "type": "string",
                    "description": "Display name for the enum value.\n"
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:index/GroupSchemaPropertyMasterOverridePriority:GroupSchemaPropertyMasterOverridePriority": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "okta:index/GroupSchemaPropertyOneOf:GroupSchemaPropertyOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "Enum value\n"
                },
                "title": {
                    "type": "string",
                    "description": "Enum title\n"
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:index/LogStreamSettings:LogStreamSettings": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "AWS account ID. Required only for 'aws_eventbridge' type\n"
                },
                "edition": {
                    "type": "string",
                    "description": "Edition of the Splunk Cloud instance. Could be one of: 'aws', 'aws*govcloud', 'gcp'. Required only for 'splunk*cloud_logstreaming' type\n"
                },
                "eventSourceName": {
                    "type": "string",
                    "description": "An alphanumeric name (no spaces) to identify this event source in AWS EventBridge. Required only for 'aws_eventbridge' type\n"
                },
                "host": {
                    "type": "string",
                    "description": "The domain name for Splunk Cloud instance. Don't include http or https in the string. For example: 'acme.splunkcloud.com'. Required only for 'splunk*cloud*logstreaming' type\n"
                },
                "region": {
                    "type": "string",
                    "description": "The destination AWS region where event source is located. Required only for 'aws_eventbridge' type\n"
                },
                "token": {
                    "type": "string",
                    "description": "The HEC token for your Splunk Cloud HTTP Event Collector. Required only for 'splunk*cloud*logstreaming' type\n",
                    "secret": true
                }
            },
            "type": "object"
        },
        "okta:index/PolicyRuleProfileEnrollmentProfileAttribute:PolicyRuleProfileEnrollmentProfileAttribute": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "A display-friendly label for this property\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of a User Profile property\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Indicates if this property is required for enrollment\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "name"
            ]
        },
        "okta:index/PreviewSigninPageContentSecurityPolicySetting:PreviewSigninPageContentSecurityPolicySetting": {
            "properties": {
                "mode": {
                    "type": "string",
                    "description": "enforced or report_only\n"
                },
                "reportUri": {
                    "type": "string"
                },
                "srcLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "okta:index/PreviewSigninPageWidgetCustomizations:PreviewSigninPageWidgetCustomizations": {
            "properties": {
                "authenticatorPageCustomLinkLabel": {
                    "type": "string"
                },
                "authenticatorPageCustomLinkUrl": {
                    "type": "string"
                },
                "classicRecoveryFlowEmailOrUsernameLabel": {
                    "type": "string"
                },
                "customLink1Label": {
                    "type": "string"
                },
                "customLink1Url": {
                    "type": "string"
                },
                "customLink2Label": {
                    "type": "string"
                },
                "customLink2Url": {
                    "type": "string"
                },
                "forgotPasswordLabel": {
                    "type": "string"
                },
                "forgotPasswordUrl": {
                    "type": "string"
                },
                "helpLabel": {
                    "type": "string"
                },
                "helpUrl": {
                    "type": "string"
                },
                "passwordInfoTip": {
                    "type": "string"
                },
                "passwordLabel": {
                    "type": "string"
                },
                "showPasswordVisibilityToggle": {
                    "type": "boolean"
                },
                "showUserIdentifier": {
                    "type": "boolean"
                },
                "signInLabel": {
                    "type": "string"
                },
                "unlockAccountLabel": {
                    "type": "string"
                },
                "unlockAccountUrl": {
                    "type": "string"
                },
                "usernameInfoTip": {
                    "type": "string"
                },
                "usernameLabel": {
                    "type": "string"
                },
                "widgetGeneration": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "widgetGeneration"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "showPasswordVisibilityToggle",
                        "showUserIdentifier",
                        "widgetGeneration"
                    ]
                }
            }
        },
        "okta:index/TemplateSmsTranslation:TemplateSmsTranslation": {
            "properties": {
                "language": {
                    "type": "string",
                    "description": "The language to map the template to.\n"
                },
                "template": {
                    "type": "string",
                    "description": "The SMS message.\n"
                }
            },
            "type": "object",
            "required": [
                "language",
                "template"
            ]
        },
        "okta:index/UserSchemaPropertyArrayOneOf:UserSchemaPropertyArrayOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "Value mapping to member of `array_enum`\n"
                },
                "title": {
                    "type": "string",
                    "description": "Display name for the enum value.\n"
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:index/UserSchemaPropertyMasterOverridePriority:UserSchemaPropertyMasterOverridePriority": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "okta:index/UserSchemaPropertyOneOf:UserSchemaPropertyOneOf": {
            "properties": {
                "const": {
                    "type": "string",
                    "description": "Enum value\n"
                },
                "title": {
                    "type": "string",
                    "description": "Enum title\n"
                }
            },
            "type": "object",
            "required": [
                "const",
                "title"
            ]
        },
        "okta:index/getAppsApp:getAppsApp": {
            "properties": {
                "adminNote": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "enduserNote": {
                    "type": "string"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "lastUpdated": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "signOnMode": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "visibility": {
                    "$ref": "#/types/okta:index/getAppsAppVisibility:getAppsAppVisibility"
                }
            },
            "type": "object",
            "required": [
                "adminNote",
                "created",
                "enduserNote",
                "features",
                "id",
                "label",
                "lastUpdated",
                "name",
                "signOnMode",
                "status",
                "visibility"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getAppsAppVisibility:getAppsAppVisibility": {
            "properties": {
                "autoLaunch": {
                    "type": "boolean"
                },
                "autoSubmitToolbar": {
                    "type": "boolean"
                },
                "hide": {
                    "$ref": "#/types/okta:index/getAppsAppVisibilityHide:getAppsAppVisibilityHide"
                }
            },
            "type": "object",
            "required": [
                "autoLaunch",
                "autoSubmitToolbar",
                "hide"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getAppsAppVisibilityHide:getAppsAppVisibilityHide": {
            "properties": {
                "ios": {
                    "type": "boolean"
                },
                "web": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "ios",
                "web"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getAuthServerClaimsClaim:getAuthServerClaimsClaim": {
            "properties": {
                "alwaysIncludeInToken": {
                    "type": "boolean",
                    "description": "Specifies whether to include Claims in the token.\n"
                },
                "claimType": {
                    "type": "string",
                    "description": "Specifies whether the Claim is for an access token (`RESOURCE`) or ID token (`IDENTITY`).\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the claim.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the claim.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the scopes for this Claim.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the claim.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value of the claim.\n"
                },
                "valueType": {
                    "type": "string",
                    "description": "Specifies whether the Claim is an Okta EL expression (`EXPRESSION`), a set of groups (`GROUPS`), or a system claim (`SYSTEM`)\n"
                }
            },
            "type": "object",
            "required": [
                "alwaysIncludeInToken",
                "claimType",
                "id",
                "name",
                "scopes",
                "status",
                "value",
                "valueType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getBehavioursBehavior:getBehavioursBehavior": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Behavior ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Behavior name.\n"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of behavior settings.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Behavior status.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Behavior type.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "settings",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getBrandsBrand:getBrandsBrand": {
            "properties": {
                "customPrivacyPolicyUrl": {
                    "type": "string",
                    "description": "Custom privacy policy URL\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the Brand\n"
                },
                "links": {
                    "type": "string",
                    "description": "Link relations for this object - JSON HAL - Discoverable resources related to the brand\n"
                },
                "name": {
                    "type": "string",
                    "description": "Brand name\n"
                },
                "removePoweredByOkta": {
                    "type": "boolean",
                    "description": "Removes \"Powered by Okta\" from the Okta-hosted sign-in page and \"© 2021 Okta, Inc.\" from the Okta End-User Dashboard\n"
                }
            },
            "type": "object",
            "required": [
                "customPrivacyPolicyUrl",
                "id",
                "links",
                "name",
                "removePoweredByOkta"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getDefaultSigninPageContentSecurityPolicySetting:getDefaultSigninPageContentSecurityPolicySetting": {
            "properties": {
                "mode": {
                    "type": "string",
                    "description": "enforced or report_only\n"
                },
                "reportUri": {
                    "type": "string"
                },
                "srcLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "mode",
                "reportUri",
                "srcLists"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getDefaultSigninPageWidgetCustomizations:getDefaultSigninPageWidgetCustomizations": {
            "properties": {
                "authenticatorPageCustomLinkLabel": {
                    "type": "string"
                },
                "authenticatorPageCustomLinkUrl": {
                    "type": "string"
                },
                "classicRecoveryFlowEmailOrUsernameLabel": {
                    "type": "string"
                },
                "customLink1Label": {
                    "type": "string"
                },
                "customLink1Url": {
                    "type": "string"
                },
                "customLink2Label": {
                    "type": "string"
                },
                "customLink2Url": {
                    "type": "string"
                },
                "forgotPasswordLabel": {
                    "type": "string"
                },
                "forgotPasswordUrl": {
                    "type": "string"
                },
                "helpLabel": {
                    "type": "string"
                },
                "helpUrl": {
                    "type": "string"
                },
                "passwordInfoTip": {
                    "type": "string"
                },
                "passwordLabel": {
                    "type": "string"
                },
                "showPasswordVisibilityToggle": {
                    "type": "boolean"
                },
                "showUserIdentifier": {
                    "type": "boolean"
                },
                "signInLabel": {
                    "type": "string"
                },
                "unlockAccountLabel": {
                    "type": "string"
                },
                "unlockAccountUrl": {
                    "type": "string"
                },
                "usernameInfoTip": {
                    "type": "string"
                },
                "usernameLabel": {
                    "type": "string"
                },
                "widgetGeneration": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authenticatorPageCustomLinkLabel",
                "authenticatorPageCustomLinkUrl",
                "classicRecoveryFlowEmailOrUsernameLabel",
                "customLink1Label",
                "customLink1Url",
                "customLink2Label",
                "customLink2Url",
                "forgotPasswordLabel",
                "forgotPasswordUrl",
                "helpLabel",
                "helpUrl",
                "passwordInfoTip",
                "passwordLabel",
                "showPasswordVisibilityToggle",
                "showUserIdentifier",
                "signInLabel",
                "unlockAccountLabel",
                "unlockAccountUrl",
                "usernameInfoTip",
                "usernameLabel",
                "widgetGeneration"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getDeviceAssurancePolicyDiskEncryptionType:getDeviceAssurancePolicyDiskEncryptionType": {
            "properties": {
                "includes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "includes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getDeviceAssurancePolicyOsVersion:getDeviceAssurancePolicyOsVersion": {
            "properties": {
                "dynamicVersionRequirement": {
                    "$ref": "#/types/okta:index/getDeviceAssurancePolicyOsVersionDynamicVersionRequirement:getDeviceAssurancePolicyOsVersionDynamicVersionRequirement"
                },
                "minimum": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dynamicVersionRequirement",
                "minimum"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getDeviceAssurancePolicyOsVersionConstraint:getDeviceAssurancePolicyOsVersionConstraint": {
            "properties": {
                "dynamicVersionRequirement": {
                    "$ref": "#/types/okta:index/getDeviceAssurancePolicyOsVersionConstraintDynamicVersionRequirement:getDeviceAssurancePolicyOsVersionConstraintDynamicVersionRequirement"
                },
                "majorVersionConstraint": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dynamicVersionRequirement",
                "majorVersionConstraint"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getDeviceAssurancePolicyOsVersionConstraintDynamicVersionRequirement:getDeviceAssurancePolicyOsVersionConstraintDynamicVersionRequirement": {
            "properties": {
                "distanceFromLatestMajor": {
                    "type": "integer"
                },
                "latestSecurityPatch": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "distanceFromLatestMajor",
                "latestSecurityPatch",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getDeviceAssurancePolicyOsVersionDynamicVersionRequirement:getDeviceAssurancePolicyOsVersionDynamicVersionRequirement": {
            "properties": {
                "distanceFromLatestMajor": {
                    "type": "integer"
                },
                "latestSecurityPatch": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "distanceFromLatestMajor",
                "latestSecurityPatch",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getDeviceAssurancePolicyScreenlockType:getDeviceAssurancePolicyScreenlockType": {
            "properties": {
                "includes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "includes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getDeviceAssurancePolicyThirdPartySignalProvider:getDeviceAssurancePolicyThirdPartySignalProvider": {
            "properties": {
                "dtc": {
                    "$ref": "#/types/okta:index/getDeviceAssurancePolicyThirdPartySignalProviderDtc:getDeviceAssurancePolicyThirdPartySignalProviderDtc"
                }
            },
            "type": "object",
            "required": [
                "dtc"
            ]
        },
        "okta:index/getDeviceAssurancePolicyThirdPartySignalProviderDtc:getDeviceAssurancePolicyThirdPartySignalProviderDtc": {
            "properties": {
                "allowScreenLock": {
                    "type": "boolean"
                },
                "browserVersion": {
                    "$ref": "#/types/okta:index/getDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion:getDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion"
                },
                "builtInDnsClientEnabled": {
                    "type": "boolean"
                },
                "chromeRemoteDesktopAppBlocked": {
                    "type": "boolean"
                },
                "crowdStrikeAgentId": {
                    "type": "string"
                },
                "crowdStrikeCustomerId": {
                    "type": "string"
                },
                "deviceEnrollmentDomain": {
                    "type": "string"
                },
                "diskEncrypted": {
                    "type": "boolean"
                },
                "keyTrustLevel": {
                    "type": "string"
                },
                "managedDevice": {
                    "type": "boolean"
                },
                "osFirewall": {
                    "type": "boolean"
                },
                "osVersion": {
                    "$ref": "#/types/okta:index/getDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersion:getDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersion"
                },
                "passwordProtectionWarningTrigger": {
                    "type": "string"
                },
                "realtimeUrlCheckMode": {
                    "type": "boolean"
                },
                "safeBrowsingProtectionLevel": {
                    "type": "string"
                },
                "screenLockSecured": {
                    "type": "boolean"
                },
                "siteIsolationEnabled": {
                    "type": "boolean"
                },
                "thirdPartyBlockingEnabled": {
                    "type": "boolean"
                },
                "windowsMachineDomain": {
                    "type": "string"
                },
                "windowsUserDomain": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "allowScreenLock",
                "browserVersion",
                "builtInDnsClientEnabled",
                "chromeRemoteDesktopAppBlocked",
                "crowdStrikeAgentId",
                "crowdStrikeCustomerId",
                "deviceEnrollmentDomain",
                "diskEncrypted",
                "keyTrustLevel",
                "managedDevice",
                "osFirewall",
                "osVersion",
                "passwordProtectionWarningTrigger",
                "realtimeUrlCheckMode",
                "safeBrowsingProtectionLevel",
                "screenLockSecured",
                "siteIsolationEnabled",
                "thirdPartyBlockingEnabled",
                "windowsMachineDomain",
                "windowsUserDomain"
            ]
        },
        "okta:index/getDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion:getDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion": {
            "properties": {
                "minimum": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "minimum"
            ]
        },
        "okta:index/getDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersion:getDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersion": {
            "properties": {
                "minimum": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "minimum"
            ]
        },
        "okta:index/getDomainDnsRecord:getDomainDnsRecord": {
            "properties": {
                "expiration": {
                    "type": "string",
                    "description": "TXT record expiration\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "DNS record name\n"
                },
                "recordType": {
                    "type": "string",
                    "description": "Record type can be TXT or CNAME\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "DNS verification value\n"
                }
            },
            "type": "object",
            "required": [
                "expiration",
                "fqdn",
                "recordType",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getEmailCustomizationsEmailCustomization:getEmailCustomizationsEmailCustomization": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The body of the customization\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the customization\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Whether the customization is the default\n"
                },
                "language": {
                    "type": "string",
                    "description": "The language supported by the customization\n"
                },
                "links": {
                    "type": "string",
                    "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the customization\n"
                }
            },
            "type": "object",
            "required": [
                "body",
                "id",
                "isDefault",
                "language",
                "links",
                "subject"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getFeaturesFeature:getFeaturesFeature": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "stage": {
                    "$ref": "#/types/okta:index/getFeaturesFeatureStage:getFeaturesFeatureStage"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "stage",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getFeaturesFeatureStage:getFeaturesFeatureStage": {
            "properties": {
                "state": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "state",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getGroupsGroup:getGroupsGroup": {
            "properties": {
                "customProfileAttributes": {
                    "type": "string",
                    "description": "Raw JSON containing all custom profile attributes. Likely only useful on groups of type\n"
                },
                "description": {
                    "type": "string",
                    "description": "Group description.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Group ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Group name.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The ID of the application the Group is sourced/imported from (only present for groups of type APP_GROUP).\n"
                },
                "type": {
                    "type": "string",
                    "description": "Group type, either 'APP_GROUP' or 'OKTA_GROUP'.\n"
                }
            },
            "type": "object",
            "required": [
                "customProfileAttributes",
                "description",
                "id",
                "name",
                "source",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getLogStreamSettings:getLogStreamSettings": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "AWS account ID. Required only for 'aws_eventbridge' type\n"
                },
                "edition": {
                    "type": "string",
                    "description": "Edition of the Splunk Cloud instance. Could be one of: 'aws', 'aws*govcloud', 'gcp'. Required only for 'splunk*cloud_logstreaming' type\n"
                },
                "eventSourceName": {
                    "type": "string",
                    "description": "An alphanumeric name (no spaces) to identify this event source in AWS EventBridge. Required only for 'aws_eventbridge' type\n"
                },
                "host": {
                    "type": "string",
                    "description": "The domain name for Splunk Cloud instance. Don't include http or https in the string. For example: 'acme.splunkcloud.com'. Required only for 'splunk*cloud*logstreaming' type\n"
                },
                "region": {
                    "type": "string",
                    "description": "The destination AWS region where event source is located. Required only for 'aws_eventbridge' type\n"
                },
                "token": {
                    "type": "string",
                    "description": "The HEC token for your Splunk Cloud HTTP Event Collector. Required only for 'splunk*cloud*logstreaming' type\n"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "edition",
                "eventSourceName",
                "host",
                "region",
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getOrgMetadataDomains:getOrgMetadataDomains": {
            "properties": {
                "alternate": {
                    "type": "string",
                    "description": "Custom Domain Org URI\n"
                },
                "organization": {
                    "type": "string",
                    "description": "Standard Org URI\n"
                }
            },
            "type": "object",
            "required": [
                "alternate",
                "organization"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getOrgMetadataSettings:getOrgMetadataSettings": {
            "properties": {
                "analyticsCollectionEnabled": {
                    "type": "boolean"
                },
                "bugReportingEnabled": {
                    "type": "boolean"
                },
                "omEnabled": {
                    "type": "boolean",
                    "description": "Whether the legacy Okta Mobile application is enabled for the org\n"
                }
            },
            "type": "object",
            "required": [
                "analyticsCollectionEnabled",
                "bugReportingEnabled",
                "omEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getTemplatesEmailTemplate:getTemplatesEmailTemplate": {
            "properties": {
                "links": {
                    "type": "string",
                    "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the email template\n"
                }
            },
            "type": "object",
            "required": [
                "links",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getThemesTheme:getThemesTheme": {
            "properties": {
                "backgroundImageUrl": {
                    "type": "string",
                    "description": "Background image URL\n"
                },
                "emailTemplateTouchPointVariant": {
                    "type": "string",
                    "description": "Variant for email templates (`OKTA_DEFAULT`, `FULL_THEME`)\n"
                },
                "endUserDashboardTouchPointVariant": {
                    "type": "string",
                    "description": "Variant for the Okta End-User Dashboard (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)\n"
                },
                "errorPageTouchPointVariant": {
                    "type": "string",
                    "description": "Variant for the error page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n"
                },
                "faviconUrl": {
                    "type": "string",
                    "description": "Favicon URL\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the theme\n"
                },
                "links": {
                    "type": "string",
                    "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Logo URL\n"
                },
                "primaryColorContrastHex": {
                    "type": "string",
                    "description": "Primary color contrast hex code\n"
                },
                "primaryColorHex": {
                    "type": "string",
                    "description": "Primary color hex code\n"
                },
                "secondaryColorContrastHex": {
                    "type": "string",
                    "description": "Secondary color contrast hex code\n"
                },
                "secondaryColorHex": {
                    "type": "string",
                    "description": "Secondary color hex code\n"
                },
                "signInPageTouchPointVariant": {
                    "type": "string",
                    "description": "Variant for the Okta Sign-In Page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n"
                }
            },
            "type": "object",
            "required": [
                "backgroundImageUrl",
                "emailTemplateTouchPointVariant",
                "endUserDashboardTouchPointVariant",
                "errorPageTouchPointVariant",
                "faviconUrl",
                "id",
                "links",
                "logoUrl",
                "primaryColorContrastHex",
                "primaryColorHex",
                "secondaryColorContrastHex",
                "secondaryColorHex",
                "signInPageTouchPointVariant"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getTrustedOriginsTrustedOrigin:getTrustedOriginsTrustedOrigin": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the Trusted Origin is active or not - can only be issued post-creation\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name for this trusted origin\n"
                },
                "origin": {
                    "type": "string",
                    "description": "Unique origin URL for this trusted origin\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of the Trusted Origin - can either be CORS or REDIRECT only\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "id",
                "name",
                "origin",
                "scopes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:index/getUserSecurityQuestionsQuestion:getUserSecurityQuestionsQuestion": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "text"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "okta:inline/HookHeader:HookHeader": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "okta:policy/RuleIdpDiscoveryAppExclude:RuleIdpDiscoveryAppExclude": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "okta:policy/RuleIdpDiscoveryAppInclude:RuleIdpDiscoveryAppInclude": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "okta:policy/RuleIdpDiscoveryIdpProvider:RuleIdpDiscoveryIdpProvider": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The identifier for the Idp the rule should route to if all conditions are met.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of IdP. One of: `AMAZON`, `APPLE`, `DISCORD`, `FACEBOOK`, `GITHUB`, `GITLAB`, `GOOGLE`, `IDV_CLEAR`, `IDV_INCODE`, `IDV_PERSONA`, `LINKEDIN`, `LOGINGOV`, `LOGINGOV_SANDBOX`, `MICROSOFT`, `OIDC`, `PAYPAL`, `PAYPAL_SANDBOX`, `SALESFORCE`, `SAML2`, `SPOTIFY`, `X509`, `XERO`, `YAHOO`, `YAHOOJP`, Default: `OKTA`\n"
                }
            },
            "type": "object"
        },
        "okta:policy/RuleIdpDiscoveryPlatformInclude:RuleIdpDiscoveryPlatformInclude": {
            "properties": {
                "osExpression": {
                    "type": "string",
                    "description": "Only available with OTHER OS type\n"
                },
                "osType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "okta:policy/RuleIdpDiscoveryUserIdentifierPattern:RuleIdpDiscoveryUserIdentifierPattern": {
            "properties": {
                "matchType": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "okta:policy/RuleMfaAppExclude:RuleMfaAppExclude": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "okta:policy/RuleMfaAppInclude:RuleMfaAppInclude": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "okta:policy/RuleSignonFactorSequence:RuleSignonFactorSequence": {
            "properties": {
                "primaryCriteriaFactorType": {
                    "type": "string",
                    "description": "Type of a Factor\n"
                },
                "primaryCriteriaProvider": {
                    "type": "string",
                    "description": "Factor provider\n"
                },
                "secondaryCriterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleSignonFactorSequenceSecondaryCriteria:RuleSignonFactorSequenceSecondaryCriteria"
                    }
                }
            },
            "type": "object",
            "required": [
                "primaryCriteriaFactorType",
                "primaryCriteriaProvider"
            ]
        },
        "okta:policy/RuleSignonFactorSequenceSecondaryCriteria:RuleSignonFactorSequenceSecondaryCriteria": {
            "properties": {
                "factorType": {
                    "type": "string",
                    "description": "Type of a Factor\n"
                },
                "provider": {
                    "type": "string",
                    "description": "Factor provider\n"
                }
            },
            "type": "object",
            "required": [
                "factorType",
                "provider"
            ]
        },
        "okta:profile/MappingMapping:MappingMapping": {
            "properties": {
                "expression": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The mapping property key.\n"
                },
                "pushStatus": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "expression",
                "id"
            ]
        },
        "okta:user/UserPasswordHash:UserPasswordHash": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "The algorithm used to generate the hash using the password\n"
                },
                "salt": {
                    "type": "string",
                    "description": "Only required for salted hashes\n"
                },
                "saltOrder": {
                    "type": "string",
                    "description": "Specifies whether salt was pre- or postfixed to the password before hashing\n"
                },
                "value": {
                    "type": "string",
                    "description": "For SHA-512, SHA-256, SHA-1, MD5, This is the actual base64-encoded hash of the password (and salt, if used). This is the Base64 encoded value of the SHA-512/SHA-256/SHA-1/MD5 digest that was computed by either pre-fixing or post-fixing the salt to the password, depending on the saltOrder. If a salt was not used in the source system, then this should just be the the Base64 encoded value of the password's SHA-512/SHA-256/SHA-1/MD5 digest. For BCRYPT, This is the actual radix64-encoded hashed password.\n"
                },
                "workFactor": {
                    "type": "integer",
                    "description": "Governs the strength of the hash and the time required to compute it. Only required for BCRYPT algorithm\n"
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "value"
            ]
        },
        "okta:user/getUserSearch:getUserSearch": {
            "properties": {
                "comparison": {
                    "type": "string"
                },
                "expression": {
                    "type": "string",
                    "description": "A raw search expression string. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search\n"
                },
                "name": {
                    "type": "string",
                    "description": "Property name to search for. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search\n"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "okta:user/getUsersSearch:getUsersSearch": {
            "properties": {
                "comparison": {
                    "type": "string"
                },
                "expression": {
                    "type": "string",
                    "description": "A raw search expression string. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search\n"
                },
                "name": {
                    "type": "string",
                    "description": "Property name to search for. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search\n"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "okta:user/getUsersUser:getUsersUser": {
            "properties": {
                "adminRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "city": {
                    "type": "string"
                },
                "costCenter": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "customProfileAttributes": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "division": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "employeeNumber": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "groupMemberships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "honorificPrefix": {
                    "type": "string"
                },
                "honorificSuffix": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "manager": {
                    "type": "string"
                },
                "managerId": {
                    "type": "string"
                },
                "middleName": {
                    "type": "string"
                },
                "mobilePhone": {
                    "type": "string"
                },
                "nickName": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "postalAddress": {
                    "type": "string"
                },
                "preferredLanguage": {
                    "type": "string"
                },
                "primaryPhone": {
                    "type": "string"
                },
                "profileUrl": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "secondEmail": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "streetAddress": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "userType": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "adminRoles",
                "city",
                "costCenter",
                "countryCode",
                "customProfileAttributes",
                "department",
                "displayName",
                "division",
                "email",
                "employeeNumber",
                "firstName",
                "groupMemberships",
                "honorificPrefix",
                "honorificSuffix",
                "id",
                "lastName",
                "locale",
                "login",
                "manager",
                "managerId",
                "middleName",
                "mobilePhone",
                "nickName",
                "organization",
                "postalAddress",
                "preferredLanguage",
                "primaryPhone",
                "profileUrl",
                "roles",
                "secondEmail",
                "state",
                "status",
                "streetAddress",
                "timezone",
                "title",
                "userType",
                "zipCode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the okta package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "accessToken": {
                "type": "string",
                "description": "Bearer token granting privileges to Okta API.\n",
                "secret": true
            },
            "apiToken": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n",
                "secret": true
            },
            "backoff": {
                "type": "boolean",
                "description": "Use exponential back off strategy for rate limits.\n"
            },
            "baseUrl": {
                "type": "string",
                "description": "The Okta url. (Use 'oktapreview.com' for Okta testing)\n"
            },
            "clientId": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "httpProxy": {
                "type": "string",
                "description": "Alternate HTTP proxy of scheme://hostname or scheme://hostname:port format\n"
            },
            "logLevel": {
                "type": "integer",
                "description": "providers log level. Minimum is 1 (TRACE), and maximum is 5 (ERROR)\n"
            },
            "maxApiCapacity": {
                "type": "integer",
                "description": "Sets what percentage of capacity the provider can use of the total rate limit capacity while making calls to the Okta\nmanagement API endpoints. Okta API operates in one minute buckets. See Okta Management API Rate Limits:\nhttps://developer.okta.com/docs/reference/rl-global-mgmt/\n"
            },
            "maxRetries": {
                "type": "integer",
                "description": "maximum number of retries to attempt before erroring out.\n"
            },
            "maxWaitSeconds": {
                "type": "integer",
                "description": "maximum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.\n"
            },
            "minWaitSeconds": {
                "type": "integer",
                "description": "minimum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.\n"
            },
            "orgName": {
                "type": "string",
                "description": "The organization to manage in Okta.\n"
            },
            "parallelism": {
                "type": "integer",
                "description": "Number of concurrent requests to make within a resource where bulk operations are not possible. Take note of\nhttps://developer.okta.com/docs/api/getting_started/rate-limits.\n"
            },
            "privateKey": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n",
                "secret": true
            },
            "privateKeyId": {
                "type": "string",
                "description": "API Token Id granting privileges to Okta API.\n"
            },
            "requestTimeout": {
                "type": "integer",
                "description": "Timeout for single request (in seconds) which is made to Okta, the default is `0` (means no limit is set). The maximum\nvalue can be `300`.\n"
            },
            "scopes": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "API Token granting privileges to Okta API.\n"
            }
        },
        "inputProperties": {
            "accessToken": {
                "type": "string",
                "description": "Bearer token granting privileges to Okta API.\n",
                "secret": true
            },
            "apiToken": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n",
                "secret": true
            },
            "backoff": {
                "type": "boolean",
                "description": "Use exponential back off strategy for rate limits.\n"
            },
            "baseUrl": {
                "type": "string",
                "description": "The Okta url. (Use 'oktapreview.com' for Okta testing)\n"
            },
            "clientId": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n"
            },
            "httpProxy": {
                "type": "string",
                "description": "Alternate HTTP proxy of scheme://hostname or scheme://hostname:port format\n"
            },
            "logLevel": {
                "type": "integer",
                "description": "providers log level. Minimum is 1 (TRACE), and maximum is 5 (ERROR)\n"
            },
            "maxApiCapacity": {
                "type": "integer",
                "description": "Sets what percentage of capacity the provider can use of the total rate limit capacity while making calls to the Okta\nmanagement API endpoints. Okta API operates in one minute buckets. See Okta Management API Rate Limits:\nhttps://developer.okta.com/docs/reference/rl-global-mgmt/\n"
            },
            "maxRetries": {
                "type": "integer",
                "description": "maximum number of retries to attempt before erroring out.\n"
            },
            "maxWaitSeconds": {
                "type": "integer",
                "description": "maximum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.\n"
            },
            "minWaitSeconds": {
                "type": "integer",
                "description": "minimum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.\n"
            },
            "orgName": {
                "type": "string",
                "description": "The organization to manage in Okta.\n"
            },
            "parallelism": {
                "type": "integer",
                "description": "Number of concurrent requests to make within a resource where bulk operations are not possible. Take note of\nhttps://developer.okta.com/docs/api/getting_started/rate-limits.\n"
            },
            "privateKey": {
                "type": "string",
                "description": "API Token granting privileges to Okta API.\n",
                "secret": true
            },
            "privateKeyId": {
                "type": "string",
                "description": "API Token Id granting privileges to Okta API.\n"
            },
            "requestTimeout": {
                "type": "integer",
                "description": "Timeout for single request (in seconds) which is made to Okta, the default is `0` (means no limit is set). The maximum\nvalue can be `300`.\n"
            },
            "scopes": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "API Token granting privileges to Okta API.\n"
            }
        },
        "methods": {
            "terraformConfig": "pulumi:providers:okta/terraformConfig"
        }
    },
    "resources": {
        "okta:app/accessPolicyAssignment:AccessPolicyAssignment": {
            "description": "Manages assignment of Access Policy to an Application. \n\t\t\n**Warning**: do not use as this will update okta_app_*.authentication_policy and vice versa\n\nAssigns an access policy (colloquially known as a sign-on policy and/or an\nauthentication policy) to an application. This resource does not perform true\ndelete as it will not delete an application and the app's access policy can't be\nremoved; it can only be changed to a different access policy. This resource is\nonly logical within the context of an application therefore `app_id` is\nimmutable once set. Use this resource to manage assigning an access policy to an\napplication. It will assign the given `policy_id` to the application at creation\nand during update.\n\n\u003e Inside the product a sign-on policy is referenced as an _authentication\npolicy_, in the public API the policy is of type\n[`ACCESS_POLICY`](https://developer.okta.com/docs/reference/api/policy/#policy-object).\n\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst access = okta.policy.getPolicy({\n    name: \"Any two factors\",\n    type: \"ACCESS_POLICY\",\n});\nconst example = okta.app.getApp({\n    label: \"Example App\",\n});\nconst assignment = new okta.app.AccessPolicyAssignment(\"assignment\", {\n    appId: example.then(example =\u003e example.id),\n    policyId: access.then(access =\u003e access.id),\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\naccess = okta.policy.get_policy(name=\"Any two factors\",\n    type=\"ACCESS_POLICY\")\nexample = okta.app.get_app(label=\"Example App\")\nassignment = okta.app.AccessPolicyAssignment(\"assignment\",\n    app_id=example.id,\n    policy_id=access.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var access = Okta.Policy.GetPolicy.Invoke(new()\n    {\n        Name = \"Any two factors\",\n        Type = \"ACCESS_POLICY\",\n    });\n\n    var example = Okta.App.GetApp.Invoke(new()\n    {\n        Label = \"Example App\",\n    });\n\n    var assignment = new Okta.App.AccessPolicyAssignment(\"assignment\", new()\n    {\n        AppId = example.Apply(getAppResult =\u003e getAppResult.Id),\n        PolicyId = access.Apply(getPolicyResult =\u003e getPolicyResult.Id),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/app\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\taccess, err := policy.GetPolicy(ctx, \u0026policy.GetPolicyArgs{\n\t\t\tName: \"Any two factors\",\n\t\t\tType: \"ACCESS_POLICY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texample, err := app.GetApp(ctx, \u0026app.GetAppArgs{\n\t\t\tLabel: pulumi.StringRef(\"Example App\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = app.NewAccessPolicyAssignment(ctx, \"assignment\", \u0026app.AccessPolicyAssignmentArgs{\n\t\t\tAppId:    pulumi.String(example.Id),\n\t\t\tPolicyId: pulumi.String(access.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.PolicyFunctions;\nimport com.pulumi.okta.policy.inputs.GetPolicyArgs;\nimport com.pulumi.okta.app.AppFunctions;\nimport com.pulumi.okta.app.inputs.GetAppArgs;\nimport com.pulumi.okta.app.AccessPolicyAssignment;\nimport com.pulumi.okta.app.AccessPolicyAssignmentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var access = PolicyFunctions.getPolicy(GetPolicyArgs.builder()\n            .name(\"Any two factors\")\n            .type(\"ACCESS_POLICY\")\n            .build());\n\n        final var example = AppFunctions.getApp(GetAppArgs.builder()\n            .label(\"Example App\")\n            .build());\n\n        var assignment = new AccessPolicyAssignment(\"assignment\", AccessPolicyAssignmentArgs.builder()\n            .appId(example.id())\n            .policyId(access.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  assignment:\n    type: okta:app:AccessPolicyAssignment\n    properties:\n      appId: ${example.id}\n      policyId: ${access.id}\nvariables:\n  access:\n    fn::invoke:\n      function: okta:policy:getPolicy\n      arguments:\n        name: Any two factors\n        type: ACCESS_POLICY\n  example:\n    fn::invoke:\n      function: okta:app:getApp\n      arguments:\n        label: Example App\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:app/accessPolicyAssignment:AccessPolicyAssignment example \u003capp_id\u003e\n```\n\n",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The application ID; this value is immutable and can not be updated.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "The access policy ID.\n"
                }
            },
            "required": [
                "appId",
                "policyId"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The application ID; this value is immutable and can not be updated.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "The access policy ID.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "policyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessPolicyAssignment resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The application ID; this value is immutable and can not be updated.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "The access policy ID.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/autoLogin:AutoLogin": {
            "description": "This resource allows you to create and configure an Auto Login Okta Application.\n\t\t\n\u003e During an apply if there is change in status the app will first be\nactivated or deactivated in accordance with the status change. Then, all\nother arguments that changed will be applied.\n\n## Import\n\n```sh\n$ pulumi import okta:app/autoLogin:AutoLogin example \u003capp_id\u003e\n```\n\n",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "appSettingsJson": {
                    "type": "string",
                    "description": "Application settings in JSON format\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Tells Okta to use an existing application in their application catalog, as opposed to a custom application.\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password. Default is false. It can not be set to true if credentials*scheme is \"ADMIN*SETS*CREDENTIALS\", \"SHARED*USERNAME*AND*PASSWORD\" or \"EXTERNAL*PASSWORD*SYNC\".\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "signOnRedirectUrl": {
                    "type": "string",
                    "description": "Post login redirect URL\n"
                },
                "signOnUrl": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `${source.login}`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `BUILT_IN`\n"
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "signOnMode"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "appSettingsJson": {
                    "type": "string",
                    "description": "Application settings in JSON format\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Tells Okta to use an existing application in their application catalog, as opposed to a custom application.\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password. Default is false. It can not be set to true if credentials*scheme is \"ADMIN*SETS*CREDENTIALS\", \"SHARED*USERNAME*AND*PASSWORD\" or \"EXTERNAL*PASSWORD*SYNC\".\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "signOnRedirectUrl": {
                    "type": "string",
                    "description": "Post login redirect URL\n"
                },
                "signOnUrl": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `${source.login}`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `BUILT_IN`\n"
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AutoLogin resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page URL\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self service. Default is `false`\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "appSettingsJson": {
                        "type": "string",
                        "description": "Application settings in JSON format\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar\n"
                    },
                    "credentialsScheme": {
                        "type": "string",
                        "description": "Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "preconfiguredApp": {
                        "type": "string",
                        "description": "Tells Okta to use an existing application in their application catalog, as opposed to a custom application.\n"
                    },
                    "revealPassword": {
                        "type": "boolean",
                        "description": "Allow user to reveal password. Default is false. It can not be set to true if credentials*scheme is \"ADMIN*SETS*CREDENTIALS\", \"SHARED*USERNAME*AND*PASSWORD\" or \"EXTERNAL*PASSWORD*SYNC\".\n"
                    },
                    "sharedPassword": {
                        "type": "string",
                        "description": "Shared password, required for certain schemes.\n"
                    },
                    "sharedUsername": {
                        "type": "string",
                        "description": "Shared username, required for certain schemes.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "signOnRedirectUrl": {
                        "type": "string",
                        "description": "Post login redirect URL\n"
                    },
                    "signOnUrl": {
                        "type": "string",
                        "description": "Login URL\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. By default, it is `ACTIVE`\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default: `${source.login}`\n"
                    },
                    "userNameTemplatePushStatus": {
                        "type": "string",
                        "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default: `BUILT_IN`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/basicAuth:BasicAuth": {
            "description": "This resource allows you to create and configure an Auto Login Okta Application.\n\u003e During an apply if there is change in status the app will first be\nactivated or deactivated in accordance with the status change. Then, all\nother arguments that changed will be applied.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.BasicAuth(\"example\", {\n    label: \"Example\",\n    url: \"https://example.com/login.html\",\n    authUrl: \"https://example.com/auth.html\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.BasicAuth(\"example\",\n    label=\"Example\",\n    url=\"https://example.com/login.html\",\n    auth_url=\"https://example.com/auth.html\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.App.BasicAuth(\"example\", new()\n    {\n        Label = \"Example\",\n        Url = \"https://example.com/login.html\",\n        AuthUrl = \"https://example.com/auth.html\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewBasicAuth(ctx, \"example\", \u0026app.BasicAuthArgs{\n\t\t\tLabel:   pulumi.String(\"Example\"),\n\t\t\tUrl:     pulumi.String(\"https://example.com/login.html\"),\n\t\t\tAuthUrl: pulumi.String(\"https://example.com/auth.html\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.BasicAuth;\nimport com.pulumi.okta.app.BasicAuthArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BasicAuth(\"example\", BasicAuthArgs.builder()\n            .label(\"Example\")\n            .url(\"https://example.com/login.html\")\n            .authUrl(\"https://example.com/auth.html\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:BasicAuth\n    properties:\n      label: Example\n      url: https://example.com/login.html\n      authUrl: https://example.com/auth.html\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:app/basicAuth:BasicAuth example \u003capp_id\u003e\n```\n\n",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "authUrl": {
                    "type": "string",
                    "description": "The URL of the authenticating site for this app.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`,\n`EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password. Default is false. It can not be set to true if credentials_scheme is\n\"ADMIN_SETS_CREDENTIALS\", \"SHARED_USERNAME_AND_PASSWORD\" or \"EXTERNAL_PASSWORD_SYNC\".\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the sign-in page for this app.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `${source.login}`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `PUSH`, `DONT_PUSH` and `NOT_CONFIGURED`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `BUILT_IN`. Valid values: `NONE`, `CUSTOM`, `BUILT_IN`\n"
                }
            },
            "required": [
                "authUrl",
                "label",
                "logoUrl",
                "name",
                "signOnMode",
                "url"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "authUrl": {
                    "type": "string",
                    "description": "The URL of the authenticating site for this app.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`,\n`EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password. Default is false. It can not be set to true if credentials_scheme is\n\"ADMIN_SETS_CREDENTIALS\", \"SHARED_USERNAME_AND_PASSWORD\" or \"EXTERNAL_PASSWORD_SYNC\".\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the sign-in page for this app.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `${source.login}`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `PUSH`, `DONT_PUSH` and `NOT_CONFIGURED`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `BUILT_IN`. Valid values: `NONE`, `CUSTOM`, `BUILT_IN`\n"
                }
            },
            "requiredInputs": [
                "authUrl",
                "label",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BasicAuth resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page URL\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self service. Default is `false`\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "authUrl": {
                        "type": "string",
                        "description": "The URL of the authenticating site for this app.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar\n"
                    },
                    "credentialsScheme": {
                        "type": "string",
                        "description": "Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`,\n`EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "revealPassword": {
                        "type": "boolean",
                        "description": "Allow user to reveal password. Default is false. It can not be set to true if credentials_scheme is\n\"ADMIN_SETS_CREDENTIALS\", \"SHARED_USERNAME_AND_PASSWORD\" or \"EXTERNAL_PASSWORD_SYNC\".\n"
                    },
                    "sharedPassword": {
                        "type": "string",
                        "description": "Shared password, required for certain schemes.\n"
                    },
                    "sharedUsername": {
                        "type": "string",
                        "description": "Shared username, required for certain schemes.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. By default, it is `ACTIVE`\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the sign-in page for this app.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default: `${source.login}`\n"
                    },
                    "userNameTemplatePushStatus": {
                        "type": "string",
                        "description": "Push username on update. Valid values: `PUSH`, `DONT_PUSH` and `NOT_CONFIGURED`\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default: `BUILT_IN`. Valid values: `NONE`, `CUSTOM`, `BUILT_IN`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/bookmark:Bookmark": {
            "description": "This resource allows you to create and configure a Bookmark Application.\n\u003e During an apply if there is change in status the app will first be\nactivated or deactivated in accordance with the status change. Then, all\nother arguments that changed will be applied.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.Bookmark(\"example\", {\n    label: \"Example\",\n    url: \"https://example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.Bookmark(\"example\",\n    label=\"Example\",\n    url=\"https://example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.App.Bookmark(\"example\", new()\n    {\n        Label = \"Example\",\n        Url = \"https://example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewBookmark(ctx, \"example\", \u0026app.BookmarkArgs{\n\t\t\tLabel: pulumi.String(\"Example\"),\n\t\t\tUrl:   pulumi.String(\"https://example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.Bookmark;\nimport com.pulumi.okta.app.BookmarkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Bookmark(\"example\", BookmarkArgs.builder()\n            .label(\"Example\")\n            .url(\"https://example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:Bookmark\n    properties:\n      label: Example\n      url: https://example.com\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:app/bookmark:Bookmark example \u003capp_id\u003e\n```\n\n",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "authenticationPolicy": {
                    "type": "string",
                    "description": "The ID of the associated app*signon*policy. If this property is removed from the application the default sign-on-policy will be associated with this application.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "requestIntegration": {
                    "type": "boolean",
                    "description": "Would you like Okta to add an integration for this app?\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the bookmark.\n"
                }
            },
            "required": [
                "authenticationPolicy",
                "label",
                "logoUrl",
                "name",
                "signOnMode",
                "url"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "authenticationPolicy": {
                    "type": "string",
                    "description": "The ID of the associated app*signon*policy. If this property is removed from the application the default sign-on-policy will be associated with this application.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "requestIntegration": {
                    "type": "boolean",
                    "description": "Would you like Okta to add an integration for this app?\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the bookmark.\n"
                }
            },
            "requiredInputs": [
                "label",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Bookmark resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page URL\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self service. Default is `false`\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "authenticationPolicy": {
                        "type": "string",
                        "description": "The ID of the associated app*signon*policy. If this property is removed from the application the default sign-on-policy will be associated with this application.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "requestIntegration": {
                        "type": "boolean",
                        "description": "Would you like Okta to add an integration for this app?\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. By default, it is `ACTIVE`\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the bookmark.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/groupAssignment:GroupAssignment": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.GroupAssignment(\"example\", {\n    appId: \"\u003capp id\u003e\",\n    groupId: \"\u003cgroup id\u003e\",\n    profile: `{\n  \"\u003capp_profile_field\u003e\": \"\u003cvalue\u003e\"\n}\n`,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.GroupAssignment(\"example\",\n    app_id=\"\u003capp id\u003e\",\n    group_id=\"\u003cgroup id\u003e\",\n    profile=\"\"\"{\n  \"\u003capp_profile_field\u003e\": \"\u003cvalue\u003e\"\n}\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.App.GroupAssignment(\"example\", new()\n    {\n        AppId = \"\u003capp id\u003e\",\n        GroupId = \"\u003cgroup id\u003e\",\n        Profile = @\"{\n  \"\"\u003capp_profile_field\u003e\"\": \"\"\u003cvalue\u003e\"\"\n}\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewGroupAssignment(ctx, \"example\", \u0026app.GroupAssignmentArgs{\n\t\t\tAppId:   pulumi.String(\"\u003capp id\u003e\"),\n\t\t\tGroupId: pulumi.String(\"\u003cgroup id\u003e\"),\n\t\t\tProfile: pulumi.String(\"{\\n  \\\"\u003capp_profile_field\u003e\\\": \\\"\u003cvalue\u003e\\\"\\n}\\n\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.GroupAssignment;\nimport com.pulumi.okta.app.GroupAssignmentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new GroupAssignment(\"example\", GroupAssignmentArgs.builder()\n            .appId(\"\u003capp id\u003e\")\n            .groupId(\"\u003cgroup id\u003e\")\n            .profile(\"\"\"\n{\n  \"\u003capp_profile_field\u003e\": \"\u003cvalue\u003e\"\n}\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:GroupAssignment\n    properties:\n      appId: \u003capp id\u003e\n      groupId: \u003cgroup id\u003e\n      profile: |\n        {\n          \"\u003capp_profile_field\u003e\": \"\u003cvalue\u003e\"\n        }\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:app/groupAssignment:GroupAssignment example \u003capp_id\u003e/\u003cgroup_id\u003e\n```\n\n",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "App to associate group with\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "Group associated with the application\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of group assignment.\n"
                },
                "profile": {
                    "type": "string",
                    "description": "JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)\n"
                },
                "retainAssignment": {
                    "type": "boolean",
                    "description": "Retain the group assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                }
            },
            "required": [
                "appId",
                "groupId"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "App to associate group with\n",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string",
                    "description": "Group associated with the application\n",
                    "willReplaceOnChanges": true
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of group assignment.\n"
                },
                "profile": {
                    "type": "string",
                    "description": "JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)\n"
                },
                "retainAssignment": {
                    "type": "boolean",
                    "description": "Retain the group assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "groupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GroupAssignment resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "App to associate group with\n",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Group associated with the application\n",
                        "willReplaceOnChanges": true
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of group assignment.\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)\n"
                    },
                    "retainAssignment": {
                        "type": "boolean",
                        "description": "Retain the group assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/oAuth:OAuth": {
            "description": "This resource allows you to create and configure an OIDC Application.\n\u003e During an apply if there is change in status the app will first be\nactivated or deactivated in accordance with the status change. Then, all\nother arguments that changed will be applied.\n\n\u003e `okta.app.OAuthRedirectUri` has been marked deprecated and will be removed\nin the v5 release of the provider. Operators should manage the redirect URIs for\nan oauth app directly on that resource.\n\n### Private Keys\n\nThe private key format that an Okta OAuth app expects is PKCS#8 (unencrypted).\nThe operator either uploads their own private key or Okta can generate one in\nthe Admin UI Panel under the apps Client Credentials. PKCS#8 format can be\nidentified by a header that starts with `-----BEGIN PRIVATE KEY-----`. If the\noperator has a PKCS#1 (unencrypted) format private key (the header starts with\n`-----BEGIN RSA PRIVATE KEY-----`) they can generate a PKCS#8 format\nkey with `openssl`:\n\n```\n openssl rsa -in pkcs1.pem -out pkcs8-example.pem\n```\n\n## Import\n\n```sh\n$ pulumi import okta:app/oAuth:OAuth example \u003capp_id\u003e\n```\n\n",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "appSettingsJson": {
                    "type": "string",
                    "description": "Application settings in JSON format\n"
                },
                "authenticationPolicy": {
                    "type": "string",
                    "description": "The ID of the associated app*signon*policy. If this property is removed from the application the default sign-on-policy will be associated with this application. From now on, there is no need to attach authentication_policy for applications of type `SERVICE` in the upcoming release.\n"
                },
                "autoKeyRotation": {
                    "type": "boolean",
                    "description": "Requested key rotation mode. If\n\t\t\tauto*key*rotation isn't specified, the client automatically opts in for Okta's\n\t\t\tkey rotation. You can update this property via the API or via the administrator\n\t\t\tUI.\n\t\t\tSee: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\"\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "clientBasicSecret": {
                    "type": "string",
                    "description": "The user provided OAuth client secret key value, this can be set when token*endpoint*auth*method is client*secret*basic. This does nothing when `omit*secret is set to true.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "OAuth client ID. If set during creation, app is created with this id.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "OAuth client secret value, this is output only. This will be in plain text in your statefile unless you set omit_secret above.\n",
                    "secret": true
                },
                "clientUri": {
                    "type": "string",
                    "description": "URI to a web page providing information about the client.\n"
                },
                "consentMethod": {
                    "type": "string",
                    "description": "*Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED. Default value is TRUSTED\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OAuth 2.0 grant types. Conditional validation params found here https://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per app type.\n"
                },
                "groupsClaim": {
                    "$ref": "#/types/okta:app/OAuthGroupsClaim:OAuthGroupsClaim",
                    "description": "Groups claim for an OpenID Connect client application (argument is ignored when API auth is done with OAuth 2.0 credentials)\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "implicitAssignment": {
                    "type": "boolean",
                    "description": "*Early Access Property*. Enable Federation Broker Mode.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "*Early Access Property*. Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.\n"
                },
                "jwks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/OAuthJwk:OAuthJwk"
                    }
                },
                "jwksUri": {
                    "type": "string",
                    "description": "URL reference to JWKS\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "loginMode": {
                    "type": "string",
                    "description": "The type of Idp-Initiated login that the client supports, if any\n"
                },
                "loginScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of scopes to use for the request\n"
                },
                "loginUri": {
                    "type": "string",
                    "description": "URI that initiates login.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUri": {
                    "type": "string",
                    "description": "URI that references a logo for the client.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "omitSecret": {
                    "type": "boolean",
                    "description": "This tells the provider not manage the client*secret value in state. When this is false (the default), it will cause the auto-generated client*secret to be persisted in the client_secret attribute in state. This also means that every time an update to this app is run, this value is also set on the API. If this changes from false =\u003e true, the `client_secret` is dropped from state and the secret at the time of the apply is what remains. If this is ever changes from true =\u003e false your app will be recreated, due to the need to regenerate a secret we can store in state.\n"
                },
                "pkceRequired": {
                    "type": "boolean",
                    "description": "Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n"
                },
                "policyUri": {
                    "type": "string",
                    "description": "URI to web page providing client policy document.\n"
                },
                "postLogoutRedirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URIs for redirection after logout. Note: see okta*app*oauth*post*logout*redirect*uri for appending to this list in a decentralized way.\n"
                },
                "profile": {
                    "type": "string",
                    "description": "Custom JSON that represents an OAuth application's profile\n"
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see okta*app*oauth*redirect*uri for appending to this list in a decentralized way.\n"
                },
                "refreshTokenLeeway": {
                    "type": "integer",
                    "description": "*Early Access Property* Grace period for token rotation, required with grant types refresh_token\n"
                },
                "refreshTokenRotation": {
                    "type": "string",
                    "description": "*Early Access Property* Refresh token rotation behavior, required with grant types refresh_token\n"
                },
                "responseTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OAuth 2.0 response type strings. Valid values are any combination of: `code`, `token`, and `id_token`.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "Requested authentication method for the token endpoint, valid values include:  'client*secret*basic', 'client*secret*post', 'client*secret*jwt', 'private*key*jwt', 'none', etc.\n"
                },
                "tosUri": {
                    "type": "string",
                    "description": "URI to web page providing client tos (terms of service).\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of client application.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `${source.login}`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `BUILT_IN`\n"
                },
                "wildcardRedirect": {
                    "type": "string",
                    "description": "*Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris\n"
                }
            },
            "required": [
                "authenticationPolicy",
                "clientId",
                "clientSecret",
                "grantTypes",
                "label",
                "logoUrl",
                "name",
                "pkceRequired",
                "responseTypes",
                "signOnMode",
                "type"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "appSettingsJson": {
                    "type": "string",
                    "description": "Application settings in JSON format\n"
                },
                "authenticationPolicy": {
                    "type": "string",
                    "description": "The ID of the associated app*signon*policy. If this property is removed from the application the default sign-on-policy will be associated with this application. From now on, there is no need to attach authentication_policy for applications of type `SERVICE` in the upcoming release.\n"
                },
                "autoKeyRotation": {
                    "type": "boolean",
                    "description": "Requested key rotation mode. If\n\t\t\tauto*key*rotation isn't specified, the client automatically opts in for Okta's\n\t\t\tkey rotation. You can update this property via the API or via the administrator\n\t\t\tUI.\n\t\t\tSee: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\"\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "clientBasicSecret": {
                    "type": "string",
                    "description": "The user provided OAuth client secret key value, this can be set when token*endpoint*auth*method is client*secret*basic. This does nothing when `omit*secret is set to true.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "OAuth client ID. If set during creation, app is created with this id.\n",
                    "willReplaceOnChanges": true
                },
                "clientUri": {
                    "type": "string",
                    "description": "URI to a web page providing information about the client.\n"
                },
                "consentMethod": {
                    "type": "string",
                    "description": "*Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED. Default value is TRUSTED\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OAuth 2.0 grant types. Conditional validation params found here https://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per app type.\n"
                },
                "groupsClaim": {
                    "$ref": "#/types/okta:app/OAuthGroupsClaim:OAuthGroupsClaim",
                    "description": "Groups claim for an OpenID Connect client application (argument is ignored when API auth is done with OAuth 2.0 credentials)\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "implicitAssignment": {
                    "type": "boolean",
                    "description": "*Early Access Property*. Enable Federation Broker Mode.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "*Early Access Property*. Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.\n"
                },
                "jwks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/OAuthJwk:OAuthJwk"
                    }
                },
                "jwksUri": {
                    "type": "string",
                    "description": "URL reference to JWKS\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "loginMode": {
                    "type": "string",
                    "description": "The type of Idp-Initiated login that the client supports, if any\n"
                },
                "loginScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of scopes to use for the request\n"
                },
                "loginUri": {
                    "type": "string",
                    "description": "URI that initiates login.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUri": {
                    "type": "string",
                    "description": "URI that references a logo for the client.\n"
                },
                "omitSecret": {
                    "type": "boolean",
                    "description": "This tells the provider not manage the client*secret value in state. When this is false (the default), it will cause the auto-generated client*secret to be persisted in the client_secret attribute in state. This also means that every time an update to this app is run, this value is also set on the API. If this changes from false =\u003e true, the `client_secret` is dropped from state and the secret at the time of the apply is what remains. If this is ever changes from true =\u003e false your app will be recreated, due to the need to regenerate a secret we can store in state.\n"
                },
                "pkceRequired": {
                    "type": "boolean",
                    "description": "Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n"
                },
                "policyUri": {
                    "type": "string",
                    "description": "URI to web page providing client policy document.\n"
                },
                "postLogoutRedirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URIs for redirection after logout. Note: see okta*app*oauth*post*logout*redirect*uri for appending to this list in a decentralized way.\n"
                },
                "profile": {
                    "type": "string",
                    "description": "Custom JSON that represents an OAuth application's profile\n"
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see okta*app*oauth*redirect*uri for appending to this list in a decentralized way.\n"
                },
                "refreshTokenLeeway": {
                    "type": "integer",
                    "description": "*Early Access Property* Grace period for token rotation, required with grant types refresh_token\n"
                },
                "refreshTokenRotation": {
                    "type": "string",
                    "description": "*Early Access Property* Refresh token rotation behavior, required with grant types refresh_token\n"
                },
                "responseTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OAuth 2.0 response type strings. Valid values are any combination of: `code`, `token`, and `id_token`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "Requested authentication method for the token endpoint, valid values include:  'client*secret*basic', 'client*secret*post', 'client*secret*jwt', 'private*key*jwt', 'none', etc.\n"
                },
                "tosUri": {
                    "type": "string",
                    "description": "URI to web page providing client tos (terms of service).\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of client application.\n",
                    "willReplaceOnChanges": true
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `${source.login}`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `BUILT_IN`\n"
                },
                "wildcardRedirect": {
                    "type": "string",
                    "description": "*Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris\n"
                }
            },
            "requiredInputs": [
                "label",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OAuth resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page URL\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self service. Default is `false`\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "appSettingsJson": {
                        "type": "string",
                        "description": "Application settings in JSON format\n"
                    },
                    "authenticationPolicy": {
                        "type": "string",
                        "description": "The ID of the associated app*signon*policy. If this property is removed from the application the default sign-on-policy will be associated with this application. From now on, there is no need to attach authentication_policy for applications of type `SERVICE` in the upcoming release.\n"
                    },
                    "autoKeyRotation": {
                        "type": "boolean",
                        "description": "Requested key rotation mode. If\n\t\t\tauto*key*rotation isn't specified, the client automatically opts in for Okta's\n\t\t\tkey rotation. You can update this property via the API or via the administrator\n\t\t\tUI.\n\t\t\tSee: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\"\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar\n"
                    },
                    "clientBasicSecret": {
                        "type": "string",
                        "description": "The user provided OAuth client secret key value, this can be set when token*endpoint*auth*method is client*secret*basic. This does nothing when `omit*secret is set to true.\n",
                        "secret": true
                    },
                    "clientId": {
                        "type": "string",
                        "description": "OAuth client ID. If set during creation, app is created with this id.\n",
                        "willReplaceOnChanges": true
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "OAuth client secret value, this is output only. This will be in plain text in your statefile unless you set omit_secret above.\n",
                        "secret": true
                    },
                    "clientUri": {
                        "type": "string",
                        "description": "URI to a web page providing information about the client.\n"
                    },
                    "consentMethod": {
                        "type": "string",
                        "description": "*Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED. Default value is TRUSTED\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "grantTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OAuth 2.0 grant types. Conditional validation params found here https://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per app type.\n"
                    },
                    "groupsClaim": {
                        "$ref": "#/types/okta:app/OAuthGroupsClaim:OAuthGroupsClaim",
                        "description": "Groups claim for an OpenID Connect client application (argument is ignored when API auth is done with OAuth 2.0 credentials)\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "implicitAssignment": {
                        "type": "boolean",
                        "description": "*Early Access Property*. Enable Federation Broker Mode.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "*Early Access Property*. Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.\n"
                    },
                    "jwks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/OAuthJwk:OAuthJwk"
                        }
                    },
                    "jwksUri": {
                        "type": "string",
                        "description": "URL reference to JWKS\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "loginMode": {
                        "type": "string",
                        "description": "The type of Idp-Initiated login that the client supports, if any\n"
                    },
                    "loginScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of scopes to use for the request\n"
                    },
                    "loginUri": {
                        "type": "string",
                        "description": "URI that initiates login.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUri": {
                        "type": "string",
                        "description": "URI that references a logo for the client.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "omitSecret": {
                        "type": "boolean",
                        "description": "This tells the provider not manage the client*secret value in state. When this is false (the default), it will cause the auto-generated client*secret to be persisted in the client_secret attribute in state. This also means that every time an update to this app is run, this value is also set on the API. If this changes from false =\u003e true, the `client_secret` is dropped from state and the secret at the time of the apply is what remains. If this is ever changes from true =\u003e false your app will be recreated, due to the need to regenerate a secret we can store in state.\n"
                    },
                    "pkceRequired": {
                        "type": "boolean",
                        "description": "Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object\n"
                    },
                    "policyUri": {
                        "type": "string",
                        "description": "URI to web page providing client policy document.\n"
                    },
                    "postLogoutRedirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of URIs for redirection after logout. Note: see okta*app*oauth*post*logout*redirect*uri for appending to this list in a decentralized way.\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "Custom JSON that represents an OAuth application's profile\n"
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see okta*app*oauth*redirect*uri for appending to this list in a decentralized way.\n"
                    },
                    "refreshTokenLeeway": {
                        "type": "integer",
                        "description": "*Early Access Property* Grace period for token rotation, required with grant types refresh_token\n"
                    },
                    "refreshTokenRotation": {
                        "type": "string",
                        "description": "*Early Access Property* Refresh token rotation behavior, required with grant types refresh_token\n"
                    },
                    "responseTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OAuth 2.0 response type strings. Valid values are any combination of: `code`, `token`, and `id_token`.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. By default, it is `ACTIVE`\n"
                    },
                    "tokenEndpointAuthMethod": {
                        "type": "string",
                        "description": "Requested authentication method for the token endpoint, valid values include:  'client*secret*basic', 'client*secret*post', 'client*secret*jwt', 'private*key*jwt', 'none', etc.\n"
                    },
                    "tosUri": {
                        "type": "string",
                        "description": "URI to web page providing client tos (terms of service).\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of client application.\n",
                        "willReplaceOnChanges": true
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default: `${source.login}`\n"
                    },
                    "userNameTemplatePushStatus": {
                        "type": "string",
                        "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default: `BUILT_IN`\n"
                    },
                    "wildcardRedirect": {
                        "type": "string",
                        "description": "*Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/oAuthPostLogoutRedirectUri:OAuthPostLogoutRedirectUri": {
            "description": "This resource allows you to manage post logout redirection URI for use in redirect-based flows.\n\n\u003e `okta.app.OAuthPostLogoutRedirectUri` has been marked deprecated and will\nbe removed in the v5 release of the provider. Operators should manage the post\nlogout redirect URIs for an oauth app directly on that resource.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.app.OAuth(\"test\", {\n    label: \"testAcc_replace_with_uuid\",\n    type: \"web\",\n    grantTypes: [\"authorization_code\"],\n    responseTypes: [\"code\"],\n    redirectUris: [\"myapp://callback\"],\n    postLogoutRedirectUris: [\"https://www.example.com\"],\n});\nconst testOAuthPostLogoutRedirectUri = new okta.app.OAuthPostLogoutRedirectUri(\"test\", {\n    appId: test.id,\n    uri: \"https://www.example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.app.OAuth(\"test\",\n    label=\"testAcc_replace_with_uuid\",\n    type=\"web\",\n    grant_types=[\"authorization_code\"],\n    response_types=[\"code\"],\n    redirect_uris=[\"myapp://callback\"],\n    post_logout_redirect_uris=[\"https://www.example.com\"])\ntest_o_auth_post_logout_redirect_uri = okta.app.OAuthPostLogoutRedirectUri(\"test\",\n    app_id=test.id,\n    uri=\"https://www.example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Okta.App.OAuth(\"test\", new()\n    {\n        Label = \"testAcc_replace_with_uuid\",\n        Type = \"web\",\n        GrantTypes = new[]\n        {\n            \"authorization_code\",\n        },\n        ResponseTypes = new[]\n        {\n            \"code\",\n        },\n        RedirectUris = new[]\n        {\n            \"myapp://callback\",\n        },\n        PostLogoutRedirectUris = new[]\n        {\n            \"https://www.example.com\",\n        },\n    });\n\n    var testOAuthPostLogoutRedirectUri = new Okta.App.OAuthPostLogoutRedirectUri(\"test\", new()\n    {\n        AppId = test.Id,\n        Uri = \"https://www.example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := app.NewOAuth(ctx, \"test\", \u0026app.OAuthArgs{\n\t\t\tLabel: pulumi.String(\"testAcc_replace_with_uuid\"),\n\t\t\tType:  pulumi.String(\"web\"),\n\t\t\tGrantTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"authorization_code\"),\n\t\t\t},\n\t\t\tResponseTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"code\"),\n\t\t\t},\n\t\t\tRedirectUris: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"myapp://callback\"),\n\t\t\t},\n\t\t\tPostLogoutRedirectUris: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"https://www.example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = app.NewOAuthPostLogoutRedirectUri(ctx, \"test\", \u0026app.OAuthPostLogoutRedirectUriArgs{\n\t\t\tAppId: test.ID(),\n\t\t\tUri:   pulumi.String(\"https://www.example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.OAuth;\nimport com.pulumi.okta.app.OAuthArgs;\nimport com.pulumi.okta.app.OAuthPostLogoutRedirectUri;\nimport com.pulumi.okta.app.OAuthPostLogoutRedirectUriArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new OAuth(\"test\", OAuthArgs.builder()\n            .label(\"testAcc_replace_with_uuid\")\n            .type(\"web\")\n            .grantTypes(\"authorization_code\")\n            .responseTypes(\"code\")\n            .redirectUris(\"myapp://callback\")\n            .postLogoutRedirectUris(\"https://www.example.com\")\n            .build());\n\n        var testOAuthPostLogoutRedirectUri = new OAuthPostLogoutRedirectUri(\"testOAuthPostLogoutRedirectUri\", OAuthPostLogoutRedirectUriArgs.builder()\n            .appId(test.id())\n            .uri(\"https://www.example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: okta:app:OAuth\n    properties:\n      label: testAcc_replace_with_uuid\n      type: web\n      grantTypes:\n        - authorization_code\n      responseTypes:\n        - code\n      redirectUris:\n        - myapp://callback\n      postLogoutRedirectUris:\n        - https://www.example.com\n  testOAuthPostLogoutRedirectUri:\n    type: okta:app:OAuthPostLogoutRedirectUri\n    name: test\n    properties:\n      appId: ${test.id}\n      uri: https://www.example.com\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:app/oAuthPostLogoutRedirectUri:OAuthPostLogoutRedirectUri example \u003capp_id\u003e/\u003curi\u003e\n```\n\n",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "OAuth application ID.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "Post Logout Redirect URI to append to Okta OIDC application.\n"
                }
            },
            "required": [
                "appId",
                "uri"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "OAuth application ID.\n",
                    "willReplaceOnChanges": true
                },
                "uri": {
                    "type": "string",
                    "description": "Post Logout Redirect URI to append to Okta OIDC application.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "uri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OAuthPostLogoutRedirectUri resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "OAuth application ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "uri": {
                        "type": "string",
                        "description": "Post Logout Redirect URI to append to Okta OIDC application.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/oAuthRedirectUri:OAuthRedirectUri": {
            "description": "This resource allows you to manage redirection URI for use in redirect-based flows.\n\n\u003e `okta.app.OAuthRedirectUri` has been marked deprecated and will be removed\nin the v5 release of the provider. Operators should manage the redirect URIs for\nan oauth app directly on that resource.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.app.OAuth(\"test\", {\n    label: \"testAcc_replace_with_uuid\",\n    type: \"web\",\n    grantTypes: [\"authorization_code\"],\n    responseTypes: [\"code\"],\n    redirectUris: [\"myapp://callback\"],\n});\nconst testOAuthRedirectUri = new okta.app.OAuthRedirectUri(\"test\", {\n    appId: test.id,\n    uri: \"http://google.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.app.OAuth(\"test\",\n    label=\"testAcc_replace_with_uuid\",\n    type=\"web\",\n    grant_types=[\"authorization_code\"],\n    response_types=[\"code\"],\n    redirect_uris=[\"myapp://callback\"])\ntest_o_auth_redirect_uri = okta.app.OAuthRedirectUri(\"test\",\n    app_id=test.id,\n    uri=\"http://google.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Okta.App.OAuth(\"test\", new()\n    {\n        Label = \"testAcc_replace_with_uuid\",\n        Type = \"web\",\n        GrantTypes = new[]\n        {\n            \"authorization_code\",\n        },\n        ResponseTypes = new[]\n        {\n            \"code\",\n        },\n        RedirectUris = new[]\n        {\n            \"myapp://callback\",\n        },\n    });\n\n    var testOAuthRedirectUri = new Okta.App.OAuthRedirectUri(\"test\", new()\n    {\n        AppId = test.Id,\n        Uri = \"http://google.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := app.NewOAuth(ctx, \"test\", \u0026app.OAuthArgs{\n\t\t\tLabel: pulumi.String(\"testAcc_replace_with_uuid\"),\n\t\t\tType:  pulumi.String(\"web\"),\n\t\t\tGrantTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"authorization_code\"),\n\t\t\t},\n\t\t\tResponseTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"code\"),\n\t\t\t},\n\t\t\tRedirectUris: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"myapp://callback\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = app.NewOAuthRedirectUri(ctx, \"test\", \u0026app.OAuthRedirectUriArgs{\n\t\t\tAppId: test.ID(),\n\t\t\tUri:   pulumi.String(\"http://google.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.OAuth;\nimport com.pulumi.okta.app.OAuthArgs;\nimport com.pulumi.okta.app.OAuthRedirectUri;\nimport com.pulumi.okta.app.OAuthRedirectUriArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new OAuth(\"test\", OAuthArgs.builder()\n            .label(\"testAcc_replace_with_uuid\")\n            .type(\"web\")\n            .grantTypes(\"authorization_code\")\n            .responseTypes(\"code\")\n            .redirectUris(\"myapp://callback\")\n            .build());\n\n        var testOAuthRedirectUri = new OAuthRedirectUri(\"testOAuthRedirectUri\", OAuthRedirectUriArgs.builder()\n            .appId(test.id())\n            .uri(\"http://google.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: okta:app:OAuth\n    properties:\n      label: testAcc_replace_with_uuid\n      type: web\n      grantTypes:\n        - authorization_code\n      responseTypes:\n        - code\n      redirectUris:\n        - myapp://callback\n  testOAuthRedirectUri:\n    type: okta:app:OAuthRedirectUri\n    name: test\n    properties:\n      appId: ${test.id}\n      uri: http://google.com\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:app/oAuthRedirectUri:OAuthRedirectUri example \u003capp_id\u003e/\u003curi\u003e\n```\n\n",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "OAuth application ID.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "Redirect URI to append to Okta OIDC application.\n"
                }
            },
            "required": [
                "appId",
                "uri"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "OAuth application ID.\n",
                    "willReplaceOnChanges": true
                },
                "uri": {
                    "type": "string",
                    "description": "Redirect URI to append to Okta OIDC application.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "uri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OAuthRedirectUri resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "OAuth application ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "uri": {
                        "type": "string",
                        "description": "Redirect URI to append to Okta OIDC application.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/oauthRoleAssignment:OauthRoleAssignment": {
            "description": "Manages assignment of an admin role to an OAuth application\n\t\tThis resource allows you to assign an Okta admin role to a OAuth \n\t\tservice application. This requires the Okta tenant feature flag for this function to be enabled.\n\n## Import\n\n```sh\n$ pulumi import okta:app/oauthRoleAssignment:OauthRoleAssignment test \u003cclientID\u003e/\u003croleAssignmentID\u003e\n```\n\n",
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Client ID for the role to be assigned to\n"
                },
                "label": {
                    "type": "string",
                    "description": "Label of the role assignment\n"
                },
                "resourceSet": {
                    "type": "string",
                    "description": "Resource set for the custom role to assign, must be the ID of the created resource set.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Custom Role ID\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the role assignment\n"
                },
                "type": {
                    "type": "string",
                    "description": "Role type to assign. This can be one of the standard Okta roles, such as `HELP_DESK_ADMIN`, or `CUSTOM`. Using custom requires the `resource_set` and `role` attributes to be set.\n"
                }
            },
            "required": [
                "clientId",
                "label",
                "status",
                "type"
            ],
            "inputProperties": {
                "clientId": {
                    "type": "string",
                    "description": "Client ID for the role to be assigned to\n"
                },
                "resourceSet": {
                    "type": "string",
                    "description": "Resource set for the custom role to assign, must be the ID of the created resource set.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Custom Role ID\n"
                },
                "type": {
                    "type": "string",
                    "description": "Role type to assign. This can be one of the standard Okta roles, such as `HELP_DESK_ADMIN`, or `CUSTOM`. Using custom requires the `resource_set` and `role` attributes to be set.\n"
                }
            },
            "requiredInputs": [
                "clientId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OauthRoleAssignment resources.\n",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "description": "Client ID for the role to be assigned to\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Label of the role assignment\n"
                    },
                    "resourceSet": {
                        "type": "string",
                        "description": "Resource set for the custom role to assign, must be the ID of the created resource set.\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "Custom Role ID\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the role assignment\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Role type to assign. This can be one of the standard Okta roles, such as `HELP_DESK_ADMIN`, or `CUSTOM`. Using custom requires the `resource_set` and `role` attributes to be set.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/saml:Saml": {
            "description": "This resource allows you to create and configure a SAML Application.\n\u003e During an apply if there is change in 'status' the app will first be\nactivated or deactivated in accordance with the 'status' change. Then, all\nother arguments that changed will be applied.\n\t\t\n\u003e If you receive the error 'You do not have permission to access the feature\nyou are requesting' contact support and\nrequest feature flag 'ADVANCED_SSO' be applied to your org.\n\n## Import\n\n```sh\n$ pulumi import okta:app/saml:Saml example \u003capp_id\u003e\n```\n\n",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "acsEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of ACS endpoints. You can configure a maximum of 100 endpoints.\n"
                },
                "acsEndpointsIndices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/SamlAcsEndpointsIndex:SamlAcsEndpointsIndex"
                    },
                    "description": "ACS endpoints along with custom index as a set of maps called `acs_endpoints_indices` in JSON format.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "appSettingsJson": {
                    "type": "string",
                    "description": "Application settings in JSON format\n"
                },
                "assertionSigned": {
                    "type": "boolean",
                    "description": "Determines whether the SAML assertion is digitally signed\n"
                },
                "attributeStatements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/SamlAttributeStatement:SamlAttributeStatement"
                    }
                },
                "audience": {
                    "type": "string",
                    "description": "Audience Restriction\n"
                },
                "authenticationPolicy": {
                    "type": "string",
                    "description": "The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.y\n"
                },
                "authnContextClassRef": {
                    "type": "string",
                    "description": "Identifies the SAML authentication context class for the assertion’s authentication statement\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar. Default is: `false`\n"
                },
                "certificate": {
                    "type": "string",
                    "description": "cert from SAML XML metadata payload\n"
                },
                "defaultRelayState": {
                    "type": "string",
                    "description": "Identifies a specific application resource in an IDP initiated SSO scenario.\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Identifies the location where the SAML response is intended to be sent inside of the SAML assertion\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response\n"
                },
                "embedUrl": {
                    "type": "string",
                    "description": "The url that can be used to embed this application in other portals.\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "entityKey": {
                    "type": "string",
                    "description": "Entity ID, the ID portion of the entity_url\n"
                },
                "entityUrl": {
                    "type": "string",
                    "description": "Entity URL for instance http://www.okta.com/exk1fcia6d6EMsf331d8\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "features to enable\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "honorForceAuthn": {
                    "type": "boolean",
                    "description": "Prompt user to re-authenticate if SP asks for it. Default is: `false`\n"
                },
                "httpPostBinding": {
                    "type": "string",
                    "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.\n"
                },
                "httpRedirectBinding": {
                    "type": "string",
                    "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.\n"
                },
                "idpIssuer": {
                    "type": "string",
                    "description": "SAML issuer ID\n"
                },
                "implicitAssignment": {
                    "type": "boolean",
                    "description": "*Early Access Property*. Enable Federation Broker Mode.\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "Saml Inline Hook setting\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "Certificate ID\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with `key_years_valid`\n"
                },
                "keyYearsValid": {
                    "type": "integer",
                    "description": "Number of years the certificate is valid (2 - 10 years).\n"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/SamlKey:SamlKey"
                    },
                    "description": "Application keys\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "metadata": {
                    "type": "string",
                    "description": "SAML xml metadata payload\n"
                },
                "metadataUrl": {
                    "type": "string",
                    "description": "SAML xml metadata URL\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Name of application from the Okta Integration Network. For instance 'slack'. If not included a custom app will be created.  If not provided the following arguments are required:\n'sso*url'\n'recipient'\n'destination'\n'audience'\n'subject*name*id*template'\n'subject*name*id*format'\n'signature*algorithm'\n'digest*algorithm'\n'authn*context*class*ref'\n"
                },
                "recipient": {
                    "type": "string",
                    "description": "The location where the app may present the SAML assertion\n"
                },
                "requestCompressed": {
                    "type": "boolean",
                    "description": "Denotes whether the request is compressed or not.\n"
                },
                "responseSigned": {
                    "type": "boolean",
                    "description": "Determines whether the SAML auth response message is digitally signed\n"
                },
                "samlSignedRequestEnabled": {
                    "type": "boolean",
                    "description": "SAML Signed Request enabled\n"
                },
                "samlVersion": {
                    "type": "string",
                    "description": "SAML version for the app's sign-on mode. Valid values are: `2.0` or `1.1`. Default is `2.0`\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Signature algorithm used to digitally sign the assertion and response\n"
                },
                "singleLogoutCertificate": {
                    "type": "string",
                    "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests. Note: should be provided without `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`, see [official documentation](https://developer.okta.com/docs/reference/api/apps/#service-provider-certificate).\n"
                },
                "singleLogoutIssuer": {
                    "type": "string",
                    "description": "The issuer of the Service Provider that generates the Single Logout request\n"
                },
                "singleLogoutUrl": {
                    "type": "string",
                    "description": "The location where the logout response is sent\n"
                },
                "spIssuer": {
                    "type": "string",
                    "description": "SAML SP issuer ID\n"
                },
                "ssoUrl": {
                    "type": "string",
                    "description": "Single Sign On URL\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "subjectNameIdFormat": {
                    "type": "string",
                    "description": "Identifies the SAML processing rules.\n"
                },
                "subjectNameIdTemplate": {
                    "type": "string",
                    "description": "Template for app user's username when a user is assigned to the app\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `${source.login}`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `BUILT_IN`\n"
                }
            },
            "required": [
                "authenticationPolicy",
                "certificate",
                "embedUrl",
                "entityKey",
                "entityUrl",
                "features",
                "httpPostBinding",
                "httpRedirectBinding",
                "keyId",
                "keys",
                "label",
                "logoUrl",
                "metadata",
                "metadataUrl",
                "name",
                "signOnMode"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "acsEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of ACS endpoints. You can configure a maximum of 100 endpoints.\n"
                },
                "acsEndpointsIndices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/SamlAcsEndpointsIndex:SamlAcsEndpointsIndex"
                    },
                    "description": "ACS endpoints along with custom index as a set of maps called `acs_endpoints_indices` in JSON format.\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "appSettingsJson": {
                    "type": "string",
                    "description": "Application settings in JSON format\n"
                },
                "assertionSigned": {
                    "type": "boolean",
                    "description": "Determines whether the SAML assertion is digitally signed\n"
                },
                "attributeStatements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:app/SamlAttributeStatement:SamlAttributeStatement"
                    }
                },
                "audience": {
                    "type": "string",
                    "description": "Audience Restriction\n"
                },
                "authenticationPolicy": {
                    "type": "string",
                    "description": "The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.y\n"
                },
                "authnContextClassRef": {
                    "type": "string",
                    "description": "Identifies the SAML authentication context class for the assertion’s authentication statement\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar. Default is: `false`\n"
                },
                "defaultRelayState": {
                    "type": "string",
                    "description": "Identifies a specific application resource in an IDP initiated SSO scenario.\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Identifies the location where the SAML response is intended to be sent inside of the SAML assertion\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "honorForceAuthn": {
                    "type": "boolean",
                    "description": "Prompt user to re-authenticate if SP asks for it. Default is: `false`\n"
                },
                "idpIssuer": {
                    "type": "string",
                    "description": "SAML issuer ID\n"
                },
                "implicitAssignment": {
                    "type": "boolean",
                    "description": "*Early Access Property*. Enable Federation Broker Mode.\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "Saml Inline Hook setting\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with `key_years_valid`\n"
                },
                "keyYearsValid": {
                    "type": "integer",
                    "description": "Number of years the certificate is valid (2 - 10 years).\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Name of application from the Okta Integration Network. For instance 'slack'. If not included a custom app will be created.  If not provided the following arguments are required:\n'sso*url'\n'recipient'\n'destination'\n'audience'\n'subject*name*id*template'\n'subject*name*id*format'\n'signature*algorithm'\n'digest*algorithm'\n'authn*context*class*ref'\n",
                    "willReplaceOnChanges": true
                },
                "recipient": {
                    "type": "string",
                    "description": "The location where the app may present the SAML assertion\n"
                },
                "requestCompressed": {
                    "type": "boolean",
                    "description": "Denotes whether the request is compressed or not.\n"
                },
                "responseSigned": {
                    "type": "boolean",
                    "description": "Determines whether the SAML auth response message is digitally signed\n"
                },
                "samlSignedRequestEnabled": {
                    "type": "boolean",
                    "description": "SAML Signed Request enabled\n"
                },
                "samlVersion": {
                    "type": "string",
                    "description": "SAML version for the app's sign-on mode. Valid values are: `2.0` or `1.1`. Default is `2.0`\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Signature algorithm used to digitally sign the assertion and response\n"
                },
                "singleLogoutCertificate": {
                    "type": "string",
                    "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests. Note: should be provided without `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`, see [official documentation](https://developer.okta.com/docs/reference/api/apps/#service-provider-certificate).\n"
                },
                "singleLogoutIssuer": {
                    "type": "string",
                    "description": "The issuer of the Service Provider that generates the Single Logout request\n"
                },
                "singleLogoutUrl": {
                    "type": "string",
                    "description": "The location where the logout response is sent\n"
                },
                "spIssuer": {
                    "type": "string",
                    "description": "SAML SP issuer ID\n"
                },
                "ssoUrl": {
                    "type": "string",
                    "description": "Single Sign On URL\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "subjectNameIdFormat": {
                    "type": "string",
                    "description": "Identifies the SAML processing rules.\n"
                },
                "subjectNameIdTemplate": {
                    "type": "string",
                    "description": "Template for app user's username when a user is assigned to the app\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `${source.login}`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `BUILT_IN`\n"
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Saml resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page URL\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self service. Default is `false`\n"
                    },
                    "acsEndpoints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of ACS endpoints. You can configure a maximum of 100 endpoints.\n"
                    },
                    "acsEndpointsIndices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/SamlAcsEndpointsIndex:SamlAcsEndpointsIndex"
                        },
                        "description": "ACS endpoints along with custom index as a set of maps called `acs_endpoints_indices` in JSON format.\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "appSettingsJson": {
                        "type": "string",
                        "description": "Application settings in JSON format\n"
                    },
                    "assertionSigned": {
                        "type": "boolean",
                        "description": "Determines whether the SAML assertion is digitally signed\n"
                    },
                    "attributeStatements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/SamlAttributeStatement:SamlAttributeStatement"
                        }
                    },
                    "audience": {
                        "type": "string",
                        "description": "Audience Restriction\n"
                    },
                    "authenticationPolicy": {
                        "type": "string",
                        "description": "The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.y\n"
                    },
                    "authnContextClassRef": {
                        "type": "string",
                        "description": "Identifies the SAML authentication context class for the assertion’s authentication statement\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar. Default is: `false`\n"
                    },
                    "certificate": {
                        "type": "string",
                        "description": "cert from SAML XML metadata payload\n"
                    },
                    "defaultRelayState": {
                        "type": "string",
                        "description": "Identifies a specific application resource in an IDP initiated SSO scenario.\n"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Identifies the location where the SAML response is intended to be sent inside of the SAML assertion\n"
                    },
                    "digestAlgorithm": {
                        "type": "string",
                        "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response\n"
                    },
                    "embedUrl": {
                        "type": "string",
                        "description": "The url that can be used to embed this application in other portals.\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "entityKey": {
                        "type": "string",
                        "description": "Entity ID, the ID portion of the entity_url\n"
                    },
                    "entityUrl": {
                        "type": "string",
                        "description": "Entity URL for instance http://www.okta.com/exk1fcia6d6EMsf331d8\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "features to enable\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "honorForceAuthn": {
                        "type": "boolean",
                        "description": "Prompt user to re-authenticate if SP asks for it. Default is: `false`\n"
                    },
                    "httpPostBinding": {
                        "type": "string",
                        "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.\n"
                    },
                    "httpRedirectBinding": {
                        "type": "string",
                        "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.\n"
                    },
                    "idpIssuer": {
                        "type": "string",
                        "description": "SAML issuer ID\n"
                    },
                    "implicitAssignment": {
                        "type": "boolean",
                        "description": "*Early Access Property*. Enable Federation Broker Mode.\n"
                    },
                    "inlineHookId": {
                        "type": "string",
                        "description": "Saml Inline Hook setting\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "Certificate ID\n"
                    },
                    "keyName": {
                        "type": "string",
                        "description": "Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with `key_years_valid`\n"
                    },
                    "keyYearsValid": {
                        "type": "integer",
                        "description": "Number of years the certificate is valid (2 - 10 years).\n"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:app/SamlKey:SamlKey"
                        },
                        "description": "Application keys\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "metadata": {
                        "type": "string",
                        "description": "SAML xml metadata payload\n"
                    },
                    "metadataUrl": {
                        "type": "string",
                        "description": "SAML xml metadata URL\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "preconfiguredApp": {
                        "type": "string",
                        "description": "Name of application from the Okta Integration Network. For instance 'slack'. If not included a custom app will be created.  If not provided the following arguments are required:\n'sso*url'\n'recipient'\n'destination'\n'audience'\n'subject*name*id*template'\n'subject*name*id*format'\n'signature*algorithm'\n'digest*algorithm'\n'authn*context*class*ref'\n",
                        "willReplaceOnChanges": true
                    },
                    "recipient": {
                        "type": "string",
                        "description": "The location where the app may present the SAML assertion\n"
                    },
                    "requestCompressed": {
                        "type": "boolean",
                        "description": "Denotes whether the request is compressed or not.\n"
                    },
                    "responseSigned": {
                        "type": "boolean",
                        "description": "Determines whether the SAML auth response message is digitally signed\n"
                    },
                    "samlSignedRequestEnabled": {
                        "type": "boolean",
                        "description": "SAML Signed Request enabled\n"
                    },
                    "samlVersion": {
                        "type": "string",
                        "description": "SAML version for the app's sign-on mode. Valid values are: `2.0` or `1.1`. Default is `2.0`\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "Signature algorithm used to digitally sign the assertion and response\n"
                    },
                    "singleLogoutCertificate": {
                        "type": "string",
                        "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests. Note: should be provided without `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`, see [official documentation](https://developer.okta.com/docs/reference/api/apps/#service-provider-certificate).\n"
                    },
                    "singleLogoutIssuer": {
                        "type": "string",
                        "description": "The issuer of the Service Provider that generates the Single Logout request\n"
                    },
                    "singleLogoutUrl": {
                        "type": "string",
                        "description": "The location where the logout response is sent\n"
                    },
                    "spIssuer": {
                        "type": "string",
                        "description": "SAML SP issuer ID\n"
                    },
                    "ssoUrl": {
                        "type": "string",
                        "description": "Single Sign On URL\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. By default, it is `ACTIVE`\n"
                    },
                    "subjectNameIdFormat": {
                        "type": "string",
                        "description": "Identifies the SAML processing rules.\n"
                    },
                    "subjectNameIdTemplate": {
                        "type": "string",
                        "description": "Template for app user's username when a user is assigned to the app\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default: `${source.login}`\n"
                    },
                    "userNameTemplatePushStatus": {
                        "type": "string",
                        "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default: `BUILT_IN`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/securePasswordStore:SecurePasswordStore": {
            "description": "Creates a Secure Password Store Application.\n\t\n\t\tThis resource allows you to create and configure a Secure Password Store Application.\n\t\t\u003e During an apply if there is change in 'status' the app will first be\n\t\tactivated or deactivated in accordance with the 'status' change. Then, all\n\t\tother arguments that changed will be applied.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.SecurePasswordStore(\"example\", {\n    label: \"example\",\n    usernameField: \"user\",\n    passwordField: \"pass\",\n    url: \"https://test.com\",\n    credentialsScheme: \"ADMIN_SETS_CREDENTIALS\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.SecurePasswordStore(\"example\",\n    label=\"example\",\n    username_field=\"user\",\n    password_field=\"pass\",\n    url=\"https://test.com\",\n    credentials_scheme=\"ADMIN_SETS_CREDENTIALS\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.App.SecurePasswordStore(\"example\", new()\n    {\n        Label = \"example\",\n        UsernameField = \"user\",\n        PasswordField = \"pass\",\n        Url = \"https://test.com\",\n        CredentialsScheme = \"ADMIN_SETS_CREDENTIALS\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewSecurePasswordStore(ctx, \"example\", \u0026app.SecurePasswordStoreArgs{\n\t\t\tLabel:             pulumi.String(\"example\"),\n\t\t\tUsernameField:     pulumi.String(\"user\"),\n\t\t\tPasswordField:     pulumi.String(\"pass\"),\n\t\t\tUrl:               pulumi.String(\"https://test.com\"),\n\t\t\tCredentialsScheme: pulumi.String(\"ADMIN_SETS_CREDENTIALS\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.SecurePasswordStore;\nimport com.pulumi.okta.app.SecurePasswordStoreArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new SecurePasswordStore(\"example\", SecurePasswordStoreArgs.builder()\n            .label(\"example\")\n            .usernameField(\"user\")\n            .passwordField(\"pass\")\n            .url(\"https://test.com\")\n            .credentialsScheme(\"ADMIN_SETS_CREDENTIALS\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:SecurePasswordStore\n    properties:\n      label: example\n      usernameField: user\n      passwordField: pass\n      url: https://test.com\n      credentialsScheme: ADMIN_SETS_CREDENTIALS\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:app/securePasswordStore:SecurePasswordStore example \u003capp_id\u003e\n```\n\n",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "optionalField1": {
                    "type": "string",
                    "description": "Name of optional param in the login form\n"
                },
                "optionalField1Value": {
                    "type": "string",
                    "description": "Name of optional value in login form\n"
                },
                "optionalField2": {
                    "type": "string",
                    "description": "Name of optional param in the login form\n"
                },
                "optionalField2Value": {
                    "type": "string",
                    "description": "Name of optional value in login form\n"
                },
                "optionalField3": {
                    "type": "string",
                    "description": "Name of optional param in the login form\n"
                },
                "optionalField3Value": {
                    "type": "string",
                    "description": "Name of optional value in login form\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `ADMIN_SETS_CREDENTIALS`, `SHARED_USERNAME_AND_PASSWORD` or `EXTERNAL_PASSWORD_SYNC`.\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `${source.login}`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `BUILT_IN`\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field\n"
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "passwordField",
                "signOnMode",
                "url",
                "usernameField"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "optionalField1": {
                    "type": "string",
                    "description": "Name of optional param in the login form\n"
                },
                "optionalField1Value": {
                    "type": "string",
                    "description": "Name of optional value in login form\n"
                },
                "optionalField2": {
                    "type": "string",
                    "description": "Name of optional param in the login form\n"
                },
                "optionalField2Value": {
                    "type": "string",
                    "description": "Name of optional value in login form\n"
                },
                "optionalField3": {
                    "type": "string",
                    "description": "Name of optional param in the login form\n"
                },
                "optionalField3Value": {
                    "type": "string",
                    "description": "Name of optional value in login form\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `ADMIN_SETS_CREDENTIALS`, `SHARED_USERNAME_AND_PASSWORD` or `EXTERNAL_PASSWORD_SYNC`.\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `${source.login}`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `BUILT_IN`\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field\n"
                }
            },
            "requiredInputs": [
                "label",
                "passwordField",
                "url",
                "usernameField"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurePasswordStore resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page URL\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self service. Default is `false`\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar\n"
                    },
                    "credentialsScheme": {
                        "type": "string",
                        "description": "Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "optionalField1": {
                        "type": "string",
                        "description": "Name of optional param in the login form\n"
                    },
                    "optionalField1Value": {
                        "type": "string",
                        "description": "Name of optional value in login form\n"
                    },
                    "optionalField2": {
                        "type": "string",
                        "description": "Name of optional param in the login form\n"
                    },
                    "optionalField2Value": {
                        "type": "string",
                        "description": "Name of optional value in login form\n"
                    },
                    "optionalField3": {
                        "type": "string",
                        "description": "Name of optional param in the login form\n"
                    },
                    "optionalField3Value": {
                        "type": "string",
                        "description": "Name of optional value in login form\n"
                    },
                    "passwordField": {
                        "type": "string",
                        "description": "Login password field\n"
                    },
                    "revealPassword": {
                        "type": "boolean",
                        "description": "Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `ADMIN_SETS_CREDENTIALS`, `SHARED_USERNAME_AND_PASSWORD` or `EXTERNAL_PASSWORD_SYNC`.\n"
                    },
                    "sharedPassword": {
                        "type": "string",
                        "description": "Shared password, required for certain schemes.\n"
                    },
                    "sharedUsername": {
                        "type": "string",
                        "description": "Shared username, required for certain schemes.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. By default, it is `ACTIVE`\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Login URL\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default: `${source.login}`\n"
                    },
                    "userNameTemplatePushStatus": {
                        "type": "string",
                        "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default: `BUILT_IN`\n"
                    },
                    "usernameField": {
                        "type": "string",
                        "description": "Login username field\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/swa:Swa": {
            "description": "Creates a SWA Application.\n\t\t\nThis resource allows you to create and configure a SWA Application.\n\u003e During an apply if there is change in 'status' the app will first be\nactivated or deactivated in accordance with the 'status' change. Then, all\nother arguments that changed will be applied.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.Swa(\"example\", {\n    label: \"example\",\n    buttonField: \"btn-login\",\n    passwordField: \"txtbox-password\",\n    usernameField: \"txtbox-username\",\n    url: \"https://example.com/login.html\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.Swa(\"example\",\n    label=\"example\",\n    button_field=\"btn-login\",\n    password_field=\"txtbox-password\",\n    username_field=\"txtbox-username\",\n    url=\"https://example.com/login.html\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.App.Swa(\"example\", new()\n    {\n        Label = \"example\",\n        ButtonField = \"btn-login\",\n        PasswordField = \"txtbox-password\",\n        UsernameField = \"txtbox-username\",\n        Url = \"https://example.com/login.html\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewSwa(ctx, \"example\", \u0026app.SwaArgs{\n\t\t\tLabel:         pulumi.String(\"example\"),\n\t\t\tButtonField:   pulumi.String(\"btn-login\"),\n\t\t\tPasswordField: pulumi.String(\"txtbox-password\"),\n\t\t\tUsernameField: pulumi.String(\"txtbox-username\"),\n\t\t\tUrl:           pulumi.String(\"https://example.com/login.html\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.Swa;\nimport com.pulumi.okta.app.SwaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Swa(\"example\", SwaArgs.builder()\n            .label(\"example\")\n            .buttonField(\"btn-login\")\n            .passwordField(\"txtbox-password\")\n            .usernameField(\"txtbox-username\")\n            .url(\"https://example.com/login.html\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:Swa\n    properties:\n      label: example\n      buttonField: btn-login\n      passwordField: txtbox-password\n      usernameField: txtbox-username\n      url: https://example.com/login.html\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:app/swa:Swa example \u003capp_id\u003e\n```\n\n",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "buttonField": {
                    "type": "string",
                    "description": "Login button field\n"
                },
                "checkbox": {
                    "type": "string",
                    "description": "CSS selector for the checkbox\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Preconfigured app name\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "If going to the login page URL redirects to another page, then enter that URL here\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regex that further restricts URL to the specified regex\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `${source.login}`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `BUILT_IN`\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field\n"
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "signOnMode"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "buttonField": {
                    "type": "string",
                    "description": "Login button field\n"
                },
                "checkbox": {
                    "type": "string",
                    "description": "CSS selector for the checkbox\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Preconfigured app name\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "If going to the login page URL redirects to another page, then enter that URL here\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regex that further restricts URL to the specified regex\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `${source.login}`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `BUILT_IN`\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field\n"
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Swa resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page URL\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self service. Default is `false`\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar\n"
                    },
                    "buttonField": {
                        "type": "string",
                        "description": "Login button field\n"
                    },
                    "checkbox": {
                        "type": "string",
                        "description": "CSS selector for the checkbox\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "passwordField": {
                        "type": "string",
                        "description": "Login password field\n"
                    },
                    "preconfiguredApp": {
                        "type": "string",
                        "description": "Preconfigured app name\n"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "description": "If going to the login page URL redirects to another page, then enter that URL here\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. By default, it is `ACTIVE`\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Login URL\n"
                    },
                    "urlRegex": {
                        "type": "string",
                        "description": "A regex that further restricts URL to the specified regex\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default: `${source.login}`\n"
                    },
                    "userNameTemplatePushStatus": {
                        "type": "string",
                        "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default: `BUILT_IN`\n"
                    },
                    "usernameField": {
                        "type": "string",
                        "description": "Login username field\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/threeField:ThreeField": {
            "description": "Creates a Three Field Application.\n\t\tThis resource allows you to create and configure a Three Field Application.\n\t\t\u003e During an apply if there is change in 'status' the app will first be\n\t\tactivated or deactivated in accordance with the 'status' change. Then, all\n\t\tother arguments that changed will be applied.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```yaml\nresources:\n  example:\n    type: okta:app:ThreeField\n    properties:\n      label: Example App\n      signOnUrl: https://example.com/login.html\n      signOnRedirectUrl: https://example.com\n      revealPassword: true\n      credentialsScheme: EDIT_USERNAME_AND_PASSWORD\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:app/threeField:ThreeField example \u003capp_id\u003e\n```\n\n",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "buttonSelector": {
                    "type": "string",
                    "description": "Login button field CSS selector\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "extraFieldSelector": {
                    "type": "string",
                    "description": "Extra field CSS selector\n"
                },
                "extraFieldValue": {
                    "type": "string",
                    "description": "Value for extra form field\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "passwordSelector": {
                    "type": "string",
                    "description": "Login password field CSS selector\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `ADMIN_SETS_CREDENTIALS`, `SHARED_USERNAME_AND_PASSWORD` or `EXTERNAL_PASSWORD_SYNC`.\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regex that further restricts URL to the specified regex\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `${source.login}`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `BUILT_IN`\n"
                },
                "usernameSelector": {
                    "type": "string",
                    "description": "Login username field CSS selector\n"
                }
            },
            "required": [
                "buttonSelector",
                "extraFieldSelector",
                "extraFieldValue",
                "label",
                "logoUrl",
                "name",
                "passwordSelector",
                "signOnMode",
                "url",
                "usernameSelector"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "buttonSelector": {
                    "type": "string",
                    "description": "Login button field CSS selector\n"
                },
                "credentialsScheme": {
                    "type": "string",
                    "description": "Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "extraFieldSelector": {
                    "type": "string",
                    "description": "Extra field CSS selector\n"
                },
                "extraFieldValue": {
                    "type": "string",
                    "description": "Value for extra form field\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "passwordSelector": {
                    "type": "string",
                    "description": "Login password field CSS selector\n"
                },
                "revealPassword": {
                    "type": "boolean",
                    "description": "Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `ADMIN_SETS_CREDENTIALS`, `SHARED_USERNAME_AND_PASSWORD` or `EXTERNAL_PASSWORD_SYNC`.\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "url": {
                    "type": "string",
                    "description": "Login URL\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regex that further restricts URL to the specified regex\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `${source.login}`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `BUILT_IN`\n"
                },
                "usernameSelector": {
                    "type": "string",
                    "description": "Login username field CSS selector\n"
                }
            },
            "requiredInputs": [
                "buttonSelector",
                "extraFieldSelector",
                "extraFieldValue",
                "label",
                "passwordSelector",
                "url",
                "usernameSelector"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ThreeField resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page URL\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self service. Default is `false`\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar\n"
                    },
                    "buttonSelector": {
                        "type": "string",
                        "description": "Login button field CSS selector\n"
                    },
                    "credentialsScheme": {
                        "type": "string",
                        "description": "Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "extraFieldSelector": {
                        "type": "string",
                        "description": "Extra field CSS selector\n"
                    },
                    "extraFieldValue": {
                        "type": "string",
                        "description": "Value for extra form field\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "passwordSelector": {
                        "type": "string",
                        "description": "Login password field CSS selector\n"
                    },
                    "revealPassword": {
                        "type": "boolean",
                        "description": "Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `ADMIN_SETS_CREDENTIALS`, `SHARED_USERNAME_AND_PASSWORD` or `EXTERNAL_PASSWORD_SYNC`.\n"
                    },
                    "sharedPassword": {
                        "type": "string",
                        "description": "Shared password, required for certain schemes.\n"
                    },
                    "sharedUsername": {
                        "type": "string",
                        "description": "Shared username, required for certain schemes.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. By default, it is `ACTIVE`\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Login URL\n"
                    },
                    "urlRegex": {
                        "type": "string",
                        "description": "A regex that further restricts URL to the specified regex\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default: `${source.login}`\n"
                    },
                    "userNameTemplatePushStatus": {
                        "type": "string",
                        "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default: `BUILT_IN`\n"
                    },
                    "usernameSelector": {
                        "type": "string",
                        "description": "Login username field CSS selector\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:app/user:User": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.app.User(\"example\", {\n    appId: \"\u003capp_id\u003e\",\n    userId: \"\u003cuser id\u003e\",\n    username: \"example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.User(\"example\",\n    app_id=\"\u003capp_id\u003e\",\n    user_id=\"\u003cuser id\u003e\",\n    username=\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.App.User(\"example\", new()\n    {\n        AppId = \"\u003capp_id\u003e\",\n        UserId = \"\u003cuser id\u003e\",\n        Username = \"example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.NewUser(ctx, \"example\", \u0026app.UserArgs{\n\t\t\tAppId:    pulumi.String(\"\u003capp_id\u003e\"),\n\t\t\tUserId:   pulumi.String(\"\u003cuser id\u003e\"),\n\t\t\tUsername: pulumi.String(\"example\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.User;\nimport com.pulumi.okta.app.UserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new User(\"example\", UserArgs.builder()\n            .appId(\"\u003capp_id\u003e\")\n            .userId(\"\u003cuser id\u003e\")\n            .username(\"example\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:app:User\n    properties:\n      appId: \u003capp_id\u003e\n      userId: \u003cuser id\u003e\n      username: example\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:app/user:User example \u003capp_id\u003e/\u003cuser_id\u003e\n```\n\n",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "App to associate user with\n"
                },
                "hasSharedUsername": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "description": "The password to use.\n",
                    "secret": true
                },
                "profile": {
                    "type": "string",
                    "description": "The JSON profile of the App User.\n"
                },
                "retainAssignment": {
                    "type": "boolean",
                    "description": "Retain the user assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "User associated with the application\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username to use for the app user. In case the user is assigned to the app with `SHARED_USERNAME_AND_PASSWORD` credentials scheme, this field will be computed and should not be set.\n"
                }
            },
            "required": [
                "appId",
                "hasSharedUsername",
                "userId"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "App to associate user with\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password to use.\n",
                    "secret": true
                },
                "profile": {
                    "type": "string",
                    "description": "The JSON profile of the App User.\n"
                },
                "retainAssignment": {
                    "type": "boolean",
                    "description": "Retain the user assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "User associated with the application\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username to use for the app user. In case the user is assigned to the app with `SHARED_USERNAME_AND_PASSWORD` credentials scheme, this field will be computed and should not be set.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "App to associate user with\n"
                    },
                    "hasSharedUsername": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password to use.\n",
                        "secret": true
                    },
                    "profile": {
                        "type": "string",
                        "description": "The JSON profile of the App User.\n"
                    },
                    "retainAssignment": {
                        "type": "boolean",
                        "description": "Retain the user assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "User associated with the application\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username to use for the app user. In case the user is assigned to the app with `SHARED_USERNAME_AND_PASSWORD` credentials scheme, this field will be computed and should not be set.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:auth/server:Server": {
            "description": "Creates an Authorization Server. This resource allows you to create and configure an Authorization Server.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.Server(\"example\", {\n    audiences: [\"api://example\"],\n    description: \"My Example Auth Server\",\n    name: \"example\",\n    issuerMode: \"CUSTOM_URL\",\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.Server(\"example\",\n    audiences=[\"api://example\"],\n    description=\"My Example Auth Server\",\n    name=\"example\",\n    issuer_mode=\"CUSTOM_URL\",\n    status=\"ACTIVE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Auth.Server(\"example\", new()\n    {\n        Audiences = new[]\n        {\n            \"api://example\",\n        },\n        Description = \"My Example Auth Server\",\n        Name = \"example\",\n        IssuerMode = \"CUSTOM_URL\",\n        Status = \"ACTIVE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServer(ctx, \"example\", \u0026auth.ServerArgs{\n\t\t\tAudiences: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"api://example\"),\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"My Example Auth Server\"),\n\t\t\tName:        pulumi.String(\"example\"),\n\t\t\tIssuerMode:  pulumi.String(\"CUSTOM_URL\"),\n\t\t\tStatus:      pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.Server;\nimport com.pulumi.okta.auth.ServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Server(\"example\", ServerArgs.builder()\n            .audiences(\"api://example\")\n            .description(\"My Example Auth Server\")\n            .name(\"example\")\n            .issuerMode(\"CUSTOM_URL\")\n            .status(\"ACTIVE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:auth:Server\n    properties:\n      audiences:\n        - api://example\n      description: My Example Auth Server\n      name: example\n      issuerMode: CUSTOM_URL\n      status: ACTIVE\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:auth/server:Server example \u003cauth_server_id\u003e\n```\n\n",
            "properties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token. Currently Okta only supports a single value here.\n"
                },
                "credentialsLastRotated": {
                    "type": "string",
                    "description": "The timestamp when the authorization server started to use the `kid` for signing tokens.\n"
                },
                "credentialsNextRotation": {
                    "type": "string",
                    "description": "The timestamp when the authorization server changes the key for signing tokens. Only returned when `credentials_rotation_mode` is `AUTO`.\n"
                },
                "credentialsRotationMode": {
                    "type": "string",
                    "description": "The key rotation mode for the authorization server. Can be `AUTO` or `MANUAL`. Default: `AUTO`\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the authorization server.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The complete URL for a Custom Authorization Server. This becomes the `iss` claim in an access token.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "*Early Access Property*. Allows you to use a custom issuer URL. It can be set to `CUSTOM_URL`, `ORG_URL`, or `DYNAMIC`. Default: `ORG_URL`\n"
                },
                "kid": {
                    "type": "string",
                    "description": "The ID of the JSON Web Key used for signing tokens issued by the authorization server.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the authorization server.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                }
            },
            "required": [
                "audiences",
                "credentialsLastRotated",
                "credentialsNextRotation",
                "issuer",
                "kid",
                "name"
            ],
            "inputProperties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token. Currently Okta only supports a single value here.\n"
                },
                "credentialsRotationMode": {
                    "type": "string",
                    "description": "The key rotation mode for the authorization server. Can be `AUTO` or `MANUAL`. Default: `AUTO`\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the authorization server.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "*Early Access Property*. Allows you to use a custom issuer URL. It can be set to `CUSTOM_URL`, `ORG_URL`, or `DYNAMIC`. Default: `ORG_URL`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the authorization server.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                }
            },
            "requiredInputs": [
                "audiences"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Server resources.\n",
                "properties": {
                    "audiences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token. Currently Okta only supports a single value here.\n"
                    },
                    "credentialsLastRotated": {
                        "type": "string",
                        "description": "The timestamp when the authorization server started to use the `kid` for signing tokens.\n"
                    },
                    "credentialsNextRotation": {
                        "type": "string",
                        "description": "The timestamp when the authorization server changes the key for signing tokens. Only returned when `credentials_rotation_mode` is `AUTO`.\n"
                    },
                    "credentialsRotationMode": {
                        "type": "string",
                        "description": "The key rotation mode for the authorization server. Can be `AUTO` or `MANUAL`. Default: `AUTO`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the authorization server.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The complete URL for a Custom Authorization Server. This becomes the `iss` claim in an access token.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "*Early Access Property*. Allows you to use a custom issuer URL. It can be set to `CUSTOM_URL`, `ORG_URL`, or `DYNAMIC`. Default: `ORG_URL`\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "The ID of the JSON Web Key used for signing tokens issued by the authorization server.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the authorization server.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default to `ACTIVE`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:auth/serverClaim:ServerClaim": {
            "description": "Creates an Authorization Server Claim. This resource allows you to create and configure an Authorization Server Claim.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.ServerClaim(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    name: \"staff\",\n    value: \"String.substringAfter(user.email, \\\"@\\\") == \\\"example.com\\\"\",\n    scopes: [exampleOktaAuthServerScope.name],\n    claimType: \"IDENTITY\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.ServerClaim(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    name=\"staff\",\n    value=\"String.substringAfter(user.email, \\\"@\\\") == \\\"example.com\\\"\",\n    scopes=[example_okta_auth_server_scope[\"name\"]],\n    claim_type=\"IDENTITY\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Auth.ServerClaim(\"example\", new()\n    {\n        AuthServerId = \"\u003cauth server id\u003e\",\n        Name = \"staff\",\n        Value = \"String.substringAfter(user.email, \\\"@\\\") == \\\"example.com\\\"\",\n        Scopes = new[]\n        {\n            exampleOktaAuthServerScope.Name,\n        },\n        ClaimType = \"IDENTITY\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServerClaim(ctx, \"example\", \u0026auth.ServerClaimArgs{\n\t\t\tAuthServerId: pulumi.String(\"\u003cauth server id\u003e\"),\n\t\t\tName:         pulumi.String(\"staff\"),\n\t\t\tValue:        pulumi.String(\"String.substringAfter(user.email, \\\"@\\\") == \\\"example.com\\\"\"),\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\texampleOktaAuthServerScope.Name,\n\t\t\t},\n\t\t\tClaimType: pulumi.String(\"IDENTITY\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.ServerClaim;\nimport com.pulumi.okta.auth.ServerClaimArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ServerClaim(\"example\", ServerClaimArgs.builder()\n            .authServerId(\"\u003cauth server id\u003e\")\n            .name(\"staff\")\n            .value(\"String.substringAfter(user.email, \\\"@\\\") == \\\"example.com\\\"\")\n            .scopes(exampleOktaAuthServerScope.name())\n            .claimType(\"IDENTITY\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:auth:ServerClaim\n    properties:\n      authServerId: \u003cauth server id\u003e\n      name: staff\n      value: String.substringAfter(user.email, \"@\") == \"example.com\"\n      scopes:\n        - ${exampleOktaAuthServerScope.name}\n      claimType: IDENTITY\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:auth/serverClaim:ServerClaim example \u003cauth_server_id\u003e/\u003cclaim_id\u003e\n```\n\n",
            "properties": {
                "alwaysIncludeInToken": {
                    "type": "boolean",
                    "description": "Specifies whether to include claims in token, by default it is set to `true`.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "ID of the authorization server.\n"
                },
                "claimType": {
                    "type": "string",
                    "description": "Specifies whether the claim is for an access token `RESOURCE` or ID token `IDENTITY`.\n"
                },
                "groupFilterType": {
                    "type": "string",
                    "description": "Specifies the type of group filter if `value_type` is `GROUPS`. Can be set to one of the following `STARTS_WITH`, `EQUALS`, `CONTAINS`, `REGEX`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the claim.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of scopes the auth server claim is tied to.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the claim.\n"
                },
                "valueType": {
                    "type": "string",
                    "description": "The type of value of the claim. It can be set to `EXPRESSION` or `GROUPS`. It defaults to `EXPRESSION`.\n"
                }
            },
            "required": [
                "authServerId",
                "claimType",
                "name",
                "value"
            ],
            "inputProperties": {
                "alwaysIncludeInToken": {
                    "type": "boolean",
                    "description": "Specifies whether to include claims in token, by default it is set to `true`.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "ID of the authorization server.\n"
                },
                "claimType": {
                    "type": "string",
                    "description": "Specifies whether the claim is for an access token `RESOURCE` or ID token `IDENTITY`.\n"
                },
                "groupFilterType": {
                    "type": "string",
                    "description": "Specifies the type of group filter if `value_type` is `GROUPS`. Can be set to one of the following `STARTS_WITH`, `EQUALS`, `CONTAINS`, `REGEX`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the claim.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of scopes the auth server claim is tied to.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the claim.\n"
                },
                "valueType": {
                    "type": "string",
                    "description": "The type of value of the claim. It can be set to `EXPRESSION` or `GROUPS`. It defaults to `EXPRESSION`.\n"
                }
            },
            "requiredInputs": [
                "authServerId",
                "claimType",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerClaim resources.\n",
                "properties": {
                    "alwaysIncludeInToken": {
                        "type": "boolean",
                        "description": "Specifies whether to include claims in token, by default it is set to `true`.\n"
                    },
                    "authServerId": {
                        "type": "string",
                        "description": "ID of the authorization server.\n"
                    },
                    "claimType": {
                        "type": "string",
                        "description": "Specifies whether the claim is for an access token `RESOURCE` or ID token `IDENTITY`.\n"
                    },
                    "groupFilterType": {
                        "type": "string",
                        "description": "Specifies the type of group filter if `value_type` is `GROUPS`. Can be set to one of the following `STARTS_WITH`, `EQUALS`, `CONTAINS`, `REGEX`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the claim.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of scopes the auth server claim is tied to.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default to `ACTIVE`\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the claim.\n"
                    },
                    "valueType": {
                        "type": "string",
                        "description": "The type of value of the claim. It can be set to `EXPRESSION` or `GROUPS`. It defaults to `EXPRESSION`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:auth/serverPolicy:ServerPolicy": {
            "description": "Creates an Authorization Server Policy. This resource allows you to create and configure an Authorization Server Policy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.ServerPolicy(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    status: \"ACTIVE\",\n    name: \"example\",\n    description: \"example\",\n    priority: 1,\n    clientWhitelists: [\"ALL_CLIENTS\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.ServerPolicy(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    status=\"ACTIVE\",\n    name=\"example\",\n    description=\"example\",\n    priority=1,\n    client_whitelists=[\"ALL_CLIENTS\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Auth.ServerPolicy(\"example\", new()\n    {\n        AuthServerId = \"\u003cauth server id\u003e\",\n        Status = \"ACTIVE\",\n        Name = \"example\",\n        Description = \"example\",\n        Priority = 1,\n        ClientWhitelists = new[]\n        {\n            \"ALL_CLIENTS\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServerPolicy(ctx, \"example\", \u0026auth.ServerPolicyArgs{\n\t\t\tAuthServerId: pulumi.String(\"\u003cauth server id\u003e\"),\n\t\t\tStatus:       pulumi.String(\"ACTIVE\"),\n\t\t\tName:         pulumi.String(\"example\"),\n\t\t\tDescription:  pulumi.String(\"example\"),\n\t\t\tPriority:     pulumi.Int(1),\n\t\t\tClientWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ALL_CLIENTS\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.ServerPolicy;\nimport com.pulumi.okta.auth.ServerPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ServerPolicy(\"example\", ServerPolicyArgs.builder()\n            .authServerId(\"\u003cauth server id\u003e\")\n            .status(\"ACTIVE\")\n            .name(\"example\")\n            .description(\"example\")\n            .priority(1)\n            .clientWhitelists(\"ALL_CLIENTS\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:auth:ServerPolicy\n    properties:\n      authServerId: \u003cauth server id\u003e\n      status: ACTIVE\n      name: example\n      description: example\n      priority: 1\n      clientWhitelists:\n        - ALL_CLIENTS\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:auth/serverPolicy:ServerPolicy example \u003cauth_server_id\u003e/\u003cpolicy_id\u003e\n```\n\n",
            "properties": {
                "authServerId": {
                    "type": "string",
                    "description": "The ID of the Auth Server.\n"
                },
                "clientWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The clients to whitelist the policy for. `[ALL_CLIENTS]` is a special value that can be used to whitelist all clients, otherwise it is a list of client ids.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Auth Server Policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Auth Server Policy.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the auth server policy\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                }
            },
            "required": [
                "authServerId",
                "clientWhitelists",
                "description",
                "name",
                "priority"
            ],
            "inputProperties": {
                "authServerId": {
                    "type": "string",
                    "description": "The ID of the Auth Server.\n"
                },
                "clientWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The clients to whitelist the policy for. `[ALL_CLIENTS]` is a special value that can be used to whitelist all clients, otherwise it is a list of client ids.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Auth Server Policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Auth Server Policy.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the auth server policy\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                }
            },
            "requiredInputs": [
                "authServerId",
                "clientWhitelists",
                "description",
                "priority"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerPolicy resources.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "The ID of the Auth Server.\n"
                    },
                    "clientWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The clients to whitelist the policy for. `[ALL_CLIENTS]` is a special value that can be used to whitelist all clients, otherwise it is a list of client ids.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the Auth Server Policy.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Auth Server Policy.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of the auth server policy\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default to `ACTIVE`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:auth/serverPolicyRule:ServerPolicyRule": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.ServerPolicyRule(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    policyId: \"\u003cauth server policy id\u003e\",\n    status: \"ACTIVE\",\n    name: \"example\",\n    priority: 1,\n    groupWhitelists: [\"\u003cgroup ids\u003e\"],\n    grantTypeWhitelists: [\"implicit\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.ServerPolicyRule(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    policy_id=\"\u003cauth server policy id\u003e\",\n    status=\"ACTIVE\",\n    name=\"example\",\n    priority=1,\n    group_whitelists=[\"\u003cgroup ids\u003e\"],\n    grant_type_whitelists=[\"implicit\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Auth.ServerPolicyRule(\"example\", new()\n    {\n        AuthServerId = \"\u003cauth server id\u003e\",\n        PolicyId = \"\u003cauth server policy id\u003e\",\n        Status = \"ACTIVE\",\n        Name = \"example\",\n        Priority = 1,\n        GroupWhitelists = new[]\n        {\n            \"\u003cgroup ids\u003e\",\n        },\n        GrantTypeWhitelists = new[]\n        {\n            \"implicit\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServerPolicyRule(ctx, \"example\", \u0026auth.ServerPolicyRuleArgs{\n\t\t\tAuthServerId: pulumi.String(\"\u003cauth server id\u003e\"),\n\t\t\tPolicyId:     pulumi.String(\"\u003cauth server policy id\u003e\"),\n\t\t\tStatus:       pulumi.String(\"ACTIVE\"),\n\t\t\tName:         pulumi.String(\"example\"),\n\t\t\tPriority:     pulumi.Int(1),\n\t\t\tGroupWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"\u003cgroup ids\u003e\"),\n\t\t\t},\n\t\t\tGrantTypeWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"implicit\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.ServerPolicyRule;\nimport com.pulumi.okta.auth.ServerPolicyRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ServerPolicyRule(\"example\", ServerPolicyRuleArgs.builder()\n            .authServerId(\"\u003cauth server id\u003e\")\n            .policyId(\"\u003cauth server policy id\u003e\")\n            .status(\"ACTIVE\")\n            .name(\"example\")\n            .priority(1)\n            .groupWhitelists(\"\u003cgroup ids\u003e\")\n            .grantTypeWhitelists(\"implicit\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:auth:ServerPolicyRule\n    properties:\n      authServerId: \u003cauth server id\u003e\n      policyId: \u003cauth server policy id\u003e\n      status: ACTIVE\n      name: example\n      priority: 1\n      groupWhitelists:\n        - \u003cgroup ids\u003e\n      grantTypeWhitelists:\n        - implicit\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:auth/serverPolicyRule:ServerPolicyRule example \u003cauth_server_id\u003e/\u003cpolicy_id\u003e/\u003cpolicy_rule_id\u003e\n```\n\n",
            "properties": {
                "accessTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of access token. Can be set to a value between 5 and 1440 minutes. Default is `60`.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "Auth server ID\n"
                },
                "grantTypeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Accepted grant type values, `authorization_code`, `implicit`, `password`, `client_credentials`, `urn:ietf:params:oauth:grant-type:saml2-bearer` (*Early Access Property*), `urn:ietf:params:oauth:grant-type:token-exchange` (*Early Access Property*),`urn:ietf:params:oauth:grant-type:device_code` (*Early Access Property*), `interaction_code` (*OIE only*). For `implicit` value either `user_whitelist` or `group_whitelist` should be set.\n"
                },
                "groupBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be excluded.\n"
                },
                "groupWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: `EVERYONE`.\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "The ID of the inline token to trigger.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auth server policy rule name\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Auth server policy ID\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the auth server policy rule\n"
                },
                "refreshTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of refresh token.\n"
                },
                "refreshTokenWindowMinutes": {
                    "type": "integer",
                    "description": "Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes. Default is `10080` (7 days).`refresh_token_window_minutes` must be between `access_token_lifetime_minutes` and `refresh_token_lifetime_minutes`.\n"
                },
                "scopeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `*`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                },
                "system": {
                    "type": "boolean",
                    "description": "The rule is the system (default) rule for its associated policy\n"
                },
                "type": {
                    "type": "string",
                    "description": "Auth server policy rule type, unlikely this will be anything other then the default\n"
                },
                "userBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be excluded.\n"
                },
                "userWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be included.\n"
                }
            },
            "required": [
                "authServerId",
                "grantTypeWhitelists",
                "name",
                "policyId",
                "priority",
                "system"
            ],
            "inputProperties": {
                "accessTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of access token. Can be set to a value between 5 and 1440 minutes. Default is `60`.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "Auth server ID\n"
                },
                "grantTypeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Accepted grant type values, `authorization_code`, `implicit`, `password`, `client_credentials`, `urn:ietf:params:oauth:grant-type:saml2-bearer` (*Early Access Property*), `urn:ietf:params:oauth:grant-type:token-exchange` (*Early Access Property*),`urn:ietf:params:oauth:grant-type:device_code` (*Early Access Property*), `interaction_code` (*OIE only*). For `implicit` value either `user_whitelist` or `group_whitelist` should be set.\n"
                },
                "groupBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be excluded.\n"
                },
                "groupWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: `EVERYONE`.\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "The ID of the inline token to trigger.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auth server policy rule name\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Auth server policy ID\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the auth server policy rule\n"
                },
                "refreshTokenLifetimeMinutes": {
                    "type": "integer",
                    "description": "Lifetime of refresh token.\n"
                },
                "refreshTokenWindowMinutes": {
                    "type": "integer",
                    "description": "Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes. Default is `10080` (7 days).`refresh_token_window_minutes` must be between `access_token_lifetime_minutes` and `refresh_token_lifetime_minutes`.\n"
                },
                "scopeWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `*`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Auth server policy rule type, unlikely this will be anything other then the default\n"
                },
                "userBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be excluded.\n"
                },
                "userWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a set of Users to be included.\n"
                }
            },
            "requiredInputs": [
                "authServerId",
                "grantTypeWhitelists",
                "policyId",
                "priority"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerPolicyRule resources.\n",
                "properties": {
                    "accessTokenLifetimeMinutes": {
                        "type": "integer",
                        "description": "Lifetime of access token. Can be set to a value between 5 and 1440 minutes. Default is `60`.\n"
                    },
                    "authServerId": {
                        "type": "string",
                        "description": "Auth server ID\n"
                    },
                    "grantTypeWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Accepted grant type values, `authorization_code`, `implicit`, `password`, `client_credentials`, `urn:ietf:params:oauth:grant-type:saml2-bearer` (*Early Access Property*), `urn:ietf:params:oauth:grant-type:token-exchange` (*Early Access Property*),`urn:ietf:params:oauth:grant-type:device_code` (*Early Access Property*), `interaction_code` (*OIE only*). For `implicit` value either `user_whitelist` or `group_whitelist` should be set.\n"
                    },
                    "groupBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Groups whose Users are to be excluded.\n"
                    },
                    "groupWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: `EVERYONE`.\n"
                    },
                    "inlineHookId": {
                        "type": "string",
                        "description": "The ID of the inline token to trigger.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Auth server policy rule name\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Auth server policy ID\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of the auth server policy rule\n"
                    },
                    "refreshTokenLifetimeMinutes": {
                        "type": "integer",
                        "description": "Lifetime of refresh token.\n"
                    },
                    "refreshTokenWindowMinutes": {
                        "type": "integer",
                        "description": "Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes. Default is `10080` (7 days).`refresh_token_window_minutes` must be between `access_token_lifetime_minutes` and `refresh_token_lifetime_minutes`.\n"
                    },
                    "scopeWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `*`\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default to `ACTIVE`\n"
                    },
                    "system": {
                        "type": "boolean",
                        "description": "The rule is the system (default) rule for its associated policy\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Auth server policy rule type, unlikely this will be anything other then the default\n"
                    },
                    "userBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Users to be excluded.\n"
                    },
                    "userWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a set of Users to be included.\n"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "okta:auth/serverPolicyClaim:ServerPolicyClaim"
                }
            ]
        },
        "okta:auth/serverScope:ServerScope": {
            "description": "Creates an Authorization Server Scope. This resource allows you to create and configure an Authorization Server Scope.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.auth.ServerScope(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    metadataPublish: \"NO_CLIENTS\",\n    name: \"example\",\n    consent: \"IMPLICIT\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.ServerScope(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    metadata_publish=\"NO_CLIENTS\",\n    name=\"example\",\n    consent=\"IMPLICIT\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Auth.ServerScope(\"example\", new()\n    {\n        AuthServerId = \"\u003cauth server id\u003e\",\n        MetadataPublish = \"NO_CLIENTS\",\n        Name = \"example\",\n        Consent = \"IMPLICIT\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServerScope(ctx, \"example\", \u0026auth.ServerScopeArgs{\n\t\t\tAuthServerId:    pulumi.String(\"\u003cauth server id\u003e\"),\n\t\t\tMetadataPublish: pulumi.String(\"NO_CLIENTS\"),\n\t\t\tName:            pulumi.String(\"example\"),\n\t\t\tConsent:         pulumi.String(\"IMPLICIT\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.ServerScope;\nimport com.pulumi.okta.auth.ServerScopeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ServerScope(\"example\", ServerScopeArgs.builder()\n            .authServerId(\"\u003cauth server id\u003e\")\n            .metadataPublish(\"NO_CLIENTS\")\n            .name(\"example\")\n            .consent(\"IMPLICIT\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:auth:ServerScope\n    properties:\n      authServerId: \u003cauth server id\u003e\n      metadataPublish: NO_CLIENTS\n      name: example\n      consent: IMPLICIT\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:auth/serverScope:ServerScope example \u003cauth_server_id\u003e/\u003cscope_id\u003e\n```\n\n",
            "properties": {
                "authServerId": {
                    "type": "string",
                    "description": "Auth server ID\n"
                },
                "consent": {
                    "type": "string",
                    "description": "Indicates whether a consent dialog is needed for the scope. It can be set to `REQUIRED` or `IMPLICIT`. Default: `IMPLICIT`\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "A default scope will be returned in an access token when the client omits the scope parameter in a token request, provided this scope is allowed as part of the access policy rule.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Auth Server Scope.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Name of the end user displayed in a consent dialog box\n"
                },
                "metadataPublish": {
                    "type": "string",
                    "description": "Whether to publish metadata or not. It can be set to `ALL_CLIENTS` or `NO_CLIENTS`. Default: `ALL_CLIENTS`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auth server scope name\n"
                },
                "optional": {
                    "type": "boolean",
                    "description": "Whether the scope optional\n"
                },
                "system": {
                    "type": "boolean",
                    "description": "Whether Okta created the Scope\n"
                }
            },
            "required": [
                "authServerId",
                "name",
                "system"
            ],
            "inputProperties": {
                "authServerId": {
                    "type": "string",
                    "description": "Auth server ID\n"
                },
                "consent": {
                    "type": "string",
                    "description": "Indicates whether a consent dialog is needed for the scope. It can be set to `REQUIRED` or `IMPLICIT`. Default: `IMPLICIT`\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "A default scope will be returned in an access token when the client omits the scope parameter in a token request, provided this scope is allowed as part of the access policy rule.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Auth Server Scope.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Name of the end user displayed in a consent dialog box\n"
                },
                "metadataPublish": {
                    "type": "string",
                    "description": "Whether to publish metadata or not. It can be set to `ALL_CLIENTS` or `NO_CLIENTS`. Default: `ALL_CLIENTS`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auth server scope name\n"
                },
                "optional": {
                    "type": "boolean",
                    "description": "Whether the scope optional\n"
                }
            },
            "requiredInputs": [
                "authServerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerScope resources.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "Auth server ID\n"
                    },
                    "consent": {
                        "type": "string",
                        "description": "Indicates whether a consent dialog is needed for the scope. It can be set to `REQUIRED` or `IMPLICIT`. Default: `IMPLICIT`\n"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "A default scope will be returned in an access token when the client omits the scope parameter in a token request, provided this scope is allowed as part of the access policy rule.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Auth Server Scope.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Name of the end user displayed in a consent dialog box\n"
                    },
                    "metadataPublish": {
                        "type": "string",
                        "description": "Whether to publish metadata or not. It can be set to `ALL_CLIENTS` or `NO_CLIENTS`. Default: `ALL_CLIENTS`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Auth server scope name\n"
                    },
                    "optional": {
                        "type": "boolean",
                        "description": "Whether the scope optional\n"
                    },
                    "system": {
                        "type": "boolean",
                        "description": "Whether Okta created the Scope\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:factor/factor:Factor": {
            "description": "Allows you to manage the activation of Okta MFA methods. This resource allows you to manage Okta MFA methods.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.factor.Factor(\"example\", {providerId: \"google_otp\"});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.factor.Factor(\"example\", provider_id=\"google_otp\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Factor.Factor(\"example\", new()\n    {\n        ProviderId = \"google_otp\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/factor\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := factor.NewFactor(ctx, \"example\", \u0026factor.FactorArgs{\n\t\t\tProviderId: pulumi.String(\"google_otp\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.factor.Factor;\nimport com.pulumi.okta.factor.FactorArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Factor(\"example\", FactorArgs.builder()\n            .providerId(\"google_otp\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:factor:Factor\n    properties:\n      providerId: google_otp\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether to activate the provider, by default, it is set to `true`.\n"
                },
                "providerId": {
                    "type": "string",
                    "description": "The MFA provider name. Allowed values are `duo`, `fido_u2f`, `fido_webauthn`, `google_otp`, `okta_call`, `okta_otp`, `okta_password`, `okta_push`, `okta_question`, `okta_sms`, `okta_email`, `rsa_token`, `symantec_vip`, `yubikey_token`, or `hotp`.\n"
                }
            },
            "required": [
                "providerId"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether to activate the provider, by default, it is set to `true`.\n"
                },
                "providerId": {
                    "type": "string",
                    "description": "The MFA provider name. Allowed values are `duo`, `fido_u2f`, `fido_webauthn`, `google_otp`, `okta_call`, `okta_otp`, `okta_password`, `okta_push`, `okta_question`, `okta_sms`, `okta_email`, `rsa_token`, `symantec_vip`, `yubikey_token`, or `hotp`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "providerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Factor resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Whether to activate the provider, by default, it is set to `true`.\n"
                    },
                    "providerId": {
                        "type": "string",
                        "description": "The MFA provider name. Allowed values are `duo`, `fido_u2f`, `fido_webauthn`, `google_otp`, `okta_call`, `okta_otp`, `okta_password`, `okta_push`, `okta_question`, `okta_sms`, `okta_email`, `rsa_token`, `symantec_vip`, `yubikey_token`, or `hotp`.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:group/group:Group": {
            "description": "Creates an Okta Group. This resource allows you to create and configure an Okta Group.\n\n## Import\n\n```sh\n$ pulumi import okta:group/group:Group example \u003cgroup_id\u003e\n```\n\n",
            "properties": {
                "customProfileAttributes": {
                    "type": "string",
                    "description": "JSON formatted custom attributes for a group. It must be JSON due to various types Okta allows.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Okta Group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Okta Group.\n"
                },
                "skipUsers": {
                    "type": "boolean",
                    "description": "Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources\n",
                    "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "customProfileAttributes": {
                    "type": "string",
                    "description": "JSON formatted custom attributes for a group. It must be JSON due to various types Okta allows.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Okta Group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Okta Group.\n"
                },
                "skipUsers": {
                    "type": "boolean",
                    "description": "Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources\n",
                    "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "customProfileAttributes": {
                        "type": "string",
                        "description": "JSON formatted custom attributes for a group. It must be JSON due to various types Okta allows.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the Okta Group.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Okta Group.\n"
                    },
                    "skipUsers": {
                        "type": "boolean",
                        "description": "Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources\n",
                        "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed"
                    }
                },
                "type": "object"
            }
        },
        "okta:group/owner:Owner": {
            "description": "Manages group owner resource.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.user.User(\"test\", {\n    firstName: \"TestAcc\",\n    lastName: \"Smith\",\n    login: \"testAcc-replace_with_uuid@example.com\",\n    email: \"testAcc-replace_with_uuid@example.com\",\n});\nconst testGroup = new okta.group.Group(\"test\", {name: \"testAcc_replace_with_uuid\"});\nconst testOwner = new okta.group.Owner(\"test\", {\n    groupId: testGroup.id,\n    idOfGroupOwner: test.id,\n    type: \"USER\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.user.User(\"test\",\n    first_name=\"TestAcc\",\n    last_name=\"Smith\",\n    login=\"testAcc-replace_with_uuid@example.com\",\n    email=\"testAcc-replace_with_uuid@example.com\")\ntest_group = okta.group.Group(\"test\", name=\"testAcc_replace_with_uuid\")\ntest_owner = okta.group.Owner(\"test\",\n    group_id=test_group.id,\n    id_of_group_owner=test.id,\n    type=\"USER\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Okta.User.User(\"test\", new()\n    {\n        FirstName = \"TestAcc\",\n        LastName = \"Smith\",\n        Login = \"testAcc-replace_with_uuid@example.com\",\n        Email = \"testAcc-replace_with_uuid@example.com\",\n    });\n\n    var testGroup = new Okta.Group.Group(\"test\", new()\n    {\n        Name = \"testAcc_replace_with_uuid\",\n    });\n\n    var testOwner = new Okta.Group.Owner(\"test\", new()\n    {\n        GroupId = testGroup.Id,\n        IdOfGroupOwner = test.Id,\n        Type = \"USER\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/group\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := user.NewUser(ctx, \"test\", \u0026user.UserArgs{\n\t\t\tFirstName: pulumi.String(\"TestAcc\"),\n\t\t\tLastName:  pulumi.String(\"Smith\"),\n\t\t\tLogin:     pulumi.String(\"testAcc-replace_with_uuid@example.com\"),\n\t\t\tEmail:     pulumi.String(\"testAcc-replace_with_uuid@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttestGroup, err := group.NewGroup(ctx, \"test\", \u0026group.GroupArgs{\n\t\t\tName: pulumi.String(\"testAcc_replace_with_uuid\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = group.NewOwner(ctx, \"test\", \u0026group.OwnerArgs{\n\t\t\tGroupId:        testGroup.ID(),\n\t\t\tIdOfGroupOwner: test.ID(),\n\t\t\tType:           pulumi.String(\"USER\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.User;\nimport com.pulumi.okta.user.UserArgs;\nimport com.pulumi.okta.group.Group;\nimport com.pulumi.okta.group.GroupArgs;\nimport com.pulumi.okta.group.Owner;\nimport com.pulumi.okta.group.OwnerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new User(\"test\", UserArgs.builder()\n            .firstName(\"TestAcc\")\n            .lastName(\"Smith\")\n            .login(\"testAcc-replace_with_uuid@example.com\")\n            .email(\"testAcc-replace_with_uuid@example.com\")\n            .build());\n\n        var testGroup = new Group(\"testGroup\", GroupArgs.builder()\n            .name(\"testAcc_replace_with_uuid\")\n            .build());\n\n        var testOwner = new Owner(\"testOwner\", OwnerArgs.builder()\n            .groupId(testGroup.id())\n            .idOfGroupOwner(test.id())\n            .type(\"USER\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: okta:user:User\n    properties:\n      firstName: TestAcc\n      lastName: Smith\n      login: testAcc-replace_with_uuid@example.com\n      email: testAcc-replace_with_uuid@example.com\n  testGroup:\n    type: okta:group:Group\n    name: test\n    properties:\n      name: testAcc_replace_with_uuid\n  testOwner:\n    type: okta:group:Owner\n    name: test\n    properties:\n      groupId: ${testGroup.id}\n      idOfGroupOwner: ${test.id}\n      type: USER\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The display name of the group owner\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The id of the group\n"
                },
                "idOfGroupOwner": {
                    "type": "string",
                    "description": "The user id of the group owner\n"
                },
                "originId": {
                    "type": "string",
                    "description": "The ID of the app instance if the originType is APPLICATION. This value is NULL if originType is OKTA_DIRECTORY.\n"
                },
                "originType": {
                    "type": "string",
                    "description": "The source where group ownership is managed. Enum: \"APPLICATION\" \"OKTA_DIRECTORY\"\n"
                },
                "resolved": {
                    "type": "boolean",
                    "description": "If originType is APPLICATION, this parameter is set to FALSE until the owner's originId is reconciled with an associated Okta ID.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The entity type of the owner. Enum: \"GROUP\" \"USER\"\n"
                }
            },
            "required": [
                "displayName",
                "groupId",
                "idOfGroupOwner",
                "originId",
                "originType",
                "resolved",
                "type"
            ],
            "inputProperties": {
                "groupId": {
                    "type": "string",
                    "description": "The id of the group\n"
                },
                "idOfGroupOwner": {
                    "type": "string",
                    "description": "The user id of the group owner\n"
                },
                "type": {
                    "type": "string",
                    "description": "The entity type of the owner. Enum: \"GROUP\" \"USER\"\n"
                }
            },
            "requiredInputs": [
                "groupId",
                "idOfGroupOwner",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Owner resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "The display name of the group owner\n"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The id of the group\n"
                    },
                    "idOfGroupOwner": {
                        "type": "string",
                        "description": "The user id of the group owner\n"
                    },
                    "originId": {
                        "type": "string",
                        "description": "The ID of the app instance if the originType is APPLICATION. This value is NULL if originType is OKTA_DIRECTORY.\n"
                    },
                    "originType": {
                        "type": "string",
                        "description": "The source where group ownership is managed. Enum: \"APPLICATION\" \"OKTA_DIRECTORY\"\n"
                    },
                    "resolved": {
                        "type": "boolean",
                        "description": "If originType is APPLICATION, this parameter is set to FALSE until the owner's originId is reconciled with an associated Okta ID.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The entity type of the owner. Enum: \"GROUP\" \"USER\"\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:group/role:Role": {
            "description": "Assigns Admin roles to Okta Groups. This resource allows you to assign Okta administrator roles to Okta Groups. This resource provides a one-to-one interface between the Okta group and the admin role.\n\n## Import\n\n```sh\n$ pulumi import okta:group/role:Role example \u003cgroup_id\u003e/\u003crole_id\u003e\n```\n\n",
            "properties": {
                "disableNotifications": {
                    "type": "boolean",
                    "description": "When this setting is enabled, the admins won't receive any of the default Okta administrator emails. These admins also\nwon't have access to contact Okta Support and open support cases on behalf of your org.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "ID of group to attach admin roles to\n"
                },
                "resourceSetId": {
                    "type": "string",
                    "description": "Resource Set ID. Required for role_type = `CUSTOM`\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "Role ID. Required for role_type = `CUSTOM`\n"
                },
                "roleType": {
                    "type": "string",
                    "description": "Admin role assigned to the group. It can be any one of the following values: \"API_ADMIN\", \"APP_ADMIN\", \"CUSTOM\",\n\"GROUP_MEMBERSHIP_ADMIN\", \"HELP_DESK_ADMIN\", \"MOBILE_ADMIN\", \"ORG_ADMIN\", \"READ_ONLY_ADMIN\", \"REPORT_ADMIN\",\n\"SUPER_ADMIN\", \"USER_ADMIN\" . See [API\nDocs](https://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles). - \"USER_ADMIN\" is the\nGroup Administrator.\n"
                },
                "targetAppLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of app names (name represents set of app instances, like 'salesforce' or 'facebook'), or a combination of app\nname and app instance ID (like 'facebook.0oapsqQ6dv19pqyEo0g3') you would like as the targets of the admin role. - Only\nsupported when used with the role type `APP_ADMIN`.\n"
                },
                "targetGroupLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of group IDs you would like as the targets of the admin role. - Only supported when used with the role types:\n`GROUP_MEMBERSHIP_ADMIN`, `HELP_DESK_ADMIN`, or `USER_ADMIN`.\n"
                }
            },
            "required": [
                "groupId",
                "roleType"
            ],
            "inputProperties": {
                "disableNotifications": {
                    "type": "boolean",
                    "description": "When this setting is enabled, the admins won't receive any of the default Okta administrator emails. These admins also\nwon't have access to contact Okta Support and open support cases on behalf of your org.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "ID of group to attach admin roles to\n",
                    "willReplaceOnChanges": true
                },
                "resourceSetId": {
                    "type": "string",
                    "description": "Resource Set ID. Required for role_type = `CUSTOM`\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "Role ID. Required for role_type = `CUSTOM`\n"
                },
                "roleType": {
                    "type": "string",
                    "description": "Admin role assigned to the group. It can be any one of the following values: \"API_ADMIN\", \"APP_ADMIN\", \"CUSTOM\",\n\"GROUP_MEMBERSHIP_ADMIN\", \"HELP_DESK_ADMIN\", \"MOBILE_ADMIN\", \"ORG_ADMIN\", \"READ_ONLY_ADMIN\", \"REPORT_ADMIN\",\n\"SUPER_ADMIN\", \"USER_ADMIN\" . See [API\nDocs](https://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles). - \"USER_ADMIN\" is the\nGroup Administrator.\n",
                    "willReplaceOnChanges": true
                },
                "targetAppLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of app names (name represents set of app instances, like 'salesforce' or 'facebook'), or a combination of app\nname and app instance ID (like 'facebook.0oapsqQ6dv19pqyEo0g3') you would like as the targets of the admin role. - Only\nsupported when used with the role type `APP_ADMIN`.\n"
                },
                "targetGroupLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of group IDs you would like as the targets of the admin role. - Only supported when used with the role types:\n`GROUP_MEMBERSHIP_ADMIN`, `HELP_DESK_ADMIN`, or `USER_ADMIN`.\n"
                }
            },
            "requiredInputs": [
                "groupId",
                "roleType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Role resources.\n",
                "properties": {
                    "disableNotifications": {
                        "type": "boolean",
                        "description": "When this setting is enabled, the admins won't receive any of the default Okta administrator emails. These admins also\nwon't have access to contact Okta Support and open support cases on behalf of your org.\n"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "ID of group to attach admin roles to\n",
                        "willReplaceOnChanges": true
                    },
                    "resourceSetId": {
                        "type": "string",
                        "description": "Resource Set ID. Required for role_type = `CUSTOM`\n"
                    },
                    "roleId": {
                        "type": "string",
                        "description": "Role ID. Required for role_type = `CUSTOM`\n"
                    },
                    "roleType": {
                        "type": "string",
                        "description": "Admin role assigned to the group. It can be any one of the following values: \"API_ADMIN\", \"APP_ADMIN\", \"CUSTOM\",\n\"GROUP_MEMBERSHIP_ADMIN\", \"HELP_DESK_ADMIN\", \"MOBILE_ADMIN\", \"ORG_ADMIN\", \"READ_ONLY_ADMIN\", \"REPORT_ADMIN\",\n\"SUPER_ADMIN\", \"USER_ADMIN\" . See [API\nDocs](https://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles). - \"USER_ADMIN\" is the\nGroup Administrator.\n",
                        "willReplaceOnChanges": true
                    },
                    "targetAppLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of app names (name represents set of app instances, like 'salesforce' or 'facebook'), or a combination of app\nname and app instance ID (like 'facebook.0oapsqQ6dv19pqyEo0g3') you would like as the targets of the admin role. - Only\nsupported when used with the role type `APP_ADMIN`.\n"
                    },
                    "targetGroupLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of group IDs you would like as the targets of the admin role. - Only supported when used with the role types:\n`GROUP_MEMBERSHIP_ADMIN`, `HELP_DESK_ADMIN`, or `USER_ADMIN`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:group/rule:Rule": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.group.Rule(\"example\", {\n    name: \"example\",\n    status: \"ACTIVE\",\n    groupAssignments: [\"\u003cgroup id\u003e\"],\n    expressionType: \"urn:okta:expression:1.0\",\n    expressionValue: \"String.startsWith(user.firstName,\\\"andy\\\")\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.group.Rule(\"example\",\n    name=\"example\",\n    status=\"ACTIVE\",\n    group_assignments=[\"\u003cgroup id\u003e\"],\n    expression_type=\"urn:okta:expression:1.0\",\n    expression_value=\"String.startsWith(user.firstName,\\\"andy\\\")\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Group.Rule(\"example\", new()\n    {\n        Name = \"example\",\n        Status = \"ACTIVE\",\n        GroupAssignments = new[]\n        {\n            \"\u003cgroup id\u003e\",\n        },\n        ExpressionType = \"urn:okta:expression:1.0\",\n        ExpressionValue = \"String.startsWith(user.firstName,\\\"andy\\\")\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := group.NewRule(ctx, \"example\", \u0026group.RuleArgs{\n\t\t\tName:   pulumi.String(\"example\"),\n\t\t\tStatus: pulumi.String(\"ACTIVE\"),\n\t\t\tGroupAssignments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"\u003cgroup id\u003e\"),\n\t\t\t},\n\t\t\tExpressionType:  pulumi.String(\"urn:okta:expression:1.0\"),\n\t\t\tExpressionValue: pulumi.String(\"String.startsWith(user.firstName,\\\"andy\\\")\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.group.Rule;\nimport com.pulumi.okta.group.RuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Rule(\"example\", RuleArgs.builder()\n            .name(\"example\")\n            .status(\"ACTIVE\")\n            .groupAssignments(\"\u003cgroup id\u003e\")\n            .expressionType(\"urn:okta:expression:1.0\")\n            .expressionValue(\"String.startsWith(user.firstName,\\\"andy\\\")\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:group:Rule\n    properties:\n      name: example\n      status: ACTIVE\n      groupAssignments:\n        - \u003cgroup id\u003e\n      expressionType: urn:okta:expression:1.0\n      expressionValue: String.startsWith(user.firstName,\"andy\")\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:group/rule:Rule example \u003cgroup_rule_id\u003e\n```\n\n",
            "properties": {
                "expressionType": {
                    "type": "string",
                    "description": "The expression type to use to invoke the rule. The default is `urn:okta:expression:1.0`.\n"
                },
                "expressionValue": {
                    "type": "string",
                    "description": "The expression value.\n"
                },
                "groupAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of group ids to assign the users to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Group Rule (min character 1; max characters 50).\n"
                },
                "removeAssignedUsers": {
                    "type": "boolean",
                    "description": "Remove users added by this rule from the assigned group after deleting this resource. Default is `false`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of user IDs that would be excluded when rules are processed\n"
                }
            },
            "required": [
                "expressionValue",
                "groupAssignments",
                "name"
            ],
            "inputProperties": {
                "expressionType": {
                    "type": "string",
                    "description": "The expression type to use to invoke the rule. The default is `urn:okta:expression:1.0`.\n"
                },
                "expressionValue": {
                    "type": "string",
                    "description": "The expression value.\n"
                },
                "groupAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of group ids to assign the users to.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Group Rule (min character 1; max characters 50).\n"
                },
                "removeAssignedUsers": {
                    "type": "boolean",
                    "description": "Remove users added by this rule from the assigned group after deleting this resource. Default is `false`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of user IDs that would be excluded when rules are processed\n"
                }
            },
            "requiredInputs": [
                "expressionValue",
                "groupAssignments"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Rule resources.\n",
                "properties": {
                    "expressionType": {
                        "type": "string",
                        "description": "The expression type to use to invoke the rule. The default is `urn:okta:expression:1.0`.\n"
                    },
                    "expressionValue": {
                        "type": "string",
                        "description": "The expression value.\n"
                    },
                    "groupAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of group ids to assign the users to.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Group Rule (min character 1; max characters 50).\n"
                    },
                    "removeAssignedUsers": {
                        "type": "boolean",
                        "description": "Remove users added by this rule from the assigned group after deleting this resource. Default is `false`\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default to `ACTIVE`\n"
                    },
                    "usersExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of user IDs that would be excluded when rules are processed\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:idp/oidc:Oidc": {
            "description": "Creates an OIDC Identity Provider. This resource allows you to create and configure an OIDC Identity Provider.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.idp.Oidc(\"example\", {\n    name: \"example\",\n    authorizationUrl: \"https://idp.example.com/authorize\",\n    authorizationBinding: \"HTTP-REDIRECT\",\n    tokenUrl: \"https://idp.example.com/token\",\n    tokenBinding: \"HTTP-POST\",\n    userInfoUrl: \"https://idp.example.com/userinfo\",\n    userInfoBinding: \"HTTP-REDIRECT\",\n    jwksUrl: \"https://idp.example.com/keys\",\n    jwksBinding: \"HTTP-REDIRECT\",\n    scopes: [\"openid\"],\n    clientId: \"efg456\",\n    clientSecret: \"efg456\",\n    issuerUrl: \"https://id.example.com\",\n    usernameTemplate: \"idpuser.email\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.Oidc(\"example\",\n    name=\"example\",\n    authorization_url=\"https://idp.example.com/authorize\",\n    authorization_binding=\"HTTP-REDIRECT\",\n    token_url=\"https://idp.example.com/token\",\n    token_binding=\"HTTP-POST\",\n    user_info_url=\"https://idp.example.com/userinfo\",\n    user_info_binding=\"HTTP-REDIRECT\",\n    jwks_url=\"https://idp.example.com/keys\",\n    jwks_binding=\"HTTP-REDIRECT\",\n    scopes=[\"openid\"],\n    client_id=\"efg456\",\n    client_secret=\"efg456\",\n    issuer_url=\"https://id.example.com\",\n    username_template=\"idpuser.email\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Idp.Oidc(\"example\", new()\n    {\n        Name = \"example\",\n        AuthorizationUrl = \"https://idp.example.com/authorize\",\n        AuthorizationBinding = \"HTTP-REDIRECT\",\n        TokenUrl = \"https://idp.example.com/token\",\n        TokenBinding = \"HTTP-POST\",\n        UserInfoUrl = \"https://idp.example.com/userinfo\",\n        UserInfoBinding = \"HTTP-REDIRECT\",\n        JwksUrl = \"https://idp.example.com/keys\",\n        JwksBinding = \"HTTP-REDIRECT\",\n        Scopes = new[]\n        {\n            \"openid\",\n        },\n        ClientId = \"efg456\",\n        ClientSecret = \"efg456\",\n        IssuerUrl = \"https://id.example.com\",\n        UsernameTemplate = \"idpuser.email\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.NewOidc(ctx, \"example\", \u0026idp.OidcArgs{\n\t\t\tName:                 pulumi.String(\"example\"),\n\t\t\tAuthorizationUrl:     pulumi.String(\"https://idp.example.com/authorize\"),\n\t\t\tAuthorizationBinding: pulumi.String(\"HTTP-REDIRECT\"),\n\t\t\tTokenUrl:             pulumi.String(\"https://idp.example.com/token\"),\n\t\t\tTokenBinding:         pulumi.String(\"HTTP-POST\"),\n\t\t\tUserInfoUrl:          pulumi.String(\"https://idp.example.com/userinfo\"),\n\t\t\tUserInfoBinding:      pulumi.String(\"HTTP-REDIRECT\"),\n\t\t\tJwksUrl:              pulumi.String(\"https://idp.example.com/keys\"),\n\t\t\tJwksBinding:          pulumi.String(\"HTTP-REDIRECT\"),\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"openid\"),\n\t\t\t},\n\t\t\tClientId:         pulumi.String(\"efg456\"),\n\t\t\tClientSecret:     pulumi.String(\"efg456\"),\n\t\t\tIssuerUrl:        pulumi.String(\"https://id.example.com\"),\n\t\t\tUsernameTemplate: pulumi.String(\"idpuser.email\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.idp.Oidc;\nimport com.pulumi.okta.idp.OidcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Oidc(\"example\", OidcArgs.builder()\n            .name(\"example\")\n            .authorizationUrl(\"https://idp.example.com/authorize\")\n            .authorizationBinding(\"HTTP-REDIRECT\")\n            .tokenUrl(\"https://idp.example.com/token\")\n            .tokenBinding(\"HTTP-POST\")\n            .userInfoUrl(\"https://idp.example.com/userinfo\")\n            .userInfoBinding(\"HTTP-REDIRECT\")\n            .jwksUrl(\"https://idp.example.com/keys\")\n            .jwksBinding(\"HTTP-REDIRECT\")\n            .scopes(\"openid\")\n            .clientId(\"efg456\")\n            .clientSecret(\"efg456\")\n            .issuerUrl(\"https://id.example.com\")\n            .usernameTemplate(\"idpuser.email\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:idp:Oidc\n    properties:\n      name: example\n      authorizationUrl: https://idp.example.com/authorize\n      authorizationBinding: HTTP-REDIRECT\n      tokenUrl: https://idp.example.com/token\n      tokenBinding: HTTP-POST\n      userInfoUrl: https://idp.example.com/userinfo\n      userInfoBinding: HTTP-REDIRECT\n      jwksUrl: https://idp.example.com/keys\n      jwksBinding: HTTP-REDIRECT\n      scopes:\n        - openid\n      clientId: efg456\n      clientSecret: efg456\n      issuerUrl: https://id.example.com\n      usernameTemplate: idpuser.email\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:idp/oidc:Oidc example \u003cidp_id\u003e\n```\n\n",
            "properties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user. Default: `AUTO`\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "authorizationBinding": {
                    "type": "string",
                    "description": "The method of making an authorization request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`.\n"
                },
                "authorizationUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret issued by AS for the Okta IdP instance.\n",
                    "secret": true
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                },
                "filter": {
                    "type": "string",
                    "description": "Optional regular expression pattern used to filter untrusted IdP usernames.\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `NONE`, `SYNC`, `APPEND`, or `ASSIGN`. Default: `NONE`\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `ASSIGN` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `APPEND` or `SYNC` `groups_action`.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, a custom domain URL, or dynamic. It can be `ORG_URL`, `CUSTOM_URL`, or `DYNAMIC`. Default: `ORG_URL`\n"
                },
                "issuerUrl": {
                    "type": "string",
                    "description": "URI that identifies the issuer.\n"
                },
                "jwksBinding": {
                    "type": "string",
                    "description": "The method of making a request for the OIDC JWKS. It can be set to `HTTP-POST` or `HTTP-REDIRECT`\n"
                },
                "jwksUrl": {
                    "type": "string",
                    "description": "Endpoint where the keys signer publishes its keys in a JWK Set.\n"
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the IdP\n"
                },
                "pkceRequired": {
                    "type": "boolean",
                    "description": "Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. See: https://developer.okta.com/docs/reference/api/idps/#oauth-2-0-and-openid-connect-client-object\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "protocolType": {
                    "type": "string",
                    "description": "The type of protocol to use. It can be `OIDC` or `OAUTH2`. Default: `OIDC`\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication. Default: `AUTO`\n"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "The HMAC Signature Algorithm used when signing an authorization request. Defaults to `HS256`. It can be `HS256`, `HS384`, `HS512`, `SHA-256`. `RS256`, `RS384`, or `RS512`. NOTE: `SHA-256` an undocumented legacy value and not continue to be valid. See API docs https://developer.okta.com/docs/reference/api/idps/#oidc-request-signature-algorithm-object\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. Defaults to `REQUEST`. It can be `REQUEST` or `NONE`.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The scopes of the IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `CUSTOM_ATTRIBUTE`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `USERNAME`. It can be set to `USERNAME`, `EMAIL`, `USERNAME_OR_EMAIL` or `CUSTOM_ATTRIBUTE`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                },
                "tokenBinding": {
                    "type": "string",
                    "description": "The method of making a token request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`.\n"
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of OIDC IdP.\n"
                },
                "userInfoBinding": {
                    "type": "string"
                },
                "userInfoUrl": {
                    "type": "string",
                    "description": "Protected resource endpoint that returns claims about the authenticated user.\n"
                },
                "userTypeId": {
                    "type": "string",
                    "description": "User type ID. Can be used as `target_id` in the `okta.profile.Mapping` resource.\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user. Default: `idpuser.email`\n"
                }
            },
            "required": [
                "authorizationBinding",
                "authorizationUrl",
                "clientId",
                "clientSecret",
                "issuerUrl",
                "jwksBinding",
                "jwksUrl",
                "name",
                "scopes",
                "tokenBinding",
                "tokenUrl",
                "type",
                "userTypeId"
            ],
            "inputProperties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user. Default: `AUTO`\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "authorizationBinding": {
                    "type": "string",
                    "description": "The method of making an authorization request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`.\n"
                },
                "authorizationUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret issued by AS for the Okta IdP instance.\n",
                    "secret": true
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                },
                "filter": {
                    "type": "string",
                    "description": "Optional regular expression pattern used to filter untrusted IdP usernames.\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `NONE`, `SYNC`, `APPEND`, or `ASSIGN`. Default: `NONE`\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `ASSIGN` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `APPEND` or `SYNC` `groups_action`.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, a custom domain URL, or dynamic. It can be `ORG_URL`, `CUSTOM_URL`, or `DYNAMIC`. Default: `ORG_URL`\n"
                },
                "issuerUrl": {
                    "type": "string",
                    "description": "URI that identifies the issuer.\n"
                },
                "jwksBinding": {
                    "type": "string",
                    "description": "The method of making a request for the OIDC JWKS. It can be set to `HTTP-POST` or `HTTP-REDIRECT`\n"
                },
                "jwksUrl": {
                    "type": "string",
                    "description": "Endpoint where the keys signer publishes its keys in a JWK Set.\n"
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the IdP\n"
                },
                "pkceRequired": {
                    "type": "boolean",
                    "description": "Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. See: https://developer.okta.com/docs/reference/api/idps/#oauth-2-0-and-openid-connect-client-object\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "protocolType": {
                    "type": "string",
                    "description": "The type of protocol to use. It can be `OIDC` or `OAUTH2`. Default: `OIDC`\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication. Default: `AUTO`\n"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "The HMAC Signature Algorithm used when signing an authorization request. Defaults to `HS256`. It can be `HS256`, `HS384`, `HS512`, `SHA-256`. `RS256`, `RS384`, or `RS512`. NOTE: `SHA-256` an undocumented legacy value and not continue to be valid. See API docs https://developer.okta.com/docs/reference/api/idps/#oidc-request-signature-algorithm-object\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. Defaults to `REQUEST`. It can be `REQUEST` or `NONE`.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The scopes of the IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `CUSTOM_ATTRIBUTE`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `USERNAME`. It can be set to `USERNAME`, `EMAIL`, `USERNAME_OR_EMAIL` or `CUSTOM_ATTRIBUTE`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                },
                "tokenBinding": {
                    "type": "string",
                    "description": "The method of making a token request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`.\n"
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                },
                "userInfoBinding": {
                    "type": "string"
                },
                "userInfoUrl": {
                    "type": "string",
                    "description": "Protected resource endpoint that returns claims about the authenticated user.\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user. Default: `idpuser.email`\n"
                }
            },
            "requiredInputs": [
                "authorizationBinding",
                "authorizationUrl",
                "clientId",
                "clientSecret",
                "issuerUrl",
                "jwksBinding",
                "jwksUrl",
                "scopes",
                "tokenBinding",
                "tokenUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Oidc resources.\n",
                "properties": {
                    "accountLinkAction": {
                        "type": "string",
                        "description": "Specifies the account linking action for an IdP user. Default: `AUTO`\n"
                    },
                    "accountLinkGroupIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group memberships to determine link candidates.\n"
                    },
                    "authorizationBinding": {
                        "type": "string",
                        "description": "The method of making an authorization request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`.\n"
                    },
                    "authorizationUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "Client secret issued by AS for the Okta IdP instance.\n",
                        "secret": true
                    },
                    "deprovisionedAction": {
                        "type": "string",
                        "description": "Action for a previously deprovisioned IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                    },
                    "filter": {
                        "type": "string",
                        "description": "Optional regular expression pattern used to filter untrusted IdP usernames.\n"
                    },
                    "groupsAction": {
                        "type": "string",
                        "description": "Provisioning action for IdP user's group memberships. It can be `NONE`, `SYNC`, `APPEND`, or `ASSIGN`. Default: `NONE`\n"
                    },
                    "groupsAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Okta Group IDs to add an IdP user as a member with the `ASSIGN` `groups_action`.\n"
                    },
                    "groupsAttribute": {
                        "type": "string",
                        "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                    },
                    "groupsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Whitelist of Okta Group identifiers that are allowed for the `APPEND` or `SYNC` `groups_action`.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether Okta uses the original Okta org domain URL, a custom domain URL, or dynamic. It can be `ORG_URL`, `CUSTOM_URL`, or `DYNAMIC`. Default: `ORG_URL`\n"
                    },
                    "issuerUrl": {
                        "type": "string",
                        "description": "URI that identifies the issuer.\n"
                    },
                    "jwksBinding": {
                        "type": "string",
                        "description": "The method of making a request for the OIDC JWKS. It can be set to `HTTP-POST` or `HTTP-REDIRECT`\n"
                    },
                    "jwksUrl": {
                        "type": "string",
                        "description": "Endpoint where the keys signer publishes its keys in a JWK Set.\n"
                    },
                    "maxClockSkew": {
                        "type": "integer",
                        "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the IdP\n"
                    },
                    "pkceRequired": {
                        "type": "boolean",
                        "description": "Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. See: https://developer.okta.com/docs/reference/api/idps/#oauth-2-0-and-openid-connect-client-object\n"
                    },
                    "profileMaster": {
                        "type": "boolean",
                        "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                    },
                    "protocolType": {
                        "type": "string",
                        "description": "The type of protocol to use. It can be `OIDC` or `OAUTH2`. Default: `OIDC`\n"
                    },
                    "provisioningAction": {
                        "type": "string",
                        "description": "Provisioning action for an IdP user during authentication. Default: `AUTO`\n"
                    },
                    "requestSignatureAlgorithm": {
                        "type": "string",
                        "description": "The HMAC Signature Algorithm used when signing an authorization request. Defaults to `HS256`. It can be `HS256`, `HS384`, `HS512`, `SHA-256`. `RS256`, `RS384`, or `RS512`. NOTE: `SHA-256` an undocumented legacy value and not continue to be valid. See API docs https://developer.okta.com/docs/reference/api/idps/#oidc-request-signature-algorithm-object\n"
                    },
                    "requestSignatureScope": {
                        "type": "string",
                        "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. Defaults to `REQUEST`. It can be `REQUEST` or `NONE`.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The scopes of the IdP.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default to `ACTIVE`\n"
                    },
                    "subjectMatchAttribute": {
                        "type": "string",
                        "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `CUSTOM_ATTRIBUTE`.\n"
                    },
                    "subjectMatchType": {
                        "type": "string",
                        "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `USERNAME`. It can be set to `USERNAME`, `EMAIL`, `USERNAME_OR_EMAIL` or `CUSTOM_ATTRIBUTE`.\n"
                    },
                    "suspendedAction": {
                        "type": "string",
                        "description": "Action for a previously suspended IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                    },
                    "tokenBinding": {
                        "type": "string",
                        "description": "The method of making a token request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`.\n"
                    },
                    "tokenUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of OIDC IdP.\n"
                    },
                    "userInfoBinding": {
                        "type": "string"
                    },
                    "userInfoUrl": {
                        "type": "string",
                        "description": "Protected resource endpoint that returns claims about the authenticated user.\n"
                    },
                    "userTypeId": {
                        "type": "string",
                        "description": "User type ID. Can be used as `target_id` in the `okta.profile.Mapping` resource.\n"
                    },
                    "usernameTemplate": {
                        "type": "string",
                        "description": "Okta EL Expression to generate or transform a unique username for the IdP user. Default: `idpuser.email`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:idp/saml:Saml": {
            "description": "Creates a SAML Identity Provider. This resource allows you to create and configure a SAML Identity Provider.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.idp.Saml(\"example\", {\n    name: \"testAcc_replace_with_uuid\",\n    acsType: \"INSTANCE\",\n    ssoUrl: \"https://idp.example.com\",\n    ssoDestination: \"https://idp.example.com\",\n    ssoBinding: \"HTTP-POST\",\n    usernameTemplate: \"idpuser.email\",\n    kid: test.id,\n    issuer: \"https://idp.example.com\",\n    requestSignatureScope: \"REQUEST\",\n    responseSignatureScope: \"ANY\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.Saml(\"example\",\n    name=\"testAcc_replace_with_uuid\",\n    acs_type=\"INSTANCE\",\n    sso_url=\"https://idp.example.com\",\n    sso_destination=\"https://idp.example.com\",\n    sso_binding=\"HTTP-POST\",\n    username_template=\"idpuser.email\",\n    kid=test[\"id\"],\n    issuer=\"https://idp.example.com\",\n    request_signature_scope=\"REQUEST\",\n    response_signature_scope=\"ANY\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Idp.Saml(\"example\", new()\n    {\n        Name = \"testAcc_replace_with_uuid\",\n        AcsType = \"INSTANCE\",\n        SsoUrl = \"https://idp.example.com\",\n        SsoDestination = \"https://idp.example.com\",\n        SsoBinding = \"HTTP-POST\",\n        UsernameTemplate = \"idpuser.email\",\n        Kid = test.Id,\n        Issuer = \"https://idp.example.com\",\n        RequestSignatureScope = \"REQUEST\",\n        ResponseSignatureScope = \"ANY\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.NewSaml(ctx, \"example\", \u0026idp.SamlArgs{\n\t\t\tName:                   pulumi.String(\"testAcc_replace_with_uuid\"),\n\t\t\tAcsType:                pulumi.String(\"INSTANCE\"),\n\t\t\tSsoUrl:                 pulumi.String(\"https://idp.example.com\"),\n\t\t\tSsoDestination:         pulumi.String(\"https://idp.example.com\"),\n\t\t\tSsoBinding:             pulumi.String(\"HTTP-POST\"),\n\t\t\tUsernameTemplate:       pulumi.String(\"idpuser.email\"),\n\t\t\tKid:                    pulumi.Any(test.Id),\n\t\t\tIssuer:                 pulumi.String(\"https://idp.example.com\"),\n\t\t\tRequestSignatureScope:  pulumi.String(\"REQUEST\"),\n\t\t\tResponseSignatureScope: pulumi.String(\"ANY\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.idp.Saml;\nimport com.pulumi.okta.idp.SamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Saml(\"example\", SamlArgs.builder()\n            .name(\"testAcc_replace_with_uuid\")\n            .acsType(\"INSTANCE\")\n            .ssoUrl(\"https://idp.example.com\")\n            .ssoDestination(\"https://idp.example.com\")\n            .ssoBinding(\"HTTP-POST\")\n            .usernameTemplate(\"idpuser.email\")\n            .kid(test.id())\n            .issuer(\"https://idp.example.com\")\n            .requestSignatureScope(\"REQUEST\")\n            .responseSignatureScope(\"ANY\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:idp:Saml\n    properties:\n      name: testAcc_replace_with_uuid\n      acsType: INSTANCE\n      ssoUrl: https://idp.example.com\n      ssoDestination: https://idp.example.com\n      ssoBinding: HTTP-POST\n      usernameTemplate: idpuser.email\n      kid: ${test.id}\n      issuer: https://idp.example.com\n      requestSignatureScope: REQUEST\n      responseSignatureScope: ANY\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:idp/saml:Saml example \u003cidp_id\u003e\n```\n\n",
            "properties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user. Default: `AUTO`\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "acsBinding": {
                    "type": "string"
                },
                "acsType": {
                    "type": "string",
                    "description": "The type of ACS. It can be `INSTANCE` or `ORG`. Default: `INSTANCE`\n"
                },
                "audience": {
                    "type": "string"
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `NONE`, `SYNC`, `APPEND`, or `ASSIGN`. Default: `NONE`\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `ASSIGN` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `APPEND` or `SYNC` `groups_action`.\n"
                },
                "honorPersistentNameId": {
                    "type": "boolean",
                    "description": "Determines if the IdP should persist account linking when the incoming assertion NameID format is\nurn:oasis:names:tc:SAML:2.0:nameid-format:persistent\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "URI that identifies the issuer.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL\n"
                },
                "kid": {
                    "type": "string",
                    "description": "The ID of the signing key.\n"
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the IdP\n"
                },
                "nameFormat": {
                    "type": "string",
                    "description": "The name identifier format to use. By default `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`.\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication. Default: `AUTO`\n"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "The XML digital Signature Algorithm used when signing an `AuthnRequest` message. It can be `SHA-256` or `SHA-1`. Default: `SHA-256`\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. It can be `REQUEST` or `NONE`. Default: `REQUEST`\n"
                },
                "responseSignatureAlgorithm": {
                    "type": "string",
                    "description": "The minimum XML digital signature algorithm allowed when verifying a `SAMLResponse` message or Assertion element. It can be `SHA-256` or `SHA-1`. Default: `SHA-256`\n"
                },
                "responseSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to verify a `SAMLResponse` message or Assertion element XML digital signature. It can be `RESPONSE`, `ASSERTION`, or `ANY`. Default: `ANY`\n"
                },
                "ssoBinding": {
                    "type": "string",
                    "description": "The method of making an SSO request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`. Default: `HTTP-POST`\n"
                },
                "ssoDestination": {
                    "type": "string",
                    "description": "URI reference indicating the address to which the AuthnRequest message is sent.\n"
                },
                "ssoUrl": {
                    "type": "string",
                    "description": "URL of binding-specific endpoint to send an AuthnRequest message to IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                },
                "subjectFilter": {
                    "type": "string",
                    "description": "Optional regular expression pattern used to filter untrusted IdP usernames.\n"
                },
                "subjectFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The name format.\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `CUSTOM_ATTRIBUTE`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `USERNAME`. It can be set to `USERNAME`, `EMAIL`, `USERNAME_OR_EMAIL` or `CUSTOM_ATTRIBUTE`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                },
                "type": {
                    "type": "string"
                },
                "userTypeId": {
                    "type": "string"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user. Default: `idpuser.email`\n"
                }
            },
            "required": [
                "acsBinding",
                "audience",
                "issuer",
                "kid",
                "name",
                "ssoUrl",
                "type",
                "userTypeId"
            ],
            "inputProperties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user. Default: `AUTO`\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "acsType": {
                    "type": "string",
                    "description": "The type of ACS. It can be `INSTANCE` or `ORG`. Default: `INSTANCE`\n"
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `NONE`, `SYNC`, `APPEND`, or `ASSIGN`. Default: `NONE`\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `ASSIGN` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `APPEND` or `SYNC` `groups_action`.\n"
                },
                "honorPersistentNameId": {
                    "type": "boolean",
                    "description": "Determines if the IdP should persist account linking when the incoming assertion NameID format is\nurn:oasis:names:tc:SAML:2.0:nameid-format:persistent\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "URI that identifies the issuer.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL\n"
                },
                "kid": {
                    "type": "string",
                    "description": "The ID of the signing key.\n"
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the IdP\n"
                },
                "nameFormat": {
                    "type": "string",
                    "description": "The name identifier format to use. By default `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`.\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication. Default: `AUTO`\n"
                },
                "requestSignatureAlgorithm": {
                    "type": "string",
                    "description": "The XML digital Signature Algorithm used when signing an `AuthnRequest` message. It can be `SHA-256` or `SHA-1`. Default: `SHA-256`\n"
                },
                "requestSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. It can be `REQUEST` or `NONE`. Default: `REQUEST`\n"
                },
                "responseSignatureAlgorithm": {
                    "type": "string",
                    "description": "The minimum XML digital signature algorithm allowed when verifying a `SAMLResponse` message or Assertion element. It can be `SHA-256` or `SHA-1`. Default: `SHA-256`\n"
                },
                "responseSignatureScope": {
                    "type": "string",
                    "description": "Specifies whether to verify a `SAMLResponse` message or Assertion element XML digital signature. It can be `RESPONSE`, `ASSERTION`, or `ANY`. Default: `ANY`\n"
                },
                "ssoBinding": {
                    "type": "string",
                    "description": "The method of making an SSO request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`. Default: `HTTP-POST`\n"
                },
                "ssoDestination": {
                    "type": "string",
                    "description": "URI reference indicating the address to which the AuthnRequest message is sent.\n"
                },
                "ssoUrl": {
                    "type": "string",
                    "description": "URL of binding-specific endpoint to send an AuthnRequest message to IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                },
                "subjectFilter": {
                    "type": "string",
                    "description": "Optional regular expression pattern used to filter untrusted IdP usernames.\n"
                },
                "subjectFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The name format.\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `CUSTOM_ATTRIBUTE`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `USERNAME`. It can be set to `USERNAME`, `EMAIL`, `USERNAME_OR_EMAIL` or `CUSTOM_ATTRIBUTE`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user. Default: `idpuser.email`\n"
                }
            },
            "requiredInputs": [
                "issuer",
                "kid",
                "ssoUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Saml resources.\n",
                "properties": {
                    "accountLinkAction": {
                        "type": "string",
                        "description": "Specifies the account linking action for an IdP user. Default: `AUTO`\n"
                    },
                    "accountLinkGroupIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group memberships to determine link candidates.\n"
                    },
                    "acsBinding": {
                        "type": "string"
                    },
                    "acsType": {
                        "type": "string",
                        "description": "The type of ACS. It can be `INSTANCE` or `ORG`. Default: `INSTANCE`\n"
                    },
                    "audience": {
                        "type": "string"
                    },
                    "deprovisionedAction": {
                        "type": "string",
                        "description": "Action for a previously deprovisioned IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                    },
                    "groupsAction": {
                        "type": "string",
                        "description": "Provisioning action for IdP user's group memberships. It can be `NONE`, `SYNC`, `APPEND`, or `ASSIGN`. Default: `NONE`\n"
                    },
                    "groupsAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Okta Group IDs to add an IdP user as a member with the `ASSIGN` `groups_action`.\n"
                    },
                    "groupsAttribute": {
                        "type": "string",
                        "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                    },
                    "groupsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Whitelist of Okta Group identifiers that are allowed for the `APPEND` or `SYNC` `groups_action`.\n"
                    },
                    "honorPersistentNameId": {
                        "type": "boolean",
                        "description": "Determines if the IdP should persist account linking when the incoming assertion NameID format is\nurn:oasis:names:tc:SAML:2.0:nameid-format:persistent\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "URI that identifies the issuer.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "The ID of the signing key.\n"
                    },
                    "maxClockSkew": {
                        "type": "integer",
                        "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the IdP\n"
                    },
                    "nameFormat": {
                        "type": "string",
                        "description": "The name identifier format to use. By default `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`.\n"
                    },
                    "profileMaster": {
                        "type": "boolean",
                        "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                    },
                    "provisioningAction": {
                        "type": "string",
                        "description": "Provisioning action for an IdP user during authentication. Default: `AUTO`\n"
                    },
                    "requestSignatureAlgorithm": {
                        "type": "string",
                        "description": "The XML digital Signature Algorithm used when signing an `AuthnRequest` message. It can be `SHA-256` or `SHA-1`. Default: `SHA-256`\n"
                    },
                    "requestSignatureScope": {
                        "type": "string",
                        "description": "Specifies whether to digitally sign an AuthnRequest messages to the IdP. It can be `REQUEST` or `NONE`. Default: `REQUEST`\n"
                    },
                    "responseSignatureAlgorithm": {
                        "type": "string",
                        "description": "The minimum XML digital signature algorithm allowed when verifying a `SAMLResponse` message or Assertion element. It can be `SHA-256` or `SHA-1`. Default: `SHA-256`\n"
                    },
                    "responseSignatureScope": {
                        "type": "string",
                        "description": "Specifies whether to verify a `SAMLResponse` message or Assertion element XML digital signature. It can be `RESPONSE`, `ASSERTION`, or `ANY`. Default: `ANY`\n"
                    },
                    "ssoBinding": {
                        "type": "string",
                        "description": "The method of making an SSO request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`. Default: `HTTP-POST`\n"
                    },
                    "ssoDestination": {
                        "type": "string",
                        "description": "URI reference indicating the address to which the AuthnRequest message is sent.\n"
                    },
                    "ssoUrl": {
                        "type": "string",
                        "description": "URL of binding-specific endpoint to send an AuthnRequest message to IdP.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default to `ACTIVE`\n"
                    },
                    "subjectFilter": {
                        "type": "string",
                        "description": "Optional regular expression pattern used to filter untrusted IdP usernames.\n"
                    },
                    "subjectFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The name format.\n"
                    },
                    "subjectMatchAttribute": {
                        "type": "string",
                        "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `CUSTOM_ATTRIBUTE`.\n"
                    },
                    "subjectMatchType": {
                        "type": "string",
                        "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `USERNAME`. It can be set to `USERNAME`, `EMAIL`, `USERNAME_OR_EMAIL` or `CUSTOM_ATTRIBUTE`.\n"
                    },
                    "suspendedAction": {
                        "type": "string",
                        "description": "Action for a previously suspended IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                    },
                    "type": {
                        "type": "string"
                    },
                    "userTypeId": {
                        "type": "string"
                    },
                    "usernameTemplate": {
                        "type": "string",
                        "description": "Okta EL Expression to generate or transform a unique username for the IdP user. Default: `idpuser.email`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:idp/samlKey:SamlKey": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example1 = new okta.idp.SamlKey(\"example_1\", {x5cs: [example.certificate]});\nconst example2 = new okta.idp.SamlKey(\"example_2\", {x5cs: [`MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5p\nYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMM\nB2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCB\njzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9r\ndGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29t\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTf\nn6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4\nwWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8s\nDQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/\nDwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/I\nYR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93s\nDt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo\n1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9`]});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample1 = okta.idp.SamlKey(\"example_1\", x5cs=[example[\"certificate\"]])\nexample2 = okta.idp.SamlKey(\"example_2\", x5cs=[\"\"\"MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5p\nYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMM\nB2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCB\njzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9r\ndGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29t\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTf\nn6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4\nwWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8s\nDQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/\nDwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/I\nYR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93s\nDt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo\n1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9\"\"\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example1 = new Okta.Idp.SamlKey(\"example_1\", new()\n    {\n        X5cs = new[]\n        {\n            example.Certificate,\n        },\n    });\n\n    var example2 = new Okta.Idp.SamlKey(\"example_2\", new()\n    {\n        X5cs = new[]\n        {\n            @\"MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5p\nYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMM\nB2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCB\njzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9r\ndGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29t\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTf\nn6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4\nwWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8s\nDQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/\nDwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/I\nYR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93s\nDt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo\n1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.NewSamlKey(ctx, \"example_1\", \u0026idp.SamlKeyArgs{\n\t\t\tX5cs: pulumi.StringArray{\n\t\t\t\texample.Certificate,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = idp.NewSamlKey(ctx, \"example_2\", \u0026idp.SamlKeyArgs{\n\t\t\tX5cs: pulumi.StringArray{\n\t\t\t\tpulumi.String(`MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5p\nYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMM\nB2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCB\njzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9r\ndGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29t\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTf\nn6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4\nwWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8s\nDQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/\nDwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/I\nYR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93s\nDt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo\n1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9`),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.idp.SamlKey;\nimport com.pulumi.okta.idp.SamlKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example1 = new SamlKey(\"example1\", SamlKeyArgs.builder()\n            .x5cs(example.certificate())\n            .build());\n\n        var example2 = new SamlKey(\"example2\", SamlKeyArgs.builder()\n            .x5cs(\"\"\"\nMIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5p\nYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMM\nB2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCB\njzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9r\ndGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29t\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTf\nn6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4\nwWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8s\nDQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/\nDwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/I\nYR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93s\nDt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo\n1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example1:\n    type: okta:idp:SamlKey\n    name: example_1\n    properties:\n      x5cs:\n        - ${example.certificate}\n  example2:\n    type: okta:idp:SamlKey\n    name: example_2\n    properties:\n      x5cs:\n        - |-\n          MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5p\n          YTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMM\n          B2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCB\n          jzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9r\n          dGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29t\n          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTf\n          n6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4\n          wWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8s\n          DQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/\n          DwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/I\n          YR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93s\n          Dt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo\n          1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:idp/samlKey:SamlKey example \u003ckey_id\u003e\n```\n\n",
            "properties": {
                "created": {
                    "type": "string",
                    "description": "Date created.\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "Date the cert expires.\n"
                },
                "kid": {
                    "type": "string",
                    "description": "Key ID.\n"
                },
                "kty": {
                    "type": "string",
                    "description": "Identifies the cryptographic algorithm family used with the key.\n"
                },
                "use": {
                    "type": "string",
                    "description": "Intended use of the public key.\n"
                },
                "x5cs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "base64-encoded X.509 certificate chain with DER encoding\n"
                },
                "x5tS256": {
                    "type": "string",
                    "description": "base64url-encoded SHA-256 thumbprint of the DER encoding of an X.509 certificate.\n"
                }
            },
            "required": [
                "created",
                "expiresAt",
                "kid",
                "kty",
                "use",
                "x5cs",
                "x5tS256"
            ],
            "inputProperties": {
                "x5cs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "base64-encoded X.509 certificate chain with DER encoding\n"
                }
            },
            "requiredInputs": [
                "x5cs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SamlKey resources.\n",
                "properties": {
                    "created": {
                        "type": "string",
                        "description": "Date created.\n"
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "Date the cert expires.\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "Key ID.\n"
                    },
                    "kty": {
                        "type": "string",
                        "description": "Identifies the cryptographic algorithm family used with the key.\n"
                    },
                    "use": {
                        "type": "string",
                        "description": "Intended use of the public key.\n"
                    },
                    "x5cs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "base64-encoded X.509 certificate chain with DER encoding\n"
                    },
                    "x5tS256": {
                        "type": "string",
                        "description": "base64url-encoded SHA-256 thumbprint of the DER encoding of an X.509 certificate.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:idp/social:Social": {
            "description": "Creates a Social Identity Provider. This resource allows you to create and configure a Social Identity Provider.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.idp.Social(\"example\", {\n    type: \"FACEBOOK\",\n    protocolType: \"OAUTH2\",\n    name: \"testAcc_facebook_replace_with_uuid\",\n    scopes: [\n        \"public_profile\",\n        \"email\",\n    ],\n    clientId: \"abcd123\",\n    clientSecret: \"abcd123\",\n    usernameTemplate: \"idpuser.email\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.Social(\"example\",\n    type=\"FACEBOOK\",\n    protocol_type=\"OAUTH2\",\n    name=\"testAcc_facebook_replace_with_uuid\",\n    scopes=[\n        \"public_profile\",\n        \"email\",\n    ],\n    client_id=\"abcd123\",\n    client_secret=\"abcd123\",\n    username_template=\"idpuser.email\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Idp.Social(\"example\", new()\n    {\n        Type = \"FACEBOOK\",\n        ProtocolType = \"OAUTH2\",\n        Name = \"testAcc_facebook_replace_with_uuid\",\n        Scopes = new[]\n        {\n            \"public_profile\",\n            \"email\",\n        },\n        ClientId = \"abcd123\",\n        ClientSecret = \"abcd123\",\n        UsernameTemplate = \"idpuser.email\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.NewSocial(ctx, \"example\", \u0026idp.SocialArgs{\n\t\t\tType:         pulumi.String(\"FACEBOOK\"),\n\t\t\tProtocolType: pulumi.String(\"OAUTH2\"),\n\t\t\tName:         pulumi.String(\"testAcc_facebook_replace_with_uuid\"),\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"public_profile\"),\n\t\t\t\tpulumi.String(\"email\"),\n\t\t\t},\n\t\t\tClientId:         pulumi.String(\"abcd123\"),\n\t\t\tClientSecret:     pulumi.String(\"abcd123\"),\n\t\t\tUsernameTemplate: pulumi.String(\"idpuser.email\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.idp.Social;\nimport com.pulumi.okta.idp.SocialArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Social(\"example\", SocialArgs.builder()\n            .type(\"FACEBOOK\")\n            .protocolType(\"OAUTH2\")\n            .name(\"testAcc_facebook_replace_with_uuid\")\n            .scopes(            \n                \"public_profile\",\n                \"email\")\n            .clientId(\"abcd123\")\n            .clientSecret(\"abcd123\")\n            .usernameTemplate(\"idpuser.email\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:idp:Social\n    properties:\n      type: FACEBOOK\n      protocolType: OAUTH2\n      name: testAcc_facebook_replace_with_uuid\n      scopes:\n        - public_profile\n        - email\n      clientId: abcd123\n      clientSecret: abcd123\n      usernameTemplate: idpuser.email\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:idp/social:Social example \u003cidp_id\u003e\n```\n\n",
            "properties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user. Default: `AUTO`\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "appleKid": {
                    "type": "string",
                    "description": "The Key ID that you obtained from Apple when you created the private key for the client\n"
                },
                "applePrivateKey": {
                    "type": "string",
                    "description": "The Key ID that you obtained from Apple when you created the private key for the client. PrivateKey is required when resource is first created. For all consecutive updates, it can be empty/omitted and keeps the existing value if it is empty/omitted. PrivateKey isn't returned when importing this resource.\n",
                    "secret": true
                },
                "appleTeamId": {
                    "type": "string",
                    "description": "The Team ID associated with your Apple developer account\n"
                },
                "authorizationBinding": {
                    "type": "string",
                    "description": "The method of making an authorization request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`.\n"
                },
                "authorizationUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret issued by AS for the Okta IdP instance.\n",
                    "secret": true
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `NONE`, `SYNC`, `APPEND`, or `ASSIGN`. Default: `NONE`\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `ASSIGN` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `APPEND` or `SYNC` `groups_action`.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `ORG_URL` or `CUSTOM_URL`. Default: `ORG_URL`\n"
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the IdP\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "protocolType": {
                    "type": "string",
                    "description": "The type of protocol to use. It can be `OIDC` or `OAUTH2`. Default: `OAUTH2`\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication. Default: `AUTO`\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The scopes of the IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `CUSTOM_ATTRIBUTE`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `USERNAME`. It can be set to `USERNAME`, `EMAIL`, `USERNAME_OR_EMAIL` or `CUSTOM_ATTRIBUTE`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                },
                "tokenBinding": {
                    "type": "string",
                    "description": "The method of making a token request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`.\n"
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                },
                "trustAudience": {
                    "type": "string",
                    "description": "Trust audience for the Okta IdP instance.\n"
                },
                "trustIssuer": {
                    "type": "string",
                    "description": "Trust issuer for the Okta IdP instance.\n"
                },
                "trustKid": {
                    "type": "string",
                    "description": "Trust kid for the Okta IdP instance.\n"
                },
                "trustRevocation": {
                    "type": "string",
                    "description": "Trust revocation for the Okta IdP instance.\n"
                },
                "trustRevocationCacheLifetime": {
                    "type": "integer",
                    "description": "Trust revocation cache lifetime for the Okta IdP instance.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Identity Provider Types: https://developer.okta.com/docs/reference/api/idps/#identity-provider-type\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user. Default: `idpuser.email`\n"
                }
            },
            "required": [
                "authorizationBinding",
                "authorizationUrl",
                "name",
                "scopes",
                "tokenBinding",
                "tokenUrl",
                "trustAudience",
                "trustIssuer",
                "trustKid",
                "trustRevocation",
                "trustRevocationCacheLifetime",
                "type"
            ],
            "inputProperties": {
                "accountLinkAction": {
                    "type": "string",
                    "description": "Specifies the account linking action for an IdP user. Default: `AUTO`\n"
                },
                "accountLinkGroupIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group memberships to determine link candidates.\n"
                },
                "appleKid": {
                    "type": "string",
                    "description": "The Key ID that you obtained from Apple when you created the private key for the client\n"
                },
                "applePrivateKey": {
                    "type": "string",
                    "description": "The Key ID that you obtained from Apple when you created the private key for the client. PrivateKey is required when resource is first created. For all consecutive updates, it can be empty/omitted and keeps the existing value if it is empty/omitted. PrivateKey isn't returned when importing this resource.\n",
                    "secret": true
                },
                "appleTeamId": {
                    "type": "string",
                    "description": "The Team ID associated with your Apple developer account\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret issued by AS for the Okta IdP instance.\n",
                    "secret": true
                },
                "deprovisionedAction": {
                    "type": "string",
                    "description": "Action for a previously deprovisioned IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                },
                "groupsAction": {
                    "type": "string",
                    "description": "Provisioning action for IdP user's group memberships. It can be `NONE`, `SYNC`, `APPEND`, or `ASSIGN`. Default: `NONE`\n"
                },
                "groupsAssignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Okta Group IDs to add an IdP user as a member with the `ASSIGN` `groups_action`.\n"
                },
                "groupsAttribute": {
                    "type": "string",
                    "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                },
                "groupsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelist of Okta Group identifiers that are allowed for the `APPEND` or `SYNC` `groups_action`.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `ORG_URL` or `CUSTOM_URL`. Default: `ORG_URL`\n"
                },
                "maxClockSkew": {
                    "type": "integer",
                    "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the IdP\n"
                },
                "profileMaster": {
                    "type": "boolean",
                    "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                },
                "protocolType": {
                    "type": "string",
                    "description": "The type of protocol to use. It can be `OIDC` or `OAUTH2`. Default: `OAUTH2`\n"
                },
                "provisioningAction": {
                    "type": "string",
                    "description": "Provisioning action for an IdP user during authentication. Default: `AUTO`\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The scopes of the IdP.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                },
                "subjectMatchAttribute": {
                    "type": "string",
                    "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `CUSTOM_ATTRIBUTE`.\n"
                },
                "subjectMatchType": {
                    "type": "string",
                    "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `USERNAME`. It can be set to `USERNAME`, `EMAIL`, `USERNAME_OR_EMAIL` or `CUSTOM_ATTRIBUTE`.\n"
                },
                "suspendedAction": {
                    "type": "string",
                    "description": "Action for a previously suspended IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Identity Provider Types: https://developer.okta.com/docs/reference/api/idps/#identity-provider-type\n"
                },
                "usernameTemplate": {
                    "type": "string",
                    "description": "Okta EL Expression to generate or transform a unique username for the IdP user. Default: `idpuser.email`\n"
                }
            },
            "requiredInputs": [
                "scopes",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Social resources.\n",
                "properties": {
                    "accountLinkAction": {
                        "type": "string",
                        "description": "Specifies the account linking action for an IdP user. Default: `AUTO`\n"
                    },
                    "accountLinkGroupIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group memberships to determine link candidates.\n"
                    },
                    "appleKid": {
                        "type": "string",
                        "description": "The Key ID that you obtained from Apple when you created the private key for the client\n"
                    },
                    "applePrivateKey": {
                        "type": "string",
                        "description": "The Key ID that you obtained from Apple when you created the private key for the client. PrivateKey is required when resource is first created. For all consecutive updates, it can be empty/omitted and keeps the existing value if it is empty/omitted. PrivateKey isn't returned when importing this resource.\n",
                        "secret": true
                    },
                    "appleTeamId": {
                        "type": "string",
                        "description": "The Team ID associated with your Apple developer account\n"
                    },
                    "authorizationBinding": {
                        "type": "string",
                        "description": "The method of making an authorization request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`.\n"
                    },
                    "authorizationUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Unique identifier issued by AS for the Okta IdP instance.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "Client secret issued by AS for the Okta IdP instance.\n",
                        "secret": true
                    },
                    "deprovisionedAction": {
                        "type": "string",
                        "description": "Action for a previously deprovisioned IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                    },
                    "groupsAction": {
                        "type": "string",
                        "description": "Provisioning action for IdP user's group memberships. It can be `NONE`, `SYNC`, `APPEND`, or `ASSIGN`. Default: `NONE`\n"
                    },
                    "groupsAssignments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Okta Group IDs to add an IdP user as a member with the `ASSIGN` `groups_action`.\n"
                    },
                    "groupsAttribute": {
                        "type": "string",
                        "description": "IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.\n"
                    },
                    "groupsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Whitelist of Okta Group identifiers that are allowed for the `APPEND` or `SYNC` `groups_action`.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `ORG_URL` or `CUSTOM_URL`. Default: `ORG_URL`\n"
                    },
                    "maxClockSkew": {
                        "type": "integer",
                        "description": "Maximum allowable clock-skew when processing messages from the IdP.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the IdP\n"
                    },
                    "profileMaster": {
                        "type": "boolean",
                        "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n"
                    },
                    "protocolType": {
                        "type": "string",
                        "description": "The type of protocol to use. It can be `OIDC` or `OAUTH2`. Default: `OAUTH2`\n"
                    },
                    "provisioningAction": {
                        "type": "string",
                        "description": "Provisioning action for an IdP user during authentication. Default: `AUTO`\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The scopes of the IdP.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default to `ACTIVE`\n"
                    },
                    "subjectMatchAttribute": {
                        "type": "string",
                        "description": "Okta user profile attribute for matching transformed IdP username. Only for matchType `CUSTOM_ATTRIBUTE`.\n"
                    },
                    "subjectMatchType": {
                        "type": "string",
                        "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `USERNAME`. It can be set to `USERNAME`, `EMAIL`, `USERNAME_OR_EMAIL` or `CUSTOM_ATTRIBUTE`.\n"
                    },
                    "suspendedAction": {
                        "type": "string",
                        "description": "Action for a previously suspended IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`\n"
                    },
                    "tokenBinding": {
                        "type": "string",
                        "description": "The method of making a token request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`.\n"
                    },
                    "tokenUrl": {
                        "type": "string",
                        "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n"
                    },
                    "trustAudience": {
                        "type": "string",
                        "description": "Trust audience for the Okta IdP instance.\n"
                    },
                    "trustIssuer": {
                        "type": "string",
                        "description": "Trust issuer for the Okta IdP instance.\n"
                    },
                    "trustKid": {
                        "type": "string",
                        "description": "Trust kid for the Okta IdP instance.\n"
                    },
                    "trustRevocation": {
                        "type": "string",
                        "description": "Trust revocation for the Okta IdP instance.\n"
                    },
                    "trustRevocationCacheLifetime": {
                        "type": "integer",
                        "description": "Trust revocation cache lifetime for the Okta IdP instance.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Identity Provider Types: https://developer.okta.com/docs/reference/api/idps/#identity-provider-type\n"
                    },
                    "usernameTemplate": {
                        "type": "string",
                        "description": "Okta EL Expression to generate or transform a unique username for the IdP user. Default: `idpuser.email`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/adminRoleCustom:AdminRoleCustom": {
            "description": "Resource to manage administrative Role assignments for a User\n\nThese operations allow the creation and manipulation of custom roles as custom collections of permissions.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AdminRoleCustom(\"example\", {\n    label: \"AppAssignmentManager\",\n    description: \"This role allows app assignment management\",\n    permissions: [\"okta.apps.assignment.manage\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AdminRoleCustom(\"example\",\n    label=\"AppAssignmentManager\",\n    description=\"This role allows app assignment management\",\n    permissions=[\"okta.apps.assignment.manage\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AdminRoleCustom(\"example\", new()\n    {\n        Label = \"AppAssignmentManager\",\n        Description = \"This role allows app assignment management\",\n        Permissions = new[]\n        {\n            \"okta.apps.assignment.manage\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAdminRoleCustom(ctx, \"example\", \u0026okta.AdminRoleCustomArgs{\n\t\t\tLabel:       pulumi.String(\"AppAssignmentManager\"),\n\t\t\tDescription: pulumi.String(\"This role allows app assignment management\"),\n\t\t\tPermissions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"okta.apps.assignment.manage\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AdminRoleCustom;\nimport com.pulumi.okta.AdminRoleCustomArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AdminRoleCustom(\"example\", AdminRoleCustomArgs.builder()\n            .label(\"AppAssignmentManager\")\n            .description(\"This role allows app assignment management\")\n            .permissions(\"okta.apps.assignment.manage\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AdminRoleCustom\n    properties:\n      label: AppAssignmentManager\n      description: This role allows app assignment management\n      permissions:\n        - okta.apps.assignment.manage\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/adminRoleCustom:AdminRoleCustom example \u003ccustom_role_id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A human-readable description of the new Role\n"
                },
                "label": {
                    "type": "string",
                    "description": "The name given to the new Role\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The permissions that the new Role grants. At least one\n\t\t\tpermission must be specified when creating custom role. Valid values: \"okta.users.manage\",\n\t\t\t\"okta.users.create\",\n\t\t\t\"okta.users.read\",\n\t\t\t\"okta.users.credentials.manage\",\n\t\t\t\"okta.users.credentials.resetFactors\",\n\t\t\t\"okta.users.credentials.resetPassword\",\n\t\t\t\"okta.users.credentials.expirePassword\",\n\t\t\t\"okta.users.userprofile.manage\",\n\t\t\t\"okta.users.lifecycle.manage\",\n\t\t\t\"okta.users.lifecycle.activate\",\n\t\t\t\"okta.users.lifecycle.deactivate\",\n\t\t\t\"okta.users.lifecycle.suspend\",\n\t\t\t\"okta.users.lifecycle.unsuspend\",\n\t\t\t\"okta.users.lifecycle.delete\",\n\t\t\t\"okta.users.lifecycle.unlock\",\n\t\t\t\"okta.users.lifecycle.clearSessions\",\n\t\t\t\"okta.users.groupMembership.manage\",\n\t\t\t\"okta.users.appAssignment.manage\",\n\t\t\t\"okta.users.apitokens.manage\",\n\t\t\t\"okta.users.apitokens.read\",\n\t\t\t\"okta.groups.manage\",\n\t\t\t\"okta.groups.create\",\n\t\t\t\"okta.groups.members.manage\",\n\t\t\t\"okta.groups.read\",\n\t\t\t\"okta.groups.appAssignment.manage\",\n\t\t\t\"okta.apps.read\",\n\t\t\t\"okta.apps.manage\",\n\t\t\t\"okta.apps.assignment.manage\",\n\t\t\t\"okta.profilesources.import.run\",\n\t\t\t\"okta.authzServers.read\",\n\t\t\t\"okta.users.userprofile.manage\",\n\t\t\t\"okta.authzServers.manage\",\n\t\t\t\"okta.customizations.read\",\n\t\t\t\"okta.customizations.manage\",\n\t\t\t\"okta.identityProviders.read\",\n\t\t\t\"okta.identityProviders.manage\",\n\t\t\t\"okta.workflows.read\",\n\t\t\t\"okta.workflows.invoke\".\n\t\t\t\"okta.governance.accessCertifications.manage\",\n\t\t\t\"okta.governance.accessRequests.manage\",\n\t\t\t\"okta.apps.manageFirstPartyApps\",\n\t\t\t\"okta.agents.manage\",\n\t\t\t\"okta.agents.register\",\n\t\t\t\"okta.agents.view\",\n\t\t\t\"okta.directories.manage\",\n\t\t\t\"okta.directories.read\",\n\t\t\t\"okta.devices.manage\",\n\t\t\t\"okta.devices.lifecycle.manage\",\n\t\t\t\"okta.devices.lifecycle.activate\",\n\t\t\t\"okta.devices.lifecycle.deactivate\",\n\t\t\t\"okta.devices.lifecycle.suspend\",\n\t\t\t\"okta.devices.lifecycle.unsuspend\",\n\t\t\t\"okta.devices.lifecycle.delete\",\n\t\t\t\"okta.devices.read\",\n\t\t\t\"okta.iam.read\",\n\t\t\t\"okta.support.cases.manage\".,\n"
                }
            },
            "required": [
                "description",
                "label"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A human-readable description of the new Role\n"
                },
                "label": {
                    "type": "string",
                    "description": "The name given to the new Role\n",
                    "willReplaceOnChanges": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The permissions that the new Role grants. At least one\n\t\t\tpermission must be specified when creating custom role. Valid values: \"okta.users.manage\",\n\t\t\t\"okta.users.create\",\n\t\t\t\"okta.users.read\",\n\t\t\t\"okta.users.credentials.manage\",\n\t\t\t\"okta.users.credentials.resetFactors\",\n\t\t\t\"okta.users.credentials.resetPassword\",\n\t\t\t\"okta.users.credentials.expirePassword\",\n\t\t\t\"okta.users.userprofile.manage\",\n\t\t\t\"okta.users.lifecycle.manage\",\n\t\t\t\"okta.users.lifecycle.activate\",\n\t\t\t\"okta.users.lifecycle.deactivate\",\n\t\t\t\"okta.users.lifecycle.suspend\",\n\t\t\t\"okta.users.lifecycle.unsuspend\",\n\t\t\t\"okta.users.lifecycle.delete\",\n\t\t\t\"okta.users.lifecycle.unlock\",\n\t\t\t\"okta.users.lifecycle.clearSessions\",\n\t\t\t\"okta.users.groupMembership.manage\",\n\t\t\t\"okta.users.appAssignment.manage\",\n\t\t\t\"okta.users.apitokens.manage\",\n\t\t\t\"okta.users.apitokens.read\",\n\t\t\t\"okta.groups.manage\",\n\t\t\t\"okta.groups.create\",\n\t\t\t\"okta.groups.members.manage\",\n\t\t\t\"okta.groups.read\",\n\t\t\t\"okta.groups.appAssignment.manage\",\n\t\t\t\"okta.apps.read\",\n\t\t\t\"okta.apps.manage\",\n\t\t\t\"okta.apps.assignment.manage\",\n\t\t\t\"okta.profilesources.import.run\",\n\t\t\t\"okta.authzServers.read\",\n\t\t\t\"okta.users.userprofile.manage\",\n\t\t\t\"okta.authzServers.manage\",\n\t\t\t\"okta.customizations.read\",\n\t\t\t\"okta.customizations.manage\",\n\t\t\t\"okta.identityProviders.read\",\n\t\t\t\"okta.identityProviders.manage\",\n\t\t\t\"okta.workflows.read\",\n\t\t\t\"okta.workflows.invoke\".\n\t\t\t\"okta.governance.accessCertifications.manage\",\n\t\t\t\"okta.governance.accessRequests.manage\",\n\t\t\t\"okta.apps.manageFirstPartyApps\",\n\t\t\t\"okta.agents.manage\",\n\t\t\t\"okta.agents.register\",\n\t\t\t\"okta.agents.view\",\n\t\t\t\"okta.directories.manage\",\n\t\t\t\"okta.directories.read\",\n\t\t\t\"okta.devices.manage\",\n\t\t\t\"okta.devices.lifecycle.manage\",\n\t\t\t\"okta.devices.lifecycle.activate\",\n\t\t\t\"okta.devices.lifecycle.deactivate\",\n\t\t\t\"okta.devices.lifecycle.suspend\",\n\t\t\t\"okta.devices.lifecycle.unsuspend\",\n\t\t\t\"okta.devices.lifecycle.delete\",\n\t\t\t\"okta.devices.read\",\n\t\t\t\"okta.iam.read\",\n\t\t\t\"okta.support.cases.manage\".,\n"
                }
            },
            "requiredInputs": [
                "description",
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AdminRoleCustom resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A human-readable description of the new Role\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The name given to the new Role\n",
                        "willReplaceOnChanges": true
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The permissions that the new Role grants. At least one\n\t\t\tpermission must be specified when creating custom role. Valid values: \"okta.users.manage\",\n\t\t\t\"okta.users.create\",\n\t\t\t\"okta.users.read\",\n\t\t\t\"okta.users.credentials.manage\",\n\t\t\t\"okta.users.credentials.resetFactors\",\n\t\t\t\"okta.users.credentials.resetPassword\",\n\t\t\t\"okta.users.credentials.expirePassword\",\n\t\t\t\"okta.users.userprofile.manage\",\n\t\t\t\"okta.users.lifecycle.manage\",\n\t\t\t\"okta.users.lifecycle.activate\",\n\t\t\t\"okta.users.lifecycle.deactivate\",\n\t\t\t\"okta.users.lifecycle.suspend\",\n\t\t\t\"okta.users.lifecycle.unsuspend\",\n\t\t\t\"okta.users.lifecycle.delete\",\n\t\t\t\"okta.users.lifecycle.unlock\",\n\t\t\t\"okta.users.lifecycle.clearSessions\",\n\t\t\t\"okta.users.groupMembership.manage\",\n\t\t\t\"okta.users.appAssignment.manage\",\n\t\t\t\"okta.users.apitokens.manage\",\n\t\t\t\"okta.users.apitokens.read\",\n\t\t\t\"okta.groups.manage\",\n\t\t\t\"okta.groups.create\",\n\t\t\t\"okta.groups.members.manage\",\n\t\t\t\"okta.groups.read\",\n\t\t\t\"okta.groups.appAssignment.manage\",\n\t\t\t\"okta.apps.read\",\n\t\t\t\"okta.apps.manage\",\n\t\t\t\"okta.apps.assignment.manage\",\n\t\t\t\"okta.profilesources.import.run\",\n\t\t\t\"okta.authzServers.read\",\n\t\t\t\"okta.users.userprofile.manage\",\n\t\t\t\"okta.authzServers.manage\",\n\t\t\t\"okta.customizations.read\",\n\t\t\t\"okta.customizations.manage\",\n\t\t\t\"okta.identityProviders.read\",\n\t\t\t\"okta.identityProviders.manage\",\n\t\t\t\"okta.workflows.read\",\n\t\t\t\"okta.workflows.invoke\".\n\t\t\t\"okta.governance.accessCertifications.manage\",\n\t\t\t\"okta.governance.accessRequests.manage\",\n\t\t\t\"okta.apps.manageFirstPartyApps\",\n\t\t\t\"okta.agents.manage\",\n\t\t\t\"okta.agents.register\",\n\t\t\t\"okta.agents.view\",\n\t\t\t\"okta.directories.manage\",\n\t\t\t\"okta.directories.read\",\n\t\t\t\"okta.devices.manage\",\n\t\t\t\"okta.devices.lifecycle.manage\",\n\t\t\t\"okta.devices.lifecycle.activate\",\n\t\t\t\"okta.devices.lifecycle.deactivate\",\n\t\t\t\"okta.devices.lifecycle.suspend\",\n\t\t\t\"okta.devices.lifecycle.unsuspend\",\n\t\t\t\"okta.devices.lifecycle.delete\",\n\t\t\t\"okta.devices.read\",\n\t\t\t\"okta.iam.read\",\n\t\t\t\"okta.support.cases.manage\".,\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/adminRoleCustomAssignments:AdminRoleCustomAssignments": {
            "description": "Resource to manage the assignment and unassignment of Custom Roles\nThese operations allow the creation and manipulation of custom roles as custom collections of permissions.\n\t\t\n\u003e **NOTE:** This an Early Access feature.\n\n## Import\n\n```sh\n$ pulumi import okta:index/adminRoleCustomAssignments:AdminRoleCustomAssignments example \u003cresource_set_id\u003e/\u003ccustom_role_id\u003e\n```\n\n",
            "properties": {
                "customRoleId": {
                    "type": "string",
                    "description": "ID of the Custom Role\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The hrefs that point to User(s) and/or Group(s) that receive the Role\n"
                },
                "resourceSetId": {
                    "type": "string",
                    "description": "ID of the target Resource Set\n"
                }
            },
            "required": [
                "customRoleId",
                "resourceSetId"
            ],
            "inputProperties": {
                "customRoleId": {
                    "type": "string",
                    "description": "ID of the Custom Role\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The hrefs that point to User(s) and/or Group(s) that receive the Role\n"
                },
                "resourceSetId": {
                    "type": "string",
                    "description": "ID of the target Resource Set\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "customRoleId",
                "resourceSetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AdminRoleCustomAssignments resources.\n",
                "properties": {
                    "customRoleId": {
                        "type": "string",
                        "description": "ID of the Custom Role\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The hrefs that point to User(s) and/or Group(s) that receive the Role\n"
                    },
                    "resourceSetId": {
                        "type": "string",
                        "description": "ID of the target Resource Set\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/adminRoleTargets:AdminRoleTargets": {
            "description": "Manages targets for administrator roles.\n\nThis resource allows you to define permissions for admin roles into a smaller subset of Groups or Apps within your org.\nYou can define admin roles to target Groups, Applications, and Application Instances.\n\n```\nNote 1: you have to assign a role to a user before creating this resource.\n\nNote 2: You can target a mixture of both App and App Instance targets, but can't assign permissions to manage all\n        instances of an App and then a subset of that same App. For example, you can't specify that an admin has access\n        to manage all instances of a Salesforce app and then also specific configurations of the Salesforce app.\n```\n\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AdminRoleTargets(\"example\", {\n    userId: \"\u003cuser_id\u003e\",\n    roleType: \"APP_ADMIN\",\n    apps: [\n        \"oidc_client.\u003capp_id\u003e\",\n        \"facebook\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AdminRoleTargets(\"example\",\n    user_id=\"\u003cuser_id\u003e\",\n    role_type=\"APP_ADMIN\",\n    apps=[\n        \"oidc_client.\u003capp_id\u003e\",\n        \"facebook\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AdminRoleTargets(\"example\", new()\n    {\n        UserId = \"\u003cuser_id\u003e\",\n        RoleType = \"APP_ADMIN\",\n        Apps = new[]\n        {\n            \"oidc_client.\u003capp_id\u003e\",\n            \"facebook\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAdminRoleTargets(ctx, \"example\", \u0026okta.AdminRoleTargetsArgs{\n\t\t\tUserId:   pulumi.String(\"\u003cuser_id\u003e\"),\n\t\t\tRoleType: pulumi.String(\"APP_ADMIN\"),\n\t\t\tApps: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"oidc_client.\u003capp_id\u003e\"),\n\t\t\t\tpulumi.String(\"facebook\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AdminRoleTargets;\nimport com.pulumi.okta.AdminRoleTargetsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AdminRoleTargets(\"example\", AdminRoleTargetsArgs.builder()\n            .userId(\"\u003cuser_id\u003e\")\n            .roleType(\"APP_ADMIN\")\n            .apps(            \n                \"oidc_client.\u003capp_id\u003e\",\n                \"facebook\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AdminRoleTargets\n    properties:\n      userId: \u003cuser_id\u003e\n      roleType: APP_ADMIN\n      apps:\n        - oidc_client.\u003capp_id\u003e\n        - facebook\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/adminRoleTargets:AdminRoleTargets example \u003cuser_id\u003e/\u003crole_type\u003e\n```\n\n",
            "properties": {
                "apps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of app names (name represents set of app instances) or a combination of app name and app instance ID (like 'salesforce' or 'facebook.0oapsqQ6dv19pqyEo0g3')\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of group IDs. Conflicts with apps\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "ID of a role\n"
                },
                "roleType": {
                    "type": "string",
                    "description": "Type of the role that is assigned to the user and supports optional targets. See [API Docs](https://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles)\n"
                },
                "userId": {
                    "type": "string",
                    "description": "User associated with the role\n"
                }
            },
            "required": [
                "roleId",
                "roleType",
                "userId"
            ],
            "inputProperties": {
                "apps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of app names (name represents set of app instances) or a combination of app name and app instance ID (like 'salesforce' or 'facebook.0oapsqQ6dv19pqyEo0g3')\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of group IDs. Conflicts with apps\n"
                },
                "roleType": {
                    "type": "string",
                    "description": "Type of the role that is assigned to the user and supports optional targets. See [API Docs](https://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles)\n",
                    "willReplaceOnChanges": true
                },
                "userId": {
                    "type": "string",
                    "description": "User associated with the role\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "roleType",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AdminRoleTargets resources.\n",
                "properties": {
                    "apps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of app names (name represents set of app instances) or a combination of app name and app instance ID (like 'salesforce' or 'facebook.0oapsqQ6dv19pqyEo0g3')\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of group IDs. Conflicts with apps\n"
                    },
                    "roleId": {
                        "type": "string",
                        "description": "ID of a role\n"
                    },
                    "roleType": {
                        "type": "string",
                        "description": "Type of the role that is assigned to the user and supports optional targets. See [API Docs](https://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles)\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "User associated with the role\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appGroupAssignments:AppGroupAssignments": {
            "description": "Assigns groups to an application. This resource allows you to create multiple App Group assignments.\n\n**Important**: Do not use in conjunction with for_each\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AppGroupAssignments(\"example\", {\n    appId: \"\u003capp id\u003e\",\n    groups: [\n        {\n            id: \"\u003cgroup id\u003e\",\n            priority: 1,\n        },\n        {\n            id: \"\u003canother group id\u003e\",\n            priority: 2,\n            profile: JSON.stringify({\n                \"application profile field\": \"application profile value\",\n            }),\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_okta as okta\n\nexample = okta.AppGroupAssignments(\"example\",\n    app_id=\"\u003capp id\u003e\",\n    groups=[\n        {\n            \"id\": \"\u003cgroup id\u003e\",\n            \"priority\": 1,\n        },\n        {\n            \"id\": \"\u003canother group id\u003e\",\n            \"priority\": 2,\n            \"profile\": json.dumps({\n                \"application profile field\": \"application profile value\",\n            }),\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AppGroupAssignments(\"example\", new()\n    {\n        AppId = \"\u003capp id\u003e\",\n        Groups = new[]\n        {\n            new Okta.Inputs.AppGroupAssignmentsGroupArgs\n            {\n                Id = \"\u003cgroup id\u003e\",\n                Priority = 1,\n            },\n            new Okta.Inputs.AppGroupAssignmentsGroupArgs\n            {\n                Id = \"\u003canother group id\u003e\",\n                Priority = 2,\n                Profile = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"application profile field\"] = \"application profile value\",\n                }),\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"application profile field\": \"application profile value\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = okta.NewAppGroupAssignments(ctx, \"example\", \u0026okta.AppGroupAssignmentsArgs{\n\t\t\tAppId: pulumi.String(\"\u003capp id\u003e\"),\n\t\t\tGroups: okta.AppGroupAssignmentsGroupArray{\n\t\t\t\t\u0026okta.AppGroupAssignmentsGroupArgs{\n\t\t\t\t\tId:       pulumi.String(\"\u003cgroup id\u003e\"),\n\t\t\t\t\tPriority: pulumi.Int(1),\n\t\t\t\t},\n\t\t\t\t\u0026okta.AppGroupAssignmentsGroupArgs{\n\t\t\t\t\tId:       pulumi.String(\"\u003canother group id\u003e\"),\n\t\t\t\t\tPriority: pulumi.Int(2),\n\t\t\t\t\tProfile:  pulumi.String(json0),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AppGroupAssignments;\nimport com.pulumi.okta.AppGroupAssignmentsArgs;\nimport com.pulumi.okta.inputs.AppGroupAssignmentsGroupArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AppGroupAssignments(\"example\", AppGroupAssignmentsArgs.builder()\n            .appId(\"\u003capp id\u003e\")\n            .groups(            \n                AppGroupAssignmentsGroupArgs.builder()\n                    .id(\"\u003cgroup id\u003e\")\n                    .priority(1)\n                    .build(),\n                AppGroupAssignmentsGroupArgs.builder()\n                    .id(\"\u003canother group id\u003e\")\n                    .priority(2)\n                    .profile(serializeJson(\n                        jsonObject(\n                            jsonProperty(\"application profile field\", \"application profile value\")\n                        )))\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AppGroupAssignments\n    properties:\n      appId: \u003capp id\u003e\n      groups:\n        - id: \u003cgroup id\u003e\n          priority: 1\n        - id: \u003canother group id\u003e\n          priority: 2\n          profile:\n            fn::toJSON:\n              application profile field: application profile value\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/appGroupAssignments:AppGroupAssignments example \u003capp_id\u003e\n```\n\n",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The ID of the application to assign a group to.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppGroupAssignmentsGroup:AppGroupAssignmentsGroup"
                    },
                    "description": "A group to assign to this application\n"
                }
            },
            "required": [
                "appId"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The ID of the application to assign a group to.\n",
                    "willReplaceOnChanges": true
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppGroupAssignmentsGroup:AppGroupAssignmentsGroup"
                    },
                    "description": "A group to assign to this application\n"
                }
            },
            "requiredInputs": [
                "appId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppGroupAssignments resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The ID of the application to assign a group to.\n",
                        "willReplaceOnChanges": true
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/AppGroupAssignmentsGroup:AppGroupAssignmentsGroup"
                        },
                        "description": "A group to assign to this application\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appOauthApiScope:AppOauthApiScope": {
            "description": "Manages API scopes for OAuth applications. \nThis resource allows you to grant or revoke API scopes for OAuth2 applications within your organization.\nNote: you have to create an application before using this resource.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AppOauthApiScope(\"example\", {\n    appId: \"\u003capplication_id\u003e\",\n    issuer: \"\u003cyour org domain\u003e\",\n    scopes: [\n        \"okta.users.read\",\n        \"okta.users.manage\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AppOauthApiScope(\"example\",\n    app_id=\"\u003capplication_id\u003e\",\n    issuer=\"\u003cyour org domain\u003e\",\n    scopes=[\n        \"okta.users.read\",\n        \"okta.users.manage\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AppOauthApiScope(\"example\", new()\n    {\n        AppId = \"\u003capplication_id\u003e\",\n        Issuer = \"\u003cyour org domain\u003e\",\n        Scopes = new[]\n        {\n            \"okta.users.read\",\n            \"okta.users.manage\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAppOauthApiScope(ctx, \"example\", \u0026okta.AppOauthApiScopeArgs{\n\t\t\tAppId:  pulumi.String(\"\u003capplication_id\u003e\"),\n\t\t\tIssuer: pulumi.String(\"\u003cyour org domain\u003e\"),\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"okta.users.read\"),\n\t\t\t\tpulumi.String(\"okta.users.manage\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AppOauthApiScope;\nimport com.pulumi.okta.AppOauthApiScopeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AppOauthApiScope(\"example\", AppOauthApiScopeArgs.builder()\n            .appId(\"\u003capplication_id\u003e\")\n            .issuer(\"\u003cyour org domain\u003e\")\n            .scopes(            \n                \"okta.users.read\",\n                \"okta.users.manage\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AppOauthApiScope\n    properties:\n      appId: \u003capplication_id\u003e\n      issuer: \u003cyour org domain\u003e\n      scopes:\n        - okta.users.read\n        - okta.users.manage\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/appOauthApiScope:AppOauthApiScope example \u003capp_id\u003e\n```\n\n",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "ID of the application.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The issuer of your Org Authorization Server, your Org URL.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of the application for which consent is granted.\n"
                }
            },
            "required": [
                "appId",
                "issuer",
                "scopes"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "ID of the application.\n",
                    "willReplaceOnChanges": true
                },
                "issuer": {
                    "type": "string",
                    "description": "The issuer of your Org Authorization Server, your Org URL.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of the application for which consent is granted.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "issuer",
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppOauthApiScope resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "ID of the application.\n",
                        "willReplaceOnChanges": true
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The issuer of your Org Authorization Server, your Org URL.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Scopes of the application for which consent is granted.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appSamlAppSettings:AppSamlAppSettings": {
            "description": "Manages app settings of the SAML application.\nThis resource allows you to manage app settings of the SAML Application . It's basically the same as\napp_settings_json field in okta.app.Saml resource and can be used in cases where settings require to be managed separately.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.app.Saml(\"test\", {\n    preconfiguredApp: \"amazon_aws\",\n    label: \"Amazon AWS\",\n    status: \"ACTIVE\",\n});\nconst testAppSamlAppSettings = new okta.AppSamlAppSettings(\"test\", {\n    appId: test.id,\n    settings: JSON.stringify({\n        appFilter: \"okta\",\n        awsEnvironmentType: \"aws.amazon\",\n        groupFilter: \"aws_(?{{accountid}}\\\\\\\\d+)_(?{{role}}[a-zA-Z0-9+=,.@\\\\\\\\-_]+)\",\n        joinAllRoles: false,\n        loginURL: \"https://console.aws.amazon.com/ec2/home\",\n        roleValuePattern: \"arn:aws:iam::${accountid}:saml-provider/OKTA,arn:aws:iam::${accountid}:role/${role}\",\n        sessionDuration: 3200,\n        useGroupMapping: false,\n    }),\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_okta as okta\n\ntest = okta.app.Saml(\"test\",\n    preconfigured_app=\"amazon_aws\",\n    label=\"Amazon AWS\",\n    status=\"ACTIVE\")\ntest_app_saml_app_settings = okta.AppSamlAppSettings(\"test\",\n    app_id=test.id,\n    settings=json.dumps({\n        \"appFilter\": \"okta\",\n        \"awsEnvironmentType\": \"aws.amazon\",\n        \"groupFilter\": \"aws_(?{{accountid}}\\\\\\\\d+)_(?{{role}}[a-zA-Z0-9+=,.@\\\\\\\\-_]+)\",\n        \"joinAllRoles\": False,\n        \"loginURL\": \"https://console.aws.amazon.com/ec2/home\",\n        \"roleValuePattern\": \"arn:aws:iam::${accountid}:saml-provider/OKTA,arn:aws:iam::${accountid}:role/${role}\",\n        \"sessionDuration\": 3200,\n        \"useGroupMapping\": False,\n    }))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Okta.App.Saml(\"test\", new()\n    {\n        PreconfiguredApp = \"amazon_aws\",\n        Label = \"Amazon AWS\",\n        Status = \"ACTIVE\",\n    });\n\n    var testAppSamlAppSettings = new Okta.AppSamlAppSettings(\"test\", new()\n    {\n        AppId = test.Id,\n        Settings = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"appFilter\"] = \"okta\",\n            [\"awsEnvironmentType\"] = \"aws.amazon\",\n            [\"groupFilter\"] = \"aws_(?{{accountid}}\\\\\\\\d+)_(?{{role}}[a-zA-Z0-9+=,.@\\\\\\\\-_]+)\",\n            [\"joinAllRoles\"] = false,\n            [\"loginURL\"] = \"https://console.aws.amazon.com/ec2/home\",\n            [\"roleValuePattern\"] = \"arn:aws:iam::${accountid}:saml-provider/OKTA,arn:aws:iam::${accountid}:role/${role}\",\n            [\"sessionDuration\"] = 3200,\n            [\"useGroupMapping\"] = false,\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := app.NewSaml(ctx, \"test\", \u0026app.SamlArgs{\n\t\t\tPreconfiguredApp: pulumi.String(\"amazon_aws\"),\n\t\t\tLabel:            pulumi.String(\"Amazon AWS\"),\n\t\t\tStatus:           pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"appFilter\":          \"okta\",\n\t\t\t\"awsEnvironmentType\": \"aws.amazon\",\n\t\t\t\"groupFilter\":        \"aws_(?{{accountid}}\\\\\\\\d+)_(?{{role}}[a-zA-Z0-9+=,.@\\\\\\\\-_]+)\",\n\t\t\t\"joinAllRoles\":       false,\n\t\t\t\"loginURL\":           \"https://console.aws.amazon.com/ec2/home\",\n\t\t\t\"roleValuePattern\":   \"arn:aws:iam::${accountid}:saml-provider/OKTA,arn:aws:iam::${accountid}:role/${role}\",\n\t\t\t\"sessionDuration\":    3200,\n\t\t\t\"useGroupMapping\":    false,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = okta.NewAppSamlAppSettings(ctx, \"test\", \u0026okta.AppSamlAppSettingsArgs{\n\t\t\tAppId:    test.ID(),\n\t\t\tSettings: pulumi.String(json0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.Saml;\nimport com.pulumi.okta.app.SamlArgs;\nimport com.pulumi.okta.AppSamlAppSettings;\nimport com.pulumi.okta.AppSamlAppSettingsArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new Saml(\"test\", SamlArgs.builder()\n            .preconfiguredApp(\"amazon_aws\")\n            .label(\"Amazon AWS\")\n            .status(\"ACTIVE\")\n            .build());\n\n        var testAppSamlAppSettings = new AppSamlAppSettings(\"testAppSamlAppSettings\", AppSamlAppSettingsArgs.builder()\n            .appId(test.id())\n            .settings(serializeJson(\n                jsonObject(\n                    jsonProperty(\"appFilter\", \"okta\"),\n                    jsonProperty(\"awsEnvironmentType\", \"aws.amazon\"),\n                    jsonProperty(\"groupFilter\", \"aws_(?{{accountid}}\\\\\\\\d+)_(?{{role}}[a-zA-Z0-9+=,.@\\\\\\\\-_]+)\"),\n                    jsonProperty(\"joinAllRoles\", false),\n                    jsonProperty(\"loginURL\", \"https://console.aws.amazon.com/ec2/home\"),\n                    jsonProperty(\"roleValuePattern\", \"arn:aws:iam::${accountid}:saml-provider/OKTA,arn:aws:iam::${accountid}:role/${role}\"),\n                    jsonProperty(\"sessionDuration\", 3200),\n                    jsonProperty(\"useGroupMapping\", false)\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: okta:app:Saml\n    properties:\n      preconfiguredApp: amazon_aws\n      label: Amazon AWS\n      status: ACTIVE\n  testAppSamlAppSettings:\n    type: okta:AppSamlAppSettings\n    name: test\n    properties:\n      appId: ${test.id}\n      settings:\n        fn::toJSON:\n          appFilter: okta\n          awsEnvironmentType: aws.amazon\n          groupFilter: aws_(?{{accountid}}\\\\d+)_(?{{role}}[a-zA-Z0-9+=,.@\\\\-_]+)\n          joinAllRoles: false\n          loginURL: https://console.aws.amazon.com/ec2/home\n          roleValuePattern: arn:aws:iam::$${accountid}:saml-provider/OKTA,arn:aws:iam::$${accountid}:role/$${role}\n          sessionDuration: 3200\n          useGroupMapping: false\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/appSamlAppSettings:AppSamlAppSettings example \u003capp_id\u003e\n```\n\n",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "ID of the application.\n"
                },
                "settings": {
                    "type": "string",
                    "description": "Application settings in JSON format\n"
                }
            },
            "required": [
                "appId",
                "settings"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "ID of the application.\n",
                    "willReplaceOnChanges": true
                },
                "settings": {
                    "type": "string",
                    "description": "Application settings in JSON format\n"
                }
            },
            "requiredInputs": [
                "appId",
                "settings"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSamlAppSettings resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "ID of the application.\n",
                        "willReplaceOnChanges": true
                    },
                    "settings": {
                        "type": "string",
                        "description": "Application settings in JSON format\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appSharedCredentials:AppSharedCredentials": {
            "description": "Creates a SWA shared credentials app.\nThis resource allows you to create and configure SWA shared credentials app.\n\u003e During an apply if there is change in 'status' the app will first be\nactivated or deactivated in accordance with the 'status' change. Then, all\nother arguments that changed will be applied.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AppSharedCredentials(\"example\", {\n    label: \"Example App\",\n    status: \"ACTIVE\",\n    buttonField: \"btn-login\",\n    usernameField: \"txtbox-username\",\n    passwordField: \"txtbox-password\",\n    url: \"https://example.com/login.html\",\n    redirectUrl: \"https://example.com/redirect_url\",\n    checkbox: \"checkbox_red\",\n    userNameTemplate: \"user.firstName\",\n    userNameTemplateType: \"CUSTOM\",\n    userNameTemplateSuffix: \"hello\",\n    sharedPassword: \"sharedpass\",\n    sharedUsername: \"sharedusername\",\n    accessibilitySelfService: true,\n    accessibilityErrorRedirectUrl: \"https://example.com/redirect_url_1\",\n    accessibilityLoginRedirectUrl: \"https://example.com/redirect_url_2\",\n    autoSubmitToolbar: true,\n    hideIos: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AppSharedCredentials(\"example\",\n    label=\"Example App\",\n    status=\"ACTIVE\",\n    button_field=\"btn-login\",\n    username_field=\"txtbox-username\",\n    password_field=\"txtbox-password\",\n    url=\"https://example.com/login.html\",\n    redirect_url=\"https://example.com/redirect_url\",\n    checkbox=\"checkbox_red\",\n    user_name_template=\"user.firstName\",\n    user_name_template_type=\"CUSTOM\",\n    user_name_template_suffix=\"hello\",\n    shared_password=\"sharedpass\",\n    shared_username=\"sharedusername\",\n    accessibility_self_service=True,\n    accessibility_error_redirect_url=\"https://example.com/redirect_url_1\",\n    accessibility_login_redirect_url=\"https://example.com/redirect_url_2\",\n    auto_submit_toolbar=True,\n    hide_ios=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AppSharedCredentials(\"example\", new()\n    {\n        Label = \"Example App\",\n        Status = \"ACTIVE\",\n        ButtonField = \"btn-login\",\n        UsernameField = \"txtbox-username\",\n        PasswordField = \"txtbox-password\",\n        Url = \"https://example.com/login.html\",\n        RedirectUrl = \"https://example.com/redirect_url\",\n        Checkbox = \"checkbox_red\",\n        UserNameTemplate = \"user.firstName\",\n        UserNameTemplateType = \"CUSTOM\",\n        UserNameTemplateSuffix = \"hello\",\n        SharedPassword = \"sharedpass\",\n        SharedUsername = \"sharedusername\",\n        AccessibilitySelfService = true,\n        AccessibilityErrorRedirectUrl = \"https://example.com/redirect_url_1\",\n        AccessibilityLoginRedirectUrl = \"https://example.com/redirect_url_2\",\n        AutoSubmitToolbar = true,\n        HideIos = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAppSharedCredentials(ctx, \"example\", \u0026okta.AppSharedCredentialsArgs{\n\t\t\tLabel:                         pulumi.String(\"Example App\"),\n\t\t\tStatus:                        pulumi.String(\"ACTIVE\"),\n\t\t\tButtonField:                   pulumi.String(\"btn-login\"),\n\t\t\tUsernameField:                 pulumi.String(\"txtbox-username\"),\n\t\t\tPasswordField:                 pulumi.String(\"txtbox-password\"),\n\t\t\tUrl:                           pulumi.String(\"https://example.com/login.html\"),\n\t\t\tRedirectUrl:                   pulumi.String(\"https://example.com/redirect_url\"),\n\t\t\tCheckbox:                      pulumi.String(\"checkbox_red\"),\n\t\t\tUserNameTemplate:              pulumi.String(\"user.firstName\"),\n\t\t\tUserNameTemplateType:          pulumi.String(\"CUSTOM\"),\n\t\t\tUserNameTemplateSuffix:        pulumi.String(\"hello\"),\n\t\t\tSharedPassword:                pulumi.String(\"sharedpass\"),\n\t\t\tSharedUsername:                pulumi.String(\"sharedusername\"),\n\t\t\tAccessibilitySelfService:      pulumi.Bool(true),\n\t\t\tAccessibilityErrorRedirectUrl: pulumi.String(\"https://example.com/redirect_url_1\"),\n\t\t\tAccessibilityLoginRedirectUrl: pulumi.String(\"https://example.com/redirect_url_2\"),\n\t\t\tAutoSubmitToolbar:             pulumi.Bool(true),\n\t\t\tHideIos:                       pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AppSharedCredentials;\nimport com.pulumi.okta.AppSharedCredentialsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AppSharedCredentials(\"example\", AppSharedCredentialsArgs.builder()\n            .label(\"Example App\")\n            .status(\"ACTIVE\")\n            .buttonField(\"btn-login\")\n            .usernameField(\"txtbox-username\")\n            .passwordField(\"txtbox-password\")\n            .url(\"https://example.com/login.html\")\n            .redirectUrl(\"https://example.com/redirect_url\")\n            .checkbox(\"checkbox_red\")\n            .userNameTemplate(\"user.firstName\")\n            .userNameTemplateType(\"CUSTOM\")\n            .userNameTemplateSuffix(\"hello\")\n            .sharedPassword(\"sharedpass\")\n            .sharedUsername(\"sharedusername\")\n            .accessibilitySelfService(true)\n            .accessibilityErrorRedirectUrl(\"https://example.com/redirect_url_1\")\n            .accessibilityLoginRedirectUrl(\"https://example.com/redirect_url_2\")\n            .autoSubmitToolbar(true)\n            .hideIos(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AppSharedCredentials\n    properties:\n      label: Example App\n      status: ACTIVE\n      buttonField: btn-login\n      usernameField: txtbox-username\n      passwordField: txtbox-password\n      url: https://example.com/login.html\n      redirectUrl: https://example.com/redirect_url\n      checkbox: checkbox_red\n      userNameTemplate: user.firstName\n      userNameTemplateType: CUSTOM\n      userNameTemplateSuffix: hello\n      sharedPassword: sharedpass\n      sharedUsername: sharedusername\n      accessibilitySelfService: true\n      accessibilityErrorRedirectUrl: https://example.com/redirect_url_1\n      accessibilityLoginRedirectUrl: https://example.com/redirect_url_2\n      autoSubmitToolbar: true\n      hideIos: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/appSharedCredentials:AppSharedCredentials example \u003capp_id\u003e\n```\n\n",
            "properties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "buttonField": {
                    "type": "string",
                    "description": "Login button field\n"
                },
                "checkbox": {
                    "type": "string",
                    "description": "CSS selector for the checkbox\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of the application's logo\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the app.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Name of application from the Okta Integration Network, if not included a custom app will be created.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "Secondary URL of the sign-in page for this app\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "signOnMode": {
                    "type": "string",
                    "description": "Sign on mode of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the sign-in page for this app.\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regular expression that further restricts url to the specified regular expression.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `${source.login}`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `BUILT_IN`\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field\n"
                }
            },
            "required": [
                "label",
                "logoUrl",
                "name",
                "signOnMode"
            ],
            "inputProperties": {
                "accessibilityErrorRedirectUrl": {
                    "type": "string",
                    "description": "Custom error page URL\n"
                },
                "accessibilityLoginRedirectUrl": {
                    "type": "string",
                    "description": "Custom login page URL\n"
                },
                "accessibilitySelfService": {
                    "type": "boolean",
                    "description": "Enable self service. Default is `false`\n"
                },
                "adminNote": {
                    "type": "string",
                    "description": "Application notes for admins.\n"
                },
                "appLinksJson": {
                    "type": "string",
                    "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                },
                "autoSubmitToolbar": {
                    "type": "boolean",
                    "description": "Display auto submit toolbar\n"
                },
                "buttonField": {
                    "type": "string",
                    "description": "Login button field\n"
                },
                "checkbox": {
                    "type": "string",
                    "description": "CSS selector for the checkbox\n"
                },
                "enduserNote": {
                    "type": "string",
                    "description": "Application notes for end users.\n"
                },
                "hideIos": {
                    "type": "boolean",
                    "description": "Do not display application icon on mobile app\n"
                },
                "hideWeb": {
                    "type": "boolean",
                    "description": "Do not display application icon to users\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Application's display name.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                },
                "passwordField": {
                    "type": "string",
                    "description": "Login password field\n"
                },
                "preconfiguredApp": {
                    "type": "string",
                    "description": "Name of application from the Okta Integration Network, if not included a custom app will be created.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "Secondary URL of the sign-in page for this app\n"
                },
                "sharedPassword": {
                    "type": "string",
                    "description": "Shared password, required for certain schemes.\n"
                },
                "sharedUsername": {
                    "type": "string",
                    "description": "Shared username, required for certain schemes.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of application. By default, it is `ACTIVE`\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the sign-in page for this app.\n"
                },
                "urlRegex": {
                    "type": "string",
                    "description": "A regular expression that further restricts url to the specified regular expression.\n"
                },
                "userNameTemplate": {
                    "type": "string",
                    "description": "Username template. Default: `${source.login}`\n"
                },
                "userNameTemplatePushStatus": {
                    "type": "string",
                    "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                },
                "userNameTemplateSuffix": {
                    "type": "string",
                    "description": "Username template suffix\n"
                },
                "userNameTemplateType": {
                    "type": "string",
                    "description": "Username template type. Default: `BUILT_IN`\n"
                },
                "usernameField": {
                    "type": "string",
                    "description": "Login username field\n"
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSharedCredentials resources.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "type": "string",
                        "description": "Custom error page URL\n"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "type": "string",
                        "description": "Custom login page URL\n"
                    },
                    "accessibilitySelfService": {
                        "type": "boolean",
                        "description": "Enable self service. Default is `false`\n"
                    },
                    "adminNote": {
                        "type": "string",
                        "description": "Application notes for admins.\n"
                    },
                    "appLinksJson": {
                        "type": "string",
                        "description": "Displays specific appLinks for the app. The value for each application link should be boolean.\n"
                    },
                    "autoSubmitToolbar": {
                        "type": "boolean",
                        "description": "Display auto submit toolbar\n"
                    },
                    "buttonField": {
                        "type": "string",
                        "description": "Login button field\n"
                    },
                    "checkbox": {
                        "type": "string",
                        "description": "CSS selector for the checkbox\n"
                    },
                    "enduserNote": {
                        "type": "string",
                        "description": "Application notes for end users.\n"
                    },
                    "hideIos": {
                        "type": "boolean",
                        "description": "Do not display application icon on mobile app\n"
                    },
                    "hideWeb": {
                        "type": "boolean",
                        "description": "Do not display application icon to users\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Application's display name.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of the application's logo\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the app.\n"
                    },
                    "passwordField": {
                        "type": "string",
                        "description": "Login password field\n"
                    },
                    "preconfiguredApp": {
                        "type": "string",
                        "description": "Name of application from the Okta Integration Network, if not included a custom app will be created.\n"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "description": "Secondary URL of the sign-in page for this app\n"
                    },
                    "sharedPassword": {
                        "type": "string",
                        "description": "Shared password, required for certain schemes.\n"
                    },
                    "sharedUsername": {
                        "type": "string",
                        "description": "Shared username, required for certain schemes.\n"
                    },
                    "signOnMode": {
                        "type": "string",
                        "description": "Sign on mode of application.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of application. By default, it is `ACTIVE`\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the sign-in page for this app.\n"
                    },
                    "urlRegex": {
                        "type": "string",
                        "description": "A regular expression that further restricts url to the specified regular expression.\n"
                    },
                    "userNameTemplate": {
                        "type": "string",
                        "description": "Username template. Default: `${source.login}`\n"
                    },
                    "userNameTemplatePushStatus": {
                        "type": "string",
                        "description": "Push username on update. Valid values: `PUSH` and `DONT_PUSH`\n"
                    },
                    "userNameTemplateSuffix": {
                        "type": "string",
                        "description": "Username template suffix\n"
                    },
                    "userNameTemplateType": {
                        "type": "string",
                        "description": "Username template type. Default: `BUILT_IN`\n"
                    },
                    "usernameField": {
                        "type": "string",
                        "description": "Login username field\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appSignonPolicy:AppSignonPolicy": {
            "description": "## Example Usage\n\n## Import\n\n```sh\n$ pulumi import okta:index/appSignonPolicy:AppSignonPolicy example \u003cpolicy_id\u003e\n```\n\n",
            "properties": {
                "catchAll": {
                    "type": "boolean",
                    "description": "If false, the default rule of the policy is set access to `DENY`. Otherwise default behavior of the default rule is to leave access at `ALLOW`.  **WARNING** setting this attribute to false changes policy rule's default behavior. Use at your own risk. This is only applied during creation and does not affect import or update.\n"
                },
                "defaultRuleId": {
                    "type": "string",
                    "description": "Default rule (system=true) id of the policy\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Specifies the order in which this policy is evaluated in relation to the other policies.\n"
                }
            },
            "required": [
                "catchAll",
                "defaultRuleId",
                "description",
                "name",
                "priority"
            ],
            "inputProperties": {
                "catchAll": {
                    "type": "boolean",
                    "description": "If false, the default rule of the policy is set access to `DENY`. Otherwise default behavior of the default rule is to leave access at `ALLOW`.  **WARNING** setting this attribute to false changes policy rule's default behavior. Use at your own risk. This is only applied during creation and does not affect import or update.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Specifies the order in which this policy is evaluated in relation to the other policies.\n"
                }
            },
            "requiredInputs": [
                "description"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSignonPolicy resources.\n",
                "properties": {
                    "catchAll": {
                        "type": "boolean",
                        "description": "If false, the default rule of the policy is set access to `DENY`. Otherwise default behavior of the default rule is to leave access at `ALLOW`.  **WARNING** setting this attribute to false changes policy rule's default behavior. Use at your own risk. This is only applied during creation and does not affect import or update.\n"
                    },
                    "defaultRuleId": {
                        "type": "string",
                        "description": "Default rule (system=true) id of the policy\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the policy.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Specifies the order in which this policy is evaluated in relation to the other policies.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appSignonPolicyRule:AppSignonPolicyRule": {
            "description": "Manages a sign-on policy rules for the application.\n\u003e **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.\nThis resource allows you to create and configure a sign-on policy rule for the application.\nA default or 'Catch-all Rule' sign-on policy rule can be imported and managed as a custom rule.\nThe only difference is that these fields are immutable and can not be managed: 'network_connection', 'network_excludes', \n'network_includes', 'platform_include', 'custom_expression', 'device_is_registered', 'device_is_managed', 'users_excluded',\n'users_included', 'groups_excluded', 'groups_included', 'user_types_excluded' and 'user_types_included'.\n\n## Import\n\n```sh\n$ pulumi import okta:index/appSignonPolicyRule:AppSignonPolicyRule example \u003cpolicy_id\u003e/\u003crule_id\u003e\n```\n\n",
            "properties": {
                "access": {
                    "type": "string",
                    "description": "Allow or deny access based on the rule conditions: ALLOW or DENY\n"
                },
                "chains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Authentication method chains. Only supports 5 items in the array. Each chain can support maximum 3 steps. To be used only with verification method type `AUTH_METHOD_CHAIN`.\n"
                },
                "constraints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array that contains nested Authenticator Constraint objects that are organized by the Authenticator class\n"
                },
                "customExpression": {
                    "type": "string",
                    "description": "This is an optional advanced setting. If the expression is formatted incorrectly or conflicts with conditions set above, the rule may not match any users.\n"
                },
                "deviceAssurancesIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of device assurance IDs to include\n"
                },
                "deviceIsManaged": {
                    "type": "boolean",
                    "description": "If the device is managed. A device is managed if it's managed by a device management system. When managed is passed, registered must also be included and must be set to true.\n"
                },
                "deviceIsRegistered": {
                    "type": "boolean",
                    "description": "If the device is registered. A device is registered if the User enrolls with Okta Verify that is installed on the device.\n"
                },
                "factorMode": {
                    "type": "string",
                    "description": "The number of factors required to satisfy this assurance level\n"
                },
                "groupsExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of group IDs to exclude\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of group IDs to include\n"
                },
                "inactivityPeriod": {
                    "type": "string",
                    "description": "The inactivity duration after which the end user must re-authenticate. Use the ISO 8601 Period format for recurring time intervals.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: ANYWHERE, ZONE, ON*NETWORK, or OFF*NETWORK.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The zones to exclude\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The zones to include\n"
                },
                "platformIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppSignonPolicyRulePlatformInclude:AppSignonPolicyRulePlatformInclude"
                    }
                },
                "policyId": {
                    "type": "string",
                    "description": "ID of the policy\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the rule.\n"
                },
                "reAuthenticationFrequency": {
                    "type": "string",
                    "description": "The duration after which the end user must re-authenticate, regardless of user activity. Use the ISO 8601 Period format for recurring time intervals. PT0S - Every sign-in attempt, PT43800H - Once per session\n"
                },
                "riskScore": {
                    "type": "string",
                    "description": "The risk score specifies a particular level of risk to match on: ANY, LOW, MEDIUM, HIGH\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the rule\n"
                },
                "system": {
                    "type": "boolean",
                    "description": "Often the `Catch-all Rule` this rule is the system (default) rule for its associated policy\n"
                },
                "type": {
                    "type": "string",
                    "description": "The Verification Method type\n"
                },
                "userTypesExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User Type IDs to exclude\n"
                },
                "userTypesIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User Type IDs to include\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to exclude\n"
                },
                "usersIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to include\n"
                }
            },
            "required": [
                "name",
                "policyId",
                "riskScore",
                "system"
            ],
            "inputProperties": {
                "access": {
                    "type": "string",
                    "description": "Allow or deny access based on the rule conditions: ALLOW or DENY\n"
                },
                "chains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Authentication method chains. Only supports 5 items in the array. Each chain can support maximum 3 steps. To be used only with verification method type `AUTH_METHOD_CHAIN`.\n"
                },
                "constraints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array that contains nested Authenticator Constraint objects that are organized by the Authenticator class\n"
                },
                "customExpression": {
                    "type": "string",
                    "description": "This is an optional advanced setting. If the expression is formatted incorrectly or conflicts with conditions set above, the rule may not match any users.\n"
                },
                "deviceAssurancesIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of device assurance IDs to include\n"
                },
                "deviceIsManaged": {
                    "type": "boolean",
                    "description": "If the device is managed. A device is managed if it's managed by a device management system. When managed is passed, registered must also be included and must be set to true.\n"
                },
                "deviceIsRegistered": {
                    "type": "boolean",
                    "description": "If the device is registered. A device is registered if the User enrolls with Okta Verify that is installed on the device.\n"
                },
                "factorMode": {
                    "type": "string",
                    "description": "The number of factors required to satisfy this assurance level\n"
                },
                "groupsExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of group IDs to exclude\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of group IDs to include\n"
                },
                "inactivityPeriod": {
                    "type": "string",
                    "description": "The inactivity duration after which the end user must re-authenticate. Use the ISO 8601 Period format for recurring time intervals.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: ANYWHERE, ZONE, ON*NETWORK, or OFF*NETWORK.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The zones to exclude\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The zones to include\n"
                },
                "platformIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppSignonPolicyRulePlatformInclude:AppSignonPolicyRulePlatformInclude"
                    }
                },
                "policyId": {
                    "type": "string",
                    "description": "ID of the policy\n",
                    "willReplaceOnChanges": true
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the rule.\n"
                },
                "reAuthenticationFrequency": {
                    "type": "string",
                    "description": "The duration after which the end user must re-authenticate, regardless of user activity. Use the ISO 8601 Period format for recurring time intervals. PT0S - Every sign-in attempt, PT43800H - Once per session\n"
                },
                "riskScore": {
                    "type": "string",
                    "description": "The risk score specifies a particular level of risk to match on: ANY, LOW, MEDIUM, HIGH\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the rule\n"
                },
                "type": {
                    "type": "string",
                    "description": "The Verification Method type\n"
                },
                "userTypesExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User Type IDs to exclude\n"
                },
                "userTypesIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User Type IDs to include\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to exclude\n"
                },
                "usersIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to include\n"
                }
            },
            "requiredInputs": [
                "policyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSignonPolicyRule resources.\n",
                "properties": {
                    "access": {
                        "type": "string",
                        "description": "Allow or deny access based on the rule conditions: ALLOW or DENY\n"
                    },
                    "chains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Authentication method chains. Only supports 5 items in the array. Each chain can support maximum 3 steps. To be used only with verification method type `AUTH_METHOD_CHAIN`.\n"
                    },
                    "constraints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array that contains nested Authenticator Constraint objects that are organized by the Authenticator class\n"
                    },
                    "customExpression": {
                        "type": "string",
                        "description": "This is an optional advanced setting. If the expression is formatted incorrectly or conflicts with conditions set above, the rule may not match any users.\n"
                    },
                    "deviceAssurancesIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of device assurance IDs to include\n"
                    },
                    "deviceIsManaged": {
                        "type": "boolean",
                        "description": "If the device is managed. A device is managed if it's managed by a device management system. When managed is passed, registered must also be included and must be set to true.\n"
                    },
                    "deviceIsRegistered": {
                        "type": "boolean",
                        "description": "If the device is registered. A device is registered if the User enrolls with Okta Verify that is installed on the device.\n"
                    },
                    "factorMode": {
                        "type": "string",
                        "description": "The number of factors required to satisfy this assurance level\n"
                    },
                    "groupsExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of group IDs to exclude\n"
                    },
                    "groupsIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of group IDs to include\n"
                    },
                    "inactivityPeriod": {
                        "type": "string",
                        "description": "The inactivity duration after which the end user must re-authenticate. Use the ISO 8601 Period format for recurring time intervals.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Rule Name\n"
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "Network selection mode: ANYWHERE, ZONE, ON*NETWORK, or OFF*NETWORK.\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The zones to exclude\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The zones to include\n"
                    },
                    "platformIncludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/AppSignonPolicyRulePlatformInclude:AppSignonPolicyRulePlatformInclude"
                        }
                    },
                    "policyId": {
                        "type": "string",
                        "description": "ID of the policy\n",
                        "willReplaceOnChanges": true
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of the rule.\n"
                    },
                    "reAuthenticationFrequency": {
                        "type": "string",
                        "description": "The duration after which the end user must re-authenticate, regardless of user activity. Use the ISO 8601 Period format for recurring time intervals. PT0S - Every sign-in attempt, PT43800H - Once per session\n"
                    },
                    "riskScore": {
                        "type": "string",
                        "description": "The risk score specifies a particular level of risk to match on: ANY, LOW, MEDIUM, HIGH\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the rule\n"
                    },
                    "system": {
                        "type": "boolean",
                        "description": "Often the `Catch-all Rule` this rule is the system (default) rule for its associated policy\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The Verification Method type\n"
                    },
                    "userTypesExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of User Type IDs to exclude\n"
                    },
                    "userTypesIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of User Type IDs to include\n"
                    },
                    "usersExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of User IDs to exclude\n"
                    },
                    "usersIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of User IDs to include\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appUserBaseSchemaProperty:AppUserBaseSchemaProperty": {
            "description": "Manages an Application User Base Schema property. This resource allows you to configure a base app user schema property.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AppUserBaseSchemaProperty(\"example\", {\n    appId: \"\u003capp id\u003e\",\n    index: \"customPropertyName\",\n    title: \"customPropertyName\",\n    type: \"string\",\n    master: \"OKTA\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AppUserBaseSchemaProperty(\"example\",\n    app_id=\"\u003capp id\u003e\",\n    index=\"customPropertyName\",\n    title=\"customPropertyName\",\n    type=\"string\",\n    master=\"OKTA\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AppUserBaseSchemaProperty(\"example\", new()\n    {\n        AppId = \"\u003capp id\u003e\",\n        Index = \"customPropertyName\",\n        Title = \"customPropertyName\",\n        Type = \"string\",\n        Master = \"OKTA\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAppUserBaseSchemaProperty(ctx, \"example\", \u0026okta.AppUserBaseSchemaPropertyArgs{\n\t\t\tAppId:  pulumi.String(\"\u003capp id\u003e\"),\n\t\t\tIndex:  pulumi.String(\"customPropertyName\"),\n\t\t\tTitle:  pulumi.String(\"customPropertyName\"),\n\t\t\tType:   pulumi.String(\"string\"),\n\t\t\tMaster: pulumi.String(\"OKTA\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AppUserBaseSchemaProperty;\nimport com.pulumi.okta.AppUserBaseSchemaPropertyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AppUserBaseSchemaProperty(\"example\", AppUserBaseSchemaPropertyArgs.builder()\n            .appId(\"\u003capp id\u003e\")\n            .index(\"customPropertyName\")\n            .title(\"customPropertyName\")\n            .type(\"string\")\n            .master(\"OKTA\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AppUserBaseSchemaProperty\n    properties:\n      appId: \u003capp id\u003e\n      index: customPropertyName\n      title: customPropertyName\n      type: string\n      master: OKTA\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/appUserBaseSchemaProperty:AppUserBaseSchemaProperty example \u003capp_id\u003e/\u003cproperty_name\u003e\n```\n\n",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The Application's ID the user schema property should be assigned to.\n"
                },
                "index": {
                    "type": "string",
                    "description": "Subschema unique string identifier\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `PROFILE_MASTER` or `OKTA`. Default: `PROFILE_MASTER`\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\\n\\n]+' if present.'\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the subschema is required\n"
                },
                "title": {
                    "type": "string",
                    "description": "Subschema title (display name)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID. By default, it is `default`\n"
                }
            },
            "required": [
                "appId",
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The Application's ID the user schema property should be assigned to.\n"
                },
                "index": {
                    "type": "string",
                    "description": "Subschema unique string identifier\n",
                    "willReplaceOnChanges": true
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `PROFILE_MASTER` or `OKTA`. Default: `PROFILE_MASTER`\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\\n\\n]+' if present.'\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the subschema is required\n"
                },
                "title": {
                    "type": "string",
                    "description": "Subschema title (display name)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`\n",
                    "willReplaceOnChanges": true
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID. By default, it is `default`\n"
                }
            },
            "requiredInputs": [
                "appId",
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppUserBaseSchemaProperty resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The Application's ID the user schema property should be assigned to.\n"
                    },
                    "index": {
                        "type": "string",
                        "description": "Subschema unique string identifier\n",
                        "willReplaceOnChanges": true
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the user schema property. It can be set to `PROFILE_MASTER` or `OKTA`. Default: `PROFILE_MASTER`\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\\n\\n]+' if present.'\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the subschema is required\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Subschema title (display name)\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`\n",
                        "willReplaceOnChanges": true
                    },
                    "userType": {
                        "type": "string",
                        "description": "User type ID. By default, it is `default`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/appUserSchemaProperty:AppUserSchemaProperty": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AppUserSchemaProperty(\"example\", {\n    appId: \"\u003capp id\u003e\",\n    index: \"customPropertyName\",\n    title: \"customPropertyName\",\n    type: \"string\",\n    description: \"My custom property name\",\n    master: \"OKTA\",\n    scope: \"SELF\",\n    arrayEnums: [\n        \"1\",\n        \"2\",\n    ],\n    arrayOneOfs: [\n        {\n            \"const\": \"1\",\n            title: \"one\",\n        },\n        {\n            \"const\": \"2\",\n            title: \"two\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AppUserSchemaProperty(\"example\",\n    app_id=\"\u003capp id\u003e\",\n    index=\"customPropertyName\",\n    title=\"customPropertyName\",\n    type=\"string\",\n    description=\"My custom property name\",\n    master=\"OKTA\",\n    scope=\"SELF\",\n    array_enums=[\n        \"1\",\n        \"2\",\n    ],\n    array_one_ofs=[\n        {\n            \"const\": \"1\",\n            \"title\": \"one\",\n        },\n        {\n            \"const\": \"2\",\n            \"title\": \"two\",\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AppUserSchemaProperty(\"example\", new()\n    {\n        AppId = \"\u003capp id\u003e\",\n        Index = \"customPropertyName\",\n        Title = \"customPropertyName\",\n        Type = \"string\",\n        Description = \"My custom property name\",\n        Master = \"OKTA\",\n        Scope = \"SELF\",\n        ArrayEnums = new[]\n        {\n            \"1\",\n            \"2\",\n        },\n        ArrayOneOfs = new[]\n        {\n            new Okta.Inputs.AppUserSchemaPropertyArrayOneOfArgs\n            {\n                Const = \"1\",\n                Title = \"one\",\n            },\n            new Okta.Inputs.AppUserSchemaPropertyArrayOneOfArgs\n            {\n                Const = \"2\",\n                Title = \"two\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAppUserSchemaProperty(ctx, \"example\", \u0026okta.AppUserSchemaPropertyArgs{\n\t\t\tAppId:       pulumi.String(\"\u003capp id\u003e\"),\n\t\t\tIndex:       pulumi.String(\"customPropertyName\"),\n\t\t\tTitle:       pulumi.String(\"customPropertyName\"),\n\t\t\tType:        pulumi.String(\"string\"),\n\t\t\tDescription: pulumi.String(\"My custom property name\"),\n\t\t\tMaster:      pulumi.String(\"OKTA\"),\n\t\t\tScope:       pulumi.String(\"SELF\"),\n\t\t\tArrayEnums: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"1\"),\n\t\t\t\tpulumi.String(\"2\"),\n\t\t\t},\n\t\t\tArrayOneOfs: okta.AppUserSchemaPropertyArrayOneOfArray{\n\t\t\t\t\u0026okta.AppUserSchemaPropertyArrayOneOfArgs{\n\t\t\t\t\tConst: pulumi.String(\"1\"),\n\t\t\t\t\tTitle: pulumi.String(\"one\"),\n\t\t\t\t},\n\t\t\t\t\u0026okta.AppUserSchemaPropertyArrayOneOfArgs{\n\t\t\t\t\tConst: pulumi.String(\"2\"),\n\t\t\t\t\tTitle: pulumi.String(\"two\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AppUserSchemaProperty;\nimport com.pulumi.okta.AppUserSchemaPropertyArgs;\nimport com.pulumi.okta.inputs.AppUserSchemaPropertyArrayOneOfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AppUserSchemaProperty(\"example\", AppUserSchemaPropertyArgs.builder()\n            .appId(\"\u003capp id\u003e\")\n            .index(\"customPropertyName\")\n            .title(\"customPropertyName\")\n            .type(\"string\")\n            .description(\"My custom property name\")\n            .master(\"OKTA\")\n            .scope(\"SELF\")\n            .arrayEnums(            \n                \"1\",\n                \"2\")\n            .arrayOneOfs(            \n                AppUserSchemaPropertyArrayOneOfArgs.builder()\n                    .const_(\"1\")\n                    .title(\"one\")\n                    .build(),\n                AppUserSchemaPropertyArrayOneOfArgs.builder()\n                    .const_(\"2\")\n                    .title(\"two\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AppUserSchemaProperty\n    properties:\n      appId: \u003capp id\u003e\n      index: customPropertyName\n      title: customPropertyName\n      type: string\n      description: My custom property name\n      master: OKTA\n      scope: SELF\n      arrayEnums:\n        - '1'\n        - '2'\n      arrayOneOfs:\n        - const: '1'\n          title: one\n        - const: '2'\n          title: two\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/appUserSchemaProperty:AppUserSchemaProperty example \u003capp_id\u003e/\u003cproperty_name\u003e\n```\n\n",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The Application's ID the user custom schema property should be assigned to.\n"
                },
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppUserSchemaPropertyArrayOneOf:AppUserSchemaPropertyArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to. - 'const' - (Required) value mapping to member of 'enum'. - 'title'\n- (Required) display name for the enum value.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `array`\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External namespace of the user schema property.\n"
                },
                "index": {
                    "type": "string",
                    "description": "Subschema unique string identifier\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `PROFILE_MASTER` or `OKTA`\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `string`\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `string`\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppUserSchemaPropertyOneOf:AppUserSchemaPropertyOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value. - 'const' - (Required) value mapping to member of\n'enum'. - 'title' - (Required) display name for the enum value.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the subschema is required\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Personal `SELF` or Group `NONE` level. Default value is\n`NONE`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "Subschema title (display name)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`\n"
                },
                "union": {
                    "type": "boolean",
                    "description": "If `type` is set to `array`, used to set whether attribute value is determined by group priority `false`, or combine\nvalues across groups `true`. Can not be set to `true` if `scope` is set to `SELF`.\n"
                },
                "unique": {
                    "type": "string",
                    "description": "Whether the property should be unique. It can be set to `UNIQUE_VALIDATED` or `NOT_UNIQUE`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID. By default, it is `default`\n"
                }
            },
            "required": [
                "appId",
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The Application's ID the user custom schema property should be assigned to.\n"
                },
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppUserSchemaPropertyArrayOneOf:AppUserSchemaPropertyArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to. - 'const' - (Required) value mapping to member of 'enum'. - 'title'\n- (Required) display name for the enum value.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `array`\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n",
                    "willReplaceOnChanges": true
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External namespace of the user schema property.\n",
                    "willReplaceOnChanges": true
                },
                "index": {
                    "type": "string",
                    "description": "Subschema unique string identifier\n",
                    "willReplaceOnChanges": true
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `PROFILE_MASTER` or `OKTA`\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `string`\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `string`\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/AppUserSchemaPropertyOneOf:AppUserSchemaPropertyOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value. - 'const' - (Required) value mapping to member of\n'enum'. - 'title' - (Required) display name for the enum value.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the subschema is required\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Personal `SELF` or Group `NONE` level. Default value is\n`NONE`.\n",
                    "willReplaceOnChanges": true
                },
                "title": {
                    "type": "string",
                    "description": "Subschema title (display name)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`\n",
                    "willReplaceOnChanges": true
                },
                "union": {
                    "type": "boolean",
                    "description": "If `type` is set to `array`, used to set whether attribute value is determined by group priority `false`, or combine\nvalues across groups `true`. Can not be set to `true` if `scope` is set to `SELF`.\n"
                },
                "unique": {
                    "type": "string",
                    "description": "Whether the property should be unique. It can be set to `UNIQUE_VALIDATED` or `NOT_UNIQUE`.\n",
                    "willReplaceOnChanges": true
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID. By default, it is `default`\n"
                }
            },
            "requiredInputs": [
                "appId",
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppUserSchemaProperty resources.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The Application's ID the user custom schema property should be assigned to.\n"
                    },
                    "arrayEnums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values that an array property's items can be set to.\n"
                    },
                    "arrayOneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/AppUserSchemaPropertyArrayOneOf:AppUserSchemaPropertyArrayOneOf"
                        },
                        "description": "Display name and value an enum array can be set to. - 'const' - (Required) value mapping to member of 'enum'. - 'title'\n- (Required) display name for the enum value.\n"
                    },
                    "arrayType": {
                        "type": "string",
                        "description": "The type of the array elements if `type` is set to `array`\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the user schema property.\n"
                    },
                    "enums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                    },
                    "externalName": {
                        "type": "string",
                        "description": "External name of the user schema property.\n",
                        "willReplaceOnChanges": true
                    },
                    "externalNamespace": {
                        "type": "string",
                        "description": "External namespace of the user schema property.\n",
                        "willReplaceOnChanges": true
                    },
                    "index": {
                        "type": "string",
                        "description": "Subschema unique string identifier\n",
                        "willReplaceOnChanges": true
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the user schema property. It can be set to `PROFILE_MASTER` or `OKTA`\n"
                    },
                    "maxLength": {
                        "type": "integer",
                        "description": "The maximum length of the user property value. Only applies to type `string`\n"
                    },
                    "minLength": {
                        "type": "integer",
                        "description": "The minimum length of the user property value. Only applies to type `string`\n"
                    },
                    "oneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/AppUserSchemaPropertyOneOf:AppUserSchemaPropertyOneOf"
                        },
                        "description": "Array of maps containing a mapping for display name to enum value. - 'const' - (Required) value mapping to member of\n'enum'. - 'title' - (Required) display name for the enum value.\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the subschema is required\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "determines whether an app user attribute can be set at the Personal `SELF` or Group `NONE` level. Default value is\n`NONE`.\n",
                        "willReplaceOnChanges": true
                    },
                    "title": {
                        "type": "string",
                        "description": "Subschema title (display name)\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`\n",
                        "willReplaceOnChanges": true
                    },
                    "union": {
                        "type": "boolean",
                        "description": "If `type` is set to `array`, used to set whether attribute value is determined by group priority `false`, or combine\nvalues across groups `true`. Can not be set to `true` if `scope` is set to `SELF`.\n"
                    },
                    "unique": {
                        "type": "string",
                        "description": "Whether the property should be unique. It can be set to `UNIQUE_VALIDATED` or `NOT_UNIQUE`.\n",
                        "willReplaceOnChanges": true
                    },
                    "userType": {
                        "type": "string",
                        "description": "User type ID. By default, it is `default`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/authServerClaimDefault:AuthServerClaimDefault": {
            "description": "Configures Default Authorization Server Claim.\nThis resource allows you to configure Default Authorization Server Claims.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AuthServerClaimDefault(\"example\", {\n    authServerId: \"\u003cauth server id\u003e\",\n    name: \"sub\",\n    value: \"(appuser != null) ? appuser.userName : app.clientId\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AuthServerClaimDefault(\"example\",\n    auth_server_id=\"\u003cauth server id\u003e\",\n    name=\"sub\",\n    value=\"(appuser != null) ? appuser.userName : app.clientId\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AuthServerClaimDefault(\"example\", new()\n    {\n        AuthServerId = \"\u003cauth server id\u003e\",\n        Name = \"sub\",\n        Value = \"(appuser != null) ? appuser.userName : app.clientId\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAuthServerClaimDefault(ctx, \"example\", \u0026okta.AuthServerClaimDefaultArgs{\n\t\t\tAuthServerId: pulumi.String(\"\u003cauth server id\u003e\"),\n\t\t\tName:         pulumi.String(\"sub\"),\n\t\t\tValue:        pulumi.String(\"(appuser != null) ? appuser.userName : app.clientId\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AuthServerClaimDefault;\nimport com.pulumi.okta.AuthServerClaimDefaultArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AuthServerClaimDefault(\"example\", AuthServerClaimDefaultArgs.builder()\n            .authServerId(\"\u003cauth server id\u003e\")\n            .name(\"sub\")\n            .value(\"(appuser != null) ? appuser.userName : app.clientId\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AuthServerClaimDefault\n    properties:\n      authServerId: \u003cauth server id\u003e\n      name: sub\n      value: '(appuser != null) ? appuser.userName : app.clientId'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/authServerClaimDefault:AuthServerClaimDefault example \u003cauth_server_id\u003e/\u003cclaim_name\u003e\n```\n\n",
            "properties": {
                "alwaysIncludeInToken": {
                    "type": "boolean",
                    "description": "Specifies whether to include claims in token.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "ID of the authorization server.\n"
                },
                "claimType": {
                    "type": "string",
                    "description": "Specifies whether the claim is for an access token `RESOURCE` or ID token `IDENTITY`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the claim. Can be set to `sub`, `address`, `birthdate`, `email`,`email_verified`, `family_name`, `gender`, `given_name`, `locale`, `middle_name`, `name`, `nickname`,`phone_number`, `picture`, `preferred_username`, `profile`, `updated_at`, `website`, `zoneinfo`\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Auth server claim list of scopes\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the application.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the claim. Only required for `sub` claim.\n"
                },
                "valueType": {
                    "type": "string",
                    "description": "The type of value of the claim.\n"
                }
            },
            "required": [
                "alwaysIncludeInToken",
                "authServerId",
                "claimType",
                "name",
                "scopes",
                "status",
                "valueType"
            ],
            "inputProperties": {
                "alwaysIncludeInToken": {
                    "type": "boolean",
                    "description": "Specifies whether to include claims in token.\n"
                },
                "authServerId": {
                    "type": "string",
                    "description": "ID of the authorization server.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the claim. Can be set to `sub`, `address`, `birthdate`, `email`,`email_verified`, `family_name`, `gender`, `given_name`, `locale`, `middle_name`, `name`, `nickname`,`phone_number`, `picture`, `preferred_username`, `profile`, `updated_at`, `website`, `zoneinfo`\n",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "description": "The value of the claim. Only required for `sub` claim.\n"
                }
            },
            "requiredInputs": [
                "authServerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthServerClaimDefault resources.\n",
                "properties": {
                    "alwaysIncludeInToken": {
                        "type": "boolean",
                        "description": "Specifies whether to include claims in token.\n"
                    },
                    "authServerId": {
                        "type": "string",
                        "description": "ID of the authorization server.\n",
                        "willReplaceOnChanges": true
                    },
                    "claimType": {
                        "type": "string",
                        "description": "Specifies whether the claim is for an access token `RESOURCE` or ID token `IDENTITY`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the claim. Can be set to `sub`, `address`, `birthdate`, `email`,`email_verified`, `family_name`, `gender`, `given_name`, `locale`, `middle_name`, `name`, `nickname`,`phone_number`, `picture`, `preferred_username`, `profile`, `updated_at`, `website`, `zoneinfo`\n",
                        "willReplaceOnChanges": true
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Auth server claim list of scopes\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the application.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the claim. Only required for `sub` claim.\n"
                    },
                    "valueType": {
                        "type": "string",
                        "description": "The type of value of the claim.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/authServerDefault:AuthServerDefault": {
            "description": "Configures Default Authorization Server. This resource allows you to configure Default Authorization Server.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.AuthServerDefault(\"example\", {\n    audiences: [\"api://default\"],\n    description: \"Default Authorization Server for your Applications\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.AuthServerDefault(\"example\",\n    audiences=[\"api://default\"],\n    description=\"Default Authorization Server for your Applications\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.AuthServerDefault(\"example\", new()\n    {\n        Audiences = new[]\n        {\n            \"api://default\",\n        },\n        Description = \"Default Authorization Server for your Applications\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewAuthServerDefault(ctx, \"example\", \u0026okta.AuthServerDefaultArgs{\n\t\t\tAudiences: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"api://default\"),\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"Default Authorization Server for your Applications\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.AuthServerDefault;\nimport com.pulumi.okta.AuthServerDefaultArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AuthServerDefault(\"example\", AuthServerDefaultArgs.builder()\n            .audiences(\"api://default\")\n            .description(\"Default Authorization Server for your Applications\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:AuthServerDefault\n    properties:\n      audiences:\n        - api://default\n      description: Default Authorization Server for your Applications\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/authServerDefault:AuthServerDefault example \u003cdefault\u003e\n```\n\n",
            "properties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token. Currently Okta only supports a single value here.\n"
                },
                "credentialsLastRotated": {
                    "type": "string",
                    "description": "The timestamp when the authorization server started to use the `kid` for signing tokens.\n"
                },
                "credentialsNextRotation": {
                    "type": "string",
                    "description": "The timestamp when the authorization server changes the key for signing tokens. Only returned when `credentials_rotation_mode` is `AUTO`.\n"
                },
                "credentialsRotationMode": {
                    "type": "string",
                    "description": "The key rotation mode for the authorization server. Can be `AUTO` or `MANUAL`. Default: `MANUAL`.Credential rotation mode, in many cases you cannot set this to MANUAL, the API will ignore the value and you will get a perpetual diff. This should rarely be used.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the authorization server.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The complete URL for a Custom Authorization Server. This becomes the `iss` claim in an access token.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "*Early Access Property*. Allows you to use a custom issuer URL. It can be set to `CUSTOM_URL`, `ORG_URL`, or `DYNAMIC`. Default: `ORG_URL`\n"
                },
                "kid": {
                    "type": "string",
                    "description": "The ID of the JSON Web Key used for signing tokens issued by the authorization server.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the authorization server. Not necessary but left for backwards capacity with legacy implementation.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                }
            },
            "required": [
                "credentialsLastRotated",
                "credentialsNextRotation",
                "issuer",
                "kid",
                "name"
            ],
            "inputProperties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token. Currently Okta only supports a single value here.\n"
                },
                "credentialsRotationMode": {
                    "type": "string",
                    "description": "The key rotation mode for the authorization server. Can be `AUTO` or `MANUAL`. Default: `MANUAL`.Credential rotation mode, in many cases you cannot set this to MANUAL, the API will ignore the value and you will get a perpetual diff. This should rarely be used.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the authorization server.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "*Early Access Property*. Allows you to use a custom issuer URL. It can be set to `CUSTOM_URL`, `ORG_URL`, or `DYNAMIC`. Default: `ORG_URL`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the authorization server. Not necessary but left for backwards capacity with legacy implementation.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthServerDefault resources.\n",
                "properties": {
                    "audiences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The recipients that the tokens are intended for. This becomes the `aud` claim in an access token. Currently Okta only supports a single value here.\n"
                    },
                    "credentialsLastRotated": {
                        "type": "string",
                        "description": "The timestamp when the authorization server started to use the `kid` for signing tokens.\n"
                    },
                    "credentialsNextRotation": {
                        "type": "string",
                        "description": "The timestamp when the authorization server changes the key for signing tokens. Only returned when `credentials_rotation_mode` is `AUTO`.\n"
                    },
                    "credentialsRotationMode": {
                        "type": "string",
                        "description": "The key rotation mode for the authorization server. Can be `AUTO` or `MANUAL`. Default: `MANUAL`.Credential rotation mode, in many cases you cannot set this to MANUAL, the API will ignore the value and you will get a perpetual diff. This should rarely be used.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the authorization server.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The complete URL for a Custom Authorization Server. This becomes the `iss` claim in an access token.\n"
                    },
                    "issuerMode": {
                        "type": "string",
                        "description": "*Early Access Property*. Allows you to use a custom issuer URL. It can be set to `CUSTOM_URL`, `ORG_URL`, or `DYNAMIC`. Default: `ORG_URL`\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "The ID of the JSON Web Key used for signing tokens issued by the authorization server.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the authorization server. Not necessary but left for backwards capacity with legacy implementation.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default to `ACTIVE`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/authenticator:Authenticator": {
            "description": "\u003e **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.\n\nThis resource allows you to configure different authenticators.\n\n\u003e **Create:** The Okta API has an odd notion of create for authenticators. If\nthe authenticator doesn't exist then a one time 'POST /api/v1/authenticators' to\ncreate the authenticator (hard create) will be performed. Thereafter, that\nauthenticator is never deleted, it is only deactivated (soft delete). Therefore,\nif the authenticator already exists create is just a soft import of an existing\nauthenticator. This does not apply to custom_otp authenticator. There can be \nmultiple custom_otp authenticator. To create new custom_otp authenticator, a new \nname and key = custom_otp is required. If an old name is used, it will simply \nreactivate the old custom_otp authenticator\n\n\u003e **Update:** custom_otp authenticator cannot be updated\n\n\u003e **Delete:** Authenticators can not be truly deleted therefore delete is soft.\nDelete will attempt to deativate the authenticator. An authenticator can only be\ndeactivated if it's not in use by any other policy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.Authenticator(\"test\", {\n    name: \"Security Question\",\n    key: \"security_question\",\n    settings: JSON.stringify({\n        allowedFor: \"recovery\",\n    }),\n});\nconst otp = new okta.Authenticator(\"otp\", {\n    name: \"Custom OTP\",\n    key: \"custom_otp\",\n    status: \"ACTIVE\",\n    settings: JSON.stringify({\n        protocol: \"TOTP\",\n        acceptableAdjacentIntervals: 3,\n        timeIntervalInSeconds: 30,\n        encoding: \"base32\",\n        algorithm: \"HMacSHA256\",\n        passCodeLength: 6,\n    }),\n    legacyIgnoreName: false,\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_okta as okta\n\ntest = okta.Authenticator(\"test\",\n    name=\"Security Question\",\n    key=\"security_question\",\n    settings=json.dumps({\n        \"allowedFor\": \"recovery\",\n    }))\notp = okta.Authenticator(\"otp\",\n    name=\"Custom OTP\",\n    key=\"custom_otp\",\n    status=\"ACTIVE\",\n    settings=json.dumps({\n        \"protocol\": \"TOTP\",\n        \"acceptableAdjacentIntervals\": 3,\n        \"timeIntervalInSeconds\": 30,\n        \"encoding\": \"base32\",\n        \"algorithm\": \"HMacSHA256\",\n        \"passCodeLength\": 6,\n    }),\n    legacy_ignore_name=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Okta.Authenticator(\"test\", new()\n    {\n        Name = \"Security Question\",\n        Key = \"security_question\",\n        Settings = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"allowedFor\"] = \"recovery\",\n        }),\n    });\n\n    var otp = new Okta.Authenticator(\"otp\", new()\n    {\n        Name = \"Custom OTP\",\n        Key = \"custom_otp\",\n        Status = \"ACTIVE\",\n        Settings = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"protocol\"] = \"TOTP\",\n            [\"acceptableAdjacentIntervals\"] = 3,\n            [\"timeIntervalInSeconds\"] = 30,\n            [\"encoding\"] = \"base32\",\n            [\"algorithm\"] = \"HMacSHA256\",\n            [\"passCodeLength\"] = 6,\n        }),\n        LegacyIgnoreName = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"allowedFor\": \"recovery\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = okta.NewAuthenticator(ctx, \"test\", \u0026okta.AuthenticatorArgs{\n\t\t\tName:     pulumi.String(\"Security Question\"),\n\t\t\tKey:      pulumi.String(\"security_question\"),\n\t\t\tSettings: pulumi.String(json0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON1, err := json.Marshal(map[string]interface{}{\n\t\t\t\"protocol\":                    \"TOTP\",\n\t\t\t\"acceptableAdjacentIntervals\": 3,\n\t\t\t\"timeIntervalInSeconds\":       30,\n\t\t\t\"encoding\":                    \"base32\",\n\t\t\t\"algorithm\":                   \"HMacSHA256\",\n\t\t\t\"passCodeLength\":              6,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson1 := string(tmpJSON1)\n\t\t_, err = okta.NewAuthenticator(ctx, \"otp\", \u0026okta.AuthenticatorArgs{\n\t\t\tName:             pulumi.String(\"Custom OTP\"),\n\t\t\tKey:              pulumi.String(\"custom_otp\"),\n\t\t\tStatus:           pulumi.String(\"ACTIVE\"),\n\t\t\tSettings:         pulumi.String(json1),\n\t\t\tLegacyIgnoreName: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Authenticator;\nimport com.pulumi.okta.AuthenticatorArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new Authenticator(\"test\", AuthenticatorArgs.builder()\n            .name(\"Security Question\")\n            .key(\"security_question\")\n            .settings(serializeJson(\n                jsonObject(\n                    jsonProperty(\"allowedFor\", \"recovery\")\n                )))\n            .build());\n\n        var otp = new Authenticator(\"otp\", AuthenticatorArgs.builder()\n            .name(\"Custom OTP\")\n            .key(\"custom_otp\")\n            .status(\"ACTIVE\")\n            .settings(serializeJson(\n                jsonObject(\n                    jsonProperty(\"protocol\", \"TOTP\"),\n                    jsonProperty(\"acceptableAdjacentIntervals\", 3),\n                    jsonProperty(\"timeIntervalInSeconds\", 30),\n                    jsonProperty(\"encoding\", \"base32\"),\n                    jsonProperty(\"algorithm\", \"HMacSHA256\"),\n                    jsonProperty(\"passCodeLength\", 6)\n                )))\n            .legacyIgnoreName(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: okta:Authenticator\n    properties:\n      name: Security Question\n      key: security_question\n      settings:\n        fn::toJSON:\n          allowedFor: recovery\n  otp:\n    type: okta:Authenticator\n    properties:\n      name: Custom OTP\n      key: custom_otp\n      status: ACTIVE\n      settings:\n        fn::toJSON:\n          protocol: TOTP\n          acceptableAdjacentIntervals: 3\n          timeIntervalInSeconds: 30\n          encoding: base32\n          algorithm: HMacSHA256\n          passCodeLength: 6\n      legacyIgnoreName: false\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/authenticator:Authenticator example \u003cauthenticator_id\u003e\n```\n\n",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A human-readable string that identifies the authenticator. Some authenticators are available by feature flag on the organization. Possible values inclue: `duo`, `external_idp`, `google_otp`, `okta_email`, `okta_password`, `okta_verify`, `onprem_mfa`, `phone_number`, `rsa_token`, `security_question`, `webauthn`\n"
                },
                "legacyIgnoreName": {
                    "type": "boolean",
                    "description": "Name does not trigger change detection (legacy behavior)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Display name of the Authenticator\n"
                },
                "providerAuthPort": {
                    "type": "integer",
                    "description": "The RADIUS server port (for example 1812). This is defined when the On-Prem RADIUS server is configured. Used only for authenticators with type `security_key`.  Conflicts with `provider_json` argument.\n"
                },
                "providerHost": {
                    "type": "string",
                    "description": "(DUO specific) - The Duo Security API hostname. Conflicts with `provider_json` argument.\n"
                },
                "providerHostname": {
                    "type": "string",
                    "description": "Server host name or IP address. Default is `localhost`. Used only for authenticators with type `security_key`. Conflicts with `provider_json` argument.\n"
                },
                "providerInstanceId": {
                    "type": "string",
                    "description": "App Instance ID.\n"
                },
                "providerIntegrationKey": {
                    "type": "string",
                    "description": "(DUO specific) - The Duo Security integration key.  Conflicts with `provider_json` argument.\n"
                },
                "providerJson": {
                    "type": "string",
                    "description": "Provider JSON allows for expressive providervalues. This argument conflicts with the other 'provider_xxx' arguments. The [CreateProvider](https://developer.okta.com/docs/reference/api/authenticators-admin/#request) illustrates detailed provider values for a Duo authenticator. [Provider values](https://developer.okta.com/docs/reference/api/authenticators-admin/#authenticators-administration-api-object)are listed in Okta API.\n"
                },
                "providerSecretKey": {
                    "type": "string",
                    "description": "(DUO specific) - The Duo Security secret key.  Conflicts with `provider_json` argument.\n"
                },
                "providerSharedSecret": {
                    "type": "string",
                    "description": "An authentication key that must be defined when the RADIUS server is configured, and must be the same on both the RADIUS client and server. Used only for authenticators with type `security_key`. Conflicts with `provider_json` argument.\n",
                    "secret": true
                },
                "providerType": {
                    "type": "string",
                    "description": "Provider type. Supported value for Duo: `DUO`. Supported value for Custom App: `PUSH`\n"
                },
                "providerUserNameTemplate": {
                    "type": "string",
                    "description": "Username template expected by the provider. Used only for authenticators with type `security_key`.  Conflicts with `provider_json` argument.\n"
                },
                "settings": {
                    "type": "string",
                    "description": "Settings for the authenticator. The settings JSON contains values based on Authenticator key. It is not used for authenticators with type `security_key`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Authenticator status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                },
                "type": {
                    "type": "string",
                    "description": "he type of Authenticator. Values include: `password`, `security_question`, `phone`, `email`, `app`, `federated`, and `security_key`.\n"
                }
            },
            "required": [
                "key",
                "name",
                "providerInstanceId",
                "providerType",
                "type"
            ],
            "inputProperties": {
                "key": {
                    "type": "string",
                    "description": "A human-readable string that identifies the authenticator. Some authenticators are available by feature flag on the organization. Possible values inclue: `duo`, `external_idp`, `google_otp`, `okta_email`, `okta_password`, `okta_verify`, `onprem_mfa`, `phone_number`, `rsa_token`, `security_question`, `webauthn`\n",
                    "willReplaceOnChanges": true
                },
                "legacyIgnoreName": {
                    "type": "boolean",
                    "description": "Name does not trigger change detection (legacy behavior)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Display name of the Authenticator\n"
                },
                "providerAuthPort": {
                    "type": "integer",
                    "description": "The RADIUS server port (for example 1812). This is defined when the On-Prem RADIUS server is configured. Used only for authenticators with type `security_key`.  Conflicts with `provider_json` argument.\n"
                },
                "providerHost": {
                    "type": "string",
                    "description": "(DUO specific) - The Duo Security API hostname. Conflicts with `provider_json` argument.\n"
                },
                "providerHostname": {
                    "type": "string",
                    "description": "Server host name or IP address. Default is `localhost`. Used only for authenticators with type `security_key`. Conflicts with `provider_json` argument.\n"
                },
                "providerIntegrationKey": {
                    "type": "string",
                    "description": "(DUO specific) - The Duo Security integration key.  Conflicts with `provider_json` argument.\n"
                },
                "providerJson": {
                    "type": "string",
                    "description": "Provider JSON allows for expressive providervalues. This argument conflicts with the other 'provider_xxx' arguments. The [CreateProvider](https://developer.okta.com/docs/reference/api/authenticators-admin/#request) illustrates detailed provider values for a Duo authenticator. [Provider values](https://developer.okta.com/docs/reference/api/authenticators-admin/#authenticators-administration-api-object)are listed in Okta API.\n"
                },
                "providerSecretKey": {
                    "type": "string",
                    "description": "(DUO specific) - The Duo Security secret key.  Conflicts with `provider_json` argument.\n"
                },
                "providerSharedSecret": {
                    "type": "string",
                    "description": "An authentication key that must be defined when the RADIUS server is configured, and must be the same on both the RADIUS client and server. Used only for authenticators with type `security_key`. Conflicts with `provider_json` argument.\n",
                    "secret": true
                },
                "providerUserNameTemplate": {
                    "type": "string",
                    "description": "Username template expected by the provider. Used only for authenticators with type `security_key`.  Conflicts with `provider_json` argument.\n"
                },
                "settings": {
                    "type": "string",
                    "description": "Settings for the authenticator. The settings JSON contains values based on Authenticator key. It is not used for authenticators with type `security_key`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Authenticator status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Authenticator resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "A human-readable string that identifies the authenticator. Some authenticators are available by feature flag on the organization. Possible values inclue: `duo`, `external_idp`, `google_otp`, `okta_email`, `okta_password`, `okta_verify`, `onprem_mfa`, `phone_number`, `rsa_token`, `security_question`, `webauthn`\n",
                        "willReplaceOnChanges": true
                    },
                    "legacyIgnoreName": {
                        "type": "boolean",
                        "description": "Name does not trigger change detection (legacy behavior)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Display name of the Authenticator\n"
                    },
                    "providerAuthPort": {
                        "type": "integer",
                        "description": "The RADIUS server port (for example 1812). This is defined when the On-Prem RADIUS server is configured. Used only for authenticators with type `security_key`.  Conflicts with `provider_json` argument.\n"
                    },
                    "providerHost": {
                        "type": "string",
                        "description": "(DUO specific) - The Duo Security API hostname. Conflicts with `provider_json` argument.\n"
                    },
                    "providerHostname": {
                        "type": "string",
                        "description": "Server host name or IP address. Default is `localhost`. Used only for authenticators with type `security_key`. Conflicts with `provider_json` argument.\n"
                    },
                    "providerInstanceId": {
                        "type": "string",
                        "description": "App Instance ID.\n"
                    },
                    "providerIntegrationKey": {
                        "type": "string",
                        "description": "(DUO specific) - The Duo Security integration key.  Conflicts with `provider_json` argument.\n"
                    },
                    "providerJson": {
                        "type": "string",
                        "description": "Provider JSON allows for expressive providervalues. This argument conflicts with the other 'provider_xxx' arguments. The [CreateProvider](https://developer.okta.com/docs/reference/api/authenticators-admin/#request) illustrates detailed provider values for a Duo authenticator. [Provider values](https://developer.okta.com/docs/reference/api/authenticators-admin/#authenticators-administration-api-object)are listed in Okta API.\n"
                    },
                    "providerSecretKey": {
                        "type": "string",
                        "description": "(DUO specific) - The Duo Security secret key.  Conflicts with `provider_json` argument.\n"
                    },
                    "providerSharedSecret": {
                        "type": "string",
                        "description": "An authentication key that must be defined when the RADIUS server is configured, and must be the same on both the RADIUS client and server. Used only for authenticators with type `security_key`. Conflicts with `provider_json` argument.\n",
                        "secret": true
                    },
                    "providerType": {
                        "type": "string",
                        "description": "Provider type. Supported value for Duo: `DUO`. Supported value for Custom App: `PUSH`\n"
                    },
                    "providerUserNameTemplate": {
                        "type": "string",
                        "description": "Username template expected by the provider. Used only for authenticators with type `security_key`.  Conflicts with `provider_json` argument.\n"
                    },
                    "settings": {
                        "type": "string",
                        "description": "Settings for the authenticator. The settings JSON contains values based on Authenticator key. It is not used for authenticators with type `security_key`\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Authenticator status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "he type of Authenticator. Values include: `password`, `security_question`, `phone`, `email`, `app`, `federated`, and `security_key`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/behaviour:Behaviour": {
            "description": "This resource allows you to create and configure a behavior.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst myLocation = new okta.Behaviour(\"my_location\", {\n    name: \"My Location\",\n    type: \"ANOMALOUS_LOCATION\",\n    numberOfAuthentications: 50,\n    locationGranularityType: \"LAT_LONG\",\n    radiusFromLocation: 20,\n});\nconst myCity = new okta.Behaviour(\"my_city\", {\n    name: \"My City\",\n    type: \"ANOMALOUS_LOCATION\",\n    numberOfAuthentications: 50,\n    locationGranularityType: \"CITY\",\n});\nconst myDevice = new okta.Behaviour(\"my_device\", {\n    name: \"My Device\",\n    type: \"ANOMALOUS_DEVICE\",\n    numberOfAuthentications: 50,\n});\nconst myIp = new okta.Behaviour(\"my_ip\", {\n    name: \"My IP\",\n    type: \"ANOMALOUS_IP\",\n    numberOfAuthentications: 50,\n});\nconst myVelocity = new okta.Behaviour(\"my_velocity\", {\n    name: \"My Velocity\",\n    type: \"VELOCITY\",\n    velocity: 25,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nmy_location = okta.Behaviour(\"my_location\",\n    name=\"My Location\",\n    type=\"ANOMALOUS_LOCATION\",\n    number_of_authentications=50,\n    location_granularity_type=\"LAT_LONG\",\n    radius_from_location=20)\nmy_city = okta.Behaviour(\"my_city\",\n    name=\"My City\",\n    type=\"ANOMALOUS_LOCATION\",\n    number_of_authentications=50,\n    location_granularity_type=\"CITY\")\nmy_device = okta.Behaviour(\"my_device\",\n    name=\"My Device\",\n    type=\"ANOMALOUS_DEVICE\",\n    number_of_authentications=50)\nmy_ip = okta.Behaviour(\"my_ip\",\n    name=\"My IP\",\n    type=\"ANOMALOUS_IP\",\n    number_of_authentications=50)\nmy_velocity = okta.Behaviour(\"my_velocity\",\n    name=\"My Velocity\",\n    type=\"VELOCITY\",\n    velocity=25)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myLocation = new Okta.Behaviour(\"my_location\", new()\n    {\n        Name = \"My Location\",\n        Type = \"ANOMALOUS_LOCATION\",\n        NumberOfAuthentications = 50,\n        LocationGranularityType = \"LAT_LONG\",\n        RadiusFromLocation = 20,\n    });\n\n    var myCity = new Okta.Behaviour(\"my_city\", new()\n    {\n        Name = \"My City\",\n        Type = \"ANOMALOUS_LOCATION\",\n        NumberOfAuthentications = 50,\n        LocationGranularityType = \"CITY\",\n    });\n\n    var myDevice = new Okta.Behaviour(\"my_device\", new()\n    {\n        Name = \"My Device\",\n        Type = \"ANOMALOUS_DEVICE\",\n        NumberOfAuthentications = 50,\n    });\n\n    var myIp = new Okta.Behaviour(\"my_ip\", new()\n    {\n        Name = \"My IP\",\n        Type = \"ANOMALOUS_IP\",\n        NumberOfAuthentications = 50,\n    });\n\n    var myVelocity = new Okta.Behaviour(\"my_velocity\", new()\n    {\n        Name = \"My Velocity\",\n        Type = \"VELOCITY\",\n        Velocity = 25,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewBehaviour(ctx, \"my_location\", \u0026okta.BehaviourArgs{\n\t\t\tName:                    pulumi.String(\"My Location\"),\n\t\t\tType:                    pulumi.String(\"ANOMALOUS_LOCATION\"),\n\t\t\tNumberOfAuthentications: pulumi.Int(50),\n\t\t\tLocationGranularityType: pulumi.String(\"LAT_LONG\"),\n\t\t\tRadiusFromLocation:      pulumi.Int(20),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewBehaviour(ctx, \"my_city\", \u0026okta.BehaviourArgs{\n\t\t\tName:                    pulumi.String(\"My City\"),\n\t\t\tType:                    pulumi.String(\"ANOMALOUS_LOCATION\"),\n\t\t\tNumberOfAuthentications: pulumi.Int(50),\n\t\t\tLocationGranularityType: pulumi.String(\"CITY\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewBehaviour(ctx, \"my_device\", \u0026okta.BehaviourArgs{\n\t\t\tName:                    pulumi.String(\"My Device\"),\n\t\t\tType:                    pulumi.String(\"ANOMALOUS_DEVICE\"),\n\t\t\tNumberOfAuthentications: pulumi.Int(50),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewBehaviour(ctx, \"my_ip\", \u0026okta.BehaviourArgs{\n\t\t\tName:                    pulumi.String(\"My IP\"),\n\t\t\tType:                    pulumi.String(\"ANOMALOUS_IP\"),\n\t\t\tNumberOfAuthentications: pulumi.Int(50),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewBehaviour(ctx, \"my_velocity\", \u0026okta.BehaviourArgs{\n\t\t\tName:     pulumi.String(\"My Velocity\"),\n\t\t\tType:     pulumi.String(\"VELOCITY\"),\n\t\t\tVelocity: pulumi.Int(25),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Behaviour;\nimport com.pulumi.okta.BehaviourArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myLocation = new Behaviour(\"myLocation\", BehaviourArgs.builder()\n            .name(\"My Location\")\n            .type(\"ANOMALOUS_LOCATION\")\n            .numberOfAuthentications(50)\n            .locationGranularityType(\"LAT_LONG\")\n            .radiusFromLocation(20)\n            .build());\n\n        var myCity = new Behaviour(\"myCity\", BehaviourArgs.builder()\n            .name(\"My City\")\n            .type(\"ANOMALOUS_LOCATION\")\n            .numberOfAuthentications(50)\n            .locationGranularityType(\"CITY\")\n            .build());\n\n        var myDevice = new Behaviour(\"myDevice\", BehaviourArgs.builder()\n            .name(\"My Device\")\n            .type(\"ANOMALOUS_DEVICE\")\n            .numberOfAuthentications(50)\n            .build());\n\n        var myIp = new Behaviour(\"myIp\", BehaviourArgs.builder()\n            .name(\"My IP\")\n            .type(\"ANOMALOUS_IP\")\n            .numberOfAuthentications(50)\n            .build());\n\n        var myVelocity = new Behaviour(\"myVelocity\", BehaviourArgs.builder()\n            .name(\"My Velocity\")\n            .type(\"VELOCITY\")\n            .velocity(25)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myLocation:\n    type: okta:Behaviour\n    name: my_location\n    properties:\n      name: My Location\n      type: ANOMALOUS_LOCATION\n      numberOfAuthentications: 50\n      locationGranularityType: LAT_LONG\n      radiusFromLocation: 20\n  myCity:\n    type: okta:Behaviour\n    name: my_city\n    properties:\n      name: My City\n      type: ANOMALOUS_LOCATION\n      numberOfAuthentications: 50\n      locationGranularityType: CITY\n  myDevice:\n    type: okta:Behaviour\n    name: my_device\n    properties:\n      name: My Device\n      type: ANOMALOUS_DEVICE\n      numberOfAuthentications: 50\n  myIp:\n    type: okta:Behaviour\n    name: my_ip\n    properties:\n      name: My IP\n      type: ANOMALOUS_IP\n      numberOfAuthentications: 50\n  myVelocity:\n    type: okta:Behaviour\n    name: my_velocity\n    properties:\n      name: My Velocity\n      type: VELOCITY\n      velocity: 25\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/behaviour:Behaviour example \u003cbehavior_id\u003e\n```\n\n",
            "properties": {
                "locationGranularityType": {
                    "type": "string",
                    "description": "Determines the method and level of detail used to evaluate the behavior. Required for `ANOMALOUS_LOCATION` behavior type. Can be set to `LAT_LONG`, `CITY`, `COUNTRY` or `SUBDIVISION`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the behavior\n"
                },
                "numberOfAuthentications": {
                    "type": "integer",
                    "description": "The number of recent authentications used to evaluate the behavior. Required for `ANOMALOUS_LOCATION`, `ANOMALOUS_DEVICE` and `ANOMALOUS_IP` behavior types.\n"
                },
                "radiusFromLocation": {
                    "type": "integer",
                    "description": "Radius from location (in kilometers). Should be at least 5. Required when `location_granularity_type` is set to `LAT_LONG`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Behavior status: ACTIVE or INACTIVE. Default: `ACTIVE`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the behavior. Can be set to `ANOMALOUS_LOCATION`, `ANOMALOUS_DEVICE`, `ANOMALOUS_IP` or `VELOCITY`. Resource will be recreated when the type changes.e\n"
                },
                "velocity": {
                    "type": "integer",
                    "description": "Velocity (in kilometers per hour). Should be at least 1. Required for `VELOCITY` behavior\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "locationGranularityType": {
                    "type": "string",
                    "description": "Determines the method and level of detail used to evaluate the behavior. Required for `ANOMALOUS_LOCATION` behavior type. Can be set to `LAT_LONG`, `CITY`, `COUNTRY` or `SUBDIVISION`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the behavior\n"
                },
                "numberOfAuthentications": {
                    "type": "integer",
                    "description": "The number of recent authentications used to evaluate the behavior. Required for `ANOMALOUS_LOCATION`, `ANOMALOUS_DEVICE` and `ANOMALOUS_IP` behavior types.\n"
                },
                "radiusFromLocation": {
                    "type": "integer",
                    "description": "Radius from location (in kilometers). Should be at least 5. Required when `location_granularity_type` is set to `LAT_LONG`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Behavior status: ACTIVE or INACTIVE. Default: `ACTIVE`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the behavior. Can be set to `ANOMALOUS_LOCATION`, `ANOMALOUS_DEVICE`, `ANOMALOUS_IP` or `VELOCITY`. Resource will be recreated when the type changes.e\n",
                    "willReplaceOnChanges": true
                },
                "velocity": {
                    "type": "integer",
                    "description": "Velocity (in kilometers per hour). Should be at least 1. Required for `VELOCITY` behavior\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Behaviour resources.\n",
                "properties": {
                    "locationGranularityType": {
                        "type": "string",
                        "description": "Determines the method and level of detail used to evaluate the behavior. Required for `ANOMALOUS_LOCATION` behavior type. Can be set to `LAT_LONG`, `CITY`, `COUNTRY` or `SUBDIVISION`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the behavior\n"
                    },
                    "numberOfAuthentications": {
                        "type": "integer",
                        "description": "The number of recent authentications used to evaluate the behavior. Required for `ANOMALOUS_LOCATION`, `ANOMALOUS_DEVICE` and `ANOMALOUS_IP` behavior types.\n"
                    },
                    "radiusFromLocation": {
                        "type": "integer",
                        "description": "Radius from location (in kilometers). Should be at least 5. Required when `location_granularity_type` is set to `LAT_LONG`.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Behavior status: ACTIVE or INACTIVE. Default: `ACTIVE`\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the behavior. Can be set to `ANOMALOUS_LOCATION`, `ANOMALOUS_DEVICE`, `ANOMALOUS_IP` or `VELOCITY`. Resource will be recreated when the type changes.e\n",
                        "willReplaceOnChanges": true
                    },
                    "velocity": {
                        "type": "integer",
                        "description": "Velocity (in kilometers per hour). Should be at least 1. Required for `VELOCITY` behavior\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/brand:Brand": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.Brand(\"example\", {name: \"example\"});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.Brand(\"example\", name=\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Brand(\"example\", new()\n    {\n        Name = \"example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewBrand(ctx, \"example\", \u0026okta.BrandArgs{\n\t\t\tName: pulumi.String(\"example\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Brand;\nimport com.pulumi.okta.BrandArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Brand(\"example\", BrandArgs.builder()\n            .name(\"example\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:Brand\n    properties:\n      name: example\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/brand:Brand example \u003cbrand_id\u003e\n```\n\n",
            "properties": {
                "agreeToCustomPrivacyPolicy": {
                    "type": "boolean",
                    "description": "Is a required input flag with when changing custom*privacy*url, shouldn't be considered as a readable property\n"
                },
                "brandId": {
                    "type": "string",
                    "description": "Brand ID - Note: Okta API for brands only reads and updates therefore the okta*brand resource needs to act as a quasi data source. Do this by setting brand*id. `DEPRECATED`: Okta has fully support brand creation, this attribute is a no op and will be removed\n",
                    "deprecationMessage": "Okta has fully support brand creation, this attribute is a no op and will be removed"
                },
                "customPrivacyPolicyUrl": {
                    "type": "string",
                    "description": "Custom privacy policy URL\n"
                },
                "defaultAppAppInstanceId": {
                    "type": "string",
                    "description": "Default app app instance id\n"
                },
                "defaultAppAppLinkName": {
                    "type": "string",
                    "description": "Default app app link name\n"
                },
                "defaultAppClassicApplicationUri": {
                    "type": "string",
                    "description": "Default app classic application uri\n"
                },
                "emailDomainId": {
                    "type": "string",
                    "description": "Email Domain ID tied to this brand\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Is this the default brand\n"
                },
                "links": {
                    "type": "string",
                    "description": "Link relations for this object - JSON HAL - Discoverable resources related to the brand\n"
                },
                "locale": {
                    "type": "string",
                    "description": "The language specified as an IETF BCP 47 language tag\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the brand\n"
                },
                "removePoweredByOkta": {
                    "type": "boolean",
                    "description": "Removes \"Powered by Okta\" from the Okta-hosted sign-in page and \"© 2021 Okta, Inc.\" from the Okta End-User Dashboard\n"
                }
            },
            "required": [
                "agreeToCustomPrivacyPolicy",
                "brandId",
                "customPrivacyPolicyUrl",
                "emailDomainId",
                "isDefault",
                "links",
                "name",
                "removePoweredByOkta"
            ],
            "inputProperties": {
                "agreeToCustomPrivacyPolicy": {
                    "type": "boolean",
                    "description": "Is a required input flag with when changing custom*privacy*url, shouldn't be considered as a readable property\n"
                },
                "brandId": {
                    "type": "string",
                    "description": "Brand ID - Note: Okta API for brands only reads and updates therefore the okta*brand resource needs to act as a quasi data source. Do this by setting brand*id. `DEPRECATED`: Okta has fully support brand creation, this attribute is a no op and will be removed\n",
                    "deprecationMessage": "Okta has fully support brand creation, this attribute is a no op and will be removed"
                },
                "customPrivacyPolicyUrl": {
                    "type": "string",
                    "description": "Custom privacy policy URL\n"
                },
                "defaultAppAppInstanceId": {
                    "type": "string",
                    "description": "Default app app instance id\n"
                },
                "defaultAppAppLinkName": {
                    "type": "string",
                    "description": "Default app app link name\n"
                },
                "defaultAppClassicApplicationUri": {
                    "type": "string",
                    "description": "Default app classic application uri\n"
                },
                "locale": {
                    "type": "string",
                    "description": "The language specified as an IETF BCP 47 language tag\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the brand\n"
                },
                "removePoweredByOkta": {
                    "type": "boolean",
                    "description": "Removes \"Powered by Okta\" from the Okta-hosted sign-in page and \"© 2021 Okta, Inc.\" from the Okta End-User Dashboard\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Brand resources.\n",
                "properties": {
                    "agreeToCustomPrivacyPolicy": {
                        "type": "boolean",
                        "description": "Is a required input flag with when changing custom*privacy*url, shouldn't be considered as a readable property\n"
                    },
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID - Note: Okta API for brands only reads and updates therefore the okta*brand resource needs to act as a quasi data source. Do this by setting brand*id. `DEPRECATED`: Okta has fully support brand creation, this attribute is a no op and will be removed\n",
                        "deprecationMessage": "Okta has fully support brand creation, this attribute is a no op and will be removed"
                    },
                    "customPrivacyPolicyUrl": {
                        "type": "string",
                        "description": "Custom privacy policy URL\n"
                    },
                    "defaultAppAppInstanceId": {
                        "type": "string",
                        "description": "Default app app instance id\n"
                    },
                    "defaultAppAppLinkName": {
                        "type": "string",
                        "description": "Default app app link name\n"
                    },
                    "defaultAppClassicApplicationUri": {
                        "type": "string",
                        "description": "Default app classic application uri\n"
                    },
                    "emailDomainId": {
                        "type": "string",
                        "description": "Email Domain ID tied to this brand\n"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Is this the default brand\n"
                    },
                    "links": {
                        "type": "string",
                        "description": "Link relations for this object - JSON HAL - Discoverable resources related to the brand\n"
                    },
                    "locale": {
                        "type": "string",
                        "description": "The language specified as an IETF BCP 47 language tag\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the brand\n"
                    },
                    "removePoweredByOkta": {
                        "type": "boolean",
                        "description": "Removes \"Powered by Okta\" from the Okta-hosted sign-in page and \"© 2021 Okta, Inc.\" from the Okta End-User Dashboard\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/captcha:Captcha": {
            "description": "Creates different types of captcha.\n\t\t\u003e **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.\n\t\tThis resource allows you to create and configure a CAPTCHA.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.Captcha(\"example\", {\n    name: \"My CAPTCHA\",\n    type: \"HCAPTCHA\",\n    siteKey: \"some_key\",\n    secretKey: \"some_secret_key\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.Captcha(\"example\",\n    name=\"My CAPTCHA\",\n    type=\"HCAPTCHA\",\n    site_key=\"some_key\",\n    secret_key=\"some_secret_key\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Captcha(\"example\", new()\n    {\n        Name = \"My CAPTCHA\",\n        Type = \"HCAPTCHA\",\n        SiteKey = \"some_key\",\n        SecretKey = \"some_secret_key\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewCaptcha(ctx, \"example\", \u0026okta.CaptchaArgs{\n\t\t\tName:      pulumi.String(\"My CAPTCHA\"),\n\t\t\tType:      pulumi.String(\"HCAPTCHA\"),\n\t\t\tSiteKey:   pulumi.String(\"some_key\"),\n\t\t\tSecretKey: pulumi.String(\"some_secret_key\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Captcha;\nimport com.pulumi.okta.CaptchaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Captcha(\"example\", CaptchaArgs.builder()\n            .name(\"My CAPTCHA\")\n            .type(\"HCAPTCHA\")\n            .siteKey(\"some_key\")\n            .secretKey(\"some_secret_key\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:Captcha\n    properties:\n      name: My CAPTCHA\n      type: HCAPTCHA\n      siteKey: some_key\n      secretKey: some_secret_key\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/captcha:Captcha example \u003ccaptcha_id\u003e\n```\n\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the CAPTCHA\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Secret key issued from the CAPTCHA vendor to perform server-side validation for a CAPTCHA token\n",
                    "secret": true
                },
                "siteKey": {
                    "type": "string",
                    "description": "Site key issued from the CAPTCHA vendor to render a CAPTCHA on a page\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the captcha. Valid values: `HCAPTCHA`, `RECAPTCHA_V2`\n"
                }
            },
            "required": [
                "name",
                "secretKey",
                "siteKey",
                "type"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the CAPTCHA\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Secret key issued from the CAPTCHA vendor to perform server-side validation for a CAPTCHA token\n",
                    "secret": true
                },
                "siteKey": {
                    "type": "string",
                    "description": "Site key issued from the CAPTCHA vendor to render a CAPTCHA on a page\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the captcha. Valid values: `HCAPTCHA`, `RECAPTCHA_V2`\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "secretKey",
                "siteKey",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Captcha resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the CAPTCHA\n"
                    },
                    "secretKey": {
                        "type": "string",
                        "description": "Secret key issued from the CAPTCHA vendor to perform server-side validation for a CAPTCHA token\n",
                        "secret": true
                    },
                    "siteKey": {
                        "type": "string",
                        "description": "Site key issued from the CAPTCHA vendor to render a CAPTCHA on a page\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the captcha. Valid values: `HCAPTCHA`, `RECAPTCHA_V2`\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/captchaOrgWideSettings:CaptchaOrgWideSettings": {
            "description": "Manages Org-Wide CAPTCHA settings\n\u003e **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.\nThis resource allows you to configure which parts of the authentication flow requires users to pass the CAPTCHA logic.\nCAPTCHA org-wide settings can be disabled by unsetting 'captcha_id' and 'enabled_for'.\n\n## Import\n\n```sh\n$ pulumi import okta:index/captchaOrgWideSettings:CaptchaOrgWideSettings example _\n```\n\n",
            "properties": {
                "captchaId": {
                    "type": "string",
                    "description": "Array of pages that have CAPTCHA enabled. Valid values: `SSR`, `SSPR` and `SIGN_IN`.\n"
                },
                "enabledFors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of pages that have CAPTCHA enabled\n"
                }
            },
            "inputProperties": {
                "captchaId": {
                    "type": "string",
                    "description": "Array of pages that have CAPTCHA enabled. Valid values: `SSR`, `SSPR` and `SIGN_IN`.\n"
                },
                "enabledFors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of pages that have CAPTCHA enabled\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CaptchaOrgWideSettings resources.\n",
                "properties": {
                    "captchaId": {
                        "type": "string",
                        "description": "Array of pages that have CAPTCHA enabled. Valid values: `SSR`, `SSPR` and `SIGN_IN`.\n"
                    },
                    "enabledFors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of pages that have CAPTCHA enabled\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/customizedSigninPage:CustomizedSigninPage": {
            "description": "Manage the customized signin page of a brand\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```yaml\nresources:\n  test:\n    type: okta:Brand\n    properties:\n      name: testBrand\n      locale: en\n  testCustomizedSigninPage:\n    type: okta:CustomizedSigninPage\n    name: test\n    properties:\n      brandId: ${oktaBrand.test.id}\n      pageContent: |\n        \u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"\u003e\n        \u003chtml\u003e\n        \u003chead\u003e\n            \u003cmeta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"\u003e\n            \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n            \u003cmeta name=\"robots\" content=\"noindex,nofollow\" /\u003e\n            \u003c!-- Styles generated from theme --\u003e\n            \u003clink href=\"{{themedStylesUrl}}\" rel=\"stylesheet\" type=\"text/css\"\u003e\n            \u003c!-- Favicon from theme --\u003e\n            \u003clink rel=\"shortcut icon\" href=\"{{faviconUrl}}\" type=\"image/x-icon\"/\u003e\n\n            \u003ctitle\u003e{{pageTitle}}\u003c/title\u003e\n            {{{SignInWidgetResources}}}\n\n            \u003cstyle nonce=\"{{nonceValue}}\"\u003e\n                #login-bg-image-id {\n                    background-image: {{bgImageUrl}}\n                }\n            \u003c/style\u003e\n        \u003c/head\u003e\n        \u003cbody\u003e\n            \u003cdiv id=\"login-bg-image-id\" class=\"login-bg-image tb--background\"\u003e\u003c/div\u003e\n            \u003cdiv id=\"okta-login-container\"\u003e\u003c/div\u003e\n\n            \u003c!--\n                \"OktaUtil\" defines a global OktaUtil object\n                that contains methods used to complete the Okta login flow.\n             --\u003e\n            {{{OktaUtil}}}\n\n            \u003cscript type=\"text/javascript\" nonce=\"{{nonceValue}}\"\u003e\n                // \"config\" object contains default widget configuration\n                // with any custom overrides defined in your admin settings.\n                var config = OktaUtil.getSignInWidgetConfig();\n\n                // Render the Okta Sign-In Widget\n                var oktaSignIn = new OktaSignIn(config);\n                oktaSignIn.renderEl({ el: '#okta-login-container' },\n                    OktaUtil.completeLogin,\n                    function(error) {\n                        // Logs errors that occur when configuring the widget.\n                        // Remove or replace this with your own custom error handler.\n                        console.log(error.message, error);\n                    }\n                );\n            \u003c/script\u003e\n        \u003c/body\u003e\n        \u003c/html\u003e\n      widgetVersion: ^6\n      widgetCustomizations:\n        - widgetGeneration: G3\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/customizedSigninPage:CustomizedSigninPage example \u003cbrand_id\u003e\n```\n\n",
            "properties": {
                "brandId": {
                    "type": "string",
                    "description": "brand id of the preview signin page\n"
                },
                "contentSecurityPolicySetting": {
                    "$ref": "#/types/okta:index/CustomizedSigninPageContentSecurityPolicySetting:CustomizedSigninPageContentSecurityPolicySetting"
                },
                "pageContent": {
                    "type": "string",
                    "description": "page content of the preview signin page\n"
                },
                "widgetCustomizations": {
                    "$ref": "#/types/okta:index/CustomizedSigninPageWidgetCustomizations:CustomizedSigninPageWidgetCustomizations"
                },
                "widgetVersion": {
                    "type": "string",
                    "description": "widget version specified as a Semver. The following are currently supported\n\t\t*, ^1, ^2, ^3, ^4, ^5, ^6, ^7, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11, 1.12, 1.13, 2.1, 2.2, 2.3, 2.4,\n\t\t2.5, 2.6, 2.7, 2.8, 2.9, 2.10, 2.11, 2.12, 2.13, 2.14, 2.15, 2.16, 2.17, 2.18, 2.19, 2.20, 2.21,\n\t\t3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 5.0, 5.1, 5.2, 5.3,\n\t\t5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 5.10, 5.11, 5.12, 5.13, 5.14, 5.15, 5.16, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5,\n\t\t6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 7.10, 7.11, 7.12, 7.13.\n"
                }
            },
            "required": [
                "brandId",
                "pageContent",
                "widgetVersion"
            ],
            "inputProperties": {
                "brandId": {
                    "type": "string",
                    "description": "brand id of the preview signin page\n"
                },
                "contentSecurityPolicySetting": {
                    "$ref": "#/types/okta:index/CustomizedSigninPageContentSecurityPolicySetting:CustomizedSigninPageContentSecurityPolicySetting"
                },
                "pageContent": {
                    "type": "string",
                    "description": "page content of the preview signin page\n"
                },
                "widgetCustomizations": {
                    "$ref": "#/types/okta:index/CustomizedSigninPageWidgetCustomizations:CustomizedSigninPageWidgetCustomizations"
                },
                "widgetVersion": {
                    "type": "string",
                    "description": "widget version specified as a Semver. The following are currently supported\n\t\t*, ^1, ^2, ^3, ^4, ^5, ^6, ^7, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11, 1.12, 1.13, 2.1, 2.2, 2.3, 2.4,\n\t\t2.5, 2.6, 2.7, 2.8, 2.9, 2.10, 2.11, 2.12, 2.13, 2.14, 2.15, 2.16, 2.17, 2.18, 2.19, 2.20, 2.21,\n\t\t3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 5.0, 5.1, 5.2, 5.3,\n\t\t5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 5.10, 5.11, 5.12, 5.13, 5.14, 5.15, 5.16, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5,\n\t\t6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 7.10, 7.11, 7.12, 7.13.\n"
                }
            },
            "requiredInputs": [
                "brandId",
                "pageContent",
                "widgetVersion"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomizedSigninPage resources.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "brand id of the preview signin page\n"
                    },
                    "contentSecurityPolicySetting": {
                        "$ref": "#/types/okta:index/CustomizedSigninPageContentSecurityPolicySetting:CustomizedSigninPageContentSecurityPolicySetting"
                    },
                    "pageContent": {
                        "type": "string",
                        "description": "page content of the preview signin page\n"
                    },
                    "widgetCustomizations": {
                        "$ref": "#/types/okta:index/CustomizedSigninPageWidgetCustomizations:CustomizedSigninPageWidgetCustomizations"
                    },
                    "widgetVersion": {
                        "type": "string",
                        "description": "widget version specified as a Semver. The following are currently supported\n\t\t*, ^1, ^2, ^3, ^4, ^5, ^6, ^7, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11, 1.12, 1.13, 2.1, 2.2, 2.3, 2.4,\n\t\t2.5, 2.6, 2.7, 2.8, 2.9, 2.10, 2.11, 2.12, 2.13, 2.14, 2.15, 2.16, 2.17, 2.18, 2.19, 2.20, 2.21,\n\t\t3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 5.0, 5.1, 5.2, 5.3,\n\t\t5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 5.10, 5.11, 5.12, 5.13, 5.14, 5.15, 5.16, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5,\n\t\t6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 7.10, 7.11, 7.12, 7.13.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/domain:Domain": {
            "description": "Manages custom domain for your organization.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.Domain(\"example\", {name: \"www.example.com\"});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.Domain(\"example\", name=\"www.example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Domain(\"example\", new()\n    {\n        Name = \"www.example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewDomain(ctx, \"example\", \u0026okta.DomainArgs{\n\t\t\tName: pulumi.String(\"www.example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Domain;\nimport com.pulumi.okta.DomainArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Domain(\"example\", DomainArgs.builder()\n            .name(\"www.example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:Domain\n    properties:\n      name: www.example.com\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/domain:Domain example \u003cdomain_id\u003e\n```\n\n",
            "properties": {
                "brandId": {
                    "type": "string",
                    "description": "Brand id of the domain\n"
                },
                "certificateSourceType": {
                    "type": "string",
                    "description": "Certificate source type that indicates whether the certificate is provided by the user or Okta. Accepted values: `MANUAL`, `OKTA_MANAGED`. Warning: Use of OKTA_MANAGED requires a feature flag to be enabled. Default value = MANUAL\n"
                },
                "dnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/DomainDnsRecord:DomainDnsRecord"
                    },
                    "description": "TXT and CNAME records to be registered for the Domain\n"
                },
                "name": {
                    "type": "string",
                    "description": "Custom Domain name\n"
                },
                "validationStatus": {
                    "type": "string",
                    "description": "Status of the domain\n"
                }
            },
            "required": [
                "brandId",
                "dnsRecords",
                "name",
                "validationStatus"
            ],
            "inputProperties": {
                "brandId": {
                    "type": "string",
                    "description": "Brand id of the domain\n"
                },
                "certificateSourceType": {
                    "type": "string",
                    "description": "Certificate source type that indicates whether the certificate is provided by the user or Okta. Accepted values: `MANUAL`, `OKTA_MANAGED`. Warning: Use of OKTA_MANAGED requires a feature flag to be enabled. Default value = MANUAL\n"
                },
                "name": {
                    "type": "string",
                    "description": "Custom Domain name\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Domain resources.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand id of the domain\n"
                    },
                    "certificateSourceType": {
                        "type": "string",
                        "description": "Certificate source type that indicates whether the certificate is provided by the user or Okta. Accepted values: `MANUAL`, `OKTA_MANAGED`. Warning: Use of OKTA_MANAGED requires a feature flag to be enabled. Default value = MANUAL\n"
                    },
                    "dnsRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/DomainDnsRecord:DomainDnsRecord"
                        },
                        "description": "TXT and CNAME records to be registered for the Domain\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Custom Domain name\n",
                        "willReplaceOnChanges": true
                    },
                    "validationStatus": {
                        "type": "string",
                        "description": "Status of the domain\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/domainCertificate:DomainCertificate": {
            "description": "Manages certificate for the domain.\nThis resource's 'certificate', 'private_key', and 'certificate_chain' attributes\nhold actual PEM values and can be referred to by other configs requiring\ncertificate and private key inputs. This is inline with TF's best\npractices\nof not encrypting state.\nSee Let's Encrypt Certbot notes at the end of this\ndocumentation for notes on how to generate a domain certificate with Let's Encrypt Certbot\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.Domain(\"example\", {name: \"www.example.com\"});\nconst test = new okta.DomainCertificate(\"test\", {\n    domainId: testOktaDomain.id,\n    type: \"PEM\",\n    certificate: `-----BEGIN CERTIFICATE-----\nMIIFNzCCBB+gAwIBAgISBAXomJWRama3ypu8TIxdA9wzMA0GCSqGSIb3DQEBCwUA\n...\nNSgRtSXq11j8O4JONi8EXe7cEtvzUiLR5PL3itsK2svtrZ9jIwQ95wOPaA==\n-----END CERTIFICATE-----\n`,\n    certificateChain: `-----BEGIN CERTIFICATE-----\nMIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw\n...\nDfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5\n-----END CERTIFICATE-----\n`,\n    privateKey: `-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC5cyk6x63iBJSW\n...\nnUFLNE8pXSnsqb0eOL74f3uQ\n-----END PRIVATE KEY-----\n`,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.Domain(\"example\", name=\"www.example.com\")\ntest = okta.DomainCertificate(\"test\",\n    domain_id=test_okta_domain[\"id\"],\n    type=\"PEM\",\n    certificate=\"\"\"-----BEGIN CERTIFICATE-----\nMIIFNzCCBB+gAwIBAgISBAXomJWRama3ypu8TIxdA9wzMA0GCSqGSIb3DQEBCwUA\n...\nNSgRtSXq11j8O4JONi8EXe7cEtvzUiLR5PL3itsK2svtrZ9jIwQ95wOPaA==\n-----END CERTIFICATE-----\n\"\"\",\n    certificate_chain=\"\"\"-----BEGIN CERTIFICATE-----\nMIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw\n...\nDfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5\n-----END CERTIFICATE-----\n\"\"\",\n    private_key=\"\"\"-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC5cyk6x63iBJSW\n...\nnUFLNE8pXSnsqb0eOL74f3uQ\n-----END PRIVATE KEY-----\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Domain(\"example\", new()\n    {\n        Name = \"www.example.com\",\n    });\n\n    var test = new Okta.DomainCertificate(\"test\", new()\n    {\n        DomainId = testOktaDomain.Id,\n        Type = \"PEM\",\n        Certificate = @\"-----BEGIN CERTIFICATE-----\nMIIFNzCCBB+gAwIBAgISBAXomJWRama3ypu8TIxdA9wzMA0GCSqGSIb3DQEBCwUA\n...\nNSgRtSXq11j8O4JONi8EXe7cEtvzUiLR5PL3itsK2svtrZ9jIwQ95wOPaA==\n-----END CERTIFICATE-----\n\",\n        CertificateChain = @\"-----BEGIN CERTIFICATE-----\nMIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw\n...\nDfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5\n-----END CERTIFICATE-----\n\",\n        PrivateKey = @\"-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC5cyk6x63iBJSW\n...\nnUFLNE8pXSnsqb0eOL74f3uQ\n-----END PRIVATE KEY-----\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewDomain(ctx, \"example\", \u0026okta.DomainArgs{\n\t\t\tName: pulumi.String(\"www.example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewDomainCertificate(ctx, \"test\", \u0026okta.DomainCertificateArgs{\n\t\t\tDomainId: pulumi.Any(testOktaDomain.Id),\n\t\t\tType:     pulumi.String(\"PEM\"),\n\t\t\tCertificate: pulumi.String(`-----BEGIN CERTIFICATE-----\nMIIFNzCCBB+gAwIBAgISBAXomJWRama3ypu8TIxdA9wzMA0GCSqGSIb3DQEBCwUA\n...\nNSgRtSXq11j8O4JONi8EXe7cEtvzUiLR5PL3itsK2svtrZ9jIwQ95wOPaA==\n-----END CERTIFICATE-----\n`),\n\t\t\tCertificateChain: pulumi.String(`-----BEGIN CERTIFICATE-----\nMIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw\n...\nDfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5\n-----END CERTIFICATE-----\n`),\n\t\t\tPrivateKey: pulumi.String(`-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC5cyk6x63iBJSW\n...\nnUFLNE8pXSnsqb0eOL74f3uQ\n-----END PRIVATE KEY-----\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Domain;\nimport com.pulumi.okta.DomainArgs;\nimport com.pulumi.okta.DomainCertificate;\nimport com.pulumi.okta.DomainCertificateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Domain(\"example\", DomainArgs.builder()\n            .name(\"www.example.com\")\n            .build());\n\n        var test = new DomainCertificate(\"test\", DomainCertificateArgs.builder()\n            .domainId(testOktaDomain.id())\n            .type(\"PEM\")\n            .certificate(\"\"\"\n-----BEGIN CERTIFICATE-----\nMIIFNzCCBB+gAwIBAgISBAXomJWRama3ypu8TIxdA9wzMA0GCSqGSIb3DQEBCwUA\n...\nNSgRtSXq11j8O4JONi8EXe7cEtvzUiLR5PL3itsK2svtrZ9jIwQ95wOPaA==\n-----END CERTIFICATE-----\n            \"\"\")\n            .certificateChain(\"\"\"\n-----BEGIN CERTIFICATE-----\nMIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw\n...\nDfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5\n-----END CERTIFICATE-----\n            \"\"\")\n            .privateKey(\"\"\"\n-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC5cyk6x63iBJSW\n...\nnUFLNE8pXSnsqb0eOL74f3uQ\n-----END PRIVATE KEY-----\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:Domain\n    properties:\n      name: www.example.com\n  test:\n    type: okta:DomainCertificate\n    properties:\n      domainId: ${testOktaDomain.id}\n      type: PEM\n      certificate: |\n        -----BEGIN CERTIFICATE-----\n        MIIFNzCCBB+gAwIBAgISBAXomJWRama3ypu8TIxdA9wzMA0GCSqGSIb3DQEBCwUA\n        ...\n        NSgRtSXq11j8O4JONi8EXe7cEtvzUiLR5PL3itsK2svtrZ9jIwQ95wOPaA==\n        -----END CERTIFICATE-----\n      certificateChain: |\n        -----BEGIN CERTIFICATE-----\n        MIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw\n        ...\n        Dfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5\n        -----END CERTIFICATE-----\n      privateKey: |\n        -----BEGIN PRIVATE KEY-----\n        MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC5cyk6x63iBJSW\n        ...\n        nUFLNE8pXSnsqb0eOL74f3uQ\n        -----END PRIVATE KEY-----\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\n## Let's Encrypt Certbot\n\nThis example demonstrates generatoring a domain certificate with letsencrypt\ncertbot https://letsencrypt.org/getting-started/\n\n```\n$ certbot certonly --manual --preferred-challenges dns --key-type rsa -d [DOMAIN]\n```\n\nUse letsencrypt's certbot to generate domain certificates in RSA output mode.\nThe generator's output corresponds to `okta.DomainCertificate` fields in the\nfollowing manner.\n\nOkta Field          | Certbot file\n--------------------|--------------\n`certificate`       | `cert.pem`\n`certificate_chain` | `chain.pem`\n`private_key`       | `privkey.pem`\n",
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "Certificate content\n"
                },
                "certificateChain": {
                    "type": "string",
                    "description": "Certificate chain\n"
                },
                "domainId": {
                    "type": "string",
                    "description": "Domain's ID\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Certificate private key\n"
                },
                "type": {
                    "type": "string",
                    "description": "Certificate type. Valid value is `PEM`\n"
                }
            },
            "required": [
                "certificate",
                "certificateChain",
                "domainId",
                "privateKey",
                "type"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "string",
                    "description": "Certificate content\n"
                },
                "certificateChain": {
                    "type": "string",
                    "description": "Certificate chain\n"
                },
                "domainId": {
                    "type": "string",
                    "description": "Domain's ID\n",
                    "willReplaceOnChanges": true
                },
                "privateKey": {
                    "type": "string",
                    "description": "Certificate private key\n"
                },
                "type": {
                    "type": "string",
                    "description": "Certificate type. Valid value is `PEM`\n"
                }
            },
            "requiredInputs": [
                "certificate",
                "certificateChain",
                "domainId",
                "privateKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DomainCertificate resources.\n",
                "properties": {
                    "certificate": {
                        "type": "string",
                        "description": "Certificate content\n"
                    },
                    "certificateChain": {
                        "type": "string",
                        "description": "Certificate chain\n"
                    },
                    "domainId": {
                        "type": "string",
                        "description": "Domain's ID\n",
                        "willReplaceOnChanges": true
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "Certificate private key\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Certificate type. Valid value is `PEM`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/domainVerification:DomainVerification": {
            "description": "Verifies the Domain. This is replacement for the `verify` field from the `okta.Domain` resource. The resource won't be created if the domain could not be verified. The provider will make several requests to verify the domain until the API returns `VERIFIED` verification status.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.Domain(\"example\", {name: \"www.example.com\"});\nconst exampleDomainVerification = new okta.DomainVerification(\"example\", {domainId: test.id});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.Domain(\"example\", name=\"www.example.com\")\nexample_domain_verification = okta.DomainVerification(\"example\", domain_id=test[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Domain(\"example\", new()\n    {\n        Name = \"www.example.com\",\n    });\n\n    var exampleDomainVerification = new Okta.DomainVerification(\"example\", new()\n    {\n        DomainId = test.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewDomain(ctx, \"example\", \u0026okta.DomainArgs{\n\t\t\tName: pulumi.String(\"www.example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewDomainVerification(ctx, \"example\", \u0026okta.DomainVerificationArgs{\n\t\t\tDomainId: pulumi.Any(test.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Domain;\nimport com.pulumi.okta.DomainArgs;\nimport com.pulumi.okta.DomainVerification;\nimport com.pulumi.okta.DomainVerificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Domain(\"example\", DomainArgs.builder()\n            .name(\"www.example.com\")\n            .build());\n\n        var exampleDomainVerification = new DomainVerification(\"exampleDomainVerification\", DomainVerificationArgs.builder()\n            .domainId(test.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:Domain\n    properties:\n      name: www.example.com\n  exampleDomainVerification:\n    type: okta:DomainVerification\n    name: example\n    properties:\n      domainId: ${test.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "domainId": {
                    "type": "string",
                    "description": "Domain's ID\n"
                }
            },
            "required": [
                "domainId"
            ],
            "inputProperties": {
                "domainId": {
                    "type": "string",
                    "description": "Domain's ID\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "domainId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DomainVerification resources.\n",
                "properties": {
                    "domainId": {
                        "type": "string",
                        "description": "Domain's ID\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/emailCustomization:EmailCustomization": {
            "description": "Create an email customization of an email template belonging to a brand in an Okta organization.\n\t\tUse this resource to create an [email\n\t\tcustomization](https://developer.okta.com/docs/reference/api/brands/#create-email-customization)\n\t\tof an email template belonging to a brand in an Okta organization.\n\t\t\u003e Okta's public API is strict regarding the behavior of the 'is_default'\n\t\tproperty in [an email\n\t\tcustomization](https://developer.okta.com/docs/reference/api/brands/#email-customization).\n\t\tMake use of 'depends_on' meta argument to ensure the provider navigates email customization\n\t\tlanguage versions seamlessly. Have all secondary customizations depend on the primary\n\t\tcustomization that is marked default. See Example Usage.\n\t\t\u003e Caveats for [creating an email\n\t\tcustomization](https://developer.okta.com/docs/reference/api/brands/#response-body-19).\n\t\tIf this is the first customization being created for the email template, and\n\t\t'is_default' is not set for the customization in its resource configuration, the\n\t\tAPI will respond with the created customization marked as default. The API will\n\t\t400 if the language parameter is not one of the supported languages or the body\n\t\tparameter does not contain a required variable reference. The API will error 409\n\t\tif 'is_default' is true and a default customization exists. The API will 404 for\n\t\tan invalid 'brand_id' or 'template_name'.\n\t\t\u003e Caveats for [updating an email\n\t\tcustomization](https://developer.okta.com/docs/reference/api/brands/#response-body-22).\n\t\tIf the 'is_default' parameter is true, the previous default email customization\n\t\thas its 'is_default' set to false (see previous note about mitigating this with\n\t\t'depends_on' meta argument). The API will 409 if there’s already another email\n\t\tcustomization for the specified language or the 'is_default' parameter is false\n\t\tand the email customization being updated is the default. The API will 400 if\n\t\tthe language parameter is not one of the supported locales or the body parameter\n\t\tdoes not contain a required variable reference.  The API will 404 for an invalid\n\t\t'brand_id' or 'template_name'.\n\n## Import\n\n```sh\n$ pulumi import okta:index/emailCustomization:EmailCustomization example \u003ccustomization_id\u003e/\u003cbrand_id\u003e/\u003ctemplate_name\u003e\n```\n\n",
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The body of the customization\n"
                },
                "brandId": {
                    "type": "string",
                    "description": "Brand ID\n"
                },
                "forceIsDefault": {
                    "type": "string",
                    "description": "Force is_default on the create and delete by deleting all email customizations. Comma separated string with values of 'create' or 'destroy' or both `create,destroy'.\n",
                    "deprecationMessage": "force_is_default is deprecated and now is a no-op in behavior. Rely upon the depends_on meta argument to force dependency of secondary templates to the default template"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Whether the customization is the default\n"
                },
                "language": {
                    "type": "string",
                    "description": "The language supported by the customization - Example values from [supported languages](https://developer.okta.com/docs/reference/api/brands/#supported-languages)\n"
                },
                "links": {
                    "type": "string",
                    "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the customization\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template Name - Example values: `AccountLockout`,`ADForgotPassword`,`ADForgotPasswordDenied`,`ADSelfServiceUnlock`,`ADUserActivation`,`AuthenticatorEnrolled`,`AuthenticatorReset`,`ChangeEmailConfirmation`,`EmailChallenge`,`EmailChangeConfirmation`,`EmailFactorVerification`,`ForgotPassword`,`ForgotPasswordDenied`,`IGAReviewerEndNotification`,`IGAReviewerNotification`,`IGAReviewerPendingNotification`,`IGAReviewerReassigned`,`LDAPForgotPassword`,`LDAPForgotPasswordDenied`,`LDAPSelfServiceUnlock`,`LDAPUserActivation`,`MyAccountChangeConfirmation`,`NewSignOnNotification`,`OktaVerifyActivation`,`PasswordChanged`,`PasswordResetByAdmin`,`PendingEmailChange`,`RegistrationActivation`,`RegistrationEmailVerification`,`SelfServiceUnlock`,`SelfServiceUnlockOnUnlockedAccount`,`UserActivation`\n"
                }
            },
            "required": [
                "brandId",
                "links",
                "templateName"
            ],
            "inputProperties": {
                "body": {
                    "type": "string",
                    "description": "The body of the customization\n"
                },
                "brandId": {
                    "type": "string",
                    "description": "Brand ID\n"
                },
                "forceIsDefault": {
                    "type": "string",
                    "description": "Force is_default on the create and delete by deleting all email customizations. Comma separated string with values of 'create' or 'destroy' or both `create,destroy'.\n",
                    "deprecationMessage": "force_is_default is deprecated and now is a no-op in behavior. Rely upon the depends_on meta argument to force dependency of secondary templates to the default template"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Whether the customization is the default\n"
                },
                "language": {
                    "type": "string",
                    "description": "The language supported by the customization - Example values from [supported languages](https://developer.okta.com/docs/reference/api/brands/#supported-languages)\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the customization\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template Name - Example values: `AccountLockout`,`ADForgotPassword`,`ADForgotPasswordDenied`,`ADSelfServiceUnlock`,`ADUserActivation`,`AuthenticatorEnrolled`,`AuthenticatorReset`,`ChangeEmailConfirmation`,`EmailChallenge`,`EmailChangeConfirmation`,`EmailFactorVerification`,`ForgotPassword`,`ForgotPasswordDenied`,`IGAReviewerEndNotification`,`IGAReviewerNotification`,`IGAReviewerPendingNotification`,`IGAReviewerReassigned`,`LDAPForgotPassword`,`LDAPForgotPasswordDenied`,`LDAPSelfServiceUnlock`,`LDAPUserActivation`,`MyAccountChangeConfirmation`,`NewSignOnNotification`,`OktaVerifyActivation`,`PasswordChanged`,`PasswordResetByAdmin`,`PendingEmailChange`,`RegistrationActivation`,`RegistrationEmailVerification`,`SelfServiceUnlock`,`SelfServiceUnlockOnUnlockedAccount`,`UserActivation`\n"
                }
            },
            "requiredInputs": [
                "brandId",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailCustomization resources.\n",
                "properties": {
                    "body": {
                        "type": "string",
                        "description": "The body of the customization\n"
                    },
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    },
                    "forceIsDefault": {
                        "type": "string",
                        "description": "Force is_default on the create and delete by deleting all email customizations. Comma separated string with values of 'create' or 'destroy' or both `create,destroy'.\n",
                        "deprecationMessage": "force_is_default is deprecated and now is a no-op in behavior. Rely upon the depends_on meta argument to force dependency of secondary templates to the default template"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Whether the customization is the default\n"
                    },
                    "language": {
                        "type": "string",
                        "description": "The language supported by the customization - Example values from [supported languages](https://developer.okta.com/docs/reference/api/brands/#supported-languages)\n"
                    },
                    "links": {
                        "type": "string",
                        "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template\n"
                    },
                    "subject": {
                        "type": "string",
                        "description": "The subject of the customization\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template Name - Example values: `AccountLockout`,`ADForgotPassword`,`ADForgotPasswordDenied`,`ADSelfServiceUnlock`,`ADUserActivation`,`AuthenticatorEnrolled`,`AuthenticatorReset`,`ChangeEmailConfirmation`,`EmailChallenge`,`EmailChangeConfirmation`,`EmailFactorVerification`,`ForgotPassword`,`ForgotPasswordDenied`,`IGAReviewerEndNotification`,`IGAReviewerNotification`,`IGAReviewerPendingNotification`,`IGAReviewerReassigned`,`LDAPForgotPassword`,`LDAPForgotPasswordDenied`,`LDAPSelfServiceUnlock`,`LDAPUserActivation`,`MyAccountChangeConfirmation`,`NewSignOnNotification`,`OktaVerifyActivation`,`PasswordChanged`,`PasswordResetByAdmin`,`PendingEmailChange`,`RegistrationActivation`,`RegistrationEmailVerification`,`SelfServiceUnlock`,`SelfServiceUnlockOnUnlockedAccount`,`UserActivation`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/emailDomain:EmailDomain": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.EmailDomain(\"example\", {\n    brandId: \"abc123\",\n    domain: \"example.com\",\n    displayName: \"test\",\n    userName: \"paul_atreides\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.EmailDomain(\"example\",\n    brand_id=\"abc123\",\n    domain=\"example.com\",\n    display_name=\"test\",\n    user_name=\"paul_atreides\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.EmailDomain(\"example\", new()\n    {\n        BrandId = \"abc123\",\n        Domain = \"example.com\",\n        DisplayName = \"test\",\n        UserName = \"paul_atreides\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewEmailDomain(ctx, \"example\", \u0026okta.EmailDomainArgs{\n\t\t\tBrandId:     pulumi.String(\"abc123\"),\n\t\t\tDomain:      pulumi.String(\"example.com\"),\n\t\t\tDisplayName: pulumi.String(\"test\"),\n\t\t\tUserName:    pulumi.String(\"paul_atreides\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.EmailDomain;\nimport com.pulumi.okta.EmailDomainArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new EmailDomain(\"example\", EmailDomainArgs.builder()\n            .brandId(\"abc123\")\n            .domain(\"example.com\")\n            .displayName(\"test\")\n            .userName(\"paul_atreides\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:EmailDomain\n    properties:\n      brandId: abc123\n      domain: example.com\n      displayName: test\n      userName: paul_atreides\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/emailDomain:EmailDomain example \u003cdomain_id\u003e\n```\n\n",
            "properties": {
                "brandId": {
                    "type": "string",
                    "description": "Brand id of the email domain.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the email domain.\n"
                },
                "dnsValidationRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/EmailDomainDnsValidationRecord:EmailDomainDnsValidationRecord"
                    },
                    "description": "TXT and cname records to be registered for the email Domain\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Mail domain to send from.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "User name of the email domain.\n"
                },
                "validationStatus": {
                    "type": "string",
                    "description": "Status of the email domain. Values: NOT*STARTED, IN*PROGRESS, VERIFIED, COMPLETED\n"
                }
            },
            "required": [
                "brandId",
                "displayName",
                "dnsValidationRecords",
                "domain",
                "userName",
                "validationStatus"
            ],
            "inputProperties": {
                "brandId": {
                    "type": "string",
                    "description": "Brand id of the email domain.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the email domain.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Mail domain to send from.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "User name of the email domain.\n"
                }
            },
            "requiredInputs": [
                "brandId",
                "displayName",
                "domain",
                "userName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailDomain resources.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand id of the email domain.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the email domain.\n"
                    },
                    "dnsValidationRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/EmailDomainDnsValidationRecord:EmailDomainDnsValidationRecord"
                        },
                        "description": "TXT and cname records to be registered for the email Domain\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Mail domain to send from.\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "User name of the email domain.\n"
                    },
                    "validationStatus": {
                        "type": "string",
                        "description": "Status of the email domain. Values: NOT*STARTED, IN*PROGRESS, VERIFIED, COMPLETED\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/emailDomainVerification:EmailDomainVerification": {
            "description": "Verifies the email domain. The resource won't be created if the email domain could not be verified.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.EmailDomain(\"example\", {\n    brandId: \"abc123\",\n    domain: \"example.com\",\n    displayName: \"test\",\n    userName: \"paul_atreides\",\n});\nconst exampleEmailDomainVerification = new okta.EmailDomainVerification(\"example\", {emailDomainId: valid.id});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.EmailDomain(\"example\",\n    brand_id=\"abc123\",\n    domain=\"example.com\",\n    display_name=\"test\",\n    user_name=\"paul_atreides\")\nexample_email_domain_verification = okta.EmailDomainVerification(\"example\", email_domain_id=valid[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.EmailDomain(\"example\", new()\n    {\n        BrandId = \"abc123\",\n        Domain = \"example.com\",\n        DisplayName = \"test\",\n        UserName = \"paul_atreides\",\n    });\n\n    var exampleEmailDomainVerification = new Okta.EmailDomainVerification(\"example\", new()\n    {\n        EmailDomainId = valid.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewEmailDomain(ctx, \"example\", \u0026okta.EmailDomainArgs{\n\t\t\tBrandId:     pulumi.String(\"abc123\"),\n\t\t\tDomain:      pulumi.String(\"example.com\"),\n\t\t\tDisplayName: pulumi.String(\"test\"),\n\t\t\tUserName:    pulumi.String(\"paul_atreides\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewEmailDomainVerification(ctx, \"example\", \u0026okta.EmailDomainVerificationArgs{\n\t\t\tEmailDomainId: pulumi.Any(valid.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.EmailDomain;\nimport com.pulumi.okta.EmailDomainArgs;\nimport com.pulumi.okta.EmailDomainVerification;\nimport com.pulumi.okta.EmailDomainVerificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new EmailDomain(\"example\", EmailDomainArgs.builder()\n            .brandId(\"abc123\")\n            .domain(\"example.com\")\n            .displayName(\"test\")\n            .userName(\"paul_atreides\")\n            .build());\n\n        var exampleEmailDomainVerification = new EmailDomainVerification(\"exampleEmailDomainVerification\", EmailDomainVerificationArgs.builder()\n            .emailDomainId(valid.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:EmailDomain\n    properties:\n      brandId: abc123\n      domain: example.com\n      displayName: test\n      userName: paul_atreides\n  exampleEmailDomainVerification:\n    type: okta:EmailDomainVerification\n    name: example\n    properties:\n      emailDomainId: ${valid.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "emailDomainId": {
                    "type": "string",
                    "description": "Email domain ID\n"
                }
            },
            "required": [
                "emailDomainId"
            ],
            "inputProperties": {
                "emailDomainId": {
                    "type": "string",
                    "description": "Email domain ID\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "emailDomainId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailDomainVerification resources.\n",
                "properties": {
                    "emailDomainId": {
                        "type": "string",
                        "description": "Email domain ID\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/emailSender:EmailSender": {
            "description": "Creates custom email sender. This resource allows you to create and configure a custom email sender.\n\n\u003e **DEPRECATED** The api for this resource has been deprecated. Please use `okta.EmailDomain` instead.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.EmailSender(\"example\", {\n    fromName: \"Paul Atreides\",\n    fromAddress: \"no-reply@caladan.planet\",\n    subdomain: \"mail\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.EmailSender(\"example\",\n    from_name=\"Paul Atreides\",\n    from_address=\"no-reply@caladan.planet\",\n    subdomain=\"mail\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.EmailSender(\"example\", new()\n    {\n        FromName = \"Paul Atreides\",\n        FromAddress = \"no-reply@caladan.planet\",\n        Subdomain = \"mail\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewEmailSender(ctx, \"example\", \u0026okta.EmailSenderArgs{\n\t\t\tFromName:    pulumi.String(\"Paul Atreides\"),\n\t\t\tFromAddress: pulumi.String(\"no-reply@caladan.planet\"),\n\t\t\tSubdomain:   pulumi.String(\"mail\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.EmailSender;\nimport com.pulumi.okta.EmailSenderArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new EmailSender(\"example\", EmailSenderArgs.builder()\n            .fromName(\"Paul Atreides\")\n            .fromAddress(\"no-reply@caladan.planet\")\n            .subdomain(\"mail\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:EmailSender\n    properties:\n      fromName: Paul Atreides\n      fromAddress: no-reply@caladan.planet\n      subdomain: mail\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/emailSender:EmailSender example \u003csender_id\u003e\n```\n\n",
            "properties": {
                "dnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/EmailSenderDnsRecord:EmailSenderDnsRecord"
                    },
                    "description": "TXT and CNAME records to be registered for the Domain\n"
                },
                "fromAddress": {
                    "type": "string",
                    "description": "Email address to send from\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "Name of sender\n"
                },
                "status": {
                    "type": "string",
                    "description": "Verification status\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Mail domain to send from\n"
                }
            },
            "required": [
                "dnsRecords",
                "fromAddress",
                "fromName",
                "status",
                "subdomain"
            ],
            "inputProperties": {
                "fromAddress": {
                    "type": "string",
                    "description": "Email address to send from\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "Name of sender\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Mail domain to send from\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "fromAddress",
                "fromName",
                "subdomain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailSender resources.\n",
                "properties": {
                    "dnsRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/EmailSenderDnsRecord:EmailSenderDnsRecord"
                        },
                        "description": "TXT and CNAME records to be registered for the Domain\n"
                    },
                    "fromAddress": {
                        "type": "string",
                        "description": "Email address to send from\n"
                    },
                    "fromName": {
                        "type": "string",
                        "description": "Name of sender\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Verification status\n"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "Mail domain to send from\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/emailSenderVerification:EmailSenderVerification": {
            "description": "Verifies the email sender. The resource won't be created if the email sender could not be verified.\n\n\u003e **DEPRECATED** The api for this resource has been deprecated. Please use `okta.EmailDomainVerification` instead.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.EmailSender(\"example\", {\n    fromName: \"Paul Atreides\",\n    fromAddress: \"no-reply@caladan.planet\",\n    subdomain: \"mail\",\n});\nconst exampleEmailSenderVerification = new okta.EmailSenderVerification(\"example\", {senderId: valid.id});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.EmailSender(\"example\",\n    from_name=\"Paul Atreides\",\n    from_address=\"no-reply@caladan.planet\",\n    subdomain=\"mail\")\nexample_email_sender_verification = okta.EmailSenderVerification(\"example\", sender_id=valid[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.EmailSender(\"example\", new()\n    {\n        FromName = \"Paul Atreides\",\n        FromAddress = \"no-reply@caladan.planet\",\n        Subdomain = \"mail\",\n    });\n\n    var exampleEmailSenderVerification = new Okta.EmailSenderVerification(\"example\", new()\n    {\n        SenderId = valid.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewEmailSender(ctx, \"example\", \u0026okta.EmailSenderArgs{\n\t\t\tFromName:    pulumi.String(\"Paul Atreides\"),\n\t\t\tFromAddress: pulumi.String(\"no-reply@caladan.planet\"),\n\t\t\tSubdomain:   pulumi.String(\"mail\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewEmailSenderVerification(ctx, \"example\", \u0026okta.EmailSenderVerificationArgs{\n\t\t\tSenderId: pulumi.Any(valid.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.EmailSender;\nimport com.pulumi.okta.EmailSenderArgs;\nimport com.pulumi.okta.EmailSenderVerification;\nimport com.pulumi.okta.EmailSenderVerificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new EmailSender(\"example\", EmailSenderArgs.builder()\n            .fromName(\"Paul Atreides\")\n            .fromAddress(\"no-reply@caladan.planet\")\n            .subdomain(\"mail\")\n            .build());\n\n        var exampleEmailSenderVerification = new EmailSenderVerification(\"exampleEmailSenderVerification\", EmailSenderVerificationArgs.builder()\n            .senderId(valid.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:EmailSender\n    properties:\n      fromName: Paul Atreides\n      fromAddress: no-reply@caladan.planet\n      subdomain: mail\n  exampleEmailSenderVerification:\n    type: okta:EmailSenderVerification\n    name: example\n    properties:\n      senderId: ${valid.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "senderId": {
                    "type": "string",
                    "description": "Email sender ID\n"
                }
            },
            "required": [
                "senderId"
            ],
            "inputProperties": {
                "senderId": {
                    "type": "string",
                    "description": "Email sender ID\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "senderId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailSenderVerification resources.\n",
                "properties": {
                    "senderId": {
                        "type": "string",
                        "description": "Email sender ID\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/emailSmtpServer:EmailSmtpServer": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Human-readable name for your SMTP server.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "If true, routes all email traffic through your SMTP server.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of your SMTP server.\n"
                },
                "password": {
                    "type": "string",
                    "description": "User name of the email domain.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number of your SMTP server.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Display name of the email domain.\n"
                }
            },
            "required": [
                "alias",
                "host",
                "password",
                "port",
                "username"
            ],
            "inputProperties": {
                "alias": {
                    "type": "string",
                    "description": "Human-readable name for your SMTP server.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "If true, routes all email traffic through your SMTP server.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of your SMTP server.\n"
                },
                "password": {
                    "type": "string",
                    "description": "User name of the email domain.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number of your SMTP server.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Display name of the email domain.\n"
                }
            },
            "requiredInputs": [
                "alias",
                "host",
                "password",
                "port",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailSmtpServer resources.\n",
                "properties": {
                    "alias": {
                        "type": "string",
                        "description": "Human-readable name for your SMTP server.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "If true, routes all email traffic through your SMTP server.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "Hostname or IP address of your SMTP server.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "User name of the email domain.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port number of your SMTP server.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Display name of the email domain.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/emailTemplateSettings:EmailTemplateSettings": {
            "description": "Manages email template settings\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.EmailTemplateSettings(\"example\", {\n    brandId: \"\u003cbrand id\u003e\",\n    templateName: \"ForgotPassword\",\n    recipients: \"ADMINS_ONLY\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.EmailTemplateSettings(\"example\",\n    brand_id=\"\u003cbrand id\u003e\",\n    template_name=\"ForgotPassword\",\n    recipients=\"ADMINS_ONLY\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.EmailTemplateSettings(\"example\", new()\n    {\n        BrandId = \"\u003cbrand id\u003e\",\n        TemplateName = \"ForgotPassword\",\n        Recipients = \"ADMINS_ONLY\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewEmailTemplateSettings(ctx, \"example\", \u0026okta.EmailTemplateSettingsArgs{\n\t\t\tBrandId:      pulumi.String(\"\u003cbrand id\u003e\"),\n\t\t\tTemplateName: pulumi.String(\"ForgotPassword\"),\n\t\t\tRecipients:   pulumi.String(\"ADMINS_ONLY\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.EmailTemplateSettings;\nimport com.pulumi.okta.EmailTemplateSettingsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new EmailTemplateSettings(\"example\", EmailTemplateSettingsArgs.builder()\n            .brandId(\"\u003cbrand id\u003e\")\n            .templateName(\"ForgotPassword\")\n            .recipients(\"ADMINS_ONLY\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:EmailTemplateSettings\n    properties:\n      brandId: \u003cbrand id\u003e\n      templateName: ForgotPassword\n      recipients: ADMINS_ONLY\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/emailTemplateSettings:EmailTemplateSettings example \u003cbrand_id\u003e/\u003ctemplate_name\u003e\n```\n\n",
            "properties": {
                "brandId": {
                    "type": "string",
                    "description": "The ID of the brand.\n"
                },
                "recipients": {
                    "type": "string",
                    "description": "The recipients the emails of this template will be sent to - Valid values: `ALL_USERS`, `ADMINS_ONLY`, `NO_USERS`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Email template name - Example values: `AccountLockout`,`ADForgotPassword`,`ADForgotPasswordDenied`,`ADSelfServiceUnlock`,`ADUserActivation`,`AuthenticatorEnrolled`,`AuthenticatorReset`,`ChangeEmailConfirmation`,`EmailChallenge`,`EmailChangeConfirmation`,`EmailFactorVerification`,`ForgotPassword`,`ForgotPasswordDenied`,`IGAReviewerEndNotification`,`IGAReviewerNotification`,`IGAReviewerPendingNotification`,`IGAReviewerReassigned`,`LDAPForgotPassword`,`LDAPForgotPasswordDenied`,`LDAPSelfServiceUnlock`,`LDAPUserActivation`,`MyAccountChangeConfirmation`,`NewSignOnNotification`,`OktaVerifyActivation`,`PasswordChanged`,`PasswordResetByAdmin`,`PendingEmailChange`,`RegistrationActivation`,`RegistrationEmailVerification`,`SelfServiceUnlock`,`SelfServiceUnlockOnUnlockedAccount`,`UserActivation`\n"
                }
            },
            "required": [
                "brandId",
                "recipients",
                "templateName"
            ],
            "inputProperties": {
                "brandId": {
                    "type": "string",
                    "description": "The ID of the brand.\n"
                },
                "recipients": {
                    "type": "string",
                    "description": "The recipients the emails of this template will be sent to - Valid values: `ALL_USERS`, `ADMINS_ONLY`, `NO_USERS`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Email template name - Example values: `AccountLockout`,`ADForgotPassword`,`ADForgotPasswordDenied`,`ADSelfServiceUnlock`,`ADUserActivation`,`AuthenticatorEnrolled`,`AuthenticatorReset`,`ChangeEmailConfirmation`,`EmailChallenge`,`EmailChangeConfirmation`,`EmailFactorVerification`,`ForgotPassword`,`ForgotPasswordDenied`,`IGAReviewerEndNotification`,`IGAReviewerNotification`,`IGAReviewerPendingNotification`,`IGAReviewerReassigned`,`LDAPForgotPassword`,`LDAPForgotPasswordDenied`,`LDAPSelfServiceUnlock`,`LDAPUserActivation`,`MyAccountChangeConfirmation`,`NewSignOnNotification`,`OktaVerifyActivation`,`PasswordChanged`,`PasswordResetByAdmin`,`PendingEmailChange`,`RegistrationActivation`,`RegistrationEmailVerification`,`SelfServiceUnlock`,`SelfServiceUnlockOnUnlockedAccount`,`UserActivation`\n"
                }
            },
            "requiredInputs": [
                "brandId",
                "recipients",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailTemplateSettings resources.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "The ID of the brand.\n"
                    },
                    "recipients": {
                        "type": "string",
                        "description": "The recipients the emails of this template will be sent to - Valid values: `ALL_USERS`, `ADMINS_ONLY`, `NO_USERS`\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Email template name - Example values: `AccountLockout`,`ADForgotPassword`,`ADForgotPasswordDenied`,`ADSelfServiceUnlock`,`ADUserActivation`,`AuthenticatorEnrolled`,`AuthenticatorReset`,`ChangeEmailConfirmation`,`EmailChallenge`,`EmailChangeConfirmation`,`EmailFactorVerification`,`ForgotPassword`,`ForgotPasswordDenied`,`IGAReviewerEndNotification`,`IGAReviewerNotification`,`IGAReviewerPendingNotification`,`IGAReviewerReassigned`,`LDAPForgotPassword`,`LDAPForgotPasswordDenied`,`LDAPSelfServiceUnlock`,`LDAPUserActivation`,`MyAccountChangeConfirmation`,`NewSignOnNotification`,`OktaVerifyActivation`,`PasswordChanged`,`PasswordResetByAdmin`,`PendingEmailChange`,`RegistrationActivation`,`RegistrationEmailVerification`,`SelfServiceUnlock`,`SelfServiceUnlockOnUnlockedAccount`,`UserActivation`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/eventHook:EventHook": {
            "description": "Creates an event hook. This resource allows you to create and configure an event hook.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.EventHook(\"example\", {\n    name: \"example\",\n    events: [\n        \"user.lifecycle.create\",\n        \"user.lifecycle.delete.initiated\",\n    ],\n    channel: {\n        type: \"HTTP\",\n        version: \"1.0.0\",\n        uri: \"https://example.com/test\",\n    },\n    auth: {\n        type: \"HEADER\",\n        key: \"Authorization\",\n        value: \"123\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.EventHook(\"example\",\n    name=\"example\",\n    events=[\n        \"user.lifecycle.create\",\n        \"user.lifecycle.delete.initiated\",\n    ],\n    channel={\n        \"type\": \"HTTP\",\n        \"version\": \"1.0.0\",\n        \"uri\": \"https://example.com/test\",\n    },\n    auth={\n        \"type\": \"HEADER\",\n        \"key\": \"Authorization\",\n        \"value\": \"123\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.EventHook(\"example\", new()\n    {\n        Name = \"example\",\n        Events = new[]\n        {\n            \"user.lifecycle.create\",\n            \"user.lifecycle.delete.initiated\",\n        },\n        Channel = \n        {\n            { \"type\", \"HTTP\" },\n            { \"version\", \"1.0.0\" },\n            { \"uri\", \"https://example.com/test\" },\n        },\n        Auth = \n        {\n            { \"type\", \"HEADER\" },\n            { \"key\", \"Authorization\" },\n            { \"value\", \"123\" },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewEventHook(ctx, \"example\", \u0026okta.EventHookArgs{\n\t\t\tName: pulumi.String(\"example\"),\n\t\t\tEvents: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user.lifecycle.create\"),\n\t\t\t\tpulumi.String(\"user.lifecycle.delete.initiated\"),\n\t\t\t},\n\t\t\tChannel: pulumi.StringMap{\n\t\t\t\t\"type\":    pulumi.String(\"HTTP\"),\n\t\t\t\t\"version\": pulumi.String(\"1.0.0\"),\n\t\t\t\t\"uri\":     pulumi.String(\"https://example.com/test\"),\n\t\t\t},\n\t\t\tAuth: pulumi.StringMap{\n\t\t\t\t\"type\":  pulumi.String(\"HEADER\"),\n\t\t\t\t\"key\":   pulumi.String(\"Authorization\"),\n\t\t\t\t\"value\": pulumi.String(\"123\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.EventHook;\nimport com.pulumi.okta.EventHookArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new EventHook(\"example\", EventHookArgs.builder()\n            .name(\"example\")\n            .events(            \n                \"user.lifecycle.create\",\n                \"user.lifecycle.delete.initiated\")\n            .channel(Map.ofEntries(\n                Map.entry(\"type\", \"HTTP\"),\n                Map.entry(\"version\", \"1.0.0\"),\n                Map.entry(\"uri\", \"https://example.com/test\")\n            ))\n            .auth(Map.ofEntries(\n                Map.entry(\"type\", \"HEADER\"),\n                Map.entry(\"key\", \"Authorization\"),\n                Map.entry(\"value\", \"123\")\n            ))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:EventHook\n    properties:\n      name: example\n      events:\n        - user.lifecycle.create\n        - user.lifecycle.delete.initiated\n      channel:\n        type: HTTP\n        version: 1.0.0\n        uri: https://example.com/test\n      auth:\n        type: HEADER\n        key: Authorization\n        value: '123'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/eventHook:EventHook example \u003chook_id\u003e\n```\n\n",
            "properties": {
                "auth": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Details of the endpoint the event hook will hit. - 'version' - (Required) The version of the channel. The\ncurrently-supported version is '1.0.0'. - 'uri' - (Required) The URI the hook will hit. - 'type' - (Optional) The type\nof hook to trigger. Currently, the only supported type is 'HTTP'.\n"
                },
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Details of the endpoint the event hook will hit.\n"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The events that will be delivered to this hook. [See here for a list of supported\nevents](https://developer.okta.com/docs/reference/api/event-types/?q=event-hook-eligible).\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/EventHookHeader:EventHookHeader"
                    },
                    "description": "Map of headers to send along in event hook request.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The event hook display name.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                }
            },
            "required": [
                "channel",
                "events",
                "name"
            ],
            "inputProperties": {
                "auth": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Details of the endpoint the event hook will hit. - 'version' - (Required) The version of the channel. The\ncurrently-supported version is '1.0.0'. - 'uri' - (Required) The URI the hook will hit. - 'type' - (Optional) The type\nof hook to trigger. Currently, the only supported type is 'HTTP'.\n"
                },
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Details of the endpoint the event hook will hit.\n"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The events that will be delivered to this hook. [See here for a list of supported\nevents](https://developer.okta.com/docs/reference/api/event-types/?q=event-hook-eligible).\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/EventHookHeader:EventHookHeader"
                    },
                    "description": "Map of headers to send along in event hook request.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The event hook display name.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                }
            },
            "requiredInputs": [
                "channel",
                "events"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EventHook resources.\n",
                "properties": {
                    "auth": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Details of the endpoint the event hook will hit. - 'version' - (Required) The version of the channel. The\ncurrently-supported version is '1.0.0'. - 'uri' - (Required) The URI the hook will hit. - 'type' - (Optional) The type\nof hook to trigger. Currently, the only supported type is 'HTTP'.\n"
                    },
                    "channel": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Details of the endpoint the event hook will hit.\n"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The events that will be delivered to this hook. [See here for a list of supported\nevents](https://developer.okta.com/docs/reference/api/event-types/?q=event-hook-eligible).\n"
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/EventHookHeader:EventHookHeader"
                        },
                        "description": "Map of headers to send along in event hook request.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The event hook display name.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default to `ACTIVE`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/eventHookVerification:EventHookVerification": {
            "description": "Verifies the Event Hook. The resource won't be created unless the URI provided in the event hook returns a valid JSON object with verification. See [Event Hooks](https://developer.okta.com/docs/concepts/event-hooks/#one-time-verification-request) documentation for details.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.EventHook(\"example\", {\n    name: \"example\",\n    events: [\n        \"user.lifecycle.create\",\n        \"user.lifecycle.delete.initiated\",\n    ],\n    channel: {\n        type: \"HTTP\",\n        version: \"1.0.0\",\n        uri: \"https://example.com/test\",\n    },\n    auth: {\n        type: \"HEADER\",\n        key: \"Authorization\",\n        value: \"123\",\n    },\n});\nconst exampleEventHookVerification = new okta.EventHookVerification(\"example\", {eventHookId: example.id});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.EventHook(\"example\",\n    name=\"example\",\n    events=[\n        \"user.lifecycle.create\",\n        \"user.lifecycle.delete.initiated\",\n    ],\n    channel={\n        \"type\": \"HTTP\",\n        \"version\": \"1.0.0\",\n        \"uri\": \"https://example.com/test\",\n    },\n    auth={\n        \"type\": \"HEADER\",\n        \"key\": \"Authorization\",\n        \"value\": \"123\",\n    })\nexample_event_hook_verification = okta.EventHookVerification(\"example\", event_hook_id=example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.EventHook(\"example\", new()\n    {\n        Name = \"example\",\n        Events = new[]\n        {\n            \"user.lifecycle.create\",\n            \"user.lifecycle.delete.initiated\",\n        },\n        Channel = \n        {\n            { \"type\", \"HTTP\" },\n            { \"version\", \"1.0.0\" },\n            { \"uri\", \"https://example.com/test\" },\n        },\n        Auth = \n        {\n            { \"type\", \"HEADER\" },\n            { \"key\", \"Authorization\" },\n            { \"value\", \"123\" },\n        },\n    });\n\n    var exampleEventHookVerification = new Okta.EventHookVerification(\"example\", new()\n    {\n        EventHookId = example.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := okta.NewEventHook(ctx, \"example\", \u0026okta.EventHookArgs{\n\t\t\tName: pulumi.String(\"example\"),\n\t\t\tEvents: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user.lifecycle.create\"),\n\t\t\t\tpulumi.String(\"user.lifecycle.delete.initiated\"),\n\t\t\t},\n\t\t\tChannel: pulumi.StringMap{\n\t\t\t\t\"type\":    pulumi.String(\"HTTP\"),\n\t\t\t\t\"version\": pulumi.String(\"1.0.0\"),\n\t\t\t\t\"uri\":     pulumi.String(\"https://example.com/test\"),\n\t\t\t},\n\t\t\tAuth: pulumi.StringMap{\n\t\t\t\t\"type\":  pulumi.String(\"HEADER\"),\n\t\t\t\t\"key\":   pulumi.String(\"Authorization\"),\n\t\t\t\t\"value\": pulumi.String(\"123\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewEventHookVerification(ctx, \"example\", \u0026okta.EventHookVerificationArgs{\n\t\t\tEventHookId: example.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.EventHook;\nimport com.pulumi.okta.EventHookArgs;\nimport com.pulumi.okta.EventHookVerification;\nimport com.pulumi.okta.EventHookVerificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new EventHook(\"example\", EventHookArgs.builder()\n            .name(\"example\")\n            .events(            \n                \"user.lifecycle.create\",\n                \"user.lifecycle.delete.initiated\")\n            .channel(Map.ofEntries(\n                Map.entry(\"type\", \"HTTP\"),\n                Map.entry(\"version\", \"1.0.0\"),\n                Map.entry(\"uri\", \"https://example.com/test\")\n            ))\n            .auth(Map.ofEntries(\n                Map.entry(\"type\", \"HEADER\"),\n                Map.entry(\"key\", \"Authorization\"),\n                Map.entry(\"value\", \"123\")\n            ))\n            .build());\n\n        var exampleEventHookVerification = new EventHookVerification(\"exampleEventHookVerification\", EventHookVerificationArgs.builder()\n            .eventHookId(example.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:EventHook\n    properties:\n      name: example\n      events:\n        - user.lifecycle.create\n        - user.lifecycle.delete.initiated\n      channel:\n        type: HTTP\n        version: 1.0.0\n        uri: https://example.com/test\n      auth:\n        type: HEADER\n        key: Authorization\n        value: '123'\n  exampleEventHookVerification:\n    type: okta:EventHookVerification\n    name: example\n    properties:\n      eventHookId: ${example.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "eventHookId": {
                    "type": "string",
                    "description": "Event hook ID\n"
                }
            },
            "required": [
                "eventHookId"
            ],
            "inputProperties": {
                "eventHookId": {
                    "type": "string",
                    "description": "Event hook ID\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "eventHookId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EventHookVerification resources.\n",
                "properties": {
                    "eventHookId": {
                        "type": "string",
                        "description": "Event hook ID\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/factorTotp:FactorTotp": {
            "description": "Allows you to manage the time-based one-time password (TOTP) factors. A time-based one-time password (TOTP) is a\n\t\ttemporary passcode that is generated for user authentication. Examples of TOTP include hardware authenticators and\n\t\tmobile app authenticators.\n\t\t\nOnce saved, the settings cannot be changed (except for the 'name' field). Any other change would force resource\nrecreation.\n\n\u003e IMPORTANT: Okta API does not allow deletion of the TOTP factors through the\nAPI. This provider will print a warning if it attempts to destroy the resource\nreceives a 501 not implemented error from the API instead of outright failing.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.FactorTotp(\"example\", {\n    name: \"example\",\n    otpLength: 10,\n    hmacAlgorithm: \"HMacSHA256\",\n    timeStep: 30,\n    clockDriftInterval: 10,\n    sharedSecretEncoding: \"hexadecimal\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.FactorTotp(\"example\",\n    name=\"example\",\n    otp_length=10,\n    hmac_algorithm=\"HMacSHA256\",\n    time_step=30,\n    clock_drift_interval=10,\n    shared_secret_encoding=\"hexadecimal\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.FactorTotp(\"example\", new()\n    {\n        Name = \"example\",\n        OtpLength = 10,\n        HmacAlgorithm = \"HMacSHA256\",\n        TimeStep = 30,\n        ClockDriftInterval = 10,\n        SharedSecretEncoding = \"hexadecimal\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewFactorTotp(ctx, \"example\", \u0026okta.FactorTotpArgs{\n\t\t\tName:                 pulumi.String(\"example\"),\n\t\t\tOtpLength:            pulumi.Int(10),\n\t\t\tHmacAlgorithm:        pulumi.String(\"HMacSHA256\"),\n\t\t\tTimeStep:             pulumi.Int(30),\n\t\t\tClockDriftInterval:   pulumi.Int(10),\n\t\t\tSharedSecretEncoding: pulumi.String(\"hexadecimal\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.FactorTotp;\nimport com.pulumi.okta.FactorTotpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new FactorTotp(\"example\", FactorTotpArgs.builder()\n            .name(\"example\")\n            .otpLength(10)\n            .hmacAlgorithm(\"HMacSHA256\")\n            .timeStep(30)\n            .clockDriftInterval(10)\n            .sharedSecretEncoding(\"hexadecimal\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:FactorTotp\n    properties:\n      name: example\n      otpLength: 10\n      hmacAlgorithm: HMacSHA256\n      timeStep: 30\n      clockDriftInterval: 10\n      sharedSecretEncoding: hexadecimal\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "clockDriftInterval": {
                    "type": "integer",
                    "description": "Clock drift interval. This setting allows you to build in tolerance for any drift between the token's current time and the server's current time. Valid values: `3`, `5`, `10`. Default is `3`.\n"
                },
                "hmacAlgorithm": {
                    "type": "string",
                    "description": "HMAC Algorithm. Valid values: `HMacSHA1`, `HMacSHA256`, `HMacSHA512`. Default is `HMacSHA512`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The TOTP name.\n"
                },
                "otpLength": {
                    "type": "integer",
                    "description": "Length of the password. Default is `6`.\n"
                },
                "sharedSecretEncoding": {
                    "type": "string",
                    "description": "Shared secret encoding. Valid values: `base32`, `base64`, `hexadecimal`. Default is `base32`.\n"
                },
                "timeStep": {
                    "type": "integer",
                    "description": "Time step in seconds. Valid values: `15`, `30`, `60`. Default is `15`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "clockDriftInterval": {
                    "type": "integer",
                    "description": "Clock drift interval. This setting allows you to build in tolerance for any drift between the token's current time and the server's current time. Valid values: `3`, `5`, `10`. Default is `3`.\n",
                    "willReplaceOnChanges": true
                },
                "hmacAlgorithm": {
                    "type": "string",
                    "description": "HMAC Algorithm. Valid values: `HMacSHA1`, `HMacSHA256`, `HMacSHA512`. Default is `HMacSHA512`.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The TOTP name.\n"
                },
                "otpLength": {
                    "type": "integer",
                    "description": "Length of the password. Default is `6`.\n",
                    "willReplaceOnChanges": true
                },
                "sharedSecretEncoding": {
                    "type": "string",
                    "description": "Shared secret encoding. Valid values: `base32`, `base64`, `hexadecimal`. Default is `base32`.\n",
                    "willReplaceOnChanges": true
                },
                "timeStep": {
                    "type": "integer",
                    "description": "Time step in seconds. Valid values: `15`, `30`, `60`. Default is `15`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FactorTotp resources.\n",
                "properties": {
                    "clockDriftInterval": {
                        "type": "integer",
                        "description": "Clock drift interval. This setting allows you to build in tolerance for any drift between the token's current time and the server's current time. Valid values: `3`, `5`, `10`. Default is `3`.\n",
                        "willReplaceOnChanges": true
                    },
                    "hmacAlgorithm": {
                        "type": "string",
                        "description": "HMAC Algorithm. Valid values: `HMacSHA1`, `HMacSHA256`, `HMacSHA512`. Default is `HMacSHA512`.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The TOTP name.\n"
                    },
                    "otpLength": {
                        "type": "integer",
                        "description": "Length of the password. Default is `6`.\n",
                        "willReplaceOnChanges": true
                    },
                    "sharedSecretEncoding": {
                        "type": "string",
                        "description": "Shared secret encoding. Valid values: `base32`, `base64`, `hexadecimal`. Default is `base32`.\n",
                        "willReplaceOnChanges": true
                    },
                    "timeStep": {
                        "type": "integer",
                        "description": "Time step in seconds. Valid values: `15`, `30`, `60`. Default is `15`.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/feature:Feature": {
            "description": "Manages brand. This resource allows you to toggle an Okta Feature.\n\t\t\n## Import\n\n```sh\n$ pulumi import okta:index/feature:Feature example \u003cid\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Name of the feature.\n"
                },
                "featureId": {
                    "type": "string",
                    "description": "Okta API for feature only reads and updates therefore the okta*feature resource needs to act as a quasi data source. Do this by setting feature*id\n"
                },
                "lifeCycle": {
                    "type": "string",
                    "description": "Whether to `ENABLE` or `DISABLE` the feature\n"
                },
                "mode": {
                    "type": "boolean",
                    "description": "Indicates if you want to force enable or disable a feature. Value is `true` meaning force\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the feature.\n"
                },
                "stage": {
                    "$ref": "#/types/okta:index/FeatureStage:FeatureStage",
                    "description": "Current release cycle stage of a feature.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The feature status.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of feature.\n"
                }
            },
            "required": [
                "description",
                "featureId",
                "name",
                "stage",
                "status",
                "type"
            ],
            "inputProperties": {
                "featureId": {
                    "type": "string",
                    "description": "Okta API for feature only reads and updates therefore the okta*feature resource needs to act as a quasi data source. Do this by setting feature*id\n"
                },
                "lifeCycle": {
                    "type": "string",
                    "description": "Whether to `ENABLE` or `DISABLE` the feature\n"
                },
                "mode": {
                    "type": "boolean",
                    "description": "Indicates if you want to force enable or disable a feature. Value is `true` meaning force\n"
                }
            },
            "requiredInputs": [
                "featureId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Feature resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Name of the feature.\n"
                    },
                    "featureId": {
                        "type": "string",
                        "description": "Okta API for feature only reads and updates therefore the okta*feature resource needs to act as a quasi data source. Do this by setting feature*id\n"
                    },
                    "lifeCycle": {
                        "type": "string",
                        "description": "Whether to `ENABLE` or `DISABLE` the feature\n"
                    },
                    "mode": {
                        "type": "boolean",
                        "description": "Indicates if you want to force enable or disable a feature. Value is `true` meaning force\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the feature.\n"
                    },
                    "stage": {
                        "$ref": "#/types/okta:index/FeatureStage:FeatureStage",
                        "description": "Current release cycle stage of a feature.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The feature status.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of feature.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/groupMemberships:GroupMemberships": {
            "description": "Resource to manage a set of memberships for a specific group.\nThis resource will allow you to bulk manage group membership in Okta for a given\ngroup. This offers an interface to pass multiple users into a single resource\ncall, for better API resource usage. If you need a relationship of a single \nuser to many groups, please use the 'okta_user_group_memberships' resource.\n**Important**: The default behavior of the resource is to only maintain the\nstate of user ids that are assigned it. This behavior will signal drift only if\nthose users stop being part of the group. If the desired behavior is track all\nusers that are added/removed from the group make use of the 'track_all_users'\nargument with this resource.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.group.Group(\"test\", {\n    name: \"testAcc_replace_with_uuid\",\n    description: \"testing, testing\",\n});\nconst testGroupMemberships = new okta.GroupMemberships(\"test\", {\n    groupId: test.id,\n    users: [\n        test1.id,\n        test2.id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.group.Group(\"test\",\n    name=\"testAcc_replace_with_uuid\",\n    description=\"testing, testing\")\ntest_group_memberships = okta.GroupMemberships(\"test\",\n    group_id=test.id,\n    users=[\n        test1[\"id\"],\n        test2[\"id\"],\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Okta.Group.Group(\"test\", new()\n    {\n        Name = \"testAcc_replace_with_uuid\",\n        Description = \"testing, testing\",\n    });\n\n    var testGroupMemberships = new Okta.GroupMemberships(\"test\", new()\n    {\n        GroupId = test.Id,\n        Users = new[]\n        {\n            test1.Id,\n            test2.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := group.NewGroup(ctx, \"test\", \u0026group.GroupArgs{\n\t\t\tName:        pulumi.String(\"testAcc_replace_with_uuid\"),\n\t\t\tDescription: pulumi.String(\"testing, testing\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewGroupMemberships(ctx, \"test\", \u0026okta.GroupMembershipsArgs{\n\t\t\tGroupId: test.ID(),\n\t\t\tUsers: pulumi.StringArray{\n\t\t\t\ttest1.Id,\n\t\t\t\ttest2.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.group.Group;\nimport com.pulumi.okta.group.GroupArgs;\nimport com.pulumi.okta.GroupMemberships;\nimport com.pulumi.okta.GroupMembershipsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new Group(\"test\", GroupArgs.builder()\n            .name(\"testAcc_replace_with_uuid\")\n            .description(\"testing, testing\")\n            .build());\n\n        var testGroupMemberships = new GroupMemberships(\"testGroupMemberships\", GroupMembershipsArgs.builder()\n            .groupId(test.id())\n            .users(            \n                test1.id(),\n                test2.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: okta:group:Group\n    properties:\n      name: testAcc_replace_with_uuid\n      description: testing, testing\n  testGroupMemberships:\n    type: okta:GroupMemberships\n    name: test\n    properties:\n      groupId: ${test.id}\n      users:\n        - ${test1.id}\n        - ${test2.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nan Okta Group's memberships can be imported via the Okta group ID.\n\n```sh\n$ pulumi import okta:index/groupMemberships:GroupMemberships test \u003cgroup_id\u003e\n```\n\noptional parameter track all users will also import all user id currently assigned to the group\n\n```sh\n$ pulumi import okta:index/groupMemberships:GroupMemberships test \u003cgroup_id\u003e/\u003ctrue\u003e\n```\n\n",
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "ID of a Okta group.\n"
                },
                "trackAllUsers": {
                    "type": "boolean",
                    "description": "The resource concerns itself with all users added/deleted to the group; even those managed outside of the resource.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta user IDs which the group should have membership managed for.\n"
                }
            },
            "required": [
                "groupId",
                "users"
            ],
            "inputProperties": {
                "groupId": {
                    "type": "string",
                    "description": "ID of a Okta group.\n",
                    "willReplaceOnChanges": true
                },
                "trackAllUsers": {
                    "type": "boolean",
                    "description": "The resource concerns itself with all users added/deleted to the group; even those managed outside of the resource.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta user IDs which the group should have membership managed for.\n"
                }
            },
            "requiredInputs": [
                "groupId",
                "users"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GroupMemberships resources.\n",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "description": "ID of a Okta group.\n",
                        "willReplaceOnChanges": true
                    },
                    "trackAllUsers": {
                        "type": "boolean",
                        "description": "The resource concerns itself with all users added/deleted to the group; even those managed outside of the resource.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of Okta user IDs which the group should have membership managed for.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/groupSchemaProperty:GroupSchemaProperty": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.GroupSchemaProperty(\"example\", {\n    index: \"customPropertyName\",\n    title: \"customPropertyName\",\n    type: \"string\",\n    description: \"My custom property name\",\n    master: \"OKTA\",\n    scope: \"SELF\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.GroupSchemaProperty(\"example\",\n    index=\"customPropertyName\",\n    title=\"customPropertyName\",\n    type=\"string\",\n    description=\"My custom property name\",\n    master=\"OKTA\",\n    scope=\"SELF\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.GroupSchemaProperty(\"example\", new()\n    {\n        Index = \"customPropertyName\",\n        Title = \"customPropertyName\",\n        Type = \"string\",\n        Description = \"My custom property name\",\n        Master = \"OKTA\",\n        Scope = \"SELF\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewGroupSchemaProperty(ctx, \"example\", \u0026okta.GroupSchemaPropertyArgs{\n\t\t\tIndex:       pulumi.String(\"customPropertyName\"),\n\t\t\tTitle:       pulumi.String(\"customPropertyName\"),\n\t\t\tType:        pulumi.String(\"string\"),\n\t\t\tDescription: pulumi.String(\"My custom property name\"),\n\t\t\tMaster:      pulumi.String(\"OKTA\"),\n\t\t\tScope:       pulumi.String(\"SELF\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.GroupSchemaProperty;\nimport com.pulumi.okta.GroupSchemaPropertyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new GroupSchemaProperty(\"example\", GroupSchemaPropertyArgs.builder()\n            .index(\"customPropertyName\")\n            .title(\"customPropertyName\")\n            .type(\"string\")\n            .description(\"My custom property name\")\n            .master(\"OKTA\")\n            .scope(\"SELF\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:GroupSchemaProperty\n    properties:\n      index: customPropertyName\n      title: customPropertyName\n      type: string\n      description: My custom property name\n      master: OKTA\n      scope: SELF\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/groupSchemaProperty:GroupSchemaProperty example \u003cindex\u003e\n```\n\n",
            "properties": {
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/GroupSchemaPropertyArrayOneOf:GroupSchemaPropertyArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to. - 'const' - (Required) value mapping to member of 'enum'. - 'title'\n- (Required) display name for the enum value.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `array`\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External namespace of the user schema property.\n"
                },
                "index": {
                    "type": "string",
                    "description": "Subschema unique string identifier\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the group schema property. It can be set to `PROFILE_MASTER`, `OVERRIDE` or `OKTA`. Default:\n`PROFILE_MASTER`\n"
                },
                "masterOverridePriorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/GroupSchemaPropertyMasterOverridePriority:GroupSchemaPropertyMasterOverridePriority"
                    },
                    "description": "Prioritized list of profile sources (required when `master` is `OVERRIDE`).\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `string`\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `string`\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/GroupSchemaPropertyOneOf:GroupSchemaPropertyOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value. - 'const' - (Required) value mapping to member of\n'enum'. - 'title' - (Required) display name for the enum value.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the subschema is required\n"
                },
                "scope": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "Subschema title (display name)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`\n"
                },
                "unique": {
                    "type": "string",
                    "description": "Whether the property should be unique. It can be set to `UNIQUE_VALIDATED` or `NOT_UNIQUE`.\n"
                }
            },
            "required": [
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/GroupSchemaPropertyArrayOneOf:GroupSchemaPropertyArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to. - 'const' - (Required) value mapping to member of 'enum'. - 'title'\n- (Required) display name for the enum value.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `array`\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n",
                    "willReplaceOnChanges": true
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External namespace of the user schema property.\n",
                    "willReplaceOnChanges": true
                },
                "index": {
                    "type": "string",
                    "description": "Subschema unique string identifier\n",
                    "willReplaceOnChanges": true
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the group schema property. It can be set to `PROFILE_MASTER`, `OVERRIDE` or `OKTA`. Default:\n`PROFILE_MASTER`\n"
                },
                "masterOverridePriorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/GroupSchemaPropertyMasterOverridePriority:GroupSchemaPropertyMasterOverridePriority"
                    },
                    "description": "Prioritized list of profile sources (required when `master` is `OVERRIDE`).\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `string`\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `string`\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/GroupSchemaPropertyOneOf:GroupSchemaPropertyOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value. - 'const' - (Required) value mapping to member of\n'enum'. - 'title' - (Required) display name for the enum value.\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the subschema is required\n"
                },
                "scope": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "Subschema title (display name)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`\n",
                    "willReplaceOnChanges": true
                },
                "unique": {
                    "type": "string",
                    "description": "Whether the property should be unique. It can be set to `UNIQUE_VALIDATED` or `NOT_UNIQUE`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GroupSchemaProperty resources.\n",
                "properties": {
                    "arrayEnums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values that an array property's items can be set to.\n"
                    },
                    "arrayOneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/GroupSchemaPropertyArrayOneOf:GroupSchemaPropertyArrayOneOf"
                        },
                        "description": "Display name and value an enum array can be set to. - 'const' - (Required) value mapping to member of 'enum'. - 'title'\n- (Required) display name for the enum value.\n"
                    },
                    "arrayType": {
                        "type": "string",
                        "description": "The type of the array elements if `type` is set to `array`\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the user schema property.\n"
                    },
                    "enums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                    },
                    "externalName": {
                        "type": "string",
                        "description": "External name of the user schema property.\n",
                        "willReplaceOnChanges": true
                    },
                    "externalNamespace": {
                        "type": "string",
                        "description": "External namespace of the user schema property.\n",
                        "willReplaceOnChanges": true
                    },
                    "index": {
                        "type": "string",
                        "description": "Subschema unique string identifier\n",
                        "willReplaceOnChanges": true
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the group schema property. It can be set to `PROFILE_MASTER`, `OVERRIDE` or `OKTA`. Default:\n`PROFILE_MASTER`\n"
                    },
                    "masterOverridePriorities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/GroupSchemaPropertyMasterOverridePriority:GroupSchemaPropertyMasterOverridePriority"
                        },
                        "description": "Prioritized list of profile sources (required when `master` is `OVERRIDE`).\n"
                    },
                    "maxLength": {
                        "type": "integer",
                        "description": "The maximum length of the user property value. Only applies to type `string`\n"
                    },
                    "minLength": {
                        "type": "integer",
                        "description": "The minimum length of the user property value. Only applies to type `string`\n"
                    },
                    "oneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/GroupSchemaPropertyOneOf:GroupSchemaPropertyOneOf"
                        },
                        "description": "Array of maps containing a mapping for display name to enum value. - 'const' - (Required) value mapping to member of\n'enum'. - 'title' - (Required) display name for the enum value.\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the subschema is required\n"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string",
                        "description": "Subschema title (display name)\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`\n",
                        "willReplaceOnChanges": true
                    },
                    "unique": {
                        "type": "string",
                        "description": "Whether the property should be unique. It can be set to `UNIQUE_VALIDATED` or `NOT_UNIQUE`.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/linkDefinition:LinkDefinition": {
            "description": "Manages the creation and removal of the link definitions.\n\t\t\nLink definition operations allow you to manage the creation and removal of the link definitions. If you remove a link \ndefinition, links based on that definition are unavailable. Note that this resource is immutable, thus can not be modified.\n\u003e **NOTE:** Links reappear if you recreate the definition. However, Okta is likely to change this behavior so that links don't reappear. Don't rely on this behavior in production environments.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.LinkDefinition(\"example\", {\n    primaryName: \"emperor\",\n    primaryTitle: \"Emperor\",\n    primaryDescription: \"Hereditary ruler of the Imperium and the Known Universe\",\n    associatedName: \"sardaukar\",\n    associatedTitle: \"Sardaukar\",\n    associatedDescription: \"Elite military force member\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.LinkDefinition(\"example\",\n    primary_name=\"emperor\",\n    primary_title=\"Emperor\",\n    primary_description=\"Hereditary ruler of the Imperium and the Known Universe\",\n    associated_name=\"sardaukar\",\n    associated_title=\"Sardaukar\",\n    associated_description=\"Elite military force member\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.LinkDefinition(\"example\", new()\n    {\n        PrimaryName = \"emperor\",\n        PrimaryTitle = \"Emperor\",\n        PrimaryDescription = \"Hereditary ruler of the Imperium and the Known Universe\",\n        AssociatedName = \"sardaukar\",\n        AssociatedTitle = \"Sardaukar\",\n        AssociatedDescription = \"Elite military force member\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewLinkDefinition(ctx, \"example\", \u0026okta.LinkDefinitionArgs{\n\t\t\tPrimaryName:           pulumi.String(\"emperor\"),\n\t\t\tPrimaryTitle:          pulumi.String(\"Emperor\"),\n\t\t\tPrimaryDescription:    pulumi.String(\"Hereditary ruler of the Imperium and the Known Universe\"),\n\t\t\tAssociatedName:        pulumi.String(\"sardaukar\"),\n\t\t\tAssociatedTitle:       pulumi.String(\"Sardaukar\"),\n\t\t\tAssociatedDescription: pulumi.String(\"Elite military force member\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.LinkDefinition;\nimport com.pulumi.okta.LinkDefinitionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new LinkDefinition(\"example\", LinkDefinitionArgs.builder()\n            .primaryName(\"emperor\")\n            .primaryTitle(\"Emperor\")\n            .primaryDescription(\"Hereditary ruler of the Imperium and the Known Universe\")\n            .associatedName(\"sardaukar\")\n            .associatedTitle(\"Sardaukar\")\n            .associatedDescription(\"Elite military force member\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:LinkDefinition\n    properties:\n      primaryName: emperor\n      primaryTitle: Emperor\n      primaryDescription: Hereditary ruler of the Imperium and the Known Universe\n      associatedName: sardaukar\n      associatedTitle: Sardaukar\n      associatedDescription: Elite military force member\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/linkDefinition:LinkDefinition example \u003cprimary_name\u003e\n```\n\n",
            "properties": {
                "associatedDescription": {
                    "type": "string",
                    "description": "Description of the associated relationship.\n"
                },
                "associatedName": {
                    "type": "string",
                    "description": "API name of the associated link.\n"
                },
                "associatedTitle": {
                    "type": "string",
                    "description": "Display name of the associated link.\n"
                },
                "primaryDescription": {
                    "type": "string",
                    "description": "Description of the primary relationship.\n"
                },
                "primaryName": {
                    "type": "string",
                    "description": "API name of the primary link.\n"
                },
                "primaryTitle": {
                    "type": "string",
                    "description": "Display name of the primary link.\n"
                }
            },
            "required": [
                "associatedDescription",
                "associatedName",
                "associatedTitle",
                "primaryDescription",
                "primaryName",
                "primaryTitle"
            ],
            "inputProperties": {
                "associatedDescription": {
                    "type": "string",
                    "description": "Description of the associated relationship.\n",
                    "willReplaceOnChanges": true
                },
                "associatedName": {
                    "type": "string",
                    "description": "API name of the associated link.\n",
                    "willReplaceOnChanges": true
                },
                "associatedTitle": {
                    "type": "string",
                    "description": "Display name of the associated link.\n",
                    "willReplaceOnChanges": true
                },
                "primaryDescription": {
                    "type": "string",
                    "description": "Description of the primary relationship.\n",
                    "willReplaceOnChanges": true
                },
                "primaryName": {
                    "type": "string",
                    "description": "API name of the primary link.\n",
                    "willReplaceOnChanges": true
                },
                "primaryTitle": {
                    "type": "string",
                    "description": "Display name of the primary link.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "associatedDescription",
                "associatedName",
                "associatedTitle",
                "primaryDescription",
                "primaryName",
                "primaryTitle"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LinkDefinition resources.\n",
                "properties": {
                    "associatedDescription": {
                        "type": "string",
                        "description": "Description of the associated relationship.\n",
                        "willReplaceOnChanges": true
                    },
                    "associatedName": {
                        "type": "string",
                        "description": "API name of the associated link.\n",
                        "willReplaceOnChanges": true
                    },
                    "associatedTitle": {
                        "type": "string",
                        "description": "Display name of the associated link.\n",
                        "willReplaceOnChanges": true
                    },
                    "primaryDescription": {
                        "type": "string",
                        "description": "Description of the primary relationship.\n",
                        "willReplaceOnChanges": true
                    },
                    "primaryName": {
                        "type": "string",
                        "description": "API name of the primary link.\n",
                        "willReplaceOnChanges": true
                    },
                    "primaryTitle": {
                        "type": "string",
                        "description": "Display name of the primary link.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/linkValue:LinkValue": {
            "description": "Manages users relationships. Link value operations allow you to create relationships between primary and associated users.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst padishah = new okta.LinkDefinition(\"padishah\", {\n    primaryName: \"emperor\",\n    primaryTitle: \"Emperor\",\n    primaryDescription: \"Hereditary ruler of the Imperium and the Known Universe\",\n    associatedName: \"sardaukar\",\n    associatedTitle: \"Sardaukar\",\n    associatedDescription: \"Elite military force member\",\n});\nconst emperor = new okta.user.User(\"emperor\", {\n    firstName: \"Shaddam\",\n    lastName: \"Corrino IV\",\n    login: \"shaddam.corrino.iv@salusa-secundus.planet\",\n    email: \"shaddam.corrino.iv@salusa-secundus.planet\",\n});\nconst sardaukars: okta.user.User[] = [];\nfor (const range = {value: 0}; range.value \u003c 5; range.value++) {\n    sardaukars.push(new okta.user.User(`sardaukars-${range.value}`, {\n        firstName: \"Amrit\",\n        lastName: `Sardaukar_${range.value}`,\n        login: `amritsardaukar_${range.value}@salusa-secundus.planet`,\n        email: `amritsardaukar_${range.value}@salusa-secundus.planet`,\n    }));\n}\nconst example = new okta.LinkValue(\"example\", {\n    primaryName: padishah.primaryName,\n    primaryUserId: emperor.id,\n    associatedUserIds: [\n        sardaukars[0].id,\n        sardaukars[1].id,\n        sardaukars[2].id,\n        sardaukars[3].id,\n        sardaukars[4].id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\npadishah = okta.LinkDefinition(\"padishah\",\n    primary_name=\"emperor\",\n    primary_title=\"Emperor\",\n    primary_description=\"Hereditary ruler of the Imperium and the Known Universe\",\n    associated_name=\"sardaukar\",\n    associated_title=\"Sardaukar\",\n    associated_description=\"Elite military force member\")\nemperor = okta.user.User(\"emperor\",\n    first_name=\"Shaddam\",\n    last_name=\"Corrino IV\",\n    login=\"shaddam.corrino.iv@salusa-secundus.planet\",\n    email=\"shaddam.corrino.iv@salusa-secundus.planet\")\nsardaukars = []\nfor range in [{\"value\": i} for i in range(0, 5)]:\n    sardaukars.append(okta.user.User(f\"sardaukars-{range['value']}\",\n        first_name=\"Amrit\",\n        last_name=f\"Sardaukar_{range['value']}\",\n        login=f\"amritsardaukar_{range['value']}@salusa-secundus.planet\",\n        email=f\"amritsardaukar_{range['value']}@salusa-secundus.planet\"))\nexample = okta.LinkValue(\"example\",\n    primary_name=padishah.primary_name,\n    primary_user_id=emperor.id,\n    associated_user_ids=[\n        sardaukars[0].id,\n        sardaukars[1].id,\n        sardaukars[2].id,\n        sardaukars[3].id,\n        sardaukars[4].id,\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var padishah = new Okta.LinkDefinition(\"padishah\", new()\n    {\n        PrimaryName = \"emperor\",\n        PrimaryTitle = \"Emperor\",\n        PrimaryDescription = \"Hereditary ruler of the Imperium and the Known Universe\",\n        AssociatedName = \"sardaukar\",\n        AssociatedTitle = \"Sardaukar\",\n        AssociatedDescription = \"Elite military force member\",\n    });\n\n    var emperor = new Okta.User.User(\"emperor\", new()\n    {\n        FirstName = \"Shaddam\",\n        LastName = \"Corrino IV\",\n        Login = \"shaddam.corrino.iv@salusa-secundus.planet\",\n        Email = \"shaddam.corrino.iv@salusa-secundus.planet\",\n    });\n\n    var sardaukars = new List\u003cOkta.User.User\u003e();\n    for (var rangeIndex = 0; rangeIndex \u003c 5; rangeIndex++)\n    {\n        var range = new { Value = rangeIndex };\n        sardaukars.Add(new Okta.User.User($\"sardaukars-{range.Value}\", new()\n        {\n            FirstName = \"Amrit\",\n            LastName = $\"Sardaukar_{range.Value}\",\n            Login = $\"amritsardaukar_{range.Value}@salusa-secundus.planet\",\n            Email = $\"amritsardaukar_{range.Value}@salusa-secundus.planet\",\n        }));\n    }\n    var example = new Okta.LinkValue(\"example\", new()\n    {\n        PrimaryName = padishah.PrimaryName,\n        PrimaryUserId = emperor.Id,\n        AssociatedUserIds = new[]\n        {\n            sardaukars[0].Id,\n            sardaukars[1].Id,\n            sardaukars[2].Id,\n            sardaukars[3].Id,\n            sardaukars[4].Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpadishah, err := okta.NewLinkDefinition(ctx, \"padishah\", \u0026okta.LinkDefinitionArgs{\n\t\t\tPrimaryName:           pulumi.String(\"emperor\"),\n\t\t\tPrimaryTitle:          pulumi.String(\"Emperor\"),\n\t\t\tPrimaryDescription:    pulumi.String(\"Hereditary ruler of the Imperium and the Known Universe\"),\n\t\t\tAssociatedName:        pulumi.String(\"sardaukar\"),\n\t\t\tAssociatedTitle:       pulumi.String(\"Sardaukar\"),\n\t\t\tAssociatedDescription: pulumi.String(\"Elite military force member\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\temperor, err := user.NewUser(ctx, \"emperor\", \u0026user.UserArgs{\n\t\t\tFirstName: pulumi.String(\"Shaddam\"),\n\t\t\tLastName:  pulumi.String(\"Corrino IV\"),\n\t\t\tLogin:     pulumi.String(\"shaddam.corrino.iv@salusa-secundus.planet\"),\n\t\t\tEmail:     pulumi.String(\"shaddam.corrino.iv@salusa-secundus.planet\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tvar sardaukars []*user.User\n\t\tfor index := 0; index \u003c 5; index++ {\n\t\t\tkey0 := index\n\t\t\tval0 := index\n\t\t\t__res, err := user.NewUser(ctx, fmt.Sprintf(\"sardaukars-%v\", key0), \u0026user.UserArgs{\n\t\t\t\tFirstName: pulumi.String(\"Amrit\"),\n\t\t\t\tLastName:  pulumi.Sprintf(\"Sardaukar_%v\", val0),\n\t\t\t\tLogin:     pulumi.Sprintf(\"amritsardaukar_%v@salusa-secundus.planet\", val0),\n\t\t\t\tEmail:     pulumi.Sprintf(\"amritsardaukar_%v@salusa-secundus.planet\", val0),\n\t\t\t})\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tsardaukars = append(sardaukars, __res)\n\t\t}\n\t\t_, err = okta.NewLinkValue(ctx, \"example\", \u0026okta.LinkValueArgs{\n\t\t\tPrimaryName:   padishah.PrimaryName,\n\t\t\tPrimaryUserId: emperor.ID(),\n\t\t\tAssociatedUserIds: pulumi.StringArray{\n\t\t\t\tsardaukars[0].ID(),\n\t\t\t\tsardaukars[1].ID(),\n\t\t\t\tsardaukars[2].ID(),\n\t\t\t\tsardaukars[3].ID(),\n\t\t\t\tsardaukars[4].ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.LinkDefinition;\nimport com.pulumi.okta.LinkDefinitionArgs;\nimport com.pulumi.okta.user.User;\nimport com.pulumi.okta.user.UserArgs;\nimport com.pulumi.okta.LinkValue;\nimport com.pulumi.okta.LinkValueArgs;\nimport com.pulumi.codegen.internal.KeyedValue;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var padishah = new LinkDefinition(\"padishah\", LinkDefinitionArgs.builder()\n            .primaryName(\"emperor\")\n            .primaryTitle(\"Emperor\")\n            .primaryDescription(\"Hereditary ruler of the Imperium and the Known Universe\")\n            .associatedName(\"sardaukar\")\n            .associatedTitle(\"Sardaukar\")\n            .associatedDescription(\"Elite military force member\")\n            .build());\n\n        var emperor = new User(\"emperor\", UserArgs.builder()\n            .firstName(\"Shaddam\")\n            .lastName(\"Corrino IV\")\n            .login(\"shaddam.corrino.iv@salusa-secundus.planet\")\n            .email(\"shaddam.corrino.iv@salusa-secundus.planet\")\n            .build());\n\n        for (var i = 0; i \u003c 5; i++) {\n            new User(\"sardaukars-\" + i, UserArgs.builder()\n                .firstName(\"Amrit\")\n                .lastName(String.format(\"Sardaukar_%s\", range.value()))\n                .login(String.format(\"amritsardaukar_%s@salusa-secundus.planet\", range.value()))\n                .email(String.format(\"amritsardaukar_%s@salusa-secundus.planet\", range.value()))\n                .build());\n\n        \n}\n        var example = new LinkValue(\"example\", LinkValueArgs.builder()\n            .primaryName(padishah.primaryName())\n            .primaryUserId(emperor.id())\n            .associatedUserIds(            \n                sardaukars[0].id(),\n                sardaukars[1].id(),\n                sardaukars[2].id(),\n                sardaukars[3].id(),\n                sardaukars[4].id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  padishah:\n    type: okta:LinkDefinition\n    properties:\n      primaryName: emperor\n      primaryTitle: Emperor\n      primaryDescription: Hereditary ruler of the Imperium and the Known Universe\n      associatedName: sardaukar\n      associatedTitle: Sardaukar\n      associatedDescription: Elite military force member\n  emperor:\n    type: okta:user:User\n    properties:\n      firstName: Shaddam\n      lastName: Corrino IV\n      login: shaddam.corrino.iv@salusa-secundus.planet\n      email: shaddam.corrino.iv@salusa-secundus.planet\n  sardaukars:\n    type: okta:user:User\n    properties:\n      firstName: Amrit\n      lastName: Sardaukar_${range.value}\n      login: amritsardaukar_${range.value}@salusa-secundus.planet\n      email: amritsardaukar_${range.value}@salusa-secundus.planet\n    options: {}\n  example:\n    type: okta:LinkValue\n    properties:\n      primaryName: ${padishah.primaryName}\n      primaryUserId: ${emperor.id}\n      associatedUserIds:\n        - ${sardaukars[0].id}\n        - ${sardaukars[1].id}\n        - ${sardaukars[2].id}\n        - ${sardaukars[3].id}\n        - ${sardaukars[4].id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/linkValue:LinkValue example \u003cprimary_name\u003e/\u003cprimary_user_id\u003e\n```\n\n",
            "properties": {
                "associatedUserIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs or login values of the users to be assigned the `associated` relationship.\n"
                },
                "primaryName": {
                    "type": "string",
                    "description": "Name of the `primary` relationship being assigned.\n"
                },
                "primaryUserId": {
                    "type": "string",
                    "description": "User ID to be assigned to `primary` for the 'associated' user in the specified relationship.\n"
                }
            },
            "required": [
                "primaryName",
                "primaryUserId"
            ],
            "inputProperties": {
                "associatedUserIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs or login values of the users to be assigned the `associated` relationship.\n"
                },
                "primaryName": {
                    "type": "string",
                    "description": "Name of the `primary` relationship being assigned.\n",
                    "willReplaceOnChanges": true
                },
                "primaryUserId": {
                    "type": "string",
                    "description": "User ID to be assigned to `primary` for the 'associated' user in the specified relationship.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "primaryName",
                "primaryUserId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LinkValue resources.\n",
                "properties": {
                    "associatedUserIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of User IDs or login values of the users to be assigned the `associated` relationship.\n"
                    },
                    "primaryName": {
                        "type": "string",
                        "description": "Name of the `primary` relationship being assigned.\n",
                        "willReplaceOnChanges": true
                    },
                    "primaryUserId": {
                        "type": "string",
                        "description": "User ID to be assigned to `primary` for the 'associated' user in the specified relationship.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/logStream:LogStream": {
            "description": "Manages log streams\n\n## Import\n\n```sh\n$ pulumi import okta:index/logStream:LogStream example \u003cstream_id\u003e\n```\n\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Unique name for the Log Stream object\n"
                },
                "settings": {
                    "$ref": "#/types/okta:index/LogStreamSettings:LogStreamSettings"
                },
                "status": {
                    "type": "string",
                    "description": "Stream status\n"
                },
                "type": {
                    "type": "string",
                    "description": "Streaming provider used - 'aws*eventbridge' or 'splunk*cloud_logstreaming'\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Unique name for the Log Stream object\n"
                },
                "settings": {
                    "$ref": "#/types/okta:index/LogStreamSettings:LogStreamSettings"
                },
                "status": {
                    "type": "string",
                    "description": "Stream status\n"
                },
                "type": {
                    "type": "string",
                    "description": "Streaming provider used - 'aws*eventbridge' or 'splunk*cloud_logstreaming'\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogStream resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Unique name for the Log Stream object\n"
                    },
                    "settings": {
                        "$ref": "#/types/okta:index/LogStreamSettings:LogStreamSettings"
                    },
                    "status": {
                        "type": "string",
                        "description": "Stream status\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Streaming provider used - 'aws*eventbridge' or 'splunk*cloud_logstreaming'\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/orgConfiguration:OrgConfiguration": {
            "description": "Manages org settings, logo, support and communication.\n\t\t\n\u003e **IMPORTANT:** You must specify all Org Setting properties when you update an org's profile. Any property not specified in the script will be deleted.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.OrgConfiguration(\"example\", {\n    companyName: \"Umbrella Corporation\",\n    website: \"https://terraform.io\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.OrgConfiguration(\"example\",\n    company_name=\"Umbrella Corporation\",\n    website=\"https://terraform.io\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.OrgConfiguration(\"example\", new()\n    {\n        CompanyName = \"Umbrella Corporation\",\n        Website = \"https://terraform.io\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewOrgConfiguration(ctx, \"example\", \u0026okta.OrgConfigurationArgs{\n\t\t\tCompanyName: pulumi.String(\"Umbrella Corporation\"),\n\t\t\tWebsite:     pulumi.String(\"https://terraform.io\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OrgConfiguration;\nimport com.pulumi.okta.OrgConfigurationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OrgConfiguration(\"example\", OrgConfigurationArgs.builder()\n            .companyName(\"Umbrella Corporation\")\n            .website(\"https://terraform.io\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:OrgConfiguration\n    properties:\n      companyName: Umbrella Corporation\n      website: https://terraform.io\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/orgConfiguration:OrgConfiguration example _\n```\n\n",
            "properties": {
                "address1": {
                    "type": "string",
                    "description": "Primary address of org\n"
                },
                "address2": {
                    "type": "string",
                    "description": "Secondary address of org\n"
                },
                "billingContactUser": {
                    "type": "string",
                    "description": "User ID representing the billing contact\n"
                },
                "city": {
                    "type": "string",
                    "description": "City of org\n"
                },
                "companyName": {
                    "type": "string",
                    "description": "Name of org\n"
                },
                "country": {
                    "type": "string",
                    "description": "Country of org\n"
                },
                "endUserSupportHelpUrl": {
                    "type": "string",
                    "description": "Support link of org\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "Expiration of org\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of org. The file must be in PNG, JPG, or GIF format and less than 1 MB in size. For best results use landscape orientation, a transparent background, and a minimum size of 420px by 120px to prevent upscaling.\n"
                },
                "optOutCommunicationEmails": {
                    "type": "boolean",
                    "description": "Indicates whether the org's users receive Okta Communication emails\n"
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "Support help phone of org\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "Postal code of org\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of org\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Subdomain of org\n"
                },
                "supportPhoneNumber": {
                    "type": "string",
                    "description": "Support help phone of org\n"
                },
                "technicalContactUser": {
                    "type": "string",
                    "description": "User ID representing the technical contact\n"
                },
                "website": {
                    "type": "string",
                    "description": "The org's website\n"
                }
            },
            "required": [
                "companyName",
                "expiresAt",
                "subdomain"
            ],
            "inputProperties": {
                "address1": {
                    "type": "string",
                    "description": "Primary address of org\n"
                },
                "address2": {
                    "type": "string",
                    "description": "Secondary address of org\n"
                },
                "billingContactUser": {
                    "type": "string",
                    "description": "User ID representing the billing contact\n"
                },
                "city": {
                    "type": "string",
                    "description": "City of org\n"
                },
                "companyName": {
                    "type": "string",
                    "description": "Name of org\n"
                },
                "country": {
                    "type": "string",
                    "description": "Country of org\n"
                },
                "endUserSupportHelpUrl": {
                    "type": "string",
                    "description": "Support link of org\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Logo of org. The file must be in PNG, JPG, or GIF format and less than 1 MB in size. For best results use landscape orientation, a transparent background, and a minimum size of 420px by 120px to prevent upscaling.\n"
                },
                "optOutCommunicationEmails": {
                    "type": "boolean",
                    "description": "Indicates whether the org's users receive Okta Communication emails\n"
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "Support help phone of org\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "Postal code of org\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of org\n"
                },
                "supportPhoneNumber": {
                    "type": "string",
                    "description": "Support help phone of org\n"
                },
                "technicalContactUser": {
                    "type": "string",
                    "description": "User ID representing the technical contact\n"
                },
                "website": {
                    "type": "string",
                    "description": "The org's website\n"
                }
            },
            "requiredInputs": [
                "companyName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrgConfiguration resources.\n",
                "properties": {
                    "address1": {
                        "type": "string",
                        "description": "Primary address of org\n"
                    },
                    "address2": {
                        "type": "string",
                        "description": "Secondary address of org\n"
                    },
                    "billingContactUser": {
                        "type": "string",
                        "description": "User ID representing the billing contact\n"
                    },
                    "city": {
                        "type": "string",
                        "description": "City of org\n"
                    },
                    "companyName": {
                        "type": "string",
                        "description": "Name of org\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country of org\n"
                    },
                    "endUserSupportHelpUrl": {
                        "type": "string",
                        "description": "Support link of org\n"
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "Expiration of org\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Logo of org. The file must be in PNG, JPG, or GIF format and less than 1 MB in size. For best results use landscape orientation, a transparent background, and a minimum size of 420px by 120px to prevent upscaling.\n"
                    },
                    "optOutCommunicationEmails": {
                        "type": "boolean",
                        "description": "Indicates whether the org's users receive Okta Communication emails\n"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Support help phone of org\n"
                    },
                    "postalCode": {
                        "type": "string",
                        "description": "Postal code of org\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of org\n"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "Subdomain of org\n"
                    },
                    "supportPhoneNumber": {
                        "type": "string",
                        "description": "Support help phone of org\n"
                    },
                    "technicalContactUser": {
                        "type": "string",
                        "description": "User ID representing the technical contact\n"
                    },
                    "website": {
                        "type": "string",
                        "description": "The org's website\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/orgSupport:OrgSupport": {
            "description": "Manages Okta Support access your org\nThis resource allows you to temporarily allow Okta Support to access your org as an administrator. By default,\naccess will be granted for eight hours. Removing this resource will revoke Okta Support access to your org.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.OrgSupport(\"example\", {extendBy: 1});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.OrgSupport(\"example\", extend_by=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.OrgSupport(\"example\", new()\n    {\n        ExtendBy = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewOrgSupport(ctx, \"example\", \u0026okta.OrgSupportArgs{\n\t\t\tExtendBy: pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OrgSupport;\nimport com.pulumi.okta.OrgSupportArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OrgSupport(\"example\", OrgSupportArgs.builder()\n            .extendBy(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:OrgSupport\n    properties:\n      extendBy: 1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "expiration": {
                    "type": "string",
                    "description": "Expiration of Okta Support\n"
                },
                "extendBy": {
                    "type": "integer",
                    "description": "Number of days the support should be extended by\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of Okta Support\n"
                }
            },
            "required": [
                "expiration",
                "status"
            ],
            "inputProperties": {
                "extendBy": {
                    "type": "integer",
                    "description": "Number of days the support should be extended by\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrgSupport resources.\n",
                "properties": {
                    "expiration": {
                        "type": "string",
                        "description": "Expiration of Okta Support\n"
                    },
                    "extendBy": {
                        "type": "integer",
                        "description": "Number of days the support should be extended by\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of Okta Support\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/policyMfaDefault:PolicyMfaDefault": {
            "description": "Configures default MFA Policy.\nThis resource allows you to configure default MFA Policy.\n\u003e Requires Org Feature Flag 'OKTA_MFA_POLICY'. Contact support to have this feature flag ***enabled***.\n\u003e Unless Org Feature Flag 'ENG_ENABLE_OPTIONAL_PASSWORD_ENROLLMENT' is ***disabled*** 'okta_password' or 'okta_email' must be present and its 'enroll' value set to 'REQUIRED'. Contact support to have this feature flag ***disabled***.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst classicExample = new okta.PolicyMfaDefault(\"classic_example\", {\n    isOie: false,\n    oktaPassword: {\n        enroll: \"REQUIRED\",\n    },\n    oktaOtp: {\n        enroll: \"REQUIRED\",\n    },\n});\nconst oieExample = new okta.PolicyMfaDefault(\"oie_example\", {\n    isOie: true,\n    oktaPassword: {\n        enroll: \"REQUIRED\",\n    },\n    oktaVerify: {\n        enroll: \"REQUIRED\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nclassic_example = okta.PolicyMfaDefault(\"classic_example\",\n    is_oie=False,\n    okta_password={\n        \"enroll\": \"REQUIRED\",\n    },\n    okta_otp={\n        \"enroll\": \"REQUIRED\",\n    })\noie_example = okta.PolicyMfaDefault(\"oie_example\",\n    is_oie=True,\n    okta_password={\n        \"enroll\": \"REQUIRED\",\n    },\n    okta_verify={\n        \"enroll\": \"REQUIRED\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var classicExample = new Okta.PolicyMfaDefault(\"classic_example\", new()\n    {\n        IsOie = false,\n        OktaPassword = \n        {\n            { \"enroll\", \"REQUIRED\" },\n        },\n        OktaOtp = \n        {\n            { \"enroll\", \"REQUIRED\" },\n        },\n    });\n\n    var oieExample = new Okta.PolicyMfaDefault(\"oie_example\", new()\n    {\n        IsOie = true,\n        OktaPassword = \n        {\n            { \"enroll\", \"REQUIRED\" },\n        },\n        OktaVerify = \n        {\n            { \"enroll\", \"REQUIRED\" },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewPolicyMfaDefault(ctx, \"classic_example\", \u0026okta.PolicyMfaDefaultArgs{\n\t\t\tIsOie: pulumi.Bool(false),\n\t\t\tOktaPassword: pulumi.StringMap{\n\t\t\t\t\"enroll\": pulumi.String(\"REQUIRED\"),\n\t\t\t},\n\t\t\tOktaOtp: pulumi.StringMap{\n\t\t\t\t\"enroll\": pulumi.String(\"REQUIRED\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewPolicyMfaDefault(ctx, \"oie_example\", \u0026okta.PolicyMfaDefaultArgs{\n\t\t\tIsOie: pulumi.Bool(true),\n\t\t\tOktaPassword: pulumi.StringMap{\n\t\t\t\t\"enroll\": pulumi.String(\"REQUIRED\"),\n\t\t\t},\n\t\t\tOktaVerify: pulumi.StringMap{\n\t\t\t\t\"enroll\": pulumi.String(\"REQUIRED\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.PolicyMfaDefault;\nimport com.pulumi.okta.PolicyMfaDefaultArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var classicExample = new PolicyMfaDefault(\"classicExample\", PolicyMfaDefaultArgs.builder()\n            .isOie(false)\n            .oktaPassword(Map.of(\"enroll\", \"REQUIRED\"))\n            .oktaOtp(Map.of(\"enroll\", \"REQUIRED\"))\n            .build());\n\n        var oieExample = new PolicyMfaDefault(\"oieExample\", PolicyMfaDefaultArgs.builder()\n            .isOie(true)\n            .oktaPassword(Map.of(\"enroll\", \"REQUIRED\"))\n            .oktaVerify(Map.of(\"enroll\", \"REQUIRED\"))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  classicExample:\n    type: okta:PolicyMfaDefault\n    name: classic_example\n    properties:\n      isOie: false\n      oktaPassword:\n        enroll: REQUIRED\n      oktaOtp:\n        enroll: REQUIRED\n  oieExample:\n    type: okta:PolicyMfaDefault\n    name: oie_example\n    properties:\n      isOie: true\n      oktaPassword:\n        enroll: REQUIRED\n      oktaVerify:\n        enroll: REQUIRED\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/policyMfaDefault:PolicyMfaDefault example .\n```\n\n",
            "properties": {
                "defaultIncludedGroupId": {
                    "type": "string",
                    "description": "Default group ID (always included)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Default policy description\n"
                },
                "duo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "externalIdp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "deprecationMessage": "Since okta now support multiple external_idps, this will be deprecated. Please use `external_idps` instead"
                },
                "externalIdps": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "fidoU2f": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "fidoWebauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "googleOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "hotp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "isOie": {
                    "type": "boolean",
                    "description": "Is the policy using Okta Identity Engine (OIE) with authenticators instead of factors?\n"
                },
                "name": {
                    "type": "string",
                    "description": "Default policy name\n"
                },
                "oktaCall": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaEmail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaPassword": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaPush": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaSms": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaVerify": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "onpremMfa": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "phoneNumber": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "priority": {
                    "type": "integer",
                    "description": "Default policy priority\n"
                },
                "rsaToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "securityQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "smartCardIdp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Default policy status\n"
                },
                "symantecVip": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "webauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "yubikeyToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "defaultIncludedGroupId",
                "description",
                "name",
                "priority",
                "status"
            ],
            "inputProperties": {
                "duo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "externalIdp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "deprecationMessage": "Since okta now support multiple external_idps, this will be deprecated. Please use `external_idps` instead"
                },
                "externalIdps": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "fidoU2f": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "fidoWebauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "googleOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "hotp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "isOie": {
                    "type": "boolean",
                    "description": "Is the policy using Okta Identity Engine (OIE) with authenticators instead of factors?\n"
                },
                "oktaCall": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaEmail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaPassword": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaPush": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaSms": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaVerify": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "onpremMfa": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "phoneNumber": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "rsaToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "securityQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "smartCardIdp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "symantecVip": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "webauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "yubikeyToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyMfaDefault resources.\n",
                "properties": {
                    "defaultIncludedGroupId": {
                        "type": "string",
                        "description": "Default group ID (always included)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Default policy description\n"
                    },
                    "duo": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "externalIdp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "deprecationMessage": "Since okta now support multiple external_idps, this will be deprecated. Please use `external_idps` instead"
                    },
                    "externalIdps": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "fidoU2f": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "fidoWebauthn": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "googleOtp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "hotp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "isOie": {
                        "type": "boolean",
                        "description": "Is the policy using Okta Identity Engine (OIE) with authenticators instead of factors?\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Default policy name\n"
                    },
                    "oktaCall": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaEmail": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaOtp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaPassword": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaPush": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaQuestion": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaSms": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaVerify": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "onpremMfa": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "phoneNumber": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Default policy priority\n"
                    },
                    "rsaToken": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "securityQuestion": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "smartCardIdp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "Default policy status\n"
                    },
                    "symantecVip": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "webauthn": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "yubikeyToken": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "okta:index/policyPasswordDefault:PolicyPasswordDefault": {
            "description": "Configures default password policy. This resource allows you to configure default password policy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst _default = new okta.PolicyPasswordDefault(\"default\", {});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ndefault = okta.PolicyPasswordDefault(\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @default = new Okta.PolicyPasswordDefault(\"default\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewPolicyPasswordDefault(ctx, \"default\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.PolicyPasswordDefault;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var default_ = new PolicyPasswordDefault(\"default\");\n\n    }\n}\n```\n```yaml\nresources:\n  default:\n    type: okta:PolicyPasswordDefault\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/policyPasswordDefault:PolicyPasswordDefault example .\n```\n\n",
            "properties": {
                "callRecovery": {
                    "type": "string",
                    "description": "Enable or disable voice call recovery: ACTIVE or INACTIVE. Default: `INACTIVE`\n"
                },
                "defaultAuthProvider": {
                    "type": "string",
                    "description": "Default Authentication Provider\n"
                },
                "defaultIncludedGroupId": {
                    "type": "string",
                    "description": "Default group ID (always included)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Default policy description\n"
                },
                "emailRecovery": {
                    "type": "string",
                    "description": "Enable or disable email password recovery: ACTIVE or INACTIVE. Default: `ACTIVE`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Default policy name\n"
                },
                "passwordAutoUnlockMinutes": {
                    "type": "integer",
                    "description": "Number of minutes before a locked account is unlocked: 0 = no limit. Default: `0`\n"
                },
                "passwordDictionaryLookup": {
                    "type": "boolean",
                    "description": "Check Passwords Against Common Password Dictionary. Default: `false`\n"
                },
                "passwordExcludeFirstName": {
                    "type": "boolean",
                    "description": "User firstName attribute must be excluded from the password\n"
                },
                "passwordExcludeLastName": {
                    "type": "boolean",
                    "description": "User lastName attribute must be excluded from the password\n"
                },
                "passwordExcludeUsername": {
                    "type": "boolean",
                    "description": "If the user name must be excluded from the password. Default: `true`\n"
                },
                "passwordExpireWarnDays": {
                    "type": "integer",
                    "description": "Length in days a user will be warned before password expiry: 0 = no warning. Default: `0`\n"
                },
                "passwordHistoryCount": {
                    "type": "integer",
                    "description": "Number of distinct passwords that must be created before they can be reused: 0 = none. Default: `4`\n"
                },
                "passwordLockoutNotificationChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification channels to use to notify a user when their account has been locked.\n"
                },
                "passwordMaxAgeDays": {
                    "type": "integer",
                    "description": "Length in days a password is valid before expiry: 0 = no limit. Default: `0`\n"
                },
                "passwordMaxLockoutAttempts": {
                    "type": "integer",
                    "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit. Default: `10`\n"
                },
                "passwordMinAgeMinutes": {
                    "type": "integer",
                    "description": "Minimum time interval in minutes between password changes: 0 = no limit. Default: `0`\n"
                },
                "passwordMinLength": {
                    "type": "integer",
                    "description": "Minimum password length. Default is `8`.\n"
                },
                "passwordMinLowercase": {
                    "type": "integer",
                    "description": "If a password must contain at least one lower case letter: 0 = no, 1 = yes. Default = 1\n"
                },
                "passwordMinNumber": {
                    "type": "integer",
                    "description": "If a password must contain at least one number: 0 = no, 1 = yes. Default = `1`\n"
                },
                "passwordMinSymbol": {
                    "type": "integer",
                    "description": "If a password must contain at least one symbol (!@#$%^\u0026*): 0 = no, 1 = yes. Default = `0`\n"
                },
                "passwordMinUppercase": {
                    "type": "integer",
                    "description": "If a password must contain at least one upper case letter: 0 = no, 1 = yes. Default = 1\n"
                },
                "passwordShowLockoutFailures": {
                    "type": "boolean",
                    "description": "If a user should be informed when their account is locked. Default: `false`\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Default policy priority\n"
                },
                "questionMinLength": {
                    "type": "integer",
                    "description": "Min length of the password recovery question answer. Default: `4`\n"
                },
                "questionRecovery": {
                    "type": "string",
                    "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE. Default: `ACTIVE`\n"
                },
                "recoveryEmailToken": {
                    "type": "integer",
                    "description": "Lifetime in minutes of the recovery email token. Default: `60`\n"
                },
                "skipUnlock": {
                    "type": "boolean",
                    "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's Windows account. Default: `false`\n"
                },
                "smsRecovery": {
                    "type": "string",
                    "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE. Default: `INACTIVE`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default policy status\n"
                }
            },
            "required": [
                "defaultAuthProvider",
                "defaultIncludedGroupId",
                "description",
                "name",
                "priority",
                "status"
            ],
            "inputProperties": {
                "callRecovery": {
                    "type": "string",
                    "description": "Enable or disable voice call recovery: ACTIVE or INACTIVE. Default: `INACTIVE`\n"
                },
                "emailRecovery": {
                    "type": "string",
                    "description": "Enable or disable email password recovery: ACTIVE or INACTIVE. Default: `ACTIVE`\n"
                },
                "passwordAutoUnlockMinutes": {
                    "type": "integer",
                    "description": "Number of minutes before a locked account is unlocked: 0 = no limit. Default: `0`\n"
                },
                "passwordDictionaryLookup": {
                    "type": "boolean",
                    "description": "Check Passwords Against Common Password Dictionary. Default: `false`\n"
                },
                "passwordExcludeFirstName": {
                    "type": "boolean",
                    "description": "User firstName attribute must be excluded from the password\n"
                },
                "passwordExcludeLastName": {
                    "type": "boolean",
                    "description": "User lastName attribute must be excluded from the password\n"
                },
                "passwordExcludeUsername": {
                    "type": "boolean",
                    "description": "If the user name must be excluded from the password. Default: `true`\n"
                },
                "passwordExpireWarnDays": {
                    "type": "integer",
                    "description": "Length in days a user will be warned before password expiry: 0 = no warning. Default: `0`\n"
                },
                "passwordHistoryCount": {
                    "type": "integer",
                    "description": "Number of distinct passwords that must be created before they can be reused: 0 = none. Default: `4`\n"
                },
                "passwordLockoutNotificationChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification channels to use to notify a user when their account has been locked.\n"
                },
                "passwordMaxAgeDays": {
                    "type": "integer",
                    "description": "Length in days a password is valid before expiry: 0 = no limit. Default: `0`\n"
                },
                "passwordMaxLockoutAttempts": {
                    "type": "integer",
                    "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit. Default: `10`\n"
                },
                "passwordMinAgeMinutes": {
                    "type": "integer",
                    "description": "Minimum time interval in minutes between password changes: 0 = no limit. Default: `0`\n"
                },
                "passwordMinLength": {
                    "type": "integer",
                    "description": "Minimum password length. Default is `8`.\n"
                },
                "passwordMinLowercase": {
                    "type": "integer",
                    "description": "If a password must contain at least one lower case letter: 0 = no, 1 = yes. Default = 1\n"
                },
                "passwordMinNumber": {
                    "type": "integer",
                    "description": "If a password must contain at least one number: 0 = no, 1 = yes. Default = `1`\n"
                },
                "passwordMinSymbol": {
                    "type": "integer",
                    "description": "If a password must contain at least one symbol (!@#$%^\u0026*): 0 = no, 1 = yes. Default = `0`\n"
                },
                "passwordMinUppercase": {
                    "type": "integer",
                    "description": "If a password must contain at least one upper case letter: 0 = no, 1 = yes. Default = 1\n"
                },
                "passwordShowLockoutFailures": {
                    "type": "boolean",
                    "description": "If a user should be informed when their account is locked. Default: `false`\n"
                },
                "questionMinLength": {
                    "type": "integer",
                    "description": "Min length of the password recovery question answer. Default: `4`\n"
                },
                "questionRecovery": {
                    "type": "string",
                    "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE. Default: `ACTIVE`\n"
                },
                "recoveryEmailToken": {
                    "type": "integer",
                    "description": "Lifetime in minutes of the recovery email token. Default: `60`\n"
                },
                "skipUnlock": {
                    "type": "boolean",
                    "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's Windows account. Default: `false`\n"
                },
                "smsRecovery": {
                    "type": "string",
                    "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE. Default: `INACTIVE`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyPasswordDefault resources.\n",
                "properties": {
                    "callRecovery": {
                        "type": "string",
                        "description": "Enable or disable voice call recovery: ACTIVE or INACTIVE. Default: `INACTIVE`\n"
                    },
                    "defaultAuthProvider": {
                        "type": "string",
                        "description": "Default Authentication Provider\n"
                    },
                    "defaultIncludedGroupId": {
                        "type": "string",
                        "description": "Default group ID (always included)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Default policy description\n"
                    },
                    "emailRecovery": {
                        "type": "string",
                        "description": "Enable or disable email password recovery: ACTIVE or INACTIVE. Default: `ACTIVE`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Default policy name\n"
                    },
                    "passwordAutoUnlockMinutes": {
                        "type": "integer",
                        "description": "Number of minutes before a locked account is unlocked: 0 = no limit. Default: `0`\n"
                    },
                    "passwordDictionaryLookup": {
                        "type": "boolean",
                        "description": "Check Passwords Against Common Password Dictionary. Default: `false`\n"
                    },
                    "passwordExcludeFirstName": {
                        "type": "boolean",
                        "description": "User firstName attribute must be excluded from the password\n"
                    },
                    "passwordExcludeLastName": {
                        "type": "boolean",
                        "description": "User lastName attribute must be excluded from the password\n"
                    },
                    "passwordExcludeUsername": {
                        "type": "boolean",
                        "description": "If the user name must be excluded from the password. Default: `true`\n"
                    },
                    "passwordExpireWarnDays": {
                        "type": "integer",
                        "description": "Length in days a user will be warned before password expiry: 0 = no warning. Default: `0`\n"
                    },
                    "passwordHistoryCount": {
                        "type": "integer",
                        "description": "Number of distinct passwords that must be created before they can be reused: 0 = none. Default: `4`\n"
                    },
                    "passwordLockoutNotificationChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Notification channels to use to notify a user when their account has been locked.\n"
                    },
                    "passwordMaxAgeDays": {
                        "type": "integer",
                        "description": "Length in days a password is valid before expiry: 0 = no limit. Default: `0`\n"
                    },
                    "passwordMaxLockoutAttempts": {
                        "type": "integer",
                        "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit. Default: `10`\n"
                    },
                    "passwordMinAgeMinutes": {
                        "type": "integer",
                        "description": "Minimum time interval in minutes between password changes: 0 = no limit. Default: `0`\n"
                    },
                    "passwordMinLength": {
                        "type": "integer",
                        "description": "Minimum password length. Default is `8`.\n"
                    },
                    "passwordMinLowercase": {
                        "type": "integer",
                        "description": "If a password must contain at least one lower case letter: 0 = no, 1 = yes. Default = 1\n"
                    },
                    "passwordMinNumber": {
                        "type": "integer",
                        "description": "If a password must contain at least one number: 0 = no, 1 = yes. Default = `1`\n"
                    },
                    "passwordMinSymbol": {
                        "type": "integer",
                        "description": "If a password must contain at least one symbol (!@#$%^\u0026*): 0 = no, 1 = yes. Default = `0`\n"
                    },
                    "passwordMinUppercase": {
                        "type": "integer",
                        "description": "If a password must contain at least one upper case letter: 0 = no, 1 = yes. Default = 1\n"
                    },
                    "passwordShowLockoutFailures": {
                        "type": "boolean",
                        "description": "If a user should be informed when their account is locked. Default: `false`\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Default policy priority\n"
                    },
                    "questionMinLength": {
                        "type": "integer",
                        "description": "Min length of the password recovery question answer. Default: `4`\n"
                    },
                    "questionRecovery": {
                        "type": "string",
                        "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE. Default: `ACTIVE`\n"
                    },
                    "recoveryEmailToken": {
                        "type": "integer",
                        "description": "Lifetime in minutes of the recovery email token. Default: `60`\n"
                    },
                    "skipUnlock": {
                        "type": "boolean",
                        "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's Windows account. Default: `false`\n"
                    },
                    "smsRecovery": {
                        "type": "string",
                        "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE. Default: `INACTIVE`\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default policy status\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/policyProfileEnrollment:PolicyProfileEnrollment": {
            "description": "Creates a Profile Enrollment Policy\n\t\t\n\u003e **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.\nThis resource allows you to create and configure a Profile Enrollment Policy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.PolicyProfileEnrollment(\"example\", {\n    name: \"example\",\n    status: \"ACTIVE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.PolicyProfileEnrollment(\"example\",\n    name=\"example\",\n    status=\"ACTIVE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.PolicyProfileEnrollment(\"example\", new()\n    {\n        Name = \"example\",\n        Status = \"ACTIVE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewPolicyProfileEnrollment(ctx, \"example\", \u0026okta.PolicyProfileEnrollmentArgs{\n\t\t\tName:   pulumi.String(\"example\"),\n\t\t\tStatus: pulumi.String(\"ACTIVE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.PolicyProfileEnrollment;\nimport com.pulumi.okta.PolicyProfileEnrollmentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PolicyProfileEnrollment(\"example\", PolicyProfileEnrollmentArgs.builder()\n            .name(\"example\")\n            .status(\"ACTIVE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:PolicyProfileEnrollment\n    properties:\n      name: example\n      status: ACTIVE\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/policyProfileEnrollment:PolicyProfileEnrollment example \u003cpolicy_id\u003e\n```\n\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the policy\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the policy\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the policy\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the policy\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyProfileEnrollment resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the policy\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the policy\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/policyProfileEnrollmentApps:PolicyProfileEnrollmentApps": {
            "description": "Manages Profile Enrollment Policy Apps\n\u003e **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.\nThis resource allows you to manage the apps in the Profile Enrollment Policy. \n**Important Notes:** \n - Default Enrollment Policy can not be used in this resource since it is used as a policy to re-assign apps to when they are unassigned from this one.\n - When re-assigning the app to another policy, please use 'depends_on' in the policy to which the app will be assigned. This is necessary to avoid \n  unexpected behavior, since if the app is unassigned from the policy it is just assigned to the 'Default' one.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.policy.getPolicy({\n    name: \"My Policy\",\n    type: \"PROFILE_ENROLLMENT\",\n});\nconst test = okta.app.getApp({\n    label: \"My App\",\n});\nconst examplePolicyProfileEnrollmentApps = new okta.PolicyProfileEnrollmentApps(\"example\", {\n    policyId: exampleOktaPolicy.id,\n    apps: [id],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.policy.get_policy(name=\"My Policy\",\n    type=\"PROFILE_ENROLLMENT\")\ntest = okta.app.get_app(label=\"My App\")\nexample_policy_profile_enrollment_apps = okta.PolicyProfileEnrollmentApps(\"example\",\n    policy_id=example_okta_policy[\"id\"],\n    apps=[id])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Policy.GetPolicy.Invoke(new()\n    {\n        Name = \"My Policy\",\n        Type = \"PROFILE_ENROLLMENT\",\n    });\n\n    var test = Okta.App.GetApp.Invoke(new()\n    {\n        Label = \"My App\",\n    });\n\n    var examplePolicyProfileEnrollmentApps = new Okta.PolicyProfileEnrollmentApps(\"example\", new()\n    {\n        PolicyId = exampleOktaPolicy.Id,\n        Apps = new[]\n        {\n            id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/app\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.GetPolicy(ctx, \u0026policy.GetPolicyArgs{\n\t\t\tName: \"My Policy\",\n\t\t\tType: \"PROFILE_ENROLLMENT\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = app.GetApp(ctx, \u0026app.GetAppArgs{\n\t\t\tLabel: pulumi.StringRef(\"My App\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewPolicyProfileEnrollmentApps(ctx, \"example\", \u0026okta.PolicyProfileEnrollmentAppsArgs{\n\t\t\tPolicyId: pulumi.Any(exampleOktaPolicy.Id),\n\t\t\tApps: pulumi.StringArray{\n\t\t\t\tid,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.PolicyFunctions;\nimport com.pulumi.okta.policy.inputs.GetPolicyArgs;\nimport com.pulumi.okta.app.AppFunctions;\nimport com.pulumi.okta.app.inputs.GetAppArgs;\nimport com.pulumi.okta.PolicyProfileEnrollmentApps;\nimport com.pulumi.okta.PolicyProfileEnrollmentAppsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = PolicyFunctions.getPolicy(GetPolicyArgs.builder()\n            .name(\"My Policy\")\n            .type(\"PROFILE_ENROLLMENT\")\n            .build());\n\n        final var test = AppFunctions.getApp(GetAppArgs.builder()\n            .label(\"My App\")\n            .build());\n\n        var examplePolicyProfileEnrollmentApps = new PolicyProfileEnrollmentApps(\"examplePolicyProfileEnrollmentApps\", PolicyProfileEnrollmentAppsArgs.builder()\n            .policyId(exampleOktaPolicy.id())\n            .apps(id)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  examplePolicyProfileEnrollmentApps:\n    type: okta:PolicyProfileEnrollmentApps\n    name: example\n    properties:\n      policyId: ${exampleOktaPolicy.id}\n      apps:\n        - ${id}\nvariables:\n  example:\n    fn::invoke:\n      function: okta:policy:getPolicy\n      arguments:\n        name: My Policy\n        type: PROFILE_ENROLLMENT\n  test:\n    fn::invoke:\n      function: okta:app:getApp\n      arguments:\n        label: My App\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/policyProfileEnrollmentApps:PolicyProfileEnrollmentApps example \u003cpolicy_id\u003e\n```\n\n",
            "properties": {
                "apps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of app IDs to be added to this policy\n"
                },
                "defaultPolicyId": {
                    "type": "string",
                    "description": "ID of the Default Enrollment Policy. This policy is used as a policy to re-assign apps to when they are unassigned from this one\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "ID of the enrollment policy.\n"
                }
            },
            "required": [
                "defaultPolicyId",
                "policyId"
            ],
            "inputProperties": {
                "apps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of app IDs to be added to this policy\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "ID of the enrollment policy.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "policyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyProfileEnrollmentApps resources.\n",
                "properties": {
                    "apps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of app IDs to be added to this policy\n"
                    },
                    "defaultPolicyId": {
                        "type": "string",
                        "description": "ID of the Default Enrollment Policy. This policy is used as a policy to re-assign apps to when they are unassigned from this one\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "ID of the enrollment policy.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/policyRuleProfileEnrollment:PolicyRuleProfileEnrollment": {
            "description": "Creates a Profile Enrollment Policy Rule.\n\t\t\n\u003e **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.\nA [profile enrollment\npolicy](https://developer.okta.com/docs/reference/api/policy/#profile-enrollment-policy)\nis limited to one default rule. This resource does not create a rule for an\nenrollment policy, it allows the default policy rule to be updated.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.PolicyProfileEnrollment(\"example\", {name: \"My Enrollment Policy\"});\nconst exampleHook = new okta.inline.Hook(\"example\", {\n    name: \"My Inline Hook\",\n    status: \"ACTIVE\",\n    type: \"com.okta.user.pre-registration\",\n    version: \"1.0.3\",\n    channel: {\n        type: \"HTTP\",\n        version: \"1.0.0\",\n        uri: \"https://example.com/test2\",\n        method: \"POST\",\n    },\n});\nconst exampleGroup = new okta.group.Group(\"example\", {\n    name: \"My Group\",\n    description: \"Group of some users\",\n});\nconst examplePolicyRuleProfileEnrollment = new okta.PolicyRuleProfileEnrollment(\"example\", {\n    policyId: example.id,\n    inlineHookId: exampleHook.id,\n    targetGroupId: exampleGroup.id,\n    unknownUserAction: \"REGISTER\",\n    emailVerification: true,\n    access: \"ALLOW\",\n    profileAttributes: [\n        {\n            name: \"email\",\n            label: \"Email\",\n            required: true,\n        },\n        {\n            name: \"name\",\n            label: \"Name\",\n            required: true,\n        },\n        {\n            name: \"t-shirt\",\n            label: \"T-Shirt Size\",\n            required: false,\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.PolicyProfileEnrollment(\"example\", name=\"My Enrollment Policy\")\nexample_hook = okta.inline.Hook(\"example\",\n    name=\"My Inline Hook\",\n    status=\"ACTIVE\",\n    type=\"com.okta.user.pre-registration\",\n    version=\"1.0.3\",\n    channel={\n        \"type\": \"HTTP\",\n        \"version\": \"1.0.0\",\n        \"uri\": \"https://example.com/test2\",\n        \"method\": \"POST\",\n    })\nexample_group = okta.group.Group(\"example\",\n    name=\"My Group\",\n    description=\"Group of some users\")\nexample_policy_rule_profile_enrollment = okta.PolicyRuleProfileEnrollment(\"example\",\n    policy_id=example.id,\n    inline_hook_id=example_hook.id,\n    target_group_id=example_group.id,\n    unknown_user_action=\"REGISTER\",\n    email_verification=True,\n    access=\"ALLOW\",\n    profile_attributes=[\n        {\n            \"name\": \"email\",\n            \"label\": \"Email\",\n            \"required\": True,\n        },\n        {\n            \"name\": \"name\",\n            \"label\": \"Name\",\n            \"required\": True,\n        },\n        {\n            \"name\": \"t-shirt\",\n            \"label\": \"T-Shirt Size\",\n            \"required\": False,\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.PolicyProfileEnrollment(\"example\", new()\n    {\n        Name = \"My Enrollment Policy\",\n    });\n\n    var exampleHook = new Okta.Inline.Hook(\"example\", new()\n    {\n        Name = \"My Inline Hook\",\n        Status = \"ACTIVE\",\n        Type = \"com.okta.user.pre-registration\",\n        Version = \"1.0.3\",\n        Channel = \n        {\n            { \"type\", \"HTTP\" },\n            { \"version\", \"1.0.0\" },\n            { \"uri\", \"https://example.com/test2\" },\n            { \"method\", \"POST\" },\n        },\n    });\n\n    var exampleGroup = new Okta.Group.Group(\"example\", new()\n    {\n        Name = \"My Group\",\n        Description = \"Group of some users\",\n    });\n\n    var examplePolicyRuleProfileEnrollment = new Okta.PolicyRuleProfileEnrollment(\"example\", new()\n    {\n        PolicyId = example.Id,\n        InlineHookId = exampleHook.Id,\n        TargetGroupId = exampleGroup.Id,\n        UnknownUserAction = \"REGISTER\",\n        EmailVerification = true,\n        Access = \"ALLOW\",\n        ProfileAttributes = new[]\n        {\n            new Okta.Inputs.PolicyRuleProfileEnrollmentProfileAttributeArgs\n            {\n                Name = \"email\",\n                Label = \"Email\",\n                Required = true,\n            },\n            new Okta.Inputs.PolicyRuleProfileEnrollmentProfileAttributeArgs\n            {\n                Name = \"name\",\n                Label = \"Name\",\n                Required = true,\n            },\n            new Okta.Inputs.PolicyRuleProfileEnrollmentProfileAttributeArgs\n            {\n                Name = \"t-shirt\",\n                Label = \"T-Shirt Size\",\n                Required = false,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/group\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/inline\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := okta.NewPolicyProfileEnrollment(ctx, \"example\", \u0026okta.PolicyProfileEnrollmentArgs{\n\t\t\tName: pulumi.String(\"My Enrollment Policy\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleHook, err := inline.NewHook(ctx, \"example\", \u0026inline.HookArgs{\n\t\t\tName:    pulumi.String(\"My Inline Hook\"),\n\t\t\tStatus:  pulumi.String(\"ACTIVE\"),\n\t\t\tType:    pulumi.String(\"com.okta.user.pre-registration\"),\n\t\t\tVersion: pulumi.String(\"1.0.3\"),\n\t\t\tChannel: pulumi.StringMap{\n\t\t\t\t\"type\":    pulumi.String(\"HTTP\"),\n\t\t\t\t\"version\": pulumi.String(\"1.0.0\"),\n\t\t\t\t\"uri\":     pulumi.String(\"https://example.com/test2\"),\n\t\t\t\t\"method\":  pulumi.String(\"POST\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleGroup, err := group.NewGroup(ctx, \"example\", \u0026group.GroupArgs{\n\t\t\tName:        pulumi.String(\"My Group\"),\n\t\t\tDescription: pulumi.String(\"Group of some users\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewPolicyRuleProfileEnrollment(ctx, \"example\", \u0026okta.PolicyRuleProfileEnrollmentArgs{\n\t\t\tPolicyId:          example.ID(),\n\t\t\tInlineHookId:      exampleHook.ID(),\n\t\t\tTargetGroupId:     exampleGroup.ID(),\n\t\t\tUnknownUserAction: pulumi.String(\"REGISTER\"),\n\t\t\tEmailVerification: pulumi.Bool(true),\n\t\t\tAccess:            pulumi.String(\"ALLOW\"),\n\t\t\tProfileAttributes: okta.PolicyRuleProfileEnrollmentProfileAttributeArray{\n\t\t\t\t\u0026okta.PolicyRuleProfileEnrollmentProfileAttributeArgs{\n\t\t\t\t\tName:     pulumi.String(\"email\"),\n\t\t\t\t\tLabel:    pulumi.String(\"Email\"),\n\t\t\t\t\tRequired: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t\t\u0026okta.PolicyRuleProfileEnrollmentProfileAttributeArgs{\n\t\t\t\t\tName:     pulumi.String(\"name\"),\n\t\t\t\t\tLabel:    pulumi.String(\"Name\"),\n\t\t\t\t\tRequired: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t\t\u0026okta.PolicyRuleProfileEnrollmentProfileAttributeArgs{\n\t\t\t\t\tName:     pulumi.String(\"t-shirt\"),\n\t\t\t\t\tLabel:    pulumi.String(\"T-Shirt Size\"),\n\t\t\t\t\tRequired: pulumi.Bool(false),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.PolicyProfileEnrollment;\nimport com.pulumi.okta.PolicyProfileEnrollmentArgs;\nimport com.pulumi.okta.inline.Hook;\nimport com.pulumi.okta.inline.HookArgs;\nimport com.pulumi.okta.group.Group;\nimport com.pulumi.okta.group.GroupArgs;\nimport com.pulumi.okta.PolicyRuleProfileEnrollment;\nimport com.pulumi.okta.PolicyRuleProfileEnrollmentArgs;\nimport com.pulumi.okta.inputs.PolicyRuleProfileEnrollmentProfileAttributeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PolicyProfileEnrollment(\"example\", PolicyProfileEnrollmentArgs.builder()\n            .name(\"My Enrollment Policy\")\n            .build());\n\n        var exampleHook = new Hook(\"exampleHook\", HookArgs.builder()\n            .name(\"My Inline Hook\")\n            .status(\"ACTIVE\")\n            .type(\"com.okta.user.pre-registration\")\n            .version(\"1.0.3\")\n            .channel(Map.ofEntries(\n                Map.entry(\"type\", \"HTTP\"),\n                Map.entry(\"version\", \"1.0.0\"),\n                Map.entry(\"uri\", \"https://example.com/test2\"),\n                Map.entry(\"method\", \"POST\")\n            ))\n            .build());\n\n        var exampleGroup = new Group(\"exampleGroup\", GroupArgs.builder()\n            .name(\"My Group\")\n            .description(\"Group of some users\")\n            .build());\n\n        var examplePolicyRuleProfileEnrollment = new PolicyRuleProfileEnrollment(\"examplePolicyRuleProfileEnrollment\", PolicyRuleProfileEnrollmentArgs.builder()\n            .policyId(example.id())\n            .inlineHookId(exampleHook.id())\n            .targetGroupId(exampleGroup.id())\n            .unknownUserAction(\"REGISTER\")\n            .emailVerification(true)\n            .access(\"ALLOW\")\n            .profileAttributes(            \n                PolicyRuleProfileEnrollmentProfileAttributeArgs.builder()\n                    .name(\"email\")\n                    .label(\"Email\")\n                    .required(true)\n                    .build(),\n                PolicyRuleProfileEnrollmentProfileAttributeArgs.builder()\n                    .name(\"name\")\n                    .label(\"Name\")\n                    .required(true)\n                    .build(),\n                PolicyRuleProfileEnrollmentProfileAttributeArgs.builder()\n                    .name(\"t-shirt\")\n                    .label(\"T-Shirt Size\")\n                    .required(false)\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:PolicyProfileEnrollment\n    properties:\n      name: My Enrollment Policy\n  exampleHook:\n    type: okta:inline:Hook\n    name: example\n    properties:\n      name: My Inline Hook\n      status: ACTIVE\n      type: com.okta.user.pre-registration\n      version: 1.0.3\n      channel:\n        type: HTTP\n        version: 1.0.0\n        uri: https://example.com/test2\n        method: POST\n  exampleGroup:\n    type: okta:group:Group\n    name: example\n    properties:\n      name: My Group\n      description: Group of some users\n  examplePolicyRuleProfileEnrollment:\n    type: okta:PolicyRuleProfileEnrollment\n    name: example\n    properties:\n      policyId: ${example.id}\n      inlineHookId: ${exampleHook.id}\n      targetGroupId: ${exampleGroup.id}\n      unknownUserAction: REGISTER\n      emailVerification: true\n      access: ALLOW\n      profileAttributes:\n        - name: email\n          label: Email\n          required: true\n        - name: name\n          label: Name\n          required: true\n        - name: t-shirt\n          label: T-Shirt Size\n          required: false\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/policyRuleProfileEnrollment:PolicyRuleProfileEnrollment example \u003cpolicy_id\u003e/\u003crule_id\u003e\n```\n\n",
            "properties": {
                "access": {
                    "type": "string",
                    "description": "Allow or deny access based on the rule conditions. Valid values are: `ALLOW`, `DENY`. Default: `ALLOW`.\n"
                },
                "emailVerification": {
                    "type": "boolean",
                    "description": "Indicates whether email verification should occur before access is granted. Default: `true`.\n"
                },
                "enrollAuthenticatorTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Enrolls authenticator types\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "ID of a Registration Inline Hook\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the rule\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "ID of the policy\n"
                },
                "profileAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/PolicyRuleProfileEnrollmentProfileAttribute:PolicyRuleProfileEnrollmentProfileAttribute"
                    },
                    "description": "A list of attributes to prompt the user during registration or progressive profiling. Where defined on the User schema,\nthese attributes are persisted in the User profile. Non-schema attributes may also be added, which aren't persisted to\nthe User's profile, but are included in requests to the registration inline hook. A maximum of 10 Profile properties is\nsupported. - 'label' - (Required) A display-friendly label for this property - 'name' - (Required) The name of a User\nProfile property - 'required' - (Required) Indicates if this property is required for enrollment. Default is 'false'.\n"
                },
                "progressiveProfilingAction": {
                    "type": "string",
                    "description": "Enabled or disabled progressive profiling action rule conditions: `ENABLED` or `DISABLED`. Default: `DISABLED`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the rule\n"
                },
                "targetGroupId": {
                    "type": "string",
                    "description": "The ID of a Group that this User should be added to\n"
                },
                "uiSchemaId": {
                    "type": "string",
                    "description": "Value created by the backend. If present all policy updates must include this attribute/value.\n"
                },
                "unknownUserAction": {
                    "type": "string",
                    "description": "Which action should be taken if this User is new. Valid values are: `DENY`, `REGISTER`\n"
                }
            },
            "required": [
                "name",
                "policyId",
                "status",
                "unknownUserAction"
            ],
            "inputProperties": {
                "access": {
                    "type": "string",
                    "description": "Allow or deny access based on the rule conditions. Valid values are: `ALLOW`, `DENY`. Default: `ALLOW`.\n"
                },
                "emailVerification": {
                    "type": "boolean",
                    "description": "Indicates whether email verification should occur before access is granted. Default: `true`.\n"
                },
                "enrollAuthenticatorTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Enrolls authenticator types\n"
                },
                "inlineHookId": {
                    "type": "string",
                    "description": "ID of a Registration Inline Hook\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "ID of the policy\n",
                    "willReplaceOnChanges": true
                },
                "profileAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/PolicyRuleProfileEnrollmentProfileAttribute:PolicyRuleProfileEnrollmentProfileAttribute"
                    },
                    "description": "A list of attributes to prompt the user during registration or progressive profiling. Where defined on the User schema,\nthese attributes are persisted in the User profile. Non-schema attributes may also be added, which aren't persisted to\nthe User's profile, but are included in requests to the registration inline hook. A maximum of 10 Profile properties is\nsupported. - 'label' - (Required) A display-friendly label for this property - 'name' - (Required) The name of a User\nProfile property - 'required' - (Required) Indicates if this property is required for enrollment. Default is 'false'.\n"
                },
                "progressiveProfilingAction": {
                    "type": "string",
                    "description": "Enabled or disabled progressive profiling action rule conditions: `ENABLED` or `DISABLED`. Default: `DISABLED`\n"
                },
                "targetGroupId": {
                    "type": "string",
                    "description": "The ID of a Group that this User should be added to\n"
                },
                "uiSchemaId": {
                    "type": "string",
                    "description": "Value created by the backend. If present all policy updates must include this attribute/value.\n"
                },
                "unknownUserAction": {
                    "type": "string",
                    "description": "Which action should be taken if this User is new. Valid values are: `DENY`, `REGISTER`\n"
                }
            },
            "requiredInputs": [
                "policyId",
                "unknownUserAction"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyRuleProfileEnrollment resources.\n",
                "properties": {
                    "access": {
                        "type": "string",
                        "description": "Allow or deny access based on the rule conditions. Valid values are: `ALLOW`, `DENY`. Default: `ALLOW`.\n"
                    },
                    "emailVerification": {
                        "type": "boolean",
                        "description": "Indicates whether email verification should occur before access is granted. Default: `true`.\n"
                    },
                    "enrollAuthenticatorTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Enrolls authenticator types\n"
                    },
                    "inlineHookId": {
                        "type": "string",
                        "description": "ID of a Registration Inline Hook\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the rule\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "ID of the policy\n",
                        "willReplaceOnChanges": true
                    },
                    "profileAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/PolicyRuleProfileEnrollmentProfileAttribute:PolicyRuleProfileEnrollmentProfileAttribute"
                        },
                        "description": "A list of attributes to prompt the user during registration or progressive profiling. Where defined on the User schema,\nthese attributes are persisted in the User profile. Non-schema attributes may also be added, which aren't persisted to\nthe User's profile, but are included in requests to the registration inline hook. A maximum of 10 Profile properties is\nsupported. - 'label' - (Required) A display-friendly label for this property - 'name' - (Required) The name of a User\nProfile property - 'required' - (Required) Indicates if this property is required for enrollment. Default is 'false'.\n"
                    },
                    "progressiveProfilingAction": {
                        "type": "string",
                        "description": "Enabled or disabled progressive profiling action rule conditions: `ENABLED` or `DISABLED`. Default: `DISABLED`\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the rule\n"
                    },
                    "targetGroupId": {
                        "type": "string",
                        "description": "The ID of a Group that this User should be added to\n"
                    },
                    "uiSchemaId": {
                        "type": "string",
                        "description": "Value created by the backend. If present all policy updates must include this attribute/value.\n"
                    },
                    "unknownUserAction": {
                        "type": "string",
                        "description": "Which action should be taken if this User is new. Valid values are: `DENY`, `REGISTER`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/previewSigninPage:PreviewSigninPage": {
            "description": "Manage the preview signin page of a brand\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```yaml\nresources:\n  test:\n    type: okta:Brand\n    properties:\n      name: testBrand\n      locale: en\n  testPreviewSigninPage:\n    type: okta:PreviewSigninPage\n    name: test\n    properties:\n      brandId: ${oktaBrand.test.id}\n      pageContent: |\n        \u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"\u003e\n        \u003chtml\u003e\n        \u003chead\u003e\n            \u003cmeta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"\u003e\n            \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n            \u003cmeta name=\"robots\" content=\"noindex,nofollow\" /\u003e\n            \u003c!-- Styles generated from theme --\u003e\n            \u003clink href=\"{{themedStylesUrl}}\" rel=\"stylesheet\" type=\"text/css\"\u003e\n            \u003c!-- Favicon from theme --\u003e\n            \u003clink rel=\"shortcut icon\" href=\"{{faviconUrl}}\" type=\"image/x-icon\"/\u003e\n\n            \u003ctitle\u003e{{pageTitle}}\u003c/title\u003e\n            {{{SignInWidgetResources}}}\n\n            \u003cstyle nonce=\"{{nonceValue}}\"\u003e\n                #login-bg-image-id {\n                    background-image: {{bgImageUrl}}\n                }\n            \u003c/style\u003e\n        \u003c/head\u003e\n        \u003cbody\u003e\n            \u003cdiv id=\"login-bg-image-id\" class=\"login-bg-image tb--background\"\u003e\u003c/div\u003e\n            \u003cdiv id=\"okta-login-container\"\u003e\u003c/div\u003e\n\n            \u003c!--\n                \"OktaUtil\" defines a global OktaUtil object\n                that contains methods used to complete the Okta login flow.\n             --\u003e\n            {{{OktaUtil}}}\n\n            \u003cscript type=\"text/javascript\" nonce=\"{{nonceValue}}\"\u003e\n                // \"config\" object contains default widget configuration\n                // with any custom overrides defined in your admin settings.\n                var config = OktaUtil.getSignInWidgetConfig();\n\n                // Render the Okta Sign-In Widget\n                var oktaSignIn = new OktaSignIn(config);\n                oktaSignIn.renderEl({ el: '#okta-login-container' },\n                    OktaUtil.completeLogin,\n                    function(error) {\n                        // Logs errors that occur when configuring the widget.\n                        // Remove or replace this with your own custom error handler.\n                        console.log(error.message, error);\n                    }\n                );\n            \u003c/script\u003e\n        \u003c/body\u003e\n        \u003c/html\u003e\n      widgetVersion: ^6\n      widgetCustomizations:\n        - widgetGeneration: G3\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "brandId": {
                    "type": "string",
                    "description": "brand id of the preview signin page\n"
                },
                "contentSecurityPolicySetting": {
                    "$ref": "#/types/okta:index/PreviewSigninPageContentSecurityPolicySetting:PreviewSigninPageContentSecurityPolicySetting"
                },
                "pageContent": {
                    "type": "string",
                    "description": "page content of the preview signin page\n"
                },
                "widgetCustomizations": {
                    "$ref": "#/types/okta:index/PreviewSigninPageWidgetCustomizations:PreviewSigninPageWidgetCustomizations"
                },
                "widgetVersion": {
                    "type": "string",
                    "description": "widget version specified as a Semver. The following are currently supported\n\t\t*, ^1, ^2, ^3, ^4, ^5, ^6, ^7, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11, 1.12, 1.13, 2.1, 2.2, 2.3, 2.4,\n\t\t2.5, 2.6, 2.7, 2.8, 2.9, 2.10, 2.11, 2.12, 2.13, 2.14, 2.15, 2.16, 2.17, 2.18, 2.19, 2.20, 2.21,\n\t\t3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 5.0, 5.1, 5.2, 5.3,\n\t\t5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 5.10, 5.11, 5.12, 5.13, 5.14, 5.15, 5.16, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5,\n\t\t6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 7.10, 7.11, 7.12, 7.13.\n"
                }
            },
            "required": [
                "brandId",
                "pageContent",
                "widgetVersion"
            ],
            "inputProperties": {
                "brandId": {
                    "type": "string",
                    "description": "brand id of the preview signin page\n"
                },
                "contentSecurityPolicySetting": {
                    "$ref": "#/types/okta:index/PreviewSigninPageContentSecurityPolicySetting:PreviewSigninPageContentSecurityPolicySetting"
                },
                "pageContent": {
                    "type": "string",
                    "description": "page content of the preview signin page\n"
                },
                "widgetCustomizations": {
                    "$ref": "#/types/okta:index/PreviewSigninPageWidgetCustomizations:PreviewSigninPageWidgetCustomizations"
                },
                "widgetVersion": {
                    "type": "string",
                    "description": "widget version specified as a Semver. The following are currently supported\n\t\t*, ^1, ^2, ^3, ^4, ^5, ^6, ^7, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11, 1.12, 1.13, 2.1, 2.2, 2.3, 2.4,\n\t\t2.5, 2.6, 2.7, 2.8, 2.9, 2.10, 2.11, 2.12, 2.13, 2.14, 2.15, 2.16, 2.17, 2.18, 2.19, 2.20, 2.21,\n\t\t3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 5.0, 5.1, 5.2, 5.3,\n\t\t5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 5.10, 5.11, 5.12, 5.13, 5.14, 5.15, 5.16, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5,\n\t\t6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 7.10, 7.11, 7.12, 7.13.\n"
                }
            },
            "requiredInputs": [
                "brandId",
                "pageContent",
                "widgetVersion"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PreviewSigninPage resources.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "brand id of the preview signin page\n"
                    },
                    "contentSecurityPolicySetting": {
                        "$ref": "#/types/okta:index/PreviewSigninPageContentSecurityPolicySetting:PreviewSigninPageContentSecurityPolicySetting"
                    },
                    "pageContent": {
                        "type": "string",
                        "description": "page content of the preview signin page\n"
                    },
                    "widgetCustomizations": {
                        "$ref": "#/types/okta:index/PreviewSigninPageWidgetCustomizations:PreviewSigninPageWidgetCustomizations"
                    },
                    "widgetVersion": {
                        "type": "string",
                        "description": "widget version specified as a Semver. The following are currently supported\n\t\t*, ^1, ^2, ^3, ^4, ^5, ^6, ^7, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11, 1.12, 1.13, 2.1, 2.2, 2.3, 2.4,\n\t\t2.5, 2.6, 2.7, 2.8, 2.9, 2.10, 2.11, 2.12, 2.13, 2.14, 2.15, 2.16, 2.17, 2.18, 2.19, 2.20, 2.21,\n\t\t3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 5.0, 5.1, 5.2, 5.3,\n\t\t5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 5.10, 5.11, 5.12, 5.13, 5.14, 5.15, 5.16, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5,\n\t\t6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 7.10, 7.11, 7.12, 7.13.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/rateLimiting:RateLimiting": {
            "description": "Manages rate limiting.\nThis resource allows you to configure the client-based rate limit and rate limiting communications settings.\n\u003e **WARNING:** This resource is available only when using a SSWS API token in the provider config, it is incompatible with OAuth 2.0 authentication.\n\u003e **WARNING:** This resource makes use of an internal/private Okta API endpoint that could change without notice rendering this resource inoperable.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.RateLimiting(\"example\", {\n    login: \"ENFORCE\",\n    authorize: \"ENFORCE\",\n    communicationsEnabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.RateLimiting(\"example\",\n    login=\"ENFORCE\",\n    authorize=\"ENFORCE\",\n    communications_enabled=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.RateLimiting(\"example\", new()\n    {\n        Login = \"ENFORCE\",\n        Authorize = \"ENFORCE\",\n        CommunicationsEnabled = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewRateLimiting(ctx, \"example\", \u0026okta.RateLimitingArgs{\n\t\t\tLogin:                 pulumi.String(\"ENFORCE\"),\n\t\t\tAuthorize:             pulumi.String(\"ENFORCE\"),\n\t\t\tCommunicationsEnabled: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.RateLimiting;\nimport com.pulumi.okta.RateLimitingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new RateLimiting(\"example\", RateLimitingArgs.builder()\n            .login(\"ENFORCE\")\n            .authorize(\"ENFORCE\")\n            .communicationsEnabled(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:RateLimiting\n    properties:\n      login: ENFORCE\n      authorize: ENFORCE\n      communicationsEnabled: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/rateLimiting:RateLimiting example .\n```\n\n",
            "properties": {
                "authorize": {
                    "type": "string",
                    "description": "Called during authentication. Valid values: `ENFORCE` *(Enforce limit and log per client (recommended))*, `DISABLE` *(Do nothing (not recommended))*, `PREVIEW` *(Log per client)*.\n"
                },
                "communicationsEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable rate limiting communications. By default, it is `true`.\n"
                },
                "login": {
                    "type": "string",
                    "description": "Called when accessing the Okta hosted login page. Valid values: `ENFORCE` *(Enforce limit and log per client (recommended))*, `DISABLE` *(Do nothing (not recommended))*, `PREVIEW` *(Log per client)*.\n"
                }
            },
            "required": [
                "authorize",
                "login"
            ],
            "inputProperties": {
                "authorize": {
                    "type": "string",
                    "description": "Called during authentication. Valid values: `ENFORCE` *(Enforce limit and log per client (recommended))*, `DISABLE` *(Do nothing (not recommended))*, `PREVIEW` *(Log per client)*.\n"
                },
                "communicationsEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable rate limiting communications. By default, it is `true`.\n"
                },
                "login": {
                    "type": "string",
                    "description": "Called when accessing the Okta hosted login page. Valid values: `ENFORCE` *(Enforce limit and log per client (recommended))*, `DISABLE` *(Do nothing (not recommended))*, `PREVIEW` *(Log per client)*.\n"
                }
            },
            "requiredInputs": [
                "authorize",
                "login"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RateLimiting resources.\n",
                "properties": {
                    "authorize": {
                        "type": "string",
                        "description": "Called during authentication. Valid values: `ENFORCE` *(Enforce limit and log per client (recommended))*, `DISABLE` *(Do nothing (not recommended))*, `PREVIEW` *(Log per client)*.\n"
                    },
                    "communicationsEnabled": {
                        "type": "boolean",
                        "description": "Enable or disable rate limiting communications. By default, it is `true`.\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "Called when accessing the Okta hosted login page. Valid values: `ENFORCE` *(Enforce limit and log per client (recommended))*, `DISABLE` *(Do nothing (not recommended))*, `PREVIEW` *(Log per client)*.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/realm:Realm": {
            "properties": {
                "isDefault": {
                    "type": "boolean",
                    "description": "Indicates whether the realm is the default realm.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Okta Realm.\n"
                },
                "realmType": {
                    "type": "string",
                    "description": "The realm type. Valid values: `PARTNER` and `DEFAULT`\n"
                }
            },
            "required": [
                "isDefault",
                "name",
                "realmType"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Okta Realm.\n"
                },
                "realmType": {
                    "type": "string",
                    "description": "The realm type. Valid values: `PARTNER` and `DEFAULT`\n"
                }
            },
            "requiredInputs": [
                "realmType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Realm resources.\n",
                "properties": {
                    "isDefault": {
                        "type": "boolean",
                        "description": "Indicates whether the realm is the default realm.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Okta Realm.\n"
                    },
                    "realmType": {
                        "type": "string",
                        "description": "The realm type. Valid values: `PARTNER` and `DEFAULT`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/realmAssignment:RealmAssignment": {
            "properties": {
                "conditionExpression": {
                    "type": "string",
                    "description": "Condition expression for the Realm Assignment in Okta Expression Language. Example: `user.profile.role ==\"Manager\"` or\n`user.profile.state.contains(\"example\")`.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Indicates whether the realm assignment is the default.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Okta Realm Assignment.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The Priority of the Realm Assignment. The lower the number, the higher the priority.\n"
                },
                "profileSourceId": {
                    "type": "string",
                    "description": "The ID of the Profile Source.\n"
                },
                "realmId": {
                    "type": "string",
                    "description": "The ID of the Realm asscociated with the Realm Assignment.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Defines whether the Realm Assignment is active or not. Valid values: `ACTIVE` and `INACTIVE`.\n"
                }
            },
            "required": [
                "isDefault",
                "name",
                "priority",
                "profileSourceId",
                "realmId",
                "status"
            ],
            "inputProperties": {
                "conditionExpression": {
                    "type": "string",
                    "description": "Condition expression for the Realm Assignment in Okta Expression Language. Example: `user.profile.role ==\"Manager\"` or\n`user.profile.state.contains(\"example\")`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Okta Realm Assignment.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The Priority of the Realm Assignment. The lower the number, the higher the priority.\n"
                },
                "profileSourceId": {
                    "type": "string",
                    "description": "The ID of the Profile Source.\n"
                },
                "realmId": {
                    "type": "string",
                    "description": "The ID of the Realm asscociated with the Realm Assignment.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Defines whether the Realm Assignment is active or not. Valid values: `ACTIVE` and `INACTIVE`.\n"
                }
            },
            "requiredInputs": [
                "profileSourceId",
                "realmId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RealmAssignment resources.\n",
                "properties": {
                    "conditionExpression": {
                        "type": "string",
                        "description": "Condition expression for the Realm Assignment in Okta Expression Language. Example: `user.profile.role ==\"Manager\"` or\n`user.profile.state.contains(\"example\")`.\n"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Indicates whether the realm assignment is the default.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Okta Realm Assignment.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "The Priority of the Realm Assignment. The lower the number, the higher the priority.\n"
                    },
                    "profileSourceId": {
                        "type": "string",
                        "description": "The ID of the Profile Source.\n"
                    },
                    "realmId": {
                        "type": "string",
                        "description": "The ID of the Realm asscociated with the Realm Assignment.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Defines whether the Realm Assignment is active or not. Valid values: `ACTIVE` and `INACTIVE`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/resourceSet:ResourceSet": {
            "description": "Manages Resource Sets as custom collections of resources. This resource allows the creation and manipulation of Okta Resource Sets as custom collections of Okta resources. You can use Okta Resource Sets to assign Custom Roles to administrators who are scoped to the designated resources. \nThe 'resources' field supports the following:\n\t- Apps\n\t- Groups\n\t- All Users within a Group\n\t- All Users within the org\n\t- All Groups within the org\n\t- All Apps within the org\n\t- All Apps of the same type\n\n## Import\n\n```sh\n$ pulumi import okta:index/resourceSet:ResourceSet example \u003cresource_set_id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the Resource Set\n"
                },
                "label": {
                    "type": "string",
                    "description": "Unique name given to the Resource Set\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The endpoints that reference the resources to be included in the new Resource Set. At least one endpoint must be specified when creating resource set.\n"
                },
                "resourcesOrns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The orn(Okta Resource Name) of the resources to be included in the new Resource Set. At least one orn must be specified when creating resource set.\n"
                }
            },
            "required": [
                "description",
                "label"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of the Resource Set\n"
                },
                "label": {
                    "type": "string",
                    "description": "Unique name given to the Resource Set\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The endpoints that reference the resources to be included in the new Resource Set. At least one endpoint must be specified when creating resource set.\n"
                },
                "resourcesOrns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The orn(Okta Resource Name) of the resources to be included in the new Resource Set. At least one orn must be specified when creating resource set.\n"
                }
            },
            "requiredInputs": [
                "description",
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourceSet resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of the Resource Set\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Unique name given to the Resource Set\n"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The endpoints that reference the resources to be included in the new Resource Set. At least one endpoint must be specified when creating resource set.\n"
                    },
                    "resourcesOrns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The orn(Okta Resource Name) of the resources to be included in the new Resource Set. At least one orn must be specified when creating resource set.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/roleSubscription:RoleSubscription": {
            "description": "Manages group subscription.\n\t\t\nThis resource allows you to configure subscriptions of a Role with a specific type. \nCheck [configure email notifications](https://help.okta.com/oie/en-us/Content/Topics/Security/custom-admin-role/administrator-email-settings.htm) \npage regarding what notifications are available for specific admin roles.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.RoleSubscription(\"test\", {\n    roleType: \"SUPER_ADMIN\",\n    notificationType: \"APP_IMPORT\",\n    status: \"unsubscribed\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.RoleSubscription(\"test\",\n    role_type=\"SUPER_ADMIN\",\n    notification_type=\"APP_IMPORT\",\n    status=\"unsubscribed\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Okta.RoleSubscription(\"test\", new()\n    {\n        RoleType = \"SUPER_ADMIN\",\n        NotificationType = \"APP_IMPORT\",\n        Status = \"unsubscribed\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewRoleSubscription(ctx, \"test\", \u0026okta.RoleSubscriptionArgs{\n\t\t\tRoleType:         pulumi.String(\"SUPER_ADMIN\"),\n\t\t\tNotificationType: pulumi.String(\"APP_IMPORT\"),\n\t\t\tStatus:           pulumi.String(\"unsubscribed\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.RoleSubscription;\nimport com.pulumi.okta.RoleSubscriptionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new RoleSubscription(\"test\", RoleSubscriptionArgs.builder()\n            .roleType(\"SUPER_ADMIN\")\n            .notificationType(\"APP_IMPORT\")\n            .status(\"unsubscribed\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: okta:RoleSubscription\n    properties:\n      roleType: SUPER_ADMIN\n      notificationType: APP_IMPORT\n      status: unsubscribed\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/roleSubscription:RoleSubscription example \u003crole_type\u003e/\u003cnotification_type\u003e\n```\n\n",
            "properties": {
                "notificationType": {
                    "type": "string",
                    "description": "Type of the notification. Valid values: - 'CONNECTOR_AGENT' - Disconnects and reconnects: On-prem provisioning, on-prem\nMFA agents, and RADIUS server agent. - 'USER_LOCKED_OUT' - User lockouts. - 'APP_IMPORT' - App user import status. -\n'LDAP_AGENT' - Disconnects and reconnects: LDAP agent. - 'AD_AGENT' - Disconnects and reconnects: AD agent. -\n'OKTA_ANNOUNCEMENT' - Okta release notes and announcements. - 'OKTA_UPDATE' - Scheduled system updates. - 'IWA_AGENT' -\nDisconnects and reconnects: IWA agent. - 'USER_DEPROVISION' - User deprovisions. - 'REPORT_SUSPICIOUS_ACTIVITY' - User\nreporting of suspicious activity. - 'RATELIMIT_NOTIFICATION' - Rate limit warning and violation. -\n'AGENT_AUTO_UPDATE_NOTIFICATION' - Agent auto-update notifications: AD Agent.\n"
                },
                "roleType": {
                    "type": "string",
                    "description": "Type of the role. Valid values: 'API_ADMIN', 'APP_ADMIN', 'CUSTOM', 'GROUP_MEMBERSHIP_ADMIN', 'HELP_DESK_ADMIN',\n'MOBILE_ADMIN', 'ORG_ADMIN', 'READ_ONLY_ADMIN', 'REPORT_ADMIN', 'SUPER_ADMIN', 'USER_ADMIN' . See [API\ndocs](https://developer.okta.com/docs/reference/api/admin-notifications/#role-types).\n"
                },
                "status": {
                    "type": "string",
                    "description": "Subscription status. Valid values: `subscribed`, `unsubscribed`.\n"
                }
            },
            "required": [
                "notificationType",
                "roleType"
            ],
            "inputProperties": {
                "notificationType": {
                    "type": "string",
                    "description": "Type of the notification. Valid values: - 'CONNECTOR_AGENT' - Disconnects and reconnects: On-prem provisioning, on-prem\nMFA agents, and RADIUS server agent. - 'USER_LOCKED_OUT' - User lockouts. - 'APP_IMPORT' - App user import status. -\n'LDAP_AGENT' - Disconnects and reconnects: LDAP agent. - 'AD_AGENT' - Disconnects and reconnects: AD agent. -\n'OKTA_ANNOUNCEMENT' - Okta release notes and announcements. - 'OKTA_UPDATE' - Scheduled system updates. - 'IWA_AGENT' -\nDisconnects and reconnects: IWA agent. - 'USER_DEPROVISION' - User deprovisions. - 'REPORT_SUSPICIOUS_ACTIVITY' - User\nreporting of suspicious activity. - 'RATELIMIT_NOTIFICATION' - Rate limit warning and violation. -\n'AGENT_AUTO_UPDATE_NOTIFICATION' - Agent auto-update notifications: AD Agent.\n",
                    "willReplaceOnChanges": true
                },
                "roleType": {
                    "type": "string",
                    "description": "Type of the role. Valid values: 'API_ADMIN', 'APP_ADMIN', 'CUSTOM', 'GROUP_MEMBERSHIP_ADMIN', 'HELP_DESK_ADMIN',\n'MOBILE_ADMIN', 'ORG_ADMIN', 'READ_ONLY_ADMIN', 'REPORT_ADMIN', 'SUPER_ADMIN', 'USER_ADMIN' . See [API\ndocs](https://developer.okta.com/docs/reference/api/admin-notifications/#role-types).\n",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "string",
                    "description": "Subscription status. Valid values: `subscribed`, `unsubscribed`.\n"
                }
            },
            "requiredInputs": [
                "notificationType",
                "roleType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RoleSubscription resources.\n",
                "properties": {
                    "notificationType": {
                        "type": "string",
                        "description": "Type of the notification. Valid values: - 'CONNECTOR_AGENT' - Disconnects and reconnects: On-prem provisioning, on-prem\nMFA agents, and RADIUS server agent. - 'USER_LOCKED_OUT' - User lockouts. - 'APP_IMPORT' - App user import status. -\n'LDAP_AGENT' - Disconnects and reconnects: LDAP agent. - 'AD_AGENT' - Disconnects and reconnects: AD agent. -\n'OKTA_ANNOUNCEMENT' - Okta release notes and announcements. - 'OKTA_UPDATE' - Scheduled system updates. - 'IWA_AGENT' -\nDisconnects and reconnects: IWA agent. - 'USER_DEPROVISION' - User deprovisions. - 'REPORT_SUSPICIOUS_ACTIVITY' - User\nreporting of suspicious activity. - 'RATELIMIT_NOTIFICATION' - Rate limit warning and violation. -\n'AGENT_AUTO_UPDATE_NOTIFICATION' - Agent auto-update notifications: AD Agent.\n",
                        "willReplaceOnChanges": true
                    },
                    "roleType": {
                        "type": "string",
                        "description": "Type of the role. Valid values: 'API_ADMIN', 'APP_ADMIN', 'CUSTOM', 'GROUP_MEMBERSHIP_ADMIN', 'HELP_DESK_ADMIN',\n'MOBILE_ADMIN', 'ORG_ADMIN', 'READ_ONLY_ADMIN', 'REPORT_ADMIN', 'SUPER_ADMIN', 'USER_ADMIN' . See [API\ndocs](https://developer.okta.com/docs/reference/api/admin-notifications/#role-types).\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Subscription status. Valid values: `subscribed`, `unsubscribed`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/securityNotificationEmails:SecurityNotificationEmails": {
            "description": "Manages Security Notification Emails\n\t\tThis resource allows you to configure Security Notification Emails.\n\t\t\u003e **WARNING:** This resource is available only when using a SSWS API token in the provider config, it is incompatible with OAuth 2.0 authentication.\n\t\t\u003e **WARNING:** This resource makes use of an internal/private Okta API endpoint that could change without notice rendering this resource inoperable.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.SecurityNotificationEmails(\"example\", {\n    reportSuspiciousActivityEnabled: true,\n    sendEmailForFactorEnrollmentEnabled: true,\n    sendEmailForFactorResetEnabled: true,\n    sendEmailForNewDeviceEnabled: true,\n    sendEmailForPasswordChangedEnabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.SecurityNotificationEmails(\"example\",\n    report_suspicious_activity_enabled=True,\n    send_email_for_factor_enrollment_enabled=True,\n    send_email_for_factor_reset_enabled=True,\n    send_email_for_new_device_enabled=True,\n    send_email_for_password_changed_enabled=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.SecurityNotificationEmails(\"example\", new()\n    {\n        ReportSuspiciousActivityEnabled = true,\n        SendEmailForFactorEnrollmentEnabled = true,\n        SendEmailForFactorResetEnabled = true,\n        SendEmailForNewDeviceEnabled = true,\n        SendEmailForPasswordChangedEnabled = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewSecurityNotificationEmails(ctx, \"example\", \u0026okta.SecurityNotificationEmailsArgs{\n\t\t\tReportSuspiciousActivityEnabled:     pulumi.Bool(true),\n\t\t\tSendEmailForFactorEnrollmentEnabled: pulumi.Bool(true),\n\t\t\tSendEmailForFactorResetEnabled:      pulumi.Bool(true),\n\t\t\tSendEmailForNewDeviceEnabled:        pulumi.Bool(true),\n\t\t\tSendEmailForPasswordChangedEnabled:  pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.SecurityNotificationEmails;\nimport com.pulumi.okta.SecurityNotificationEmailsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new SecurityNotificationEmails(\"example\", SecurityNotificationEmailsArgs.builder()\n            .reportSuspiciousActivityEnabled(true)\n            .sendEmailForFactorEnrollmentEnabled(true)\n            .sendEmailForFactorResetEnabled(true)\n            .sendEmailForNewDeviceEnabled(true)\n            .sendEmailForPasswordChangedEnabled(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:SecurityNotificationEmails\n    properties:\n      reportSuspiciousActivityEnabled: true\n      sendEmailForFactorEnrollmentEnabled: true\n      sendEmailForFactorResetEnabled: true\n      sendEmailForNewDeviceEnabled: true\n      sendEmailForPasswordChangedEnabled: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/securityNotificationEmails:SecurityNotificationEmails example _\n```\n\n",
            "properties": {
                "reportSuspiciousActivityEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users about suspicious or unrecognized activity from their account. Default is `true`.\n"
                },
                "sendEmailForFactorEnrollmentEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users of any activity on their account related to MFA factor enrollment. Default is `true`.\n"
                },
                "sendEmailForFactorResetEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users that one or more factors have been reset for their account. Default is `true`.\n"
                },
                "sendEmailForNewDeviceEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users about new sign-on activity. Default is `true`.\n"
                },
                "sendEmailForPasswordChangedEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users that the password for their account has changed. Default is `true`.\n"
                }
            },
            "inputProperties": {
                "reportSuspiciousActivityEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users about suspicious or unrecognized activity from their account. Default is `true`.\n"
                },
                "sendEmailForFactorEnrollmentEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users of any activity on their account related to MFA factor enrollment. Default is `true`.\n"
                },
                "sendEmailForFactorResetEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users that one or more factors have been reset for their account. Default is `true`.\n"
                },
                "sendEmailForNewDeviceEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users about new sign-on activity. Default is `true`.\n"
                },
                "sendEmailForPasswordChangedEnabled": {
                    "type": "boolean",
                    "description": "Notifies end users that the password for their account has changed. Default is `true`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurityNotificationEmails resources.\n",
                "properties": {
                    "reportSuspiciousActivityEnabled": {
                        "type": "boolean",
                        "description": "Notifies end users about suspicious or unrecognized activity from their account. Default is `true`.\n"
                    },
                    "sendEmailForFactorEnrollmentEnabled": {
                        "type": "boolean",
                        "description": "Notifies end users of any activity on their account related to MFA factor enrollment. Default is `true`.\n"
                    },
                    "sendEmailForFactorResetEnabled": {
                        "type": "boolean",
                        "description": "Notifies end users that one or more factors have been reset for their account. Default is `true`.\n"
                    },
                    "sendEmailForNewDeviceEnabled": {
                        "type": "boolean",
                        "description": "Notifies end users about new sign-on activity. Default is `true`.\n"
                    },
                    "sendEmailForPasswordChangedEnabled": {
                        "type": "boolean",
                        "description": "Notifies end users that the password for their account has changed. Default is `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/templateSms:TemplateSms": {
            "description": "Creates an Okta SMS Template. This resource allows you to create and configure an Okta SMS Template.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.TemplateSms(\"example\", {\n    type: \"SMS_VERIFY_CODE\",\n    template: \"Your ${org.name} code is: ${code}\",\n    translations: [\n        {\n            language: \"en\",\n            template: \"Your ${org.name} code is: ${code}\",\n        },\n        {\n            language: \"es\",\n            template: \"Tu código de ${org.name} es: ${code}.\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.TemplateSms(\"example\",\n    type=\"SMS_VERIFY_CODE\",\n    template=\"Your ${org.name} code is: ${code}\",\n    translations=[\n        {\n            \"language\": \"en\",\n            \"template\": \"Your ${org.name} code is: ${code}\",\n        },\n        {\n            \"language\": \"es\",\n            \"template\": \"Tu código de ${org.name} es: ${code}.\",\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.TemplateSms(\"example\", new()\n    {\n        Type = \"SMS_VERIFY_CODE\",\n        Template = \"Your ${org.name} code is: ${code}\",\n        Translations = new[]\n        {\n            new Okta.Inputs.TemplateSmsTranslationArgs\n            {\n                Language = \"en\",\n                Template = \"Your ${org.name} code is: ${code}\",\n            },\n            new Okta.Inputs.TemplateSmsTranslationArgs\n            {\n                Language = \"es\",\n                Template = \"Tu código de ${org.name} es: ${code}.\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewTemplateSms(ctx, \"example\", \u0026okta.TemplateSmsArgs{\n\t\t\tType:     pulumi.String(\"SMS_VERIFY_CODE\"),\n\t\t\tTemplate: pulumi.String(\"Your ${org.name} code is: ${code}\"),\n\t\t\tTranslations: okta.TemplateSmsTranslationArray{\n\t\t\t\t\u0026okta.TemplateSmsTranslationArgs{\n\t\t\t\t\tLanguage: pulumi.String(\"en\"),\n\t\t\t\t\tTemplate: pulumi.String(\"Your ${org.name} code is: ${code}\"),\n\t\t\t\t},\n\t\t\t\t\u0026okta.TemplateSmsTranslationArgs{\n\t\t\t\t\tLanguage: pulumi.String(\"es\"),\n\t\t\t\t\tTemplate: pulumi.String(\"Tu código de ${org.name} es: ${code}.\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.TemplateSms;\nimport com.pulumi.okta.TemplateSmsArgs;\nimport com.pulumi.okta.inputs.TemplateSmsTranslationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new TemplateSms(\"example\", TemplateSmsArgs.builder()\n            .type(\"SMS_VERIFY_CODE\")\n            .template(\"Your ${org.name} code is: ${code}\")\n            .translations(            \n                TemplateSmsTranslationArgs.builder()\n                    .language(\"en\")\n                    .template(\"Your ${org.name} code is: ${code}\")\n                    .build(),\n                TemplateSmsTranslationArgs.builder()\n                    .language(\"es\")\n                    .template(\"Tu código de ${org.name} es: ${code}.\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:TemplateSms\n    properties:\n      type: SMS_VERIFY_CODE\n      template: 'Your $${org.name} code is: $${code}'\n      translations:\n        - language: en\n          template: 'Your $${org.name} code is: $${code}'\n        - language: es\n          template: 'Tu código de $${org.name} es: $${code}.'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/templateSms:TemplateSms example \u003ctemplate_type\u003e\n```\n\n",
            "properties": {
                "template": {
                    "type": "string",
                    "description": "SMS default template\n"
                },
                "translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/TemplateSmsTranslation:TemplateSmsTranslation"
                    },
                    "description": "Set of translations for a particular template.\n"
                },
                "type": {
                    "type": "string",
                    "description": "SMS template type\n"
                }
            },
            "required": [
                "template",
                "type"
            ],
            "inputProperties": {
                "template": {
                    "type": "string",
                    "description": "SMS default template\n"
                },
                "translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/TemplateSmsTranslation:TemplateSmsTranslation"
                    },
                    "description": "Set of translations for a particular template.\n"
                },
                "type": {
                    "type": "string",
                    "description": "SMS template type\n"
                }
            },
            "requiredInputs": [
                "template",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TemplateSms resources.\n",
                "properties": {
                    "template": {
                        "type": "string",
                        "description": "SMS default template\n"
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/TemplateSmsTranslation:TemplateSmsTranslation"
                        },
                        "description": "Set of translations for a particular template.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "SMS template type\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/theme:Theme": {
            "description": "Gets, updates, a single Theme of a Brand of an Okta Organization.\n\nThis resource allows you to get and update an Okta\n[Theme](https://developer.okta.com/docs/reference/api/brands/#theme-object).\n\nThe Okta Management API does not have a true Create or Delete for a theme. Therefore, the theme resource must be imported\nfirst into the pulumi state before updates can be applied to the theme.\n\n## Import\n\n```sh\n$ pulumi import okta:index/theme:Theme example \u003cbrand_id\u003e/\u003ctheme_id\u003e\n```\n\n",
            "properties": {
                "backgroundImage": {
                    "type": "string",
                    "description": "Path to local file\n"
                },
                "backgroundImageUrl": {
                    "type": "string",
                    "description": "Background image URL\n"
                },
                "brandId": {
                    "type": "string",
                    "description": "Brand ID\n"
                },
                "emailTemplateTouchPointVariant": {
                    "type": "string",
                    "description": "Variant for email templates (`OKTA_DEFAULT`, `FULL_THEME`)\n"
                },
                "endUserDashboardTouchPointVariant": {
                    "type": "string",
                    "description": "Variant for the Okta End-User Dashboard (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)\n"
                },
                "errorPageTouchPointVariant": {
                    "type": "string",
                    "description": "Variant for the error page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n"
                },
                "favicon": {
                    "type": "string",
                    "description": "Path to local file\n"
                },
                "faviconUrl": {
                    "type": "string",
                    "description": "Favicon URL\n"
                },
                "links": {
                    "type": "string",
                    "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Path to local file\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Logo URL\n"
                },
                "primaryColorContrastHex": {
                    "type": "string",
                    "description": "Primary color contrast hex code\n"
                },
                "primaryColorHex": {
                    "type": "string",
                    "description": "Primary color hex code\n"
                },
                "secondaryColorContrastHex": {
                    "type": "string",
                    "description": "Secondary color contrast hex code\n"
                },
                "secondaryColorHex": {
                    "type": "string",
                    "description": "Secondary color hex code\n"
                },
                "signInPageTouchPointVariant": {
                    "type": "string",
                    "description": "Variant for the Okta Sign-In Page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n"
                },
                "themeId": {
                    "type": "string",
                    "description": "Theme ID - Note: Okta API for theme only reads and updates therefore the okta*theme resource needs to act as a quasi data source. Do this by setting theme*id.\n"
                }
            },
            "required": [
                "backgroundImageUrl",
                "brandId",
                "faviconUrl",
                "links",
                "logoUrl"
            ],
            "inputProperties": {
                "backgroundImage": {
                    "type": "string",
                    "description": "Path to local file\n"
                },
                "brandId": {
                    "type": "string",
                    "description": "Brand ID\n"
                },
                "emailTemplateTouchPointVariant": {
                    "type": "string",
                    "description": "Variant for email templates (`OKTA_DEFAULT`, `FULL_THEME`)\n"
                },
                "endUserDashboardTouchPointVariant": {
                    "type": "string",
                    "description": "Variant for the Okta End-User Dashboard (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)\n"
                },
                "errorPageTouchPointVariant": {
                    "type": "string",
                    "description": "Variant for the error page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n"
                },
                "favicon": {
                    "type": "string",
                    "description": "Path to local file\n"
                },
                "logo": {
                    "type": "string",
                    "description": "Path to local file\n"
                },
                "primaryColorContrastHex": {
                    "type": "string",
                    "description": "Primary color contrast hex code\n"
                },
                "primaryColorHex": {
                    "type": "string",
                    "description": "Primary color hex code\n"
                },
                "secondaryColorContrastHex": {
                    "type": "string",
                    "description": "Secondary color contrast hex code\n"
                },
                "secondaryColorHex": {
                    "type": "string",
                    "description": "Secondary color hex code\n"
                },
                "signInPageTouchPointVariant": {
                    "type": "string",
                    "description": "Variant for the Okta Sign-In Page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n"
                },
                "themeId": {
                    "type": "string",
                    "description": "Theme ID - Note: Okta API for theme only reads and updates therefore the okta*theme resource needs to act as a quasi data source. Do this by setting theme*id.\n"
                }
            },
            "requiredInputs": [
                "brandId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Theme resources.\n",
                "properties": {
                    "backgroundImage": {
                        "type": "string",
                        "description": "Path to local file\n"
                    },
                    "backgroundImageUrl": {
                        "type": "string",
                        "description": "Background image URL\n"
                    },
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    },
                    "emailTemplateTouchPointVariant": {
                        "type": "string",
                        "description": "Variant for email templates (`OKTA_DEFAULT`, `FULL_THEME`)\n"
                    },
                    "endUserDashboardTouchPointVariant": {
                        "type": "string",
                        "description": "Variant for the Okta End-User Dashboard (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)\n"
                    },
                    "errorPageTouchPointVariant": {
                        "type": "string",
                        "description": "Variant for the error page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n"
                    },
                    "favicon": {
                        "type": "string",
                        "description": "Path to local file\n"
                    },
                    "faviconUrl": {
                        "type": "string",
                        "description": "Favicon URL\n"
                    },
                    "links": {
                        "type": "string",
                        "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "Path to local file\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Logo URL\n"
                    },
                    "primaryColorContrastHex": {
                        "type": "string",
                        "description": "Primary color contrast hex code\n"
                    },
                    "primaryColorHex": {
                        "type": "string",
                        "description": "Primary color hex code\n"
                    },
                    "secondaryColorContrastHex": {
                        "type": "string",
                        "description": "Secondary color contrast hex code\n"
                    },
                    "secondaryColorHex": {
                        "type": "string",
                        "description": "Secondary color hex code\n"
                    },
                    "signInPageTouchPointVariant": {
                        "type": "string",
                        "description": "Variant for the Okta Sign-In Page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n"
                    },
                    "themeId": {
                        "type": "string",
                        "description": "Theme ID - Note: Okta API for theme only reads and updates therefore the okta*theme resource needs to act as a quasi data source. Do this by setting theme*id.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/threatInsightSettings:ThreatInsightSettings": {
            "description": "Manages Okta Threat Insight Settings. This resource allows you to configure Threat Insight Settings.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst ipNetworkZoneExample = new okta.network.Zone(\"ip_network_zone_example\", {\n    name: \"example\",\n    type: \"IP\",\n    gateways: [\n        \"1.2.3.4/24\",\n        \"2.3.4.5-2.3.4.15\",\n    ],\n    proxies: [\n        \"2.2.3.4/24\",\n        \"3.3.4.5-3.3.4.15\",\n    ],\n});\nconst example = new okta.ThreatInsightSettings(\"example\", {\n    action: \"block\",\n    networkExcludes: [ipNetworkZoneExample.id],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nip_network_zone_example = okta.network.Zone(\"ip_network_zone_example\",\n    name=\"example\",\n    type=\"IP\",\n    gateways=[\n        \"1.2.3.4/24\",\n        \"2.3.4.5-2.3.4.15\",\n    ],\n    proxies=[\n        \"2.2.3.4/24\",\n        \"3.3.4.5-3.3.4.15\",\n    ])\nexample = okta.ThreatInsightSettings(\"example\",\n    action=\"block\",\n    network_excludes=[ip_network_zone_example.id])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ipNetworkZoneExample = new Okta.Network.Zone(\"ip_network_zone_example\", new()\n    {\n        Name = \"example\",\n        Type = \"IP\",\n        Gateways = new[]\n        {\n            \"1.2.3.4/24\",\n            \"2.3.4.5-2.3.4.15\",\n        },\n        Proxies = new[]\n        {\n            \"2.2.3.4/24\",\n            \"3.3.4.5-3.3.4.15\",\n        },\n    });\n\n    var example = new Okta.ThreatInsightSettings(\"example\", new()\n    {\n        Action = \"block\",\n        NetworkExcludes = new[]\n        {\n            ipNetworkZoneExample.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/network\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tipNetworkZoneExample, err := network.NewZone(ctx, \"ip_network_zone_example\", \u0026network.ZoneArgs{\n\t\t\tName: pulumi.String(\"example\"),\n\t\t\tType: pulumi.String(\"IP\"),\n\t\t\tGateways: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"1.2.3.4/24\"),\n\t\t\t\tpulumi.String(\"2.3.4.5-2.3.4.15\"),\n\t\t\t},\n\t\t\tProxies: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"2.2.3.4/24\"),\n\t\t\t\tpulumi.String(\"3.3.4.5-3.3.4.15\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewThreatInsightSettings(ctx, \"example\", \u0026okta.ThreatInsightSettingsArgs{\n\t\t\tAction: pulumi.String(\"block\"),\n\t\t\tNetworkExcludes: pulumi.StringArray{\n\t\t\t\tipNetworkZoneExample.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.network.Zone;\nimport com.pulumi.okta.network.ZoneArgs;\nimport com.pulumi.okta.ThreatInsightSettings;\nimport com.pulumi.okta.ThreatInsightSettingsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var ipNetworkZoneExample = new Zone(\"ipNetworkZoneExample\", ZoneArgs.builder()\n            .name(\"example\")\n            .type(\"IP\")\n            .gateways(            \n                \"1.2.3.4/24\",\n                \"2.3.4.5-2.3.4.15\")\n            .proxies(            \n                \"2.2.3.4/24\",\n                \"3.3.4.5-3.3.4.15\")\n            .build());\n\n        var example = new ThreatInsightSettings(\"example\", ThreatInsightSettingsArgs.builder()\n            .action(\"block\")\n            .networkExcludes(ipNetworkZoneExample.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  ipNetworkZoneExample:\n    type: okta:network:Zone\n    name: ip_network_zone_example\n    properties:\n      name: example\n      type: IP\n      gateways:\n        - 1.2.3.4/24\n        - 2.3.4.5-2.3.4.15\n      proxies:\n        - 2.2.3.4/24\n        - 3.3.4.5-3.3.4.15\n  example:\n    type: okta:ThreatInsightSettings\n    properties:\n      action: block\n      networkExcludes:\n        - ${ipNetworkZoneExample.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/threatInsightSettings:ThreatInsightSettings example _\n```\n\n",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Specifies how Okta responds to authentication requests from suspicious IPs. Valid values are `none`, `audit`, or `block`. A value of `none` indicates that ThreatInsight is disabled. A value of `audit` indicates that Okta logs suspicious requests in the System Log. A value of `block` indicates that Okta logs suspicious requests in the System Log and blocks the requests.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Accepts a list of Network Zone IDs. Can only accept zones of `IP` type. IPs in the excluded Network Zones aren't logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation. This ensures that traffic from known, trusted IPs isn't accidentally logged or blocked. The ordering of the network zone is not guarantee from the API sides\n"
                }
            },
            "required": [
                "action"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Specifies how Okta responds to authentication requests from suspicious IPs. Valid values are `none`, `audit`, or `block`. A value of `none` indicates that ThreatInsight is disabled. A value of `audit` indicates that Okta logs suspicious requests in the System Log. A value of `block` indicates that Okta logs suspicious requests in the System Log and blocks the requests.\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Accepts a list of Network Zone IDs. Can only accept zones of `IP` type. IPs in the excluded Network Zones aren't logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation. This ensures that traffic from known, trusted IPs isn't accidentally logged or blocked. The ordering of the network zone is not guarantee from the API sides\n"
                }
            },
            "requiredInputs": [
                "action"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ThreatInsightSettings resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Specifies how Okta responds to authentication requests from suspicious IPs. Valid values are `none`, `audit`, or `block`. A value of `none` indicates that ThreatInsight is disabled. A value of `audit` indicates that Okta logs suspicious requests in the System Log. A value of `block` indicates that Okta logs suspicious requests in the System Log and blocks the requests.\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Accepts a list of Network Zone IDs. Can only accept zones of `IP` type. IPs in the excluded Network Zones aren't logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation. This ensures that traffic from known, trusted IPs isn't accidentally logged or blocked. The ordering of the network zone is not guarantee from the API sides\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/trustedServer:TrustedServer": {
            "description": "Associated (Trusted) authorization servers allow you to designate a trusted authorization server that you associate with another authorization server.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test1 = new okta.auth.Server(\"test1\", {\n    audiences: [\"whatever.rise.zone\"],\n    credentialsRotationMode: \"AUTO\",\n    description: \"The best way to find out if you can trust somebody is to trust them.\",\n    name: \"testAcc-replace_with_uuid\",\n});\nconst test2 = new okta.auth.Server(\"test2\", {\n    audiences: [\"whatever.rise.zone\"],\n    credentialsRotationMode: \"AUTO\",\n    description: \"The best way to find out if you can trust somebody is to trust them.\",\n    name: \"testAcc-replace_with_uuid\",\n});\nconst test3 = new okta.auth.Server(\"test3\", {\n    audiences: [\"whatever.rise.zone\"],\n    credentialsRotationMode: \"AUTO\",\n    description: \"The best way to find out if you can trust somebody is to trust them.\",\n    name: \"testAcc-replace_with_uuid\",\n});\nconst example = new okta.TrustedServer(\"example\", {\n    authServerId: oktaAuthServer.test1.id,\n    trusteds: [\n        oktaAuthServer.test2.id,\n        oktaAuthServer.test3.id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest1 = okta.auth.Server(\"test1\",\n    audiences=[\"whatever.rise.zone\"],\n    credentials_rotation_mode=\"AUTO\",\n    description=\"The best way to find out if you can trust somebody is to trust them.\",\n    name=\"testAcc-replace_with_uuid\")\ntest2 = okta.auth.Server(\"test2\",\n    audiences=[\"whatever.rise.zone\"],\n    credentials_rotation_mode=\"AUTO\",\n    description=\"The best way to find out if you can trust somebody is to trust them.\",\n    name=\"testAcc-replace_with_uuid\")\ntest3 = okta.auth.Server(\"test3\",\n    audiences=[\"whatever.rise.zone\"],\n    credentials_rotation_mode=\"AUTO\",\n    description=\"The best way to find out if you can trust somebody is to trust them.\",\n    name=\"testAcc-replace_with_uuid\")\nexample = okta.TrustedServer(\"example\",\n    auth_server_id=okta_auth_server[\"test1\"][\"id\"],\n    trusteds=[\n        okta_auth_server[\"test2\"][\"id\"],\n        okta_auth_server[\"test3\"][\"id\"],\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test1 = new Okta.Auth.Server(\"test1\", new()\n    {\n        Audiences = new[]\n        {\n            \"whatever.rise.zone\",\n        },\n        CredentialsRotationMode = \"AUTO\",\n        Description = \"The best way to find out if you can trust somebody is to trust them.\",\n        Name = \"testAcc-replace_with_uuid\",\n    });\n\n    var test2 = new Okta.Auth.Server(\"test2\", new()\n    {\n        Audiences = new[]\n        {\n            \"whatever.rise.zone\",\n        },\n        CredentialsRotationMode = \"AUTO\",\n        Description = \"The best way to find out if you can trust somebody is to trust them.\",\n        Name = \"testAcc-replace_with_uuid\",\n    });\n\n    var test3 = new Okta.Auth.Server(\"test3\", new()\n    {\n        Audiences = new[]\n        {\n            \"whatever.rise.zone\",\n        },\n        CredentialsRotationMode = \"AUTO\",\n        Description = \"The best way to find out if you can trust somebody is to trust them.\",\n        Name = \"testAcc-replace_with_uuid\",\n    });\n\n    var example = new Okta.TrustedServer(\"example\", new()\n    {\n        AuthServerId = oktaAuthServer.Test1.Id,\n        Trusteds = new[]\n        {\n            oktaAuthServer.Test2.Id,\n            oktaAuthServer.Test3.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.NewServer(ctx, \"test1\", \u0026auth.ServerArgs{\n\t\t\tAudiences: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"whatever.rise.zone\"),\n\t\t\t},\n\t\t\tCredentialsRotationMode: pulumi.String(\"AUTO\"),\n\t\t\tDescription:             pulumi.String(\"The best way to find out if you can trust somebody is to trust them.\"),\n\t\t\tName:                    pulumi.String(\"testAcc-replace_with_uuid\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth.NewServer(ctx, \"test2\", \u0026auth.ServerArgs{\n\t\t\tAudiences: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"whatever.rise.zone\"),\n\t\t\t},\n\t\t\tCredentialsRotationMode: pulumi.String(\"AUTO\"),\n\t\t\tDescription:             pulumi.String(\"The best way to find out if you can trust somebody is to trust them.\"),\n\t\t\tName:                    pulumi.String(\"testAcc-replace_with_uuid\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth.NewServer(ctx, \"test3\", \u0026auth.ServerArgs{\n\t\t\tAudiences: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"whatever.rise.zone\"),\n\t\t\t},\n\t\t\tCredentialsRotationMode: pulumi.String(\"AUTO\"),\n\t\t\tDescription:             pulumi.String(\"The best way to find out if you can trust somebody is to trust them.\"),\n\t\t\tName:                    pulumi.String(\"testAcc-replace_with_uuid\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewTrustedServer(ctx, \"example\", \u0026okta.TrustedServerArgs{\n\t\t\tAuthServerId: pulumi.Any(oktaAuthServer.Test1.Id),\n\t\t\tTrusteds: pulumi.StringArray{\n\t\t\t\toktaAuthServer.Test2.Id,\n\t\t\t\toktaAuthServer.Test3.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.Server;\nimport com.pulumi.okta.auth.ServerArgs;\nimport com.pulumi.okta.TrustedServer;\nimport com.pulumi.okta.TrustedServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test1 = new Server(\"test1\", ServerArgs.builder()\n            .audiences(\"whatever.rise.zone\")\n            .credentialsRotationMode(\"AUTO\")\n            .description(\"The best way to find out if you can trust somebody is to trust them.\")\n            .name(\"testAcc-replace_with_uuid\")\n            .build());\n\n        var test2 = new Server(\"test2\", ServerArgs.builder()\n            .audiences(\"whatever.rise.zone\")\n            .credentialsRotationMode(\"AUTO\")\n            .description(\"The best way to find out if you can trust somebody is to trust them.\")\n            .name(\"testAcc-replace_with_uuid\")\n            .build());\n\n        var test3 = new Server(\"test3\", ServerArgs.builder()\n            .audiences(\"whatever.rise.zone\")\n            .credentialsRotationMode(\"AUTO\")\n            .description(\"The best way to find out if you can trust somebody is to trust them.\")\n            .name(\"testAcc-replace_with_uuid\")\n            .build());\n\n        var example = new TrustedServer(\"example\", TrustedServerArgs.builder()\n            .authServerId(oktaAuthServer.test1().id())\n            .trusteds(            \n                oktaAuthServer.test2().id(),\n                oktaAuthServer.test3().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test1:\n    type: okta:auth:Server\n    properties:\n      audiences:\n        - whatever.rise.zone\n      credentialsRotationMode: AUTO\n      description: The best way to find out if you can trust somebody is to trust them.\n      name: testAcc-replace_with_uuid\n  test2:\n    type: okta:auth:Server\n    properties:\n      audiences:\n        - whatever.rise.zone\n      credentialsRotationMode: AUTO\n      description: The best way to find out if you can trust somebody is to trust them.\n      name: testAcc-replace_with_uuid\n  test3:\n    type: okta:auth:Server\n    properties:\n      audiences:\n        - whatever.rise.zone\n      credentialsRotationMode: AUTO\n      description: The best way to find out if you can trust somebody is to trust them.\n      name: testAcc-replace_with_uuid\n  example:\n    type: okta:TrustedServer\n    properties:\n      authServerId: ${oktaAuthServer.test1.id}\n      trusteds:\n        - ${oktaAuthServer.test2.id}\n        - ${oktaAuthServer.test3.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "authServerId": {
                    "type": "string",
                    "description": "Authorization server ID\n"
                },
                "trusteds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the authorization server IDs user want to trust\n"
                }
            },
            "required": [
                "authServerId",
                "trusteds"
            ],
            "inputProperties": {
                "authServerId": {
                    "type": "string",
                    "description": "Authorization server ID\n"
                },
                "trusteds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the authorization server IDs user want to trust\n"
                }
            },
            "requiredInputs": [
                "authServerId",
                "trusteds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TrustedServer resources.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "Authorization server ID\n"
                    },
                    "trusteds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the authorization server IDs user want to trust\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/userAdminRoles:UserAdminRoles": {
            "description": "Resource to manage a set of administrator roles for a specific user. This resource allows you to manage admin roles for a single user, independent of the user schema itself.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.user.User(\"test\", {\n    firstName: \"TestAcc\",\n    lastName: \"Smith\",\n    login: \"testAcc-replace_with_uuid@example.com\",\n    email: \"testAcc-replace_with_uuid@example.com\",\n});\nconst testUserAdminRoles = new okta.UserAdminRoles(\"test\", {\n    userId: test.id,\n    adminRoles: [\"APP_ADMIN\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.user.User(\"test\",\n    first_name=\"TestAcc\",\n    last_name=\"Smith\",\n    login=\"testAcc-replace_with_uuid@example.com\",\n    email=\"testAcc-replace_with_uuid@example.com\")\ntest_user_admin_roles = okta.UserAdminRoles(\"test\",\n    user_id=test.id,\n    admin_roles=[\"APP_ADMIN\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Okta.User.User(\"test\", new()\n    {\n        FirstName = \"TestAcc\",\n        LastName = \"Smith\",\n        Login = \"testAcc-replace_with_uuid@example.com\",\n        Email = \"testAcc-replace_with_uuid@example.com\",\n    });\n\n    var testUserAdminRoles = new Okta.UserAdminRoles(\"test\", new()\n    {\n        UserId = test.Id,\n        AdminRoles = new[]\n        {\n            \"APP_ADMIN\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := user.NewUser(ctx, \"test\", \u0026user.UserArgs{\n\t\t\tFirstName: pulumi.String(\"TestAcc\"),\n\t\t\tLastName:  pulumi.String(\"Smith\"),\n\t\t\tLogin:     pulumi.String(\"testAcc-replace_with_uuid@example.com\"),\n\t\t\tEmail:     pulumi.String(\"testAcc-replace_with_uuid@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewUserAdminRoles(ctx, \"test\", \u0026okta.UserAdminRolesArgs{\n\t\t\tUserId: test.ID(),\n\t\t\tAdminRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"APP_ADMIN\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.User;\nimport com.pulumi.okta.user.UserArgs;\nimport com.pulumi.okta.UserAdminRoles;\nimport com.pulumi.okta.UserAdminRolesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new User(\"test\", UserArgs.builder()\n            .firstName(\"TestAcc\")\n            .lastName(\"Smith\")\n            .login(\"testAcc-replace_with_uuid@example.com\")\n            .email(\"testAcc-replace_with_uuid@example.com\")\n            .build());\n\n        var testUserAdminRoles = new UserAdminRoles(\"testUserAdminRoles\", UserAdminRolesArgs.builder()\n            .userId(test.id())\n            .adminRoles(\"APP_ADMIN\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: okta:user:User\n    properties:\n      firstName: TestAcc\n      lastName: Smith\n      login: testAcc-replace_with_uuid@example.com\n      email: testAcc-replace_with_uuid@example.com\n  testUserAdminRoles:\n    type: okta:UserAdminRoles\n    name: test\n    properties:\n      userId: ${test.id}\n      adminRoles:\n        - APP_ADMIN\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/userAdminRoles:UserAdminRoles example \u003cuser_id\u003e\n```\n\n",
            "properties": {
                "adminRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta user admin roles, e.g. `['APP_ADMIN', 'USER_ADMIN']` See [API Docs](https://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles).\n"
                },
                "disableNotifications": {
                    "type": "boolean",
                    "description": "When this setting is enabled, the admins won't receive any of the default Okta administrator emails. These admins also won't have access to contact Okta Support and open support cases on behalf of your org.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of a Okta User\n"
                }
            },
            "required": [
                "adminRoles",
                "userId"
            ],
            "inputProperties": {
                "adminRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta user admin roles, e.g. `['APP_ADMIN', 'USER_ADMIN']` See [API Docs](https://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles).\n"
                },
                "disableNotifications": {
                    "type": "boolean",
                    "description": "When this setting is enabled, the admins won't receive any of the default Okta administrator emails. These admins also won't have access to contact Okta Support and open support cases on behalf of your org.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of a Okta User\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "adminRoles",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserAdminRoles resources.\n",
                "properties": {
                    "adminRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of Okta user admin roles, e.g. `['APP_ADMIN', 'USER_ADMIN']` See [API Docs](https://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles).\n"
                    },
                    "disableNotifications": {
                        "type": "boolean",
                        "description": "When this setting is enabled, the admins won't receive any of the default Okta administrator emails. These admins also won't have access to contact Okta Support and open support cases on behalf of your org.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of a Okta User\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/userBaseSchemaProperty:UserBaseSchemaProperty": {
            "description": "Manages a User Base Schema property. This resource allows you to configure a base user schema property.\n\n## IMPORTANT NOTE: \n\nBased on the [official documentation](https://developer.okta.com/docs/reference/api/schemas/#user-profile-base-subschema)\nbase properties can not be modified, except to update permissions, to change the nullability of `firstName` and \n`lastName` (`required` property) or to specify a `pattern` for `login`. Currently, `title` and `type` are required, so\nthey should be set to the current values of the base property. This will be fixed in the future releases, as this is \na breaking change.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.UserBaseSchemaProperty(\"example\", {\n    index: \"firstName\",\n    title: \"First name\",\n    type: \"string\",\n    required: true,\n    master: \"OKTA\",\n    userType: exampleOktaUserType.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.UserBaseSchemaProperty(\"example\",\n    index=\"firstName\",\n    title=\"First name\",\n    type=\"string\",\n    required=True,\n    master=\"OKTA\",\n    user_type=example_okta_user_type[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.UserBaseSchemaProperty(\"example\", new()\n    {\n        Index = \"firstName\",\n        Title = \"First name\",\n        Type = \"string\",\n        Required = true,\n        Master = \"OKTA\",\n        UserType = exampleOktaUserType.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewUserBaseSchemaProperty(ctx, \"example\", \u0026okta.UserBaseSchemaPropertyArgs{\n\t\t\tIndex:    pulumi.String(\"firstName\"),\n\t\t\tTitle:    pulumi.String(\"First name\"),\n\t\t\tType:     pulumi.String(\"string\"),\n\t\t\tRequired: pulumi.Bool(true),\n\t\t\tMaster:   pulumi.String(\"OKTA\"),\n\t\t\tUserType: pulumi.Any(exampleOktaUserType.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.UserBaseSchemaProperty;\nimport com.pulumi.okta.UserBaseSchemaPropertyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new UserBaseSchemaProperty(\"example\", UserBaseSchemaPropertyArgs.builder()\n            .index(\"firstName\")\n            .title(\"First name\")\n            .type(\"string\")\n            .required(true)\n            .master(\"OKTA\")\n            .userType(exampleOktaUserType.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:UserBaseSchemaProperty\n    properties:\n      index: firstName\n      title: First name\n      type: string\n      required: true\n      master: OKTA\n      userType: ${exampleOktaUserType.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n### User schema property of default user type can be imported via the property index.\n\n```sh\n$ pulumi import okta:index/userBaseSchemaProperty:UserBaseSchemaProperty example \u003cproperty_name\u003e\n```\n\n### User schema property of custom user type can be imported via user type id and property index\n\n```sh\n$ pulumi import okta:index/userBaseSchemaProperty:UserBaseSchemaProperty example \u003cuser_type_id\u003e.\u003cproperty name\u003e\n```\n\n",
            "properties": {
                "index": {
                    "type": "string",
                    "description": "Subschema unique string identifier\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `PROFILE_MASTER` or `OKTA`. Default: `PROFILE_MASTER`\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\\n\\n]+' if present.'\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the subschema is required\n"
                },
                "title": {
                    "type": "string",
                    "description": "Subschema title (display name)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID. By default, it is `default`\n"
                }
            },
            "required": [
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "index": {
                    "type": "string",
                    "description": "Subschema unique string identifier\n",
                    "willReplaceOnChanges": true
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `PROFILE_MASTER` or `OKTA`. Default: `PROFILE_MASTER`\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\\n\\n]+' if present.'\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the subschema is required\n"
                },
                "title": {
                    "type": "string",
                    "description": "Subschema title (display name)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`\n",
                    "willReplaceOnChanges": true
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID. By default, it is `default`\n"
                }
            },
            "requiredInputs": [
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserBaseSchemaProperty resources.\n",
                "properties": {
                    "index": {
                        "type": "string",
                        "description": "Subschema unique string identifier\n",
                        "willReplaceOnChanges": true
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the user schema property. It can be set to `PROFILE_MASTER` or `OKTA`. Default: `PROFILE_MASTER`\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\\n\\n]+' if present.'\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the subschema is required\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Subschema title (display name)\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`\n",
                        "willReplaceOnChanges": true
                    },
                    "userType": {
                        "type": "string",
                        "description": "User type ID. By default, it is `default`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:index/userFactorQuestion:UserFactorQuestion": {
            "description": "Creates security question factor for a user. This resource allows you to create and configure security question factor for a user.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleUser = new okta.user.User(\"example\", {\n    firstName: \"John\",\n    lastName: \"Smith\",\n    login: \"john.smith@example.com\",\n    email: \"john.smith@example.com\",\n});\nconst example = okta.getUserSecurityQuestionsOutput({\n    userId: exampleUser.id,\n});\nconst exampleFactor = new okta.factor.Factor(\"example\", {\n    providerId: \"okta_question\",\n    active: true,\n});\nconst exampleUserFactorQuestion = new okta.UserFactorQuestion(\"example\", {\n    userId: exampleUser.id,\n    key: example.apply(example =\u003e example.questions?.[0]?.key),\n    answer: \"meatball\",\n}, {\n    dependsOn: [exampleFactor],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_user = okta.user.User(\"example\",\n    first_name=\"John\",\n    last_name=\"Smith\",\n    login=\"john.smith@example.com\",\n    email=\"john.smith@example.com\")\nexample = okta.get_user_security_questions_output(user_id=example_user.id)\nexample_factor = okta.factor.Factor(\"example\",\n    provider_id=\"okta_question\",\n    active=True)\nexample_user_factor_question = okta.UserFactorQuestion(\"example\",\n    user_id=example_user.id,\n    key=example.questions[0].key,\n    answer=\"meatball\",\n    opts = pulumi.ResourceOptions(depends_on=[example_factor]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleUser = new Okta.User.User(\"example\", new()\n    {\n        FirstName = \"John\",\n        LastName = \"Smith\",\n        Login = \"john.smith@example.com\",\n        Email = \"john.smith@example.com\",\n    });\n\n    var example = Okta.GetUserSecurityQuestions.Invoke(new()\n    {\n        UserId = exampleUser.Id,\n    });\n\n    var exampleFactor = new Okta.Factor.Factor(\"example\", new()\n    {\n        ProviderId = \"okta_question\",\n        Active = true,\n    });\n\n    var exampleUserFactorQuestion = new Okta.UserFactorQuestion(\"example\", new()\n    {\n        UserId = exampleUser.Id,\n        Key = example.Apply(getUserSecurityQuestionsResult =\u003e getUserSecurityQuestionsResult.Questions[0]?.Key),\n        Answer = \"meatball\",\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            exampleFactor,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/factor\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleUser, err := user.NewUser(ctx, \"example\", \u0026user.UserArgs{\n\t\t\tFirstName: pulumi.String(\"John\"),\n\t\t\tLastName:  pulumi.String(\"Smith\"),\n\t\t\tLogin:     pulumi.String(\"john.smith@example.com\"),\n\t\t\tEmail:     pulumi.String(\"john.smith@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texample := okta.GetUserSecurityQuestionsOutput(ctx, okta.GetUserSecurityQuestionsOutputArgs{\n\t\t\tUserId: exampleUser.ID(),\n\t\t}, nil)\n\t\texampleFactor, err := factor.NewFactor(ctx, \"example\", \u0026factor.FactorArgs{\n\t\t\tProviderId: pulumi.String(\"okta_question\"),\n\t\t\tActive:     pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewUserFactorQuestion(ctx, \"example\", \u0026okta.UserFactorQuestionArgs{\n\t\t\tUserId: exampleUser.ID(),\n\t\t\tKey: pulumi.String(example.ApplyT(func(example okta.GetUserSecurityQuestionsResult) (*string, error) {\n\t\t\t\treturn \u0026example.Questions[0].Key, nil\n\t\t\t}).(pulumi.StringPtrOutput)),\n\t\t\tAnswer: pulumi.String(\"meatball\"),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\texampleFactor,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.User;\nimport com.pulumi.okta.user.UserArgs;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetUserSecurityQuestionsArgs;\nimport com.pulumi.okta.factor.Factor;\nimport com.pulumi.okta.factor.FactorArgs;\nimport com.pulumi.okta.UserFactorQuestion;\nimport com.pulumi.okta.UserFactorQuestionArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleUser = new User(\"exampleUser\", UserArgs.builder()\n            .firstName(\"John\")\n            .lastName(\"Smith\")\n            .login(\"john.smith@example.com\")\n            .email(\"john.smith@example.com\")\n            .build());\n\n        final var example = OktaFunctions.getUserSecurityQuestions(GetUserSecurityQuestionsArgs.builder()\n            .userId(exampleUser.id())\n            .build());\n\n        var exampleFactor = new Factor(\"exampleFactor\", FactorArgs.builder()\n            .providerId(\"okta_question\")\n            .active(true)\n            .build());\n\n        var exampleUserFactorQuestion = new UserFactorQuestion(\"exampleUserFactorQuestion\", UserFactorQuestionArgs.builder()\n            .userId(exampleUser.id())\n            .key(example.applyValue(_example -\u003e _example.questions()[0].key()))\n            .answer(\"meatball\")\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(exampleFactor)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleUser:\n    type: okta:user:User\n    name: example\n    properties:\n      firstName: John\n      lastName: Smith\n      login: john.smith@example.com\n      email: john.smith@example.com\n  exampleFactor:\n    type: okta:factor:Factor\n    name: example\n    properties:\n      providerId: okta_question\n      active: true\n  exampleUserFactorQuestion:\n    type: okta:UserFactorQuestion\n    name: example\n    properties:\n      userId: ${exampleUser.id}\n      key: ${example.questions[0].key}\n      answer: meatball\n    options:\n      dependsOn:\n        - ${exampleFactor}\nvariables:\n  example:\n    fn::invoke:\n      function: okta:getUserSecurityQuestions\n      arguments:\n        userId: ${exampleUser.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/userFactorQuestion:UserFactorQuestion example \u003cuser_id\u003e/\u003cquestion_factor_id\u003e\n```\n\n",
            "properties": {
                "answer": {
                    "type": "string",
                    "description": "Security question answer. Note here that answer won't be set during the resource import.\n",
                    "secret": true
                },
                "key": {
                    "type": "string",
                    "description": "Security question unique key.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the security question factor.\n"
                },
                "text": {
                    "type": "string",
                    "description": "Display text for security question.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user. Resource will be recreated when `user_id` changes.\n"
                }
            },
            "required": [
                "answer",
                "key",
                "status",
                "text",
                "userId"
            ],
            "inputProperties": {
                "answer": {
                    "type": "string",
                    "description": "Security question answer. Note here that answer won't be set during the resource import.\n",
                    "secret": true
                },
                "key": {
                    "type": "string",
                    "description": "Security question unique key.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user. Resource will be recreated when `user_id` changes.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "answer",
                "key",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserFactorQuestion resources.\n",
                "properties": {
                    "answer": {
                        "type": "string",
                        "description": "Security question answer. Note here that answer won't be set during the resource import.\n",
                        "secret": true
                    },
                    "key": {
                        "type": "string",
                        "description": "Security question unique key.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the security question factor.\n"
                    },
                    "text": {
                        "type": "string",
                        "description": "Display text for security question.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of the user. Resource will be recreated when `user_id` changes.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/userGroupMemberships:UserGroupMemberships": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.user.User(\"test\", {\n    firstName: \"TestAcc\",\n    lastName: \"Smith\",\n    login: \"testAcc-replace_with_uuid@example.com\",\n    email: \"testAcc-replace_with_uuid@example.com\",\n});\nconst testUserGroupMemberships = new okta.UserGroupMemberships(\"test\", {\n    userId: test.id,\n    groups: [\n        test1.id,\n        test2.id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.user.User(\"test\",\n    first_name=\"TestAcc\",\n    last_name=\"Smith\",\n    login=\"testAcc-replace_with_uuid@example.com\",\n    email=\"testAcc-replace_with_uuid@example.com\")\ntest_user_group_memberships = okta.UserGroupMemberships(\"test\",\n    user_id=test.id,\n    groups=[\n        test1[\"id\"],\n        test2[\"id\"],\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Okta.User.User(\"test\", new()\n    {\n        FirstName = \"TestAcc\",\n        LastName = \"Smith\",\n        Login = \"testAcc-replace_with_uuid@example.com\",\n        Email = \"testAcc-replace_with_uuid@example.com\",\n    });\n\n    var testUserGroupMemberships = new Okta.UserGroupMemberships(\"test\", new()\n    {\n        UserId = test.Id,\n        Groups = new[]\n        {\n            test1.Id,\n            test2.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := user.NewUser(ctx, \"test\", \u0026user.UserArgs{\n\t\t\tFirstName: pulumi.String(\"TestAcc\"),\n\t\t\tLastName:  pulumi.String(\"Smith\"),\n\t\t\tLogin:     pulumi.String(\"testAcc-replace_with_uuid@example.com\"),\n\t\t\tEmail:     pulumi.String(\"testAcc-replace_with_uuid@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.NewUserGroupMemberships(ctx, \"test\", \u0026okta.UserGroupMembershipsArgs{\n\t\t\tUserId: test.ID(),\n\t\t\tGroups: pulumi.StringArray{\n\t\t\t\ttest1.Id,\n\t\t\t\ttest2.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.User;\nimport com.pulumi.okta.user.UserArgs;\nimport com.pulumi.okta.UserGroupMemberships;\nimport com.pulumi.okta.UserGroupMembershipsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new User(\"test\", UserArgs.builder()\n            .firstName(\"TestAcc\")\n            .lastName(\"Smith\")\n            .login(\"testAcc-replace_with_uuid@example.com\")\n            .email(\"testAcc-replace_with_uuid@example.com\")\n            .build());\n\n        var testUserGroupMemberships = new UserGroupMemberships(\"testUserGroupMemberships\", UserGroupMembershipsArgs.builder()\n            .userId(test.id())\n            .groups(            \n                test1.id(),\n                test2.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: okta:user:User\n    properties:\n      firstName: TestAcc\n      lastName: Smith\n      login: testAcc-replace_with_uuid@example.com\n      email: testAcc-replace_with_uuid@example.com\n  testUserGroupMemberships:\n    type: okta:UserGroupMemberships\n    name: test\n    properties:\n      userId: ${test.id}\n      groups:\n        - ${test1.id}\n        - ${test2.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta group IDs which the user should have membership managed for.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of a Okta User\n"
                }
            },
            "required": [
                "groups",
                "userId"
            ],
            "inputProperties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Okta group IDs which the user should have membership managed for.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of a Okta User\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "groups",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserGroupMemberships resources.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of Okta group IDs which the user should have membership managed for.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of a Okta User\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "okta:index/userSchemaProperty:UserSchemaProperty": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.UserSchemaProperty(\"example\", {\n    index: \"customPropertyName\",\n    title: \"customPropertyName\",\n    type: \"string\",\n    description: \"My custom property name\",\n    master: \"OKTA\",\n    scope: \"SELF\",\n    userType: exampleOktaUserType.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.UserSchemaProperty(\"example\",\n    index=\"customPropertyName\",\n    title=\"customPropertyName\",\n    type=\"string\",\n    description=\"My custom property name\",\n    master=\"OKTA\",\n    scope=\"SELF\",\n    user_type=example_okta_user_type[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.UserSchemaProperty(\"example\", new()\n    {\n        Index = \"customPropertyName\",\n        Title = \"customPropertyName\",\n        Type = \"string\",\n        Description = \"My custom property name\",\n        Master = \"OKTA\",\n        Scope = \"SELF\",\n        UserType = exampleOktaUserType.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.NewUserSchemaProperty(ctx, \"example\", \u0026okta.UserSchemaPropertyArgs{\n\t\t\tIndex:       pulumi.String(\"customPropertyName\"),\n\t\t\tTitle:       pulumi.String(\"customPropertyName\"),\n\t\t\tType:        pulumi.String(\"string\"),\n\t\t\tDescription: pulumi.String(\"My custom property name\"),\n\t\t\tMaster:      pulumi.String(\"OKTA\"),\n\t\t\tScope:       pulumi.String(\"SELF\"),\n\t\t\tUserType:    pulumi.Any(exampleOktaUserType.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.UserSchemaProperty;\nimport com.pulumi.okta.UserSchemaPropertyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new UserSchemaProperty(\"example\", UserSchemaPropertyArgs.builder()\n            .index(\"customPropertyName\")\n            .title(\"customPropertyName\")\n            .type(\"string\")\n            .description(\"My custom property name\")\n            .master(\"OKTA\")\n            .scope(\"SELF\")\n            .userType(exampleOktaUserType.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:UserSchemaProperty\n    properties:\n      index: customPropertyName\n      title: customPropertyName\n      type: string\n      description: My custom property name\n      master: OKTA\n      scope: SELF\n      userType: ${exampleOktaUserType.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:index/userSchemaProperty:UserSchemaProperty example \u003cvariableName\u003e\n```\n\n```sh\n$ pulumi import okta:index/userSchemaProperty:UserSchemaProperty example \u003cuser_type_id\u003e.\u003cindex\u003e\n```\n\n",
            "properties": {
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyArrayOneOf:UserSchemaPropertyArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to. - 'const' - (Required) value mapping to member of 'enum'. - 'title'\n- (Required) display name for the enum value.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `array`\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n"
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External namespace of the user schema property.\n"
                },
                "index": {
                    "type": "string",
                    "description": "Subschema unique string identifier\n"
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `PROFILE_MASTER`, `OVERRIDE` or `OKTA`.\n"
                },
                "masterOverridePriorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyMasterOverridePriority:UserSchemaPropertyMasterOverridePriority"
                    },
                    "description": "Prioritized list of profile sources (required when 'master' is 'OVERRIDE'). - 'type' - (Optional) - Type of profile\nsource. - 'value' - (Required) - ID of profile source.\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `string`\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `string`\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyOneOf:UserSchemaPropertyOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value. - 'const' - (Required) value mapping to member of\n'enum'. - 'title' - (Required) display name for the enum value.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the subschema is required\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Individual or Group Level. Default: `NONE`\n"
                },
                "title": {
                    "type": "string",
                    "description": "Subschema title (display name)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`\n"
                },
                "unique": {
                    "type": "string",
                    "description": "Whether the property should be unique. It can be set to `UNIQUE_VALIDATED` or `NOT_UNIQUE`.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID. By default, it is `default`\n"
                }
            },
            "required": [
                "index",
                "title",
                "type"
            ],
            "inputProperties": {
                "arrayEnums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values that an array property's items can be set to.\n"
                },
                "arrayOneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyArrayOneOf:UserSchemaPropertyArrayOneOf"
                    },
                    "description": "Display name and value an enum array can be set to. - 'const' - (Required) value mapping to member of 'enum'. - 'title'\n- (Required) display name for the enum value.\n"
                },
                "arrayType": {
                    "type": "string",
                    "description": "The type of the array elements if `type` is set to `array`\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user schema property.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                },
                "externalName": {
                    "type": "string",
                    "description": "External name of the user schema property.\n",
                    "willReplaceOnChanges": true
                },
                "externalNamespace": {
                    "type": "string",
                    "description": "External namespace of the user schema property.\n",
                    "willReplaceOnChanges": true
                },
                "index": {
                    "type": "string",
                    "description": "Subschema unique string identifier\n",
                    "willReplaceOnChanges": true
                },
                "master": {
                    "type": "string",
                    "description": "Master priority for the user schema property. It can be set to `PROFILE_MASTER`, `OVERRIDE` or `OKTA`.\n"
                },
                "masterOverridePriorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyMasterOverridePriority:UserSchemaPropertyMasterOverridePriority"
                    },
                    "description": "Prioritized list of profile sources (required when 'master' is 'OVERRIDE'). - 'type' - (Optional) - Type of profile\nsource. - 'value' - (Required) - ID of profile source.\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of the user property value. Only applies to type `string`\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the user property value. Only applies to type `string`\n"
                },
                "oneOfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:index/UserSchemaPropertyOneOf:UserSchemaPropertyOneOf"
                    },
                    "description": "Array of maps containing a mapping for display name to enum value. - 'const' - (Required) value mapping to member of\n'enum'. - 'title' - (Required) display name for the enum value.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                },
                "permissions": {
                    "type": "string",
                    "description": "Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the subschema is required\n"
                },
                "scope": {
                    "type": "string",
                    "description": "determines whether an app user attribute can be set at the Individual or Group Level. Default: `NONE`\n"
                },
                "title": {
                    "type": "string",
                    "description": "Subschema title (display name)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`\n",
                    "willReplaceOnChanges": true
                },
                "unique": {
                    "type": "string",
                    "description": "Whether the property should be unique. It can be set to `UNIQUE_VALIDATED` or `NOT_UNIQUE`.\n",
                    "willReplaceOnChanges": true
                },
                "userType": {
                    "type": "string",
                    "description": "User type ID. By default, it is `default`\n"
                }
            },
            "requiredInputs": [
                "index",
                "title",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserSchemaProperty resources.\n",
                "properties": {
                    "arrayEnums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values that an array property's items can be set to.\n"
                    },
                    "arrayOneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/UserSchemaPropertyArrayOneOf:UserSchemaPropertyArrayOneOf"
                        },
                        "description": "Display name and value an enum array can be set to. - 'const' - (Required) value mapping to member of 'enum'. - 'title'\n- (Required) display name for the enum value.\n"
                    },
                    "arrayType": {
                        "type": "string",
                        "description": "The type of the array elements if `type` is set to `array`\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the user schema property.\n"
                    },
                    "enums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values a primitive property can be set to. See `array_enum` for arrays.\n"
                    },
                    "externalName": {
                        "type": "string",
                        "description": "External name of the user schema property.\n",
                        "willReplaceOnChanges": true
                    },
                    "externalNamespace": {
                        "type": "string",
                        "description": "External namespace of the user schema property.\n",
                        "willReplaceOnChanges": true
                    },
                    "index": {
                        "type": "string",
                        "description": "Subschema unique string identifier\n",
                        "willReplaceOnChanges": true
                    },
                    "master": {
                        "type": "string",
                        "description": "Master priority for the user schema property. It can be set to `PROFILE_MASTER`, `OVERRIDE` or `OKTA`.\n"
                    },
                    "masterOverridePriorities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/UserSchemaPropertyMasterOverridePriority:UserSchemaPropertyMasterOverridePriority"
                        },
                        "description": "Prioritized list of profile sources (required when 'master' is 'OVERRIDE'). - 'type' - (Optional) - Type of profile\nsource. - 'value' - (Required) - ID of profile source.\n"
                    },
                    "maxLength": {
                        "type": "integer",
                        "description": "The maximum length of the user property value. Only applies to type `string`\n"
                    },
                    "minLength": {
                        "type": "integer",
                        "description": "The minimum length of the user property value. Only applies to type `string`\n"
                    },
                    "oneOfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:index/UserSchemaPropertyOneOf:UserSchemaPropertyOneOf"
                        },
                        "description": "Array of maps containing a mapping for display name to enum value. - 'const' - (Required) value mapping to member of\n'enum'. - 'title' - (Required) display name for the enum value.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[\u003cpattern\u003e]+' if present.'\n"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the subschema is required\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "determines whether an app user attribute can be set at the Individual or Group Level. Default: `NONE`\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Subschema title (display name)\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`\n",
                        "willReplaceOnChanges": true
                    },
                    "unique": {
                        "type": "string",
                        "description": "Whether the property should be unique. It can be set to `UNIQUE_VALIDATED` or `NOT_UNIQUE`.\n",
                        "willReplaceOnChanges": true
                    },
                    "userType": {
                        "type": "string",
                        "description": "User type ID. By default, it is `default`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:inline/hook:Hook": {
            "description": "Creates an inline hook. This resource allows you to create and configure an inline hook.\n\n## Example Usage\n\n### HTTP Auth\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.inline.Hook(\"example\", {\n    name: \"example\",\n    version: \"1.0.0\",\n    type: \"com.okta.oauth2.tokens.transform\",\n    channel: {\n        version: \"1.0.0\",\n        uri: \"https://example.com/test\",\n        method: \"POST\",\n    },\n    auth: {\n        key: \"Authorization\",\n        type: \"HEADER\",\n        value: \"secret\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.inline.Hook(\"example\",\n    name=\"example\",\n    version=\"1.0.0\",\n    type=\"com.okta.oauth2.tokens.transform\",\n    channel={\n        \"version\": \"1.0.0\",\n        \"uri\": \"https://example.com/test\",\n        \"method\": \"POST\",\n    },\n    auth={\n        \"key\": \"Authorization\",\n        \"type\": \"HEADER\",\n        \"value\": \"secret\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Inline.Hook(\"example\", new()\n    {\n        Name = \"example\",\n        Version = \"1.0.0\",\n        Type = \"com.okta.oauth2.tokens.transform\",\n        Channel = \n        {\n            { \"version\", \"1.0.0\" },\n            { \"uri\", \"https://example.com/test\" },\n            { \"method\", \"POST\" },\n        },\n        Auth = \n        {\n            { \"key\", \"Authorization\" },\n            { \"type\", \"HEADER\" },\n            { \"value\", \"secret\" },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/inline\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := inline.NewHook(ctx, \"example\", \u0026inline.HookArgs{\n\t\t\tName:    pulumi.String(\"example\"),\n\t\t\tVersion: pulumi.String(\"1.0.0\"),\n\t\t\tType:    pulumi.String(\"com.okta.oauth2.tokens.transform\"),\n\t\t\tChannel: pulumi.StringMap{\n\t\t\t\t\"version\": pulumi.String(\"1.0.0\"),\n\t\t\t\t\"uri\":     pulumi.String(\"https://example.com/test\"),\n\t\t\t\t\"method\":  pulumi.String(\"POST\"),\n\t\t\t},\n\t\t\tAuth: pulumi.StringMap{\n\t\t\t\t\"key\":   pulumi.String(\"Authorization\"),\n\t\t\t\t\"type\":  pulumi.String(\"HEADER\"),\n\t\t\t\t\"value\": pulumi.String(\"secret\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.inline.Hook;\nimport com.pulumi.okta.inline.HookArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Hook(\"example\", HookArgs.builder()\n            .name(\"example\")\n            .version(\"1.0.0\")\n            .type(\"com.okta.oauth2.tokens.transform\")\n            .channel(Map.ofEntries(\n                Map.entry(\"version\", \"1.0.0\"),\n                Map.entry(\"uri\", \"https://example.com/test\"),\n                Map.entry(\"method\", \"POST\")\n            ))\n            .auth(Map.ofEntries(\n                Map.entry(\"key\", \"Authorization\"),\n                Map.entry(\"type\", \"HEADER\"),\n                Map.entry(\"value\", \"secret\")\n            ))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:inline:Hook\n    properties:\n      name: example\n      version: 1.0.0\n      type: com.okta.oauth2.tokens.transform\n      channel:\n        version: 1.0.0\n        uri: https://example.com/test\n        method: POST\n      auth:\n        key: Authorization\n        type: HEADER\n        value: secret\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### OAuth2.0 Auth\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.inline.Hook(\"example\", {\n    name: \"example\",\n    version: \"1.0.0\",\n    type: \"com.okta.saml.tokens.transform\",\n    status: \"ACTIVE\",\n    channelJson: `{\n        \"type\": \"OAUTH\",\n        \"version\": \"1.0.0\",\n        \"config\": {\n            \"headers\": [\n                {\n                    \"key\": \"Field 1\",\n                    \"value\": \"Value 1\"\n                },\n                {\n                    \"key\": \"Field 2\",\n                    \"value\": \"Value 2\"\n                }\n            ],\n            \"method\": \"POST\",\n            \"authType\": \"client_secret_post\",\n            \"uri\": \"https://example.com/service\",\n            \"clientId\": \"abc123\",\n            \"clientSecret\": \"fake-secret\",\n            \"tokenUrl\": \"https://example.com/token\",\n            \"scope\": \"api\"\n        }\n}\n`,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.inline.Hook(\"example\",\n    name=\"example\",\n    version=\"1.0.0\",\n    type=\"com.okta.saml.tokens.transform\",\n    status=\"ACTIVE\",\n    channel_json=\"\"\"{\n        \"type\": \"OAUTH\",\n        \"version\": \"1.0.0\",\n        \"config\": {\n            \"headers\": [\n                {\n                    \"key\": \"Field 1\",\n                    \"value\": \"Value 1\"\n                },\n                {\n                    \"key\": \"Field 2\",\n                    \"value\": \"Value 2\"\n                }\n            ],\n            \"method\": \"POST\",\n            \"authType\": \"client_secret_post\",\n            \"uri\": \"https://example.com/service\",\n            \"clientId\": \"abc123\",\n            \"clientSecret\": \"fake-secret\",\n            \"tokenUrl\": \"https://example.com/token\",\n            \"scope\": \"api\"\n        }\n}\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Inline.Hook(\"example\", new()\n    {\n        Name = \"example\",\n        Version = \"1.0.0\",\n        Type = \"com.okta.saml.tokens.transform\",\n        Status = \"ACTIVE\",\n        ChannelJson = @\"{\n        \"\"type\"\": \"\"OAUTH\"\",\n        \"\"version\"\": \"\"1.0.0\"\",\n        \"\"config\"\": {\n            \"\"headers\"\": [\n                {\n                    \"\"key\"\": \"\"Field 1\"\",\n                    \"\"value\"\": \"\"Value 1\"\"\n                },\n                {\n                    \"\"key\"\": \"\"Field 2\"\",\n                    \"\"value\"\": \"\"Value 2\"\"\n                }\n            ],\n            \"\"method\"\": \"\"POST\"\",\n            \"\"authType\"\": \"\"client_secret_post\"\",\n            \"\"uri\"\": \"\"https://example.com/service\"\",\n            \"\"clientId\"\": \"\"abc123\"\",\n            \"\"clientSecret\"\": \"\"fake-secret\"\",\n            \"\"tokenUrl\"\": \"\"https://example.com/token\"\",\n            \"\"scope\"\": \"\"api\"\"\n        }\n}\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/inline\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := inline.NewHook(ctx, \"example\", \u0026inline.HookArgs{\n\t\t\tName:    pulumi.String(\"example\"),\n\t\t\tVersion: pulumi.String(\"1.0.0\"),\n\t\t\tType:    pulumi.String(\"com.okta.saml.tokens.transform\"),\n\t\t\tStatus:  pulumi.String(\"ACTIVE\"),\n\t\t\tChannelJson: pulumi.String(`{\n        \"type\": \"OAUTH\",\n        \"version\": \"1.0.0\",\n        \"config\": {\n            \"headers\": [\n                {\n                    \"key\": \"Field 1\",\n                    \"value\": \"Value 1\"\n                },\n                {\n                    \"key\": \"Field 2\",\n                    \"value\": \"Value 2\"\n                }\n            ],\n            \"method\": \"POST\",\n            \"authType\": \"client_secret_post\",\n            \"uri\": \"https://example.com/service\",\n            \"clientId\": \"abc123\",\n            \"clientSecret\": \"fake-secret\",\n            \"tokenUrl\": \"https://example.com/token\",\n            \"scope\": \"api\"\n        }\n}\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.inline.Hook;\nimport com.pulumi.okta.inline.HookArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Hook(\"example\", HookArgs.builder()\n            .name(\"example\")\n            .version(\"1.0.0\")\n            .type(\"com.okta.saml.tokens.transform\")\n            .status(\"ACTIVE\")\n            .channelJson(\"\"\"\n{\n        \"type\": \"OAUTH\",\n        \"version\": \"1.0.0\",\n        \"config\": {\n            \"headers\": [\n                {\n                    \"key\": \"Field 1\",\n                    \"value\": \"Value 1\"\n                },\n                {\n                    \"key\": \"Field 2\",\n                    \"value\": \"Value 2\"\n                }\n            ],\n            \"method\": \"POST\",\n            \"authType\": \"client_secret_post\",\n            \"uri\": \"https://example.com/service\",\n            \"clientId\": \"abc123\",\n            \"clientSecret\": \"fake-secret\",\n            \"tokenUrl\": \"https://example.com/token\",\n            \"scope\": \"api\"\n        }\n}\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:inline:Hook\n    properties:\n      name: example\n      version: 1.0.0\n      type: com.okta.saml.tokens.transform\n      status: ACTIVE\n      channelJson: |\n        {\n                \"type\": \"OAUTH\",\n                \"version\": \"1.0.0\",\n                \"config\": {\n                    \"headers\": [\n                        {\n                            \"key\": \"Field 1\",\n                            \"value\": \"Value 1\"\n                        },\n                        {\n                            \"key\": \"Field 2\",\n                            \"value\": \"Value 2\"\n                        }\n                    ],\n                    \"method\": \"POST\",\n                    \"authType\": \"client_secret_post\",\n                    \"uri\": \"https://example.com/service\",\n                    \"clientId\": \"abc123\",\n                    \"clientSecret\": \"fake-secret\",\n                    \"tokenUrl\": \"https://example.com/token\",\n                    \"scope\": \"api\"\n                }\n        }\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:inline/hook:Hook example \u003chook_id\u003e\n```\n\n",
            "properties": {
                "auth": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "channelJson": {
                    "type": "string",
                    "description": "true channel object for the inline hook API contract\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:inline/HookHeader:HookHeader"
                    },
                    "description": "Map of headers to send along in inline hook request.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The inline hook display name.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of hook to create. [See here for supported types](https://developer.okta.com/docs/reference/api/inline-hooks/#supported-inline-hook-types).\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the hook. The currently-supported version is `1.0.0`.\n"
                }
            },
            "required": [
                "name",
                "type",
                "version"
            ],
            "inputProperties": {
                "auth": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "channelJson": {
                    "type": "string",
                    "description": "true channel object for the inline hook API contract\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:inline/HookHeader:HookHeader"
                    },
                    "description": "Map of headers to send along in inline hook request.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The inline hook display name.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Default to `ACTIVE`\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of hook to create. [See here for supported types](https://developer.okta.com/docs/reference/api/inline-hooks/#supported-inline-hook-types).\n",
                    "willReplaceOnChanges": true
                },
                "version": {
                    "type": "string",
                    "description": "The version of the hook. The currently-supported version is `1.0.0`.\n"
                }
            },
            "requiredInputs": [
                "type",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Hook resources.\n",
                "properties": {
                    "auth": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "channel": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "channelJson": {
                        "type": "string",
                        "description": "true channel object for the inline hook API contract\n"
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:inline/HookHeader:HookHeader"
                        },
                        "description": "Map of headers to send along in inline hook request.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The inline hook display name.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default to `ACTIVE`\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of hook to create. [See here for supported types](https://developer.okta.com/docs/reference/api/inline-hooks/#supported-inline-hook-types).\n",
                        "willReplaceOnChanges": true
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the hook. The currently-supported version is `1.0.0`.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:network/zone:Zone": {
            "description": "Creates an Okta Network Zone. This resource allows you to create and configure an Okta Network Zone.\n\n## Import\n\n```sh\n$ pulumi import okta:network/zone:Zone example \u003czone_id\u003e\n```\n\n",
            "properties": {
                "asns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of asns included. Format of each array value: a string representation of an ASN numeric value. Use with type `DYNAMIC` or `DYNAMIC_V2`\n"
                },
                "dynamicLocations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of locations ISO-3166-1(2) included. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC` or `DYNAMIC_V2`\n"
                },
                "dynamicLocationsExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of locations ISO-3166-1(2) excluded. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC_V2`\n"
                },
                "dynamicProxyType": {
                    "type": "string",
                    "description": "Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or `NotTorAnonymizer`. Use with type `DYNAMIC`\n"
                },
                "gateways": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples. Use with type `IP`\n"
                },
                "ipServiceCategoriesExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of ip service excluded. Use with type `DYNAMIC_V2`\n"
                },
                "ipServiceCategoriesIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of ip service included. Use with type `DYNAMIC_V2`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Network Zone Resource\n"
                },
                "proxies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples. Can not be set if `usage` is set to `BLOCKLIST`. Use with type `IP`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Network Status - can either be `ACTIVE` or `INACTIVE` only\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the Network Zone - can be `IP`, `DYNAMIC` or `DYNAMIC_V2` only\n"
                },
                "usage": {
                    "type": "string",
                    "description": "Usage of the Network Zone - can be either `POLICY` or `BLOCKLIST`. By default, it is `POLICY`\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "asns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of asns included. Format of each array value: a string representation of an ASN numeric value. Use with type `DYNAMIC` or `DYNAMIC_V2`\n"
                },
                "dynamicLocations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of locations ISO-3166-1(2) included. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC` or `DYNAMIC_V2`\n"
                },
                "dynamicLocationsExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of locations ISO-3166-1(2) excluded. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC_V2`\n"
                },
                "dynamicProxyType": {
                    "type": "string",
                    "description": "Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or `NotTorAnonymizer`. Use with type `DYNAMIC`\n"
                },
                "gateways": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples. Use with type `IP`\n"
                },
                "ipServiceCategoriesExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of ip service excluded. Use with type `DYNAMIC_V2`\n"
                },
                "ipServiceCategoriesIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of ip service included. Use with type `DYNAMIC_V2`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Network Zone Resource\n"
                },
                "proxies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples. Can not be set if `usage` is set to `BLOCKLIST`. Use with type `IP`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Network Status - can either be `ACTIVE` or `INACTIVE` only\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the Network Zone - can be `IP`, `DYNAMIC` or `DYNAMIC_V2` only\n"
                },
                "usage": {
                    "type": "string",
                    "description": "Usage of the Network Zone - can be either `POLICY` or `BLOCKLIST`. By default, it is `POLICY`\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Zone resources.\n",
                "properties": {
                    "asns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of asns included. Format of each array value: a string representation of an ASN numeric value. Use with type `DYNAMIC` or `DYNAMIC_V2`\n"
                    },
                    "dynamicLocations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of locations ISO-3166-1(2) included. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC` or `DYNAMIC_V2`\n"
                    },
                    "dynamicLocationsExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of locations ISO-3166-1(2) excluded. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC_V2`\n"
                    },
                    "dynamicProxyType": {
                        "type": "string",
                        "description": "Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or `NotTorAnonymizer`. Use with type `DYNAMIC`\n"
                    },
                    "gateways": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples. Use with type `IP`\n"
                    },
                    "ipServiceCategoriesExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ip service excluded. Use with type `DYNAMIC_V2`\n"
                    },
                    "ipServiceCategoriesIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ip service included. Use with type `DYNAMIC_V2`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Network Zone Resource\n"
                    },
                    "proxies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples. Can not be set if `usage` is set to `BLOCKLIST`. Use with type `IP`\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Network Status - can either be `ACTIVE` or `INACTIVE` only\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the Network Zone - can be `IP`, `DYNAMIC` or `DYNAMIC_V2` only\n"
                    },
                    "usage": {
                        "type": "string",
                        "description": "Usage of the Network Zone - can be either `POLICY` or `BLOCKLIST`. By default, it is `POLICY`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/deviceAssuranceAndroid:DeviceAssuranceAndroid": {
            "description": "Manages a device assurance policy for android.\n\n## Import\n\n```sh\n$ pulumi import okta:policy/deviceAssuranceAndroid:DeviceAssuranceAndroid example \u003cdevice_assurance_id\u003e\n```\n\n",
            "properties": {
                "createdBy": {
                    "type": "string",
                    "description": "Created by\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "Created date\n"
                },
                "diskEncryptionTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of disk encryption type, can be `FULL`, `USER`\n"
                },
                "jailbreak": {
                    "type": "boolean",
                    "description": "Is the device jailbroken in the device assurance policy.\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update\n"
                },
                "lastUpdatedBy": {
                    "type": "string",
                    "description": "Last updated by\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy device assurance name\n"
                },
                "osVersion": {
                    "type": "string",
                    "description": "Minimum os version of the device in the device assurance policy.\n"
                },
                "platform": {
                    "type": "string",
                    "description": "Policy device assurance platform\n"
                },
                "screenlockTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`\n"
                },
                "secureHardwarePresent": {
                    "type": "boolean",
                    "description": "Indicates if the device contains a secure hardware functionality\n"
                }
            },
            "required": [
                "createdBy",
                "createdDate",
                "lastUpdate",
                "lastUpdatedBy",
                "name",
                "platform"
            ],
            "inputProperties": {
                "diskEncryptionTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of disk encryption type, can be `FULL`, `USER`\n"
                },
                "jailbreak": {
                    "type": "boolean",
                    "description": "Is the device jailbroken in the device assurance policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy device assurance name\n"
                },
                "osVersion": {
                    "type": "string",
                    "description": "Minimum os version of the device in the device assurance policy.\n"
                },
                "screenlockTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`\n"
                },
                "secureHardwarePresent": {
                    "type": "boolean",
                    "description": "Indicates if the device contains a secure hardware functionality\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeviceAssuranceAndroid resources.\n",
                "properties": {
                    "createdBy": {
                        "type": "string",
                        "description": "Created by\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "Created date\n"
                    },
                    "diskEncryptionTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of disk encryption type, can be `FULL`, `USER`\n"
                    },
                    "jailbreak": {
                        "type": "boolean",
                        "description": "Is the device jailbroken in the device assurance policy.\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update\n"
                    },
                    "lastUpdatedBy": {
                        "type": "string",
                        "description": "Last updated by\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy device assurance name\n"
                    },
                    "osVersion": {
                        "type": "string",
                        "description": "Minimum os version of the device in the device assurance policy.\n"
                    },
                    "platform": {
                        "type": "string",
                        "description": "Policy device assurance platform\n"
                    },
                    "screenlockTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`\n"
                    },
                    "secureHardwarePresent": {
                        "type": "boolean",
                        "description": "Indicates if the device contains a secure hardware functionality\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/deviceAssuranceChromeos:DeviceAssuranceChromeos": {
            "description": "Manages a device assurance policy for chromeos.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.policy.DeviceAssuranceChromeos(\"example\", {\n    name: \"example\",\n    tpspAllowScreenLock: true,\n    tpspBrowserVersion: \"15393.27.0\",\n    tpspBuiltinDnsClientEnabled: true,\n    tpspChromeRemoteDesktopAppBlocked: true,\n    tpspDeviceEnrollmentDomain: \"exampleDomain\",\n    tpspDiskEncrypted: true,\n    tpspKeyTrustLevel: \"CHROME_OS_VERIFIED_MODE\",\n    tpspOsFirewall: true,\n    tpspOsVersion: \"10.0.19041.1110\",\n    tpspPasswordProctectionWarningTrigger: \"PASSWORD_PROTECTION_OFF\",\n    tpspRealtimeUrlCheckMode: true,\n    tpspSafeBrowsingProtectionLevel: \"ENHANCED_PROTECTION\",\n    tpspScreenLockSecured: true,\n    tpspSiteIsolationEnabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.policy.DeviceAssuranceChromeos(\"example\",\n    name=\"example\",\n    tpsp_allow_screen_lock=True,\n    tpsp_browser_version=\"15393.27.0\",\n    tpsp_builtin_dns_client_enabled=True,\n    tpsp_chrome_remote_desktop_app_blocked=True,\n    tpsp_device_enrollment_domain=\"exampleDomain\",\n    tpsp_disk_encrypted=True,\n    tpsp_key_trust_level=\"CHROME_OS_VERIFIED_MODE\",\n    tpsp_os_firewall=True,\n    tpsp_os_version=\"10.0.19041.1110\",\n    tpsp_password_proctection_warning_trigger=\"PASSWORD_PROTECTION_OFF\",\n    tpsp_realtime_url_check_mode=True,\n    tpsp_safe_browsing_protection_level=\"ENHANCED_PROTECTION\",\n    tpsp_screen_lock_secured=True,\n    tpsp_site_isolation_enabled=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Policy.DeviceAssuranceChromeos(\"example\", new()\n    {\n        Name = \"example\",\n        TpspAllowScreenLock = true,\n        TpspBrowserVersion = \"15393.27.0\",\n        TpspBuiltinDnsClientEnabled = true,\n        TpspChromeRemoteDesktopAppBlocked = true,\n        TpspDeviceEnrollmentDomain = \"exampleDomain\",\n        TpspDiskEncrypted = true,\n        TpspKeyTrustLevel = \"CHROME_OS_VERIFIED_MODE\",\n        TpspOsFirewall = true,\n        TpspOsVersion = \"10.0.19041.1110\",\n        TpspPasswordProctectionWarningTrigger = \"PASSWORD_PROTECTION_OFF\",\n        TpspRealtimeUrlCheckMode = true,\n        TpspSafeBrowsingProtectionLevel = \"ENHANCED_PROTECTION\",\n        TpspScreenLockSecured = true,\n        TpspSiteIsolationEnabled = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.NewDeviceAssuranceChromeos(ctx, \"example\", \u0026policy.DeviceAssuranceChromeosArgs{\n\t\t\tName:                                  pulumi.String(\"example\"),\n\t\t\tTpspAllowScreenLock:                   pulumi.Bool(true),\n\t\t\tTpspBrowserVersion:                    pulumi.String(\"15393.27.0\"),\n\t\t\tTpspBuiltinDnsClientEnabled:           pulumi.Bool(true),\n\t\t\tTpspChromeRemoteDesktopAppBlocked:     pulumi.Bool(true),\n\t\t\tTpspDeviceEnrollmentDomain:            pulumi.String(\"exampleDomain\"),\n\t\t\tTpspDiskEncrypted:                     pulumi.Bool(true),\n\t\t\tTpspKeyTrustLevel:                     pulumi.String(\"CHROME_OS_VERIFIED_MODE\"),\n\t\t\tTpspOsFirewall:                        pulumi.Bool(true),\n\t\t\tTpspOsVersion:                         pulumi.String(\"10.0.19041.1110\"),\n\t\t\tTpspPasswordProctectionWarningTrigger: pulumi.String(\"PASSWORD_PROTECTION_OFF\"),\n\t\t\tTpspRealtimeUrlCheckMode:              pulumi.Bool(true),\n\t\t\tTpspSafeBrowsingProtectionLevel:       pulumi.String(\"ENHANCED_PROTECTION\"),\n\t\t\tTpspScreenLockSecured:                 pulumi.Bool(true),\n\t\t\tTpspSiteIsolationEnabled:              pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.DeviceAssuranceChromeos;\nimport com.pulumi.okta.policy.DeviceAssuranceChromeosArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DeviceAssuranceChromeos(\"example\", DeviceAssuranceChromeosArgs.builder()\n            .name(\"example\")\n            .tpspAllowScreenLock(true)\n            .tpspBrowserVersion(\"15393.27.0\")\n            .tpspBuiltinDnsClientEnabled(true)\n            .tpspChromeRemoteDesktopAppBlocked(true)\n            .tpspDeviceEnrollmentDomain(\"exampleDomain\")\n            .tpspDiskEncrypted(true)\n            .tpspKeyTrustLevel(\"CHROME_OS_VERIFIED_MODE\")\n            .tpspOsFirewall(true)\n            .tpspOsVersion(\"10.0.19041.1110\")\n            .tpspPasswordProctectionWarningTrigger(\"PASSWORD_PROTECTION_OFF\")\n            .tpspRealtimeUrlCheckMode(true)\n            .tpspSafeBrowsingProtectionLevel(\"ENHANCED_PROTECTION\")\n            .tpspScreenLockSecured(true)\n            .tpspSiteIsolationEnabled(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:policy:DeviceAssuranceChromeos\n    properties:\n      name: example\n      tpspAllowScreenLock: true\n      tpspBrowserVersion: 15393.27.0\n      tpspBuiltinDnsClientEnabled: true\n      tpspChromeRemoteDesktopAppBlocked: true\n      tpspDeviceEnrollmentDomain: exampleDomain\n      tpspDiskEncrypted: true\n      tpspKeyTrustLevel: CHROME_OS_VERIFIED_MODE\n      tpspOsFirewall: true\n      tpspOsVersion: 10.0.19041.1110\n      tpspPasswordProctectionWarningTrigger: PASSWORD_PROTECTION_OFF\n      tpspRealtimeUrlCheckMode: true\n      tpspSafeBrowsingProtectionLevel: ENHANCED_PROTECTION\n      tpspScreenLockSecured: true\n      tpspSiteIsolationEnabled: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:policy/deviceAssuranceChromeos:DeviceAssuranceChromeos example \u003cdevice_assurance_id\u003e\n```\n\n",
            "properties": {
                "createdBy": {
                    "type": "string",
                    "description": "Created by\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "Created date\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update\n"
                },
                "lastUpdatedBy": {
                    "type": "string",
                    "description": "Last updated by\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the device assurance policy.\n"
                },
                "platform": {
                    "type": "string",
                    "description": "Policy device assurance platform\n"
                },
                "tpspAllowScreenLock": {
                    "type": "boolean",
                    "description": "Third party signal provider allow screen lock\n"
                },
                "tpspBrowserVersion": {
                    "type": "string",
                    "description": "Third party signal provider minimum browser version\n"
                },
                "tpspBuiltinDnsClientEnabled": {
                    "type": "boolean",
                    "description": "Third party signal provider builtin dns client enabled\n"
                },
                "tpspChromeRemoteDesktopAppBlocked": {
                    "type": "boolean",
                    "description": "Third party signal provider chrome remote desktop app blocked\n"
                },
                "tpspDeviceEnrollmentDomain": {
                    "type": "string",
                    "description": "Third party signal provider device enrollment domain\n"
                },
                "tpspDiskEncrypted": {
                    "type": "boolean",
                    "description": "Third party signal provider disk encrypted\n"
                },
                "tpspKeyTrustLevel": {
                    "type": "string",
                    "description": "Third party signal provider key trust level\n"
                },
                "tpspOsFirewall": {
                    "type": "boolean",
                    "description": "Third party signal provider os firewall\n"
                },
                "tpspOsVersion": {
                    "type": "string",
                    "description": "Third party signal provider minimum os version\n"
                },
                "tpspPasswordProctectionWarningTrigger": {
                    "type": "string",
                    "description": "Third party signal provider password protection warning trigger\n"
                },
                "tpspRealtimeUrlCheckMode": {
                    "type": "boolean",
                    "description": "Third party signal provider realtime url check mode\n"
                },
                "tpspSafeBrowsingProtectionLevel": {
                    "type": "string",
                    "description": "Third party signal provider safe browsing protection level\n"
                },
                "tpspScreenLockSecured": {
                    "type": "boolean",
                    "description": "Third party signal provider screen lock secure\n"
                },
                "tpspSiteIsolationEnabled": {
                    "type": "boolean",
                    "description": "Third party signal provider site isolation enabled\n"
                }
            },
            "required": [
                "createdBy",
                "createdDate",
                "lastUpdate",
                "lastUpdatedBy",
                "name",
                "platform"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the device assurance policy.\n"
                },
                "tpspAllowScreenLock": {
                    "type": "boolean",
                    "description": "Third party signal provider allow screen lock\n"
                },
                "tpspBrowserVersion": {
                    "type": "string",
                    "description": "Third party signal provider minimum browser version\n"
                },
                "tpspBuiltinDnsClientEnabled": {
                    "type": "boolean",
                    "description": "Third party signal provider builtin dns client enabled\n"
                },
                "tpspChromeRemoteDesktopAppBlocked": {
                    "type": "boolean",
                    "description": "Third party signal provider chrome remote desktop app blocked\n"
                },
                "tpspDeviceEnrollmentDomain": {
                    "type": "string",
                    "description": "Third party signal provider device enrollment domain\n"
                },
                "tpspDiskEncrypted": {
                    "type": "boolean",
                    "description": "Third party signal provider disk encrypted\n"
                },
                "tpspKeyTrustLevel": {
                    "type": "string",
                    "description": "Third party signal provider key trust level\n"
                },
                "tpspOsFirewall": {
                    "type": "boolean",
                    "description": "Third party signal provider os firewall\n"
                },
                "tpspOsVersion": {
                    "type": "string",
                    "description": "Third party signal provider minimum os version\n"
                },
                "tpspPasswordProctectionWarningTrigger": {
                    "type": "string",
                    "description": "Third party signal provider password protection warning trigger\n"
                },
                "tpspRealtimeUrlCheckMode": {
                    "type": "boolean",
                    "description": "Third party signal provider realtime url check mode\n"
                },
                "tpspSafeBrowsingProtectionLevel": {
                    "type": "string",
                    "description": "Third party signal provider safe browsing protection level\n"
                },
                "tpspScreenLockSecured": {
                    "type": "boolean",
                    "description": "Third party signal provider screen lock secure\n"
                },
                "tpspSiteIsolationEnabled": {
                    "type": "boolean",
                    "description": "Third party signal provider site isolation enabled\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeviceAssuranceChromeos resources.\n",
                "properties": {
                    "createdBy": {
                        "type": "string",
                        "description": "Created by\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "Created date\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update\n"
                    },
                    "lastUpdatedBy": {
                        "type": "string",
                        "description": "Last updated by\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the device assurance policy.\n"
                    },
                    "platform": {
                        "type": "string",
                        "description": "Policy device assurance platform\n"
                    },
                    "tpspAllowScreenLock": {
                        "type": "boolean",
                        "description": "Third party signal provider allow screen lock\n"
                    },
                    "tpspBrowserVersion": {
                        "type": "string",
                        "description": "Third party signal provider minimum browser version\n"
                    },
                    "tpspBuiltinDnsClientEnabled": {
                        "type": "boolean",
                        "description": "Third party signal provider builtin dns client enabled\n"
                    },
                    "tpspChromeRemoteDesktopAppBlocked": {
                        "type": "boolean",
                        "description": "Third party signal provider chrome remote desktop app blocked\n"
                    },
                    "tpspDeviceEnrollmentDomain": {
                        "type": "string",
                        "description": "Third party signal provider device enrollment domain\n"
                    },
                    "tpspDiskEncrypted": {
                        "type": "boolean",
                        "description": "Third party signal provider disk encrypted\n"
                    },
                    "tpspKeyTrustLevel": {
                        "type": "string",
                        "description": "Third party signal provider key trust level\n"
                    },
                    "tpspOsFirewall": {
                        "type": "boolean",
                        "description": "Third party signal provider os firewall\n"
                    },
                    "tpspOsVersion": {
                        "type": "string",
                        "description": "Third party signal provider minimum os version\n"
                    },
                    "tpspPasswordProctectionWarningTrigger": {
                        "type": "string",
                        "description": "Third party signal provider password protection warning trigger\n"
                    },
                    "tpspRealtimeUrlCheckMode": {
                        "type": "boolean",
                        "description": "Third party signal provider realtime url check mode\n"
                    },
                    "tpspSafeBrowsingProtectionLevel": {
                        "type": "string",
                        "description": "Third party signal provider safe browsing protection level\n"
                    },
                    "tpspScreenLockSecured": {
                        "type": "boolean",
                        "description": "Third party signal provider screen lock secure\n"
                    },
                    "tpspSiteIsolationEnabled": {
                        "type": "boolean",
                        "description": "Third party signal provider site isolation enabled\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/deviceAssuranceIos:DeviceAssuranceIos": {
            "description": "Manages a device assurance policy for ios.\n\n## Import\n\n```sh\n$ pulumi import okta:policy/deviceAssuranceIos:DeviceAssuranceIos example \u003cdevice_assurance_id\u003e\n```\n\n",
            "properties": {
                "createdBy": {
                    "type": "string",
                    "description": "Created by of the device assurance polic\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "Created date of the device assurance polic\n"
                },
                "jailbreak": {
                    "type": "boolean",
                    "description": "Is the device jailbroken in the device assurance policy.\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update of the device assurance polic\n"
                },
                "lastUpdatedBy": {
                    "type": "string",
                    "description": "Last updated by of the device assurance polic\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the device assurance policy.\n"
                },
                "osVersion": {
                    "type": "string",
                    "description": "Minimum os version of the device in the device assurance policy.\n"
                },
                "platform": {
                    "type": "string",
                    "description": "Policy device assurance platform\n"
                },
                "screenlockTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`\n"
                }
            },
            "required": [
                "createdBy",
                "createdDate",
                "lastUpdate",
                "lastUpdatedBy",
                "name",
                "platform"
            ],
            "inputProperties": {
                "jailbreak": {
                    "type": "boolean",
                    "description": "Is the device jailbroken in the device assurance policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the device assurance policy.\n"
                },
                "osVersion": {
                    "type": "string",
                    "description": "Minimum os version of the device in the device assurance policy.\n"
                },
                "screenlockTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeviceAssuranceIos resources.\n",
                "properties": {
                    "createdBy": {
                        "type": "string",
                        "description": "Created by of the device assurance polic\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "Created date of the device assurance polic\n"
                    },
                    "jailbreak": {
                        "type": "boolean",
                        "description": "Is the device jailbroken in the device assurance policy.\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update of the device assurance polic\n"
                    },
                    "lastUpdatedBy": {
                        "type": "string",
                        "description": "Last updated by of the device assurance polic\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the device assurance policy.\n"
                    },
                    "osVersion": {
                        "type": "string",
                        "description": "Minimum os version of the device in the device assurance policy.\n"
                    },
                    "platform": {
                        "type": "string",
                        "description": "Policy device assurance platform\n"
                    },
                    "screenlockTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/deviceAssuranceMacos:DeviceAssuranceMacos": {
            "description": "Manages a device assurance policy for macos.\n\n## Import\n\n```sh\n$ pulumi import okta:policy/deviceAssuranceMacos:DeviceAssuranceMacos example \u003cdevice_assurance_id\u003e\n```\n\n",
            "properties": {
                "createdBy": {
                    "type": "string",
                    "description": "Created by\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "Created date\n"
                },
                "diskEncryptionTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of disk encryption type, can be `ALL_INTERNAL_VOLUMES`\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update\n"
                },
                "lastUpdatedBy": {
                    "type": "string",
                    "description": "Last updated by\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the device assurance policy.\n"
                },
                "osVersion": {
                    "type": "string",
                    "description": "Minimum os version of the device in the device assurance policy.\n"
                },
                "platform": {
                    "type": "string",
                    "description": "Policy device assurance platform\n"
                },
                "screenlockTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`\n"
                },
                "secureHardwarePresent": {
                    "type": "boolean",
                    "description": "Is the device secure with hardware in the device assurance policy.\n"
                },
                "thirdPartySignalProviders": {
                    "type": "boolean",
                    "description": "Check to include third party signal provider\n"
                },
                "tpspBrowserVersion": {
                    "type": "string",
                    "description": "Third party signal provider minimum browser version\n"
                },
                "tpspBuiltinDnsClientEnabled": {
                    "type": "boolean",
                    "description": "Third party signal provider builtin dns client enable\n"
                },
                "tpspChromeRemoteDesktopAppBlocked": {
                    "type": "boolean",
                    "description": "Third party signal provider chrome remote desktop app blocked\n"
                },
                "tpspDeviceEnrollmentDomain": {
                    "type": "string",
                    "description": "Third party signal provider device enrollment domain\n"
                },
                "tpspDiskEncrypted": {
                    "type": "boolean",
                    "description": "Third party signal provider disk encrypted\n"
                },
                "tpspKeyTrustLevel": {
                    "type": "string",
                    "description": "Third party signal provider key trust level\n"
                },
                "tpspOsFirewall": {
                    "type": "boolean",
                    "description": "Third party signal provider os firewall\n"
                },
                "tpspOsVersion": {
                    "type": "string",
                    "description": "Third party signal provider minimum os version\n"
                },
                "tpspPasswordProctectionWarningTrigger": {
                    "type": "string",
                    "description": "Third party signal provider password protection warning trigger\n"
                },
                "tpspRealtimeUrlCheckMode": {
                    "type": "boolean",
                    "description": "Third party signal provider realtime url check mode\n"
                },
                "tpspSafeBrowsingProtectionLevel": {
                    "type": "string",
                    "description": "Third party signal provider safe browsing protection level\n"
                },
                "tpspScreenLockSecured": {
                    "type": "boolean",
                    "description": "Third party signal provider screen lock secure\n"
                },
                "tpspSiteIsolationEnabled": {
                    "type": "boolean",
                    "description": "Third party signal provider site isolation enabled\n"
                }
            },
            "required": [
                "createdBy",
                "createdDate",
                "lastUpdate",
                "lastUpdatedBy",
                "name",
                "platform"
            ],
            "inputProperties": {
                "diskEncryptionTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of disk encryption type, can be `ALL_INTERNAL_VOLUMES`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the device assurance policy.\n"
                },
                "osVersion": {
                    "type": "string",
                    "description": "Minimum os version of the device in the device assurance policy.\n"
                },
                "screenlockTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`\n"
                },
                "secureHardwarePresent": {
                    "type": "boolean",
                    "description": "Is the device secure with hardware in the device assurance policy.\n"
                },
                "thirdPartySignalProviders": {
                    "type": "boolean",
                    "description": "Check to include third party signal provider\n"
                },
                "tpspBrowserVersion": {
                    "type": "string",
                    "description": "Third party signal provider minimum browser version\n"
                },
                "tpspBuiltinDnsClientEnabled": {
                    "type": "boolean",
                    "description": "Third party signal provider builtin dns client enable\n"
                },
                "tpspChromeRemoteDesktopAppBlocked": {
                    "type": "boolean",
                    "description": "Third party signal provider chrome remote desktop app blocked\n"
                },
                "tpspDeviceEnrollmentDomain": {
                    "type": "string",
                    "description": "Third party signal provider device enrollment domain\n"
                },
                "tpspDiskEncrypted": {
                    "type": "boolean",
                    "description": "Third party signal provider disk encrypted\n"
                },
                "tpspKeyTrustLevel": {
                    "type": "string",
                    "description": "Third party signal provider key trust level\n"
                },
                "tpspOsFirewall": {
                    "type": "boolean",
                    "description": "Third party signal provider os firewall\n"
                },
                "tpspOsVersion": {
                    "type": "string",
                    "description": "Third party signal provider minimum os version\n"
                },
                "tpspPasswordProctectionWarningTrigger": {
                    "type": "string",
                    "description": "Third party signal provider password protection warning trigger\n"
                },
                "tpspRealtimeUrlCheckMode": {
                    "type": "boolean",
                    "description": "Third party signal provider realtime url check mode\n"
                },
                "tpspSafeBrowsingProtectionLevel": {
                    "type": "string",
                    "description": "Third party signal provider safe browsing protection level\n"
                },
                "tpspScreenLockSecured": {
                    "type": "boolean",
                    "description": "Third party signal provider screen lock secure\n"
                },
                "tpspSiteIsolationEnabled": {
                    "type": "boolean",
                    "description": "Third party signal provider site isolation enabled\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeviceAssuranceMacos resources.\n",
                "properties": {
                    "createdBy": {
                        "type": "string",
                        "description": "Created by\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "Created date\n"
                    },
                    "diskEncryptionTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of disk encryption type, can be `ALL_INTERNAL_VOLUMES`\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update\n"
                    },
                    "lastUpdatedBy": {
                        "type": "string",
                        "description": "Last updated by\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the device assurance policy.\n"
                    },
                    "osVersion": {
                        "type": "string",
                        "description": "Minimum os version of the device in the device assurance policy.\n"
                    },
                    "platform": {
                        "type": "string",
                        "description": "Policy device assurance platform\n"
                    },
                    "screenlockTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`\n"
                    },
                    "secureHardwarePresent": {
                        "type": "boolean",
                        "description": "Is the device secure with hardware in the device assurance policy.\n"
                    },
                    "thirdPartySignalProviders": {
                        "type": "boolean",
                        "description": "Check to include third party signal provider\n"
                    },
                    "tpspBrowserVersion": {
                        "type": "string",
                        "description": "Third party signal provider minimum browser version\n"
                    },
                    "tpspBuiltinDnsClientEnabled": {
                        "type": "boolean",
                        "description": "Third party signal provider builtin dns client enable\n"
                    },
                    "tpspChromeRemoteDesktopAppBlocked": {
                        "type": "boolean",
                        "description": "Third party signal provider chrome remote desktop app blocked\n"
                    },
                    "tpspDeviceEnrollmentDomain": {
                        "type": "string",
                        "description": "Third party signal provider device enrollment domain\n"
                    },
                    "tpspDiskEncrypted": {
                        "type": "boolean",
                        "description": "Third party signal provider disk encrypted\n"
                    },
                    "tpspKeyTrustLevel": {
                        "type": "string",
                        "description": "Third party signal provider key trust level\n"
                    },
                    "tpspOsFirewall": {
                        "type": "boolean",
                        "description": "Third party signal provider os firewall\n"
                    },
                    "tpspOsVersion": {
                        "type": "string",
                        "description": "Third party signal provider minimum os version\n"
                    },
                    "tpspPasswordProctectionWarningTrigger": {
                        "type": "string",
                        "description": "Third party signal provider password protection warning trigger\n"
                    },
                    "tpspRealtimeUrlCheckMode": {
                        "type": "boolean",
                        "description": "Third party signal provider realtime url check mode\n"
                    },
                    "tpspSafeBrowsingProtectionLevel": {
                        "type": "string",
                        "description": "Third party signal provider safe browsing protection level\n"
                    },
                    "tpspScreenLockSecured": {
                        "type": "boolean",
                        "description": "Third party signal provider screen lock secure\n"
                    },
                    "tpspSiteIsolationEnabled": {
                        "type": "boolean",
                        "description": "Third party signal provider site isolation enabled\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/deviceAssuranceWindows:DeviceAssuranceWindows": {
            "description": "Manages a device assurance policy for windows.\n\n## Import\n\n```sh\n$ pulumi import okta:policy/deviceAssuranceWindows:DeviceAssuranceWindows example \u003cdevice_assurance_id\u003e\n```\n\n",
            "properties": {
                "createdBy": {
                    "type": "string",
                    "description": "Created by\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "Created date\n"
                },
                "diskEncryptionTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of disk encryption type, can be `ALL_INTERNAL_VOLUMES`\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update\n"
                },
                "lastUpdatedBy": {
                    "type": "string",
                    "description": "Last updated by\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the device assurance policy.\n"
                },
                "osVersion": {
                    "type": "string",
                    "description": "Minimum os version of the device in the device assurance policy.\n"
                },
                "platform": {
                    "type": "string",
                    "description": "Policy device assurance platform\n"
                },
                "screenlockTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`\n"
                },
                "secureHardwarePresent": {
                    "type": "boolean",
                    "description": "Is the device secure with hardware in the device assurance policy.\n"
                },
                "thirdPartySignalProviders": {
                    "type": "boolean",
                    "description": "Check to include third party signal provider\n"
                },
                "tpspBrowserVersion": {
                    "type": "string",
                    "description": "Third party signal provider minimum browser version\n"
                },
                "tpspBuiltinDnsClientEnabled": {
                    "type": "boolean",
                    "description": "Third party signal provider builtin dns client enable\n"
                },
                "tpspChromeRemoteDesktopAppBlocked": {
                    "type": "boolean",
                    "description": "Third party signal provider chrome remote desktop app blocked\n"
                },
                "tpspCrowdStrikeAgentId": {
                    "type": "string",
                    "description": "Third party signal provider crowdstrike agent id\n"
                },
                "tpspCrowdStrikeCustomerId": {
                    "type": "string",
                    "description": "Third party signal provider crowdstrike user id\n"
                },
                "tpspDeviceEnrollmentDomain": {
                    "type": "string",
                    "description": "Third party signal provider device enrollment domain\n"
                },
                "tpspDiskEncrypted": {
                    "type": "boolean",
                    "description": "Third party signal provider disk encrypted\n"
                },
                "tpspKeyTrustLevel": {
                    "type": "string",
                    "description": "Third party signal provider key trust level\n"
                },
                "tpspOsFirewall": {
                    "type": "boolean",
                    "description": "Third party signal provider os firewall\n"
                },
                "tpspOsVersion": {
                    "type": "string",
                    "description": "Third party signal provider minimum os version\n"
                },
                "tpspPasswordProctectionWarningTrigger": {
                    "type": "string",
                    "description": "Third party signal provider password protection warning trigger\n"
                },
                "tpspRealtimeUrlCheckMode": {
                    "type": "boolean",
                    "description": "Third party signal provider realtime url check mode\n"
                },
                "tpspSafeBrowsingProtectionLevel": {
                    "type": "string",
                    "description": "Third party signal provider safe browsing protection level\n"
                },
                "tpspScreenLockSecured": {
                    "type": "boolean",
                    "description": "Third party signal provider screen lock secure\n"
                },
                "tpspSecureBootEnabled": {
                    "type": "boolean",
                    "description": "Third party signal provider secure boot enabled\n"
                },
                "tpspSiteIsolationEnabled": {
                    "type": "boolean",
                    "description": "Third party signal provider site isolation enabled\n"
                },
                "tpspThirdPartyBlockingEnabled": {
                    "type": "boolean",
                    "description": "Third party signal provider third party blocking enabled\n"
                },
                "tpspWindowsMachineDomain": {
                    "type": "string",
                    "description": "Third party signal provider windows machine domain\n"
                },
                "tpspWindowsUserDomain": {
                    "type": "string",
                    "description": "Third party signal provider windows user domain\n"
                }
            },
            "required": [
                "createdBy",
                "createdDate",
                "lastUpdate",
                "lastUpdatedBy",
                "name",
                "platform"
            ],
            "inputProperties": {
                "diskEncryptionTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of disk encryption type, can be `ALL_INTERNAL_VOLUMES`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the device assurance policy.\n"
                },
                "osVersion": {
                    "type": "string",
                    "description": "Minimum os version of the device in the device assurance policy.\n"
                },
                "screenlockTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`\n"
                },
                "secureHardwarePresent": {
                    "type": "boolean",
                    "description": "Is the device secure with hardware in the device assurance policy.\n"
                },
                "thirdPartySignalProviders": {
                    "type": "boolean",
                    "description": "Check to include third party signal provider\n"
                },
                "tpspBrowserVersion": {
                    "type": "string",
                    "description": "Third party signal provider minimum browser version\n"
                },
                "tpspBuiltinDnsClientEnabled": {
                    "type": "boolean",
                    "description": "Third party signal provider builtin dns client enable\n"
                },
                "tpspChromeRemoteDesktopAppBlocked": {
                    "type": "boolean",
                    "description": "Third party signal provider chrome remote desktop app blocked\n"
                },
                "tpspCrowdStrikeAgentId": {
                    "type": "string",
                    "description": "Third party signal provider crowdstrike agent id\n"
                },
                "tpspCrowdStrikeCustomerId": {
                    "type": "string",
                    "description": "Third party signal provider crowdstrike user id\n"
                },
                "tpspDeviceEnrollmentDomain": {
                    "type": "string",
                    "description": "Third party signal provider device enrollment domain\n"
                },
                "tpspDiskEncrypted": {
                    "type": "boolean",
                    "description": "Third party signal provider disk encrypted\n"
                },
                "tpspKeyTrustLevel": {
                    "type": "string",
                    "description": "Third party signal provider key trust level\n"
                },
                "tpspOsFirewall": {
                    "type": "boolean",
                    "description": "Third party signal provider os firewall\n"
                },
                "tpspOsVersion": {
                    "type": "string",
                    "description": "Third party signal provider minimum os version\n"
                },
                "tpspPasswordProctectionWarningTrigger": {
                    "type": "string",
                    "description": "Third party signal provider password protection warning trigger\n"
                },
                "tpspRealtimeUrlCheckMode": {
                    "type": "boolean",
                    "description": "Third party signal provider realtime url check mode\n"
                },
                "tpspSafeBrowsingProtectionLevel": {
                    "type": "string",
                    "description": "Third party signal provider safe browsing protection level\n"
                },
                "tpspScreenLockSecured": {
                    "type": "boolean",
                    "description": "Third party signal provider screen lock secure\n"
                },
                "tpspSecureBootEnabled": {
                    "type": "boolean",
                    "description": "Third party signal provider secure boot enabled\n"
                },
                "tpspSiteIsolationEnabled": {
                    "type": "boolean",
                    "description": "Third party signal provider site isolation enabled\n"
                },
                "tpspThirdPartyBlockingEnabled": {
                    "type": "boolean",
                    "description": "Third party signal provider third party blocking enabled\n"
                },
                "tpspWindowsMachineDomain": {
                    "type": "string",
                    "description": "Third party signal provider windows machine domain\n"
                },
                "tpspWindowsUserDomain": {
                    "type": "string",
                    "description": "Third party signal provider windows user domain\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeviceAssuranceWindows resources.\n",
                "properties": {
                    "createdBy": {
                        "type": "string",
                        "description": "Created by\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "Created date\n"
                    },
                    "diskEncryptionTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of disk encryption type, can be `ALL_INTERNAL_VOLUMES`\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update\n"
                    },
                    "lastUpdatedBy": {
                        "type": "string",
                        "description": "Last updated by\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the device assurance policy.\n"
                    },
                    "osVersion": {
                        "type": "string",
                        "description": "Minimum os version of the device in the device assurance policy.\n"
                    },
                    "platform": {
                        "type": "string",
                        "description": "Policy device assurance platform\n"
                    },
                    "screenlockTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`\n"
                    },
                    "secureHardwarePresent": {
                        "type": "boolean",
                        "description": "Is the device secure with hardware in the device assurance policy.\n"
                    },
                    "thirdPartySignalProviders": {
                        "type": "boolean",
                        "description": "Check to include third party signal provider\n"
                    },
                    "tpspBrowserVersion": {
                        "type": "string",
                        "description": "Third party signal provider minimum browser version\n"
                    },
                    "tpspBuiltinDnsClientEnabled": {
                        "type": "boolean",
                        "description": "Third party signal provider builtin dns client enable\n"
                    },
                    "tpspChromeRemoteDesktopAppBlocked": {
                        "type": "boolean",
                        "description": "Third party signal provider chrome remote desktop app blocked\n"
                    },
                    "tpspCrowdStrikeAgentId": {
                        "type": "string",
                        "description": "Third party signal provider crowdstrike agent id\n"
                    },
                    "tpspCrowdStrikeCustomerId": {
                        "type": "string",
                        "description": "Third party signal provider crowdstrike user id\n"
                    },
                    "tpspDeviceEnrollmentDomain": {
                        "type": "string",
                        "description": "Third party signal provider device enrollment domain\n"
                    },
                    "tpspDiskEncrypted": {
                        "type": "boolean",
                        "description": "Third party signal provider disk encrypted\n"
                    },
                    "tpspKeyTrustLevel": {
                        "type": "string",
                        "description": "Third party signal provider key trust level\n"
                    },
                    "tpspOsFirewall": {
                        "type": "boolean",
                        "description": "Third party signal provider os firewall\n"
                    },
                    "tpspOsVersion": {
                        "type": "string",
                        "description": "Third party signal provider minimum os version\n"
                    },
                    "tpspPasswordProctectionWarningTrigger": {
                        "type": "string",
                        "description": "Third party signal provider password protection warning trigger\n"
                    },
                    "tpspRealtimeUrlCheckMode": {
                        "type": "boolean",
                        "description": "Third party signal provider realtime url check mode\n"
                    },
                    "tpspSafeBrowsingProtectionLevel": {
                        "type": "string",
                        "description": "Third party signal provider safe browsing protection level\n"
                    },
                    "tpspScreenLockSecured": {
                        "type": "boolean",
                        "description": "Third party signal provider screen lock secure\n"
                    },
                    "tpspSecureBootEnabled": {
                        "type": "boolean",
                        "description": "Third party signal provider secure boot enabled\n"
                    },
                    "tpspSiteIsolationEnabled": {
                        "type": "boolean",
                        "description": "Third party signal provider site isolation enabled\n"
                    },
                    "tpspThirdPartyBlockingEnabled": {
                        "type": "boolean",
                        "description": "Third party signal provider third party blocking enabled\n"
                    },
                    "tpspWindowsMachineDomain": {
                        "type": "string",
                        "description": "Third party signal provider windows machine domain\n"
                    },
                    "tpspWindowsUserDomain": {
                        "type": "string",
                        "description": "Third party signal provider windows user domain\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/mfa:Mfa": {
            "description": "## Example Usage\n\n## Import\n\n```sh\n$ pulumi import okta:policy/mfa:Mfa example \u003cpolicy_id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Policy Description\n"
                },
                "duo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "externalIdp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "deprecationMessage": "Since okta now support multiple external_idps, this will be deprecated. Please use `external_idps` instead"
                },
                "externalIdps": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "fidoU2f": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "fidoWebauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "googleOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include\n"
                },
                "hotp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "isOie": {
                    "type": "boolean",
                    "description": "Is the policy using Okta Identity Engine (OIE) with authenticators instead of factors?\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name\n"
                },
                "oktaCall": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaEmail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaPassword": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaPush": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaSms": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaVerify": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "onpremMfa": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "phoneNumber": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "rsaToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "securityQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "smartCardIdp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                },
                "symantecVip": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "webauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "yubikeyToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Policy Description\n"
                },
                "duo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "externalIdp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "deprecationMessage": "Since okta now support multiple external_idps, this will be deprecated. Please use `external_idps` instead"
                },
                "externalIdps": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "fidoU2f": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "fidoWebauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "googleOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include\n"
                },
                "hotp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "isOie": {
                    "type": "boolean",
                    "description": "Is the policy using Okta Identity Engine (OIE) with authenticators instead of factors?\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name\n"
                },
                "oktaCall": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaEmail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaOtp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaPassword": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaPush": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaSms": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "oktaVerify": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "onpremMfa": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "phoneNumber": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "rsaToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "securityQuestion": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "smartCardIdp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                },
                "symantecVip": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "webauthn": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "yubikeyToken": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Mfa resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Policy Description\n"
                    },
                    "duo": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "externalIdp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "deprecationMessage": "Since okta now support multiple external_idps, this will be deprecated. Please use `external_idps` instead"
                    },
                    "externalIdps": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "fidoU2f": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "fidoWebauthn": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "googleOtp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "groupsIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Group IDs to Include\n"
                    },
                    "hotp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "isOie": {
                        "type": "boolean",
                        "description": "Is the policy using Okta Identity Engine (OIE) with authenticators instead of factors?\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Name\n"
                    },
                    "oktaCall": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaEmail": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaOtp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaPassword": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaPush": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaQuestion": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaSms": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "oktaVerify": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "onpremMfa": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "phoneNumber": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                    },
                    "rsaToken": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "securityQuestion": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "smartCardIdp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                    },
                    "symantecVip": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "webauthn": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "yubikeyToken": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/password:Password": {
            "description": "Creates a Password Policy. This resource allows you to create and configure a Password Policy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.policy.Password(\"example\", {\n    name: \"example\",\n    status: \"ACTIVE\",\n    description: \"Example\",\n    passwordHistoryCount: 4,\n    groupsIncludeds: [everyone.id],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.policy.Password(\"example\",\n    name=\"example\",\n    status=\"ACTIVE\",\n    description=\"Example\",\n    password_history_count=4,\n    groups_includeds=[everyone[\"id\"]])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Policy.Password(\"example\", new()\n    {\n        Name = \"example\",\n        Status = \"ACTIVE\",\n        Description = \"Example\",\n        PasswordHistoryCount = 4,\n        GroupsIncludeds = new[]\n        {\n            everyone.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.NewPassword(ctx, \"example\", \u0026policy.PasswordArgs{\n\t\t\tName:                 pulumi.String(\"example\"),\n\t\t\tStatus:               pulumi.String(\"ACTIVE\"),\n\t\t\tDescription:          pulumi.String(\"Example\"),\n\t\t\tPasswordHistoryCount: pulumi.Int(4),\n\t\t\tGroupsIncludeds: pulumi.StringArray{\n\t\t\t\teveryone.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.Password;\nimport com.pulumi.okta.policy.PasswordArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Password(\"example\", PasswordArgs.builder()\n            .name(\"example\")\n            .status(\"ACTIVE\")\n            .description(\"Example\")\n            .passwordHistoryCount(4)\n            .groupsIncludeds(everyone.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:policy:Password\n    properties:\n      name: example\n      status: ACTIVE\n      description: Example\n      passwordHistoryCount: 4\n      groupsIncludeds:\n        - ${everyone.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:policy/password:Password example \u003cpolicy_id\u003e\n```\n\n",
            "properties": {
                "authProvider": {
                    "type": "string",
                    "description": "Authentication Provider: `OKTA`, `ACTIVE_DIRECTORY` or `LDAP`. Default: `OKTA`\n"
                },
                "callRecovery": {
                    "type": "string",
                    "description": "Enable or disable voice call recovery: `ACTIVE` or `INACTIVE`. Default: `INACTIVE`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Policy Description\n"
                },
                "emailRecovery": {
                    "type": "string",
                    "description": "Enable or disable email password recovery: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name\n"
                },
                "passwordAutoUnlockMinutes": {
                    "type": "integer",
                    "description": "Number of minutes before a locked account is unlocked: 0 = no limit. Default: `0`\n"
                },
                "passwordDictionaryLookup": {
                    "type": "boolean",
                    "description": "Check Passwords Against Common Password Dictionary. Default: `false`\n"
                },
                "passwordExcludeFirstName": {
                    "type": "boolean",
                    "description": "User firstName attribute must be excluded from the password\n"
                },
                "passwordExcludeLastName": {
                    "type": "boolean",
                    "description": "User lastName attribute must be excluded from the password\n"
                },
                "passwordExcludeUsername": {
                    "type": "boolean",
                    "description": "If the user name must be excluded from the password. Default: `true`\n"
                },
                "passwordExpireWarnDays": {
                    "type": "integer",
                    "description": "Length in days a user will be warned before password expiry: 0 = no warning. Default: `0`\n"
                },
                "passwordHistoryCount": {
                    "type": "integer",
                    "description": "Number of distinct passwords that must be created before they can be reused: 0 = none. Default: `0`\n"
                },
                "passwordLockoutNotificationChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification channels to use to notify a user when their account has been locked.\n"
                },
                "passwordMaxAgeDays": {
                    "type": "integer",
                    "description": "Length in days a password is valid before expiry: 0 = no limit. Default: `0`\n"
                },
                "passwordMaxLockoutAttempts": {
                    "type": "integer",
                    "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit. Default: `10`\n"
                },
                "passwordMinAgeMinutes": {
                    "type": "integer",
                    "description": "Minimum time interval in minutes between password changes: 0 = no limit. Default: `0`\n"
                },
                "passwordMinLength": {
                    "type": "integer",
                    "description": "Minimum password length. Default: `8`\n"
                },
                "passwordMinLowercase": {
                    "type": "integer",
                    "description": "If a password must contain at least one lower case letter: 0 = no, 1 = yes. Default: `1`\n"
                },
                "passwordMinNumber": {
                    "type": "integer",
                    "description": "If a password must contain at least one number: 0 = no, 1 = yes. Default: `1`\n"
                },
                "passwordMinSymbol": {
                    "type": "integer",
                    "description": "If a password must contain at least one symbol (!@#$%^\u0026*): 0 = no, 1 = yes. Default: `0`\n"
                },
                "passwordMinUppercase": {
                    "type": "integer",
                    "description": "If a password must contain at least one upper case letter: 0 = no, 1 = yes. Default: `1`\n"
                },
                "passwordShowLockoutFailures": {
                    "type": "boolean",
                    "description": "If a user should be informed when their account is locked. Default: `false`\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "questionMinLength": {
                    "type": "integer",
                    "description": "Min length of the password recovery question answer. Default: `4`\n"
                },
                "questionRecovery": {
                    "type": "string",
                    "description": "Enable or disable security question password recovery: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                },
                "recoveryEmailToken": {
                    "type": "integer",
                    "description": "Lifetime in minutes of the recovery email token. Default: `60`\n"
                },
                "skipUnlock": {
                    "type": "boolean",
                    "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's Windows account. Default: `false`\n"
                },
                "smsRecovery": {
                    "type": "string",
                    "description": "Enable or disable SMS password recovery: `ACTIVE` or `INACTIVE`. Default: `INACTIVE`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "authProvider": {
                    "type": "string",
                    "description": "Authentication Provider: `OKTA`, `ACTIVE_DIRECTORY` or `LDAP`. Default: `OKTA`\n"
                },
                "callRecovery": {
                    "type": "string",
                    "description": "Enable or disable voice call recovery: `ACTIVE` or `INACTIVE`. Default: `INACTIVE`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Policy Description\n"
                },
                "emailRecovery": {
                    "type": "string",
                    "description": "Enable or disable email password recovery: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name\n"
                },
                "passwordAutoUnlockMinutes": {
                    "type": "integer",
                    "description": "Number of minutes before a locked account is unlocked: 0 = no limit. Default: `0`\n"
                },
                "passwordDictionaryLookup": {
                    "type": "boolean",
                    "description": "Check Passwords Against Common Password Dictionary. Default: `false`\n"
                },
                "passwordExcludeFirstName": {
                    "type": "boolean",
                    "description": "User firstName attribute must be excluded from the password\n"
                },
                "passwordExcludeLastName": {
                    "type": "boolean",
                    "description": "User lastName attribute must be excluded from the password\n"
                },
                "passwordExcludeUsername": {
                    "type": "boolean",
                    "description": "If the user name must be excluded from the password. Default: `true`\n"
                },
                "passwordExpireWarnDays": {
                    "type": "integer",
                    "description": "Length in days a user will be warned before password expiry: 0 = no warning. Default: `0`\n"
                },
                "passwordHistoryCount": {
                    "type": "integer",
                    "description": "Number of distinct passwords that must be created before they can be reused: 0 = none. Default: `0`\n"
                },
                "passwordLockoutNotificationChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification channels to use to notify a user when their account has been locked.\n"
                },
                "passwordMaxAgeDays": {
                    "type": "integer",
                    "description": "Length in days a password is valid before expiry: 0 = no limit. Default: `0`\n"
                },
                "passwordMaxLockoutAttempts": {
                    "type": "integer",
                    "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit. Default: `10`\n"
                },
                "passwordMinAgeMinutes": {
                    "type": "integer",
                    "description": "Minimum time interval in minutes between password changes: 0 = no limit. Default: `0`\n"
                },
                "passwordMinLength": {
                    "type": "integer",
                    "description": "Minimum password length. Default: `8`\n"
                },
                "passwordMinLowercase": {
                    "type": "integer",
                    "description": "If a password must contain at least one lower case letter: 0 = no, 1 = yes. Default: `1`\n"
                },
                "passwordMinNumber": {
                    "type": "integer",
                    "description": "If a password must contain at least one number: 0 = no, 1 = yes. Default: `1`\n"
                },
                "passwordMinSymbol": {
                    "type": "integer",
                    "description": "If a password must contain at least one symbol (!@#$%^\u0026*): 0 = no, 1 = yes. Default: `0`\n"
                },
                "passwordMinUppercase": {
                    "type": "integer",
                    "description": "If a password must contain at least one upper case letter: 0 = no, 1 = yes. Default: `1`\n"
                },
                "passwordShowLockoutFailures": {
                    "type": "boolean",
                    "description": "If a user should be informed when their account is locked. Default: `false`\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "questionMinLength": {
                    "type": "integer",
                    "description": "Min length of the password recovery question answer. Default: `4`\n"
                },
                "questionRecovery": {
                    "type": "string",
                    "description": "Enable or disable security question password recovery: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                },
                "recoveryEmailToken": {
                    "type": "integer",
                    "description": "Lifetime in minutes of the recovery email token. Default: `60`\n"
                },
                "skipUnlock": {
                    "type": "boolean",
                    "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's Windows account. Default: `false`\n"
                },
                "smsRecovery": {
                    "type": "string",
                    "description": "Enable or disable SMS password recovery: `ACTIVE` or `INACTIVE`. Default: `INACTIVE`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Password resources.\n",
                "properties": {
                    "authProvider": {
                        "type": "string",
                        "description": "Authentication Provider: `OKTA`, `ACTIVE_DIRECTORY` or `LDAP`. Default: `OKTA`\n"
                    },
                    "callRecovery": {
                        "type": "string",
                        "description": "Enable or disable voice call recovery: `ACTIVE` or `INACTIVE`. Default: `INACTIVE`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Policy Description\n"
                    },
                    "emailRecovery": {
                        "type": "string",
                        "description": "Enable or disable email password recovery: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                    },
                    "groupsIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Group IDs to Include\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Name\n"
                    },
                    "passwordAutoUnlockMinutes": {
                        "type": "integer",
                        "description": "Number of minutes before a locked account is unlocked: 0 = no limit. Default: `0`\n"
                    },
                    "passwordDictionaryLookup": {
                        "type": "boolean",
                        "description": "Check Passwords Against Common Password Dictionary. Default: `false`\n"
                    },
                    "passwordExcludeFirstName": {
                        "type": "boolean",
                        "description": "User firstName attribute must be excluded from the password\n"
                    },
                    "passwordExcludeLastName": {
                        "type": "boolean",
                        "description": "User lastName attribute must be excluded from the password\n"
                    },
                    "passwordExcludeUsername": {
                        "type": "boolean",
                        "description": "If the user name must be excluded from the password. Default: `true`\n"
                    },
                    "passwordExpireWarnDays": {
                        "type": "integer",
                        "description": "Length in days a user will be warned before password expiry: 0 = no warning. Default: `0`\n"
                    },
                    "passwordHistoryCount": {
                        "type": "integer",
                        "description": "Number of distinct passwords that must be created before they can be reused: 0 = none. Default: `0`\n"
                    },
                    "passwordLockoutNotificationChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Notification channels to use to notify a user when their account has been locked.\n"
                    },
                    "passwordMaxAgeDays": {
                        "type": "integer",
                        "description": "Length in days a password is valid before expiry: 0 = no limit. Default: `0`\n"
                    },
                    "passwordMaxLockoutAttempts": {
                        "type": "integer",
                        "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit. Default: `10`\n"
                    },
                    "passwordMinAgeMinutes": {
                        "type": "integer",
                        "description": "Minimum time interval in minutes between password changes: 0 = no limit. Default: `0`\n"
                    },
                    "passwordMinLength": {
                        "type": "integer",
                        "description": "Minimum password length. Default: `8`\n"
                    },
                    "passwordMinLowercase": {
                        "type": "integer",
                        "description": "If a password must contain at least one lower case letter: 0 = no, 1 = yes. Default: `1`\n"
                    },
                    "passwordMinNumber": {
                        "type": "integer",
                        "description": "If a password must contain at least one number: 0 = no, 1 = yes. Default: `1`\n"
                    },
                    "passwordMinSymbol": {
                        "type": "integer",
                        "description": "If a password must contain at least one symbol (!@#$%^\u0026*): 0 = no, 1 = yes. Default: `0`\n"
                    },
                    "passwordMinUppercase": {
                        "type": "integer",
                        "description": "If a password must contain at least one upper case letter: 0 = no, 1 = yes. Default: `1`\n"
                    },
                    "passwordShowLockoutFailures": {
                        "type": "boolean",
                        "description": "If a user should be informed when their account is locked. Default: `false`\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                    },
                    "questionMinLength": {
                        "type": "integer",
                        "description": "Min length of the password recovery question answer. Default: `4`\n"
                    },
                    "questionRecovery": {
                        "type": "string",
                        "description": "Enable or disable security question password recovery: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                    },
                    "recoveryEmailToken": {
                        "type": "integer",
                        "description": "Lifetime in minutes of the recovery email token. Default: `60`\n"
                    },
                    "skipUnlock": {
                        "type": "boolean",
                        "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's Windows account. Default: `false`\n"
                    },
                    "smsRecovery": {
                        "type": "string",
                        "description": "Enable or disable SMS password recovery: `ACTIVE` or `INACTIVE`. Default: `INACTIVE`\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/ruleIdpDiscovery:RuleIdpDiscovery": {
            "description": "Creates an IdP Discovery Policy Rule.\n\t\t\nThis resource allows you to create and configure an IdP Discovery Policy Rule.\n\u003e If you receive the error 'You do not have permission to access the feature\nyou are requesting' contact support and\nrequest feature flag 'ADVANCED_SSO' be applied to your org.\n\n## Import\n\n```sh\n$ pulumi import okta:policy/ruleIdpDiscovery:RuleIdpDiscovery example \u003cpolicy_id\u003e/\u003crule_id\u003e\n```\n\n",
            "properties": {
                "appExcludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppExclude:RuleIdpDiscoveryAppExclude"
                    },
                    "description": "Applications to exclude in discovery. See `app_include` for details.\n"
                },
                "appIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppInclude:RuleIdpDiscoveryAppInclude"
                    },
                    "description": "Applications to include in discovery rule. - 'id' - (Optional) Use if 'type' is 'APP' to indicate the application id to\ninclude. - 'name' - (Optional) Use if the 'type' is 'APP_TYPE' to indicate the type of application(s) to include in\ninstances where an entire group (i.e. 'yahoo_mail') of applications should be included. - 'type' - (Required) One of:\n'APP', 'APP_TYPE'\n"
                },
                "idpProviders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryIdpProvider:RuleIdpDiscoveryIdpProvider"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to exclude.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to include.\n"
                },
                "platformIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryPlatformInclude:RuleIdpDiscoveryPlatformInclude"
                    },
                    "description": "Platform to include in discovery rule. - 'type' - (Optional) One of: 'ANY', 'MOBILE', 'DESKTOP' - 'os_expression -\n(Optional) Only available when using os_type = 'OTHER' - 'os_type' - (Optional) One of: 'ANY', 'IOS', 'WINDOWS',\n'ANDROID', 'OTHER', 'OSX'\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if\nan invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                },
                "userIdentifierAttribute": {
                    "type": "string",
                    "description": "Profile attribute matching can only have a single value that describes the type indicated in `user_identifier_type`.\nThis is the attribute or identifier that the `user_identifier_patterns` are checked against.\n"
                },
                "userIdentifierPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryUserIdentifierPattern:RuleIdpDiscoveryUserIdentifierPattern"
                    },
                    "description": "Specifies a User Identifier pattern condition to match against. If 'match_type' of 'EXPRESSION' is used, only a *single*\nelement can be set, otherwise multiple elements of matching patterns may be provided. - 'match_type' - (Optional) The\nkind of pattern. For regex, use 'EXPRESSION'. For simple string matches, use one of the following: 'SUFFIX', 'EQUALS',\n'STARTS_WITH', 'CONTAINS' - 'value' - (Optional) The regex or simple match string to match against.\n"
                },
                "userIdentifierType": {
                    "type": "string",
                    "description": "One of: `IDENTIFIER`, `ATTRIBUTE`\n"
                }
            },
            "required": [
                "idpProviders",
                "name"
            ],
            "inputProperties": {
                "appExcludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppExclude:RuleIdpDiscoveryAppExclude"
                    },
                    "description": "Applications to exclude in discovery. See `app_include` for details.\n"
                },
                "appIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppInclude:RuleIdpDiscoveryAppInclude"
                    },
                    "description": "Applications to include in discovery rule. - 'id' - (Optional) Use if 'type' is 'APP' to indicate the application id to\ninclude. - 'name' - (Optional) Use if the 'type' is 'APP_TYPE' to indicate the type of application(s) to include in\ninstances where an entire group (i.e. 'yahoo_mail') of applications should be included. - 'type' - (Required) One of:\n'APP', 'APP_TYPE'\n"
                },
                "idpProviders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryIdpProvider:RuleIdpDiscoveryIdpProvider"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name\n",
                    "willReplaceOnChanges": true
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to exclude.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to include.\n"
                },
                "platformIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryPlatformInclude:RuleIdpDiscoveryPlatformInclude"
                    },
                    "description": "Platform to include in discovery rule. - 'type' - (Optional) One of: 'ANY', 'MOBILE', 'DESKTOP' - 'os_expression -\n(Optional) Only available when using os_type = 'OTHER' - 'os_type' - (Optional) One of: 'ANY', 'IOS', 'WINDOWS',\n'ANDROID', 'OTHER', 'OSX'\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n",
                    "willReplaceOnChanges": true
                },
                "priority": {
                    "type": "integer",
                    "description": "Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if\nan invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                },
                "userIdentifierAttribute": {
                    "type": "string",
                    "description": "Profile attribute matching can only have a single value that describes the type indicated in `user_identifier_type`.\nThis is the attribute or identifier that the `user_identifier_patterns` are checked against.\n"
                },
                "userIdentifierPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleIdpDiscoveryUserIdentifierPattern:RuleIdpDiscoveryUserIdentifierPattern"
                    },
                    "description": "Specifies a User Identifier pattern condition to match against. If 'match_type' of 'EXPRESSION' is used, only a *single*\nelement can be set, otherwise multiple elements of matching patterns may be provided. - 'match_type' - (Optional) The\nkind of pattern. For regex, use 'EXPRESSION'. For simple string matches, use one of the following: 'SUFFIX', 'EQUALS',\n'STARTS_WITH', 'CONTAINS' - 'value' - (Optional) The regex or simple match string to match against.\n"
                },
                "userIdentifierType": {
                    "type": "string",
                    "description": "One of: `IDENTIFIER`, `ATTRIBUTE`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RuleIdpDiscovery resources.\n",
                "properties": {
                    "appExcludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppExclude:RuleIdpDiscoveryAppExclude"
                        },
                        "description": "Applications to exclude in discovery. See `app_include` for details.\n"
                    },
                    "appIncludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleIdpDiscoveryAppInclude:RuleIdpDiscoveryAppInclude"
                        },
                        "description": "Applications to include in discovery rule. - 'id' - (Optional) Use if 'type' is 'APP' to indicate the application id to\ninclude. - 'name' - (Optional) Use if the 'type' is 'APP_TYPE' to indicate the type of application(s) to include in\ninstances where an entire group (i.e. 'yahoo_mail') of applications should be included. - 'type' - (Required) One of:\n'APP', 'APP_TYPE'\n"
                    },
                    "idpProviders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleIdpDiscoveryIdpProvider:RuleIdpDiscoveryIdpProvider"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Rule Name\n",
                        "willReplaceOnChanges": true
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to exclude.\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to include.\n"
                    },
                    "platformIncludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleIdpDiscoveryPlatformInclude:RuleIdpDiscoveryPlatformInclude"
                        },
                        "description": "Platform to include in discovery rule. - 'type' - (Optional) One of: 'ANY', 'MOBILE', 'DESKTOP' - 'os_expression -\n(Optional) Only available when using os_type = 'OTHER' - 'os_type' - (Optional) One of: 'ANY', 'IOS', 'WINDOWS',\n'ANDROID', 'OTHER', 'OSX'\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Policy ID of the Rule\n",
                        "willReplaceOnChanges": true
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if\nan invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                    },
                    "userIdentifierAttribute": {
                        "type": "string",
                        "description": "Profile attribute matching can only have a single value that describes the type indicated in `user_identifier_type`.\nThis is the attribute or identifier that the `user_identifier_patterns` are checked against.\n"
                    },
                    "userIdentifierPatterns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleIdpDiscoveryUserIdentifierPattern:RuleIdpDiscoveryUserIdentifierPattern"
                        },
                        "description": "Specifies a User Identifier pattern condition to match against. If 'match_type' of 'EXPRESSION' is used, only a *single*\nelement can be set, otherwise multiple elements of matching patterns may be provided. - 'match_type' - (Optional) The\nkind of pattern. For regex, use 'EXPRESSION'. For simple string matches, use one of the following: 'SUFFIX', 'EQUALS',\n'STARTS_WITH', 'CONTAINS' - 'value' - (Optional) The regex or simple match string to match against.\n"
                    },
                    "userIdentifierType": {
                        "type": "string",
                        "description": "One of: `IDENTIFIER`, `ATTRIBUTE`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/ruleMfa:RuleMfa": {
            "description": "Creates an MFA Policy Rule. This resource allows you to create and configure an MFA Policy Rule.\n\n## Import\n\n```sh\n$ pulumi import okta:policy/ruleMfa:RuleMfa example \u003cpolicy_id\u003e/\u003crule_id\u003e\n```\n\n",
            "properties": {
                "appExcludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleMfaAppExclude:RuleMfaAppExclude"
                    },
                    "description": "Applications to exclude in discovery rule. **IMPORTANT**: this field is only available in Classic Organizations. - 'id'\n- (Optional) Use if 'type' is 'APP' to indicate the application id to include. - 'name' - (Optional) Use if the 'type'\nis 'APP_TYPE' to indicate the type of application(s) to include in instances where an entire group (i.e. 'yahoo_mail')\nof applications should be included. - 'type' - (Required) One of: 'APP', 'APP_TYPE'\n"
                },
                "appIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleMfaAppInclude:RuleMfaAppInclude"
                    },
                    "description": "Applications to include in discovery rule. **IMPORTANT**: this field is only available in Classic Organizations. - 'id'\n- (Optional) Use if 'type' is 'APP' to indicate the application id to include. - 'name' - (Optional) Use if the 'type'\nis 'APP_TYPE' to indicate the type of application(s) to include in instances where an entire group (i.e. 'yahoo_mail')\nof applications should be included. - 'type' - (Required) One of: 'APP', 'APP_TYPE'\n"
                },
                "enroll": {
                    "type": "string",
                    "description": "When a user should be prompted for MFA. It can be `CHALLENGE`, `LOGIN`, or `NEVER`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to exclude.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to include.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if\nan invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "appExcludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleMfaAppExclude:RuleMfaAppExclude"
                    },
                    "description": "Applications to exclude in discovery rule. **IMPORTANT**: this field is only available in Classic Organizations. - 'id'\n- (Optional) Use if 'type' is 'APP' to indicate the application id to include. - 'name' - (Optional) Use if the 'type'\nis 'APP_TYPE' to indicate the type of application(s) to include in instances where an entire group (i.e. 'yahoo_mail')\nof applications should be included. - 'type' - (Required) One of: 'APP', 'APP_TYPE'\n"
                },
                "appIncludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleMfaAppInclude:RuleMfaAppInclude"
                    },
                    "description": "Applications to include in discovery rule. **IMPORTANT**: this field is only available in Classic Organizations. - 'id'\n- (Optional) Use if 'type' is 'APP' to indicate the application id to include. - 'name' - (Optional) Use if the 'type'\nis 'APP_TYPE' to indicate the type of application(s) to include in instances where an entire group (i.e. 'yahoo_mail')\nof applications should be included. - 'type' - (Required) One of: 'APP', 'APP_TYPE'\n"
                },
                "enroll": {
                    "type": "string",
                    "description": "When a user should be prompted for MFA. It can be `CHALLENGE`, `LOGIN`, or `NEVER`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name\n",
                    "willReplaceOnChanges": true
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to exclude.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to include.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n",
                    "willReplaceOnChanges": true
                },
                "priority": {
                    "type": "integer",
                    "description": "Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if\nan invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RuleMfa resources.\n",
                "properties": {
                    "appExcludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleMfaAppExclude:RuleMfaAppExclude"
                        },
                        "description": "Applications to exclude in discovery rule. **IMPORTANT**: this field is only available in Classic Organizations. - 'id'\n- (Optional) Use if 'type' is 'APP' to indicate the application id to include. - 'name' - (Optional) Use if the 'type'\nis 'APP_TYPE' to indicate the type of application(s) to include in instances where an entire group (i.e. 'yahoo_mail')\nof applications should be included. - 'type' - (Required) One of: 'APP', 'APP_TYPE'\n"
                    },
                    "appIncludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleMfaAppInclude:RuleMfaAppInclude"
                        },
                        "description": "Applications to include in discovery rule. **IMPORTANT**: this field is only available in Classic Organizations. - 'id'\n- (Optional) Use if 'type' is 'APP' to indicate the application id to include. - 'name' - (Optional) Use if the 'type'\nis 'APP_TYPE' to indicate the type of application(s) to include in instances where an entire group (i.e. 'yahoo_mail')\nof applications should be included. - 'type' - (Required) One of: 'APP', 'APP_TYPE'\n"
                    },
                    "enroll": {
                        "type": "string",
                        "description": "When a user should be prompted for MFA. It can be `CHALLENGE`, `LOGIN`, or `NEVER`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Rule Name\n",
                        "willReplaceOnChanges": true
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to exclude.\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to include.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Policy ID of the Rule\n",
                        "willReplaceOnChanges": true
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if\nan invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                    },
                    "usersExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of User IDs to Exclude\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/rulePassword:RulePassword": {
            "description": "Creates a Password Policy Rule. This resource allows you to create and configure a Password Policy Rule.\n\n## Import\n\n```sh\n$ pulumi import okta:policy/rulePassword:RulePassword example \u003cpolicy_id\u003e/\u003crule_id\u003e\n```\n\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to exclude.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to include.\n"
                },
                "passwordChange": {
                    "type": "string",
                    "description": "Allow or deny a user to change their password: `ALLOW` or `DENY`. Default: `ALLOW`\n"
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Allow or deny a user to reset their password: `ALLOW` or `DENY`. Default: `ALLOW`\n"
                },
                "passwordUnlock": {
                    "type": "string",
                    "description": "Allow or deny a user to unlock. Default: `DENY`\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if an invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name\n",
                    "willReplaceOnChanges": true
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to exclude.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to include.\n"
                },
                "passwordChange": {
                    "type": "string",
                    "description": "Allow or deny a user to change their password: `ALLOW` or `DENY`. Default: `ALLOW`\n"
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Allow or deny a user to reset their password: `ALLOW` or `DENY`. Default: `ALLOW`\n"
                },
                "passwordUnlock": {
                    "type": "string",
                    "description": "Allow or deny a user to unlock. Default: `DENY`\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n",
                    "willReplaceOnChanges": true
                },
                "priority": {
                    "type": "integer",
                    "description": "Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if an invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RulePassword resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Policy Rule Name\n",
                        "willReplaceOnChanges": true
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to exclude.\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to include.\n"
                    },
                    "passwordChange": {
                        "type": "string",
                        "description": "Allow or deny a user to change their password: `ALLOW` or `DENY`. Default: `ALLOW`\n"
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Allow or deny a user to reset their password: `ALLOW` or `DENY`. Default: `ALLOW`\n"
                    },
                    "passwordUnlock": {
                        "type": "string",
                        "description": "Allow or deny a user to unlock. Default: `DENY`\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Policy ID of the Rule\n",
                        "willReplaceOnChanges": true
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if an invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                    },
                    "usersExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of User IDs to Exclude\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/ruleSignon:RuleSignon": {
            "description": "Creates a Sign On Policy Rule. In case `Invalid condition type specified: riskScore.` error is thrown, set `risc_level` to an empty string, since this feature is not enabled.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = new okta.policy.Signon(\"test\", {\n    name: \"Example Policy\",\n    status: \"ACTIVE\",\n    description: \"Example Policy\",\n});\nconst newCity = okta.getBehaviour({\n    name: \"New City\",\n});\nconst example = new okta.policy.RuleSignon(\"example\", {\n    access: \"CHALLENGE\",\n    authtype: \"RADIUS\",\n    name: \"Example Policy Rule\",\n    networkConnection: \"ANYWHERE\",\n    policyId: exampleOktaPolicySignon.id,\n    status: \"ACTIVE\",\n    riscLevel: \"HIGH\",\n    behaviors: [newCity.then(newCity =\u003e newCity.id)],\n    factorSequences: [\n        {\n            primaryCriteriaFactorType: \"token:hotp\",\n            primaryCriteriaProvider: \"CUSTOM\",\n            secondaryCriterias: [\n                {\n                    factorType: \"token:software:totp\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"push\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"password\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"question\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"sms\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"token:software:totp\",\n                    provider: \"GOOGLE\",\n                },\n                {\n                    factorType: \"email\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"call\",\n                    provider: \"OKTA\",\n                },\n                {\n                    factorType: \"webauthn\",\n                    provider: \"FIDO\",\n                },\n                {\n                    factorType: \"token\",\n                    provider: \"RSA\",\n                },\n                {\n                    factorType: \"token\",\n                    provider: \"SYMANTEC\",\n                },\n            ],\n        },\n        {\n            primaryCriteriaFactorType: \"token:software:totp\",\n            primaryCriteriaProvider: \"OKTA\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.policy.Signon(\"test\",\n    name=\"Example Policy\",\n    status=\"ACTIVE\",\n    description=\"Example Policy\")\nnew_city = okta.get_behaviour(name=\"New City\")\nexample = okta.policy.RuleSignon(\"example\",\n    access=\"CHALLENGE\",\n    authtype=\"RADIUS\",\n    name=\"Example Policy Rule\",\n    network_connection=\"ANYWHERE\",\n    policy_id=example_okta_policy_signon[\"id\"],\n    status=\"ACTIVE\",\n    risc_level=\"HIGH\",\n    behaviors=[new_city.id],\n    factor_sequences=[\n        {\n            \"primary_criteria_factor_type\": \"token:hotp\",\n            \"primary_criteria_provider\": \"CUSTOM\",\n            \"secondary_criterias\": [\n                {\n                    \"factor_type\": \"token:software:totp\",\n                    \"provider\": \"OKTA\",\n                },\n                {\n                    \"factor_type\": \"push\",\n                    \"provider\": \"OKTA\",\n                },\n                {\n                    \"factor_type\": \"password\",\n                    \"provider\": \"OKTA\",\n                },\n                {\n                    \"factor_type\": \"question\",\n                    \"provider\": \"OKTA\",\n                },\n                {\n                    \"factor_type\": \"sms\",\n                    \"provider\": \"OKTA\",\n                },\n                {\n                    \"factor_type\": \"token:software:totp\",\n                    \"provider\": \"GOOGLE\",\n                },\n                {\n                    \"factor_type\": \"email\",\n                    \"provider\": \"OKTA\",\n                },\n                {\n                    \"factor_type\": \"call\",\n                    \"provider\": \"OKTA\",\n                },\n                {\n                    \"factor_type\": \"webauthn\",\n                    \"provider\": \"FIDO\",\n                },\n                {\n                    \"factor_type\": \"token\",\n                    \"provider\": \"RSA\",\n                },\n                {\n                    \"factor_type\": \"token\",\n                    \"provider\": \"SYMANTEC\",\n                },\n            ],\n        },\n        {\n            \"primary_criteria_factor_type\": \"token:software:totp\",\n            \"primary_criteria_provider\": \"OKTA\",\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Okta.Policy.Signon(\"test\", new()\n    {\n        Name = \"Example Policy\",\n        Status = \"ACTIVE\",\n        Description = \"Example Policy\",\n    });\n\n    var newCity = Okta.GetBehaviour.Invoke(new()\n    {\n        Name = \"New City\",\n    });\n\n    var example = new Okta.Policy.RuleSignon(\"example\", new()\n    {\n        Access = \"CHALLENGE\",\n        Authtype = \"RADIUS\",\n        Name = \"Example Policy Rule\",\n        NetworkConnection = \"ANYWHERE\",\n        PolicyId = exampleOktaPolicySignon.Id,\n        Status = \"ACTIVE\",\n        RiscLevel = \"HIGH\",\n        Behaviors = new[]\n        {\n            newCity.Apply(getBehaviourResult =\u003e getBehaviourResult.Id),\n        },\n        FactorSequences = new[]\n        {\n            new Okta.Policy.Inputs.RuleSignonFactorSequenceArgs\n            {\n                PrimaryCriteriaFactorType = \"token:hotp\",\n                PrimaryCriteriaProvider = \"CUSTOM\",\n                SecondaryCriterias = new[]\n                {\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"token:software:totp\",\n                        Provider = \"OKTA\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"push\",\n                        Provider = \"OKTA\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"password\",\n                        Provider = \"OKTA\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"question\",\n                        Provider = \"OKTA\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"sms\",\n                        Provider = \"OKTA\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"token:software:totp\",\n                        Provider = \"GOOGLE\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"email\",\n                        Provider = \"OKTA\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"call\",\n                        Provider = \"OKTA\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"webauthn\",\n                        Provider = \"FIDO\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"token\",\n                        Provider = \"RSA\",\n                    },\n                    new Okta.Policy.Inputs.RuleSignonFactorSequenceSecondaryCriteriaArgs\n                    {\n                        FactorType = \"token\",\n                        Provider = \"SYMANTEC\",\n                    },\n                },\n            },\n            new Okta.Policy.Inputs.RuleSignonFactorSequenceArgs\n            {\n                PrimaryCriteriaFactorType = \"token:software:totp\",\n                PrimaryCriteriaProvider = \"OKTA\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.NewSignon(ctx, \"test\", \u0026policy.SignonArgs{\n\t\t\tName:        pulumi.String(\"Example Policy\"),\n\t\t\tStatus:      pulumi.String(\"ACTIVE\"),\n\t\t\tDescription: pulumi.String(\"Example Policy\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tnewCity, err := okta.LookupBehaviour(ctx, \u0026okta.LookupBehaviourArgs{\n\t\t\tName: pulumi.StringRef(\"New City\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = policy.NewRuleSignon(ctx, \"example\", \u0026policy.RuleSignonArgs{\n\t\t\tAccess:            pulumi.String(\"CHALLENGE\"),\n\t\t\tAuthtype:          pulumi.String(\"RADIUS\"),\n\t\t\tName:              pulumi.String(\"Example Policy Rule\"),\n\t\t\tNetworkConnection: pulumi.String(\"ANYWHERE\"),\n\t\t\tPolicyId:          pulumi.Any(exampleOktaPolicySignon.Id),\n\t\t\tStatus:            pulumi.String(\"ACTIVE\"),\n\t\t\tRiscLevel:         pulumi.String(\"HIGH\"),\n\t\t\tBehaviors: pulumi.StringArray{\n\t\t\t\tpulumi.String(newCity.Id),\n\t\t\t},\n\t\t\tFactorSequences: policy.RuleSignonFactorSequenceArray{\n\t\t\t\t\u0026policy.RuleSignonFactorSequenceArgs{\n\t\t\t\t\tPrimaryCriteriaFactorType: pulumi.String(\"token:hotp\"),\n\t\t\t\t\tPrimaryCriteriaProvider:   pulumi.String(\"CUSTOM\"),\n\t\t\t\t\tSecondaryCriterias: policy.RuleSignonFactorSequenceSecondaryCriteriaArray{\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"token:software:totp\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"OKTA\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"push\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"OKTA\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"password\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"OKTA\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"question\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"OKTA\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"sms\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"OKTA\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"token:software:totp\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"GOOGLE\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"email\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"OKTA\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"call\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"OKTA\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"webauthn\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"FIDO\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"token\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"RSA\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026policy.RuleSignonFactorSequenceSecondaryCriteriaArgs{\n\t\t\t\t\t\t\tFactorType: pulumi.String(\"token\"),\n\t\t\t\t\t\t\tProvider:   pulumi.String(\"SYMANTEC\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026policy.RuleSignonFactorSequenceArgs{\n\t\t\t\t\tPrimaryCriteriaFactorType: pulumi.String(\"token:software:totp\"),\n\t\t\t\t\tPrimaryCriteriaProvider:   pulumi.String(\"OKTA\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.Signon;\nimport com.pulumi.okta.policy.SignonArgs;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetBehaviourArgs;\nimport com.pulumi.okta.policy.RuleSignon;\nimport com.pulumi.okta.policy.RuleSignonArgs;\nimport com.pulumi.okta.policy.inputs.RuleSignonFactorSequenceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new Signon(\"test\", SignonArgs.builder()\n            .name(\"Example Policy\")\n            .status(\"ACTIVE\")\n            .description(\"Example Policy\")\n            .build());\n\n        final var newCity = OktaFunctions.getBehaviour(GetBehaviourArgs.builder()\n            .name(\"New City\")\n            .build());\n\n        var example = new RuleSignon(\"example\", RuleSignonArgs.builder()\n            .access(\"CHALLENGE\")\n            .authtype(\"RADIUS\")\n            .name(\"Example Policy Rule\")\n            .networkConnection(\"ANYWHERE\")\n            .policyId(exampleOktaPolicySignon.id())\n            .status(\"ACTIVE\")\n            .riscLevel(\"HIGH\")\n            .behaviors(newCity.id())\n            .factorSequences(            \n                RuleSignonFactorSequenceArgs.builder()\n                    .primaryCriteriaFactorType(\"token:hotp\")\n                    .primaryCriteriaProvider(\"CUSTOM\")\n                    .secondaryCriterias(                    \n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"token:software:totp\")\n                            .provider(\"OKTA\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"push\")\n                            .provider(\"OKTA\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"password\")\n                            .provider(\"OKTA\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"question\")\n                            .provider(\"OKTA\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"sms\")\n                            .provider(\"OKTA\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"token:software:totp\")\n                            .provider(\"GOOGLE\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"email\")\n                            .provider(\"OKTA\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"call\")\n                            .provider(\"OKTA\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"webauthn\")\n                            .provider(\"FIDO\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"token\")\n                            .provider(\"RSA\")\n                            .build(),\n                        RuleSignonFactorSequenceSecondaryCriteriaArgs.builder()\n                            .factorType(\"token\")\n                            .provider(\"SYMANTEC\")\n                            .build())\n                    .build(),\n                RuleSignonFactorSequenceArgs.builder()\n                    .primaryCriteriaFactorType(\"token:software:totp\")\n                    .primaryCriteriaProvider(\"OKTA\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: okta:policy:Signon\n    properties:\n      name: Example Policy\n      status: ACTIVE\n      description: Example Policy\n  example:\n    type: okta:policy:RuleSignon\n    properties:\n      access: CHALLENGE\n      authtype: RADIUS\n      name: Example Policy Rule\n      networkConnection: ANYWHERE\n      policyId: ${exampleOktaPolicySignon.id}\n      status: ACTIVE\n      riscLevel: HIGH\n      behaviors:\n        - ${newCity.id}\n      factorSequences:\n        - primaryCriteriaFactorType: token:hotp\n          primaryCriteriaProvider: CUSTOM\n          secondaryCriterias:\n            - factorType: token:software:totp\n              provider: OKTA\n            - factorType: push\n              provider: OKTA\n            - factorType: password\n              provider: OKTA\n            - factorType: question\n              provider: OKTA\n            - factorType: sms\n              provider: OKTA\n            - factorType: token:software:totp\n              provider: GOOGLE\n            - factorType: email\n              provider: OKTA\n            - factorType: call\n              provider: OKTA\n            - factorType: webauthn\n              provider: FIDO\n            - factorType: token\n              provider: RSA\n            - factorType: token\n              provider: SYMANTEC\n        - primaryCriteriaFactorType: token:software:totp\n          primaryCriteriaProvider: OKTA\nvariables:\n  newCity:\n    fn::invoke:\n      function: okta:getBehaviour\n      arguments:\n        name: New City\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:policy/ruleSignon:RuleSignon example \u003cpolicy_id\u003e/\u003crule_id\u003e\n```\n\n",
            "properties": {
                "access": {
                    "type": "string",
                    "description": "Allow or deny access based on the rule conditions: `ALLOW`, `DENY` or `CHALLENGE`. Default: `ALLOW`\n"
                },
                "authtype": {
                    "type": "string",
                    "description": "Authentication entrypoint: `ANY`, `RADIUS` or `LDAP_INTERFACE`. Default: `ANY`\n"
                },
                "behaviors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of behavior IDs\n"
                },
                "factorSequences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleSignonFactorSequence:RuleSignonFactorSequence"
                    },
                    "description": "Auth factor sequences. Should be set if 'access = \"CHALLENGE\"'. - 'primary_criteria_provider' - (Required) Primary\nprovider of the auth section. - 'primary_criteria_factor_type' - (Required) Primary factor type of the auth section. -\n'secondary_criteria' - (Optional) Additional authentication steps. - 'provider' - (Required) Provider of the additional\nauthentication step. - 'factor_type' - (Required) Factor type of the additional authentication step.\n"
                },
                "identityProvider": {
                    "type": "string",
                    "description": "Apply rule based on the IdP used: `ANY`, `OKTA` or `SPECIFIC_IDP`. Default: `ANY`. \u003e **WARNING**: Use of\n`identity_provider` requires a feature flag to be enabled.\n"
                },
                "identityProviderIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When identity_provider is `SPECIFIC_IDP` then this is the list of IdP IDs to apply the rule on\n"
                },
                "mfaLifetime": {
                    "type": "integer",
                    "description": "Elapsed time before the next MFA challenge\n"
                },
                "mfaPrompt": {
                    "type": "string",
                    "description": "Prompt for MFA based on the device used, a factor session lifetime, or every sign-on attempt: `DEVICE`, `SESSION`\nor`ALWAYS`.\n"
                },
                "mfaRememberDevice": {
                    "type": "boolean",
                    "description": "Remember MFA device. Default: `false`\n"
                },
                "mfaRequired": {
                    "type": "boolean",
                    "description": "Require MFA. Default: `false`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name\n"
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to exclude.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to include.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n"
                },
                "primaryFactor": {
                    "type": "string",
                    "description": "Rule's primary factor. **WARNING** Ony works as a part of the Identity Engine. Valid values: `PASSWORD_IDP_ANY_FACTOR`,\n`PASSWORD_IDP`.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if\nan invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                },
                "riscLevel": {
                    "type": "string",
                    "description": "Risc level: ANY, LOW, MEDIUM or HIGH. Default: `ANY`\n",
                    "deprecationMessage": "Attribute typo, switch to risk_level instead. Default: `ANY`"
                },
                "riskLevel": {
                    "type": "string",
                    "description": "Risk level: ANY, LOW, MEDIUM or HIGH. Default: `ANY`\n"
                },
                "sessionIdle": {
                    "type": "integer",
                    "description": "Max minutes a session can be idle. Default: `120`\n"
                },
                "sessionLifetime": {
                    "type": "integer",
                    "description": "Max minutes a session is active: Disable = 0. Default: `120`\n"
                },
                "sessionPersistent": {
                    "type": "boolean",
                    "description": "Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session\ncookies. Default: `false`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "required": [
                "name",
                "primaryFactor"
            ],
            "inputProperties": {
                "access": {
                    "type": "string",
                    "description": "Allow or deny access based on the rule conditions: `ALLOW`, `DENY` or `CHALLENGE`. Default: `ALLOW`\n"
                },
                "authtype": {
                    "type": "string",
                    "description": "Authentication entrypoint: `ANY`, `RADIUS` or `LDAP_INTERFACE`. Default: `ANY`\n"
                },
                "behaviors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of behavior IDs\n"
                },
                "factorSequences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:policy/RuleSignonFactorSequence:RuleSignonFactorSequence"
                    },
                    "description": "Auth factor sequences. Should be set if 'access = \"CHALLENGE\"'. - 'primary_criteria_provider' - (Required) Primary\nprovider of the auth section. - 'primary_criteria_factor_type' - (Required) Primary factor type of the auth section. -\n'secondary_criteria' - (Optional) Additional authentication steps. - 'provider' - (Required) Provider of the additional\nauthentication step. - 'factor_type' - (Required) Factor type of the additional authentication step.\n"
                },
                "identityProvider": {
                    "type": "string",
                    "description": "Apply rule based on the IdP used: `ANY`, `OKTA` or `SPECIFIC_IDP`. Default: `ANY`. \u003e **WARNING**: Use of\n`identity_provider` requires a feature flag to be enabled.\n"
                },
                "identityProviderIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When identity_provider is `SPECIFIC_IDP` then this is the list of IdP IDs to apply the rule on\n"
                },
                "mfaLifetime": {
                    "type": "integer",
                    "description": "Elapsed time before the next MFA challenge\n"
                },
                "mfaPrompt": {
                    "type": "string",
                    "description": "Prompt for MFA based on the device used, a factor session lifetime, or every sign-on attempt: `DEVICE`, `SESSION`\nor`ALWAYS`.\n"
                },
                "mfaRememberDevice": {
                    "type": "boolean",
                    "description": "Remember MFA device. Default: `false`\n"
                },
                "mfaRequired": {
                    "type": "boolean",
                    "description": "Require MFA. Default: `false`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Rule Name\n",
                    "willReplaceOnChanges": true
                },
                "networkConnection": {
                    "type": "string",
                    "description": "Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`\n"
                },
                "networkExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to exclude.\n"
                },
                "networkIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to include.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID of the Rule\n",
                    "willReplaceOnChanges": true
                },
                "primaryFactor": {
                    "type": "string",
                    "description": "Rule's primary factor. **WARNING** Ony works as a part of the Identity Engine. Valid values: `PASSWORD_IDP_ANY_FACTOR`,\n`PASSWORD_IDP`.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if\nan invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                },
                "riscLevel": {
                    "type": "string",
                    "description": "Risc level: ANY, LOW, MEDIUM or HIGH. Default: `ANY`\n",
                    "deprecationMessage": "Attribute typo, switch to risk_level instead. Default: `ANY`"
                },
                "riskLevel": {
                    "type": "string",
                    "description": "Risk level: ANY, LOW, MEDIUM or HIGH. Default: `ANY`\n"
                },
                "sessionIdle": {
                    "type": "integer",
                    "description": "Max minutes a session can be idle. Default: `120`\n"
                },
                "sessionLifetime": {
                    "type": "integer",
                    "description": "Max minutes a session is active: Disable = 0. Default: `120`\n"
                },
                "sessionPersistent": {
                    "type": "boolean",
                    "description": "Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session\ncookies. Default: `false`\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                },
                "usersExcludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of User IDs to Exclude\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RuleSignon resources.\n",
                "properties": {
                    "access": {
                        "type": "string",
                        "description": "Allow or deny access based on the rule conditions: `ALLOW`, `DENY` or `CHALLENGE`. Default: `ALLOW`\n"
                    },
                    "authtype": {
                        "type": "string",
                        "description": "Authentication entrypoint: `ANY`, `RADIUS` or `LDAP_INTERFACE`. Default: `ANY`\n"
                    },
                    "behaviors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of behavior IDs\n"
                    },
                    "factorSequences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:policy/RuleSignonFactorSequence:RuleSignonFactorSequence"
                        },
                        "description": "Auth factor sequences. Should be set if 'access = \"CHALLENGE\"'. - 'primary_criteria_provider' - (Required) Primary\nprovider of the auth section. - 'primary_criteria_factor_type' - (Required) Primary factor type of the auth section. -\n'secondary_criteria' - (Optional) Additional authentication steps. - 'provider' - (Required) Provider of the additional\nauthentication step. - 'factor_type' - (Required) Factor type of the additional authentication step.\n"
                    },
                    "identityProvider": {
                        "type": "string",
                        "description": "Apply rule based on the IdP used: `ANY`, `OKTA` or `SPECIFIC_IDP`. Default: `ANY`. \u003e **WARNING**: Use of\n`identity_provider` requires a feature flag to be enabled.\n"
                    },
                    "identityProviderIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "When identity_provider is `SPECIFIC_IDP` then this is the list of IdP IDs to apply the rule on\n"
                    },
                    "mfaLifetime": {
                        "type": "integer",
                        "description": "Elapsed time before the next MFA challenge\n"
                    },
                    "mfaPrompt": {
                        "type": "string",
                        "description": "Prompt for MFA based on the device used, a factor session lifetime, or every sign-on attempt: `DEVICE`, `SESSION`\nor`ALWAYS`.\n"
                    },
                    "mfaRememberDevice": {
                        "type": "boolean",
                        "description": "Remember MFA device. Default: `false`\n"
                    },
                    "mfaRequired": {
                        "type": "boolean",
                        "description": "Require MFA. Default: `false`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Rule Name\n",
                        "willReplaceOnChanges": true
                    },
                    "networkConnection": {
                        "type": "string",
                        "description": "Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`\n"
                    },
                    "networkExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to exclude.\n"
                    },
                    "networkIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required if `network_connection` = `ZONE`. Indicates the network zones to include.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Policy ID of the Rule\n",
                        "willReplaceOnChanges": true
                    },
                    "primaryFactor": {
                        "type": "string",
                        "description": "Rule's primary factor. **WARNING** Ony works as a part of the Identity Engine. Valid values: `PASSWORD_IDP_ANY_FACTOR`,\n`PASSWORD_IDP`.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if\nan invalid property is provided. The Okta API defaults to the last (lowest) if not provided.\n"
                    },
                    "riscLevel": {
                        "type": "string",
                        "description": "Risc level: ANY, LOW, MEDIUM or HIGH. Default: `ANY`\n",
                        "deprecationMessage": "Attribute typo, switch to risk_level instead. Default: `ANY`"
                    },
                    "riskLevel": {
                        "type": "string",
                        "description": "Risk level: ANY, LOW, MEDIUM or HIGH. Default: `ANY`\n"
                    },
                    "sessionIdle": {
                        "type": "integer",
                        "description": "Max minutes a session can be idle. Default: `120`\n"
                    },
                    "sessionLifetime": {
                        "type": "integer",
                        "description": "Max minutes a session is active: Disable = 0. Default: `120`\n"
                    },
                    "sessionPersistent": {
                        "type": "boolean",
                        "description": "Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session\ncookies. Default: `false`\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                    },
                    "usersExcludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of User IDs to Exclude\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:policy/signon:Signon": {
            "description": "Creates a Sign On Policy. This resource allows you to create and configure a Sign On Policy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.policy.Signon(\"example\", {\n    name: \"example\",\n    status: \"ACTIVE\",\n    description: \"Example\",\n    groupsIncludeds: [everyone.id],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.policy.Signon(\"example\",\n    name=\"example\",\n    status=\"ACTIVE\",\n    description=\"Example\",\n    groups_includeds=[everyone[\"id\"]])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Policy.Signon(\"example\", new()\n    {\n        Name = \"example\",\n        Status = \"ACTIVE\",\n        Description = \"Example\",\n        GroupsIncludeds = new[]\n        {\n            everyone.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.NewSignon(ctx, \"example\", \u0026policy.SignonArgs{\n\t\t\tName:        pulumi.String(\"example\"),\n\t\t\tStatus:      pulumi.String(\"ACTIVE\"),\n\t\t\tDescription: pulumi.String(\"Example\"),\n\t\t\tGroupsIncludeds: pulumi.StringArray{\n\t\t\t\teveryone.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.Signon;\nimport com.pulumi.okta.policy.SignonArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Signon(\"example\", SignonArgs.builder()\n            .name(\"example\")\n            .status(\"ACTIVE\")\n            .description(\"Example\")\n            .groupsIncludeds(everyone.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:policy:Signon\n    properties:\n      name: example\n      status: ACTIVE\n      description: Example\n      groupsIncludeds:\n        - ${everyone.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:policy/signon:Signon example \u003cpolicy_id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Policy Description\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Policy Description\n"
                },
                "groupsIncludeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs to Include\n"
                },
                "name": {
                    "type": "string",
                    "description": "Policy Name\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Policy Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Signon resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Policy Description\n"
                    },
                    "groupsIncludeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Group IDs to Include\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Policy Name\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Policy Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:profile/mapping:Mapping": {
            "description": "Manages a profile mapping. This resource allows you to manage a profile mapping by source and target IDs. \u003e **NOTE:** If using this resource with OAuth2 scopes, this resource requires `okta.profileMappings.manage` scope.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst user = okta.user.getUserProfileMappingSource({});\nconst example = new okta.profile.Mapping(\"example\", {\n    sourceId: \"\u003csource id\u003e\",\n    targetId: user.then(user =\u003e user.id),\n    deleteWhenAbsent: true,\n    mappings: [\n        {\n            id: \"firstName\",\n            expression: \"appuser.firstName\",\n        },\n        {\n            id: \"lastName\",\n            expression: \"appuser.lastName\",\n        },\n        {\n            id: \"email\",\n            expression: \"appuser.email\",\n        },\n        {\n            id: \"login\",\n            expression: \"appuser.email\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nuser = okta.user.get_user_profile_mapping_source()\nexample = okta.profile.Mapping(\"example\",\n    source_id=\"\u003csource id\u003e\",\n    target_id=user.id,\n    delete_when_absent=True,\n    mappings=[\n        {\n            \"id\": \"firstName\",\n            \"expression\": \"appuser.firstName\",\n        },\n        {\n            \"id\": \"lastName\",\n            \"expression\": \"appuser.lastName\",\n        },\n        {\n            \"id\": \"email\",\n            \"expression\": \"appuser.email\",\n        },\n        {\n            \"id\": \"login\",\n            \"expression\": \"appuser.email\",\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = Okta.User.GetUserProfileMappingSource.Invoke();\n\n    var example = new Okta.Profile.Mapping(\"example\", new()\n    {\n        SourceId = \"\u003csource id\u003e\",\n        TargetId = user.Apply(getUserProfileMappingSourceResult =\u003e getUserProfileMappingSourceResult.Id),\n        DeleteWhenAbsent = true,\n        Mappings = new[]\n        {\n            new Okta.Profile.Inputs.MappingMappingArgs\n            {\n                Id = \"firstName\",\n                Expression = \"appuser.firstName\",\n            },\n            new Okta.Profile.Inputs.MappingMappingArgs\n            {\n                Id = \"lastName\",\n                Expression = \"appuser.lastName\",\n            },\n            new Okta.Profile.Inputs.MappingMappingArgs\n            {\n                Id = \"email\",\n                Expression = \"appuser.email\",\n            },\n            new Okta.Profile.Inputs.MappingMappingArgs\n            {\n                Id = \"login\",\n                Expression = \"appuser.email\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/profile\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tuser, err := user.GetUserProfileMappingSource(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = profile.NewMapping(ctx, \"example\", \u0026profile.MappingArgs{\n\t\t\tSourceId:         pulumi.String(\"\u003csource id\u003e\"),\n\t\t\tTargetId:         pulumi.String(user.Id),\n\t\t\tDeleteWhenAbsent: pulumi.Bool(true),\n\t\t\tMappings: profile.MappingMappingArray{\n\t\t\t\t\u0026profile.MappingMappingArgs{\n\t\t\t\t\tId:         pulumi.String(\"firstName\"),\n\t\t\t\t\tExpression: pulumi.String(\"appuser.firstName\"),\n\t\t\t\t},\n\t\t\t\t\u0026profile.MappingMappingArgs{\n\t\t\t\t\tId:         pulumi.String(\"lastName\"),\n\t\t\t\t\tExpression: pulumi.String(\"appuser.lastName\"),\n\t\t\t\t},\n\t\t\t\t\u0026profile.MappingMappingArgs{\n\t\t\t\t\tId:         pulumi.String(\"email\"),\n\t\t\t\t\tExpression: pulumi.String(\"appuser.email\"),\n\t\t\t\t},\n\t\t\t\t\u0026profile.MappingMappingArgs{\n\t\t\t\t\tId:         pulumi.String(\"login\"),\n\t\t\t\t\tExpression: pulumi.String(\"appuser.email\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.UserFunctions;\nimport com.pulumi.okta.profile.Mapping;\nimport com.pulumi.okta.profile.MappingArgs;\nimport com.pulumi.okta.profile.inputs.MappingMappingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = UserFunctions.getUserProfileMappingSource(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);\n\n        var example = new Mapping(\"example\", MappingArgs.builder()\n            .sourceId(\"\u003csource id\u003e\")\n            .targetId(user.id())\n            .deleteWhenAbsent(true)\n            .mappings(            \n                MappingMappingArgs.builder()\n                    .id(\"firstName\")\n                    .expression(\"appuser.firstName\")\n                    .build(),\n                MappingMappingArgs.builder()\n                    .id(\"lastName\")\n                    .expression(\"appuser.lastName\")\n                    .build(),\n                MappingMappingArgs.builder()\n                    .id(\"email\")\n                    .expression(\"appuser.email\")\n                    .build(),\n                MappingMappingArgs.builder()\n                    .id(\"login\")\n                    .expression(\"appuser.email\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:profile:Mapping\n    properties:\n      sourceId: \u003csource id\u003e\n      targetId: ${user.id}\n      deleteWhenAbsent: true\n      mappings:\n        - id: firstName\n          expression: appuser.firstName\n        - id: lastName\n          expression: appuser.lastName\n        - id: email\n          expression: appuser.email\n        - id: login\n          expression: appuser.email\nvariables:\n  user:\n    fn::invoke:\n      function: okta:user:getUserProfileMappingSource\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "alwaysApply": {
                    "type": "boolean",
                    "description": "Whether apply the changes to all users with this profile after updating or creating the these mappings.\n\u003e **WARNING:**: 'always*apply' is incompatible with OAuth 2.0 authentication and will be ignored when using that type of authentication.\n\u003e **WARNING:** 'always*apply' makes use of an internal/private Okta API endpoint that could change without notice rendering this resource inoperable.\n"
                },
                "deleteWhenAbsent": {
                    "type": "boolean",
                    "description": "When turned on this flag will trigger the provider to delete mapping properties that are not defined in config. By default, we do not delete missing properties.\n"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:profile/MappingMapping:MappingMapping"
                    }
                },
                "sourceId": {
                    "type": "string",
                    "description": "The source id of the mapping to manage.\n"
                },
                "sourceName": {
                    "type": "string",
                    "description": "Name of the mapping source.\n"
                },
                "sourceType": {
                    "type": "string",
                    "description": "ID of the mapping source.\n"
                },
                "targetId": {
                    "type": "string",
                    "description": "The target id of the mapping to manage.\n"
                },
                "targetName": {
                    "type": "string",
                    "description": "Name of the mapping target.\n"
                },
                "targetType": {
                    "type": "string",
                    "description": "ID of the mapping target.\n"
                }
            },
            "required": [
                "sourceId",
                "sourceName",
                "sourceType",
                "targetId",
                "targetName",
                "targetType"
            ],
            "inputProperties": {
                "alwaysApply": {
                    "type": "boolean",
                    "description": "Whether apply the changes to all users with this profile after updating or creating the these mappings.\n\u003e **WARNING:**: 'always*apply' is incompatible with OAuth 2.0 authentication and will be ignored when using that type of authentication.\n\u003e **WARNING:** 'always*apply' makes use of an internal/private Okta API endpoint that could change without notice rendering this resource inoperable.\n"
                },
                "deleteWhenAbsent": {
                    "type": "boolean",
                    "description": "When turned on this flag will trigger the provider to delete mapping properties that are not defined in config. By default, we do not delete missing properties.\n"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/okta:profile/MappingMapping:MappingMapping"
                    }
                },
                "sourceId": {
                    "type": "string",
                    "description": "The source id of the mapping to manage.\n"
                },
                "targetId": {
                    "type": "string",
                    "description": "The target id of the mapping to manage.\n"
                }
            },
            "requiredInputs": [
                "sourceId",
                "targetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Mapping resources.\n",
                "properties": {
                    "alwaysApply": {
                        "type": "boolean",
                        "description": "Whether apply the changes to all users with this profile after updating or creating the these mappings.\n\u003e **WARNING:**: 'always*apply' is incompatible with OAuth 2.0 authentication and will be ignored when using that type of authentication.\n\u003e **WARNING:** 'always*apply' makes use of an internal/private Okta API endpoint that could change without notice rendering this resource inoperable.\n"
                    },
                    "deleteWhenAbsent": {
                        "type": "boolean",
                        "description": "When turned on this flag will trigger the provider to delete mapping properties that are not defined in config. By default, we do not delete missing properties.\n"
                    },
                    "mappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:profile/MappingMapping:MappingMapping"
                        }
                    },
                    "sourceId": {
                        "type": "string",
                        "description": "The source id of the mapping to manage.\n"
                    },
                    "sourceName": {
                        "type": "string",
                        "description": "Name of the mapping source.\n"
                    },
                    "sourceType": {
                        "type": "string",
                        "description": "ID of the mapping source.\n"
                    },
                    "targetId": {
                        "type": "string",
                        "description": "The target id of the mapping to manage.\n"
                    },
                    "targetName": {
                        "type": "string",
                        "description": "Name of the mapping target.\n"
                    },
                    "targetType": {
                        "type": "string",
                        "description": "ID of the mapping target.\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:trustedorigin/origin:Origin": {
            "description": "Creates a Trusted Origin. This resource allows you to create and configure a Trusted Origin.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.trustedorigin.Origin(\"example\", {\n    name: \"example\",\n    origin: \"https://example.com\",\n    scopes: [\"CORS\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.trustedorigin.Origin(\"example\",\n    name=\"example\",\n    origin=\"https://example.com\",\n    scopes=[\"CORS\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.TrustedOrigin.Origin(\"example\", new()\n    {\n        Name = \"example\",\n        OriginName = \"https://example.com\",\n        Scopes = new[]\n        {\n            \"CORS\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/trustedorigin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := trustedorigin.NewOrigin(ctx, \"example\", \u0026trustedorigin.OriginArgs{\n\t\t\tName:   pulumi.String(\"example\"),\n\t\t\tOrigin: pulumi.String(\"https://example.com\"),\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"CORS\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.trustedorigin.Origin;\nimport com.pulumi.okta.trustedorigin.OriginArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Origin(\"example\", OriginArgs.builder()\n            .name(\"example\")\n            .origin(\"https://example.com\")\n            .scopes(\"CORS\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:trustedorigin:Origin\n    properties:\n      name: example\n      origin: https://example.com\n      scopes:\n        - CORS\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:trustedorigin/origin:Origin example \u003ctrusted_origin_id\u003e\n```\n\n",
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the Trusted Origin is active or not - can only be issued post-creation. By default, it is `true`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name for this trusted origin\n"
                },
                "origin": {
                    "type": "string",
                    "description": "Unique origin URL for this trusted origin\n",
                    "language": {
                        "csharp": {
                            "name": "OriginName"
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of the Trusted Origin - can either be `CORS` and/or `REDIRECT`\n"
                }
            },
            "required": [
                "name",
                "origin",
                "scopes"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the Trusted Origin is active or not - can only be issued post-creation. By default, it is `true`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name for this trusted origin\n"
                },
                "origin": {
                    "type": "string",
                    "description": "Unique origin URL for this trusted origin\n",
                    "language": {
                        "csharp": {
                            "name": "OriginName"
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of the Trusted Origin - can either be `CORS` and/or `REDIRECT`\n"
                }
            },
            "requiredInputs": [
                "origin",
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Origin resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Whether the Trusted Origin is active or not - can only be issued post-creation. By default, it is `true`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name for this trusted origin\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "Unique origin URL for this trusted origin\n",
                        "language": {
                            "csharp": {
                                "name": "OriginName"
                            }
                        }
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Scopes of the Trusted Origin - can either be `CORS` and/or `REDIRECT`\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:user/user:User": {
            "description": "Creates an Okta User. This resource allows you to create and configure an Okta User.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\n//## Full profile:\nconst example = new okta.user.User(\"example\", {\n    firstName: \"John\",\n    lastName: \"Smith\",\n    login: \"john.smith@example.com\",\n    email: \"john.smith@example.com\",\n    city: \"New York\",\n    costCenter: \"10\",\n    countryCode: \"US\",\n    department: \"IT\",\n    displayName: \"Dr. John Smith\",\n    division: \"Acquisitions\",\n    employeeNumber: \"111111\",\n    honorificPrefix: \"Dr.\",\n    honorificSuffix: \"Jr.\",\n    locale: \"en_US\",\n    manager: \"Jimbo\",\n    managerId: \"222222\",\n    middleName: \"John\",\n    mobilePhone: \"1112223333\",\n    nickName: \"Johnny\",\n    organization: \"Testing Inc.\",\n    postalAddress: \"1234 Testing St.\",\n    preferredLanguage: \"en-us\",\n    primaryPhone: \"4445556666\",\n    profileUrl: \"https://www.example.com/profile\",\n    secondEmail: \"john.smith.fun@example.com\",\n    state: \"NY\",\n    streetAddress: \"5678 Testing Ave.\",\n    timezone: \"America/New_York\",\n    title: \"Director\",\n    userType: \"Employee\",\n    zipCode: \"11111\",\n});\n//## With Password Inline Hook:\nconst test2 = new okta.user.User(\"test2\", {\n    firstName: \"John\",\n    lastName: \"Smith\",\n    login: \"example@example.com\",\n    email: \"example@example.com\",\n    passwordInlineHook: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\n### Full profile:\nexample = okta.user.User(\"example\",\n    first_name=\"John\",\n    last_name=\"Smith\",\n    login=\"john.smith@example.com\",\n    email=\"john.smith@example.com\",\n    city=\"New York\",\n    cost_center=\"10\",\n    country_code=\"US\",\n    department=\"IT\",\n    display_name=\"Dr. John Smith\",\n    division=\"Acquisitions\",\n    employee_number=\"111111\",\n    honorific_prefix=\"Dr.\",\n    honorific_suffix=\"Jr.\",\n    locale=\"en_US\",\n    manager=\"Jimbo\",\n    manager_id=\"222222\",\n    middle_name=\"John\",\n    mobile_phone=\"1112223333\",\n    nick_name=\"Johnny\",\n    organization=\"Testing Inc.\",\n    postal_address=\"1234 Testing St.\",\n    preferred_language=\"en-us\",\n    primary_phone=\"4445556666\",\n    profile_url=\"https://www.example.com/profile\",\n    second_email=\"john.smith.fun@example.com\",\n    state=\"NY\",\n    street_address=\"5678 Testing Ave.\",\n    timezone=\"America/New_York\",\n    title=\"Director\",\n    user_type=\"Employee\",\n    zip_code=\"11111\")\n### With Password Inline Hook:\ntest2 = okta.user.User(\"test2\",\n    first_name=\"John\",\n    last_name=\"Smith\",\n    login=\"example@example.com\",\n    email=\"example@example.com\",\n    password_inline_hook=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    //## Full profile:\n    var example = new Okta.User.User(\"example\", new()\n    {\n        FirstName = \"John\",\n        LastName = \"Smith\",\n        Login = \"john.smith@example.com\",\n        Email = \"john.smith@example.com\",\n        City = \"New York\",\n        CostCenter = \"10\",\n        CountryCode = \"US\",\n        Department = \"IT\",\n        DisplayName = \"Dr. John Smith\",\n        Division = \"Acquisitions\",\n        EmployeeNumber = \"111111\",\n        HonorificPrefix = \"Dr.\",\n        HonorificSuffix = \"Jr.\",\n        Locale = \"en_US\",\n        Manager = \"Jimbo\",\n        ManagerId = \"222222\",\n        MiddleName = \"John\",\n        MobilePhone = \"1112223333\",\n        NickName = \"Johnny\",\n        Organization = \"Testing Inc.\",\n        PostalAddress = \"1234 Testing St.\",\n        PreferredLanguage = \"en-us\",\n        PrimaryPhone = \"4445556666\",\n        ProfileUrl = \"https://www.example.com/profile\",\n        SecondEmail = \"john.smith.fun@example.com\",\n        State = \"NY\",\n        StreetAddress = \"5678 Testing Ave.\",\n        Timezone = \"America/New_York\",\n        Title = \"Director\",\n        UserType = \"Employee\",\n        ZipCode = \"11111\",\n    });\n\n    //## With Password Inline Hook:\n    var test2 = new Okta.User.User(\"test2\", new()\n    {\n        FirstName = \"John\",\n        LastName = \"Smith\",\n        Login = \"example@example.com\",\n        Email = \"example@example.com\",\n        PasswordInlineHook = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// ## Full profile:\n\t\t_, err := user.NewUser(ctx, \"example\", \u0026user.UserArgs{\n\t\t\tFirstName:         pulumi.String(\"John\"),\n\t\t\tLastName:          pulumi.String(\"Smith\"),\n\t\t\tLogin:             pulumi.String(\"john.smith@example.com\"),\n\t\t\tEmail:             pulumi.String(\"john.smith@example.com\"),\n\t\t\tCity:              pulumi.String(\"New York\"),\n\t\t\tCostCenter:        pulumi.String(\"10\"),\n\t\t\tCountryCode:       pulumi.String(\"US\"),\n\t\t\tDepartment:        pulumi.String(\"IT\"),\n\t\t\tDisplayName:       pulumi.String(\"Dr. John Smith\"),\n\t\t\tDivision:          pulumi.String(\"Acquisitions\"),\n\t\t\tEmployeeNumber:    pulumi.String(\"111111\"),\n\t\t\tHonorificPrefix:   pulumi.String(\"Dr.\"),\n\t\t\tHonorificSuffix:   pulumi.String(\"Jr.\"),\n\t\t\tLocale:            pulumi.String(\"en_US\"),\n\t\t\tManager:           pulumi.String(\"Jimbo\"),\n\t\t\tManagerId:         pulumi.String(\"222222\"),\n\t\t\tMiddleName:        pulumi.String(\"John\"),\n\t\t\tMobilePhone:       pulumi.String(\"1112223333\"),\n\t\t\tNickName:          pulumi.String(\"Johnny\"),\n\t\t\tOrganization:      pulumi.String(\"Testing Inc.\"),\n\t\t\tPostalAddress:     pulumi.String(\"1234 Testing St.\"),\n\t\t\tPreferredLanguage: pulumi.String(\"en-us\"),\n\t\t\tPrimaryPhone:      pulumi.String(\"4445556666\"),\n\t\t\tProfileUrl:        pulumi.String(\"https://www.example.com/profile\"),\n\t\t\tSecondEmail:       pulumi.String(\"john.smith.fun@example.com\"),\n\t\t\tState:             pulumi.String(\"NY\"),\n\t\t\tStreetAddress:     pulumi.String(\"5678 Testing Ave.\"),\n\t\t\tTimezone:          pulumi.String(\"America/New_York\"),\n\t\t\tTitle:             pulumi.String(\"Director\"),\n\t\t\tUserType:          pulumi.String(\"Employee\"),\n\t\t\tZipCode:           pulumi.String(\"11111\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// ## With Password Inline Hook:\n\t\t_, err = user.NewUser(ctx, \"test2\", \u0026user.UserArgs{\n\t\t\tFirstName:          pulumi.String(\"John\"),\n\t\t\tLastName:           pulumi.String(\"Smith\"),\n\t\t\tLogin:              pulumi.String(\"example@example.com\"),\n\t\t\tEmail:              pulumi.String(\"example@example.com\"),\n\t\t\tPasswordInlineHook: pulumi.String(\"default\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.User;\nimport com.pulumi.okta.user.UserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        //## Full profile:\n        var example = new User(\"example\", UserArgs.builder()\n            .firstName(\"John\")\n            .lastName(\"Smith\")\n            .login(\"john.smith@example.com\")\n            .email(\"john.smith@example.com\")\n            .city(\"New York\")\n            .costCenter(\"10\")\n            .countryCode(\"US\")\n            .department(\"IT\")\n            .displayName(\"Dr. John Smith\")\n            .division(\"Acquisitions\")\n            .employeeNumber(\"111111\")\n            .honorificPrefix(\"Dr.\")\n            .honorificSuffix(\"Jr.\")\n            .locale(\"en_US\")\n            .manager(\"Jimbo\")\n            .managerId(\"222222\")\n            .middleName(\"John\")\n            .mobilePhone(\"1112223333\")\n            .nickName(\"Johnny\")\n            .organization(\"Testing Inc.\")\n            .postalAddress(\"1234 Testing St.\")\n            .preferredLanguage(\"en-us\")\n            .primaryPhone(\"4445556666\")\n            .profileUrl(\"https://www.example.com/profile\")\n            .secondEmail(\"john.smith.fun@example.com\")\n            .state(\"NY\")\n            .streetAddress(\"5678 Testing Ave.\")\n            .timezone(\"America/New_York\")\n            .title(\"Director\")\n            .userType(\"Employee\")\n            .zipCode(\"11111\")\n            .build());\n\n        //## With Password Inline Hook:\n        var test2 = new User(\"test2\", UserArgs.builder()\n            .firstName(\"John\")\n            .lastName(\"Smith\")\n            .login(\"example@example.com\")\n            .email(\"example@example.com\")\n            .passwordInlineHook(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  ### Full profile:\n  example:\n    type: okta:user:User\n    properties:\n      firstName: John\n      lastName: Smith\n      login: john.smith@example.com\n      email: john.smith@example.com\n      city: New York\n      costCenter: '10'\n      countryCode: US\n      department: IT\n      displayName: Dr. John Smith\n      division: Acquisitions\n      employeeNumber: '111111'\n      honorificPrefix: Dr.\n      honorificSuffix: Jr.\n      locale: en_US\n      manager: Jimbo\n      managerId: '222222'\n      middleName: John\n      mobilePhone: '1112223333'\n      nickName: Johnny\n      organization: Testing Inc.\n      postalAddress: 1234 Testing St.\n      preferredLanguage: en-us\n      primaryPhone: '4445556666'\n      profileUrl: https://www.example.com/profile\n      secondEmail: john.smith.fun@example.com\n      state: NY\n      streetAddress: 5678 Testing Ave.\n      timezone: America/New_York\n      title: Director\n      userType: Employee\n      zipCode: '11111'\n  ### With Password Inline Hook:\n  test2:\n    type: okta:user:User\n    properties:\n      firstName: John\n      lastName: Smith\n      login: example@example.com\n      email: example@example.com\n      passwordInlineHook: default\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:user/user:User example \u003cuser_id\u003e\n```\n\n",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "User city\n"
                },
                "costCenter": {
                    "type": "string",
                    "description": "User cost center\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "User country code\n"
                },
                "customProfileAttributes": {
                    "type": "string",
                    "description": "JSON formatted custom attributes for a user. It must be JSON due to various types Okta allows. You must first add the custom property to the user profile schema before you reference it. You can use the Profile Editor in the Admin Console or the [Schemas](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UISchema/#tag/UISchema) API to manage schema extensions.\n"
                },
                "customProfileAttributesToIgnores": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "department": {
                    "type": "string",
                    "description": "User department\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User display name, suitable to show end users\n"
                },
                "division": {
                    "type": "string",
                    "description": "User division\n"
                },
                "email": {
                    "type": "string",
                    "description": "User primary email address\n"
                },
                "employeeNumber": {
                    "type": "string",
                    "description": "User employee number\n"
                },
                "expirePasswordOnCreate": {
                    "type": "boolean",
                    "description": "If set to `true`, the user will have to change the password at the next login. This property will be used when user is being created and works only when `password` field is set. Default: `false`\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "User first name\n"
                },
                "honorificPrefix": {
                    "type": "string",
                    "description": "User honorific prefix\n"
                },
                "honorificSuffix": {
                    "type": "string",
                    "description": "User honorific suffix\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "User last name\n"
                },
                "locale": {
                    "type": "string",
                    "description": "User default location\n"
                },
                "login": {
                    "type": "string",
                    "description": "User Okta login\n"
                },
                "manager": {
                    "type": "string",
                    "description": "Manager of User\n"
                },
                "managerId": {
                    "type": "string",
                    "description": "Manager ID of User\n"
                },
                "middleName": {
                    "type": "string",
                    "description": "User middle name\n"
                },
                "mobilePhone": {
                    "type": "string",
                    "description": "User mobile phone number\n"
                },
                "nickName": {
                    "type": "string",
                    "description": "User nickname\n"
                },
                "oldPassword": {
                    "type": "string",
                    "description": "Old User Password. Should be only set in case the password was not changed using the provider. fter successful password change this field should be removed and `password` field should be used for further changes.\n",
                    "secret": true
                },
                "organization": {
                    "type": "string",
                    "description": "User organization\n"
                },
                "password": {
                    "type": "string",
                    "description": "User Password\n",
                    "secret": true
                },
                "passwordHash": {
                    "$ref": "#/types/okta:user/UserPasswordHash:UserPasswordHash",
                    "description": "Specifies a hashed password to import into Okta.\n"
                },
                "passwordInlineHook": {
                    "type": "string",
                    "description": "Specifies that a Password Import Inline Hook should be triggered to handle verification of the user's password the first time the user logs in. This allows an existing password to be imported into Okta directly from some other store. When updating a user with a password hook the user must be in the `STAGED` status. The `password` field should not be specified when using Password Import Inline Hook.\n"
                },
                "postalAddress": {
                    "type": "string",
                    "description": "User mailing address\n"
                },
                "preferredLanguage": {
                    "type": "string",
                    "description": "User preferred language\n"
                },
                "primaryPhone": {
                    "type": "string",
                    "description": "User primary phone number\n"
                },
                "profileUrl": {
                    "type": "string",
                    "description": "User online profile (web page)\n"
                },
                "rawStatus": {
                    "type": "string",
                    "description": "The raw status of the User in Okta - (status is mapped)\n"
                },
                "recoveryAnswer": {
                    "type": "string",
                    "description": "User Password Recovery Answer\n",
                    "secret": true
                },
                "recoveryQuestion": {
                    "type": "string",
                    "description": "User Password Recovery Question\n"
                },
                "secondEmail": {
                    "type": "string",
                    "description": "User secondary email address, used for account recovery\n"
                },
                "skipRoles": {
                    "type": "boolean",
                    "description": "Do not populate user roles information (prevents additional API call)\n",
                    "deprecationMessage": "Because admin_roles has been removed, this attribute is a no op and will be removed"
                },
                "state": {
                    "type": "string",
                    "description": "User state or region\n"
                },
                "status": {
                    "type": "string",
                    "description": "User profile property. Valid values are `ACTIVE`, `DEPROVISIONED`, `STAGED`, `SUSPENDED`. Default: `ACTIVE`\n"
                },
                "streetAddress": {
                    "type": "string",
                    "description": "User street address\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "User default timezone\n"
                },
                "title": {
                    "type": "string",
                    "description": "User title\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User employee type\n"
                },
                "zipCode": {
                    "type": "string",
                    "description": "User zipcode or postal code\n"
                }
            },
            "required": [
                "customProfileAttributes",
                "email",
                "firstName",
                "lastName",
                "login",
                "rawStatus"
            ],
            "inputProperties": {
                "city": {
                    "type": "string",
                    "description": "User city\n"
                },
                "costCenter": {
                    "type": "string",
                    "description": "User cost center\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "User country code\n"
                },
                "customProfileAttributes": {
                    "type": "string",
                    "description": "JSON formatted custom attributes for a user. It must be JSON due to various types Okta allows. You must first add the custom property to the user profile schema before you reference it. You can use the Profile Editor in the Admin Console or the [Schemas](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UISchema/#tag/UISchema) API to manage schema extensions.\n"
                },
                "customProfileAttributesToIgnores": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "department": {
                    "type": "string",
                    "description": "User department\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User display name, suitable to show end users\n"
                },
                "division": {
                    "type": "string",
                    "description": "User division\n"
                },
                "email": {
                    "type": "string",
                    "description": "User primary email address\n"
                },
                "employeeNumber": {
                    "type": "string",
                    "description": "User employee number\n"
                },
                "expirePasswordOnCreate": {
                    "type": "boolean",
                    "description": "If set to `true`, the user will have to change the password at the next login. This property will be used when user is being created and works only when `password` field is set. Default: `false`\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "User first name\n"
                },
                "honorificPrefix": {
                    "type": "string",
                    "description": "User honorific prefix\n"
                },
                "honorificSuffix": {
                    "type": "string",
                    "description": "User honorific suffix\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "User last name\n"
                },
                "locale": {
                    "type": "string",
                    "description": "User default location\n"
                },
                "login": {
                    "type": "string",
                    "description": "User Okta login\n"
                },
                "manager": {
                    "type": "string",
                    "description": "Manager of User\n"
                },
                "managerId": {
                    "type": "string",
                    "description": "Manager ID of User\n"
                },
                "middleName": {
                    "type": "string",
                    "description": "User middle name\n"
                },
                "mobilePhone": {
                    "type": "string",
                    "description": "User mobile phone number\n"
                },
                "nickName": {
                    "type": "string",
                    "description": "User nickname\n"
                },
                "oldPassword": {
                    "type": "string",
                    "description": "Old User Password. Should be only set in case the password was not changed using the provider. fter successful password change this field should be removed and `password` field should be used for further changes.\n",
                    "secret": true
                },
                "organization": {
                    "type": "string",
                    "description": "User organization\n"
                },
                "password": {
                    "type": "string",
                    "description": "User Password\n",
                    "secret": true
                },
                "passwordHash": {
                    "$ref": "#/types/okta:user/UserPasswordHash:UserPasswordHash",
                    "description": "Specifies a hashed password to import into Okta.\n"
                },
                "passwordInlineHook": {
                    "type": "string",
                    "description": "Specifies that a Password Import Inline Hook should be triggered to handle verification of the user's password the first time the user logs in. This allows an existing password to be imported into Okta directly from some other store. When updating a user with a password hook the user must be in the `STAGED` status. The `password` field should not be specified when using Password Import Inline Hook.\n"
                },
                "postalAddress": {
                    "type": "string",
                    "description": "User mailing address\n"
                },
                "preferredLanguage": {
                    "type": "string",
                    "description": "User preferred language\n"
                },
                "primaryPhone": {
                    "type": "string",
                    "description": "User primary phone number\n"
                },
                "profileUrl": {
                    "type": "string",
                    "description": "User online profile (web page)\n"
                },
                "recoveryAnswer": {
                    "type": "string",
                    "description": "User Password Recovery Answer\n",
                    "secret": true
                },
                "recoveryQuestion": {
                    "type": "string",
                    "description": "User Password Recovery Question\n"
                },
                "secondEmail": {
                    "type": "string",
                    "description": "User secondary email address, used for account recovery\n"
                },
                "skipRoles": {
                    "type": "boolean",
                    "description": "Do not populate user roles information (prevents additional API call)\n",
                    "deprecationMessage": "Because admin_roles has been removed, this attribute is a no op and will be removed"
                },
                "state": {
                    "type": "string",
                    "description": "User state or region\n"
                },
                "status": {
                    "type": "string",
                    "description": "User profile property. Valid values are `ACTIVE`, `DEPROVISIONED`, `STAGED`, `SUSPENDED`. Default: `ACTIVE`\n"
                },
                "streetAddress": {
                    "type": "string",
                    "description": "User street address\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "User default timezone\n"
                },
                "title": {
                    "type": "string",
                    "description": "User title\n"
                },
                "userType": {
                    "type": "string",
                    "description": "User employee type\n"
                },
                "zipCode": {
                    "type": "string",
                    "description": "User zipcode or postal code\n"
                }
            },
            "requiredInputs": [
                "email",
                "firstName",
                "lastName",
                "login"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "city": {
                        "type": "string",
                        "description": "User city\n"
                    },
                    "costCenter": {
                        "type": "string",
                        "description": "User cost center\n"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "User country code\n"
                    },
                    "customProfileAttributes": {
                        "type": "string",
                        "description": "JSON formatted custom attributes for a user. It must be JSON due to various types Okta allows. You must first add the custom property to the user profile schema before you reference it. You can use the Profile Editor in the Admin Console or the [Schemas](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UISchema/#tag/UISchema) API to manage schema extensions.\n"
                    },
                    "customProfileAttributesToIgnores": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "department": {
                        "type": "string",
                        "description": "User department\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User display name, suitable to show end users\n"
                    },
                    "division": {
                        "type": "string",
                        "description": "User division\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "User primary email address\n"
                    },
                    "employeeNumber": {
                        "type": "string",
                        "description": "User employee number\n"
                    },
                    "expirePasswordOnCreate": {
                        "type": "boolean",
                        "description": "If set to `true`, the user will have to change the password at the next login. This property will be used when user is being created and works only when `password` field is set. Default: `false`\n"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "User first name\n"
                    },
                    "honorificPrefix": {
                        "type": "string",
                        "description": "User honorific prefix\n"
                    },
                    "honorificSuffix": {
                        "type": "string",
                        "description": "User honorific suffix\n"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User last name\n"
                    },
                    "locale": {
                        "type": "string",
                        "description": "User default location\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "User Okta login\n"
                    },
                    "manager": {
                        "type": "string",
                        "description": "Manager of User\n"
                    },
                    "managerId": {
                        "type": "string",
                        "description": "Manager ID of User\n"
                    },
                    "middleName": {
                        "type": "string",
                        "description": "User middle name\n"
                    },
                    "mobilePhone": {
                        "type": "string",
                        "description": "User mobile phone number\n"
                    },
                    "nickName": {
                        "type": "string",
                        "description": "User nickname\n"
                    },
                    "oldPassword": {
                        "type": "string",
                        "description": "Old User Password. Should be only set in case the password was not changed using the provider. fter successful password change this field should be removed and `password` field should be used for further changes.\n",
                        "secret": true
                    },
                    "organization": {
                        "type": "string",
                        "description": "User organization\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "User Password\n",
                        "secret": true
                    },
                    "passwordHash": {
                        "$ref": "#/types/okta:user/UserPasswordHash:UserPasswordHash",
                        "description": "Specifies a hashed password to import into Okta.\n"
                    },
                    "passwordInlineHook": {
                        "type": "string",
                        "description": "Specifies that a Password Import Inline Hook should be triggered to handle verification of the user's password the first time the user logs in. This allows an existing password to be imported into Okta directly from some other store. When updating a user with a password hook the user must be in the `STAGED` status. The `password` field should not be specified when using Password Import Inline Hook.\n"
                    },
                    "postalAddress": {
                        "type": "string",
                        "description": "User mailing address\n"
                    },
                    "preferredLanguage": {
                        "type": "string",
                        "description": "User preferred language\n"
                    },
                    "primaryPhone": {
                        "type": "string",
                        "description": "User primary phone number\n"
                    },
                    "profileUrl": {
                        "type": "string",
                        "description": "User online profile (web page)\n"
                    },
                    "rawStatus": {
                        "type": "string",
                        "description": "The raw status of the User in Okta - (status is mapped)\n"
                    },
                    "recoveryAnswer": {
                        "type": "string",
                        "description": "User Password Recovery Answer\n",
                        "secret": true
                    },
                    "recoveryQuestion": {
                        "type": "string",
                        "description": "User Password Recovery Question\n"
                    },
                    "secondEmail": {
                        "type": "string",
                        "description": "User secondary email address, used for account recovery\n"
                    },
                    "skipRoles": {
                        "type": "boolean",
                        "description": "Do not populate user roles information (prevents additional API call)\n",
                        "deprecationMessage": "Because admin_roles has been removed, this attribute is a no op and will be removed"
                    },
                    "state": {
                        "type": "string",
                        "description": "User state or region\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "User profile property. Valid values are `ACTIVE`, `DEPROVISIONED`, `STAGED`, `SUSPENDED`. Default: `ACTIVE`\n"
                    },
                    "streetAddress": {
                        "type": "string",
                        "description": "User street address\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "User default timezone\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "User title\n"
                    },
                    "userType": {
                        "type": "string",
                        "description": "User employee type\n"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "User zipcode or postal code\n"
                    }
                },
                "type": "object"
            }
        },
        "okta:user/userType:UserType": {
            "description": "Creates a User type. This resource allows you to create and configure a User Type.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.user.UserType(\"example\", {\n    name: \"example\",\n    displayName: \"example\",\n    description: \"example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.user.UserType(\"example\",\n    name=\"example\",\n    display_name=\"example\",\n    description=\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.User.UserType(\"example\", new()\n    {\n        Name = \"example\",\n        DisplayName = \"example\",\n        Description = \"example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.NewUserType(ctx, \"example\", \u0026user.UserTypeArgs{\n\t\t\tName:        pulumi.String(\"example\"),\n\t\t\tDisplayName: pulumi.String(\"example\"),\n\t\t\tDescription: pulumi.String(\"example\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.UserType;\nimport com.pulumi.okta.user.UserTypeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new UserType(\"example\", UserTypeArgs.builder()\n            .name(\"example\")\n            .displayName(\"example\")\n            .description(\"example\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:user:UserType\n    properties:\n      name: example\n      displayName: example\n      description: example\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import okta:user/userType:UserType example \u003cuser_type_id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the User Type.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display Name of the User Type.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the User Type.\n"
                }
            },
            "required": [
                "description",
                "displayName",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the User Type.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display Name of the User Type.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the User Type.\n"
                }
            },
            "requiredInputs": [
                "description",
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserType resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the User Type.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display Name of the User Type.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the User Type.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "okta:app/getApp:getApp": {
            "description": "Get an application of any kind from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.app.getApp({\n    label: \"Example App\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.get_app(label=\"Example App\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.App.GetApp.Invoke(new()\n    {\n        Label = \"Example App\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.GetApp(ctx, \u0026app.GetAppArgs{\n\t\t\tLabel: pulumi.StringRef(\"Example App\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.AppFunctions;\nimport com.pulumi.okta.app.inputs.GetAppArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = AppFunctions.getApp(GetAppArgs.builder()\n            .label(\"Example App\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:app:getApp\n      arguments:\n        label: Example App\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getApp.\n",
                "properties": {
                    "activeOnly": {
                        "type": "boolean",
                        "description": "Search only ACTIVE applications.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of application to retrieve, conflicts with label and label_prefix.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the app to retrieve, conflicts with\n\t\t\tlabel_prefix and id. Label uses the ?q=\\n\\n query parameter exposed by\n\t\t\tOkta's List Apps API. The API will search both name and label using that\n\t\t\tquery. Therefore similarily named and labeled apps may be returned in the query\n\t\t\tand have the unitended result of associating the wrong app with this data\n\t\t\tsource. See:\n\t\t\thttps://developer.okta.com/docs/reference/api/apps/#list-applications\n"
                    },
                    "labelPrefix": {
                        "type": "string",
                        "description": "Label prefix of the app to retrieve, conflicts with label and id. This will tell the\n\t\t\tprovider to do a starts with query as opposed to an equals query.\n"
                    },
                    "skipGroups": {
                        "type": "boolean",
                        "description": "Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources\n",
                        "deprecationMessage": "Because groups has been removed, this attribute is a no op and will be removed"
                    },
                    "skipUsers": {
                        "type": "boolean",
                        "description": "Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources\n",
                        "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getApp.\n",
                "properties": {
                    "activeOnly": {
                        "description": "Search only ACTIVE applications.\n",
                        "type": "boolean"
                    },
                    "groups": {
                        "deprecationMessage": "The `groups` field is now deprecated for the data source `okta.app.getApp`, please replace all uses of this with: `okta.AppGroupAssignments`",
                        "description": "Groups associated with the application\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "Id of application to retrieve, conflicts with label and label_prefix.\n",
                        "type": "string"
                    },
                    "label": {
                        "description": "The label of the app to retrieve, conflicts with\n\t\t\tlabel_prefix and id. Label uses the ?q=\\n\\n query parameter exposed by\n\t\t\tOkta's List Apps API. The API will search both name and label using that\n\t\t\tquery. Therefore similarily named and labeled apps may be returned in the query\n\t\t\tand have the unitended result of associating the wrong app with this data\n\t\t\tsource. See:\n\t\t\thttps://developer.okta.com/docs/reference/api/apps/#list-applications\n",
                        "type": "string"
                    },
                    "labelPrefix": {
                        "description": "Label prefix of the app to retrieve, conflicts with label and id. This will tell the\n\t\t\tprovider to do a starts with query as opposed to an equals query.\n",
                        "type": "string"
                    },
                    "links": {
                        "description": "Discoverable resources related to the app\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of application.\n",
                        "type": "string"
                    },
                    "skipGroups": {
                        "deprecationMessage": "Because groups has been removed, this attribute is a no op and will be removed",
                        "description": "Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources\n",
                        "type": "boolean"
                    },
                    "skipUsers": {
                        "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed",
                        "description": "Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources\n",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "Status of application.\n",
                        "type": "string"
                    },
                    "users": {
                        "deprecationMessage": "The `users` field is now deprecated for the data source `okta.app.getApp`, please replace all uses of this with: `okta.getAppUserAssignments`",
                        "description": "Users associated with the application\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "groups",
                    "links",
                    "name",
                    "status",
                    "users"
                ],
                "type": "object"
            }
        },
        "okta:app/getMetadataSaml:getMetadataSaml": {
            "description": "Get a SAML application's metadata from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.app.getMetadataSaml({\n    appId: \"\u003capp id\u003e\",\n    keyId: \"\u003ccert key id\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.get_metadata_saml(app_id=\"\u003capp id\u003e\",\n    key_id=\"\u003ccert key id\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.App.GetMetadataSaml.Invoke(new()\n    {\n        AppId = \"\u003capp id\u003e\",\n        KeyId = \"\u003ccert key id\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.GetMetadataSaml(ctx, \u0026app.GetMetadataSamlArgs{\n\t\t\tAppId: \"\u003capp id\u003e\",\n\t\t\tKeyId: pulumi.StringRef(\"\u003ccert key id\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.AppFunctions;\nimport com.pulumi.okta.app.inputs.GetMetadataSamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = AppFunctions.getMetadataSaml(GetMetadataSamlArgs.builder()\n            .appId(\"\u003capp id\u003e\")\n            .keyId(\"\u003ccert key id\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:app:getMetadataSaml\n      arguments:\n        appId: \u003capp id\u003e\n        keyId: \u003ccert key id\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getMetadataSaml.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The application ID.\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "Certificate Key ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMetadataSaml.\n",
                "properties": {
                    "appId": {
                        "description": "The application ID.\n",
                        "type": "string"
                    },
                    "certificate": {
                        "description": "Public certificate from application metadata.\n",
                        "type": "string"
                    },
                    "entityId": {
                        "description": "Entity URL for instance https://www.okta.com/saml2/service-provider/sposcfdmlybtwkdcgtuf\n",
                        "type": "string"
                    },
                    "httpPostBinding": {
                        "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.\n",
                        "type": "string"
                    },
                    "httpRedirectBinding": {
                        "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "keyId": {
                        "description": "Certificate Key ID.\n",
                        "type": "string"
                    },
                    "metadata": {
                        "description": "Raw metadata of application.\n",
                        "type": "string"
                    },
                    "wantAuthnRequestsSigned": {
                        "description": "Whether authn requests are signed.\n",
                        "type": "boolean"
                    }
                },
                "required": [
                    "appId",
                    "certificate",
                    "entityId",
                    "httpPostBinding",
                    "httpRedirectBinding",
                    "metadata",
                    "wantAuthnRequestsSigned",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:app/getOauth:getOauth": {
            "description": "Get a OIDC application from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.app.getOauth({\n    label: \"Example App\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.app.get_oauth(label=\"Example App\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.App.GetOauth.Invoke(new()\n    {\n        Label = \"Example App\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.GetOauth(ctx, \u0026app.GetOauthArgs{\n\t\t\tLabel: pulumi.StringRef(\"Example App\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.AppFunctions;\nimport com.pulumi.okta.app.inputs.GetOauthArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = AppFunctions.getOauth(GetOauthArgs.builder()\n            .label(\"Example App\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      function: okta:app:getOauth\n      arguments:\n        label: Example App\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOauth.\n",
                "properties": {
                    "activeOnly": {
                        "type": "boolean",
                        "description": "Search only ACTIVE applications.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of application to retrieve, conflicts with label and label_prefix.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the app to retrieve, conflicts with\n\t\t\tlabel_prefix and id. Label uses the ?q=\\n\\n query parameter exposed by\n\t\t\tOkta's List Apps API. The API will search both name and label using that\n\t\t\tquery. Therefore similarily named and labeled apps may be returned in the query\n\t\t\tand have the unitended result of associating the wrong app with this data\n\t\t\tsource. See:\n\t\t\thttps://developer.okta.com/docs/reference/api/apps/#list-applications\n"
                    },
                    "labelPrefix": {
                        "type": "string",
                        "description": "Label prefix of the app to retrieve, conflicts with label and id. This will tell the\n\t\t\tprovider to do a starts with query as opposed to an equals query.\n"
                    },
                    "skipGroups": {
                        "type": "boolean",
                        "description": "Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources\n",
                        "deprecationMessage": "Because groups has been removed, this attribute is a no op and will be removed"
                    },
                    "skipUsers": {
                        "type": "boolean",
                        "description": "Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources\n",
                        "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOauth.\n",
                "properties": {
                    "activeOnly": {
                        "description": "Search only ACTIVE applications.\n",
                        "type": "boolean"
                    },
                    "autoSubmitToolbar": {
                        "description": "Display auto submit toolbar\n",
                        "type": "boolean"
                    },
                    "clientId": {
                        "description": "OAuth client ID\n",
                        "type": "string"
                    },
                    "clientSecret": {
                        "description": "OAuth client secret\n",
                        "secret": true,
                        "type": "string"
                    },
                    "clientUri": {
                        "description": "URI to a web page providing information about the client.\n",
                        "type": "string"
                    },
                    "grantTypes": {
                        "description": "List of OAuth 2.0 grant types\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "hideIos": {
                        "description": "Do not display application icon on mobile app\n",
                        "type": "boolean"
                    },
                    "hideWeb": {
                        "description": "Do not display application icon to users\n",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Id of application to retrieve, conflicts with label and label_prefix.\n",
                        "type": "string"
                    },
                    "label": {
                        "description": "The label of the app to retrieve, conflicts with\n\t\t\tlabel_prefix and id. Label uses the ?q=\\n\\n query parameter exposed by\n\t\t\tOkta's List Apps API. The API will search both name and label using that\n\t\t\tquery. Therefore similarily named and labeled apps may be returned in the query\n\t\t\tand have the unitended result of associating the wrong app with this data\n\t\t\tsource. See:\n\t\t\thttps://developer.okta.com/docs/reference/api/apps/#list-applications\n",
                        "type": "string"
                    },
                    "labelPrefix": {
                        "description": "Label prefix of the app to retrieve, conflicts with label and id. This will tell the\n\t\t\tprovider to do a starts with query as opposed to an equals query.\n",
                        "type": "string"
                    },
                    "links": {
                        "description": "Discoverable resources related to the app\n",
                        "type": "string"
                    },
                    "loginMode": {
                        "description": "The type of Idp-Initiated login that the client supports, if any\n",
                        "type": "string"
                    },
                    "loginScopes": {
                        "description": "List of scopes to use for the request when 'login_mode' == OKTA\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "loginUri": {
                        "description": "URI that initiates login.\n",
                        "type": "string"
                    },
                    "logoUri": {
                        "description": "URI that references a logo for the client.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of application.\n",
                        "type": "string"
                    },
                    "policyUri": {
                        "description": "URI to web page providing client policy document.\n",
                        "type": "string"
                    },
                    "postLogoutRedirectUris": {
                        "description": "List of URIs for redirection after logout\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "redirectUris": {
                        "description": "List of URIs for use in the redirect-based flow.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "responseTypes": {
                        "description": "List of OAuth 2.0 response type strings.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "skipGroups": {
                        "deprecationMessage": "Because groups has been removed, this attribute is a no op and will be removed",
                        "description": "Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources\n",
                        "type": "boolean"
                    },
                    "skipUsers": {
                        "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed",
                        "description": "Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources\n",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "Status of application.\n",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of OAuth application.\n",
                        "type": "string"
                    },
                    "wildcardRedirect": {
                        "description": "Indicates if the client is allowed to use wildcard matching of redirect_uris. Some valid values include: \"SUBDOMAIN\", \"DISABLED\".\n",
                        "type": "string"
                    }
                },
                "required": [
                    "autoSubmitToolbar",
                    "clientId",
                    "clientSecret",
                    "clientUri",
                    "grantTypes",
                    "hideIos",
                    "hideWeb",
                    "links",
                    "loginMode",
                    "loginScopes",
                    "loginUri",
                    "logoUri",
                    "name",
                    "policyUri",
                    "postLogoutRedirectUris",
                    "redirectUris",
                    "responseTypes",
                    "status",
                    "type",
                    "wildcardRedirect"
                ],
                "type": "object"
            }
        },
        "okta:app/getSaml:getSaml": {
            "description": "Get a SAML application from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.app.getSaml({\n    label: \"Example App\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.app.get_saml(label=\"Example App\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.App.GetSaml.Invoke(new()\n    {\n        Label = \"Example App\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/app\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := app.LookupSaml(ctx, \u0026app.LookupSamlArgs{\n\t\t\tLabel: pulumi.StringRef(\"Example App\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.app.AppFunctions;\nimport com.pulumi.okta.app.inputs.GetSamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = AppFunctions.getSaml(GetSamlArgs.builder()\n            .label(\"Example App\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:app:getSaml\n      arguments:\n        label: Example App\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSaml.\n",
                "properties": {
                    "activeOnly": {
                        "type": "boolean",
                        "description": "Search only ACTIVE applications.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of application to retrieve, conflicts with label and label_prefix.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the app to retrieve, conflicts with label_prefix and id. Label\n\t\t\tuses the ?q=\\n\\n query parameter exposed by Okta's API. It should be noted that at this time\n\t\t\tthis searches both name and label. This is used to avoid paginating through all applications.\n"
                    },
                    "labelPrefix": {
                        "type": "string",
                        "description": "Label prefix of the app to retrieve, conflicts with label and id. This will tell the\n\t\t\tprovider to do a starts with query as opposed to an equals query.\n"
                    },
                    "requestCompressed": {
                        "type": "boolean",
                        "description": "Denotes whether the request is compressed or not.\n"
                    },
                    "skipGroups": {
                        "type": "boolean",
                        "description": "Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources\n",
                        "deprecationMessage": "Because groups has been removed, this attribute is a no op and will be removed"
                    },
                    "skipUsers": {
                        "type": "boolean",
                        "description": "Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources\n",
                        "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSaml.\n",
                "properties": {
                    "accessibilityErrorRedirectUrl": {
                        "description": "Custom error page URL\n",
                        "type": "string"
                    },
                    "accessibilityLoginRedirectUrl": {
                        "description": "Custom login page URL\n",
                        "type": "string"
                    },
                    "accessibilitySelfService": {
                        "description": "Enable self service\n",
                        "type": "boolean"
                    },
                    "acsEndpoints": {
                        "description": "List of ACS endpoints for this SAML application\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "activeOnly": {
                        "description": "Search only ACTIVE applications.\n",
                        "type": "boolean"
                    },
                    "appSettingsJson": {
                        "description": "Application settings in JSON format\n",
                        "type": "string"
                    },
                    "assertionSigned": {
                        "description": "Determines whether the SAML assertion is digitally signed\n",
                        "type": "boolean"
                    },
                    "attributeStatements": {
                        "items": {
                            "$ref": "#/types/okta:app/getSamlAttributeStatement:getSamlAttributeStatement"
                        },
                        "type": "array"
                    },
                    "audience": {
                        "description": "Audience Restriction\n",
                        "type": "string"
                    },
                    "authnContextClassRef": {
                        "description": "Identifies the SAML authentication context class for the assertion’s authentication statement\n",
                        "type": "string"
                    },
                    "autoSubmitToolbar": {
                        "description": "Display auto submit toolbar\n",
                        "type": "boolean"
                    },
                    "defaultRelayState": {
                        "description": "Identifies a specific application resource in an IDP initiated SSO scenario.\n",
                        "type": "string"
                    },
                    "destination": {
                        "description": "Identifies the location where the SAML response is intended to be sent inside of the SAML assertion\n",
                        "type": "string"
                    },
                    "digestAlgorithm": {
                        "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response\n",
                        "type": "string"
                    },
                    "features": {
                        "description": "features to enable\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "groups": {
                        "deprecationMessage": "The `groups` field is now deprecated for the data source `okta.app.Saml`, please replace all uses of this with: `okta.AppGroupAssignments`",
                        "description": "Groups associated with the application\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "hideIos": {
                        "description": "Do not display application icon on mobile app\n",
                        "type": "boolean"
                    },
                    "hideWeb": {
                        "description": "Do not display application icon to users\n",
                        "type": "boolean"
                    },
                    "honorForceAuthn": {
                        "description": "Prompt user to re-authenticate if SP asks for it\n",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Id of application to retrieve, conflicts with label and label_prefix.\n",
                        "type": "string"
                    },
                    "idpIssuer": {
                        "description": "SAML issuer ID\n",
                        "type": "string"
                    },
                    "inlineHookId": {
                        "description": "Saml Inline Hook setting\n",
                        "type": "string"
                    },
                    "keyId": {
                        "description": "Certificate ID\n",
                        "type": "string"
                    },
                    "label": {
                        "description": "The label of the app to retrieve, conflicts with label_prefix and id. Label\n\t\t\tuses the ?q=\\n\\n query parameter exposed by Okta's API. It should be noted that at this time\n\t\t\tthis searches both name and label. This is used to avoid paginating through all applications.\n",
                        "type": "string"
                    },
                    "labelPrefix": {
                        "description": "Label prefix of the app to retrieve, conflicts with label and id. This will tell the\n\t\t\tprovider to do a starts with query as opposed to an equals query.\n",
                        "type": "string"
                    },
                    "links": {
                        "description": "Discoverable resources related to the app\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of application.\n",
                        "type": "string"
                    },
                    "recipient": {
                        "description": "The location where the app may present the SAML assertion\n",
                        "type": "string"
                    },
                    "requestCompressed": {
                        "description": "Denotes whether the request is compressed or not.\n",
                        "type": "boolean"
                    },
                    "responseSigned": {
                        "description": "Determines whether the SAML auth response message is digitally signed\n",
                        "type": "boolean"
                    },
                    "samlSignedRequestEnabled": {
                        "description": "SAML Signed Request enabled\n",
                        "type": "boolean"
                    },
                    "signatureAlgorithm": {
                        "description": "Signature algorithm used to digitally sign the assertion and response\n",
                        "type": "string"
                    },
                    "singleLogoutCertificate": {
                        "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests\n",
                        "type": "string"
                    },
                    "singleLogoutIssuer": {
                        "description": "The issuer of the Service Provider that generates the Single Logout request\n",
                        "type": "string"
                    },
                    "singleLogoutUrl": {
                        "description": "The location where the logout response is sent\n",
                        "type": "string"
                    },
                    "skipGroups": {
                        "deprecationMessage": "Because groups has been removed, this attribute is a no op and will be removed",
                        "description": "Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources\n",
                        "type": "boolean"
                    },
                    "skipUsers": {
                        "deprecationMessage": "Because users has been removed, this attribute is a no op and will be removed",
                        "description": "Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources\n",
                        "type": "boolean"
                    },
                    "spIssuer": {
                        "description": "SAML SP issuer ID\n",
                        "type": "string"
                    },
                    "ssoUrl": {
                        "description": "Single Sign On URL\n",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of application.\n",
                        "type": "string"
                    },
                    "subjectNameIdFormat": {
                        "description": "Identifies the SAML processing rules.\n",
                        "type": "string"
                    },
                    "subjectNameIdTemplate": {
                        "description": "Template for app user's username when a user is assigned to the app\n",
                        "type": "string"
                    },
                    "userNameTemplate": {
                        "description": "Username template\n",
                        "type": "string"
                    },
                    "userNameTemplatePushStatus": {
                        "description": "Push username on update\n",
                        "type": "string"
                    },
                    "userNameTemplateSuffix": {
                        "description": "Username template suffix\n",
                        "type": "string"
                    },
                    "userNameTemplateType": {
                        "description": "Username template type\n",
                        "type": "string"
                    },
                    "users": {
                        "deprecationMessage": "The `users` field is now deprecated for the data source `okta.app.Saml`, please replace all uses of this with: `okta.getAppUserAssignments`",
                        "description": "Users associated with the application\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "accessibilityErrorRedirectUrl",
                    "accessibilityLoginRedirectUrl",
                    "accessibilitySelfService",
                    "acsEndpoints",
                    "appSettingsJson",
                    "assertionSigned",
                    "attributeStatements",
                    "audience",
                    "authnContextClassRef",
                    "autoSubmitToolbar",
                    "defaultRelayState",
                    "destination",
                    "digestAlgorithm",
                    "features",
                    "groups",
                    "hideIos",
                    "hideWeb",
                    "honorForceAuthn",
                    "idpIssuer",
                    "inlineHookId",
                    "keyId",
                    "links",
                    "name",
                    "recipient",
                    "responseSigned",
                    "samlSignedRequestEnabled",
                    "signatureAlgorithm",
                    "singleLogoutCertificate",
                    "singleLogoutIssuer",
                    "singleLogoutUrl",
                    "spIssuer",
                    "ssoUrl",
                    "status",
                    "subjectNameIdFormat",
                    "subjectNameIdTemplate",
                    "userNameTemplate",
                    "userNameTemplatePushStatus",
                    "userNameTemplateSuffix",
                    "userNameTemplateType",
                    "users"
                ],
                "type": "object"
            }
        },
        "okta:auth/getServer:getServer": {
            "description": "Get an auth server from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.auth.getServer({\n    name: \"Example Auth\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.get_server(name=\"Example Auth\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Auth.GetServer.Invoke(new()\n    {\n        Name = \"Example Auth\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.LookupServer(ctx, \u0026auth.LookupServerArgs{\n\t\t\tName: \"Example Auth\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.AuthFunctions;\nimport com.pulumi.okta.auth.inputs.GetServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = AuthFunctions.getServer(GetServerArgs.builder()\n            .name(\"Example Auth\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:auth:getServer\n      arguments:\n        name: Example Auth\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getServer.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the auth server to retrieve.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServer.\n",
                "properties": {
                    "audiences": {
                        "description": "Description of Authorization server.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "credentialsLastRotated": {
                        "description": "Last time credentials were rotated.\n",
                        "type": "string"
                    },
                    "credentialsNextRotation": {
                        "description": "Next time credentials will be rotated\n",
                        "type": "string"
                    },
                    "credentialsRotationMode": {
                        "description": "Mode of credential rotation, auto or manual.\n",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of Authorization server.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "issuer": {
                        "description": "The complete URL of the authorization server. This becomes the `iss` claim in an access token.\n",
                        "type": "string"
                    },
                    "issuerMode": {
                        "description": "Can be set to `CUSTOM_URL` or `ORG_URL`\n",
                        "type": "string"
                    },
                    "kid": {
                        "description": "Auth server key id.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the auth server to retrieve.\n",
                        "type": "string"
                    },
                    "status": {
                        "description": "The activation status of the authorization server.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "audiences",
                    "credentialsLastRotated",
                    "credentialsNextRotation",
                    "credentialsRotationMode",
                    "description",
                    "issuer",
                    "issuerMode",
                    "kid",
                    "name",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:auth/getServerPolicy:getServerPolicy": {
            "description": "Get an authorization server policy from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.auth.getServerPolicy({\n    authServerId: \"\u003cauth server id\u003e\",\n    name: \"staff\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.auth.get_server_policy(auth_server_id=\"\u003cauth server id\u003e\",\n    name=\"staff\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Auth.GetServerPolicy.Invoke(new()\n    {\n        AuthServerId = \"\u003cauth server id\u003e\",\n        Name = \"staff\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.LookupServerPolicy(ctx, \u0026auth.LookupServerPolicyArgs{\n\t\t\tAuthServerId: \"\u003cauth server id\u003e\",\n\t\t\tName:         \"staff\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.AuthFunctions;\nimport com.pulumi.okta.auth.inputs.GetServerPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = AuthFunctions.getServerPolicy(GetServerPolicyArgs.builder()\n            .authServerId(\"\u003cauth server id\u003e\")\n            .name(\"staff\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:auth:getServerPolicy\n      arguments:\n        authServerId: \u003cauth server id\u003e\n        name: staff\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getServerPolicy.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "Auth server ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy\n"
                    }
                },
                "type": "object",
                "required": [
                    "authServerId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServerPolicy.\n",
                "properties": {
                    "assignedClients": {
                        "description": "List of clients this policy is assigned to. `[ALL_CLIENTS]` is a special value when policy is assigned to all clients.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "authServerId": {
                        "description": "Auth server ID\n",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of authorization server policy.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the policy\n",
                        "type": "string"
                    },
                    "priority": {
                        "description": "Priority of the auth server policy\n",
                        "type": "integer"
                    }
                },
                "required": [
                    "assignedClients",
                    "authServerId",
                    "description",
                    "name",
                    "priority",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:auth/getServerScopes:getServerScopes": {
            "description": "Get a list of authorization server scopes from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.auth.getServerScopes({\n    authServerId: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.auth.get_server_scopes(auth_server_id=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.Auth.GetServerScopes.Invoke(new()\n    {\n        AuthServerId = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/auth\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth.GetServerScopes(ctx, \u0026auth.GetServerScopesArgs{\n\t\t\tAuthServerId: \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.auth.AuthFunctions;\nimport com.pulumi.okta.auth.inputs.GetServerScopesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = AuthFunctions.getServerScopes(GetServerScopesArgs.builder()\n            .authServerId(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      function: okta:auth:getServerScopes\n      arguments:\n        authServerId: default\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getServerScopes.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "Auth server ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "authServerId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServerScopes.\n",
                "properties": {
                    "authServerId": {
                        "description": "Auth server ID\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "scopes": {
                        "description": "Collection of authorization server scopes retrieved from Okta with the following properties.\n",
                        "items": {
                            "$ref": "#/types/okta:auth/getServerScopesScope:getServerScopesScope"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "authServerId",
                    "scopes",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:group/getEveryoneGroup:getEveryoneGroup": {
            "description": "Use this data source to retrieve the `Everyone` group from Okta. The \nsame can be achieved with the `okta.group.Group` data\nsource with `name = \"Everyone\"`. This is simply a shortcut.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.group.getEveryoneGroup({});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.group.get_everyone_group()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Group.GetEveryoneGroup.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := group.GetEveryoneGroup(ctx, \u0026group.GetEveryoneGroupArgs{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.group.GroupFunctions;\nimport com.pulumi.okta.group.inputs.GetEveryoneGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = GroupFunctions.getEveryoneGroup(GetEveryoneGroupArgs.builder()\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:group:getEveryoneGroup\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getEveryoneGroup.\n",
                "properties": {
                    "includeUsers": {
                        "type": "boolean",
                        "description": "Fetch group users, having default off cuts down on API calls.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEveryoneGroup.\n",
                "properties": {
                    "description": {
                        "description": "Description of group.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "includeUsers": {
                        "description": "Fetch group users, having default off cuts down on API calls.\n",
                        "type": "boolean"
                    }
                },
                "required": [
                    "description",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:group/getGroup:getGroup": {
            "description": "Get a group from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.group.getGroup({\n    name: \"Example App\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.group.get_group(name=\"Example App\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Group.GetGroup.Invoke(new()\n    {\n        Name = \"Example App\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := group.LookupGroup(ctx, \u0026group.LookupGroupArgs{\n\t\t\tName: pulumi.StringRef(\"Example App\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.group.GroupFunctions;\nimport com.pulumi.okta.group.inputs.GetGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = GroupFunctions.getGroup(GetGroupArgs.builder()\n            .name(\"Example App\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:group:getGroup\n      arguments:\n        name: Example App\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGroup.\n",
                "properties": {
                    "delayReadSeconds": {
                        "type": "string",
                        "description": "Force delay of the group read by N seconds. Useful when eventual consistency of group information needs to be allowed for; for instance, when group rules are known to have been applied.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of group.\n"
                    },
                    "includeUsers": {
                        "type": "boolean",
                        "description": "Fetch group users, having default off cuts down on API calls.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of group.\n"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroup.\n",
                "properties": {
                    "delayReadSeconds": {
                        "description": "Force delay of the group read by N seconds. Useful when eventual consistency of group information needs to be allowed for; for instance, when group rules are known to have been applied.\n",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of group.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "ID of group.\n",
                        "type": "string"
                    },
                    "includeUsers": {
                        "description": "Fetch group users, having default off cuts down on API calls.\n",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "Name of group.\n",
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "users": {
                        "description": "Users associated with the group. This can also be done per user.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "description",
                    "id",
                    "name",
                    "users"
                ],
                "type": "object"
            }
        },
        "okta:group/getRule:getRule": {
            "description": "Get a group rule from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.group.getRule({\n    id: example.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.group.get_rule(id=example[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.Group.GetRule.Invoke(new()\n    {\n        Id = example.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/group\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := group.LookupRule(ctx, \u0026group.LookupRuleArgs{\n\t\t\tId: pulumi.StringRef(example.Id),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.group.GroupFunctions;\nimport com.pulumi.okta.group.inputs.GetRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = GroupFunctions.getRule(GetRuleArgs.builder()\n            .id(example.id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      function: okta:group:getRule\n      arguments:\n        id: ${example.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRule.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Group Rule.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Group Rule.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Default to `ACTIVE`\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRule.\n",
                "properties": {
                    "expressionType": {
                        "description": "The expression type to use to invoke the rule.\n",
                        "type": "string"
                    },
                    "expressionValue": {
                        "description": "The expression value.\n",
                        "type": "string"
                    },
                    "groupAssignments": {
                        "description": "The list of group ids to assign the users to.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID of the Group Rule.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the Group Rule.\n",
                        "type": "string"
                    },
                    "status": {
                        "description": "Default to `ACTIVE`\n",
                        "type": "string"
                    },
                    "usersExcludeds": {
                        "description": "The list of user IDs that would be excluded when rules are processed.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "expressionType",
                    "expressionValue",
                    "groupAssignments",
                    "usersExcludeds"
                ],
                "type": "object"
            }
        },
        "okta:idp/getMetadataSaml:getMetadataSaml": {
            "description": "Get SAML IdP metadata from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.idp.getMetadataSaml({\n    idpId: \"\u003cidp id\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.get_metadata_saml(idp_id=\"\u003cidp id\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Idp.GetMetadataSaml.Invoke(new()\n    {\n        IdpId = \"\u003cidp id\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.GetMetadataSaml(ctx, \u0026idp.GetMetadataSamlArgs{\n\t\t\tIdpId: pulumi.StringRef(\"\u003cidp id\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.idp.IdpFunctions;\nimport com.pulumi.okta.idp.inputs.GetMetadataSamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IdpFunctions.getMetadataSaml(GetMetadataSamlArgs.builder()\n            .idpId(\"\u003cidp id\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:idp:getMetadataSaml\n      arguments:\n        idpId: \u003cidp id\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getMetadataSaml.\n",
                "properties": {
                    "idpId": {
                        "type": "string",
                        "description": "The id of the IdP to retrieve metadata for.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMetadataSaml.\n",
                "properties": {
                    "assertionsSigned": {
                        "description": "Whether assertions are signed.\n",
                        "type": "boolean"
                    },
                    "authnRequestSigned": {
                        "description": "Whether authn requests are signed.\n",
                        "type": "boolean"
                    },
                    "encryptionCertificate": {
                        "description": "SAML request encryption certificate.\n",
                        "type": "string"
                    },
                    "entityId": {
                        "description": "Entity URL for instance https://www.okta.com/saml2/service-provider/sposcfdmlybtwkdcgtuf\n",
                        "type": "string"
                    },
                    "httpPostBinding": {
                        "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.\n",
                        "type": "string"
                    },
                    "httpRedirectBinding": {
                        "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "idpId": {
                        "description": "The id of the IdP to retrieve metadata for.\n",
                        "type": "string"
                    },
                    "metadata": {
                        "description": "Raw IdP metadata.\n",
                        "type": "string"
                    },
                    "signingCertificate": {
                        "description": "SAML request signing certificate.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "assertionsSigned",
                    "authnRequestSigned",
                    "encryptionCertificate",
                    "entityId",
                    "httpPostBinding",
                    "httpRedirectBinding",
                    "metadata",
                    "signingCertificate",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:idp/getOidc:getOidc": {
            "description": "Get a OIDC IdP from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.idp.getOidc({\n    name: \"Example Provider\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.get_oidc(name=\"Example Provider\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Idp.GetOidc.Invoke(new()\n    {\n        Name = \"Example Provider\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.LookupOidc(ctx, \u0026idp.LookupOidcArgs{\n\t\t\tName: pulumi.StringRef(\"Example Provider\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.idp.IdpFunctions;\nimport com.pulumi.okta.idp.inputs.GetOidcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IdpFunctions.getOidc(GetOidcArgs.builder()\n            .name(\"Example Provider\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:idp:getOidc\n      arguments:\n        name: Example Provider\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOidc.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of idp.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the idp.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOidc.\n",
                "properties": {
                    "authorizationBinding": {
                        "description": "The method of making an authorization request.\n",
                        "type": "string"
                    },
                    "authorizationUrl": {
                        "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n",
                        "type": "string"
                    },
                    "clientId": {
                        "description": "Unique identifier issued by AS for the Okta IdP instance.\n",
                        "type": "string"
                    },
                    "clientSecret": {
                        "description": "Client secret issued by AS for the Okta IdP instance.\n",
                        "secret": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "Id of idp.\n",
                        "type": "string"
                    },
                    "issuerMode": {
                        "description": "Indicates whether Okta uses the original Okta org domain URL, a custom domain URL, or dynamic.\n",
                        "type": "string"
                    },
                    "issuerUrl": {
                        "description": "URI that identifies the issuer.\n",
                        "type": "string"
                    },
                    "jwksBinding": {
                        "description": "The method of making a request for the OIDC JWKS.\n",
                        "type": "string"
                    },
                    "jwksUrl": {
                        "description": "Endpoint where the keys signer publishes its keys in a JWK Set.\n",
                        "type": "string"
                    },
                    "maxClockSkew": {
                        "description": "Maximum allowable clock-skew when processing messages from the IdP.\n",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the idp.\n",
                        "type": "string"
                    },
                    "protocolType": {
                        "description": "The type of protocol to use.\n",
                        "type": "string"
                    },
                    "scopes": {
                        "description": "The scopes of the IdP.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "tokenBinding": {
                        "description": "The method of making a token request.\n",
                        "type": "string"
                    },
                    "tokenUrl": {
                        "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of idp.\n",
                        "type": "string"
                    },
                    "userInfoBinding": {
                        "description": "The method of making a user info request.\n",
                        "type": "string"
                    },
                    "userInfoUrl": {
                        "description": "Protected resource endpoint that returns claims about the authenticated user.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "authorizationBinding",
                    "authorizationUrl",
                    "clientId",
                    "clientSecret",
                    "issuerMode",
                    "issuerUrl",
                    "jwksBinding",
                    "jwksUrl",
                    "maxClockSkew",
                    "protocolType",
                    "scopes",
                    "tokenBinding",
                    "tokenUrl",
                    "type",
                    "userInfoBinding",
                    "userInfoUrl"
                ],
                "type": "object"
            }
        },
        "okta:idp/getSaml:getSaml": {
            "description": "Get a SAML IdP from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.idp.getSaml({\n    name: \"Example App\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.get_saml(name=\"Example App\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Idp.GetSaml.Invoke(new()\n    {\n        Name = \"Example App\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.LookupSaml(ctx, \u0026idp.LookupSamlArgs{\n\t\t\tName: pulumi.StringRef(\"Example App\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.idp.IdpFunctions;\nimport com.pulumi.okta.idp.inputs.GetSamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IdpFunctions.getSaml(GetSamlArgs.builder()\n            .name(\"Example App\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:idp:getSaml\n      arguments:\n        name: Example App\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSaml.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of idp.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the idp.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSaml.\n",
                "properties": {
                    "acsBinding": {
                        "description": "ACS binding\n",
                        "type": "string"
                    },
                    "acsType": {
                        "description": "Determines whether to publish an instance-specific (trust) or organization (shared) ACS endpoint in the SAML metadata.\n",
                        "type": "string"
                    },
                    "audience": {
                        "description": "URI that identifies the target Okta IdP instance (SP)\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "Id of idp.\n",
                        "type": "string"
                    },
                    "issuer": {
                        "description": "URI that identifies the issuer (IdP).\n",
                        "type": "string"
                    },
                    "issuerMode": {
                        "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL in the request to the IdP.\n",
                        "type": "string"
                    },
                    "kid": {
                        "description": "Key ID reference to the IdP's X.509 signature certificate.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the idp.\n",
                        "type": "string"
                    },
                    "ssoBinding": {
                        "description": "Single sign-on binding.\n",
                        "type": "string"
                    },
                    "ssoDestination": {
                        "description": "SSO request binding, HTTP-POST or HTTP-REDIRECT.\n",
                        "type": "string"
                    },
                    "ssoUrl": {
                        "description": "Single sign-on url.\n",
                        "type": "string"
                    },
                    "subjectFilter": {
                        "description": "Regular expression pattern used to filter untrusted IdP usernames.\n",
                        "type": "string"
                    },
                    "subjectFormats": {
                        "description": "Expression to generate or transform a unique username for the IdP user.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": {
                        "description": "Type of idp.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "acsBinding",
                    "acsType",
                    "audience",
                    "issuer",
                    "issuerMode",
                    "kid",
                    "ssoBinding",
                    "ssoDestination",
                    "ssoUrl",
                    "subjectFilter",
                    "subjectFormats",
                    "type"
                ],
                "type": "object"
            }
        },
        "okta:idp/getSocial:getSocial": {
            "description": "Get a social IdP from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.idp.getSocial({\n    name: \"My Facebook IdP\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.idp.get_social(name=\"My Facebook IdP\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Idp.GetSocial.Invoke(new()\n    {\n        Name = \"My Facebook IdP\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/idp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := idp.LookupSocial(ctx, \u0026idp.LookupSocialArgs{\n\t\t\tName: pulumi.StringRef(\"My Facebook IdP\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.idp.IdpFunctions;\nimport com.pulumi.okta.idp.inputs.GetSocialArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IdpFunctions.getSocial(GetSocialArgs.builder()\n            .name(\"My Facebook IdP\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:idp:getSocial\n      arguments:\n        name: My Facebook IdP\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSocial.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the social idp to retrieve, conflicts with `name`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the social idp to retrieve, conflicts with `id`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSocial.\n",
                "properties": {
                    "accountLinkAction": {
                        "description": "Specifies the account linking action for an IdP user.\n",
                        "type": "string"
                    },
                    "accountLinkGroupIncludes": {
                        "description": "Group memberships to determine link candidates.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "authorizationBinding": {
                        "description": "The method of making an authorization request.\n",
                        "type": "string"
                    },
                    "authorizationUrl": {
                        "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.\n",
                        "type": "string"
                    },
                    "clientId": {
                        "description": "Unique identifier issued by AS for the Okta IdP instance.\n",
                        "type": "string"
                    },
                    "clientSecret": {
                        "description": "Client secret issued by AS for the Okta IdP instance.\n",
                        "secret": true,
                        "type": "string"
                    },
                    "deprovisionedAction": {
                        "description": "Action for a previously deprovisioned IdP user during authentication.\n",
                        "type": "string"
                    },
                    "groupsAction": {
                        "description": "Provisioning action for IdP user's group memberships.\n",
                        "type": "string"
                    },
                    "groupsAssignments": {
                        "description": "List of Okta Group IDs.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "groupsAttribute": {
                        "description": "IdP user profile attribute name for an array value that contains group memberships.\n",
                        "type": "string"
                    },
                    "groupsFilters": {
                        "description": "Whitelist of Okta Group identifiers.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The id of the social idp to retrieve, conflicts with `name`.\n",
                        "type": "string"
                    },
                    "issuerMode": {
                        "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL.\n",
                        "type": "string"
                    },
                    "maxClockSkew": {
                        "description": "Maximum allowable clock-skew when processing messages from the IdP.\n",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the social idp to retrieve, conflicts with `id`.\n",
                        "type": "string"
                    },
                    "profileMaster": {
                        "description": "Determines if the IdP should act as a source of truth for user profile attributes.\n",
                        "type": "boolean"
                    },
                    "protocolType": {
                        "description": "The type of protocol to use.\n",
                        "type": "string"
                    },
                    "provisioningAction": {
                        "description": "Provisioning action for an IdP user during authentication.\n",
                        "type": "string"
                    },
                    "scopes": {
                        "description": "The scopes of the IdP.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "description": "Status of the IdP.\n",
                        "type": "string"
                    },
                    "subjectMatchAttribute": {
                        "description": "Okta user profile attribute for matching transformed IdP username.\n",
                        "type": "string"
                    },
                    "subjectMatchType": {
                        "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username.\n",
                        "type": "string"
                    },
                    "suspendedAction": {
                        "description": "Action for a previously suspended IdP user during authentication.\n",
                        "type": "string"
                    },
                    "tokenBinding": {
                        "description": "The method of making a token request.\n",
                        "type": "string"
                    },
                    "tokenUrl": {
                        "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.\n",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of Social IdP. See API docs [Identity Provider Type](https://developer.okta.com/docs/reference/api/idps/#identity-provider-type)\n",
                        "type": "string"
                    },
                    "usernameTemplate": {
                        "description": "Okta EL Expression to generate or transform a unique username for the IdP user.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "accountLinkAction",
                    "accountLinkGroupIncludes",
                    "authorizationBinding",
                    "authorizationUrl",
                    "clientId",
                    "clientSecret",
                    "deprovisionedAction",
                    "groupsAction",
                    "groupsAssignments",
                    "groupsAttribute",
                    "groupsFilters",
                    "issuerMode",
                    "maxClockSkew",
                    "profileMaster",
                    "protocolType",
                    "provisioningAction",
                    "scopes",
                    "status",
                    "subjectMatchAttribute",
                    "subjectMatchType",
                    "suspendedAction",
                    "tokenBinding",
                    "tokenUrl",
                    "type",
                    "usernameTemplate"
                ],
                "type": "object"
            }
        },
        "okta:index/getAppGroupAssignments:getAppGroupAssignments": {
            "description": "Get a set of groups assigned to an Okta application.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.getAppGroupAssignments({\n    id: testOktaAppOauth.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.get_app_group_assignments(id=test_okta_app_oauth[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.GetAppGroupAssignments.Invoke(new()\n    {\n        Id = testOktaAppOauth.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.LookupAppGroupAssignments(ctx, \u0026okta.LookupAppGroupAssignmentsArgs{\n\t\t\tId: testOktaAppOauth.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetAppGroupAssignmentsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OktaFunctions.getAppGroupAssignments(GetAppGroupAssignmentsArgs.builder()\n            .id(testOktaAppOauth.id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      function: okta:getAppGroupAssignments\n      arguments:\n        id: ${testOktaAppOauth.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppGroupAssignments.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the Okta App being queried for groups\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppGroupAssignments.\n",
                "properties": {
                    "groups": {
                        "description": "List of groups IDs assigned to the app\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "ID of the Okta App being queried for groups\n",
                        "type": "string"
                    }
                },
                "required": [
                    "groups",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:index/getAppSignonPolicy:getAppSignonPolicy": {
            "description": "Get a sign-on policy for the application.\n\n\u003e **WARNING:** This feature is only available as a part of the \nIdentity Engine. Contact support \nfor further information.\n\n\u003e Inside the product a sign-on policy is referenced as an _authentication\npolicy_, in the public API the policy is of type\n[`ACCESS_POLICY`](https://developer.okta.com/docs/reference/api/policy/#policy-object).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.getAppSignonPolicy({\n    appId: \"app_id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.get_app_signon_policy(app_id=\"app_id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.GetAppSignonPolicy.Invoke(new()\n    {\n        AppId = \"app_id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.LookupAppSignonPolicy(ctx, \u0026okta.LookupAppSignonPolicyArgs{\n\t\t\tAppId: \"app_id\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetAppSignonPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OktaFunctions.getAppSignonPolicy(GetAppSignonPolicyArgs.builder()\n            .appId(\"app_id\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:getAppSignonPolicy\n      arguments:\n        appId: app_id\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSignonPolicy.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "App ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "appId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSignonPolicy.\n",
                "properties": {
                    "appId": {
                        "description": "App ID\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Policy name\n",
                        "type": "string"
                    }
                },
                "required": [
                    "appId",
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:index/getAppUserAssignments:getAppUserAssignments": {
            "description": "Get a set of users assigned to an Okta application.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.getAppUserAssignments({\n    id: testOktaAppOauth.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.get_app_user_assignments(id=test_okta_app_oauth[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.GetAppUserAssignments.Invoke(new()\n    {\n        Id = testOktaAppOauth.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetAppUserAssignments(ctx, \u0026okta.GetAppUserAssignmentsArgs{\n\t\t\tId: testOktaAppOauth.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetAppUserAssignmentsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OktaFunctions.getAppUserAssignments(GetAppUserAssignmentsArgs.builder()\n            .id(testOktaAppOauth.id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      function: okta:getAppUserAssignments\n      arguments:\n        id: ${testOktaAppOauth.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppUserAssignments.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the Okta App being queried for groups\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppUserAssignments.\n",
                "properties": {
                    "id": {
                        "description": "ID of the Okta App being queried for groups\n",
                        "type": "string"
                    },
                    "users": {
                        "description": "List of user IDs assigned to the app\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "users"
                ],
                "type": "object"
            }
        },
        "okta:index/getApps:getApps": {
            "inputs": {
                "description": "A collection of arguments for invoking getApps.\n",
                "properties": {
                    "activeOnly": {
                        "type": "boolean",
                        "description": "Search only active applications.\n"
                    },
                    "includeNonDeleted": {
                        "type": "boolean",
                        "description": "Specifies whether to include non-active, but not deleted apps in the results.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Searches for applications whose label or name property matches this value exactly.\n"
                    },
                    "labelPrefix": {
                        "type": "string",
                        "description": "Searches for applications whose label or name property begins with this value. **Warning:** This might not work as intended and will be removed in the future release. Use `q` instead.\n",
                        "deprecationMessage": "Use `q` instead. This attribute will be removed in a future version."
                    },
                    "q": {
                        "type": "string",
                        "description": "Searches for apps with name or label properties that starts with the `q` value.\n"
                    },
                    "useOptimization": {
                        "type": "boolean",
                        "description": "Specifies whether to use query optimization. If you specify `useOptimization=true` in the request query, the response contains a subset of app instance properties.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getApps.\n",
                "properties": {
                    "activeOnly": {
                        "description": "Search only active applications.\n",
                        "type": "boolean"
                    },
                    "apps": {
                        "description": "The list of applications that match the search criteria.\n",
                        "items": {
                            "$ref": "#/types/okta:index/getAppsApp:getAppsApp"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "includeNonDeleted": {
                        "description": "Specifies whether to include non-active, but not deleted apps in the results.\n",
                        "type": "boolean"
                    },
                    "label": {
                        "description": "Searches for applications whose label or name property matches this value exactly.\n",
                        "type": "string"
                    },
                    "labelPrefix": {
                        "deprecationMessage": "Use `q` instead. This attribute will be removed in a future version.",
                        "description": "Searches for applications whose label or name property begins with this value. **Warning:** This might not work as intended and will be removed in the future release. Use `q` instead.\n",
                        "type": "string"
                    },
                    "q": {
                        "description": "Searches for apps with name or label properties that starts with the `q` value.\n",
                        "type": "string"
                    },
                    "useOptimization": {
                        "description": "Specifies whether to use query optimization. If you specify `useOptimization=true` in the request query, the response contains a subset of app instance properties.\n",
                        "type": "boolean"
                    }
                },
                "required": [
                    "apps",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:index/getAuthServerClaim:getAuthServerClaim": {
            "description": "Get authorization server claim from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.getAuthServerClaim({\n    authServerId: \"default\",\n    name: \"birthdate\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.get_auth_server_claim(auth_server_id=\"default\",\n    name=\"birthdate\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.GetAuthServerClaim.Invoke(new()\n    {\n        AuthServerId = \"default\",\n        Name = \"birthdate\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetAuthServerClaim(ctx, \u0026okta.GetAuthServerClaimArgs{\n\t\t\tAuthServerId: \"default\",\n\t\t\tName:         pulumi.StringRef(\"birthdate\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetAuthServerClaimArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OktaFunctions.getAuthServerClaim(GetAuthServerClaimArgs.builder()\n            .authServerId(\"default\")\n            .name(\"birthdate\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      function: okta:getAuthServerClaim\n      arguments:\n        authServerId: default\n        name: birthdate\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAuthServerClaim.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "Auth server ID\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Name of the claim. Conflicts with `name`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the claim. Conflicts with `id`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authServerId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAuthServerClaim.\n",
                "properties": {
                    "alwaysIncludeInToken": {
                        "description": "Specifies whether to include Claims in the token.\n",
                        "type": "boolean"
                    },
                    "authServerId": {
                        "description": "Auth server ID\n",
                        "type": "string"
                    },
                    "claimType": {
                        "description": "Specifies whether the Claim is for an access token (`RESOURCE`) or ID token (`IDENTITY`).\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "Name of the claim. Conflicts with `name`.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the claim. Conflicts with `id`.\n",
                        "type": "string"
                    },
                    "scopes": {
                        "description": "Auth server claim list of scopes\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "description": "Status of the claim.\n",
                        "type": "string"
                    },
                    "value": {
                        "description": "Value of the claim.\n",
                        "type": "string"
                    },
                    "valueType": {
                        "description": "Specifies whether the Claim is an Okta EL expression (`EXPRESSION`), a set of groups (`GROUPS`), or a system claim (`SYSTEM`)\n",
                        "type": "string"
                    }
                },
                "required": [
                    "alwaysIncludeInToken",
                    "authServerId",
                    "claimType",
                    "scopes",
                    "status",
                    "value",
                    "valueType"
                ],
                "type": "object"
            }
        },
        "okta:index/getAuthServerClaims:getAuthServerClaims": {
            "description": "Get a list of authorization server claims from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.getAuthServerClaims({\n    authServerId: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.get_auth_server_claims(auth_server_id=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.GetAuthServerClaims.Invoke(new()\n    {\n        AuthServerId = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetAuthServerClaims(ctx, \u0026okta.GetAuthServerClaimsArgs{\n\t\t\tAuthServerId: \"default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetAuthServerClaimsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OktaFunctions.getAuthServerClaims(GetAuthServerClaimsArgs.builder()\n            .authServerId(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      function: okta:getAuthServerClaims\n      arguments:\n        authServerId: default\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAuthServerClaims.\n",
                "properties": {
                    "authServerId": {
                        "type": "string",
                        "description": "Auth server ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "authServerId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAuthServerClaims.\n",
                "properties": {
                    "authServerId": {
                        "description": "Auth server ID\n",
                        "type": "string"
                    },
                    "claims": {
                        "description": "Collection of authorization server claims retrieved from Okta with the following properties.\n",
                        "items": {
                            "$ref": "#/types/okta:index/getAuthServerClaimsClaim:getAuthServerClaimsClaim"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "authServerId",
                    "claims",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:index/getAuthenticator:getAuthenticator": {
            "description": "Get an authenticator by key, name of ID.\n\n\u003e **WARNING:** This feature is only available as a part of the \nIdentity Engine. Contact support \nfor further information.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.getAuthenticator({\n    key: \"security_question\",\n});\nconst test1 = okta.getAuthenticator({\n    name: \"Okta Verify\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.get_authenticator(key=\"security_question\")\ntest1 = okta.get_authenticator(name=\"Okta Verify\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.GetAuthenticator.Invoke(new()\n    {\n        Key = \"security_question\",\n    });\n\n    var test1 = Okta.GetAuthenticator.Invoke(new()\n    {\n        Name = \"Okta Verify\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.LookupAuthenticator(ctx, \u0026okta.LookupAuthenticatorArgs{\n\t\t\tKey: pulumi.StringRef(\"security_question\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.LookupAuthenticator(ctx, \u0026okta.LookupAuthenticatorArgs{\n\t\t\tName: pulumi.StringRef(\"Okta Verify\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetAuthenticatorArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()\n            .key(\"security_question\")\n            .build());\n\n        final var test1 = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()\n            .name(\"Okta Verify\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      function: okta:getAuthenticator\n      arguments:\n        key: security_question\n  test1:\n    fn::invoke:\n      function: okta:getAuthenticator\n      arguments:\n        name: Okta Verify\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAuthenticator.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the authenticator.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A human-readable string that identifies the authenticator.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the authenticator.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAuthenticator.\n",
                "properties": {
                    "id": {
                        "description": "ID of the authenticator.\n",
                        "type": "string"
                    },
                    "key": {
                        "description": "A human-readable string that identifies the authenticator.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the authenticator.\n",
                        "type": "string"
                    },
                    "providerAuthPort": {
                        "description": "The RADIUS server port (for example 1812). This is defined when the On-Prem RADIUS server is configured\n",
                        "type": "integer"
                    },
                    "providerHostname": {
                        "description": "Server host name or IP address\n",
                        "type": "string"
                    },
                    "providerInstanceId": {
                        "description": "(Specific to `security_key`) App Instance ID.\n",
                        "type": "string"
                    },
                    "providerJson": {
                        "description": "Authenticator Provider in JSON format\n",
                        "type": "string"
                    },
                    "providerType": {
                        "description": "Provider type.\n",
                        "type": "string"
                    },
                    "providerUserNameTemplate": {
                        "description": "Username template expected by the provider.\n",
                        "type": "string"
                    },
                    "settings": {
                        "description": "Authenticator settings in JSON format\n",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of the Authenticator.\n",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the authenticator\n",
                        "type": "string"
                    }
                },
                "required": [
                    "providerAuthPort",
                    "providerHostname",
                    "providerInstanceId",
                    "providerJson",
                    "providerType",
                    "providerUserNameTemplate",
                    "settings",
                    "status",
                    "type"
                ],
                "type": "object"
            }
        },
        "okta:index/getBehaviour:getBehaviour": {
            "description": "Get a behavior by name or ID.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:getBehaviour\n      arguments:\n        label: New City\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getBehaviour.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Behavior ID.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Behavior name.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBehaviour.\n",
                "properties": {
                    "id": {
                        "description": "Behavior ID.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Behavior name.\n",
                        "type": "string"
                    },
                    "settings": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of behavior settings.\n",
                        "type": "object"
                    },
                    "status": {
                        "description": "Behavior status.\n",
                        "type": "string"
                    },
                    "type": {
                        "description": "Behavior type.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "settings",
                    "status",
                    "type"
                ],
                "type": "object"
            }
        },
        "okta:index/getBehaviours:getBehaviours": {
            "description": "Get a behaviors by search criteria.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.getBehaviours({\n    q: \"New\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.get_behaviours(q=\"New\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.GetBehaviours.Invoke(new()\n    {\n        Q = \"New\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetBehaviours(ctx, \u0026okta.GetBehavioursArgs{\n\t\t\tQ: pulumi.StringRef(\"New\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetBehavioursArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OktaFunctions.getBehaviours(GetBehavioursArgs.builder()\n            .q(\"New\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:getBehaviours\n      arguments:\n        q: New\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getBehaviours.\n",
                "properties": {
                    "q": {
                        "type": "string",
                        "description": "Searches the name property of behaviors for matching value\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBehaviours.\n",
                "properties": {
                    "behaviors": {
                        "items": {
                            "$ref": "#/types/okta:index/getBehavioursBehavior:getBehavioursBehavior"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "q": {
                        "description": "Searches the name property of behaviors for matching value\n",
                        "type": "string"
                    }
                },
                "required": [
                    "behaviors",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:index/getBrand:getBrand": {
            "description": "Get a single Brand from Okta.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getBrand.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBrand.\n",
                "properties": {
                    "brandId": {
                        "description": "Brand ID\n",
                        "type": "string"
                    },
                    "customPrivacyPolicyUrl": {
                        "description": "Custom privacy policy URL\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of the Brand\n",
                        "type": "string"
                    },
                    "links": {
                        "description": "Link relations for this object - JSON HAL - Discoverable resources related to the brand\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Brand name\n",
                        "type": "string"
                    },
                    "removePoweredByOkta": {
                        "description": "Removes \"Powered by Okta\" from the Okta-hosted sign-in page and \"© 2021 Okta, Inc.\" from the Okta End-User Dashboard\n",
                        "type": "boolean"
                    }
                },
                "required": [
                    "brandId",
                    "customPrivacyPolicyUrl",
                    "id",
                    "links",
                    "name",
                    "removePoweredByOkta"
                ],
                "type": "object"
            }
        },
        "okta:index/getBrands:getBrands": {
            "description": "Get the brands belonging to an Okta organization.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst test = okta.getBrands({});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\ntest = okta.get_brands()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Okta.GetBrands.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetBrands(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OktaFunctions.getBrands(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      function: okta:getBrands\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getBrands.\n",
                "properties": {
                    "brands": {
                        "description": "List of `okta.Brand` belonging to the organization\n",
                        "items": {
                            "$ref": "#/types/okta:index/getBrandsBrand:getBrandsBrand"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "brands",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:index/getDefaultSigninPage:getDefaultSigninPage": {
            "description": "Retrieve the default signin page of a brand\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultSigninPage.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "brand id of the preview signin page\n"
                    },
                    "contentSecurityPolicySetting": {
                        "$ref": "#/types/okta:index/getDefaultSigninPageContentSecurityPolicySetting:getDefaultSigninPageContentSecurityPolicySetting"
                    },
                    "widgetCustomizations": {
                        "$ref": "#/types/okta:index/getDefaultSigninPageWidgetCustomizations:getDefaultSigninPageWidgetCustomizations"
                    }
                },
                "type": "object",
                "required": [
                    "brandId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultSigninPage.\n",
                "properties": {
                    "brandId": {
                        "description": "brand id of the preview signin page\n",
                        "type": "string"
                    },
                    "contentSecurityPolicySetting": {
                        "$ref": "#/types/okta:index/getDefaultSigninPageContentSecurityPolicySetting:getDefaultSigninPageContentSecurityPolicySetting"
                    },
                    "id": {
                        "description": "placeholder id\n",
                        "type": "string"
                    },
                    "pageContent": {
                        "description": "page content of the preview signin page\n",
                        "type": "string"
                    },
                    "widgetCustomizations": {
                        "$ref": "#/types/okta:index/getDefaultSigninPageWidgetCustomizations:getDefaultSigninPageWidgetCustomizations"
                    },
                    "widgetVersion": {
                        "description": "widget version specified as a Semver\n",
                        "type": "string"
                    }
                },
                "required": [
                    "brandId",
                    "id",
                    "pageContent",
                    "widgetVersion"
                ],
                "type": "object"
            }
        },
        "okta:index/getDeviceAssurancePolicy:getDeviceAssurancePolicy": {
            "description": "Get a policy assurance from Okta.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDeviceAssurancePolicy.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the user type to retrieve, conflicts with `name`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of user type to retrieve, conflicts with `id`.\n"
                    },
                    "secureHardwarePresent": {
                        "type": "boolean",
                        "description": "Indicates if the device contains a secure hardware functionality\n"
                    },
                    "thirdPartySignalProvider": {
                        "$ref": "#/types/okta:index/getDeviceAssurancePolicyThirdPartySignalProvider:getDeviceAssurancePolicyThirdPartySignalProvider",
                        "description": "Indicates if the device contains a secure hardware functionality\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDeviceAssurancePolicy.\n",
                "properties": {
                    "diskEncryptionType": {
                        "$ref": "#/types/okta:index/getDeviceAssurancePolicyDiskEncryptionType:getDeviceAssurancePolicyDiskEncryptionType",
                        "description": "List of disk encryption type, can be `FULL`, `USER`\n"
                    },
                    "id": {
                        "description": "ID of the user type to retrieve, conflicts with `name`.\n",
                        "type": "string"
                    },
                    "jailbreak": {
                        "description": "Is the device jailbroken in the device assurance policy.\n",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "Name of user type to retrieve, conflicts with `id`.\n",
                        "type": "string"
                    },
                    "osVersion": {
                        "$ref": "#/types/okta:index/getDeviceAssurancePolicyOsVersion:getDeviceAssurancePolicyOsVersion",
                        "description": "Minimum os version of the device in the device assurance policy.\n"
                    },
                    "osVersionConstraints": {
                        "description": "The list of os version constraints.\n",
                        "items": {
                            "$ref": "#/types/okta:index/getDeviceAssurancePolicyOsVersionConstraint:getDeviceAssurancePolicyOsVersionConstraint"
                        },
                        "type": "array"
                    },
                    "platform": {
                        "description": "Policy device assurance platform\n",
                        "type": "string"
                    },
                    "screenlockType": {
                        "$ref": "#/types/okta:index/getDeviceAssurancePolicyScreenlockType:getDeviceAssurancePolicyScreenlockType",
                        "description": "List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`\n"
                    },
                    "secureHardwarePresent": {
                        "description": "Indicates if the device contains a secure hardware functionality\n",
                        "type": "boolean"
                    },
                    "thirdPartySignalProvider": {
                        "$ref": "#/types/okta:index/getDeviceAssurancePolicyThirdPartySignalProvider:getDeviceAssurancePolicyThirdPartySignalProvider",
                        "description": "Indicates if the device contains a secure hardware functionality\n"
                    }
                },
                "required": [
                    "diskEncryptionType",
                    "jailbreak",
                    "osVersion",
                    "osVersionConstraints",
                    "platform",
                    "screenlockType"
                ],
                "type": "object"
            }
        },
        "okta:index/getDomain:getDomain": {
            "description": "Get a domain from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = new okta.Domain(\"example\", {name: \"www.example.com\"});\nconst by_name = okta.getDomain({\n    domainIdOrName: \"www.example.com\",\n});\nconst by_id = okta.getDomainOutput({\n    domainIdOrName: example.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.Domain(\"example\", name=\"www.example.com\")\nby_name = okta.get_domain(domain_id_or_name=\"www.example.com\")\nby_id = okta.get_domain_output(domain_id_or_name=example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Okta.Domain(\"example\", new()\n    {\n        Name = \"www.example.com\",\n    });\n\n    var by_name = Okta.GetDomain.Invoke(new()\n    {\n        DomainIdOrName = \"www.example.com\",\n    });\n\n    var by_id = Okta.GetDomain.Invoke(new()\n    {\n        DomainIdOrName = example.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := okta.NewDomain(ctx, \"example\", \u0026okta.DomainArgs{\n\t\t\tName: pulumi.String(\"www.example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okta.LookupDomain(ctx, \u0026okta.LookupDomainArgs{\n\t\t\tDomainIdOrName: \"www.example.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_ = okta.LookupDomainOutput(ctx, okta.GetDomainOutputArgs{\n\t\t\tDomainIdOrName: example.ID(),\n\t\t}, nil)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.Domain;\nimport com.pulumi.okta.DomainArgs;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetDomainArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Domain(\"example\", DomainArgs.builder()\n            .name(\"www.example.com\")\n            .build());\n\n        final var by-name = OktaFunctions.getDomain(GetDomainArgs.builder()\n            .domainIdOrName(\"www.example.com\")\n            .build());\n\n        final var by-id = OktaFunctions.getDomain(GetDomainArgs.builder()\n            .domainIdOrName(example.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: okta:Domain\n    properties:\n      name: www.example.com\nvariables:\n  by-name:\n    fn::invoke:\n      function: okta:getDomain\n      arguments:\n        domainIdOrName: www.example.com\n  by-id:\n    fn::invoke:\n      function: okta:getDomain\n      arguments:\n        domainIdOrName: ${example.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDomain.\n",
                "properties": {
                    "domainIdOrName": {
                        "type": "string",
                        "description": "Brand ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "domainIdOrName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDomain.\n",
                "properties": {
                    "certificateSourceType": {
                        "description": "Certificate source type that indicates whether the certificate is provided by the user or Okta. Values: MANUAL, OKTA_MANAGED\n",
                        "type": "string"
                    },
                    "dnsRecords": {
                        "description": "TXT and CNAME records to be registered for the Domain\n",
                        "items": {
                            "$ref": "#/types/okta:index/getDomainDnsRecord:getDomainDnsRecord"
                        },
                        "type": "array"
                    },
                    "domain": {
                        "description": "Domain name\n",
                        "type": "string"
                    },
                    "domainIdOrName": {
                        "description": "Brand ID\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of the Domain\n",
                        "type": "string"
                    },
                    "publicCertificate": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Certificate metadata for the Domain\n",
                        "type": "object"
                    },
                    "validationStatus": {
                        "description": "Status of the domain. Values: NOT*STARTED, IN*PROGRESS, VERIFIED, COMPLETED\n",
                        "type": "string"
                    }
                },
                "required": [
                    "certificateSourceType",
                    "dnsRecords",
                    "domain",
                    "domainIdOrName",
                    "id",
                    "publicCertificate",
                    "validationStatus"
                ],
                "type": "object"
            }
        },
        "okta:index/getEmailCustomization:getEmailCustomization": {
            "description": "Get the email customization of an email template belonging to a brand in an Okta organization.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getEmailCustomization.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    },
                    "customizationId": {
                        "type": "string",
                        "description": "The ID of the customization\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template Name\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId",
                    "customizationId",
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEmailCustomization.\n",
                "properties": {
                    "body": {
                        "description": "The body of the customization\n",
                        "type": "string"
                    },
                    "brandId": {
                        "description": "Brand ID\n",
                        "type": "string"
                    },
                    "customizationId": {
                        "description": "The ID of the customization\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of the customization\n",
                        "type": "string"
                    },
                    "isDefault": {
                        "description": "Whether the customization is the default\n",
                        "type": "boolean"
                    },
                    "language": {
                        "description": "The language supported by the customization\n",
                        "type": "string"
                    },
                    "links": {
                        "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template\n",
                        "type": "string"
                    },
                    "subject": {
                        "description": "The subject of the customization\n",
                        "type": "string"
                    },
                    "templateName": {
                        "description": "Template Name\n",
                        "type": "string"
                    }
                },
                "required": [
                    "body",
                    "brandId",
                    "customizationId",
                    "id",
                    "isDefault",
                    "language",
                    "links",
                    "subject",
                    "templateName"
                ],
                "type": "object"
            }
        },
        "okta:index/getEmailCustomizations:getEmailCustomizations": {
            "description": "Get the email customizations of an email template belonging to a brand in an Okta organization.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getEmailCustomizations.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template Name\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId",
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEmailCustomizations.\n",
                "properties": {
                    "brandId": {
                        "description": "Brand ID\n",
                        "type": "string"
                    },
                    "emailCustomizations": {
                        "description": "List of `okta.EmailCustomization` belonging to the named email template of the brand in the organization\n",
                        "items": {
                            "$ref": "#/types/okta:index/getEmailCustomizationsEmailCustomization:getEmailCustomizationsEmailCustomization"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "templateName": {
                        "description": "Template Name\n",
                        "type": "string"
                    }
                },
                "required": [
                    "brandId",
                    "emailCustomizations",
                    "templateName",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:index/getEmailSmtpServer:getEmailSmtpServer": {
            "inputs": {
                "description": "A collection of arguments for invoking getEmailSmtpServer.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEmailSmtpServer.\n",
                "properties": {
                    "alias": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "host": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "alias",
                    "enabled",
                    "host",
                    "id",
                    "port",
                    "username"
                ],
                "type": "object"
            }
        },
        "okta:index/getFeatures:getFeatures": {
            "description": "Get a list of features from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.getFeatures({\n    label: \"Android Device Trust\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.get_features(label=\"Android Device Trust\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.GetFeatures.Invoke(new()\n    {\n        Label = \"Android Device Trust\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetFeatures(ctx, \u0026okta.GetFeaturesArgs{\n\t\t\tLabel: pulumi.StringRef(\"Android Device Trust\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetFeaturesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OktaFunctions.getFeatures(GetFeaturesArgs.builder()\n            .label(\"Android Device Trust\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:getFeatures\n      arguments:\n        label: Android Device Trust\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFeatures.\n",
                "properties": {
                    "label": {
                        "type": "string",
                        "description": "Searches for features whose label or name property matches this value exactly. Case sensitive\n"
                    },
                    "substring": {
                        "type": "string",
                        "description": "Searches for features whose label or name property substring match this value. Case sensitive\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeatures.\n",
                "properties": {
                    "features": {
                        "description": "List of `okta.Feature` belonging to the organization\n",
                        "items": {
                            "$ref": "#/types/okta:index/getFeaturesFeature:getFeaturesFeature"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "Generated ID\n",
                        "type": "string"
                    },
                    "label": {
                        "description": "Searches for features whose label or name property matches this value exactly. Case sensitive\n",
                        "type": "string"
                    },
                    "substring": {
                        "description": "Searches for features whose label or name property substring match this value. Case sensitive\n",
                        "type": "string"
                    }
                },
                "required": [
                    "features",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:index/getGroups:getGroups": {
            "description": "Get a list of groups from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.getGroups({\n    q: \"Engineering - \",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.get_groups(q=\"Engineering - \")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.GetGroups.Invoke(new()\n    {\n        Q = \"Engineering - \",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetGroups(ctx, \u0026okta.GetGroupsArgs{\n\t\t\tQ: pulumi.StringRef(\"Engineering - \"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetGroupsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OktaFunctions.getGroups(GetGroupsArgs.builder()\n            .q(\"Engineering - \")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:getGroups\n      arguments:\n        q: 'Engineering - '\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGroups.\n",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "description": "The maximum number of groups returned by the Okta API, between 1 and 10000.\n"
                    },
                    "q": {
                        "type": "string",
                        "description": "Searches the name property of groups for matching value\n"
                    },
                    "search": {
                        "type": "string",
                        "description": "Searches for groups with a supported filtering expression for all attributes except for '*embedded', '*links', and 'objectClass'\n"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroups.\n",
                "properties": {
                    "groups": {
                        "items": {
                            "$ref": "#/types/okta:index/getGroupsGroup:getGroupsGroup"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "limit": {
                        "description": "The maximum number of groups returned by the Okta API, between 1 and 10000.\n",
                        "type": "integer"
                    },
                    "q": {
                        "description": "Searches the name property of groups for matching value\n",
                        "type": "string"
                    },
                    "search": {
                        "description": "Searches for groups with a supported filtering expression for all attributes except for '*embedded', '*links', and 'objectClass'\n",
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "groups",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:index/getLogStream:getLogStream": {
            "description": "Log Streams\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLogStream.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the log stream to retrieve, conflicts with `name`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name for the Log Stream object, conflicts with `id`.\n"
                    },
                    "settings": {
                        "$ref": "#/types/okta:index/getLogStreamSettings:getLogStreamSettings"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLogStream.\n",
                "properties": {
                    "id": {
                        "description": "ID of the log stream to retrieve, conflicts with `name`.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Unique name for the Log Stream object, conflicts with `id`.\n",
                        "type": "string"
                    },
                    "settings": {
                        "$ref": "#/types/okta:index/getLogStreamSettings:getLogStreamSettings"
                    },
                    "status": {
                        "description": "Log Stream Status - can either be ACTIVE or INACTIVE only\n",
                        "type": "string"
                    },
                    "type": {
                        "description": "Streaming provider used - aws*eventbridge or splunk*cloud_logstreaming\n",
                        "type": "string"
                    }
                },
                "required": [
                    "status",
                    "type"
                ],
                "type": "object"
            }
        },
        "okta:index/getNetworkZone:getNetworkZone": {
            "description": "Gets Okta Network Zone.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.getNetworkZone({\n    name: \"Block Antarctica\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.get_network_zone(name=\"Block Antarctica\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.GetNetworkZone.Invoke(new()\n    {\n        Name = \"Block Antarctica\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetNetworkZone(ctx, \u0026okta.GetNetworkZoneArgs{\n\t\t\tName: pulumi.StringRef(\"Block Antarctica\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetNetworkZoneArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OktaFunctions.getNetworkZone(GetNetworkZoneArgs.builder()\n            .name(\"Block Antarctica\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:getNetworkZone\n      arguments:\n        name: Block Antarctica\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getNetworkZone.\n",
                "properties": {
                    "dynamicLocationsExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of locations ISO-3166-1(2) excluded. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC_V2`\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of the network zone to retrieve, conflicts with `name`.\n"
                    },
                    "ipServiceCategoriesExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ip service excluded. Use with type `DYNAMIC_V2`\n"
                    },
                    "ipServiceCategoriesIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ip service included. Use with type `DYNAMIC_V2`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the network zone to retrieve, conflicts with `id`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNetworkZone.\n",
                "properties": {
                    "asns": {
                        "description": "List of asns included. Format of each array value: a string representation of an ASN numeric value. Use with type `DYNAMIC` or `DYNAMIC_V2`\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "dynamicLocations": {
                        "description": "Array of locations ISO-3166-1(2) included. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC` or `DYNAMIC_V2`\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "dynamicLocationsExcludes": {
                        "description": "Array of locations ISO-3166-1(2) excluded. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC_V2`\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "dynamicProxyType": {
                        "description": "Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or `NotTorAnonymizer`. Use with type `DYNAMIC`\n",
                        "type": "string"
                    },
                    "gateways": {
                        "description": "Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples. Use with type `IP`\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "ID of the network zone to retrieve, conflicts with `name`.\n",
                        "type": "string"
                    },
                    "ipServiceCategoriesExcludes": {
                        "description": "List of ip service excluded. Use with type `DYNAMIC_V2`\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ipServiceCategoriesIncludes": {
                        "description": "List of ip service included. Use with type `DYNAMIC_V2`\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "Name of the network zone to retrieve, conflicts with `id`.\n",
                        "type": "string"
                    },
                    "proxies": {
                        "description": "Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples. Can not be set if `usage` is set to `BLOCKLIST`. Use with type `IP`\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "description": "Network Status - can either be ACTIVE or INACTIVE only\n",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the Network Zone - can be `IP`, `DYNAMIC` or `DYNAMIC_V2` only\n",
                        "type": "string"
                    },
                    "usage": {
                        "description": "Zone's purpose: POLICY or BLOCKLIST\n",
                        "type": "string"
                    }
                },
                "required": [
                    "asns",
                    "dynamicLocations",
                    "dynamicProxyType",
                    "gateways",
                    "proxies",
                    "status",
                    "type",
                    "usage"
                ],
                "type": "object"
            }
        },
        "okta:index/getOrgMetadata:getOrgMetadata": {
            "description": "Retrieves the well-known org metadata, which includes the id, configured custom domains, authentication pipeline, and various other org settings.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOrgMetadata.\n",
                "properties": {
                    "domains": {
                        "$ref": "#/types/okta:index/getOrgMetadataDomains:getOrgMetadataDomains",
                        "description": "The URIs for the org's configured domains.\n"
                    },
                    "settings": {
                        "$ref": "#/types/okta:index/getOrgMetadataSettings:getOrgMetadataSettings",
                        "description": "The wellknown org settings (safe for public consumption).\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOrgMetadata.\n",
                "properties": {
                    "domains": {
                        "$ref": "#/types/okta:index/getOrgMetadataDomains:getOrgMetadataDomains",
                        "description": "The URIs for the org's configured domains.\n"
                    },
                    "id": {
                        "description": "The unique identifier of the Org.\n",
                        "type": "string"
                    },
                    "pipeline": {
                        "description": "The authentication pipeline of the org. idx means the org is using the Identity Engine, while v1 means the org is using the Classic authentication pipeline.\n",
                        "type": "string"
                    },
                    "settings": {
                        "$ref": "#/types/okta:index/getOrgMetadataSettings:getOrgMetadataSettings",
                        "description": "The wellknown org settings (safe for public consumption).\n"
                    }
                },
                "required": [
                    "id",
                    "pipeline"
                ],
                "type": "object"
            }
        },
        "okta:index/getRealm:getRealm": {
            "inputs": {
                "description": "A collection of arguments for invoking getRealm.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "realmType": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRealm.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "realmType": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isDefault",
                    "name"
                ],
                "type": "object"
            }
        },
        "okta:index/getRealmAssignment:getRealmAssignment": {
            "inputs": {
                "description": "A collection of arguments for invoking getRealmAssignment.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRealmAssignment.\n",
                "properties": {
                    "conditionExpression": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "profileSourceId": {
                        "type": "string"
                    },
                    "realmId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "conditionExpression",
                    "id",
                    "isDefault",
                    "priority",
                    "profileSourceId",
                    "realmId",
                    "status"
                ],
                "type": "object"
            }
        },
        "okta:index/getRoleSubscription:getRoleSubscription": {
            "description": "Get subscriptions of a Role with a specific type\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.getRoleSubscription({\n    notificationType: \"APP_IMPORT\",\n    roleType: \"SUPER_ADMIN\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.get_role_subscription(notification_type=\"APP_IMPORT\",\n    role_type=\"SUPER_ADMIN\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.GetRoleSubscription.Invoke(new()\n    {\n        NotificationType = \"APP_IMPORT\",\n        RoleType = \"SUPER_ADMIN\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.LookupRoleSubscription(ctx, \u0026okta.LookupRoleSubscriptionArgs{\n\t\t\tNotificationType: \"APP_IMPORT\",\n\t\t\tRoleType:         \"SUPER_ADMIN\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetRoleSubscriptionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OktaFunctions.getRoleSubscription(GetRoleSubscriptionArgs.builder()\n            .notificationType(\"APP_IMPORT\")\n            .roleType(\"SUPER_ADMIN\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:getRoleSubscription\n      arguments:\n        notificationType: APP_IMPORT\n        roleType: SUPER_ADMIN\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRoleSubscription.\n",
                "properties": {
                    "notificationType": {
                        "type": "string",
                        "description": "Type of the notification\n"
                    },
                    "roleType": {
                        "type": "string",
                        "description": "Type of the role\n"
                    }
                },
                "type": "object",
                "required": [
                    "notificationType",
                    "roleType"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRoleSubscription.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "notificationType": {
                        "description": "Type of the notification\n",
                        "type": "string"
                    },
                    "roleType": {
                        "description": "Type of the role\n",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of subscription\n",
                        "type": "string"
                    }
                },
                "required": [
                    "notificationType",
                    "roleType",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:index/getTemplate:getTemplate": {
            "description": "Get a single Email Template for a Brand belonging to an Okta organization.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTemplate.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the email template\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTemplate.\n",
                "properties": {
                    "brandId": {
                        "description": "Brand ID\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "links": {
                        "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the email template\n",
                        "type": "string"
                    }
                },
                "required": [
                    "brandId",
                    "links",
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:index/getTemplates:getTemplates": {
            "description": "Get the email templates belonging to a brand in an Okta organization.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTemplates.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTemplates.\n",
                "properties": {
                    "brandId": {
                        "description": "Brand ID\n",
                        "type": "string"
                    },
                    "emailTemplates": {
                        "description": "List of `okta.getTemplate` belonging to a brand in the organization\n",
                        "items": {
                            "$ref": "#/types/okta:index/getTemplatesEmailTemplate:getTemplatesEmailTemplate"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "brandId",
                    "emailTemplates",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:index/getTheme:getTheme": {
            "description": "Get a single Theme of a Brand of an Okta Organization.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTheme.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    },
                    "themeId": {
                        "type": "string",
                        "description": "Theme ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId",
                    "themeId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTheme.\n",
                "properties": {
                    "backgroundImageUrl": {
                        "description": "Background image URL\n",
                        "type": "string"
                    },
                    "brandId": {
                        "description": "Brand ID\n",
                        "type": "string"
                    },
                    "emailTemplateTouchPointVariant": {
                        "description": "Variant for email templates (`OKTA_DEFAULT`, `FULL_THEME`)\n",
                        "type": "string"
                    },
                    "endUserDashboardTouchPointVariant": {
                        "description": "Variant for the Okta End-User Dashboard (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)\n",
                        "type": "string"
                    },
                    "errorPageTouchPointVariant": {
                        "description": "Variant for the error page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n",
                        "type": "string"
                    },
                    "faviconUrl": {
                        "description": "Favicon URL\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of the theme\n",
                        "type": "string"
                    },
                    "links": {
                        "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template\n",
                        "type": "string"
                    },
                    "logoUrl": {
                        "description": "Logo URL\n",
                        "type": "string"
                    },
                    "primaryColorContrastHex": {
                        "description": "Primary color contrast hex code\n",
                        "type": "string"
                    },
                    "primaryColorHex": {
                        "description": "Primary color hex code\n",
                        "type": "string"
                    },
                    "secondaryColorContrastHex": {
                        "description": "Secondary color contrast hex code\n",
                        "type": "string"
                    },
                    "secondaryColorHex": {
                        "description": "Secondary color hex code\n",
                        "type": "string"
                    },
                    "signInPageTouchPointVariant": {
                        "description": "Variant for the Okta Sign-In Page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)\n",
                        "type": "string"
                    },
                    "themeId": {
                        "description": "Theme ID\n",
                        "type": "string"
                    }
                },
                "required": [
                    "backgroundImageUrl",
                    "brandId",
                    "emailTemplateTouchPointVariant",
                    "endUserDashboardTouchPointVariant",
                    "errorPageTouchPointVariant",
                    "faviconUrl",
                    "id",
                    "links",
                    "logoUrl",
                    "primaryColorContrastHex",
                    "primaryColorHex",
                    "secondaryColorContrastHex",
                    "secondaryColorHex",
                    "signInPageTouchPointVariant",
                    "themeId"
                ],
                "type": "object"
            }
        },
        "okta:index/getThemes:getThemes": {
            "description": "Get Themes of a Brand of an Okta Organization.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getThemes.\n",
                "properties": {
                    "brandId": {
                        "type": "string",
                        "description": "Brand ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "brandId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getThemes.\n",
                "properties": {
                    "brandId": {
                        "description": "Brand ID\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "themes": {
                        "description": "List of `okta_them` belonging to the brand in the organization\n",
                        "items": {
                            "$ref": "#/types/okta:index/getThemesTheme:getThemesTheme"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "brandId",
                    "themes",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:index/getTrustedOrigins:getTrustedOrigins": {
            "description": "Get List of Trusted Origins using filters.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst all = okta.getTrustedOrigins({});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nall = okta.get_trusted_origins()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Okta.GetTrustedOrigins.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okta.GetTrustedOrigins(ctx, \u0026okta.GetTrustedOriginsArgs{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetTrustedOriginsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = OktaFunctions.getTrustedOrigins(GetTrustedOriginsArgs.builder()\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      function: okta:getTrustedOrigins\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTrustedOrigins.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "Filter criteria. Filter value will be URL-encoded by the provider\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTrustedOrigins.\n",
                "properties": {
                    "filter": {
                        "description": "Filter criteria. Filter value will be URL-encoded by the provider\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "trustedOrigins": {
                        "items": {
                            "$ref": "#/types/okta:index/getTrustedOriginsTrustedOrigin:getTrustedOriginsTrustedOrigin"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "trustedOrigins",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:index/getUserSecurityQuestions:getUserSecurityQuestions": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst exampleUser = new okta.user.User(\"example\", {\n    firstName: \"John\",\n    lastName: \"Smith\",\n    login: \"john.smith@example.com\",\n    email: \"john.smith@example.com\",\n});\nconst example = okta.getUserSecurityQuestionsOutput({\n    userId: exampleUser.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample_user = okta.user.User(\"example\",\n    first_name=\"John\",\n    last_name=\"Smith\",\n    login=\"john.smith@example.com\",\n    email=\"john.smith@example.com\")\nexample = okta.get_user_security_questions_output(user_id=example_user.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleUser = new Okta.User.User(\"example\", new()\n    {\n        FirstName = \"John\",\n        LastName = \"Smith\",\n        Login = \"john.smith@example.com\",\n        Email = \"john.smith@example.com\",\n    });\n\n    var example = Okta.GetUserSecurityQuestions.Invoke(new()\n    {\n        UserId = exampleUser.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta\"\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleUser, err := user.NewUser(ctx, \"example\", \u0026user.UserArgs{\n\t\t\tFirstName: pulumi.String(\"John\"),\n\t\t\tLastName:  pulumi.String(\"Smith\"),\n\t\t\tLogin:     pulumi.String(\"john.smith@example.com\"),\n\t\t\tEmail:     pulumi.String(\"john.smith@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_ = okta.GetUserSecurityQuestionsOutput(ctx, okta.GetUserSecurityQuestionsOutputArgs{\n\t\t\tUserId: exampleUser.ID(),\n\t\t}, nil)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.User;\nimport com.pulumi.okta.user.UserArgs;\nimport com.pulumi.okta.OktaFunctions;\nimport com.pulumi.okta.inputs.GetUserSecurityQuestionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleUser = new User(\"exampleUser\", UserArgs.builder()\n            .firstName(\"John\")\n            .lastName(\"Smith\")\n            .login(\"john.smith@example.com\")\n            .email(\"john.smith@example.com\")\n            .build());\n\n        final var example = OktaFunctions.getUserSecurityQuestions(GetUserSecurityQuestionsArgs.builder()\n            .userId(exampleUser.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleUser:\n    type: okta:user:User\n    name: example\n    properties:\n      firstName: John\n      lastName: Smith\n      login: john.smith@example.com\n      email: john.smith@example.com\nvariables:\n  example:\n    fn::invoke:\n      function: okta:getUserSecurityQuestions\n      arguments:\n        userId: ${exampleUser.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUserSecurityQuestions.\n",
                "properties": {
                    "userId": {
                        "type": "string",
                        "description": "ID of a Okta User\n"
                    }
                },
                "type": "object",
                "required": [
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUserSecurityQuestions.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "questions": {
                        "items": {
                            "$ref": "#/types/okta:index/getUserSecurityQuestionsQuestion:getUserSecurityQuestionsQuestion"
                        },
                        "type": "array"
                    },
                    "userId": {
                        "description": "ID of a Okta User\n",
                        "type": "string"
                    }
                },
                "required": [
                    "questions",
                    "userId",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:policy/getDefaultPolicy:getDefaultPolicy": {
            "description": "Use this data source to retrieve a default policy from Okta. This \nsame thing can be achieved using the `okta.policy.getPolicy` with default \nnames, this is simply a shortcut.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.policy.getDefaultPolicy({\n    type: \"PASSWORD\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.policy.get_default_policy(type=\"PASSWORD\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Policy.GetDefaultPolicy.Invoke(new()\n    {\n        Type = \"PASSWORD\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.GetDefaultPolicy(ctx, \u0026policy.GetDefaultPolicyArgs{\n\t\t\tType: \"PASSWORD\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.PolicyFunctions;\nimport com.pulumi.okta.policy.inputs.GetDefaultPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = PolicyFunctions.getDefaultPolicy(GetDefaultPolicyArgs.builder()\n            .type(\"PASSWORD\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:policy:getDefaultPolicy\n      arguments:\n        type: PASSWORD\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDefaultPolicy.\n",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Policy type: OKTA*SIGN*ON, PASSWORD, MFA*ENROLL, or IDP*DISCOVERY\n"
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaultPolicy.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "type": {
                        "description": "Policy type: OKTA*SIGN*ON, PASSWORD, MFA*ENROLL, or IDP*DISCOVERY\n",
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:policy/getPolicy:getPolicy": {
            "description": "Get a policy from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.policy.getPolicy({\n    name: \"Password Policy Example\",\n    type: \"PASSWORD\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.policy.get_policy(name=\"Password Policy Example\",\n    type=\"PASSWORD\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.Policy.GetPolicy.Invoke(new()\n    {\n        Name = \"Password Policy Example\",\n        Type = \"PASSWORD\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/policy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := policy.GetPolicy(ctx, \u0026policy.GetPolicyArgs{\n\t\t\tName: \"Password Policy Example\",\n\t\t\tType: \"PASSWORD\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.policy.PolicyFunctions;\nimport com.pulumi.okta.policy.inputs.GetPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = PolicyFunctions.getPolicy(GetPolicyArgs.builder()\n            .name(\"Password Policy Example\")\n            .type(\"PASSWORD\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:policy:getPolicy\n      arguments:\n        name: Password Policy Example\n        type: PASSWORD\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPolicy.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the policy\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Policy type, see https://developer.okta.com/docs/reference/api/policy/#policy-object\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPolicy.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the policy\n",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of the policy\n",
                        "type": "string"
                    },
                    "type": {
                        "description": "Policy type, see https://developer.okta.com/docs/reference/api/policy/#policy-object\n",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "status",
                    "type",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:user/getUser:getUser": {
            "description": "Get a single users from Okta.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "compoundSearchOperator": {
                        "type": "string",
                        "description": "Search operator used when joining multiple search clauses\n"
                    },
                    "delayReadSeconds": {
                        "type": "string",
                        "description": "Force delay of the user read by N seconds. Useful when eventual consistency of user information needs to be allowed for.\n"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:user/getUserSearch:getUserSearch"
                        },
                        "description": "Filter to find user/users. Each filter will be concatenated with the compound search operator. Please be aware profile properties must match what is in Okta, which is likely camel case. Expression is a free form expression filter https://developer.okta.com/docs/reference/core-okta-api/#filter . The set name/value/comparison properties will be ignored if expression is present\n"
                    },
                    "skipGroups": {
                        "type": "boolean",
                        "description": "Do not populate user groups information (prevents additional API call)\n"
                    },
                    "skipRoles": {
                        "type": "boolean",
                        "description": "Do not populate user roles information (prevents additional API call)\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "Retrieve a single user based on their id\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "adminRoles": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "city": {
                        "type": "string"
                    },
                    "compoundSearchOperator": {
                        "description": "Search operator used when joining multiple search clauses\n",
                        "type": "string"
                    },
                    "costCenter": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "customProfileAttributes": {
                        "type": "string"
                    },
                    "delayReadSeconds": {
                        "description": "Force delay of the user read by N seconds. Useful when eventual consistency of user information needs to be allowed for.\n",
                        "type": "string"
                    },
                    "department": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "division": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "employeeNumber": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "groupMemberships": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "honorificPrefix": {
                        "type": "string"
                    },
                    "honorificSuffix": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "login": {
                        "type": "string"
                    },
                    "manager": {
                        "type": "string"
                    },
                    "managerId": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "mobilePhone": {
                        "type": "string"
                    },
                    "nickName": {
                        "type": "string"
                    },
                    "organization": {
                        "type": "string"
                    },
                    "postalAddress": {
                        "type": "string"
                    },
                    "preferredLanguage": {
                        "type": "string"
                    },
                    "primaryPhone": {
                        "type": "string"
                    },
                    "profileUrl": {
                        "type": "string"
                    },
                    "roles": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "searches": {
                        "description": "Filter to find user/users. Each filter will be concatenated with the compound search operator. Please be aware profile properties must match what is in Okta, which is likely camel case. Expression is a free form expression filter https://developer.okta.com/docs/reference/core-okta-api/#filter . The set name/value/comparison properties will be ignored if expression is present\n",
                        "items": {
                            "$ref": "#/types/okta:user/getUserSearch:getUserSearch"
                        },
                        "type": "array"
                    },
                    "secondEmail": {
                        "type": "string"
                    },
                    "skipGroups": {
                        "description": "Do not populate user groups information (prevents additional API call)\n",
                        "type": "boolean"
                    },
                    "skipRoles": {
                        "description": "Do not populate user roles information (prevents additional API call)\n",
                        "type": "boolean"
                    },
                    "state": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "streetAddress": {
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "userId": {
                        "description": "Retrieve a single user based on their id\n",
                        "type": "string"
                    },
                    "userType": {
                        "type": "string"
                    },
                    "zipCode": {
                        "type": "string"
                    }
                },
                "required": [
                    "adminRoles",
                    "city",
                    "costCenter",
                    "countryCode",
                    "customProfileAttributes",
                    "department",
                    "displayName",
                    "division",
                    "email",
                    "employeeNumber",
                    "firstName",
                    "groupMemberships",
                    "honorificPrefix",
                    "honorificSuffix",
                    "lastName",
                    "locale",
                    "login",
                    "manager",
                    "managerId",
                    "middleName",
                    "mobilePhone",
                    "nickName",
                    "organization",
                    "postalAddress",
                    "preferredLanguage",
                    "primaryPhone",
                    "profileUrl",
                    "roles",
                    "secondEmail",
                    "state",
                    "status",
                    "streetAddress",
                    "timezone",
                    "title",
                    "userType",
                    "zipCode",
                    "id"
                ],
                "type": "object"
            }
        },
        "okta:user/getUserProfileMappingSource:getUserProfileMappingSource": {
            "description": "Get the base user Profile Mapping source or target from Okta.\n\n\u003e **NOTE:** If using this resource with OAuth2 scopes, this resource \nrequires `okta.profileMappings.read` scope.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.user.getUserProfileMappingSource({});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.user.get_user_profile_mapping_source()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.User.GetUserProfileMappingSource.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.GetUserProfileMappingSource(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.UserFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = UserFunctions.getUserProfileMappingSource(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:user:getUserProfileMappingSource\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getUserProfileMappingSource.\n",
                "properties": {
                    "id": {
                        "description": "ID of the source\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of source.\n",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of source.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type"
                ],
                "type": "object"
            }
        },
        "okta:user/getUserType:getUserType": {
            "description": "Get a user type from Okta.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as okta from \"@pulumi/okta\";\n\nconst example = okta.user.getUserType({\n    name: \"example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_okta as okta\n\nexample = okta.user.get_user_type(name=\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Okta = Pulumi.Okta;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Okta.User.GetUserType.Invoke(new()\n    {\n        Name = \"example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/user\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := user.LookupUserType(ctx, \u0026user.LookupUserTypeArgs{\n\t\t\tName: pulumi.StringRef(\"example\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.okta.user.UserFunctions;\nimport com.pulumi.okta.user.inputs.GetUserTypeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = UserFunctions.getUserType(GetUserTypeArgs.builder()\n            .name(\"example\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: okta:user:getUserType\n      arguments:\n        name: example\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUserType.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the user type to retrieve, conflicts with `name`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of user type to retrieve, conflicts with `id`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUserType.\n",
                "properties": {
                    "description": {
                        "description": "Description of user type.\n",
                        "type": "string"
                    },
                    "displayName": {
                        "description": "Display name of user type.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "ID of the user type to retrieve, conflicts with `name`.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of user type to retrieve, conflicts with `id`.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "displayName"
                ],
                "type": "object"
            }
        },
        "okta:user/getUsers:getUsers": {
            "description": "Get a list of users from Okta.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "compoundSearchOperator": {
                        "type": "string",
                        "description": "Search operator used when joining multiple search clauses\n"
                    },
                    "delayReadSeconds": {
                        "type": "string",
                        "description": "Force delay of the users read by N seconds. Useful when eventual consistency of users information needs to be allowed for.\n"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Find users based on group membership using the id of the group.\n"
                    },
                    "includeGroups": {
                        "type": "boolean",
                        "description": "Fetch group memberships for each user\n"
                    },
                    "includeRoles": {
                        "type": "boolean",
                        "description": "Fetch user roles for each user\n"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/okta:user/getUsersSearch:getUsersSearch"
                        },
                        "description": "Filter to find user/users. Each filter will be concatenated with the compound search operator. Please be aware profile properties must match what is in Okta, which is likely camel case. Expression is a free form expression filter https://developer.okta.com/docs/reference/core-okta-api/#filter . The set name/value/comparison properties will be ignored if expression is present\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "compoundSearchOperator": {
                        "description": "Search operator used when joining multiple search clauses\n",
                        "type": "string"
                    },
                    "delayReadSeconds": {
                        "description": "Force delay of the users read by N seconds. Useful when eventual consistency of users information needs to be allowed for.\n",
                        "type": "string"
                    },
                    "groupId": {
                        "description": "Find users based on group membership using the id of the group.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "includeGroups": {
                        "description": "Fetch group memberships for each user\n",
                        "type": "boolean"
                    },
                    "includeRoles": {
                        "description": "Fetch user roles for each user\n",
                        "type": "boolean"
                    },
                    "searches": {
                        "description": "Filter to find user/users. Each filter will be concatenated with the compound search operator. Please be aware profile properties must match what is in Okta, which is likely camel case. Expression is a free form expression filter https://developer.okta.com/docs/reference/core-okta-api/#filter . The set name/value/comparison properties will be ignored if expression is present\n",
                        "items": {
                            "$ref": "#/types/okta:user/getUsersSearch:getUsersSearch"
                        },
                        "type": "array"
                    },
                    "users": {
                        "description": "collection of users retrieved from Okta.\n",
                        "items": {
                            "$ref": "#/types/okta:user/getUsersUser:getUsersUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "pulumi:providers:okta/terraformConfig": {
            "description": "This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.",
            "inputs": {
                "properties": {
                    "__self__": {
                        "type": "ref",
                        "$ref": "#/provider"
                    }
                },
                "type": "pulumi:providers:okta/terraformConfig",
                "required": [
                    "__self__"
                ]
            },
            "outputs": {
                "properties": {
                    "result": {
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "result"
                ],
                "type": "object"
            }
        }
    }
}
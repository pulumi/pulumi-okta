// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.RoleSubscriptionArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.RoleSubscriptionState;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages group subscription.
 * 
 * This resource allows you to configure subscriptions of a Role with a specific type.
 * Check [configure email notifications](https://help.okta.com/oie/en-us/Content/Topics/Security/custom-admin-role/administrator-email-settings.htm)
 * page regarding what notifications are available for specific admin roles.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.RoleSubscription;
 * import com.pulumi.okta.RoleSubscriptionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new RoleSubscription("test", RoleSubscriptionArgs.builder()
 *             .roleType("SUPER_ADMIN")
 *             .notificationType("APP_IMPORT")
 *             .status("unsubscribed")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:index/roleSubscription:RoleSubscription example &lt;role_type&gt;/&lt;notification_type&gt;
 * ```
 * 
 */
@ResourceType(type="okta:index/roleSubscription:RoleSubscription")
public class RoleSubscription extends com.pulumi.resources.CustomResource {
    /**
     * Type of the notification. Valid values:
     * 	- &#39;CONNECTOR_AGENT&#39; -  Disconnects and reconnects: On-prem provisioning, on-prem MFA agents, and RADIUS server agent.
     * 	- &#39;USER_LOCKED_OUT&#39; - User lockouts.
     * 	- &#39;APP_IMPORT&#39; - App user import status.
     * 	- &#39;LDAP_AGENT&#39; - Disconnects and reconnects: LDAP agent.
     * 	- &#39;AD_AGENT&#39; - Disconnects and reconnects: AD agent.
     * 	- &#39;OKTA_ANNOUNCEMENT&#39; - Okta release notes and announcements.
     * 	- &#39;OKTA_UPDATE&#39; - Scheduled system updates.
     * 	- &#39;IWA_AGENT&#39; - Disconnects and reconnects: IWA agent.
     * 	- &#39;USER_DEPROVISION&#39; - User deprovisions.
     * 	- &#39;REPORT_SUSPICIOUS_ACTIVITY&#39; - User reporting of suspicious activity.
     * 	- &#39;RATELIMIT_NOTIFICATION&#39; - Rate limit warning and violation.
     * 	- &#39;AGENT_AUTO_UPDATE_NOTIFICATION&#39; - Agent auto-update notifications: AD Agent.
     * 
     */
    @Export(name="notificationType", refs={String.class}, tree="[0]")
    private Output<String> notificationType;

    /**
     * @return Type of the notification. Valid values:
     * 	- &#39;CONNECTOR_AGENT&#39; -  Disconnects and reconnects: On-prem provisioning, on-prem MFA agents, and RADIUS server agent.
     * 	- &#39;USER_LOCKED_OUT&#39; - User lockouts.
     * 	- &#39;APP_IMPORT&#39; - App user import status.
     * 	- &#39;LDAP_AGENT&#39; - Disconnects and reconnects: LDAP agent.
     * 	- &#39;AD_AGENT&#39; - Disconnects and reconnects: AD agent.
     * 	- &#39;OKTA_ANNOUNCEMENT&#39; - Okta release notes and announcements.
     * 	- &#39;OKTA_UPDATE&#39; - Scheduled system updates.
     * 	- &#39;IWA_AGENT&#39; - Disconnects and reconnects: IWA agent.
     * 	- &#39;USER_DEPROVISION&#39; - User deprovisions.
     * 	- &#39;REPORT_SUSPICIOUS_ACTIVITY&#39; - User reporting of suspicious activity.
     * 	- &#39;RATELIMIT_NOTIFICATION&#39; - Rate limit warning and violation.
     * 	- &#39;AGENT_AUTO_UPDATE_NOTIFICATION&#39; - Agent auto-update notifications: AD Agent.
     * 
     */
    public Output<String> notificationType() {
        return this.notificationType;
    }
    /**
     * Type of the role. Valid values:
     * 	&#39;API_ADMIN&#39;,
     * 	&#39;APP_ADMIN&#39;,
     * 	&#39;CUSTOM&#39;,
     * 	&#39;GROUP_MEMBERSHIP_ADMIN&#39;,
     * 	&#39;HELP_DESK_ADMIN&#39;,
     * 	&#39;MOBILE_ADMIN&#39;,
     * 	&#39;ORG_ADMIN&#39;,
     * 	&#39;READ_ONLY_ADMIN&#39;,
     * 	&#39;REPORT_ADMIN&#39;,
     * 	&#39;SUPER_ADMIN&#39;,
     * 	&#39;USER_ADMIN&#39;
     * 	. See [API docs](https://developer.okta.com/docs/reference/api/admin-notifications/#role-types).
     * 
     */
    @Export(name="roleType", refs={String.class}, tree="[0]")
    private Output<String> roleType;

    /**
     * @return Type of the role. Valid values:
     * 	&#39;API_ADMIN&#39;,
     * 	&#39;APP_ADMIN&#39;,
     * 	&#39;CUSTOM&#39;,
     * 	&#39;GROUP_MEMBERSHIP_ADMIN&#39;,
     * 	&#39;HELP_DESK_ADMIN&#39;,
     * 	&#39;MOBILE_ADMIN&#39;,
     * 	&#39;ORG_ADMIN&#39;,
     * 	&#39;READ_ONLY_ADMIN&#39;,
     * 	&#39;REPORT_ADMIN&#39;,
     * 	&#39;SUPER_ADMIN&#39;,
     * 	&#39;USER_ADMIN&#39;
     * 	. See [API docs](https://developer.okta.com/docs/reference/api/admin-notifications/#role-types).
     * 
     */
    public Output<String> roleType() {
        return this.roleType;
    }
    /**
     * Subscription status. Valid values: `subscribed`, `unsubscribed`.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> status;

    /**
     * @return Subscription status. Valid values: `subscribed`, `unsubscribed`.
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RoleSubscription(java.lang.String name) {
        this(name, RoleSubscriptionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RoleSubscription(java.lang.String name, RoleSubscriptionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RoleSubscription(java.lang.String name, RoleSubscriptionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/roleSubscription:RoleSubscription", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RoleSubscription(java.lang.String name, Output<java.lang.String> id, @Nullable RoleSubscriptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/roleSubscription:RoleSubscription", name, state, makeResourceOptions(options, id), false);
    }

    private static RoleSubscriptionArgs makeArgs(RoleSubscriptionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RoleSubscriptionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RoleSubscription get(java.lang.String name, Output<java.lang.String> id, @Nullable RoleSubscriptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RoleSubscription(name, id, state, options);
    }
}

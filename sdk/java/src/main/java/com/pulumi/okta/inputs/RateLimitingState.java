// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RateLimitingState extends com.pulumi.resources.ResourceArgs {

    public static final RateLimitingState Empty = new RateLimitingState();

    /**
     * Called during authentication.
     * 
     */
    @Import(name="authorize")
    private @Nullable Output<String> authorize;

    /**
     * @return Called during authentication.
     * 
     */
    public Optional<Output<String>> authorize() {
        return Optional.ofNullable(this.authorize);
    }

    /**
     * Enables rate limit warning, violation, notification emails and banners when this org meets rate limits.
     * 
     */
    @Import(name="communicationsEnabled")
    private @Nullable Output<Boolean> communicationsEnabled;

    /**
     * @return Enables rate limit warning, violation, notification emails and banners when this org meets rate limits.
     * 
     */
    public Optional<Output<Boolean>> communicationsEnabled() {
        return Optional.ofNullable(this.communicationsEnabled);
    }

    /**
     * Called when accessing the Okta hosted login page.
     * 
     */
    @Import(name="login")
    private @Nullable Output<String> login;

    /**
     * @return Called when accessing the Okta hosted login page.
     * 
     */
    public Optional<Output<String>> login() {
        return Optional.ofNullable(this.login);
    }

    private RateLimitingState() {}

    private RateLimitingState(RateLimitingState $) {
        this.authorize = $.authorize;
        this.communicationsEnabled = $.communicationsEnabled;
        this.login = $.login;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RateLimitingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RateLimitingState $;

        public Builder() {
            $ = new RateLimitingState();
        }

        public Builder(RateLimitingState defaults) {
            $ = new RateLimitingState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorize Called during authentication.
         * 
         * @return builder
         * 
         */
        public Builder authorize(@Nullable Output<String> authorize) {
            $.authorize = authorize;
            return this;
        }

        /**
         * @param authorize Called during authentication.
         * 
         * @return builder
         * 
         */
        public Builder authorize(String authorize) {
            return authorize(Output.of(authorize));
        }

        /**
         * @param communicationsEnabled Enables rate limit warning, violation, notification emails and banners when this org meets rate limits.
         * 
         * @return builder
         * 
         */
        public Builder communicationsEnabled(@Nullable Output<Boolean> communicationsEnabled) {
            $.communicationsEnabled = communicationsEnabled;
            return this;
        }

        /**
         * @param communicationsEnabled Enables rate limit warning, violation, notification emails and banners when this org meets rate limits.
         * 
         * @return builder
         * 
         */
        public Builder communicationsEnabled(Boolean communicationsEnabled) {
            return communicationsEnabled(Output.of(communicationsEnabled));
        }

        /**
         * @param login Called when accessing the Okta hosted login page.
         * 
         * @return builder
         * 
         */
        public Builder login(@Nullable Output<String> login) {
            $.login = login;
            return this;
        }

        /**
         * @param login Called when accessing the Okta hosted login page.
         * 
         * @return builder
         * 
         */
        public Builder login(String login) {
            return login(Output.of(login));
        }

        public RateLimitingState build() {
            return $;
        }
    }

}

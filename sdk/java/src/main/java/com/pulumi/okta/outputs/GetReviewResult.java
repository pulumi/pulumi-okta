// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.GetReviewAllReviewerLevel;
import com.pulumi.okta.outputs.GetReviewEntitlementBundle;
import com.pulumi.okta.outputs.GetReviewEntitlementValue;
import com.pulumi.okta.outputs.GetReviewLinks;
import com.pulumi.okta.outputs.GetReviewNote;
import com.pulumi.okta.outputs.GetReviewPrincipalProfile;
import com.pulumi.okta.outputs.GetReviewReviewerProfile;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetReviewResult {
    private @Nullable List<GetReviewAllReviewerLevel> allReviewerLevels;
    /**
     * @return ID of the Campaign.
     * 
     */
    private String campaignId;
    /**
     * @return The ISO 8601 formatted date and time when the resource was created.
     * 
     */
    private String created;
    /**
     * @return The id of user who created the resource.
     * 
     */
    private String createdBy;
    /**
     * @return Identifies the reviewer level of each reviews during access certification.
     * 
     */
    private String currentReviewerLevel;
    /**
     * @return The ISO 8601 formatted date and time when the object status was decided.
     * 
     */
    private String decided;
    /**
     * @return The decision taken by the reviewer. Will be `UNASSIGNED` if no decision is made.
     * 
     */
    private String decision;
    private @Nullable GetReviewEntitlementBundle entitlementBundle;
    private @Nullable GetReviewEntitlementValue entitlementValue;
    /**
     * @return The ID of  review.
     * 
     */
    private String id;
    /**
     * @return The ISO 8601 formatted date and time when the object was last updated.
     * 
     */
    private String lastUpdated;
    /**
     * @return The id of user who last updated the object.
     * 
     */
    private String lastUpdatedBy;
    private @Nullable GetReviewLinks links;
    private @Nullable GetReviewNote note;
    /**
     * @return A limited set of properties from the user profile who created the review.
     * 
     */
    private @Nullable GetReviewPrincipalProfile principalProfile;
    /**
     * @return Enum: `ERROR`, `MANUAL`, `NONE`, `OPEN`, `SUCCESS`.
     * 
     */
    private String remediationStatus;
    /**
     * @return Resource ID for the Review.
     * 
     */
    private String resourceId;
    private @Nullable GetReviewReviewerProfile reviewerProfile;
    /**
     * @return The type of reviewer to which the review is assigned.
     * 
     */
    private String reviewerType;

    private GetReviewResult() {}
    public List<GetReviewAllReviewerLevel> allReviewerLevels() {
        return this.allReviewerLevels == null ? List.of() : this.allReviewerLevels;
    }
    /**
     * @return ID of the Campaign.
     * 
     */
    public String campaignId() {
        return this.campaignId;
    }
    /**
     * @return The ISO 8601 formatted date and time when the resource was created.
     * 
     */
    public String created() {
        return this.created;
    }
    /**
     * @return The id of user who created the resource.
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return Identifies the reviewer level of each reviews during access certification.
     * 
     */
    public String currentReviewerLevel() {
        return this.currentReviewerLevel;
    }
    /**
     * @return The ISO 8601 formatted date and time when the object status was decided.
     * 
     */
    public String decided() {
        return this.decided;
    }
    /**
     * @return The decision taken by the reviewer. Will be `UNASSIGNED` if no decision is made.
     * 
     */
    public String decision() {
        return this.decision;
    }
    public Optional<GetReviewEntitlementBundle> entitlementBundle() {
        return Optional.ofNullable(this.entitlementBundle);
    }
    public Optional<GetReviewEntitlementValue> entitlementValue() {
        return Optional.ofNullable(this.entitlementValue);
    }
    /**
     * @return The ID of  review.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ISO 8601 formatted date and time when the object was last updated.
     * 
     */
    public String lastUpdated() {
        return this.lastUpdated;
    }
    /**
     * @return The id of user who last updated the object.
     * 
     */
    public String lastUpdatedBy() {
        return this.lastUpdatedBy;
    }
    public Optional<GetReviewLinks> links() {
        return Optional.ofNullable(this.links);
    }
    public Optional<GetReviewNote> note() {
        return Optional.ofNullable(this.note);
    }
    /**
     * @return A limited set of properties from the user profile who created the review.
     * 
     */
    public Optional<GetReviewPrincipalProfile> principalProfile() {
        return Optional.ofNullable(this.principalProfile);
    }
    /**
     * @return Enum: `ERROR`, `MANUAL`, `NONE`, `OPEN`, `SUCCESS`.
     * 
     */
    public String remediationStatus() {
        return this.remediationStatus;
    }
    /**
     * @return Resource ID for the Review.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    public Optional<GetReviewReviewerProfile> reviewerProfile() {
        return Optional.ofNullable(this.reviewerProfile);
    }
    /**
     * @return The type of reviewer to which the review is assigned.
     * 
     */
    public String reviewerType() {
        return this.reviewerType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReviewResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetReviewAllReviewerLevel> allReviewerLevels;
        private String campaignId;
        private String created;
        private String createdBy;
        private String currentReviewerLevel;
        private String decided;
        private String decision;
        private @Nullable GetReviewEntitlementBundle entitlementBundle;
        private @Nullable GetReviewEntitlementValue entitlementValue;
        private String id;
        private String lastUpdated;
        private String lastUpdatedBy;
        private @Nullable GetReviewLinks links;
        private @Nullable GetReviewNote note;
        private @Nullable GetReviewPrincipalProfile principalProfile;
        private String remediationStatus;
        private String resourceId;
        private @Nullable GetReviewReviewerProfile reviewerProfile;
        private String reviewerType;
        public Builder() {}
        public Builder(GetReviewResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allReviewerLevels = defaults.allReviewerLevels;
    	      this.campaignId = defaults.campaignId;
    	      this.created = defaults.created;
    	      this.createdBy = defaults.createdBy;
    	      this.currentReviewerLevel = defaults.currentReviewerLevel;
    	      this.decided = defaults.decided;
    	      this.decision = defaults.decision;
    	      this.entitlementBundle = defaults.entitlementBundle;
    	      this.entitlementValue = defaults.entitlementValue;
    	      this.id = defaults.id;
    	      this.lastUpdated = defaults.lastUpdated;
    	      this.lastUpdatedBy = defaults.lastUpdatedBy;
    	      this.links = defaults.links;
    	      this.note = defaults.note;
    	      this.principalProfile = defaults.principalProfile;
    	      this.remediationStatus = defaults.remediationStatus;
    	      this.resourceId = defaults.resourceId;
    	      this.reviewerProfile = defaults.reviewerProfile;
    	      this.reviewerType = defaults.reviewerType;
        }

        @CustomType.Setter
        public Builder allReviewerLevels(@Nullable List<GetReviewAllReviewerLevel> allReviewerLevels) {

            this.allReviewerLevels = allReviewerLevels;
            return this;
        }
        public Builder allReviewerLevels(GetReviewAllReviewerLevel... allReviewerLevels) {
            return allReviewerLevels(List.of(allReviewerLevels));
        }
        @CustomType.Setter
        public Builder campaignId(String campaignId) {
            if (campaignId == null) {
              throw new MissingRequiredPropertyException("GetReviewResult", "campaignId");
            }
            this.campaignId = campaignId;
            return this;
        }
        @CustomType.Setter
        public Builder created(String created) {
            if (created == null) {
              throw new MissingRequiredPropertyException("GetReviewResult", "created");
            }
            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetReviewResult", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder currentReviewerLevel(String currentReviewerLevel) {
            if (currentReviewerLevel == null) {
              throw new MissingRequiredPropertyException("GetReviewResult", "currentReviewerLevel");
            }
            this.currentReviewerLevel = currentReviewerLevel;
            return this;
        }
        @CustomType.Setter
        public Builder decided(String decided) {
            if (decided == null) {
              throw new MissingRequiredPropertyException("GetReviewResult", "decided");
            }
            this.decided = decided;
            return this;
        }
        @CustomType.Setter
        public Builder decision(String decision) {
            if (decision == null) {
              throw new MissingRequiredPropertyException("GetReviewResult", "decision");
            }
            this.decision = decision;
            return this;
        }
        @CustomType.Setter
        public Builder entitlementBundle(@Nullable GetReviewEntitlementBundle entitlementBundle) {

            this.entitlementBundle = entitlementBundle;
            return this;
        }
        @CustomType.Setter
        public Builder entitlementValue(@Nullable GetReviewEntitlementValue entitlementValue) {

            this.entitlementValue = entitlementValue;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetReviewResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdated(String lastUpdated) {
            if (lastUpdated == null) {
              throw new MissingRequiredPropertyException("GetReviewResult", "lastUpdated");
            }
            this.lastUpdated = lastUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedBy(String lastUpdatedBy) {
            if (lastUpdatedBy == null) {
              throw new MissingRequiredPropertyException("GetReviewResult", "lastUpdatedBy");
            }
            this.lastUpdatedBy = lastUpdatedBy;
            return this;
        }
        @CustomType.Setter
        public Builder links(@Nullable GetReviewLinks links) {

            this.links = links;
            return this;
        }
        @CustomType.Setter
        public Builder note(@Nullable GetReviewNote note) {

            this.note = note;
            return this;
        }
        @CustomType.Setter
        public Builder principalProfile(@Nullable GetReviewPrincipalProfile principalProfile) {

            this.principalProfile = principalProfile;
            return this;
        }
        @CustomType.Setter
        public Builder remediationStatus(String remediationStatus) {
            if (remediationStatus == null) {
              throw new MissingRequiredPropertyException("GetReviewResult", "remediationStatus");
            }
            this.remediationStatus = remediationStatus;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(String resourceId) {
            if (resourceId == null) {
              throw new MissingRequiredPropertyException("GetReviewResult", "resourceId");
            }
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder reviewerProfile(@Nullable GetReviewReviewerProfile reviewerProfile) {

            this.reviewerProfile = reviewerProfile;
            return this;
        }
        @CustomType.Setter
        public Builder reviewerType(String reviewerType) {
            if (reviewerType == null) {
              throw new MissingRequiredPropertyException("GetReviewResult", "reviewerType");
            }
            this.reviewerType = reviewerType;
            return this;
        }
        public GetReviewResult build() {
            final var _resultValue = new GetReviewResult();
            _resultValue.allReviewerLevels = allReviewerLevels;
            _resultValue.campaignId = campaignId;
            _resultValue.created = created;
            _resultValue.createdBy = createdBy;
            _resultValue.currentReviewerLevel = currentReviewerLevel;
            _resultValue.decided = decided;
            _resultValue.decision = decision;
            _resultValue.entitlementBundle = entitlementBundle;
            _resultValue.entitlementValue = entitlementValue;
            _resultValue.id = id;
            _resultValue.lastUpdated = lastUpdated;
            _resultValue.lastUpdatedBy = lastUpdatedBy;
            _resultValue.links = links;
            _resultValue.note = note;
            _resultValue.principalProfile = principalProfile;
            _resultValue.remediationStatus = remediationStatus;
            _resultValue.resourceId = resourceId;
            _resultValue.reviewerProfile = reviewerProfile;
            _resultValue.reviewerType = reviewerType;
            return _resultValue;
        }
    }
}

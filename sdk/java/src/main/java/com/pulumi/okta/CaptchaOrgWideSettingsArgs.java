// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CaptchaOrgWideSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CaptchaOrgWideSettingsArgs Empty = new CaptchaOrgWideSettingsArgs();

    /**
     * The ID of the CAPTCHA.
     * 
     */
    @Import(name="captchaId")
    private @Nullable Output<String> captchaId;

    /**
     * @return The ID of the CAPTCHA.
     * 
     */
    public Optional<Output<String>> captchaId() {
        return Optional.ofNullable(this.captchaId);
    }

    /**
     * Array of pages that have CAPTCHA enabled. Valid values: `&#34;SSR&#34;`, `&#34;SSPR&#34;` and `&#34;SIGN_IN&#34;`.
     * 
     */
    @Import(name="enabledFors")
    private @Nullable Output<List<String>> enabledFors;

    /**
     * @return Array of pages that have CAPTCHA enabled. Valid values: `&#34;SSR&#34;`, `&#34;SSPR&#34;` and `&#34;SIGN_IN&#34;`.
     * 
     */
    public Optional<Output<List<String>>> enabledFors() {
        return Optional.ofNullable(this.enabledFors);
    }

    private CaptchaOrgWideSettingsArgs() {}

    private CaptchaOrgWideSettingsArgs(CaptchaOrgWideSettingsArgs $) {
        this.captchaId = $.captchaId;
        this.enabledFors = $.enabledFors;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CaptchaOrgWideSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CaptchaOrgWideSettingsArgs $;

        public Builder() {
            $ = new CaptchaOrgWideSettingsArgs();
        }

        public Builder(CaptchaOrgWideSettingsArgs defaults) {
            $ = new CaptchaOrgWideSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param captchaId The ID of the CAPTCHA.
         * 
         * @return builder
         * 
         */
        public Builder captchaId(@Nullable Output<String> captchaId) {
            $.captchaId = captchaId;
            return this;
        }

        /**
         * @param captchaId The ID of the CAPTCHA.
         * 
         * @return builder
         * 
         */
        public Builder captchaId(String captchaId) {
            return captchaId(Output.of(captchaId));
        }

        /**
         * @param enabledFors Array of pages that have CAPTCHA enabled. Valid values: `&#34;SSR&#34;`, `&#34;SSPR&#34;` and `&#34;SIGN_IN&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder enabledFors(@Nullable Output<List<String>> enabledFors) {
            $.enabledFors = enabledFors;
            return this;
        }

        /**
         * @param enabledFors Array of pages that have CAPTCHA enabled. Valid values: `&#34;SSR&#34;`, `&#34;SSPR&#34;` and `&#34;SIGN_IN&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder enabledFors(List<String> enabledFors) {
            return enabledFors(Output.of(enabledFors));
        }

        /**
         * @param enabledFors Array of pages that have CAPTCHA enabled. Valid values: `&#34;SSR&#34;`, `&#34;SSPR&#34;` and `&#34;SIGN_IN&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder enabledFors(String... enabledFors) {
            return enabledFors(List.of(enabledFors));
        }

        public CaptchaOrgWideSettingsArgs build() {
            return $;
        }
    }

}

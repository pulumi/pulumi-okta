// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.PolicyRuleProfileEnrollmentArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.PolicyRuleProfileEnrollmentState;
import com.pulumi.okta.outputs.PolicyRuleProfileEnrollmentProfileAttribute;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * &gt; **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.
 * 
 * A [profile enrollment
 * policy](https://developer.okta.com/docs/reference/api/policy/#profile-enrollment-policy)
 * is limited to one default rule. This resource does not create a rule for an
 * enrollment policy, it allows the default policy rule to be updated.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.PolicyProfileEnrollment;
 * import com.pulumi.okta.PolicyProfileEnrollmentArgs;
 * import com.pulumi.okta.inline.Hook;
 * import com.pulumi.okta.inline.HookArgs;
 * import com.pulumi.okta.group.Group;
 * import com.pulumi.okta.group.GroupArgs;
 * import com.pulumi.okta.PolicyRuleProfileEnrollment;
 * import com.pulumi.okta.PolicyRuleProfileEnrollmentArgs;
 * import com.pulumi.okta.inputs.PolicyRuleProfileEnrollmentProfileAttributeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new PolicyProfileEnrollment("example", PolicyProfileEnrollmentArgs.builder()
 *             .name("My Enrollment Policy")
 *             .build());
 * 
 *         var exampleHook = new Hook("exampleHook", HookArgs.builder()
 *             .name("My Inline Hook")
 *             .status("ACTIVE")
 *             .type("com.okta.user.pre-registration")
 *             .version("1.0.3")
 *             .channel(Map.ofEntries(
 *                 Map.entry("type", "HTTP"),
 *                 Map.entry("version", "1.0.0"),
 *                 Map.entry("uri", "https://example.com/test2"),
 *                 Map.entry("method", "POST")
 *             ))
 *             .build());
 * 
 *         var exampleGroup = new Group("exampleGroup", GroupArgs.builder()
 *             .name("My Group")
 *             .description("Group of some users")
 *             .build());
 * 
 *         var examplePolicyRuleProfileEnrollment = new PolicyRuleProfileEnrollment("examplePolicyRuleProfileEnrollment", PolicyRuleProfileEnrollmentArgs.builder()
 *             .policyId(example.id())
 *             .inlineHookId(exampleHook.id())
 *             .targetGroupId(exampleGroup.id())
 *             .unknownUserAction("REGISTER")
 *             .emailVerification(true)
 *             .access("ALLOW")
 *             .profileAttributes(            
 *                 PolicyRuleProfileEnrollmentProfileAttributeArgs.builder()
 *                     .name("email")
 *                     .label("Email")
 *                     .required(true)
 *                     .build(),
 *                 PolicyRuleProfileEnrollmentProfileAttributeArgs.builder()
 *                     .name("name")
 *                     .label("Name")
 *                     .required(true)
 *                     .build(),
 *                 PolicyRuleProfileEnrollmentProfileAttributeArgs.builder()
 *                     .name("t-shirt")
 *                     .label("T-Shirt Size")
 *                     .required(false)
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * A Policy Rule can be imported via the Policy and Rule ID.
 * 
 * ```sh
 * $ pulumi import okta:index/policyRuleProfileEnrollment:PolicyRuleProfileEnrollment example &amp;#60;policy id&amp;#62;/&amp;#60;rule id&amp;#62;
 * ```
 * 
 */
@ResourceType(type="okta:index/policyRuleProfileEnrollment:PolicyRuleProfileEnrollment")
public class PolicyRuleProfileEnrollment extends com.pulumi.resources.CustomResource {
    /**
     * Allow or deny access based on the rule conditions. Valid values are: `&#34;ALLOW&#34;`, `&#34;DENY&#34;`. Default is `&#34;ALLOW&#34;`.
     * 
     */
    @Export(name="access", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> access;

    /**
     * @return Allow or deny access based on the rule conditions. Valid values are: `&#34;ALLOW&#34;`, `&#34;DENY&#34;`. Default is `&#34;ALLOW&#34;`.
     * 
     */
    public Output<Optional<String>> access() {
        return Codegen.optional(this.access);
    }
    /**
     * Indicates whether email verification should occur before access is granted. Default is `true`.
     * 
     */
    @Export(name="emailVerification", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> emailVerification;

    /**
     * @return Indicates whether email verification should occur before access is granted. Default is `true`.
     * 
     */
    public Output<Optional<Boolean>> emailVerification() {
        return Codegen.optional(this.emailVerification);
    }
    /**
     * ID of a Registration Inline Hook.
     * 
     */
    @Export(name="inlineHookId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> inlineHookId;

    /**
     * @return ID of a Registration Inline Hook.
     * 
     */
    public Output<Optional<String>> inlineHookId() {
        return Codegen.optional(this.inlineHookId);
    }
    /**
     * Name of the Rule.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the Rule.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Policy ID.
     * 
     */
    @Export(name="policyId", refs={String.class}, tree="[0]")
    private Output<String> policyId;

    /**
     * @return Policy ID.
     * 
     */
    public Output<String> policyId() {
        return this.policyId;
    }
    /**
     * A list of attributes to prompt the user during registration or progressive profiling. Where defined on the User schema, these attributes are persisted in the User profile. Non-schema attributes may also be added, which aren&#39;t persisted to the User&#39;s profile, but are included in requests to the registration inline hook. A maximum of 10 Profile properties is supported.
     * 
     */
    @Export(name="profileAttributes", refs={List.class,PolicyRuleProfileEnrollmentProfileAttribute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<PolicyRuleProfileEnrollmentProfileAttribute>> profileAttributes;

    /**
     * @return A list of attributes to prompt the user during registration or progressive profiling. Where defined on the User schema, these attributes are persisted in the User profile. Non-schema attributes may also be added, which aren&#39;t persisted to the User&#39;s profile, but are included in requests to the registration inline hook. A maximum of 10 Profile properties is supported.
     * 
     */
    public Output<Optional<List<PolicyRuleProfileEnrollmentProfileAttribute>>> profileAttributes() {
        return Codegen.optional(this.profileAttributes);
    }
    /**
     * Enabled or disabled progressive profiling action rule conditions. Valid values are: `&#34;ENABLED&#34;`, `&#34;DISABLED&#34;`. Default is `&#34;DISABLED&#34;`.
     * 
     */
    @Export(name="progressiveProfilingAction", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> progressiveProfilingAction;

    /**
     * @return Enabled or disabled progressive profiling action rule conditions. Valid values are: `&#34;ENABLED&#34;`, `&#34;DISABLED&#34;`. Default is `&#34;DISABLED&#34;`.
     * 
     */
    public Output<Optional<String>> progressiveProfilingAction() {
        return Codegen.optional(this.progressiveProfilingAction);
    }
    /**
     * Status of the Rule.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Status of the Rule.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The ID of a Group that this User should be added to.
     * 
     */
    @Export(name="targetGroupId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> targetGroupId;

    /**
     * @return The ID of a Group that this User should be added to.
     * 
     */
    public Output<Optional<String>> targetGroupId() {
        return Codegen.optional(this.targetGroupId);
    }
    /**
     * Value created by the backend. If present all policy updates must include this attribute/value.
     * 
     */
    @Export(name="uiSchemaId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> uiSchemaId;

    /**
     * @return Value created by the backend. If present all policy updates must include this attribute/value.
     * 
     */
    public Output<Optional<String>> uiSchemaId() {
        return Codegen.optional(this.uiSchemaId);
    }
    /**
     * Which action should be taken if this User is new. Valid values are: `&#34;DENY&#34;`, `&#34;REGISTER&#34;`.
     * 
     */
    @Export(name="unknownUserAction", refs={String.class}, tree="[0]")
    private Output<String> unknownUserAction;

    /**
     * @return Which action should be taken if this User is new. Valid values are: `&#34;DENY&#34;`, `&#34;REGISTER&#34;`.
     * 
     */
    public Output<String> unknownUserAction() {
        return this.unknownUserAction;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PolicyRuleProfileEnrollment(String name) {
        this(name, PolicyRuleProfileEnrollmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PolicyRuleProfileEnrollment(String name, PolicyRuleProfileEnrollmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PolicyRuleProfileEnrollment(String name, PolicyRuleProfileEnrollmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/policyRuleProfileEnrollment:PolicyRuleProfileEnrollment", name, args == null ? PolicyRuleProfileEnrollmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PolicyRuleProfileEnrollment(String name, Output<String> id, @Nullable PolicyRuleProfileEnrollmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/policyRuleProfileEnrollment:PolicyRuleProfileEnrollment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PolicyRuleProfileEnrollment get(String name, Output<String> id, @Nullable PolicyRuleProfileEnrollmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PolicyRuleProfileEnrollment(name, id, state, options);
    }
}

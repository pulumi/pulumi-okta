// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.policy;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.policy.DeviceAssuranceAndroidArgs;
import com.pulumi.okta.policy.inputs.DeviceAssuranceAndroidState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="okta:policy/deviceAssuranceAndroid:DeviceAssuranceAndroid")
public class DeviceAssuranceAndroid extends com.pulumi.resources.CustomResource {
    /**
     * Created by
     * 
     */
    @Export(name="createdBy", refs={String.class}, tree="[0]")
    private Output<String> createdBy;

    /**
     * @return Created by
     * 
     */
    public Output<String> createdBy() {
        return this.createdBy;
    }
    /**
     * Created date
     * 
     */
    @Export(name="createdDate", refs={String.class}, tree="[0]")
    private Output<String> createdDate;

    /**
     * @return Created date
     * 
     */
    public Output<String> createdDate() {
        return this.createdDate;
    }
    /**
     * List of disk encryption type, can be FULL, USER
     * 
     */
    @Export(name="diskEncryptionTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> diskEncryptionTypes;

    /**
     * @return List of disk encryption type, can be FULL, USER
     * 
     */
    public Output<Optional<List<String>>> diskEncryptionTypes() {
        return Codegen.optional(this.diskEncryptionTypes);
    }
    /**
     * The device jailbreak. Only for android and iOS platform
     * 
     */
    @Export(name="jailbreak", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> jailbreak;

    /**
     * @return The device jailbreak. Only for android and iOS platform
     * 
     */
    public Output<Optional<Boolean>> jailbreak() {
        return Codegen.optional(this.jailbreak);
    }
    /**
     * Last update
     * 
     */
    @Export(name="lastUpdate", refs={String.class}, tree="[0]")
    private Output<String> lastUpdate;

    /**
     * @return Last update
     * 
     */
    public Output<String> lastUpdate() {
        return this.lastUpdate;
    }
    /**
     * Last updated by
     * 
     */
    @Export(name="lastUpdatedBy", refs={String.class}, tree="[0]")
    private Output<String> lastUpdatedBy;

    /**
     * @return Last updated by
     * 
     */
    public Output<String> lastUpdatedBy() {
        return this.lastUpdatedBy;
    }
    /**
     * Policy device assurance name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Policy device assurance name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The device os minimum version
     * 
     */
    @Export(name="osVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> osVersion;

    /**
     * @return The device os minimum version
     * 
     */
    public Output<Optional<String>> osVersion() {
        return Codegen.optional(this.osVersion);
    }
    /**
     * Policy device assurance platform
     * 
     */
    @Export(name="platform", refs={String.class}, tree="[0]")
    private Output<String> platform;

    /**
     * @return Policy device assurance platform
     * 
     */
    public Output<String> platform() {
        return this.platform;
    }
    /**
     * List of screenlock type, can be BIOMETRIC or BIOMETRIC, PASSCODE
     * 
     */
    @Export(name="screenlockTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> screenlockTypes;

    /**
     * @return List of screenlock type, can be BIOMETRIC or BIOMETRIC, PASSCODE
     * 
     */
    public Output<Optional<List<String>>> screenlockTypes() {
        return Codegen.optional(this.screenlockTypes);
    }
    /**
     * Indicates if the device constains a secure hardware functionality
     * 
     */
    @Export(name="secureHardwarePresent", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> secureHardwarePresent;

    /**
     * @return Indicates if the device constains a secure hardware functionality
     * 
     */
    public Output<Optional<Boolean>> secureHardwarePresent() {
        return Codegen.optional(this.secureHardwarePresent);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DeviceAssuranceAndroid(String name) {
        this(name, DeviceAssuranceAndroidArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DeviceAssuranceAndroid(String name, @Nullable DeviceAssuranceAndroidArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DeviceAssuranceAndroid(String name, @Nullable DeviceAssuranceAndroidArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:policy/deviceAssuranceAndroid:DeviceAssuranceAndroid", name, args == null ? DeviceAssuranceAndroidArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DeviceAssuranceAndroid(String name, Output<String> id, @Nullable DeviceAssuranceAndroidState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:policy/deviceAssuranceAndroid:DeviceAssuranceAndroid", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DeviceAssuranceAndroid get(String name, Output<String> id, @Nullable DeviceAssuranceAndroidState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DeviceAssuranceAndroid(name, id, state, options);
    }
}

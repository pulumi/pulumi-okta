// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.inputs.GetRequestSettingResourceValidAccessDurationSettingsSupportedTypeArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRequestSettingResourceValidAccessDurationSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetRequestSettingResourceValidAccessDurationSettingsArgs Empty = new GetRequestSettingResourceValidAccessDurationSettingsArgs();

    /**
     * The maximum value allowed for a request condition or risk setting.
     * 
     */
    @Import(name="maximumDays", required=true)
    private Output<Double> maximumDays;

    /**
     * @return The maximum value allowed for a request condition or risk setting.
     * 
     */
    public Output<Double> maximumDays() {
        return this.maximumDays;
    }

    /**
     * The maximum value allowed for a request condition or risk setting.
     * 
     */
    @Import(name="maximumHours", required=true)
    private Output<Double> maximumHours;

    /**
     * @return The maximum value allowed for a request condition or risk setting.
     * 
     */
    public Output<Double> maximumHours() {
        return this.maximumHours;
    }

    /**
     * The maximum value allowed for a request condition or risk setting.
     * 
     */
    @Import(name="maximumWeeks", required=true)
    private Output<Double> maximumWeeks;

    /**
     * @return The maximum value allowed for a request condition or risk setting.
     * 
     */
    public Output<Double> maximumWeeks() {
        return this.maximumWeeks;
    }

    /**
     * Whether accessDurationSetting must be included in the request conditions or risk settings for the specified resource.
     * 
     */
    @Import(name="required", required=true)
    private Output<Boolean> required;

    /**
     * @return Whether accessDurationSetting must be included in the request conditions or risk settings for the specified resource.
     * 
     */
    public Output<Boolean> required() {
        return this.required;
    }

    /**
     * Access duration settings that are eligible to be added to a request condition or risk settings for the specified resource.
     * 
     */
    @Import(name="supportedTypes")
    private @Nullable Output<List<GetRequestSettingResourceValidAccessDurationSettingsSupportedTypeArgs>> supportedTypes;

    /**
     * @return Access duration settings that are eligible to be added to a request condition or risk settings for the specified resource.
     * 
     */
    public Optional<Output<List<GetRequestSettingResourceValidAccessDurationSettingsSupportedTypeArgs>>> supportedTypes() {
        return Optional.ofNullable(this.supportedTypes);
    }

    private GetRequestSettingResourceValidAccessDurationSettingsArgs() {}

    private GetRequestSettingResourceValidAccessDurationSettingsArgs(GetRequestSettingResourceValidAccessDurationSettingsArgs $) {
        this.maximumDays = $.maximumDays;
        this.maximumHours = $.maximumHours;
        this.maximumWeeks = $.maximumWeeks;
        this.required = $.required;
        this.supportedTypes = $.supportedTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRequestSettingResourceValidAccessDurationSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRequestSettingResourceValidAccessDurationSettingsArgs $;

        public Builder() {
            $ = new GetRequestSettingResourceValidAccessDurationSettingsArgs();
        }

        public Builder(GetRequestSettingResourceValidAccessDurationSettingsArgs defaults) {
            $ = new GetRequestSettingResourceValidAccessDurationSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maximumDays The maximum value allowed for a request condition or risk setting.
         * 
         * @return builder
         * 
         */
        public Builder maximumDays(Output<Double> maximumDays) {
            $.maximumDays = maximumDays;
            return this;
        }

        /**
         * @param maximumDays The maximum value allowed for a request condition or risk setting.
         * 
         * @return builder
         * 
         */
        public Builder maximumDays(Double maximumDays) {
            return maximumDays(Output.of(maximumDays));
        }

        /**
         * @param maximumHours The maximum value allowed for a request condition or risk setting.
         * 
         * @return builder
         * 
         */
        public Builder maximumHours(Output<Double> maximumHours) {
            $.maximumHours = maximumHours;
            return this;
        }

        /**
         * @param maximumHours The maximum value allowed for a request condition or risk setting.
         * 
         * @return builder
         * 
         */
        public Builder maximumHours(Double maximumHours) {
            return maximumHours(Output.of(maximumHours));
        }

        /**
         * @param maximumWeeks The maximum value allowed for a request condition or risk setting.
         * 
         * @return builder
         * 
         */
        public Builder maximumWeeks(Output<Double> maximumWeeks) {
            $.maximumWeeks = maximumWeeks;
            return this;
        }

        /**
         * @param maximumWeeks The maximum value allowed for a request condition or risk setting.
         * 
         * @return builder
         * 
         */
        public Builder maximumWeeks(Double maximumWeeks) {
            return maximumWeeks(Output.of(maximumWeeks));
        }

        /**
         * @param required Whether accessDurationSetting must be included in the request conditions or risk settings for the specified resource.
         * 
         * @return builder
         * 
         */
        public Builder required(Output<Boolean> required) {
            $.required = required;
            return this;
        }

        /**
         * @param required Whether accessDurationSetting must be included in the request conditions or risk settings for the specified resource.
         * 
         * @return builder
         * 
         */
        public Builder required(Boolean required) {
            return required(Output.of(required));
        }

        /**
         * @param supportedTypes Access duration settings that are eligible to be added to a request condition or risk settings for the specified resource.
         * 
         * @return builder
         * 
         */
        public Builder supportedTypes(@Nullable Output<List<GetRequestSettingResourceValidAccessDurationSettingsSupportedTypeArgs>> supportedTypes) {
            $.supportedTypes = supportedTypes;
            return this;
        }

        /**
         * @param supportedTypes Access duration settings that are eligible to be added to a request condition or risk settings for the specified resource.
         * 
         * @return builder
         * 
         */
        public Builder supportedTypes(List<GetRequestSettingResourceValidAccessDurationSettingsSupportedTypeArgs> supportedTypes) {
            return supportedTypes(Output.of(supportedTypes));
        }

        /**
         * @param supportedTypes Access duration settings that are eligible to be added to a request condition or risk settings for the specified resource.
         * 
         * @return builder
         * 
         */
        public Builder supportedTypes(GetRequestSettingResourceValidAccessDurationSettingsSupportedTypeArgs... supportedTypes) {
            return supportedTypes(List.of(supportedTypes));
        }

        public GetRequestSettingResourceValidAccessDurationSettingsArgs build() {
            if ($.maximumDays == null) {
                throw new MissingRequiredPropertyException("GetRequestSettingResourceValidAccessDurationSettingsArgs", "maximumDays");
            }
            if ($.maximumHours == null) {
                throw new MissingRequiredPropertyException("GetRequestSettingResourceValidAccessDurationSettingsArgs", "maximumHours");
            }
            if ($.maximumWeeks == null) {
                throw new MissingRequiredPropertyException("GetRequestSettingResourceValidAccessDurationSettingsArgs", "maximumWeeks");
            }
            if ($.required == null) {
                throw new MissingRequiredPropertyException("GetRequestSettingResourceValidAccessDurationSettingsArgs", "required");
            }
            return $;
        }
    }

}

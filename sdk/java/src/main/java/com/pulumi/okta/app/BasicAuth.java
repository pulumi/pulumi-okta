// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.app;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.app.BasicAuthArgs;
import com.pulumi.okta.app.inputs.BasicAuthState;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource allows you to create and configure an Auto Login Okta Application.
 * &gt; During an apply if there is change in status the app will first be
 * activated or deactivated in accordance with the status change. Then, all
 * other arguments that changed will be applied.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.app.BasicAuth;
 * import com.pulumi.okta.app.BasicAuthArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new BasicAuth("example", BasicAuthArgs.builder()
 *             .label("Example")
 *             .url("https://example.com/login.html")
 *             .authUrl("https://example.com/auth.html")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:app/basicAuth:BasicAuth example &lt;app_id&gt;
 * ```
 * 
 */
@ResourceType(type="okta:app/basicAuth:BasicAuth")
public class BasicAuth extends com.pulumi.resources.CustomResource {
    /**
     * Custom error page URL
     * 
     */
    @Export(name="accessibilityErrorRedirectUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accessibilityErrorRedirectUrl;

    /**
     * @return Custom error page URL
     * 
     */
    public Output<Optional<String>> accessibilityErrorRedirectUrl() {
        return Codegen.optional(this.accessibilityErrorRedirectUrl);
    }
    /**
     * Custom login page URL
     * 
     */
    @Export(name="accessibilityLoginRedirectUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accessibilityLoginRedirectUrl;

    /**
     * @return Custom login page URL
     * 
     */
    public Output<Optional<String>> accessibilityLoginRedirectUrl() {
        return Codegen.optional(this.accessibilityLoginRedirectUrl);
    }
    /**
     * Enable self service. Default is `false`
     * 
     */
    @Export(name="accessibilitySelfService", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accessibilitySelfService;

    /**
     * @return Enable self service. Default is `false`
     * 
     */
    public Output<Optional<Boolean>> accessibilitySelfService() {
        return Codegen.optional(this.accessibilitySelfService);
    }
    /**
     * Application notes for admins.
     * 
     */
    @Export(name="adminNote", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> adminNote;

    /**
     * @return Application notes for admins.
     * 
     */
    public Output<Optional<String>> adminNote() {
        return Codegen.optional(this.adminNote);
    }
    /**
     * Displays specific appLinks for the app. The value for each application link should be boolean.
     * 
     */
    @Export(name="appLinksJson", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> appLinksJson;

    /**
     * @return Displays specific appLinks for the app. The value for each application link should be boolean.
     * 
     */
    public Output<Optional<String>> appLinksJson() {
        return Codegen.optional(this.appLinksJson);
    }
    /**
     * The URL of the authenticating site for this app.
     * 
     */
    @Export(name="authUrl", refs={String.class}, tree="[0]")
    private Output<String> authUrl;

    /**
     * @return The URL of the authenticating site for this app.
     * 
     */
    public Output<String> authUrl() {
        return this.authUrl;
    }
    /**
     * Display auto submit toolbar
     * 
     */
    @Export(name="autoSubmitToolbar", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoSubmitToolbar;

    /**
     * @return Display auto submit toolbar
     * 
     */
    public Output<Optional<Boolean>> autoSubmitToolbar() {
        return Codegen.optional(this.autoSubmitToolbar);
    }
    /**
     * Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`
     * 
     */
    @Export(name="credentialsScheme", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> credentialsScheme;

    /**
     * @return Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`
     * 
     */
    public Output<Optional<String>> credentialsScheme() {
        return Codegen.optional(this.credentialsScheme);
    }
    /**
     * Application notes for end users.
     * 
     */
    @Export(name="enduserNote", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> enduserNote;

    /**
     * @return Application notes for end users.
     * 
     */
    public Output<Optional<String>> enduserNote() {
        return Codegen.optional(this.enduserNote);
    }
    /**
     * Do not display application icon on mobile app
     * 
     */
    @Export(name="hideIos", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> hideIos;

    /**
     * @return Do not display application icon on mobile app
     * 
     */
    public Output<Optional<Boolean>> hideIos() {
        return Codegen.optional(this.hideIos);
    }
    /**
     * Do not display application icon to users
     * 
     */
    @Export(name="hideWeb", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> hideWeb;

    /**
     * @return Do not display application icon to users
     * 
     */
    public Output<Optional<Boolean>> hideWeb() {
        return Codegen.optional(this.hideWeb);
    }
    /**
     * The Application&#39;s display name.
     * 
     */
    @Export(name="label", refs={String.class}, tree="[0]")
    private Output<String> label;

    /**
     * @return The Application&#39;s display name.
     * 
     */
    public Output<String> label() {
        return this.label;
    }
    /**
     * Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     * 
     */
    @Export(name="logo", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> logo;

    /**
     * @return Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     * 
     */
    public Output<Optional<String>> logo() {
        return Codegen.optional(this.logo);
    }
    /**
     * URL of the application&#39;s logo
     * 
     */
    @Export(name="logoUrl", refs={String.class}, tree="[0]")
    private Output<String> logoUrl;

    /**
     * @return URL of the application&#39;s logo
     * 
     */
    public Output<String> logoUrl() {
        return this.logoUrl;
    }
    /**
     * Name of the app.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the app.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Allow user to reveal password. Default is false. It can not be set to true if credentialsScheme is &#34;ADMIN_SETS_CREDENTIALS&#34;, &#34;SHARED_USERNAME_AND_PASSWORD&#34; or &#34;EXTERNAL_PASSWORD_SYNC&#34;.
     * 
     */
    @Export(name="revealPassword", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> revealPassword;

    /**
     * @return Allow user to reveal password. Default is false. It can not be set to true if credentialsScheme is &#34;ADMIN_SETS_CREDENTIALS&#34;, &#34;SHARED_USERNAME_AND_PASSWORD&#34; or &#34;EXTERNAL_PASSWORD_SYNC&#34;.
     * 
     */
    public Output<Optional<Boolean>> revealPassword() {
        return Codegen.optional(this.revealPassword);
    }
    /**
     * Shared password, required for certain schemes.
     * 
     */
    @Export(name="sharedPassword", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sharedPassword;

    /**
     * @return Shared password, required for certain schemes.
     * 
     */
    public Output<Optional<String>> sharedPassword() {
        return Codegen.optional(this.sharedPassword);
    }
    /**
     * Shared username, required for certain schemes.
     * 
     */
    @Export(name="sharedUsername", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sharedUsername;

    /**
     * @return Shared username, required for certain schemes.
     * 
     */
    public Output<Optional<String>> sharedUsername() {
        return Codegen.optional(this.sharedUsername);
    }
    /**
     * Sign on mode of application.
     * 
     */
    @Export(name="signOnMode", refs={String.class}, tree="[0]")
    private Output<String> signOnMode;

    /**
     * @return Sign on mode of application.
     * 
     */
    public Output<String> signOnMode() {
        return this.signOnMode;
    }
    /**
     * Status of application. By default, it is `ACTIVE`
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> status;

    /**
     * @return Status of application. By default, it is `ACTIVE`
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * The URL of the sign-in page for this app.
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    /**
     * @return The URL of the sign-in page for this app.
     * 
     */
    public Output<String> url() {
        return this.url;
    }
    /**
     * Username template. Default: `${source.login}`
     * 
     */
    @Export(name="userNameTemplate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userNameTemplate;

    /**
     * @return Username template. Default: `${source.login}`
     * 
     */
    public Output<Optional<String>> userNameTemplate() {
        return Codegen.optional(this.userNameTemplate);
    }
    /**
     * Push username on update. Valid values: `PUSH`, `DONT_PUSH` and `NOT_CONFIGURED`
     * 
     */
    @Export(name="userNameTemplatePushStatus", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userNameTemplatePushStatus;

    /**
     * @return Push username on update. Valid values: `PUSH`, `DONT_PUSH` and `NOT_CONFIGURED`
     * 
     */
    public Output<Optional<String>> userNameTemplatePushStatus() {
        return Codegen.optional(this.userNameTemplatePushStatus);
    }
    /**
     * Username template suffix
     * 
     */
    @Export(name="userNameTemplateSuffix", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userNameTemplateSuffix;

    /**
     * @return Username template suffix
     * 
     */
    public Output<Optional<String>> userNameTemplateSuffix() {
        return Codegen.optional(this.userNameTemplateSuffix);
    }
    /**
     * Username template type. Default: `BUILT_IN`. Valid values: `NONE`, `CUSTOM`, `BUILT_IN`
     * 
     */
    @Export(name="userNameTemplateType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userNameTemplateType;

    /**
     * @return Username template type. Default: `BUILT_IN`. Valid values: `NONE`, `CUSTOM`, `BUILT_IN`
     * 
     */
    public Output<Optional<String>> userNameTemplateType() {
        return Codegen.optional(this.userNameTemplateType);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BasicAuth(java.lang.String name) {
        this(name, BasicAuthArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BasicAuth(java.lang.String name, BasicAuthArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BasicAuth(java.lang.String name, BasicAuthArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:app/basicAuth:BasicAuth", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private BasicAuth(java.lang.String name, Output<java.lang.String> id, @Nullable BasicAuthState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:app/basicAuth:BasicAuth", name, state, makeResourceOptions(options, id), false);
    }

    private static BasicAuthArgs makeArgs(BasicAuthArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BasicAuthArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BasicAuth get(java.lang.String name, Output<java.lang.String> id, @Nullable BasicAuthState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BasicAuth(name, id, state, options);
    }
}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.inputs.GetEntitlementBundleEntitlement;
import com.pulumi.okta.inputs.GetEntitlementBundleTarget;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEntitlementBundlePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEntitlementBundlePlainArgs Empty = new GetEntitlementBundlePlainArgs();

    /**
     * List of entitlements in the bundle
     * 
     */
    @Import(name="entitlements")
    private @Nullable List<GetEntitlementBundleEntitlement> entitlements;

    /**
     * @return List of entitlements in the bundle
     * 
     */
    public Optional<List<GetEntitlementBundleEntitlement>> entitlements() {
        return Optional.ofNullable(this.entitlements);
    }

    /**
     * The ID of this resource.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return The ID of this resource.
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * Representation of a resource
     * 
     */
    @Import(name="target")
    private @Nullable GetEntitlementBundleTarget target;

    /**
     * @return Representation of a resource
     * 
     */
    public Optional<GetEntitlementBundleTarget> target() {
        return Optional.ofNullable(this.target);
    }

    private GetEntitlementBundlePlainArgs() {}

    private GetEntitlementBundlePlainArgs(GetEntitlementBundlePlainArgs $) {
        this.entitlements = $.entitlements;
        this.id = $.id;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEntitlementBundlePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEntitlementBundlePlainArgs $;

        public Builder() {
            $ = new GetEntitlementBundlePlainArgs();
        }

        public Builder(GetEntitlementBundlePlainArgs defaults) {
            $ = new GetEntitlementBundlePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param entitlements List of entitlements in the bundle
         * 
         * @return builder
         * 
         */
        public Builder entitlements(@Nullable List<GetEntitlementBundleEntitlement> entitlements) {
            $.entitlements = entitlements;
            return this;
        }

        /**
         * @param entitlements List of entitlements in the bundle
         * 
         * @return builder
         * 
         */
        public Builder entitlements(GetEntitlementBundleEntitlement... entitlements) {
            return entitlements(List.of(entitlements));
        }

        /**
         * @param id The ID of this resource.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param target Representation of a resource
         * 
         * @return builder
         * 
         */
        public Builder target(@Nullable GetEntitlementBundleTarget target) {
            $.target = target;
            return this;
        }

        public GetEntitlementBundlePlainArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetEntitlementBundlePlainArgs", "id");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.inputs.GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScope;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCampaignPrincipalScopeSettings extends com.pulumi.resources.InvokeArgs {

    public static final GetCampaignPrincipalScopeSettings Empty = new GetCampaignPrincipalScopeSettings();

    @Import(name="excludedUserIds", required=true)
    private List<String> excludedUserIds;

    public List<String> excludedUserIds() {
        return this.excludedUserIds;
    }

    @Import(name="groupIds", required=true)
    private List<String> groupIds;

    public List<String> groupIds() {
        return this.groupIds;
    }

    @Import(name="includeOnlyActiveUsers", required=true)
    private Boolean includeOnlyActiveUsers;

    public Boolean includeOnlyActiveUsers() {
        return this.includeOnlyActiveUsers;
    }

    @Import(name="onlyIncludeUsersWithSodConflicts", required=true)
    private Boolean onlyIncludeUsersWithSodConflicts;

    public Boolean onlyIncludeUsersWithSodConflicts() {
        return this.onlyIncludeUsersWithSodConflicts;
    }

    @Import(name="predefinedInactiveUsersScopes")
    private @Nullable List<GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScope> predefinedInactiveUsersScopes;

    public Optional<List<GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScope>> predefinedInactiveUsersScopes() {
        return Optional.ofNullable(this.predefinedInactiveUsersScopes);
    }

    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    @Import(name="userIds", required=true)
    private List<String> userIds;

    public List<String> userIds() {
        return this.userIds;
    }

    @Import(name="userScopeExpression", required=true)
    private String userScopeExpression;

    public String userScopeExpression() {
        return this.userScopeExpression;
    }

    private GetCampaignPrincipalScopeSettings() {}

    private GetCampaignPrincipalScopeSettings(GetCampaignPrincipalScopeSettings $) {
        this.excludedUserIds = $.excludedUserIds;
        this.groupIds = $.groupIds;
        this.includeOnlyActiveUsers = $.includeOnlyActiveUsers;
        this.onlyIncludeUsersWithSodConflicts = $.onlyIncludeUsersWithSodConflicts;
        this.predefinedInactiveUsersScopes = $.predefinedInactiveUsersScopes;
        this.type = $.type;
        this.userIds = $.userIds;
        this.userScopeExpression = $.userScopeExpression;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCampaignPrincipalScopeSettings defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCampaignPrincipalScopeSettings $;

        public Builder() {
            $ = new GetCampaignPrincipalScopeSettings();
        }

        public Builder(GetCampaignPrincipalScopeSettings defaults) {
            $ = new GetCampaignPrincipalScopeSettings(Objects.requireNonNull(defaults));
        }

        public Builder excludedUserIds(List<String> excludedUserIds) {
            $.excludedUserIds = excludedUserIds;
            return this;
        }

        public Builder excludedUserIds(String... excludedUserIds) {
            return excludedUserIds(List.of(excludedUserIds));
        }

        public Builder groupIds(List<String> groupIds) {
            $.groupIds = groupIds;
            return this;
        }

        public Builder groupIds(String... groupIds) {
            return groupIds(List.of(groupIds));
        }

        public Builder includeOnlyActiveUsers(Boolean includeOnlyActiveUsers) {
            $.includeOnlyActiveUsers = includeOnlyActiveUsers;
            return this;
        }

        public Builder onlyIncludeUsersWithSodConflicts(Boolean onlyIncludeUsersWithSodConflicts) {
            $.onlyIncludeUsersWithSodConflicts = onlyIncludeUsersWithSodConflicts;
            return this;
        }

        public Builder predefinedInactiveUsersScopes(@Nullable List<GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScope> predefinedInactiveUsersScopes) {
            $.predefinedInactiveUsersScopes = predefinedInactiveUsersScopes;
            return this;
        }

        public Builder predefinedInactiveUsersScopes(GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScope... predefinedInactiveUsersScopes) {
            return predefinedInactiveUsersScopes(List.of(predefinedInactiveUsersScopes));
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public Builder userIds(List<String> userIds) {
            $.userIds = userIds;
            return this;
        }

        public Builder userIds(String... userIds) {
            return userIds(List.of(userIds));
        }

        public Builder userScopeExpression(String userScopeExpression) {
            $.userScopeExpression = userScopeExpression;
            return this;
        }

        public GetCampaignPrincipalScopeSettings build() {
            if ($.excludedUserIds == null) {
                throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettings", "excludedUserIds");
            }
            if ($.groupIds == null) {
                throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettings", "groupIds");
            }
            if ($.includeOnlyActiveUsers == null) {
                throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettings", "includeOnlyActiveUsers");
            }
            if ($.onlyIncludeUsersWithSodConflicts == null) {
                throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettings", "onlyIncludeUsersWithSodConflicts");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettings", "type");
            }
            if ($.userIds == null) {
                throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettings", "userIds");
            }
            if ($.userScopeExpression == null) {
                throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettings", "userScopeExpression");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ThreatInsightSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ThreatInsightSettingsArgs Empty = new ThreatInsightSettingsArgs();

    /**
     * Specifies how Okta responds to authentication requests from suspicious IPs. Valid values are `none`, `audit`, or `block`. A value of `none` indicates that ThreatInsight is disabled. A value of `audit` indicates that Okta logs suspicious requests in the System Log. A value of `block` indicates that Okta logs suspicious requests in the System Log and blocks the requests.
     * 
     */
    @Import(name="action", required=true)
    private Output<String> action;

    /**
     * @return Specifies how Okta responds to authentication requests from suspicious IPs. Valid values are `none`, `audit`, or `block`. A value of `none` indicates that ThreatInsight is disabled. A value of `audit` indicates that Okta logs suspicious requests in the System Log. A value of `block` indicates that Okta logs suspicious requests in the System Log and blocks the requests.
     * 
     */
    public Output<String> action() {
        return this.action;
    }

    /**
     * Accepts a list of Network Zone IDs. Can only accept zones of `IP` type. IPs in the excluded Network Zones aren&#39;t logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation. This ensures that traffic from known, trusted IPs isn&#39;t accidentally logged or blocked. The ordering of the network zone is not guarantee from the API sides
     * 
     */
    @Import(name="networkExcludes")
    private @Nullable Output<List<String>> networkExcludes;

    /**
     * @return Accepts a list of Network Zone IDs. Can only accept zones of `IP` type. IPs in the excluded Network Zones aren&#39;t logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation. This ensures that traffic from known, trusted IPs isn&#39;t accidentally logged or blocked. The ordering of the network zone is not guarantee from the API sides
     * 
     */
    public Optional<Output<List<String>>> networkExcludes() {
        return Optional.ofNullable(this.networkExcludes);
    }

    private ThreatInsightSettingsArgs() {}

    private ThreatInsightSettingsArgs(ThreatInsightSettingsArgs $) {
        this.action = $.action;
        this.networkExcludes = $.networkExcludes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ThreatInsightSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ThreatInsightSettingsArgs $;

        public Builder() {
            $ = new ThreatInsightSettingsArgs();
        }

        public Builder(ThreatInsightSettingsArgs defaults) {
            $ = new ThreatInsightSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Specifies how Okta responds to authentication requests from suspicious IPs. Valid values are `none`, `audit`, or `block`. A value of `none` indicates that ThreatInsight is disabled. A value of `audit` indicates that Okta logs suspicious requests in the System Log. A value of `block` indicates that Okta logs suspicious requests in the System Log and blocks the requests.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Specifies how Okta responds to authentication requests from suspicious IPs. Valid values are `none`, `audit`, or `block`. A value of `none` indicates that ThreatInsight is disabled. A value of `audit` indicates that Okta logs suspicious requests in the System Log. A value of `block` indicates that Okta logs suspicious requests in the System Log and blocks the requests.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param networkExcludes Accepts a list of Network Zone IDs. Can only accept zones of `IP` type. IPs in the excluded Network Zones aren&#39;t logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation. This ensures that traffic from known, trusted IPs isn&#39;t accidentally logged or blocked. The ordering of the network zone is not guarantee from the API sides
         * 
         * @return builder
         * 
         */
        public Builder networkExcludes(@Nullable Output<List<String>> networkExcludes) {
            $.networkExcludes = networkExcludes;
            return this;
        }

        /**
         * @param networkExcludes Accepts a list of Network Zone IDs. Can only accept zones of `IP` type. IPs in the excluded Network Zones aren&#39;t logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation. This ensures that traffic from known, trusted IPs isn&#39;t accidentally logged or blocked. The ordering of the network zone is not guarantee from the API sides
         * 
         * @return builder
         * 
         */
        public Builder networkExcludes(List<String> networkExcludes) {
            return networkExcludes(Output.of(networkExcludes));
        }

        /**
         * @param networkExcludes Accepts a list of Network Zone IDs. Can only accept zones of `IP` type. IPs in the excluded Network Zones aren&#39;t logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation. This ensures that traffic from known, trusted IPs isn&#39;t accidentally logged or blocked. The ordering of the network zone is not guarantee from the API sides
         * 
         * @return builder
         * 
         */
        public Builder networkExcludes(String... networkExcludes) {
            return networkExcludes(List.of(networkExcludes));
        }

        public ThreatInsightSettingsArgs build() {
            if ($.action == null) {
                throw new MissingRequiredPropertyException("ThreatInsightSettingsArgs", "action");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.ThemeArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.ThemeState;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="okta:index/theme:Theme")
public class Theme extends com.pulumi.resources.CustomResource {
    /**
     * Path to local file
     * 
     */
    @Export(name="backgroundImage", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> backgroundImage;

    /**
     * @return Path to local file
     * 
     */
    public Output<Optional<String>> backgroundImage() {
        return Codegen.optional(this.backgroundImage);
    }
    /**
     * Background image URL
     * 
     */
    @Export(name="backgroundImageUrl", refs={String.class}, tree="[0]")
    private Output<String> backgroundImageUrl;

    /**
     * @return Background image URL
     * 
     */
    public Output<String> backgroundImageUrl() {
        return this.backgroundImageUrl;
    }
    /**
     * Brand ID
     * 
     */
    @Export(name="brandId", refs={String.class}, tree="[0]")
    private Output<String> brandId;

    /**
     * @return Brand ID
     * 
     */
    public Output<String> brandId() {
        return this.brandId;
    }
    /**
     * Variant for email templates (`OKTA_DEFAULT`, `FULL_THEME`)
     * 
     */
    @Export(name="emailTemplateTouchPointVariant", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> emailTemplateTouchPointVariant;

    /**
     * @return Variant for email templates (`OKTA_DEFAULT`, `FULL_THEME`)
     * 
     */
    public Output<Optional<String>> emailTemplateTouchPointVariant() {
        return Codegen.optional(this.emailTemplateTouchPointVariant);
    }
    /**
     * Variant for the Okta End-User Dashboard (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)
     * 
     */
    @Export(name="endUserDashboardTouchPointVariant", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> endUserDashboardTouchPointVariant;

    /**
     * @return Variant for the Okta End-User Dashboard (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)
     * 
     */
    public Output<Optional<String>> endUserDashboardTouchPointVariant() {
        return Codegen.optional(this.endUserDashboardTouchPointVariant);
    }
    /**
     * Variant for the error page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
     * 
     */
    @Export(name="errorPageTouchPointVariant", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> errorPageTouchPointVariant;

    /**
     * @return Variant for the error page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
     * 
     */
    public Output<Optional<String>> errorPageTouchPointVariant() {
        return Codegen.optional(this.errorPageTouchPointVariant);
    }
    /**
     * Path to local file
     * 
     */
    @Export(name="favicon", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> favicon;

    /**
     * @return Path to local file
     * 
     */
    public Output<Optional<String>> favicon() {
        return Codegen.optional(this.favicon);
    }
    /**
     * Favicon URL
     * 
     */
    @Export(name="faviconUrl", refs={String.class}, tree="[0]")
    private Output<String> faviconUrl;

    /**
     * @return Favicon URL
     * 
     */
    public Output<String> faviconUrl() {
        return this.faviconUrl;
    }
    /**
     * Link relations for this object - JSON HAL - Discoverable resources related to the email template
     * 
     */
    @Export(name="links", refs={String.class}, tree="[0]")
    private Output<String> links;

    /**
     * @return Link relations for this object - JSON HAL - Discoverable resources related to the email template
     * 
     */
    public Output<String> links() {
        return this.links;
    }
    /**
     * Path to local file
     * 
     */
    @Export(name="logo", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> logo;

    /**
     * @return Path to local file
     * 
     */
    public Output<Optional<String>> logo() {
        return Codegen.optional(this.logo);
    }
    /**
     * Logo URL
     * 
     */
    @Export(name="logoUrl", refs={String.class}, tree="[0]")
    private Output<String> logoUrl;

    /**
     * @return Logo URL
     * 
     */
    public Output<String> logoUrl() {
        return this.logoUrl;
    }
    /**
     * Primary color contrast hex code
     * 
     */
    @Export(name="primaryColorContrastHex", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryColorContrastHex;

    /**
     * @return Primary color contrast hex code
     * 
     */
    public Output<Optional<String>> primaryColorContrastHex() {
        return Codegen.optional(this.primaryColorContrastHex);
    }
    /**
     * Primary color hex code
     * 
     */
    @Export(name="primaryColorHex", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryColorHex;

    /**
     * @return Primary color hex code
     * 
     */
    public Output<Optional<String>> primaryColorHex() {
        return Codegen.optional(this.primaryColorHex);
    }
    /**
     * Secondary color contrast hex code
     * 
     */
    @Export(name="secondaryColorContrastHex", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryColorContrastHex;

    /**
     * @return Secondary color contrast hex code
     * 
     */
    public Output<Optional<String>> secondaryColorContrastHex() {
        return Codegen.optional(this.secondaryColorContrastHex);
    }
    /**
     * Secondary color hex code
     * 
     */
    @Export(name="secondaryColorHex", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryColorHex;

    /**
     * @return Secondary color hex code
     * 
     */
    public Output<Optional<String>> secondaryColorHex() {
        return Codegen.optional(this.secondaryColorHex);
    }
    /**
     * Variant for the Okta Sign-In Page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
     * 
     */
    @Export(name="signInPageTouchPointVariant", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> signInPageTouchPointVariant;

    /**
     * @return Variant for the Okta Sign-In Page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
     * 
     */
    public Output<Optional<String>> signInPageTouchPointVariant() {
        return Codegen.optional(this.signInPageTouchPointVariant);
    }
    /**
     * Theme ID - Note: Okta API for theme only reads and updates therefore the okta*theme resource needs to act as a quasi data source. Do this by setting theme*id.
     * 
     */
    @Export(name="themeId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> themeId;

    /**
     * @return Theme ID - Note: Okta API for theme only reads and updates therefore the okta*theme resource needs to act as a quasi data source. Do this by setting theme*id.
     * 
     */
    public Output<Optional<String>> themeId() {
        return Codegen.optional(this.themeId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Theme(String name) {
        this(name, ThemeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Theme(String name, ThemeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Theme(String name, ThemeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/theme:Theme", name, args == null ? ThemeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Theme(String name, Output<String> id, @Nullable ThemeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/theme:Theme", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Theme get(String name, Output<String> id, @Nullable ThemeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Theme(name, id, state, options);
    }
}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.okta.inputs.GetPrincipalEntitlementsData;
import com.pulumi.okta.inputs.GetPrincipalEntitlementsParent;
import com.pulumi.okta.inputs.GetPrincipalEntitlementsTargetPrincipal;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPrincipalEntitlementsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPrincipalEntitlementsPlainArgs Empty = new GetPrincipalEntitlementsPlainArgs();

    /**
     * Principal entitlements list.
     * 
     */
    @Import(name="datas")
    private @Nullable List<GetPrincipalEntitlementsData> datas;

    /**
     * @return Principal entitlements list.
     * 
     */
    public Optional<List<GetPrincipalEntitlementsData>> datas() {
        return Optional.ofNullable(this.datas);
    }

    /**
     * Representation of a resource.
     * 
     */
    @Import(name="parent")
    private @Nullable GetPrincipalEntitlementsParent parent;

    /**
     * @return Representation of a resource.
     * 
     */
    public Optional<GetPrincipalEntitlementsParent> parent() {
        return Optional.ofNullable(this.parent);
    }

    /**
     * Representation of a principal.
     * 
     */
    @Import(name="targetPrincipal")
    private @Nullable GetPrincipalEntitlementsTargetPrincipal targetPrincipal;

    /**
     * @return Representation of a principal.
     * 
     */
    public Optional<GetPrincipalEntitlementsTargetPrincipal> targetPrincipal() {
        return Optional.ofNullable(this.targetPrincipal);
    }

    private GetPrincipalEntitlementsPlainArgs() {}

    private GetPrincipalEntitlementsPlainArgs(GetPrincipalEntitlementsPlainArgs $) {
        this.datas = $.datas;
        this.parent = $.parent;
        this.targetPrincipal = $.targetPrincipal;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPrincipalEntitlementsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPrincipalEntitlementsPlainArgs $;

        public Builder() {
            $ = new GetPrincipalEntitlementsPlainArgs();
        }

        public Builder(GetPrincipalEntitlementsPlainArgs defaults) {
            $ = new GetPrincipalEntitlementsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datas Principal entitlements list.
         * 
         * @return builder
         * 
         */
        public Builder datas(@Nullable List<GetPrincipalEntitlementsData> datas) {
            $.datas = datas;
            return this;
        }

        /**
         * @param datas Principal entitlements list.
         * 
         * @return builder
         * 
         */
        public Builder datas(GetPrincipalEntitlementsData... datas) {
            return datas(List.of(datas));
        }

        /**
         * @param parent Representation of a resource.
         * 
         * @return builder
         * 
         */
        public Builder parent(@Nullable GetPrincipalEntitlementsParent parent) {
            $.parent = parent;
            return this;
        }

        /**
         * @param targetPrincipal Representation of a principal.
         * 
         * @return builder
         * 
         */
        public Builder targetPrincipal(@Nullable GetPrincipalEntitlementsTargetPrincipal targetPrincipal) {
            $.targetPrincipal = targetPrincipal;
            return this;
        }

        public GetPrincipalEntitlementsPlainArgs build() {
            return $;
        }
    }

}

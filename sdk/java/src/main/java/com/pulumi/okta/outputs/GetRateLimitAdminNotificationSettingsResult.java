// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRateLimitAdminNotificationSettingsResult {
    /**
     * @return The unique identifier of the principal. This is the ID of the API token or OAuth 2.0 app.
     * 
     */
    private String id;
    /**
     * @return Enables or disables admin notifications for rate limiting events.
     * 
     */
    private Boolean notificationsEnabled;

    private GetRateLimitAdminNotificationSettingsResult() {}
    /**
     * @return The unique identifier of the principal. This is the ID of the API token or OAuth 2.0 app.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Enables or disables admin notifications for rate limiting events.
     * 
     */
    public Boolean notificationsEnabled() {
        return this.notificationsEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRateLimitAdminNotificationSettingsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private Boolean notificationsEnabled;
        public Builder() {}
        public Builder(GetRateLimitAdminNotificationSettingsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.notificationsEnabled = defaults.notificationsEnabled;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRateLimitAdminNotificationSettingsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder notificationsEnabled(Boolean notificationsEnabled) {
            if (notificationsEnabled == null) {
              throw new MissingRequiredPropertyException("GetRateLimitAdminNotificationSettingsResult", "notificationsEnabled");
            }
            this.notificationsEnabled = notificationsEnabled;
            return this;
        }
        public GetRateLimitAdminNotificationSettingsResult build() {
            final var _resultValue = new GetRateLimitAdminNotificationSettingsResult();
            _resultValue.id = id;
            _resultValue.notificationsEnabled = notificationsEnabled;
            return _resultValue;
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.policy;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.policy.RuleSignonArgs;
import com.pulumi.okta.policy.inputs.RuleSignonState;
import com.pulumi.okta.policy.outputs.RuleSignonFactorSequence;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="okta:policy/ruleSignon:RuleSignon")
public class RuleSignon extends com.pulumi.resources.CustomResource {
    /**
     * Allow or deny access based on the rule conditions: ALLOW, DENY or CHALLENGE.
     * 
     */
    @Export(name="access", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> access;

    /**
     * @return Allow or deny access based on the rule conditions: ALLOW, DENY or CHALLENGE.
     * 
     */
    public Output<Optional<String>> access() {
        return Codegen.optional(this.access);
    }
    /**
     * Authentication entrypoint: ANY, RADIUS or LDAP_INTERFACE
     * 
     */
    @Export(name="authtype", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> authtype;

    /**
     * @return Authentication entrypoint: ANY, RADIUS or LDAP_INTERFACE
     * 
     */
    public Output<Optional<String>> authtype() {
        return Codegen.optional(this.authtype);
    }
    /**
     * List of behavior IDs
     * 
     */
    @Export(name="behaviors", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> behaviors;

    /**
     * @return List of behavior IDs
     * 
     */
    public Output<Optional<List<String>>> behaviors() {
        return Codegen.optional(this.behaviors);
    }
    @Export(name="factorSequences", refs={List.class,RuleSignonFactorSequence.class}, tree="[0,1]")
    private Output</* @Nullable */ List<RuleSignonFactorSequence>> factorSequences;

    public Output<Optional<List<RuleSignonFactorSequence>>> factorSequences() {
        return Codegen.optional(this.factorSequences);
    }
    /**
     * Apply rule based on the IdP used: ANY, OKTA or SPECIFIC_IDP.
     * 
     */
    @Export(name="identityProvider", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> identityProvider;

    /**
     * @return Apply rule based on the IdP used: ANY, OKTA or SPECIFIC_IDP.
     * 
     */
    public Output<Optional<String>> identityProvider() {
        return Codegen.optional(this.identityProvider);
    }
    /**
     * When identity*provider is SPECIFIC*IDP then this is the list of IdP IDs to apply the rule on
     * 
     */
    @Export(name="identityProviderIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> identityProviderIds;

    /**
     * @return When identity*provider is SPECIFIC*IDP then this is the list of IdP IDs to apply the rule on
     * 
     */
    public Output<Optional<List<String>>> identityProviderIds() {
        return Codegen.optional(this.identityProviderIds);
    }
    /**
     * Elapsed time before the next MFA challenge
     * 
     */
    @Export(name="mfaLifetime", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> mfaLifetime;

    /**
     * @return Elapsed time before the next MFA challenge
     * 
     */
    public Output<Optional<Integer>> mfaLifetime() {
        return Codegen.optional(this.mfaLifetime);
    }
    /**
     * Prompt for MFA based on the device used, a factor session lifetime, or every sign-on attempt: DEVICE, SESSION or ALWAYS
     * 
     */
    @Export(name="mfaPrompt", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> mfaPrompt;

    /**
     * @return Prompt for MFA based on the device used, a factor session lifetime, or every sign-on attempt: DEVICE, SESSION or ALWAYS
     * 
     */
    public Output<Optional<String>> mfaPrompt() {
        return Codegen.optional(this.mfaPrompt);
    }
    /**
     * Remember MFA device.
     * 
     */
    @Export(name="mfaRememberDevice", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> mfaRememberDevice;

    /**
     * @return Remember MFA device.
     * 
     */
    public Output<Optional<Boolean>> mfaRememberDevice() {
        return Codegen.optional(this.mfaRememberDevice);
    }
    /**
     * Require MFA.
     * 
     */
    @Export(name="mfaRequired", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> mfaRequired;

    /**
     * @return Require MFA.
     * 
     */
    public Output<Optional<Boolean>> mfaRequired() {
        return Codegen.optional(this.mfaRequired);
    }
    /**
     * Policy Rule Name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Policy Rule Name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Network selection mode: ANYWHERE, ZONE, ON*NETWORK, or OFF*NETWORK.
     * 
     */
    @Export(name="networkConnection", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> networkConnection;

    /**
     * @return Network selection mode: ANYWHERE, ZONE, ON*NETWORK, or OFF*NETWORK.
     * 
     */
    public Output<Optional<String>> networkConnection() {
        return Codegen.optional(this.networkConnection);
    }
    /**
     * The zones to exclude
     * 
     */
    @Export(name="networkExcludes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> networkExcludes;

    /**
     * @return The zones to exclude
     * 
     */
    public Output<Optional<List<String>>> networkExcludes() {
        return Codegen.optional(this.networkExcludes);
    }
    /**
     * The zones to include
     * 
     */
    @Export(name="networkIncludes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> networkIncludes;

    /**
     * @return The zones to include
     * 
     */
    public Output<Optional<List<String>>> networkIncludes() {
        return Codegen.optional(this.networkIncludes);
    }
    /**
     * Policy ID of the Rule
     * 
     */
    @Export(name="policyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> policyId;

    /**
     * @return Policy ID of the Rule
     * 
     */
    public Output<Optional<String>> policyId() {
        return Codegen.optional(this.policyId);
    }
    /**
     * Primary factor.
     * 
     */
    @Export(name="primaryFactor", refs={String.class}, tree="[0]")
    private Output<String> primaryFactor;

    /**
     * @return Primary factor.
     * 
     */
    public Output<String> primaryFactor() {
        return this.primaryFactor;
    }
    /**
     * Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.
     * 
     */
    @Export(name="priority", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> priority;

    /**
     * @return Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.
     * 
     */
    public Output<Optional<Integer>> priority() {
        return Codegen.optional(this.priority);
    }
    /**
     * Risc level: ANY, LOW, MEDIUM or HIGH
     * 
     */
    @Export(name="riscLevel", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> riscLevel;

    /**
     * @return Risc level: ANY, LOW, MEDIUM or HIGH
     * 
     */
    public Output<Optional<String>> riscLevel() {
        return Codegen.optional(this.riscLevel);
    }
    /**
     * Max minutes a session can be idle.
     * 
     */
    @Export(name="sessionIdle", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> sessionIdle;

    /**
     * @return Max minutes a session can be idle.
     * 
     */
    public Output<Optional<Integer>> sessionIdle() {
        return Codegen.optional(this.sessionIdle);
    }
    /**
     * Max minutes a session is active: Disable = 0.
     * 
     */
    @Export(name="sessionLifetime", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> sessionLifetime;

    /**
     * @return Max minutes a session is active: Disable = 0.
     * 
     */
    public Output<Optional<Integer>> sessionLifetime() {
        return Codegen.optional(this.sessionLifetime);
    }
    /**
     * Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session cookies.
     * 
     */
    @Export(name="sessionPersistent", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> sessionPersistent;

    /**
     * @return Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session cookies.
     * 
     */
    public Output<Optional<Boolean>> sessionPersistent() {
        return Codegen.optional(this.sessionPersistent);
    }
    /**
     * Policy Rule Status: ACTIVE or INACTIVE.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> status;

    /**
     * @return Policy Rule Status: ACTIVE or INACTIVE.
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * Set of User IDs to Exclude
     * 
     */
    @Export(name="usersExcludeds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> usersExcludeds;

    /**
     * @return Set of User IDs to Exclude
     * 
     */
    public Output<Optional<List<String>>> usersExcludeds() {
        return Codegen.optional(this.usersExcludeds);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RuleSignon(String name) {
        this(name, RuleSignonArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RuleSignon(String name, @Nullable RuleSignonArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RuleSignon(String name, @Nullable RuleSignonArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:policy/ruleSignon:RuleSignon", name, args == null ? RuleSignonArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RuleSignon(String name, Output<String> id, @Nullable RuleSignonState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:policy/ruleSignon:RuleSignon", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RuleSignon get(String name, Output<String> id, @Nullable RuleSignonState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RuleSignon(name, id, state, options);
    }
}

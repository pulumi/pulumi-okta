// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.FeatureArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.FeatureState;
import com.pulumi.okta.outputs.FeatureStage;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages brand. This resource allows you to toggle an Okta Feature.
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:index/feature:Feature example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="okta:index/feature:Feature")
public class Feature extends com.pulumi.resources.CustomResource {
    /**
     * Name of the feature.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return Name of the feature.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Okta API for feature only reads and updates therefore the okta*feature resource needs to act as a quasi data source. Do this by setting feature*id
     * 
     */
    @Export(name="featureId", refs={String.class}, tree="[0]")
    private Output<String> featureId;

    /**
     * @return Okta API for feature only reads and updates therefore the okta*feature resource needs to act as a quasi data source. Do this by setting feature*id
     * 
     */
    public Output<String> featureId() {
        return this.featureId;
    }
    /**
     * Whether to `ENABLE` or `DISABLE` the feature
     * 
     */
    @Export(name="lifeCycle", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> lifeCycle;

    /**
     * @return Whether to `ENABLE` or `DISABLE` the feature
     * 
     */
    public Output<Optional<String>> lifeCycle() {
        return Codegen.optional(this.lifeCycle);
    }
    /**
     * Indicates if you want to force enable or disable a feature. Value is `true` meaning force
     * 
     */
    @Export(name="mode", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> mode;

    /**
     * @return Indicates if you want to force enable or disable a feature. Value is `true` meaning force
     * 
     */
    public Output<Optional<Boolean>> mode() {
        return Codegen.optional(this.mode);
    }
    /**
     * Name of the feature.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the feature.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Current release cycle stage of a feature.
     * 
     */
    @Export(name="stage", refs={FeatureStage.class}, tree="[0]")
    private Output<FeatureStage> stage;

    /**
     * @return Current release cycle stage of a feature.
     * 
     */
    public Output<FeatureStage> stage() {
        return this.stage;
    }
    /**
     * The feature status.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The feature status.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Type of feature.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Type of feature.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Feature(java.lang.String name) {
        this(name, FeatureArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Feature(java.lang.String name, FeatureArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Feature(java.lang.String name, FeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/feature:Feature", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Feature(java.lang.String name, Output<java.lang.String> id, @Nullable FeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/feature:Feature", name, state, makeResourceOptions(options, id), false);
    }

    private static FeatureArgs makeArgs(FeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FeatureArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Feature get(java.lang.String name, Output<java.lang.String> id, @Nullable FeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Feature(name, id, state, options);
    }
}

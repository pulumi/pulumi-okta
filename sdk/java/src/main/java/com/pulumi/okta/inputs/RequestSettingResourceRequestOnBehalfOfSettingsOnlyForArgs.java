// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs extends com.pulumi.resources.ResourceArgs {

    public static final RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs Empty = new RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs();

    /**
     * Which requesters the resource requester can request on behalf of. If onlyFor is not specified then any requester may request a resource on the behalf of any other user
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Which requesters the resource requester can request on behalf of. If onlyFor is not specified then any requester may request a resource on the behalf of any other user
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs() {}

    private RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs(RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs $) {
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs $;

        public Builder() {
            $ = new RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs();
        }

        public Builder(RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs defaults) {
            $ = new RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param type Which requesters the resource requester can request on behalf of. If onlyFor is not specified then any requester may request a resource on the behalf of any other user
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Which requesters the resource requester can request on behalf of. If onlyFor is not specified then any requester may request a resource on the behalf of any other user
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs build() {
            return $;
        }
    }

}

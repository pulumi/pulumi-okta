// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RateLimitAdminNotificationSettingsState extends com.pulumi.resources.ResourceArgs {

    public static final RateLimitAdminNotificationSettingsState Empty = new RateLimitAdminNotificationSettingsState();

    /**
     * Enables or disables admin notifications for rate limiting events.
     * 
     */
    @Import(name="notificationsEnabled")
    private @Nullable Output<Boolean> notificationsEnabled;

    /**
     * @return Enables or disables admin notifications for rate limiting events.
     * 
     */
    public Optional<Output<Boolean>> notificationsEnabled() {
        return Optional.ofNullable(this.notificationsEnabled);
    }

    private RateLimitAdminNotificationSettingsState() {}

    private RateLimitAdminNotificationSettingsState(RateLimitAdminNotificationSettingsState $) {
        this.notificationsEnabled = $.notificationsEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RateLimitAdminNotificationSettingsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RateLimitAdminNotificationSettingsState $;

        public Builder() {
            $ = new RateLimitAdminNotificationSettingsState();
        }

        public Builder(RateLimitAdminNotificationSettingsState defaults) {
            $ = new RateLimitAdminNotificationSettingsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param notificationsEnabled Enables or disables admin notifications for rate limiting events.
         * 
         * @return builder
         * 
         */
        public Builder notificationsEnabled(@Nullable Output<Boolean> notificationsEnabled) {
            $.notificationsEnabled = notificationsEnabled;
            return this;
        }

        /**
         * @param notificationsEnabled Enables or disables admin notifications for rate limiting events.
         * 
         * @return builder
         * 
         */
        public Builder notificationsEnabled(Boolean notificationsEnabled) {
            return notificationsEnabled(Output.of(notificationsEnabled));
        }

        public RateLimitAdminNotificationSettingsState build() {
            return $;
        }
    }

}

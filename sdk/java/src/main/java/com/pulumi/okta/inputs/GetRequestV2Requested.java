// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetRequestV2Requested extends com.pulumi.resources.InvokeArgs {

    public static final GetRequestV2Requested Empty = new GetRequestV2Requested();

    /**
     * The ID of the access scope associated with the resource.
     * 
     */
    @Import(name="accessScopeId", required=true)
    private String accessScopeId;

    /**
     * @return The ID of the access scope associated with the resource.
     * 
     */
    public String accessScopeId() {
        return this.accessScopeId;
    }

    /**
     * The access scope type.
     * 
     */
    @Import(name="accessScopeType", required=true)
    private String accessScopeType;

    /**
     * @return The access scope type.
     * 
     */
    public String accessScopeType() {
        return this.accessScopeType;
    }

    /**
     * The ID of the resource catalog entry.
     * 
     */
    @Import(name="entryId", required=true)
    private String entryId;

    /**
     * @return The ID of the resource catalog entry.
     * 
     */
    public String entryId() {
        return this.entryId;
    }

    /**
     * The ID of the requested resource.
     * 
     */
    @Import(name="resourceId", required=true)
    private String resourceId;

    /**
     * @return The ID of the requested resource.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * The requested resource type.
     * 
     */
    @Import(name="resourceType", required=true)
    private String resourceType;

    /**
     * @return The requested resource type.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }

    /**
     * The type of the resource.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }

    private GetRequestV2Requested() {}

    private GetRequestV2Requested(GetRequestV2Requested $) {
        this.accessScopeId = $.accessScopeId;
        this.accessScopeType = $.accessScopeType;
        this.entryId = $.entryId;
        this.resourceId = $.resourceId;
        this.resourceType = $.resourceType;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRequestV2Requested defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRequestV2Requested $;

        public Builder() {
            $ = new GetRequestV2Requested();
        }

        public Builder(GetRequestV2Requested defaults) {
            $ = new GetRequestV2Requested(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessScopeId The ID of the access scope associated with the resource.
         * 
         * @return builder
         * 
         */
        public Builder accessScopeId(String accessScopeId) {
            $.accessScopeId = accessScopeId;
            return this;
        }

        /**
         * @param accessScopeType The access scope type.
         * 
         * @return builder
         * 
         */
        public Builder accessScopeType(String accessScopeType) {
            $.accessScopeType = accessScopeType;
            return this;
        }

        /**
         * @param entryId The ID of the resource catalog entry.
         * 
         * @return builder
         * 
         */
        public Builder entryId(String entryId) {
            $.entryId = entryId;
            return this;
        }

        /**
         * @param resourceId The ID of the requested resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceType The requested resource type.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param type The type of the resource.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetRequestV2Requested build() {
            if ($.accessScopeId == null) {
                throw new MissingRequiredPropertyException("GetRequestV2Requested", "accessScopeId");
            }
            if ($.accessScopeType == null) {
                throw new MissingRequiredPropertyException("GetRequestV2Requested", "accessScopeType");
            }
            if ($.entryId == null) {
                throw new MissingRequiredPropertyException("GetRequestV2Requested", "entryId");
            }
            if ($.resourceId == null) {
                throw new MissingRequiredPropertyException("GetRequestV2Requested", "resourceId");
            }
            if ($.resourceType == null) {
                throw new MissingRequiredPropertyException("GetRequestV2Requested", "resourceType");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetRequestV2Requested", "type");
            }
            return $;
        }
    }

}

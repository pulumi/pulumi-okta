// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.okta.inputs.CampaignNotificationSettingsArgs;
import com.pulumi.okta.inputs.CampaignPrincipalScopeSettingsArgs;
import com.pulumi.okta.inputs.CampaignRemediationSettingsArgs;
import com.pulumi.okta.inputs.CampaignResourceSettingsArgs;
import com.pulumi.okta.inputs.CampaignReviewerSettingsArgs;
import com.pulumi.okta.inputs.CampaignScheduleSettingsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CampaignState extends com.pulumi.resources.ResourceArgs {

    public static final CampaignState Empty = new CampaignState();

    /**
     * Indicates the minimum required SKU to manage the campaign. Enum: &#34;BASIC&#34;, &#34;PREMIUM&#34;.
     * 
     */
    @Import(name="campaignTier")
    private @Nullable Output<String> campaignTier;

    /**
     * @return Indicates the minimum required SKU to manage the campaign. Enum: &#34;BASIC&#34;, &#34;PREMIUM&#34;.
     * 
     */
    public Optional<Output<String>> campaignTier() {
        return Optional.ofNullable(this.campaignTier);
    }

    /**
     * Identifies if it is a resource campaign or a user campaign. By default, it is &#34;RESOURCE&#34;. Enum: &#34;RESOURCE&#34;, &#34;USER&#34;.
     * 
     */
    @Import(name="campaignType")
    private @Nullable Output<String> campaignType;

    /**
     * @return Identifies if it is a resource campaign or a user campaign. By default, it is &#34;RESOURCE&#34;. Enum: &#34;RESOURCE&#34;, &#34;USER&#34;.
     * 
     */
    public Optional<Output<String>> campaignType() {
        return Optional.ofNullable(this.campaignType);
    }

    /**
     * Human readable description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Human readable description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the campaign
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the campaign
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="notificationSettings")
    private @Nullable Output<CampaignNotificationSettingsArgs> notificationSettings;

    public Optional<Output<CampaignNotificationSettingsArgs>> notificationSettings() {
        return Optional.ofNullable(this.notificationSettings);
    }

    /**
     * User scope specific settings
     * 
     */
    @Import(name="principalScopeSettings")
    private @Nullable Output<CampaignPrincipalScopeSettingsArgs> principalScopeSettings;

    /**
     * @return User scope specific settings
     * 
     */
    public Optional<Output<CampaignPrincipalScopeSettingsArgs>> principalScopeSettings() {
        return Optional.ofNullable(this.principalScopeSettings);
    }

    /**
     * Specify the action to be taken after a reviewer makes a decision to APPROVE or REVOKE the access, or if the campaign was CLOSED and there was no response from the reviewer.
     * 
     */
    @Import(name="remediationSettings")
    private @Nullable Output<CampaignRemediationSettingsArgs> remediationSettings;

    /**
     * @return Specify the action to be taken after a reviewer makes a decision to APPROVE or REVOKE the access, or if the campaign was CLOSED and there was no response from the reviewer.
     * 
     */
    public Optional<Output<CampaignRemediationSettingsArgs>> remediationSettings() {
        return Optional.ofNullable(this.remediationSettings);
    }

    /**
     * Resource specific properties.
     * 
     */
    @Import(name="resourceSettings")
    private @Nullable Output<CampaignResourceSettingsArgs> resourceSettings;

    /**
     * @return Resource specific properties.
     * 
     */
    public Optional<Output<CampaignResourceSettingsArgs>> resourceSettings() {
        return Optional.ofNullable(this.resourceSettings);
    }

    /**
     * Identifies the kind of reviewer for Access Certification.
     * 
     */
    @Import(name="reviewerSettings")
    private @Nullable Output<CampaignReviewerSettingsArgs> reviewerSettings;

    /**
     * @return Identifies the kind of reviewer for Access Certification.
     * 
     */
    public Optional<Output<CampaignReviewerSettingsArgs>> reviewerSettings() {
        return Optional.ofNullable(this.reviewerSettings);
    }

    /**
     * Scheduler specific settings.
     * 
     */
    @Import(name="scheduleSettings")
    private @Nullable Output<CampaignScheduleSettingsArgs> scheduleSettings;

    /**
     * @return Scheduler specific settings.
     * 
     */
    public Optional<Output<CampaignScheduleSettingsArgs>> scheduleSettings() {
        return Optional.ofNullable(this.scheduleSettings);
    }

    /**
     * If true, skip remediation when ending the campaign (only applicable if remediationSetting.noResponse=DENY).
     * 
     */
    @Import(name="skipRemediation")
    private @Nullable Output<Boolean> skipRemediation;

    /**
     * @return If true, skip remediation when ending the campaign (only applicable if remediationSetting.noResponse=DENY).
     * 
     */
    public Optional<Output<Boolean>> skipRemediation() {
        return Optional.ofNullable(this.skipRemediation);
    }

    private CampaignState() {}

    private CampaignState(CampaignState $) {
        this.campaignTier = $.campaignTier;
        this.campaignType = $.campaignType;
        this.description = $.description;
        this.name = $.name;
        this.notificationSettings = $.notificationSettings;
        this.principalScopeSettings = $.principalScopeSettings;
        this.remediationSettings = $.remediationSettings;
        this.resourceSettings = $.resourceSettings;
        this.reviewerSettings = $.reviewerSettings;
        this.scheduleSettings = $.scheduleSettings;
        this.skipRemediation = $.skipRemediation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CampaignState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CampaignState $;

        public Builder() {
            $ = new CampaignState();
        }

        public Builder(CampaignState defaults) {
            $ = new CampaignState(Objects.requireNonNull(defaults));
        }

        /**
         * @param campaignTier Indicates the minimum required SKU to manage the campaign. Enum: &#34;BASIC&#34;, &#34;PREMIUM&#34;.
         * 
         * @return builder
         * 
         */
        public Builder campaignTier(@Nullable Output<String> campaignTier) {
            $.campaignTier = campaignTier;
            return this;
        }

        /**
         * @param campaignTier Indicates the minimum required SKU to manage the campaign. Enum: &#34;BASIC&#34;, &#34;PREMIUM&#34;.
         * 
         * @return builder
         * 
         */
        public Builder campaignTier(String campaignTier) {
            return campaignTier(Output.of(campaignTier));
        }

        /**
         * @param campaignType Identifies if it is a resource campaign or a user campaign. By default, it is &#34;RESOURCE&#34;. Enum: &#34;RESOURCE&#34;, &#34;USER&#34;.
         * 
         * @return builder
         * 
         */
        public Builder campaignType(@Nullable Output<String> campaignType) {
            $.campaignType = campaignType;
            return this;
        }

        /**
         * @param campaignType Identifies if it is a resource campaign or a user campaign. By default, it is &#34;RESOURCE&#34;. Enum: &#34;RESOURCE&#34;, &#34;USER&#34;.
         * 
         * @return builder
         * 
         */
        public Builder campaignType(String campaignType) {
            return campaignType(Output.of(campaignType));
        }

        /**
         * @param description Human readable description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Human readable description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Name of the campaign
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the campaign
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder notificationSettings(@Nullable Output<CampaignNotificationSettingsArgs> notificationSettings) {
            $.notificationSettings = notificationSettings;
            return this;
        }

        public Builder notificationSettings(CampaignNotificationSettingsArgs notificationSettings) {
            return notificationSettings(Output.of(notificationSettings));
        }

        /**
         * @param principalScopeSettings User scope specific settings
         * 
         * @return builder
         * 
         */
        public Builder principalScopeSettings(@Nullable Output<CampaignPrincipalScopeSettingsArgs> principalScopeSettings) {
            $.principalScopeSettings = principalScopeSettings;
            return this;
        }

        /**
         * @param principalScopeSettings User scope specific settings
         * 
         * @return builder
         * 
         */
        public Builder principalScopeSettings(CampaignPrincipalScopeSettingsArgs principalScopeSettings) {
            return principalScopeSettings(Output.of(principalScopeSettings));
        }

        /**
         * @param remediationSettings Specify the action to be taken after a reviewer makes a decision to APPROVE or REVOKE the access, or if the campaign was CLOSED and there was no response from the reviewer.
         * 
         * @return builder
         * 
         */
        public Builder remediationSettings(@Nullable Output<CampaignRemediationSettingsArgs> remediationSettings) {
            $.remediationSettings = remediationSettings;
            return this;
        }

        /**
         * @param remediationSettings Specify the action to be taken after a reviewer makes a decision to APPROVE or REVOKE the access, or if the campaign was CLOSED and there was no response from the reviewer.
         * 
         * @return builder
         * 
         */
        public Builder remediationSettings(CampaignRemediationSettingsArgs remediationSettings) {
            return remediationSettings(Output.of(remediationSettings));
        }

        /**
         * @param resourceSettings Resource specific properties.
         * 
         * @return builder
         * 
         */
        public Builder resourceSettings(@Nullable Output<CampaignResourceSettingsArgs> resourceSettings) {
            $.resourceSettings = resourceSettings;
            return this;
        }

        /**
         * @param resourceSettings Resource specific properties.
         * 
         * @return builder
         * 
         */
        public Builder resourceSettings(CampaignResourceSettingsArgs resourceSettings) {
            return resourceSettings(Output.of(resourceSettings));
        }

        /**
         * @param reviewerSettings Identifies the kind of reviewer for Access Certification.
         * 
         * @return builder
         * 
         */
        public Builder reviewerSettings(@Nullable Output<CampaignReviewerSettingsArgs> reviewerSettings) {
            $.reviewerSettings = reviewerSettings;
            return this;
        }

        /**
         * @param reviewerSettings Identifies the kind of reviewer for Access Certification.
         * 
         * @return builder
         * 
         */
        public Builder reviewerSettings(CampaignReviewerSettingsArgs reviewerSettings) {
            return reviewerSettings(Output.of(reviewerSettings));
        }

        /**
         * @param scheduleSettings Scheduler specific settings.
         * 
         * @return builder
         * 
         */
        public Builder scheduleSettings(@Nullable Output<CampaignScheduleSettingsArgs> scheduleSettings) {
            $.scheduleSettings = scheduleSettings;
            return this;
        }

        /**
         * @param scheduleSettings Scheduler specific settings.
         * 
         * @return builder
         * 
         */
        public Builder scheduleSettings(CampaignScheduleSettingsArgs scheduleSettings) {
            return scheduleSettings(Output.of(scheduleSettings));
        }

        /**
         * @param skipRemediation If true, skip remediation when ending the campaign (only applicable if remediationSetting.noResponse=DENY).
         * 
         * @return builder
         * 
         */
        public Builder skipRemediation(@Nullable Output<Boolean> skipRemediation) {
            $.skipRemediation = skipRemediation;
            return this;
        }

        /**
         * @param skipRemediation If true, skip remediation when ending the campaign (only applicable if remediationSetting.noResponse=DENY).
         * 
         * @return builder
         * 
         */
        public Builder skipRemediation(Boolean skipRemediation) {
            return skipRemediation(Output.of(skipRemediation));
        }

        public CampaignState build() {
            return $;
        }
    }

}

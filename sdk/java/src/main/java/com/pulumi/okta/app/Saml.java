// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.app;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.app.SamlArgs;
import com.pulumi.okta.app.inputs.SamlState;
import com.pulumi.okta.app.outputs.SamlAttributeStatement;
import com.pulumi.okta.app.outputs.SamlKey;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource allows you to create and configure a SAML Application.
 * 
 * &gt; During an apply if there is change in `status` the app will first be
 * activated or deactivated in accordance with the `status` change. Then, all
 * other arguments that changed will be applied.
 * 
 * &gt; If you receive the error `You do not have permission to access the feature
 * you are requesting` contact support and
 * request feature flag `ADVANCED_SSO` be applied to your org.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.app.Saml;
 * import com.pulumi.okta.app.SamlArgs;
 * import com.pulumi.okta.app.inputs.SamlAttributeStatementArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Saml(&#34;example&#34;, SamlArgs.builder()        
 *             .label(&#34;example&#34;)
 *             .ssoUrl(&#34;https://example.com&#34;)
 *             .recipient(&#34;https://example.com&#34;)
 *             .destination(&#34;https://example.com&#34;)
 *             .audience(&#34;https://example.com/audience&#34;)
 *             .subjectNameIdTemplate(&#34;${user.userName}&#34;)
 *             .subjectNameIdFormat(&#34;urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress&#34;)
 *             .responseSigned(true)
 *             .signatureAlgorithm(&#34;RSA_SHA256&#34;)
 *             .digestAlgorithm(&#34;SHA256&#34;)
 *             .honorForceAuthn(false)
 *             .authnContextClassRef(&#34;urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport&#34;)
 *             .attributeStatements(SamlAttributeStatementArgs.builder()
 *                 .type(&#34;GROUP&#34;)
 *                 .name(&#34;groups&#34;)
 *                 .filterType(&#34;REGEX&#34;)
 *                 .filterValue(&#34;.*&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### With inline hook
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.inline.Hook;
 * import com.pulumi.okta.inline.HookArgs;
 * import com.pulumi.okta.app.Saml;
 * import com.pulumi.okta.app.SamlArgs;
 * import com.pulumi.okta.app.inputs.SamlAttributeStatementArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new Hook(&#34;test&#34;, HookArgs.builder()        
 *             .name(&#34;testAcc_replace_with_uuid&#34;)
 *             .status(&#34;ACTIVE&#34;)
 *             .type(&#34;com.okta.saml.tokens.transform&#34;)
 *             .version(&#34;1.0.2&#34;)
 *             .channel(Map.ofEntries(
 *                 Map.entry(&#34;type&#34;, &#34;HTTP&#34;),
 *                 Map.entry(&#34;version&#34;, &#34;1.0.0&#34;),
 *                 Map.entry(&#34;uri&#34;, &#34;https://example.com/test1&#34;),
 *                 Map.entry(&#34;method&#34;, &#34;POST&#34;)
 *             ))
 *             .auth(Map.ofEntries(
 *                 Map.entry(&#34;key&#34;, &#34;Authorization&#34;),
 *                 Map.entry(&#34;type&#34;, &#34;HEADER&#34;),
 *                 Map.entry(&#34;value&#34;, &#34;secret&#34;)
 *             ))
 *             .build());
 * 
 *         var testSaml = new Saml(&#34;testSaml&#34;, SamlArgs.builder()        
 *             .label(&#34;testAcc_replace_with_uuid&#34;)
 *             .ssoUrl(&#34;https://google.com&#34;)
 *             .recipient(&#34;https://here.com&#34;)
 *             .destination(&#34;https://its-about-the-journey.com&#34;)
 *             .audience(&#34;https://audience.com&#34;)
 *             .subjectNameIdTemplate(&#34;${user.userName}&#34;)
 *             .subjectNameIdFormat(&#34;urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress&#34;)
 *             .responseSigned(true)
 *             .signatureAlgorithm(&#34;RSA_SHA256&#34;)
 *             .digestAlgorithm(&#34;SHA256&#34;)
 *             .honorForceAuthn(false)
 *             .authnContextClassRef(&#34;urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport&#34;)
 *             .inlineHookId(test.id())
 *             .attributeStatements(SamlAttributeStatementArgs.builder()
 *                 .type(&#34;GROUP&#34;)
 *                 .name(&#34;groups&#34;)
 *                 .filterType(&#34;REGEX&#34;)
 *                 .filterValue(&#34;.*&#34;)
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(test)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Pre-configured app with SAML 1.1 sign-on mode
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.app.Saml;
 * import com.pulumi.okta.app.SamlArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new Saml(&#34;test&#34;, SamlArgs.builder()        
 *             .appSettingsJson(&#34;&#34;&#34;
 * {
 *     &#34;groupFilter&#34;: &#34;app1.*&#34;,
 *     &#34;siteURL&#34;: &#34;https://www.okta.com&#34;
 * }
 *             &#34;&#34;&#34;)
 *             .label(&#34;SharePoint (On-Premise)&#34;)
 *             .preconfiguredApp(&#34;sharepoint_onpremise&#34;)
 *             .samlVersion(&#34;1.1&#34;)
 *             .status(&#34;ACTIVE&#34;)
 *             .userNameTemplate(&#34;${source.login}&#34;)
 *             .userNameTemplateType(&#34;BUILT_IN&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Pre-configured app with SAML 1.1 sign-on mode, `app_settings_json` and `app_links_json`
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.app.Saml;
 * import com.pulumi.okta.app.SamlArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var office365 = new Saml(&#34;office365&#34;, SamlArgs.builder()        
 *             .preconfiguredApp(&#34;office365&#34;)
 *             .label(&#34;Microsoft Office 365&#34;)
 *             .status(&#34;ACTIVE&#34;)
 *             .samlVersion(&#34;1.1&#34;)
 *             .appSettingsJson(&#34;&#34;&#34;
 *     {
 *        &#34;wsFedConfigureType&#34;: &#34;AUTO&#34;,
 *        &#34;windowsTransportEnabled&#34;: false,
 *        &#34;domain&#34;: &#34;okta.com&#34;,
 *        &#34;msftTenant&#34;: &#34;okta&#34;,
 *        &#34;domains&#34;: [],
 *        &#34;requireAdminConsent&#34;: false
 *     }
 *             &#34;&#34;&#34;)
 *             .appLinksJson(&#34;&#34;&#34;
 *   {
 *       &#34;calendar&#34;: false,
 *       &#34;crm&#34;: false,
 *       &#34;delve&#34;: false,
 *       &#34;excel&#34;: false,
 *       &#34;forms&#34;: false,
 *       &#34;mail&#34;: false,
 *       &#34;newsfeed&#34;: false,
 *       &#34;onedrive&#34;: false,
 *       &#34;people&#34;: false,
 *       &#34;planner&#34;: false,
 *       &#34;powerbi&#34;: false,
 *       &#34;powerpoint&#34;: false,
 *       &#34;sites&#34;: false,
 *       &#34;sway&#34;: false,
 *       &#34;tasks&#34;: false,
 *       &#34;teams&#34;: false,
 *       &#34;video&#34;: false,
 *       &#34;word&#34;: false,
 *       &#34;yammer&#34;: false,
 *       &#34;login&#34;: true
 *   }
 *             &#34;&#34;&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * A SAML App can be imported via the Okta ID.
 * 
 * ```sh
 * $ pulumi import okta:app/saml:Saml example &amp;#60;app id&amp;#62;
 * ```
 * 
 */
@ResourceType(type="okta:app/saml:Saml")
public class Saml extends com.pulumi.resources.CustomResource {
    /**
     * Custom error page URL.
     * 
     */
    @Export(name="accessibilityErrorRedirectUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accessibilityErrorRedirectUrl;

    /**
     * @return Custom error page URL.
     * 
     */
    public Output<Optional<String>> accessibilityErrorRedirectUrl() {
        return Codegen.optional(this.accessibilityErrorRedirectUrl);
    }
    /**
     * Custom login page for this application.
     * 
     */
    @Export(name="accessibilityLoginRedirectUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accessibilityLoginRedirectUrl;

    /**
     * @return Custom login page for this application.
     * 
     */
    public Output<Optional<String>> accessibilityLoginRedirectUrl() {
        return Codegen.optional(this.accessibilityLoginRedirectUrl);
    }
    /**
     * Enable self-service. Default is: `false`.
     * 
     */
    @Export(name="accessibilitySelfService", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accessibilitySelfService;

    /**
     * @return Enable self-service. Default is: `false`.
     * 
     */
    public Output<Optional<Boolean>> accessibilitySelfService() {
        return Codegen.optional(this.accessibilitySelfService);
    }
    /**
     * An array of ACS endpoints. You can configure a maximum of 100 endpoints.
     * 
     */
    @Export(name="acsEndpoints", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> acsEndpoints;

    /**
     * @return An array of ACS endpoints. You can configure a maximum of 100 endpoints.
     * 
     */
    public Output<Optional<List<String>>> acsEndpoints() {
        return Codegen.optional(this.acsEndpoints);
    }
    /**
     * Application notes for admins.
     * 
     */
    @Export(name="adminNote", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> adminNote;

    /**
     * @return Application notes for admins.
     * 
     */
    public Output<Optional<String>> adminNote() {
        return Codegen.optional(this.adminNote);
    }
    /**
     * Displays specific appLinks for the app. The value for each application link should be boolean.
     * 
     */
    @Export(name="appLinksJson", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> appLinksJson;

    /**
     * @return Displays specific appLinks for the app. The value for each application link should be boolean.
     * 
     */
    public Output<Optional<String>> appLinksJson() {
        return Codegen.optional(this.appLinksJson);
    }
    /**
     * Application settings in JSON format.
     * 
     */
    @Export(name="appSettingsJson", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> appSettingsJson;

    /**
     * @return Application settings in JSON format.
     * 
     */
    public Output<Optional<String>> appSettingsJson() {
        return Codegen.optional(this.appSettingsJson);
    }
    /**
     * Determines whether the SAML assertion is digitally signed.
     * 
     */
    @Export(name="assertionSigned", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> assertionSigned;

    /**
     * @return Determines whether the SAML assertion is digitally signed.
     * 
     */
    public Output<Optional<Boolean>> assertionSigned() {
        return Codegen.optional(this.assertionSigned);
    }
    /**
     * List of SAML Attribute statements.
     * 
     */
    @Export(name="attributeStatements", refs={List.class,SamlAttributeStatement.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SamlAttributeStatement>> attributeStatements;

    /**
     * @return List of SAML Attribute statements.
     * 
     */
    public Output<Optional<List<SamlAttributeStatement>>> attributeStatements() {
        return Codegen.optional(this.attributeStatements);
    }
    /**
     * Audience restriction.
     * 
     */
    @Export(name="audience", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> audience;

    /**
     * @return Audience restriction.
     * 
     */
    public Output<Optional<String>> audience() {
        return Codegen.optional(this.audience);
    }
    /**
     * The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.
     * 
     */
    @Export(name="authenticationPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> authenticationPolicy;

    /**
     * @return The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.
     * 
     */
    public Output<Optional<String>> authenticationPolicy() {
        return Codegen.optional(this.authenticationPolicy);
    }
    /**
     * Identifies the SAML authentication context class for the assertion’s authentication statement.
     * 
     */
    @Export(name="authnContextClassRef", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> authnContextClassRef;

    /**
     * @return Identifies the SAML authentication context class for the assertion’s authentication statement.
     * 
     */
    public Output<Optional<String>> authnContextClassRef() {
        return Codegen.optional(this.authnContextClassRef);
    }
    /**
     * Display auto submit toolbar. Default is: `false`
     * 
     */
    @Export(name="autoSubmitToolbar", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoSubmitToolbar;

    /**
     * @return Display auto submit toolbar. Default is: `false`
     * 
     */
    public Output<Optional<Boolean>> autoSubmitToolbar() {
        return Codegen.optional(this.autoSubmitToolbar);
    }
    /**
     * The raw signing certificate.
     * 
     */
    @Export(name="certificate", refs={String.class}, tree="[0]")
    private Output<String> certificate;

    /**
     * @return The raw signing certificate.
     * 
     */
    public Output<String> certificate() {
        return this.certificate;
    }
    /**
     * Identifies a specific application resource in an IDP initiated SSO scenario.
     * 
     */
    @Export(name="defaultRelayState", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> defaultRelayState;

    /**
     * @return Identifies a specific application resource in an IDP initiated SSO scenario.
     * 
     */
    public Output<Optional<String>> defaultRelayState() {
        return Codegen.optional(this.defaultRelayState);
    }
    /**
     * Identifies the location where the SAML response is intended to be sent inside the SAML assertion.
     * 
     */
    @Export(name="destination", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> destination;

    /**
     * @return Identifies the location where the SAML response is intended to be sent inside the SAML assertion.
     * 
     */
    public Output<Optional<String>> destination() {
        return Codegen.optional(this.destination);
    }
    /**
     * Determines the digest algorithm used to digitally sign the SAML assertion and response.
     * 
     */
    @Export(name="digestAlgorithm", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> digestAlgorithm;

    /**
     * @return Determines the digest algorithm used to digitally sign the SAML assertion and response.
     * 
     */
    public Output<Optional<String>> digestAlgorithm() {
        return Codegen.optional(this.digestAlgorithm);
    }
    /**
     * Url that can be used to embed this application into another portal.
     * 
     */
    @Export(name="embedUrl", refs={String.class}, tree="[0]")
    private Output<String> embedUrl;

    /**
     * @return Url that can be used to embed this application into another portal.
     * 
     */
    public Output<String> embedUrl() {
        return this.embedUrl;
    }
    /**
     * Application notes for end users.
     * 
     */
    @Export(name="enduserNote", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> enduserNote;

    /**
     * @return Application notes for end users.
     * 
     */
    public Output<Optional<String>> enduserNote() {
        return Codegen.optional(this.enduserNote);
    }
    /**
     * Entity ID, the ID portion of the `entity_url`.
     * 
     */
    @Export(name="entityKey", refs={String.class}, tree="[0]")
    private Output<String> entityKey;

    /**
     * @return Entity ID, the ID portion of the `entity_url`.
     * 
     */
    public Output<String> entityKey() {
        return this.entityKey;
    }
    /**
     * Entity URL for instance [http://www.okta.com/exk1fcia6d6EMsf331d8](http://www.okta.com/exk1fcia6d6EMsf331d8).
     * 
     */
    @Export(name="entityUrl", refs={String.class}, tree="[0]")
    private Output<String> entityUrl;

    /**
     * @return Entity URL for instance [http://www.okta.com/exk1fcia6d6EMsf331d8](http://www.okta.com/exk1fcia6d6EMsf331d8).
     * 
     */
    public Output<String> entityUrl() {
        return this.entityUrl;
    }
    /**
     * features enabled. Notice: you can&#39;t currently configure provisioning features via the API.
     * 
     */
    @Export(name="features", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> features;

    /**
     * @return features enabled. Notice: you can&#39;t currently configure provisioning features via the API.
     * 
     */
    public Output<List<String>> features() {
        return this.features;
    }
    /**
     * Do not display application icon on mobile app. Default is: `false`
     * 
     */
    @Export(name="hideIos", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> hideIos;

    /**
     * @return Do not display application icon on mobile app. Default is: `false`
     * 
     */
    public Output<Optional<Boolean>> hideIos() {
        return Codegen.optional(this.hideIos);
    }
    /**
     * Do not display application icon to users. Default is: `false`
     * 
     */
    @Export(name="hideWeb", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> hideWeb;

    /**
     * @return Do not display application icon to users. Default is: `false`
     * 
     */
    public Output<Optional<Boolean>> hideWeb() {
        return Codegen.optional(this.hideWeb);
    }
    /**
     * Prompt user to re-authenticate if SP asks for it. Default is: `false`
     * 
     */
    @Export(name="honorForceAuthn", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> honorForceAuthn;

    /**
     * @return Prompt user to re-authenticate if SP asks for it. Default is: `false`
     * 
     */
    public Output<Optional<Boolean>> honorForceAuthn() {
        return Codegen.optional(this.honorForceAuthn);
    }
    /**
     * `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post` location from the SAML metadata.
     * 
     */
    @Export(name="httpPostBinding", refs={String.class}, tree="[0]")
    private Output<String> httpPostBinding;

    /**
     * @return `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post` location from the SAML metadata.
     * 
     */
    public Output<String> httpPostBinding() {
        return this.httpPostBinding;
    }
    /**
     * `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect` location from the SAML metadata.
     * 
     */
    @Export(name="httpRedirectBinding", refs={String.class}, tree="[0]")
    private Output<String> httpRedirectBinding;

    /**
     * @return `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect` location from the SAML metadata.
     * 
     */
    public Output<String> httpRedirectBinding() {
        return this.httpRedirectBinding;
    }
    /**
     * SAML issuer ID.
     * 
     */
    @Export(name="idpIssuer", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> idpIssuer;

    /**
     * @return SAML issuer ID.
     * 
     */
    public Output<Optional<String>> idpIssuer() {
        return Codegen.optional(this.idpIssuer);
    }
    /**
     * _Early Access Property_. Enables [Federation Broker Mode](https://help.okta.com/en/prod/Content/Topics/Apps/apps-fbm-enable.htm).
     * 
     */
    @Export(name="implicitAssignment", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> implicitAssignment;

    /**
     * @return _Early Access Property_. Enables [Federation Broker Mode](https://help.okta.com/en/prod/Content/Topics/Apps/apps-fbm-enable.htm).
     * 
     */
    public Output<Optional<Boolean>> implicitAssignment() {
        return Codegen.optional(this.implicitAssignment);
    }
    /**
     * Saml Inline Hook associated with the application.
     * 
     */
    @Export(name="inlineHookId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> inlineHookId;

    /**
     * @return Saml Inline Hook associated with the application.
     * 
     */
    public Output<Optional<String>> inlineHookId() {
        return Codegen.optional(this.inlineHookId);
    }
    /**
     * Certificate key ID.
     * 
     */
    @Export(name="keyId", refs={String.class}, tree="[0]")
    private Output<String> keyId;

    /**
     * @return Certificate key ID.
     * 
     */
    public Output<String> keyId() {
        return this.keyId;
    }
    /**
     * Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with `key_years_valid`.
     * 
     */
    @Export(name="keyName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keyName;

    /**
     * @return Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with `key_years_valid`.
     * 
     */
    public Output<Optional<String>> keyName() {
        return Codegen.optional(this.keyName);
    }
    /**
     * Number of years the certificate is valid (2 - 10 years).
     * 
     */
    @Export(name="keyYearsValid", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> keyYearsValid;

    /**
     * @return Number of years the certificate is valid (2 - 10 years).
     * 
     */
    public Output<Optional<Integer>> keyYearsValid() {
        return Codegen.optional(this.keyYearsValid);
    }
    /**
     * An array of all key credentials for the application. Format of each entry is as follows:
     * 
     */
    @Export(name="keys", refs={List.class,SamlKey.class}, tree="[0,1]")
    private Output<List<SamlKey>> keys;

    /**
     * @return An array of all key credentials for the application. Format of each entry is as follows:
     * 
     */
    public Output<List<SamlKey>> keys() {
        return this.keys;
    }
    /**
     * label of application.
     * 
     */
    @Export(name="label", refs={String.class}, tree="[0]")
    private Output<String> label;

    /**
     * @return label of application.
     * 
     */
    public Output<String> label() {
        return this.label;
    }
    /**
     * Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     * 
     */
    @Export(name="logo", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> logo;

    /**
     * @return Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     * 
     */
    public Output<Optional<String>> logo() {
        return Codegen.optional(this.logo);
    }
    /**
     * Direct link of application logo.
     * 
     */
    @Export(name="logoUrl", refs={String.class}, tree="[0]")
    private Output<String> logoUrl;

    /**
     * @return Direct link of application logo.
     * 
     */
    public Output<String> logoUrl() {
        return this.logoUrl;
    }
    /**
     * The raw SAML metadata in XML.
     * 
     */
    @Export(name="metadata", refs={String.class}, tree="[0]")
    private Output<String> metadata;

    /**
     * @return The raw SAML metadata in XML.
     * 
     */
    public Output<String> metadata() {
        return this.metadata;
    }
    /**
     * SAML xml metadata URL.
     * 
     */
    @Export(name="metadataUrl", refs={String.class}, tree="[0]")
    private Output<String> metadataUrl;

    /**
     * @return SAML xml metadata URL.
     * 
     */
    public Output<String> metadataUrl() {
        return this.metadataUrl;
    }
    /**
     * Name assigned to the application by Okta.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name assigned to the application by Okta.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * name of application from the Okta Integration Network, if not included a custom app will be created.  If not provided the following arguments are required:
     * 
     */
    @Export(name="preconfiguredApp", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> preconfiguredApp;

    /**
     * @return name of application from the Okta Integration Network, if not included a custom app will be created.  If not provided the following arguments are required:
     * 
     */
    public Output<Optional<String>> preconfiguredApp() {
        return Codegen.optional(this.preconfiguredApp);
    }
    /**
     * The location where the app may present the SAML assertion.
     * 
     */
    @Export(name="recipient", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> recipient;

    /**
     * @return The location where the app may present the SAML assertion.
     * 
     */
    public Output<Optional<String>> recipient() {
        return Codegen.optional(this.recipient);
    }
    /**
     * Denotes whether the request is compressed or not.
     * 
     */
    @Export(name="requestCompressed", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> requestCompressed;

    /**
     * @return Denotes whether the request is compressed or not.
     * 
     */
    public Output<Optional<Boolean>> requestCompressed() {
        return Codegen.optional(this.requestCompressed);
    }
    /**
     * Determines whether the SAML auth response message is digitally signed.
     * 
     */
    @Export(name="responseSigned", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> responseSigned;

    /**
     * @return Determines whether the SAML auth response message is digitally signed.
     * 
     */
    public Output<Optional<Boolean>> responseSigned() {
        return Codegen.optional(this.responseSigned);
    }
    /**
     * SAML Signed Request enabled
     * 
     */
    @Export(name="samlSignedRequestEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> samlSignedRequestEnabled;

    /**
     * @return SAML Signed Request enabled
     * 
     */
    public Output<Optional<Boolean>> samlSignedRequestEnabled() {
        return Codegen.optional(this.samlSignedRequestEnabled);
    }
    /**
     * SAML version for the app&#39;s sign-on mode. Valid values are: `&#34;2.0&#34;` or `&#34;1.1&#34;`. Default is `&#34;2.0&#34;`.
     * 
     */
    @Export(name="samlVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> samlVersion;

    /**
     * @return SAML version for the app&#39;s sign-on mode. Valid values are: `&#34;2.0&#34;` or `&#34;1.1&#34;`. Default is `&#34;2.0&#34;`.
     * 
     */
    public Output<Optional<String>> samlVersion() {
        return Codegen.optional(this.samlVersion);
    }
    /**
     * Sign-on mode of application.
     * 
     */
    @Export(name="signOnMode", refs={String.class}, tree="[0]")
    private Output<String> signOnMode;

    /**
     * @return Sign-on mode of application.
     * 
     */
    public Output<String> signOnMode() {
        return this.signOnMode;
    }
    /**
     * Signature algorithm used to digitally sign the assertion and response.
     * 
     */
    @Export(name="signatureAlgorithm", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> signatureAlgorithm;

    /**
     * @return Signature algorithm used to digitally sign the assertion and response.
     * 
     */
    public Output<Optional<String>> signatureAlgorithm() {
        return Codegen.optional(this.signatureAlgorithm);
    }
    /**
     * x509 encoded certificate that the Service Provider uses to sign Single Logout requests.  Note: should be provided without `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`, see [official documentation](https://developer.okta.com/docs/reference/api/apps/#service-provider-certificate).
     * 
     */
    @Export(name="singleLogoutCertificate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> singleLogoutCertificate;

    /**
     * @return x509 encoded certificate that the Service Provider uses to sign Single Logout requests.  Note: should be provided without `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`, see [official documentation](https://developer.okta.com/docs/reference/api/apps/#service-provider-certificate).
     * 
     */
    public Output<Optional<String>> singleLogoutCertificate() {
        return Codegen.optional(this.singleLogoutCertificate);
    }
    /**
     * The issuer of the Service Provider that generates the Single Logout request.
     * 
     */
    @Export(name="singleLogoutIssuer", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> singleLogoutIssuer;

    /**
     * @return The issuer of the Service Provider that generates the Single Logout request.
     * 
     */
    public Output<Optional<String>> singleLogoutIssuer() {
        return Codegen.optional(this.singleLogoutIssuer);
    }
    /**
     * The location where the logout response is sent.
     * 
     */
    @Export(name="singleLogoutUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> singleLogoutUrl;

    /**
     * @return The location where the logout response is sent.
     * 
     */
    public Output<Optional<String>> singleLogoutUrl() {
        return Codegen.optional(this.singleLogoutUrl);
    }
    /**
     * SAML service provider issuer.
     * 
     */
    @Export(name="spIssuer", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> spIssuer;

    /**
     * @return SAML service provider issuer.
     * 
     */
    public Output<Optional<String>> spIssuer() {
        return Codegen.optional(this.spIssuer);
    }
    /**
     * Single Sign-on Url.
     * 
     */
    @Export(name="ssoUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ssoUrl;

    /**
     * @return Single Sign-on Url.
     * 
     */
    public Output<Optional<String>> ssoUrl() {
        return Codegen.optional(this.ssoUrl);
    }
    /**
     * status of application.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> status;

    /**
     * @return status of application.
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * Identifies the SAML processing rules.
     * 
     */
    @Export(name="subjectNameIdFormat", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> subjectNameIdFormat;

    /**
     * @return Identifies the SAML processing rules.
     * 
     */
    public Output<Optional<String>> subjectNameIdFormat() {
        return Codegen.optional(this.subjectNameIdFormat);
    }
    /**
     * Template for app user&#39;s username when a user is assigned to the app.
     * 
     */
    @Export(name="subjectNameIdTemplate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> subjectNameIdTemplate;

    /**
     * @return Template for app user&#39;s username when a user is assigned to the app.
     * 
     */
    public Output<Optional<String>> subjectNameIdTemplate() {
        return Codegen.optional(this.subjectNameIdTemplate);
    }
    /**
     * Username template. Default is: `&#34;${source.login}&#34;`
     * 
     */
    @Export(name="userNameTemplate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userNameTemplate;

    /**
     * @return Username template. Default is: `&#34;${source.login}&#34;`
     * 
     */
    public Output<Optional<String>> userNameTemplate() {
        return Codegen.optional(this.userNameTemplate);
    }
    /**
     * Push username on update. Valid values: `&#34;PUSH&#34;` and `&#34;DONT_PUSH&#34;`.
     * 
     */
    @Export(name="userNameTemplatePushStatus", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userNameTemplatePushStatus;

    /**
     * @return Push username on update. Valid values: `&#34;PUSH&#34;` and `&#34;DONT_PUSH&#34;`.
     * 
     */
    public Output<Optional<String>> userNameTemplatePushStatus() {
        return Codegen.optional(this.userNameTemplatePushStatus);
    }
    /**
     * Username template suffix.
     * 
     */
    @Export(name="userNameTemplateSuffix", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userNameTemplateSuffix;

    /**
     * @return Username template suffix.
     * 
     */
    public Output<Optional<String>> userNameTemplateSuffix() {
        return Codegen.optional(this.userNameTemplateSuffix);
    }
    /**
     * Username template type. Default is: `&#34;BUILT_IN&#34;`.
     * 
     */
    @Export(name="userNameTemplateType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userNameTemplateType;

    /**
     * @return Username template type. Default is: `&#34;BUILT_IN&#34;`.
     * 
     */
    public Output<Optional<String>> userNameTemplateType() {
        return Codegen.optional(this.userNameTemplateType);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Saml(String name) {
        this(name, SamlArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Saml(String name, SamlArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Saml(String name, SamlArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:app/saml:Saml", name, args == null ? SamlArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Saml(String name, Output<String> id, @Nullable SamlState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:app/saml:Saml", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Saml get(String name, Output<String> id, @Nullable SamlState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Saml(name, id, state, options);
    }
}

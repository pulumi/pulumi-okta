// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.RequestConditionArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.RequestConditionState;
import com.pulumi.okta.outputs.RequestConditionAccessDurationSettings;
import com.pulumi.okta.outputs.RequestConditionAccessScopeSettings;
import com.pulumi.okta.outputs.RequestConditionRequesterSettings;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages request conditions. This resource allows you to create and configure an Okta [request-condition](https://developer.okta.com/docs/api/iga/openapi/governance.requests.admin.v2/tag/Request-Conditions/#tag/Request-Conditions).
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.RequestCondition;
 * import com.pulumi.okta.RequestConditionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new RequestCondition("example", RequestConditionArgs.builder()
 *             .resourceId("<resource_id>")
 *             .approvalSequenceId("<approval_sequence_id>")
 *             .name("<name>")
 *             .accessScopeSettings(RequestConditionAccessScopeSettingsArgs.builder()
 *                 .type("RESOURCE_DEFAULT")
 *                 .build())
 *             .requesterSettings(RequestConditionRequesterSettingsArgs.builder()
 *                 .type("EVERYONE")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:index/requestCondition:RequestCondition example &lt;resource_id&gt;/&lt;request_condition_id&gt;
 * ```
 * 
 */
@ResourceType(type="okta:index/requestCondition:RequestCondition")
public class RequestCondition extends com.pulumi.resources.CustomResource {
    /**
     * The access duration settings for the request condition
     * 
     */
    @Export(name="accessDurationSettings", refs={RequestConditionAccessDurationSettings.class}, tree="[0]")
    private Output</* @Nullable */ RequestConditionAccessDurationSettings> accessDurationSettings;

    /**
     * @return The access duration settings for the request condition
     * 
     */
    public Output<Optional<RequestConditionAccessDurationSettings>> accessDurationSettings() {
        return Codegen.optional(this.accessDurationSettings);
    }
    @Export(name="accessScopeSettings", refs={RequestConditionAccessScopeSettings.class}, tree="[0]")
    private Output</* @Nullable */ RequestConditionAccessScopeSettings> accessScopeSettings;

    public Output<Optional<RequestConditionAccessScopeSettings>> accessScopeSettings() {
        return Codegen.optional(this.accessScopeSettings);
    }
    /**
     * The ID of the approval sequence.
     * 
     */
    @Export(name="approvalSequenceId", refs={String.class}, tree="[0]")
    private Output<String> approvalSequenceId;

    /**
     * @return The ID of the approval sequence.
     * 
     */
    public Output<String> approvalSequenceId() {
        return this.approvalSequenceId;
    }
    /**
     * The date and time when the request condition was created.
     * 
     */
    @Export(name="created", refs={String.class}, tree="[0]")
    private Output<String> created;

    /**
     * @return The date and time when the request condition was created.
     * 
     */
    public Output<String> created() {
        return this.created;
    }
    /**
     * The id of the user who created the request condition.
     * 
     */
    @Export(name="createdBy", refs={String.class}, tree="[0]")
    private Output<String> createdBy;

    /**
     * @return The id of the user who created the request condition.
     * 
     */
    public Output<String> createdBy() {
        return this.createdBy;
    }
    /**
     * The description of the request condition.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the request condition.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The date and time when the request condition was last updated.
     * 
     */
    @Export(name="lastUpdated", refs={String.class}, tree="[0]")
    private Output<String> lastUpdated;

    /**
     * @return The date and time when the request condition was last updated.
     * 
     */
    public Output<String> lastUpdated() {
        return this.lastUpdated;
    }
    /**
     * The id of the user who last updated the request condition.
     * 
     */
    @Export(name="lastUpdatedBy", refs={String.class}, tree="[0]")
    private Output<String> lastUpdatedBy;

    /**
     * @return The id of the user who last updated the request condition.
     * 
     */
    public Output<String> lastUpdatedBy() {
        return this.lastUpdatedBy;
    }
    /**
     * The name of the request condition.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the request condition.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The priority of the request condition. Lower numbers indicate higher priority.
     * 
     */
    @Export(name="priority", refs={Integer.class}, tree="[0]")
    private Output<Integer> priority;

    /**
     * @return The priority of the request condition. Lower numbers indicate higher priority.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }
    @Export(name="requesterSettings", refs={RequestConditionRequesterSettings.class}, tree="[0]")
    private Output</* @Nullable */ RequestConditionRequesterSettings> requesterSettings;

    public Output<Optional<RequestConditionRequesterSettings>> requesterSettings() {
        return Codegen.optional(this.requesterSettings);
    }
    /**
     * The id of the resource in Okta ID format.
     * 
     */
    @Export(name="resourceId", refs={String.class}, tree="[0]")
    private Output<String> resourceId;

    /**
     * @return The id of the resource in Okta ID format.
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }
    /**
     * Status indicates if this condition is active or not. Default status is INACTIVE. Enum: `ACTIVE`, `INACTIVE`, `DELETED`, `INVALID`.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Status indicates if this condition is active or not. Default status is INACTIVE. Enum: `ACTIVE`, `INACTIVE`, `DELETED`, `INVALID`.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RequestCondition(java.lang.String name) {
        this(name, RequestConditionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RequestCondition(java.lang.String name, RequestConditionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RequestCondition(java.lang.String name, RequestConditionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/requestCondition:RequestCondition", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RequestCondition(java.lang.String name, Output<java.lang.String> id, @Nullable RequestConditionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/requestCondition:RequestCondition", name, state, makeResourceOptions(options, id), false);
    }

    private static RequestConditionArgs makeArgs(RequestConditionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RequestConditionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RequestCondition get(java.lang.String name, Output<java.lang.String> id, @Nullable RequestConditionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RequestCondition(name, id, state, options);
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.trustedorigin;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.trustedorigin.OriginArgs;
import com.pulumi.okta.trustedorigin.inputs.OriginState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates a Trusted Origin.
 * 
 * This resource allows you to create and configure a Trusted Origin.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.trustedorigin.Origin;
 * import com.pulumi.okta.trustedorigin.OriginArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Origin(&#34;example&#34;, OriginArgs.builder()        
 *             .origin(&#34;https://example.com&#34;)
 *             .scopes(&#34;CORS&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * A Trusted Origin can be imported via the Okta ID.
 * 
 * ```sh
 * $ pulumi import okta:trustedorigin/origin:Origin example &amp;#60;trusted origin id&amp;#62;
 * ```
 * 
 */
@ResourceType(type="okta:trustedorigin/origin:Origin")
public class Origin extends com.pulumi.resources.CustomResource {
    /**
     * Whether the Trusted Origin is active or not - can only be issued post-creation. By default, it is &#39;true&#39;.
     * 
     */
    @Export(name="active", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> active;

    /**
     * @return Whether the Trusted Origin is active or not - can only be issued post-creation. By default, it is &#39;true&#39;.
     * 
     */
    public Output<Optional<Boolean>> active() {
        return Codegen.optional(this.active);
    }
    /**
     * Unique name for this trusted origin.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Unique name for this trusted origin.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Unique origin URL for this trusted origin.
     * 
     */
    @Export(name="origin", refs={String.class}, tree="[0]")
    private Output<String> origin;

    /**
     * @return Unique origin URL for this trusted origin.
     * 
     */
    public Output<String> origin() {
        return this.origin;
    }
    /**
     * Scopes of the Trusted Origin - can be `&#34;CORS&#34;` and/or `&#34;REDIRECT&#34;`.
     * 
     */
    @Export(name="scopes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> scopes;

    /**
     * @return Scopes of the Trusted Origin - can be `&#34;CORS&#34;` and/or `&#34;REDIRECT&#34;`.
     * 
     */
    public Output<List<String>> scopes() {
        return this.scopes;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Origin(String name) {
        this(name, OriginArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Origin(String name, OriginArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Origin(String name, OriginArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:trustedorigin/origin:Origin", name, args == null ? OriginArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Origin(String name, Output<String> id, @Nullable OriginState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:trustedorigin/origin:Origin", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Origin get(String name, Output<String> id, @Nullable OriginState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Origin(name, id, state, options);
    }
}

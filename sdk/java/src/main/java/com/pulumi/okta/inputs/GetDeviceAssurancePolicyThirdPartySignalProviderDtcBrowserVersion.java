// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion extends com.pulumi.resources.InvokeArgs {

    public static final GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion Empty = new GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion();

    @Import(name="minimum", required=true)
    private String minimum;

    public String minimum() {
        return this.minimum;
    }

    private GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion() {}

    private GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion(GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion $) {
        this.minimum = $.minimum;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion $;

        public Builder() {
            $ = new GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion();
        }

        public Builder(GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion defaults) {
            $ = new GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion(Objects.requireNonNull(defaults));
        }

        public Builder minimum(String minimum) {
            $.minimum = minimum;
            return this;
        }

        public GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion build() {
            if ($.minimum == null) {
                throw new MissingRequiredPropertyException("GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion", "minimum");
            }
            return $;
        }
    }

}

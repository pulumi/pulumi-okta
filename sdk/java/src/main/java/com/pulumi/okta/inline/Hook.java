// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inline;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inline.HookArgs;
import com.pulumi.okta.inline.inputs.HookState;
import com.pulumi.okta.inline.outputs.HookHeader;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates an inline hook.
 * 
 * This resource allows you to create and configure an inline hook.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.inline.Hook;
 * import com.pulumi.okta.inline.HookArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Hook("example", HookArgs.builder()        
 *             .name("example")
 *             .version("1.0.0")
 *             .type("com.okta.oauth2.tokens.transform")
 *             .channel(Map.ofEntries(
 *                 Map.entry("version", "1.0.0"),
 *                 Map.entry("uri", "https://example.com/test"),
 *                 Map.entry("method", "POST")
 *             ))
 *             .auth(Map.ofEntries(
 *                 Map.entry("key", "Authorization"),
 *                 Map.entry("type", "HEADER"),
 *                 Map.entry("value", "secret")
 *             ))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * An inline hook can be imported via the Okta ID.
 * 
 * ```sh
 * $ pulumi import okta:inline/hook:Hook example &amp;#60;hook id&amp;#62;
 * ```
 * 
 */
@ResourceType(type="okta:inline/hook:Hook")
public class Hook extends com.pulumi.resources.CustomResource {
    /**
     * Authentication required for inline hook request.
     * 
     */
    @Export(name="auth", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> auth;

    /**
     * @return Authentication required for inline hook request.
     * 
     */
    public Output<Optional<Map<String,String>>> auth() {
        return Codegen.optional(this.auth);
    }
    /**
     * Details of the endpoint the inline hook will hit.
     * 
     */
    @Export(name="channel", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> channel;

    /**
     * @return Details of the endpoint the inline hook will hit.
     * 
     */
    public Output<Map<String,String>> channel() {
        return this.channel;
    }
    /**
     * Map of headers to send along in inline hook request.
     * 
     */
    @Export(name="headers", refs={List.class,HookHeader.class}, tree="[0,1]")
    private Output</* @Nullable */ List<HookHeader>> headers;

    /**
     * @return Map of headers to send along in inline hook request.
     * 
     */
    public Output<Optional<List<HookHeader>>> headers() {
        return Codegen.optional(this.headers);
    }
    /**
     * The inline hook display name.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The inline hook display name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Default to `ACTIVE`
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> status;

    /**
     * @return Default to `ACTIVE`
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * The type of hook to create. [See here for supported types](https://developer.okta.com/docs/reference/api/inline-hooks/#supported-inline-hook-types).
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of hook to create. [See here for supported types](https://developer.okta.com/docs/reference/api/inline-hooks/#supported-inline-hook-types).
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The version of the hook. The currently-supported version is `&#34;1.0.0&#34;`.
     * 
     */
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output<String> version;

    /**
     * @return The version of the hook. The currently-supported version is `&#34;1.0.0&#34;`.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Hook(String name) {
        this(name, HookArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Hook(String name, HookArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Hook(String name, HookArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:inline/hook:Hook", name, args == null ? HookArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Hook(String name, Output<String> id, @Nullable HookState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:inline/hook:Hook", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Hook get(String name, Output<String> id, @Nullable HookState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Hook(name, id, state, options);
    }
}

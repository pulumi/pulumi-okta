// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAuthServerClaimsClaim {
    /**
     * @return Specifies whether to include Claims in the token.
     * 
     */
    private Boolean alwaysIncludeInToken;
    /**
     * @return Specifies whether the Claim is for an access token (`&#34;RESOURCE&#34;`) or ID token (`&#34;IDENTITY&#34;`).
     * 
     */
    private String claimType;
    /**
     * @return ID of the claim.
     * 
     */
    private String id;
    /**
     * @return Name of the claim.
     * 
     */
    private String name;
    /**
     * @return Specifies the scopes for this Claim.
     * 
     */
    private List<String> scopes;
    /**
     * @return Status of the claim.
     * 
     */
    private String status;
    /**
     * @return Value of the claim
     * 
     */
    private String value;
    /**
     * @return Specifies whether the Claim is an Okta EL expression (`&#34;EXPRESSION&#34;`), a set of groups (`&#34;GROUPS&#34;`), or a system claim (`&#34;SYSTEM&#34;`)
     * 
     */
    private String valueType;

    private GetAuthServerClaimsClaim() {}
    /**
     * @return Specifies whether to include Claims in the token.
     * 
     */
    public Boolean alwaysIncludeInToken() {
        return this.alwaysIncludeInToken;
    }
    /**
     * @return Specifies whether the Claim is for an access token (`&#34;RESOURCE&#34;`) or ID token (`&#34;IDENTITY&#34;`).
     * 
     */
    public String claimType() {
        return this.claimType;
    }
    /**
     * @return ID of the claim.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Name of the claim.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Specifies the scopes for this Claim.
     * 
     */
    public List<String> scopes() {
        return this.scopes;
    }
    /**
     * @return Status of the claim.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Value of the claim
     * 
     */
    public String value() {
        return this.value;
    }
    /**
     * @return Specifies whether the Claim is an Okta EL expression (`&#34;EXPRESSION&#34;`), a set of groups (`&#34;GROUPS&#34;`), or a system claim (`&#34;SYSTEM&#34;`)
     * 
     */
    public String valueType() {
        return this.valueType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuthServerClaimsClaim defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean alwaysIncludeInToken;
        private String claimType;
        private String id;
        private String name;
        private List<String> scopes;
        private String status;
        private String value;
        private String valueType;
        public Builder() {}
        public Builder(GetAuthServerClaimsClaim defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alwaysIncludeInToken = defaults.alwaysIncludeInToken;
    	      this.claimType = defaults.claimType;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.scopes = defaults.scopes;
    	      this.status = defaults.status;
    	      this.value = defaults.value;
    	      this.valueType = defaults.valueType;
        }

        @CustomType.Setter
        public Builder alwaysIncludeInToken(Boolean alwaysIncludeInToken) {
            this.alwaysIncludeInToken = Objects.requireNonNull(alwaysIncludeInToken);
            return this;
        }
        @CustomType.Setter
        public Builder claimType(String claimType) {
            this.claimType = Objects.requireNonNull(claimType);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder scopes(List<String> scopes) {
            this.scopes = Objects.requireNonNull(scopes);
            return this;
        }
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        @CustomType.Setter
        public Builder valueType(String valueType) {
            this.valueType = Objects.requireNonNull(valueType);
            return this;
        }
        public GetAuthServerClaimsClaim build() {
            final var o = new GetAuthServerClaimsClaim();
            o.alwaysIncludeInToken = alwaysIncludeInToken;
            o.claimType = claimType;
            o.id = id;
            o.name = name;
            o.scopes = scopes;
            o.status = status;
            o.value = value;
            o.valueType = valueType;
            return o;
        }
    }
}

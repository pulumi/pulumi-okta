// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.inputs.RequestConditionAccessDurationSettingsArgs;
import com.pulumi.okta.inputs.RequestConditionAccessScopeSettingsArgs;
import com.pulumi.okta.inputs.RequestConditionRequesterSettingsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RequestConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final RequestConditionArgs Empty = new RequestConditionArgs();

    /**
     * The access duration settings for the request condition
     * 
     */
    @Import(name="accessDurationSettings")
    private @Nullable Output<RequestConditionAccessDurationSettingsArgs> accessDurationSettings;

    /**
     * @return The access duration settings for the request condition
     * 
     */
    public Optional<Output<RequestConditionAccessDurationSettingsArgs>> accessDurationSettings() {
        return Optional.ofNullable(this.accessDurationSettings);
    }

    @Import(name="accessScopeSettings")
    private @Nullable Output<RequestConditionAccessScopeSettingsArgs> accessScopeSettings;

    public Optional<Output<RequestConditionAccessScopeSettingsArgs>> accessScopeSettings() {
        return Optional.ofNullable(this.accessScopeSettings);
    }

    /**
     * The ID of the approval sequence.
     * 
     */
    @Import(name="approvalSequenceId", required=true)
    private Output<String> approvalSequenceId;

    /**
     * @return The ID of the approval sequence.
     * 
     */
    public Output<String> approvalSequenceId() {
        return this.approvalSequenceId;
    }

    /**
     * The description of the request condition.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the request condition.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the request condition.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the request condition.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The priority of the request condition. Lower numbers indicate higher priority.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return The priority of the request condition. Lower numbers indicate higher priority.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    @Import(name="requesterSettings")
    private @Nullable Output<RequestConditionRequesterSettingsArgs> requesterSettings;

    public Optional<Output<RequestConditionRequesterSettingsArgs>> requesterSettings() {
        return Optional.ofNullable(this.requesterSettings);
    }

    /**
     * The id of the resource in Okta ID format.
     * 
     */
    @Import(name="resourceId", required=true)
    private Output<String> resourceId;

    /**
     * @return The id of the resource in Okta ID format.
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }

    private RequestConditionArgs() {}

    private RequestConditionArgs(RequestConditionArgs $) {
        this.accessDurationSettings = $.accessDurationSettings;
        this.accessScopeSettings = $.accessScopeSettings;
        this.approvalSequenceId = $.approvalSequenceId;
        this.description = $.description;
        this.name = $.name;
        this.priority = $.priority;
        this.requesterSettings = $.requesterSettings;
        this.resourceId = $.resourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RequestConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RequestConditionArgs $;

        public Builder() {
            $ = new RequestConditionArgs();
        }

        public Builder(RequestConditionArgs defaults) {
            $ = new RequestConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessDurationSettings The access duration settings for the request condition
         * 
         * @return builder
         * 
         */
        public Builder accessDurationSettings(@Nullable Output<RequestConditionAccessDurationSettingsArgs> accessDurationSettings) {
            $.accessDurationSettings = accessDurationSettings;
            return this;
        }

        /**
         * @param accessDurationSettings The access duration settings for the request condition
         * 
         * @return builder
         * 
         */
        public Builder accessDurationSettings(RequestConditionAccessDurationSettingsArgs accessDurationSettings) {
            return accessDurationSettings(Output.of(accessDurationSettings));
        }

        public Builder accessScopeSettings(@Nullable Output<RequestConditionAccessScopeSettingsArgs> accessScopeSettings) {
            $.accessScopeSettings = accessScopeSettings;
            return this;
        }

        public Builder accessScopeSettings(RequestConditionAccessScopeSettingsArgs accessScopeSettings) {
            return accessScopeSettings(Output.of(accessScopeSettings));
        }

        /**
         * @param approvalSequenceId The ID of the approval sequence.
         * 
         * @return builder
         * 
         */
        public Builder approvalSequenceId(Output<String> approvalSequenceId) {
            $.approvalSequenceId = approvalSequenceId;
            return this;
        }

        /**
         * @param approvalSequenceId The ID of the approval sequence.
         * 
         * @return builder
         * 
         */
        public Builder approvalSequenceId(String approvalSequenceId) {
            return approvalSequenceId(Output.of(approvalSequenceId));
        }

        /**
         * @param description The description of the request condition.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the request condition.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name of the request condition.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the request condition.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param priority The priority of the request condition. Lower numbers indicate higher priority.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The priority of the request condition. Lower numbers indicate higher priority.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        public Builder requesterSettings(@Nullable Output<RequestConditionRequesterSettingsArgs> requesterSettings) {
            $.requesterSettings = requesterSettings;
            return this;
        }

        public Builder requesterSettings(RequestConditionRequesterSettingsArgs requesterSettings) {
            return requesterSettings(Output.of(requesterSettings));
        }

        /**
         * @param resourceId The id of the resource in Okta ID format.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId The id of the resource in Okta ID format.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        public RequestConditionArgs build() {
            if ($.approvalSequenceId == null) {
                throw new MissingRequiredPropertyException("RequestConditionArgs", "approvalSequenceId");
            }
            if ($.resourceId == null) {
                throw new MissingRequiredPropertyException("RequestConditionArgs", "resourceId");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.app.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.okta.app.inputs.OAuthGroupsClaimArgs;
import com.pulumi.okta.app.inputs.OAuthJwkArgs;
import com.pulumi.okta.app.inputs.OAuthUserArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OAuthState extends com.pulumi.resources.ResourceArgs {

    public static final OAuthState Empty = new OAuthState();

    /**
     * Custom error page URL.
     * 
     */
    @Import(name="accessibilityErrorRedirectUrl")
    private @Nullable Output<String> accessibilityErrorRedirectUrl;

    /**
     * @return Custom error page URL.
     * 
     */
    public Optional<Output<String>> accessibilityErrorRedirectUrl() {
        return Optional.ofNullable(this.accessibilityErrorRedirectUrl);
    }

    /**
     * Custom login page for this application.
     * 
     */
    @Import(name="accessibilityLoginRedirectUrl")
    private @Nullable Output<String> accessibilityLoginRedirectUrl;

    /**
     * @return Custom login page for this application.
     * 
     */
    public Optional<Output<String>> accessibilityLoginRedirectUrl() {
        return Optional.ofNullable(this.accessibilityLoginRedirectUrl);
    }

    /**
     * Enable self-service. By default, it is `false`.
     * 
     */
    @Import(name="accessibilitySelfService")
    private @Nullable Output<Boolean> accessibilitySelfService;

    /**
     * @return Enable self-service. By default, it is `false`.
     * 
     */
    public Optional<Output<Boolean>> accessibilitySelfService() {
        return Optional.ofNullable(this.accessibilitySelfService);
    }

    /**
     * Application notes for admins.
     * 
     */
    @Import(name="adminNote")
    private @Nullable Output<String> adminNote;

    /**
     * @return Application notes for admins.
     * 
     */
    public Optional<Output<String>> adminNote() {
        return Optional.ofNullable(this.adminNote);
    }

    /**
     * Displays specific appLinks for the app. The value for each application link should be boolean.
     * 
     */
    @Import(name="appLinksJson")
    private @Nullable Output<String> appLinksJson;

    /**
     * @return Displays specific appLinks for the app. The value for each application link should be boolean.
     * 
     */
    public Optional<Output<String>> appLinksJson() {
        return Optional.ofNullable(this.appLinksJson);
    }

    /**
     * Application settings in JSON format.
     * 
     */
    @Import(name="appSettingsJson")
    private @Nullable Output<String> appSettingsJson;

    /**
     * @return Application settings in JSON format.
     * 
     */
    public Optional<Output<String>> appSettingsJson() {
        return Optional.ofNullable(this.appSettingsJson);
    }

    /**
     * The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.
     * 
     */
    @Import(name="authenticationPolicy")
    private @Nullable Output<String> authenticationPolicy;

    /**
     * @return The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.
     * 
     */
    public Optional<Output<String>> authenticationPolicy() {
        return Optional.ofNullable(this.authenticationPolicy);
    }

    /**
     * Requested key rotation mode.
     * 
     */
    @Import(name="autoKeyRotation")
    private @Nullable Output<Boolean> autoKeyRotation;

    /**
     * @return Requested key rotation mode.
     * 
     */
    public Optional<Output<Boolean>> autoKeyRotation() {
        return Optional.ofNullable(this.autoKeyRotation);
    }

    /**
     * Display auto submit toolbar.
     * 
     */
    @Import(name="autoSubmitToolbar")
    private @Nullable Output<Boolean> autoSubmitToolbar;

    /**
     * @return Display auto submit toolbar.
     * 
     */
    public Optional<Output<Boolean>> autoSubmitToolbar() {
        return Optional.ofNullable(this.autoSubmitToolbar);
    }

    /**
     * OAuth client secret key, this can be set when token_endpoint_auth_method is client_secret_basic.
     * 
     */
    @Import(name="clientBasicSecret")
    private @Nullable Output<String> clientBasicSecret;

    /**
     * @return OAuth client secret key, this can be set when token_endpoint_auth_method is client_secret_basic.
     * 
     */
    public Optional<Output<String>> clientBasicSecret() {
        return Optional.ofNullable(this.clientBasicSecret);
    }

    /**
     * OAuth client ID. If set during creation, app is created with this id.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return OAuth client ID. If set during creation, app is created with this id.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * The client secret of the application.
     * 
     */
    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    /**
     * @return The client secret of the application.
     * 
     */
    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    /**
     * URI to a web page providing information about the client.
     * 
     */
    @Import(name="clientUri")
    private @Nullable Output<String> clientUri;

    /**
     * @return URI to a web page providing information about the client.
     * 
     */
    public Optional<Output<String>> clientUri() {
        return Optional.ofNullable(this.clientUri);
    }

    /**
     * Indicates whether user consent is required or implicit. Valid values: `&#34;REQUIRED&#34;`, `&#34;TRUSTED&#34;`. Default value is `&#34;TRUSTED&#34;`.
     * 
     */
    @Import(name="consentMethod")
    private @Nullable Output<String> consentMethod;

    /**
     * @return Indicates whether user consent is required or implicit. Valid values: `&#34;REQUIRED&#34;`, `&#34;TRUSTED&#34;`. Default value is `&#34;TRUSTED&#34;`.
     * 
     */
    public Optional<Output<String>> consentMethod() {
        return Optional.ofNullable(this.consentMethod);
    }

    /**
     * This property allows you to set your client_id during creation. NOTE: updating after creation will be a no-op, use client_id for that behavior instead.
     * - `DEPRECATED`: This field is being replaced by `client_id`. Please use that field instead.&#34;,
     * 
     * @deprecated
     * This field is being replaced by client_id. Please set that field instead.
     * 
     */
    @Deprecated /* This field is being replaced by client_id. Please set that field instead. */
    @Import(name="customClientId")
    private @Nullable Output<String> customClientId;

    /**
     * @return This property allows you to set your client_id during creation. NOTE: updating after creation will be a no-op, use client_id for that behavior instead.
     * - `DEPRECATED`: This field is being replaced by `client_id`. Please use that field instead.&#34;,
     * 
     * @deprecated
     * This field is being replaced by client_id. Please set that field instead.
     * 
     */
    @Deprecated /* This field is being replaced by client_id. Please set that field instead. */
    public Optional<Output<String>> customClientId() {
        return Optional.ofNullable(this.customClientId);
    }

    /**
     * Application notes for end users.
     * 
     */
    @Import(name="enduserNote")
    private @Nullable Output<String> enduserNote;

    /**
     * @return Application notes for end users.
     * 
     */
    public Optional<Output<String>> enduserNote() {
        return Optional.ofNullable(this.enduserNote);
    }

    /**
     * List of OAuth 2.0 grant types. Conditional validation params found [here](https://developer.okta.com/docs/api/resources/apps#credentials-settings-details).
     * Defaults to minimum requirements per app type. Valid values: `&#34;authorization_code&#34;`, `&#34;implicit&#34;`, `&#34;password&#34;`, `&#34;refresh_token&#34;`, `&#34;client_credentials&#34;`,
     * `&#34;urn:ietf:params:oauth:grant-type:saml2-bearer&#34;` (*Early Access Property*), `&#34;urn:ietf:params:oauth:grant-type:token-exchange&#34;` (*Early Access Property*),
     * `&#34;interaction_code&#34;` (*OIE only*).
     * 
     */
    @Import(name="grantTypes")
    private @Nullable Output<List<String>> grantTypes;

    /**
     * @return List of OAuth 2.0 grant types. Conditional validation params found [here](https://developer.okta.com/docs/api/resources/apps#credentials-settings-details).
     * Defaults to minimum requirements per app type. Valid values: `&#34;authorization_code&#34;`, `&#34;implicit&#34;`, `&#34;password&#34;`, `&#34;refresh_token&#34;`, `&#34;client_credentials&#34;`,
     * `&#34;urn:ietf:params:oauth:grant-type:saml2-bearer&#34;` (*Early Access Property*), `&#34;urn:ietf:params:oauth:grant-type:token-exchange&#34;` (*Early Access Property*),
     * `&#34;interaction_code&#34;` (*OIE only*).
     * 
     */
    public Optional<Output<List<String>>> grantTypes() {
        return Optional.ofNullable(this.grantTypes);
    }

    /**
     * The groups assigned to the application. It is recommended not to use this and instead use `okta.app.GroupAssignment`.
     * - `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.
     * 
     * @deprecated
     * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
    @Import(name="groups")
    private @Nullable Output<List<String>> groups;

    /**
     * @return The groups assigned to the application. It is recommended not to use this and instead use `okta.app.GroupAssignment`.
     * - `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.
     * 
     * @deprecated
     * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
    public Optional<Output<List<String>>> groups() {
        return Optional.ofNullable(this.groups);
    }

    /**
     * Groups claim for an OpenID Connect client application. **IMPORTANT**: this field is available only when using api token in the provider config.
     * 
     */
    @Import(name="groupsClaim")
    private @Nullable Output<OAuthGroupsClaimArgs> groupsClaim;

    /**
     * @return Groups claim for an OpenID Connect client application. **IMPORTANT**: this field is available only when using api token in the provider config.
     * 
     */
    public Optional<Output<OAuthGroupsClaimArgs>> groupsClaim() {
        return Optional.ofNullable(this.groupsClaim);
    }

    /**
     * Do not display application icon on mobile app.
     * 
     */
    @Import(name="hideIos")
    private @Nullable Output<Boolean> hideIos;

    /**
     * @return Do not display application icon on mobile app.
     * 
     */
    public Optional<Output<Boolean>> hideIos() {
        return Optional.ofNullable(this.hideIos);
    }

    /**
     * Do not display application icon to users.
     * 
     */
    @Import(name="hideWeb")
    private @Nullable Output<Boolean> hideWeb;

    /**
     * @return Do not display application icon to users.
     * 
     */
    public Optional<Output<Boolean>> hideWeb() {
        return Optional.ofNullable(this.hideWeb);
    }

    /**
     * *Early Access Property*. Enables [Federation Broker Mode](https://help.okta.com/en/prod/Content/Topics/Apps/apps-fbm-enable.htm). When this mode is enabled, `users` and `groups` arguments are ignored.
     * 
     */
    @Import(name="implicitAssignment")
    private @Nullable Output<Boolean> implicitAssignment;

    /**
     * @return *Early Access Property*. Enables [Federation Broker Mode](https://help.okta.com/en/prod/Content/Topics/Apps/apps-fbm-enable.htm). When this mode is enabled, `users` and `groups` arguments are ignored.
     * 
     */
    public Optional<Output<Boolean>> implicitAssignment() {
        return Optional.ofNullable(this.implicitAssignment);
    }

    /**
     * Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.
     * Valid values: `&#34;CUSTOM_URL&#34;`,`&#34;ORG_URL&#34;` or `&#34;DYNAMIC&#34;`. Default is `&#34;ORG_URL&#34;`.
     * 
     */
    @Import(name="issuerMode")
    private @Nullable Output<String> issuerMode;

    /**
     * @return Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.
     * Valid values: `&#34;CUSTOM_URL&#34;`,`&#34;ORG_URL&#34;` or `&#34;DYNAMIC&#34;`. Default is `&#34;ORG_URL&#34;`.
     * 
     */
    public Optional<Output<String>> issuerMode() {
        return Optional.ofNullable(this.issuerMode);
    }

    /**
     * JSON Web Key set. [Admin Console JWK Reference](https://developer.okta.com/docs/guides/implement-oauth-for-okta-serviceapp/main/#generate-the-jwk-in-the-admin-console)
     * 
     */
    @Import(name="jwks")
    private @Nullable Output<List<OAuthJwkArgs>> jwks;

    /**
     * @return JSON Web Key set. [Admin Console JWK Reference](https://developer.okta.com/docs/guides/implement-oauth-for-okta-serviceapp/main/#generate-the-jwk-in-the-admin-console)
     * 
     */
    public Optional<Output<List<OAuthJwkArgs>>> jwks() {
        return Optional.ofNullable(this.jwks);
    }

    /**
     * The Application&#39;s display name.
     * 
     */
    @Import(name="label")
    private @Nullable Output<String> label;

    /**
     * @return The Application&#39;s display name.
     * 
     */
    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * The type of Idp-Initiated login that the client supports, if any. Valid values: `&#34;DISABLED&#34;`, `&#34;SPEC&#34;`, `&#34;OKTA&#34;`. Default is `&#34;DISABLED&#34;`.
     * 
     */
    @Import(name="loginMode")
    private @Nullable Output<String> loginMode;

    /**
     * @return The type of Idp-Initiated login that the client supports, if any. Valid values: `&#34;DISABLED&#34;`, `&#34;SPEC&#34;`, `&#34;OKTA&#34;`. Default is `&#34;DISABLED&#34;`.
     * 
     */
    public Optional<Output<String>> loginMode() {
        return Optional.ofNullable(this.loginMode);
    }

    /**
     * List of scopes to use for the request. Valid values: `&#34;openid&#34;`, `&#34;profile&#34;`, `&#34;email&#34;`, `&#34;address&#34;`, `&#34;phone&#34;`. Required when `login_mode` is NOT `DISABLED`.
     * 
     */
    @Import(name="loginScopes")
    private @Nullable Output<List<String>> loginScopes;

    /**
     * @return List of scopes to use for the request. Valid values: `&#34;openid&#34;`, `&#34;profile&#34;`, `&#34;email&#34;`, `&#34;address&#34;`, `&#34;phone&#34;`. Required when `login_mode` is NOT `DISABLED`.
     * 
     */
    public Optional<Output<List<String>>> loginScopes() {
        return Optional.ofNullable(this.loginScopes);
    }

    /**
     * URI that initiates login. Required when `login_mode` is NOT `DISABLED`.
     * 
     */
    @Import(name="loginUri")
    private @Nullable Output<String> loginUri;

    /**
     * @return URI that initiates login. Required when `login_mode` is NOT `DISABLED`.
     * 
     */
    public Optional<Output<String>> loginUri() {
        return Optional.ofNullable(this.loginUri);
    }

    /**
     * Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     * 
     */
    @Import(name="logo")
    private @Nullable Output<String> logo;

    /**
     * @return Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     * 
     */
    public Optional<Output<String>> logo() {
        return Optional.ofNullable(this.logo);
    }

    /**
     * URI that references a logo for the client.
     * 
     */
    @Import(name="logoUri")
    private @Nullable Output<String> logoUri;

    /**
     * @return URI that references a logo for the client.
     * 
     */
    public Optional<Output<String>> logoUri() {
        return Optional.ofNullable(this.logoUri);
    }

    /**
     * Direct link of application logo.
     * 
     */
    @Import(name="logoUrl")
    private @Nullable Output<String> logoUrl;

    /**
     * @return Direct link of application logo.
     * 
     */
    public Optional<Output<String>> logoUrl() {
        return Optional.ofNullable(this.logoUrl);
    }

    /**
     * Name of the claim that will be used in the token.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the claim that will be used in the token.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * This tells the provider not to persist the application&#39;s secret to state. Your app&#39;s `client_secret` will be recreated if this ever changes from true =&gt; false.
     * 
     */
    @Import(name="omitSecret")
    private @Nullable Output<Boolean> omitSecret;

    /**
     * @return This tells the provider not to persist the application&#39;s secret to state. Your app&#39;s `client_secret` will be recreated if this ever changes from true =&gt; false.
     * 
     */
    public Optional<Output<Boolean>> omitSecret() {
        return Optional.ofNullable(this.omitSecret);
    }

    /**
     * URI to web page providing client policy document.
     * 
     */
    @Import(name="policyUri")
    private @Nullable Output<String> policyUri;

    /**
     * @return URI to web page providing client policy document.
     * 
     */
    public Optional<Output<String>> policyUri() {
        return Optional.ofNullable(this.policyUri);
    }

    /**
     * List of URIs for redirection after logout.
     * 
     */
    @Import(name="postLogoutRedirectUris")
    private @Nullable Output<List<String>> postLogoutRedirectUris;

    /**
     * @return List of URIs for redirection after logout.
     * 
     */
    public Optional<Output<List<String>>> postLogoutRedirectUris() {
        return Optional.ofNullable(this.postLogoutRedirectUris);
    }

    /**
     * Custom JSON that represents an OAuth application&#39;s profile.
     * 
     */
    @Import(name="profile")
    private @Nullable Output<String> profile;

    /**
     * @return Custom JSON that represents an OAuth application&#39;s profile.
     * 
     */
    public Optional<Output<String>> profile() {
        return Optional.ofNullable(this.profile);
    }

    /**
     * List of URIs for use in the redirect-based flow. This is required for all application types except service.
     * 
     */
    @Import(name="redirectUris")
    private @Nullable Output<List<String>> redirectUris;

    /**
     * @return List of URIs for use in the redirect-based flow. This is required for all application types except service.
     * 
     */
    public Optional<Output<List<String>>> redirectUris() {
        return Optional.ofNullable(this.redirectUris);
    }

    /**
     * Grace period for token rotation. Valid values: 0 to 60 seconds.
     * 
     */
    @Import(name="refreshTokenLeeway")
    private @Nullable Output<Integer> refreshTokenLeeway;

    /**
     * @return Grace period for token rotation. Valid values: 0 to 60 seconds.
     * 
     */
    public Optional<Output<Integer>> refreshTokenLeeway() {
        return Optional.ofNullable(this.refreshTokenLeeway);
    }

    /**
     * Refresh token rotation behavior. Valid values: `&#34;STATIC&#34;` or `&#34;ROTATE&#34;`.
     * 
     */
    @Import(name="refreshTokenRotation")
    private @Nullable Output<String> refreshTokenRotation;

    /**
     * @return Refresh token rotation behavior. Valid values: `&#34;STATIC&#34;` or `&#34;ROTATE&#34;`.
     * 
     */
    public Optional<Output<String>> refreshTokenRotation() {
        return Optional.ofNullable(this.refreshTokenRotation);
    }

    /**
     * List of OAuth 2.0 response type strings.
     * 
     */
    @Import(name="responseTypes")
    private @Nullable Output<List<String>> responseTypes;

    /**
     * @return List of OAuth 2.0 response type strings.
     * 
     */
    public Optional<Output<List<String>>> responseTypes() {
        return Optional.ofNullable(this.responseTypes);
    }

    /**
     * Sign-on mode of application.
     * 
     */
    @Import(name="signOnMode")
    private @Nullable Output<String> signOnMode;

    /**
     * @return Sign-on mode of application.
     * 
     */
    public Optional<Output<String>> signOnMode() {
        return Optional.ofNullable(this.signOnMode);
    }

    /**
     * Indicator that allows the app to skip `groups` sync (it&#39;s also can be provided during import). Default is `false`.
     * 
     */
    @Import(name="skipGroups")
    private @Nullable Output<Boolean> skipGroups;

    /**
     * @return Indicator that allows the app to skip `groups` sync (it&#39;s also can be provided during import). Default is `false`.
     * 
     */
    public Optional<Output<Boolean>> skipGroups() {
        return Optional.ofNullable(this.skipGroups);
    }

    /**
     * Indicator that allows the app to skip `users` sync (it&#39;s also can be provided during import). Default is `false`.
     * 
     */
    @Import(name="skipUsers")
    private @Nullable Output<Boolean> skipUsers;

    /**
     * @return Indicator that allows the app to skip `users` sync (it&#39;s also can be provided during import). Default is `false`.
     * 
     */
    public Optional<Output<Boolean>> skipUsers() {
        return Optional.ofNullable(this.skipUsers);
    }

    /**
     * The status of the application, by default, it is `&#34;ACTIVE&#34;`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the application, by default, it is `&#34;ACTIVE&#34;`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Requested authentication method for the token endpoint. It can be set to `&#34;none&#34;`, `&#34;client_secret_post&#34;`, `&#34;client_secret_basic&#34;`, `&#34;client_secret_jwt&#34;`, `&#34;private_key_jwt&#34;`. To enable PKCE, set this to `&#34;none&#34;`.
     * 
     */
    @Import(name="tokenEndpointAuthMethod")
    private @Nullable Output<String> tokenEndpointAuthMethod;

    /**
     * @return Requested authentication method for the token endpoint. It can be set to `&#34;none&#34;`, `&#34;client_secret_post&#34;`, `&#34;client_secret_basic&#34;`, `&#34;client_secret_jwt&#34;`, `&#34;private_key_jwt&#34;`. To enable PKCE, set this to `&#34;none&#34;`.
     * 
     */
    public Optional<Output<String>> tokenEndpointAuthMethod() {
        return Optional.ofNullable(this.tokenEndpointAuthMethod);
    }

    /**
     * URI to web page providing client tos (terms of service).
     * 
     */
    @Import(name="tosUri")
    private @Nullable Output<String> tosUri;

    /**
     * @return URI to web page providing client tos (terms of service).
     * 
     */
    public Optional<Output<String>> tosUri() {
        return Optional.ofNullable(this.tosUri);
    }

    /**
     * The type of OAuth application. Valid values: `&#34;web&#34;`, `&#34;native&#34;`, `&#34;browser&#34;`, `&#34;service&#34;`. For SPA apps use `browser`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of OAuth application. Valid values: `&#34;web&#34;`, `&#34;native&#34;`, `&#34;browser&#34;`, `&#34;service&#34;`. For SPA apps use `browser`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Username template. Default: `&#34;${source.login}&#34;`
     * 
     */
    @Import(name="userNameTemplate")
    private @Nullable Output<String> userNameTemplate;

    /**
     * @return Username template. Default: `&#34;${source.login}&#34;`
     * 
     */
    public Optional<Output<String>> userNameTemplate() {
        return Optional.ofNullable(this.userNameTemplate);
    }

    /**
     * Push username on update. Valid values: `&#34;PUSH&#34;` and `&#34;DONT_PUSH&#34;`.
     * 
     */
    @Import(name="userNameTemplatePushStatus")
    private @Nullable Output<String> userNameTemplatePushStatus;

    /**
     * @return Push username on update. Valid values: `&#34;PUSH&#34;` and `&#34;DONT_PUSH&#34;`.
     * 
     */
    public Optional<Output<String>> userNameTemplatePushStatus() {
        return Optional.ofNullable(this.userNameTemplatePushStatus);
    }

    /**
     * Username template suffix.
     * 
     */
    @Import(name="userNameTemplateSuffix")
    private @Nullable Output<String> userNameTemplateSuffix;

    /**
     * @return Username template suffix.
     * 
     */
    public Optional<Output<String>> userNameTemplateSuffix() {
        return Optional.ofNullable(this.userNameTemplateSuffix);
    }

    /**
     * Username template type. Default: `&#34;BUILT_IN&#34;`.
     * 
     */
    @Import(name="userNameTemplateType")
    private @Nullable Output<String> userNameTemplateType;

    /**
     * @return Username template type. Default: `&#34;BUILT_IN&#34;`.
     * 
     */
    public Optional<Output<String>> userNameTemplateType() {
        return Optional.ofNullable(this.userNameTemplateType);
    }

    /**
     * The users assigned to the application. It is recommended not to use this and instead use `okta.app.User`.
     * - `DEPRECATED`: Please replace usage with the `okta.app.User` resource.
     * 
     * @deprecated
     * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
    @Import(name="users")
    private @Nullable Output<List<OAuthUserArgs>> users;

    /**
     * @return The users assigned to the application. It is recommended not to use this and instead use `okta.app.User`.
     * - `DEPRECATED`: Please replace usage with the `okta.app.User` resource.
     * 
     * @deprecated
     * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
    public Optional<Output<List<OAuthUserArgs>>> users() {
        return Optional.ofNullable(this.users);
    }

    /**
     * *Early Access Property*. Indicates if the client is allowed to use wildcard matching of `redirect_uris`. Valid values: `&#34;DISABLED&#34;`, `&#34;SUBDOMAIN&#34;`. Default value is `&#34;DISABLED&#34;`.
     * 
     */
    @Import(name="wildcardRedirect")
    private @Nullable Output<String> wildcardRedirect;

    /**
     * @return *Early Access Property*. Indicates if the client is allowed to use wildcard matching of `redirect_uris`. Valid values: `&#34;DISABLED&#34;`, `&#34;SUBDOMAIN&#34;`. Default value is `&#34;DISABLED&#34;`.
     * 
     */
    public Optional<Output<String>> wildcardRedirect() {
        return Optional.ofNullable(this.wildcardRedirect);
    }

    private OAuthState() {}

    private OAuthState(OAuthState $) {
        this.accessibilityErrorRedirectUrl = $.accessibilityErrorRedirectUrl;
        this.accessibilityLoginRedirectUrl = $.accessibilityLoginRedirectUrl;
        this.accessibilitySelfService = $.accessibilitySelfService;
        this.adminNote = $.adminNote;
        this.appLinksJson = $.appLinksJson;
        this.appSettingsJson = $.appSettingsJson;
        this.authenticationPolicy = $.authenticationPolicy;
        this.autoKeyRotation = $.autoKeyRotation;
        this.autoSubmitToolbar = $.autoSubmitToolbar;
        this.clientBasicSecret = $.clientBasicSecret;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.clientUri = $.clientUri;
        this.consentMethod = $.consentMethod;
        this.customClientId = $.customClientId;
        this.enduserNote = $.enduserNote;
        this.grantTypes = $.grantTypes;
        this.groups = $.groups;
        this.groupsClaim = $.groupsClaim;
        this.hideIos = $.hideIos;
        this.hideWeb = $.hideWeb;
        this.implicitAssignment = $.implicitAssignment;
        this.issuerMode = $.issuerMode;
        this.jwks = $.jwks;
        this.label = $.label;
        this.loginMode = $.loginMode;
        this.loginScopes = $.loginScopes;
        this.loginUri = $.loginUri;
        this.logo = $.logo;
        this.logoUri = $.logoUri;
        this.logoUrl = $.logoUrl;
        this.name = $.name;
        this.omitSecret = $.omitSecret;
        this.policyUri = $.policyUri;
        this.postLogoutRedirectUris = $.postLogoutRedirectUris;
        this.profile = $.profile;
        this.redirectUris = $.redirectUris;
        this.refreshTokenLeeway = $.refreshTokenLeeway;
        this.refreshTokenRotation = $.refreshTokenRotation;
        this.responseTypes = $.responseTypes;
        this.signOnMode = $.signOnMode;
        this.skipGroups = $.skipGroups;
        this.skipUsers = $.skipUsers;
        this.status = $.status;
        this.tokenEndpointAuthMethod = $.tokenEndpointAuthMethod;
        this.tosUri = $.tosUri;
        this.type = $.type;
        this.userNameTemplate = $.userNameTemplate;
        this.userNameTemplatePushStatus = $.userNameTemplatePushStatus;
        this.userNameTemplateSuffix = $.userNameTemplateSuffix;
        this.userNameTemplateType = $.userNameTemplateType;
        this.users = $.users;
        this.wildcardRedirect = $.wildcardRedirect;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OAuthState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OAuthState $;

        public Builder() {
            $ = new OAuthState();
        }

        public Builder(OAuthState defaults) {
            $ = new OAuthState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessibilityErrorRedirectUrl Custom error page URL.
         * 
         * @return builder
         * 
         */
        public Builder accessibilityErrorRedirectUrl(@Nullable Output<String> accessibilityErrorRedirectUrl) {
            $.accessibilityErrorRedirectUrl = accessibilityErrorRedirectUrl;
            return this;
        }

        /**
         * @param accessibilityErrorRedirectUrl Custom error page URL.
         * 
         * @return builder
         * 
         */
        public Builder accessibilityErrorRedirectUrl(String accessibilityErrorRedirectUrl) {
            return accessibilityErrorRedirectUrl(Output.of(accessibilityErrorRedirectUrl));
        }

        /**
         * @param accessibilityLoginRedirectUrl Custom login page for this application.
         * 
         * @return builder
         * 
         */
        public Builder accessibilityLoginRedirectUrl(@Nullable Output<String> accessibilityLoginRedirectUrl) {
            $.accessibilityLoginRedirectUrl = accessibilityLoginRedirectUrl;
            return this;
        }

        /**
         * @param accessibilityLoginRedirectUrl Custom login page for this application.
         * 
         * @return builder
         * 
         */
        public Builder accessibilityLoginRedirectUrl(String accessibilityLoginRedirectUrl) {
            return accessibilityLoginRedirectUrl(Output.of(accessibilityLoginRedirectUrl));
        }

        /**
         * @param accessibilitySelfService Enable self-service. By default, it is `false`.
         * 
         * @return builder
         * 
         */
        public Builder accessibilitySelfService(@Nullable Output<Boolean> accessibilitySelfService) {
            $.accessibilitySelfService = accessibilitySelfService;
            return this;
        }

        /**
         * @param accessibilitySelfService Enable self-service. By default, it is `false`.
         * 
         * @return builder
         * 
         */
        public Builder accessibilitySelfService(Boolean accessibilitySelfService) {
            return accessibilitySelfService(Output.of(accessibilitySelfService));
        }

        /**
         * @param adminNote Application notes for admins.
         * 
         * @return builder
         * 
         */
        public Builder adminNote(@Nullable Output<String> adminNote) {
            $.adminNote = adminNote;
            return this;
        }

        /**
         * @param adminNote Application notes for admins.
         * 
         * @return builder
         * 
         */
        public Builder adminNote(String adminNote) {
            return adminNote(Output.of(adminNote));
        }

        /**
         * @param appLinksJson Displays specific appLinks for the app. The value for each application link should be boolean.
         * 
         * @return builder
         * 
         */
        public Builder appLinksJson(@Nullable Output<String> appLinksJson) {
            $.appLinksJson = appLinksJson;
            return this;
        }

        /**
         * @param appLinksJson Displays specific appLinks for the app. The value for each application link should be boolean.
         * 
         * @return builder
         * 
         */
        public Builder appLinksJson(String appLinksJson) {
            return appLinksJson(Output.of(appLinksJson));
        }

        /**
         * @param appSettingsJson Application settings in JSON format.
         * 
         * @return builder
         * 
         */
        public Builder appSettingsJson(@Nullable Output<String> appSettingsJson) {
            $.appSettingsJson = appSettingsJson;
            return this;
        }

        /**
         * @param appSettingsJson Application settings in JSON format.
         * 
         * @return builder
         * 
         */
        public Builder appSettingsJson(String appSettingsJson) {
            return appSettingsJson(Output.of(appSettingsJson));
        }

        /**
         * @param authenticationPolicy The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.
         * 
         * @return builder
         * 
         */
        public Builder authenticationPolicy(@Nullable Output<String> authenticationPolicy) {
            $.authenticationPolicy = authenticationPolicy;
            return this;
        }

        /**
         * @param authenticationPolicy The ID of the associated `app_signon_policy`. If this property is removed from the application the `default` sign-on-policy will be associated with this application.
         * 
         * @return builder
         * 
         */
        public Builder authenticationPolicy(String authenticationPolicy) {
            return authenticationPolicy(Output.of(authenticationPolicy));
        }

        /**
         * @param autoKeyRotation Requested key rotation mode.
         * 
         * @return builder
         * 
         */
        public Builder autoKeyRotation(@Nullable Output<Boolean> autoKeyRotation) {
            $.autoKeyRotation = autoKeyRotation;
            return this;
        }

        /**
         * @param autoKeyRotation Requested key rotation mode.
         * 
         * @return builder
         * 
         */
        public Builder autoKeyRotation(Boolean autoKeyRotation) {
            return autoKeyRotation(Output.of(autoKeyRotation));
        }

        /**
         * @param autoSubmitToolbar Display auto submit toolbar.
         * 
         * @return builder
         * 
         */
        public Builder autoSubmitToolbar(@Nullable Output<Boolean> autoSubmitToolbar) {
            $.autoSubmitToolbar = autoSubmitToolbar;
            return this;
        }

        /**
         * @param autoSubmitToolbar Display auto submit toolbar.
         * 
         * @return builder
         * 
         */
        public Builder autoSubmitToolbar(Boolean autoSubmitToolbar) {
            return autoSubmitToolbar(Output.of(autoSubmitToolbar));
        }

        /**
         * @param clientBasicSecret OAuth client secret key, this can be set when token_endpoint_auth_method is client_secret_basic.
         * 
         * @return builder
         * 
         */
        public Builder clientBasicSecret(@Nullable Output<String> clientBasicSecret) {
            $.clientBasicSecret = clientBasicSecret;
            return this;
        }

        /**
         * @param clientBasicSecret OAuth client secret key, this can be set when token_endpoint_auth_method is client_secret_basic.
         * 
         * @return builder
         * 
         */
        public Builder clientBasicSecret(String clientBasicSecret) {
            return clientBasicSecret(Output.of(clientBasicSecret));
        }

        /**
         * @param clientId OAuth client ID. If set during creation, app is created with this id.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId OAuth client ID. If set during creation, app is created with this id.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret The client secret of the application.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret The client secret of the application.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param clientUri URI to a web page providing information about the client.
         * 
         * @return builder
         * 
         */
        public Builder clientUri(@Nullable Output<String> clientUri) {
            $.clientUri = clientUri;
            return this;
        }

        /**
         * @param clientUri URI to a web page providing information about the client.
         * 
         * @return builder
         * 
         */
        public Builder clientUri(String clientUri) {
            return clientUri(Output.of(clientUri));
        }

        /**
         * @param consentMethod Indicates whether user consent is required or implicit. Valid values: `&#34;REQUIRED&#34;`, `&#34;TRUSTED&#34;`. Default value is `&#34;TRUSTED&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder consentMethod(@Nullable Output<String> consentMethod) {
            $.consentMethod = consentMethod;
            return this;
        }

        /**
         * @param consentMethod Indicates whether user consent is required or implicit. Valid values: `&#34;REQUIRED&#34;`, `&#34;TRUSTED&#34;`. Default value is `&#34;TRUSTED&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder consentMethod(String consentMethod) {
            return consentMethod(Output.of(consentMethod));
        }

        /**
         * @param customClientId This property allows you to set your client_id during creation. NOTE: updating after creation will be a no-op, use client_id for that behavior instead.
         * - `DEPRECATED`: This field is being replaced by `client_id`. Please use that field instead.&#34;,
         * 
         * @return builder
         * 
         * @deprecated
         * This field is being replaced by client_id. Please set that field instead.
         * 
         */
        @Deprecated /* This field is being replaced by client_id. Please set that field instead. */
        public Builder customClientId(@Nullable Output<String> customClientId) {
            $.customClientId = customClientId;
            return this;
        }

        /**
         * @param customClientId This property allows you to set your client_id during creation. NOTE: updating after creation will be a no-op, use client_id for that behavior instead.
         * - `DEPRECATED`: This field is being replaced by `client_id`. Please use that field instead.&#34;,
         * 
         * @return builder
         * 
         * @deprecated
         * This field is being replaced by client_id. Please set that field instead.
         * 
         */
        @Deprecated /* This field is being replaced by client_id. Please set that field instead. */
        public Builder customClientId(String customClientId) {
            return customClientId(Output.of(customClientId));
        }

        /**
         * @param enduserNote Application notes for end users.
         * 
         * @return builder
         * 
         */
        public Builder enduserNote(@Nullable Output<String> enduserNote) {
            $.enduserNote = enduserNote;
            return this;
        }

        /**
         * @param enduserNote Application notes for end users.
         * 
         * @return builder
         * 
         */
        public Builder enduserNote(String enduserNote) {
            return enduserNote(Output.of(enduserNote));
        }

        /**
         * @param grantTypes List of OAuth 2.0 grant types. Conditional validation params found [here](https://developer.okta.com/docs/api/resources/apps#credentials-settings-details).
         * Defaults to minimum requirements per app type. Valid values: `&#34;authorization_code&#34;`, `&#34;implicit&#34;`, `&#34;password&#34;`, `&#34;refresh_token&#34;`, `&#34;client_credentials&#34;`,
         * `&#34;urn:ietf:params:oauth:grant-type:saml2-bearer&#34;` (*Early Access Property*), `&#34;urn:ietf:params:oauth:grant-type:token-exchange&#34;` (*Early Access Property*),
         * `&#34;interaction_code&#34;` (*OIE only*).
         * 
         * @return builder
         * 
         */
        public Builder grantTypes(@Nullable Output<List<String>> grantTypes) {
            $.grantTypes = grantTypes;
            return this;
        }

        /**
         * @param grantTypes List of OAuth 2.0 grant types. Conditional validation params found [here](https://developer.okta.com/docs/api/resources/apps#credentials-settings-details).
         * Defaults to minimum requirements per app type. Valid values: `&#34;authorization_code&#34;`, `&#34;implicit&#34;`, `&#34;password&#34;`, `&#34;refresh_token&#34;`, `&#34;client_credentials&#34;`,
         * `&#34;urn:ietf:params:oauth:grant-type:saml2-bearer&#34;` (*Early Access Property*), `&#34;urn:ietf:params:oauth:grant-type:token-exchange&#34;` (*Early Access Property*),
         * `&#34;interaction_code&#34;` (*OIE only*).
         * 
         * @return builder
         * 
         */
        public Builder grantTypes(List<String> grantTypes) {
            return grantTypes(Output.of(grantTypes));
        }

        /**
         * @param grantTypes List of OAuth 2.0 grant types. Conditional validation params found [here](https://developer.okta.com/docs/api/resources/apps#credentials-settings-details).
         * Defaults to minimum requirements per app type. Valid values: `&#34;authorization_code&#34;`, `&#34;implicit&#34;`, `&#34;password&#34;`, `&#34;refresh_token&#34;`, `&#34;client_credentials&#34;`,
         * `&#34;urn:ietf:params:oauth:grant-type:saml2-bearer&#34;` (*Early Access Property*), `&#34;urn:ietf:params:oauth:grant-type:token-exchange&#34;` (*Early Access Property*),
         * `&#34;interaction_code&#34;` (*OIE only*).
         * 
         * @return builder
         * 
         */
        public Builder grantTypes(String... grantTypes) {
            return grantTypes(List.of(grantTypes));
        }

        /**
         * @param groups The groups assigned to the application. It is recommended not to use this and instead use `okta.app.GroupAssignment`.
         * - `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
        public Builder groups(@Nullable Output<List<String>> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups The groups assigned to the application. It is recommended not to use this and instead use `okta.app.GroupAssignment`.
         * - `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
        public Builder groups(List<String> groups) {
            return groups(Output.of(groups));
        }

        /**
         * @param groups The groups assigned to the application. It is recommended not to use this and instead use `okta.app.GroupAssignment`.
         * - `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }

        /**
         * @param groupsClaim Groups claim for an OpenID Connect client application. **IMPORTANT**: this field is available only when using api token in the provider config.
         * 
         * @return builder
         * 
         */
        public Builder groupsClaim(@Nullable Output<OAuthGroupsClaimArgs> groupsClaim) {
            $.groupsClaim = groupsClaim;
            return this;
        }

        /**
         * @param groupsClaim Groups claim for an OpenID Connect client application. **IMPORTANT**: this field is available only when using api token in the provider config.
         * 
         * @return builder
         * 
         */
        public Builder groupsClaim(OAuthGroupsClaimArgs groupsClaim) {
            return groupsClaim(Output.of(groupsClaim));
        }

        /**
         * @param hideIos Do not display application icon on mobile app.
         * 
         * @return builder
         * 
         */
        public Builder hideIos(@Nullable Output<Boolean> hideIos) {
            $.hideIos = hideIos;
            return this;
        }

        /**
         * @param hideIos Do not display application icon on mobile app.
         * 
         * @return builder
         * 
         */
        public Builder hideIos(Boolean hideIos) {
            return hideIos(Output.of(hideIos));
        }

        /**
         * @param hideWeb Do not display application icon to users.
         * 
         * @return builder
         * 
         */
        public Builder hideWeb(@Nullable Output<Boolean> hideWeb) {
            $.hideWeb = hideWeb;
            return this;
        }

        /**
         * @param hideWeb Do not display application icon to users.
         * 
         * @return builder
         * 
         */
        public Builder hideWeb(Boolean hideWeb) {
            return hideWeb(Output.of(hideWeb));
        }

        /**
         * @param implicitAssignment *Early Access Property*. Enables [Federation Broker Mode](https://help.okta.com/en/prod/Content/Topics/Apps/apps-fbm-enable.htm). When this mode is enabled, `users` and `groups` arguments are ignored.
         * 
         * @return builder
         * 
         */
        public Builder implicitAssignment(@Nullable Output<Boolean> implicitAssignment) {
            $.implicitAssignment = implicitAssignment;
            return this;
        }

        /**
         * @param implicitAssignment *Early Access Property*. Enables [Federation Broker Mode](https://help.okta.com/en/prod/Content/Topics/Apps/apps-fbm-enable.htm). When this mode is enabled, `users` and `groups` arguments are ignored.
         * 
         * @return builder
         * 
         */
        public Builder implicitAssignment(Boolean implicitAssignment) {
            return implicitAssignment(Output.of(implicitAssignment));
        }

        /**
         * @param issuerMode Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.
         * Valid values: `&#34;CUSTOM_URL&#34;`,`&#34;ORG_URL&#34;` or `&#34;DYNAMIC&#34;`. Default is `&#34;ORG_URL&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder issuerMode(@Nullable Output<String> issuerMode) {
            $.issuerMode = issuerMode;
            return this;
        }

        /**
         * @param issuerMode Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.
         * Valid values: `&#34;CUSTOM_URL&#34;`,`&#34;ORG_URL&#34;` or `&#34;DYNAMIC&#34;`. Default is `&#34;ORG_URL&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder issuerMode(String issuerMode) {
            return issuerMode(Output.of(issuerMode));
        }

        /**
         * @param jwks JSON Web Key set. [Admin Console JWK Reference](https://developer.okta.com/docs/guides/implement-oauth-for-okta-serviceapp/main/#generate-the-jwk-in-the-admin-console)
         * 
         * @return builder
         * 
         */
        public Builder jwks(@Nullable Output<List<OAuthJwkArgs>> jwks) {
            $.jwks = jwks;
            return this;
        }

        /**
         * @param jwks JSON Web Key set. [Admin Console JWK Reference](https://developer.okta.com/docs/guides/implement-oauth-for-okta-serviceapp/main/#generate-the-jwk-in-the-admin-console)
         * 
         * @return builder
         * 
         */
        public Builder jwks(List<OAuthJwkArgs> jwks) {
            return jwks(Output.of(jwks));
        }

        /**
         * @param jwks JSON Web Key set. [Admin Console JWK Reference](https://developer.okta.com/docs/guides/implement-oauth-for-okta-serviceapp/main/#generate-the-jwk-in-the-admin-console)
         * 
         * @return builder
         * 
         */
        public Builder jwks(OAuthJwkArgs... jwks) {
            return jwks(List.of(jwks));
        }

        /**
         * @param label The Application&#39;s display name.
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label The Application&#39;s display name.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param loginMode The type of Idp-Initiated login that the client supports, if any. Valid values: `&#34;DISABLED&#34;`, `&#34;SPEC&#34;`, `&#34;OKTA&#34;`. Default is `&#34;DISABLED&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder loginMode(@Nullable Output<String> loginMode) {
            $.loginMode = loginMode;
            return this;
        }

        /**
         * @param loginMode The type of Idp-Initiated login that the client supports, if any. Valid values: `&#34;DISABLED&#34;`, `&#34;SPEC&#34;`, `&#34;OKTA&#34;`. Default is `&#34;DISABLED&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder loginMode(String loginMode) {
            return loginMode(Output.of(loginMode));
        }

        /**
         * @param loginScopes List of scopes to use for the request. Valid values: `&#34;openid&#34;`, `&#34;profile&#34;`, `&#34;email&#34;`, `&#34;address&#34;`, `&#34;phone&#34;`. Required when `login_mode` is NOT `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder loginScopes(@Nullable Output<List<String>> loginScopes) {
            $.loginScopes = loginScopes;
            return this;
        }

        /**
         * @param loginScopes List of scopes to use for the request. Valid values: `&#34;openid&#34;`, `&#34;profile&#34;`, `&#34;email&#34;`, `&#34;address&#34;`, `&#34;phone&#34;`. Required when `login_mode` is NOT `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder loginScopes(List<String> loginScopes) {
            return loginScopes(Output.of(loginScopes));
        }

        /**
         * @param loginScopes List of scopes to use for the request. Valid values: `&#34;openid&#34;`, `&#34;profile&#34;`, `&#34;email&#34;`, `&#34;address&#34;`, `&#34;phone&#34;`. Required when `login_mode` is NOT `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder loginScopes(String... loginScopes) {
            return loginScopes(List.of(loginScopes));
        }

        /**
         * @param loginUri URI that initiates login. Required when `login_mode` is NOT `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder loginUri(@Nullable Output<String> loginUri) {
            $.loginUri = loginUri;
            return this;
        }

        /**
         * @param loginUri URI that initiates login. Required when `login_mode` is NOT `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder loginUri(String loginUri) {
            return loginUri(Output.of(loginUri));
        }

        /**
         * @param logo Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
         * 
         * @return builder
         * 
         */
        public Builder logo(@Nullable Output<String> logo) {
            $.logo = logo;
            return this;
        }

        /**
         * @param logo Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
         * 
         * @return builder
         * 
         */
        public Builder logo(String logo) {
            return logo(Output.of(logo));
        }

        /**
         * @param logoUri URI that references a logo for the client.
         * 
         * @return builder
         * 
         */
        public Builder logoUri(@Nullable Output<String> logoUri) {
            $.logoUri = logoUri;
            return this;
        }

        /**
         * @param logoUri URI that references a logo for the client.
         * 
         * @return builder
         * 
         */
        public Builder logoUri(String logoUri) {
            return logoUri(Output.of(logoUri));
        }

        /**
         * @param logoUrl Direct link of application logo.
         * 
         * @return builder
         * 
         */
        public Builder logoUrl(@Nullable Output<String> logoUrl) {
            $.logoUrl = logoUrl;
            return this;
        }

        /**
         * @param logoUrl Direct link of application logo.
         * 
         * @return builder
         * 
         */
        public Builder logoUrl(String logoUrl) {
            return logoUrl(Output.of(logoUrl));
        }

        /**
         * @param name Name of the claim that will be used in the token.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the claim that will be used in the token.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param omitSecret This tells the provider not to persist the application&#39;s secret to state. Your app&#39;s `client_secret` will be recreated if this ever changes from true =&gt; false.
         * 
         * @return builder
         * 
         */
        public Builder omitSecret(@Nullable Output<Boolean> omitSecret) {
            $.omitSecret = omitSecret;
            return this;
        }

        /**
         * @param omitSecret This tells the provider not to persist the application&#39;s secret to state. Your app&#39;s `client_secret` will be recreated if this ever changes from true =&gt; false.
         * 
         * @return builder
         * 
         */
        public Builder omitSecret(Boolean omitSecret) {
            return omitSecret(Output.of(omitSecret));
        }

        /**
         * @param policyUri URI to web page providing client policy document.
         * 
         * @return builder
         * 
         */
        public Builder policyUri(@Nullable Output<String> policyUri) {
            $.policyUri = policyUri;
            return this;
        }

        /**
         * @param policyUri URI to web page providing client policy document.
         * 
         * @return builder
         * 
         */
        public Builder policyUri(String policyUri) {
            return policyUri(Output.of(policyUri));
        }

        /**
         * @param postLogoutRedirectUris List of URIs for redirection after logout.
         * 
         * @return builder
         * 
         */
        public Builder postLogoutRedirectUris(@Nullable Output<List<String>> postLogoutRedirectUris) {
            $.postLogoutRedirectUris = postLogoutRedirectUris;
            return this;
        }

        /**
         * @param postLogoutRedirectUris List of URIs for redirection after logout.
         * 
         * @return builder
         * 
         */
        public Builder postLogoutRedirectUris(List<String> postLogoutRedirectUris) {
            return postLogoutRedirectUris(Output.of(postLogoutRedirectUris));
        }

        /**
         * @param postLogoutRedirectUris List of URIs for redirection after logout.
         * 
         * @return builder
         * 
         */
        public Builder postLogoutRedirectUris(String... postLogoutRedirectUris) {
            return postLogoutRedirectUris(List.of(postLogoutRedirectUris));
        }

        /**
         * @param profile Custom JSON that represents an OAuth application&#39;s profile.
         * 
         * @return builder
         * 
         */
        public Builder profile(@Nullable Output<String> profile) {
            $.profile = profile;
            return this;
        }

        /**
         * @param profile Custom JSON that represents an OAuth application&#39;s profile.
         * 
         * @return builder
         * 
         */
        public Builder profile(String profile) {
            return profile(Output.of(profile));
        }

        /**
         * @param redirectUris List of URIs for use in the redirect-based flow. This is required for all application types except service.
         * 
         * @return builder
         * 
         */
        public Builder redirectUris(@Nullable Output<List<String>> redirectUris) {
            $.redirectUris = redirectUris;
            return this;
        }

        /**
         * @param redirectUris List of URIs for use in the redirect-based flow. This is required for all application types except service.
         * 
         * @return builder
         * 
         */
        public Builder redirectUris(List<String> redirectUris) {
            return redirectUris(Output.of(redirectUris));
        }

        /**
         * @param redirectUris List of URIs for use in the redirect-based flow. This is required for all application types except service.
         * 
         * @return builder
         * 
         */
        public Builder redirectUris(String... redirectUris) {
            return redirectUris(List.of(redirectUris));
        }

        /**
         * @param refreshTokenLeeway Grace period for token rotation. Valid values: 0 to 60 seconds.
         * 
         * @return builder
         * 
         */
        public Builder refreshTokenLeeway(@Nullable Output<Integer> refreshTokenLeeway) {
            $.refreshTokenLeeway = refreshTokenLeeway;
            return this;
        }

        /**
         * @param refreshTokenLeeway Grace period for token rotation. Valid values: 0 to 60 seconds.
         * 
         * @return builder
         * 
         */
        public Builder refreshTokenLeeway(Integer refreshTokenLeeway) {
            return refreshTokenLeeway(Output.of(refreshTokenLeeway));
        }

        /**
         * @param refreshTokenRotation Refresh token rotation behavior. Valid values: `&#34;STATIC&#34;` or `&#34;ROTATE&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder refreshTokenRotation(@Nullable Output<String> refreshTokenRotation) {
            $.refreshTokenRotation = refreshTokenRotation;
            return this;
        }

        /**
         * @param refreshTokenRotation Refresh token rotation behavior. Valid values: `&#34;STATIC&#34;` or `&#34;ROTATE&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder refreshTokenRotation(String refreshTokenRotation) {
            return refreshTokenRotation(Output.of(refreshTokenRotation));
        }

        /**
         * @param responseTypes List of OAuth 2.0 response type strings.
         * 
         * @return builder
         * 
         */
        public Builder responseTypes(@Nullable Output<List<String>> responseTypes) {
            $.responseTypes = responseTypes;
            return this;
        }

        /**
         * @param responseTypes List of OAuth 2.0 response type strings.
         * 
         * @return builder
         * 
         */
        public Builder responseTypes(List<String> responseTypes) {
            return responseTypes(Output.of(responseTypes));
        }

        /**
         * @param responseTypes List of OAuth 2.0 response type strings.
         * 
         * @return builder
         * 
         */
        public Builder responseTypes(String... responseTypes) {
            return responseTypes(List.of(responseTypes));
        }

        /**
         * @param signOnMode Sign-on mode of application.
         * 
         * @return builder
         * 
         */
        public Builder signOnMode(@Nullable Output<String> signOnMode) {
            $.signOnMode = signOnMode;
            return this;
        }

        /**
         * @param signOnMode Sign-on mode of application.
         * 
         * @return builder
         * 
         */
        public Builder signOnMode(String signOnMode) {
            return signOnMode(Output.of(signOnMode));
        }

        /**
         * @param skipGroups Indicator that allows the app to skip `groups` sync (it&#39;s also can be provided during import). Default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder skipGroups(@Nullable Output<Boolean> skipGroups) {
            $.skipGroups = skipGroups;
            return this;
        }

        /**
         * @param skipGroups Indicator that allows the app to skip `groups` sync (it&#39;s also can be provided during import). Default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder skipGroups(Boolean skipGroups) {
            return skipGroups(Output.of(skipGroups));
        }

        /**
         * @param skipUsers Indicator that allows the app to skip `users` sync (it&#39;s also can be provided during import). Default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder skipUsers(@Nullable Output<Boolean> skipUsers) {
            $.skipUsers = skipUsers;
            return this;
        }

        /**
         * @param skipUsers Indicator that allows the app to skip `users` sync (it&#39;s also can be provided during import). Default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder skipUsers(Boolean skipUsers) {
            return skipUsers(Output.of(skipUsers));
        }

        /**
         * @param status The status of the application, by default, it is `&#34;ACTIVE&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the application, by default, it is `&#34;ACTIVE&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tokenEndpointAuthMethod Requested authentication method for the token endpoint. It can be set to `&#34;none&#34;`, `&#34;client_secret_post&#34;`, `&#34;client_secret_basic&#34;`, `&#34;client_secret_jwt&#34;`, `&#34;private_key_jwt&#34;`. To enable PKCE, set this to `&#34;none&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder tokenEndpointAuthMethod(@Nullable Output<String> tokenEndpointAuthMethod) {
            $.tokenEndpointAuthMethod = tokenEndpointAuthMethod;
            return this;
        }

        /**
         * @param tokenEndpointAuthMethod Requested authentication method for the token endpoint. It can be set to `&#34;none&#34;`, `&#34;client_secret_post&#34;`, `&#34;client_secret_basic&#34;`, `&#34;client_secret_jwt&#34;`, `&#34;private_key_jwt&#34;`. To enable PKCE, set this to `&#34;none&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder tokenEndpointAuthMethod(String tokenEndpointAuthMethod) {
            return tokenEndpointAuthMethod(Output.of(tokenEndpointAuthMethod));
        }

        /**
         * @param tosUri URI to web page providing client tos (terms of service).
         * 
         * @return builder
         * 
         */
        public Builder tosUri(@Nullable Output<String> tosUri) {
            $.tosUri = tosUri;
            return this;
        }

        /**
         * @param tosUri URI to web page providing client tos (terms of service).
         * 
         * @return builder
         * 
         */
        public Builder tosUri(String tosUri) {
            return tosUri(Output.of(tosUri));
        }

        /**
         * @param type The type of OAuth application. Valid values: `&#34;web&#34;`, `&#34;native&#34;`, `&#34;browser&#34;`, `&#34;service&#34;`. For SPA apps use `browser`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of OAuth application. Valid values: `&#34;web&#34;`, `&#34;native&#34;`, `&#34;browser&#34;`, `&#34;service&#34;`. For SPA apps use `browser`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param userNameTemplate Username template. Default: `&#34;${source.login}&#34;`
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplate(@Nullable Output<String> userNameTemplate) {
            $.userNameTemplate = userNameTemplate;
            return this;
        }

        /**
         * @param userNameTemplate Username template. Default: `&#34;${source.login}&#34;`
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplate(String userNameTemplate) {
            return userNameTemplate(Output.of(userNameTemplate));
        }

        /**
         * @param userNameTemplatePushStatus Push username on update. Valid values: `&#34;PUSH&#34;` and `&#34;DONT_PUSH&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplatePushStatus(@Nullable Output<String> userNameTemplatePushStatus) {
            $.userNameTemplatePushStatus = userNameTemplatePushStatus;
            return this;
        }

        /**
         * @param userNameTemplatePushStatus Push username on update. Valid values: `&#34;PUSH&#34;` and `&#34;DONT_PUSH&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplatePushStatus(String userNameTemplatePushStatus) {
            return userNameTemplatePushStatus(Output.of(userNameTemplatePushStatus));
        }

        /**
         * @param userNameTemplateSuffix Username template suffix.
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplateSuffix(@Nullable Output<String> userNameTemplateSuffix) {
            $.userNameTemplateSuffix = userNameTemplateSuffix;
            return this;
        }

        /**
         * @param userNameTemplateSuffix Username template suffix.
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplateSuffix(String userNameTemplateSuffix) {
            return userNameTemplateSuffix(Output.of(userNameTemplateSuffix));
        }

        /**
         * @param userNameTemplateType Username template type. Default: `&#34;BUILT_IN&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplateType(@Nullable Output<String> userNameTemplateType) {
            $.userNameTemplateType = userNameTemplateType;
            return this;
        }

        /**
         * @param userNameTemplateType Username template type. Default: `&#34;BUILT_IN&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplateType(String userNameTemplateType) {
            return userNameTemplateType(Output.of(userNameTemplateType));
        }

        /**
         * @param users The users assigned to the application. It is recommended not to use this and instead use `okta.app.User`.
         * - `DEPRECATED`: Please replace usage with the `okta.app.User` resource.
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
        public Builder users(@Nullable Output<List<OAuthUserArgs>> users) {
            $.users = users;
            return this;
        }

        /**
         * @param users The users assigned to the application. It is recommended not to use this and instead use `okta.app.User`.
         * - `DEPRECATED`: Please replace usage with the `okta.app.User` resource.
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
        public Builder users(List<OAuthUserArgs> users) {
            return users(Output.of(users));
        }

        /**
         * @param users The users assigned to the application. It is recommended not to use this and instead use `okta.app.User`.
         * - `DEPRECATED`: Please replace usage with the `okta.app.User` resource.
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
        public Builder users(OAuthUserArgs... users) {
            return users(List.of(users));
        }

        /**
         * @param wildcardRedirect *Early Access Property*. Indicates if the client is allowed to use wildcard matching of `redirect_uris`. Valid values: `&#34;DISABLED&#34;`, `&#34;SUBDOMAIN&#34;`. Default value is `&#34;DISABLED&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder wildcardRedirect(@Nullable Output<String> wildcardRedirect) {
            $.wildcardRedirect = wildcardRedirect;
            return this;
        }

        /**
         * @param wildcardRedirect *Early Access Property*. Indicates if the client is allowed to use wildcard matching of `redirect_uris`. Valid values: `&#34;DISABLED&#34;`, `&#34;SUBDOMAIN&#34;`. Default value is `&#34;DISABLED&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder wildcardRedirect(String wildcardRedirect) {
            return wildcardRedirect(Output.of(wildcardRedirect));
        }

        public OAuthState build() {
            return $;
        }
    }

}

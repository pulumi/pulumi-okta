// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetLogStreamSettings extends com.pulumi.resources.InvokeArgs {

    public static final GetLogStreamSettings Empty = new GetLogStreamSettings();

    /**
     * AWS account ID. Required only for &#39;aws_eventbridge&#39; type
     * 
     */
    @Import(name="accountId", required=true)
    private String accountId;

    /**
     * @return AWS account ID. Required only for &#39;aws_eventbridge&#39; type
     * 
     */
    public String accountId() {
        return this.accountId;
    }

    /**
     * Edition of the Splunk Cloud instance. Could be one of: &#39;aws&#39;, &#39;aws*govcloud&#39;, &#39;gcp&#39;. Required only for &#39;splunk*cloud_logstreaming&#39; type
     * 
     */
    @Import(name="edition", required=true)
    private String edition;

    /**
     * @return Edition of the Splunk Cloud instance. Could be one of: &#39;aws&#39;, &#39;aws*govcloud&#39;, &#39;gcp&#39;. Required only for &#39;splunk*cloud_logstreaming&#39; type
     * 
     */
    public String edition() {
        return this.edition;
    }

    /**
     * An alphanumeric name (no spaces) to identify this event source in AWS EventBridge. Required only for &#39;aws_eventbridge&#39; type
     * 
     */
    @Import(name="eventSourceName", required=true)
    private String eventSourceName;

    /**
     * @return An alphanumeric name (no spaces) to identify this event source in AWS EventBridge. Required only for &#39;aws_eventbridge&#39; type
     * 
     */
    public String eventSourceName() {
        return this.eventSourceName;
    }

    /**
     * The domain name for Splunk Cloud instance. Don&#39;t include http or https in the string. For example: &#39;acme.splunkcloud.com&#39;. Required only for &#39;splunk*cloud*logstreaming&#39; type
     * 
     */
    @Import(name="host", required=true)
    private String host;

    /**
     * @return The domain name for Splunk Cloud instance. Don&#39;t include http or https in the string. For example: &#39;acme.splunkcloud.com&#39;. Required only for &#39;splunk*cloud*logstreaming&#39; type
     * 
     */
    public String host() {
        return this.host;
    }

    /**
     * The destination AWS region where event source is located. Required only for &#39;aws_eventbridge&#39; type
     * 
     */
    @Import(name="region", required=true)
    private String region;

    /**
     * @return The destination AWS region where event source is located. Required only for &#39;aws_eventbridge&#39; type
     * 
     */
    public String region() {
        return this.region;
    }

    /**
     * The HEC token for your Splunk Cloud HTTP Event Collector. Required only for &#39;splunk*cloud*logstreaming&#39; type
     * 
     */
    @Import(name="token", required=true)
    private String token;

    /**
     * @return The HEC token for your Splunk Cloud HTTP Event Collector. Required only for &#39;splunk*cloud*logstreaming&#39; type
     * 
     */
    public String token() {
        return this.token;
    }

    private GetLogStreamSettings() {}

    private GetLogStreamSettings(GetLogStreamSettings $) {
        this.accountId = $.accountId;
        this.edition = $.edition;
        this.eventSourceName = $.eventSourceName;
        this.host = $.host;
        this.region = $.region;
        this.token = $.token;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLogStreamSettings defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLogStreamSettings $;

        public Builder() {
            $ = new GetLogStreamSettings();
        }

        public Builder(GetLogStreamSettings defaults) {
            $ = new GetLogStreamSettings(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId AWS account ID. Required only for &#39;aws_eventbridge&#39; type
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param edition Edition of the Splunk Cloud instance. Could be one of: &#39;aws&#39;, &#39;aws*govcloud&#39;, &#39;gcp&#39;. Required only for &#39;splunk*cloud_logstreaming&#39; type
         * 
         * @return builder
         * 
         */
        public Builder edition(String edition) {
            $.edition = edition;
            return this;
        }

        /**
         * @param eventSourceName An alphanumeric name (no spaces) to identify this event source in AWS EventBridge. Required only for &#39;aws_eventbridge&#39; type
         * 
         * @return builder
         * 
         */
        public Builder eventSourceName(String eventSourceName) {
            $.eventSourceName = eventSourceName;
            return this;
        }

        /**
         * @param host The domain name for Splunk Cloud instance. Don&#39;t include http or https in the string. For example: &#39;acme.splunkcloud.com&#39;. Required only for &#39;splunk*cloud*logstreaming&#39; type
         * 
         * @return builder
         * 
         */
        public Builder host(String host) {
            $.host = host;
            return this;
        }

        /**
         * @param region The destination AWS region where event source is located. Required only for &#39;aws_eventbridge&#39; type
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            $.region = region;
            return this;
        }

        /**
         * @param token The HEC token for your Splunk Cloud HTTP Event Collector. Required only for &#39;splunk*cloud*logstreaming&#39; type
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            $.token = token;
            return this;
        }

        public GetLogStreamSettings build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetLogStreamSettings", "accountId");
            }
            if ($.edition == null) {
                throw new MissingRequiredPropertyException("GetLogStreamSettings", "edition");
            }
            if ($.eventSourceName == null) {
                throw new MissingRequiredPropertyException("GetLogStreamSettings", "eventSourceName");
            }
            if ($.host == null) {
                throw new MissingRequiredPropertyException("GetLogStreamSettings", "host");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("GetLogStreamSettings", "region");
            }
            if ($.token == null) {
                throw new MissingRequiredPropertyException("GetLogStreamSettings", "token");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNetworkZonePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNetworkZonePlainArgs Empty = new GetNetworkZonePlainArgs();

    /**
     * Array of locations ISO-3166-1(2) excluded. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC_V2`
     * 
     */
    @Import(name="dynamicLocationsExcludes")
    private @Nullable List<String> dynamicLocationsExcludes;

    /**
     * @return Array of locations ISO-3166-1(2) excluded. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC_V2`
     * 
     */
    public Optional<List<String>> dynamicLocationsExcludes() {
        return Optional.ofNullable(this.dynamicLocationsExcludes);
    }

    /**
     * ID of the network zone to retrieve, conflicts with `name`.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return ID of the network zone to retrieve, conflicts with `name`.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * List of ip service excluded. Use with type `DYNAMIC_V2`
     * 
     */
    @Import(name="ipServiceCategoriesExcludes")
    private @Nullable List<String> ipServiceCategoriesExcludes;

    /**
     * @return List of ip service excluded. Use with type `DYNAMIC_V2`
     * 
     */
    public Optional<List<String>> ipServiceCategoriesExcludes() {
        return Optional.ofNullable(this.ipServiceCategoriesExcludes);
    }

    /**
     * List of ip service included. Use with type `DYNAMIC_V2`
     * 
     */
    @Import(name="ipServiceCategoriesIncludes")
    private @Nullable List<String> ipServiceCategoriesIncludes;

    /**
     * @return List of ip service included. Use with type `DYNAMIC_V2`
     * 
     */
    public Optional<List<String>> ipServiceCategoriesIncludes() {
        return Optional.ofNullable(this.ipServiceCategoriesIncludes);
    }

    /**
     * Name of the network zone to retrieve, conflicts with `id`.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the network zone to retrieve, conflicts with `id`.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    private GetNetworkZonePlainArgs() {}

    private GetNetworkZonePlainArgs(GetNetworkZonePlainArgs $) {
        this.dynamicLocationsExcludes = $.dynamicLocationsExcludes;
        this.id = $.id;
        this.ipServiceCategoriesExcludes = $.ipServiceCategoriesExcludes;
        this.ipServiceCategoriesIncludes = $.ipServiceCategoriesIncludes;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkZonePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkZonePlainArgs $;

        public Builder() {
            $ = new GetNetworkZonePlainArgs();
        }

        public Builder(GetNetworkZonePlainArgs defaults) {
            $ = new GetNetworkZonePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dynamicLocationsExcludes Array of locations ISO-3166-1(2) excluded. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC_V2`
         * 
         * @return builder
         * 
         */
        public Builder dynamicLocationsExcludes(@Nullable List<String> dynamicLocationsExcludes) {
            $.dynamicLocationsExcludes = dynamicLocationsExcludes;
            return this;
        }

        /**
         * @param dynamicLocationsExcludes Array of locations ISO-3166-1(2) excluded. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC_V2`
         * 
         * @return builder
         * 
         */
        public Builder dynamicLocationsExcludes(String... dynamicLocationsExcludes) {
            return dynamicLocationsExcludes(List.of(dynamicLocationsExcludes));
        }

        /**
         * @param id ID of the network zone to retrieve, conflicts with `name`.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param ipServiceCategoriesExcludes List of ip service excluded. Use with type `DYNAMIC_V2`
         * 
         * @return builder
         * 
         */
        public Builder ipServiceCategoriesExcludes(@Nullable List<String> ipServiceCategoriesExcludes) {
            $.ipServiceCategoriesExcludes = ipServiceCategoriesExcludes;
            return this;
        }

        /**
         * @param ipServiceCategoriesExcludes List of ip service excluded. Use with type `DYNAMIC_V2`
         * 
         * @return builder
         * 
         */
        public Builder ipServiceCategoriesExcludes(String... ipServiceCategoriesExcludes) {
            return ipServiceCategoriesExcludes(List.of(ipServiceCategoriesExcludes));
        }

        /**
         * @param ipServiceCategoriesIncludes List of ip service included. Use with type `DYNAMIC_V2`
         * 
         * @return builder
         * 
         */
        public Builder ipServiceCategoriesIncludes(@Nullable List<String> ipServiceCategoriesIncludes) {
            $.ipServiceCategoriesIncludes = ipServiceCategoriesIncludes;
            return this;
        }

        /**
         * @param ipServiceCategoriesIncludes List of ip service included. Use with type `DYNAMIC_V2`
         * 
         * @return builder
         * 
         */
        public Builder ipServiceCategoriesIncludes(String... ipServiceCategoriesIncludes) {
            return ipServiceCategoriesIncludes(List.of(ipServiceCategoriesIncludes));
        }

        /**
         * @param name Name of the network zone to retrieve, conflicts with `id`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public GetNetworkZonePlainArgs build() {
            return $;
        }
    }

}

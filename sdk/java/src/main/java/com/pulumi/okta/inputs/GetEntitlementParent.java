// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetEntitlementParent extends com.pulumi.resources.InvokeArgs {

    public static final GetEntitlementParent Empty = new GetEntitlementParent();

    /**
     * The Okta app.id of the resource.
     * 
     */
    @Import(name="externalId", required=true)
    private String externalId;

    /**
     * @return The Okta app.id of the resource.
     * 
     */
    public String externalId() {
        return this.externalId;
    }

    /**
     * The type of resource.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The type of resource.
     * 
     */
    public String type() {
        return this.type;
    }

    private GetEntitlementParent() {}

    private GetEntitlementParent(GetEntitlementParent $) {
        this.externalId = $.externalId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEntitlementParent defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEntitlementParent $;

        public Builder() {
            $ = new GetEntitlementParent();
        }

        public Builder(GetEntitlementParent defaults) {
            $ = new GetEntitlementParent(Objects.requireNonNull(defaults));
        }

        /**
         * @param externalId The Okta app.id of the resource.
         * 
         * @return builder
         * 
         */
        public Builder externalId(String externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param type The type of resource.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetEntitlementParent build() {
            if ($.externalId == null) {
                throw new MissingRequiredPropertyException("GetEntitlementParent", "externalId");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetEntitlementParent", "type");
            }
            return $;
        }
    }

}

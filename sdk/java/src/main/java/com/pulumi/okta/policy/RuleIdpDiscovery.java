// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.policy;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.policy.RuleIdpDiscoveryArgs;
import com.pulumi.okta.policy.inputs.RuleIdpDiscoveryState;
import com.pulumi.okta.policy.outputs.RuleIdpDiscoveryAppExclude;
import com.pulumi.okta.policy.outputs.RuleIdpDiscoveryAppInclude;
import com.pulumi.okta.policy.outputs.RuleIdpDiscoveryPlatformInclude;
import com.pulumi.okta.policy.outputs.RuleIdpDiscoveryUserIdentifierPattern;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="okta:policy/ruleIdpDiscovery:RuleIdpDiscovery")
public class RuleIdpDiscovery extends com.pulumi.resources.CustomResource {
    /**
     * Applications to exclude in discovery rule
     * 
     */
    @Export(name="appExcludes", refs={List.class,RuleIdpDiscoveryAppExclude.class}, tree="[0,1]")
    private Output</* @Nullable */ List<RuleIdpDiscoveryAppExclude>> appExcludes;

    /**
     * @return Applications to exclude in discovery rule
     * 
     */
    public Output<Optional<List<RuleIdpDiscoveryAppExclude>>> appExcludes() {
        return Codegen.optional(this.appExcludes);
    }
    /**
     * Applications to include in discovery rule
     * 
     */
    @Export(name="appIncludes", refs={List.class,RuleIdpDiscoveryAppInclude.class}, tree="[0,1]")
    private Output</* @Nullable */ List<RuleIdpDiscoveryAppInclude>> appIncludes;

    /**
     * @return Applications to include in discovery rule
     * 
     */
    public Output<Optional<List<RuleIdpDiscoveryAppInclude>>> appIncludes() {
        return Codegen.optional(this.appIncludes);
    }
    @Export(name="idpId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> idpId;

    public Output<Optional<String>> idpId() {
        return Codegen.optional(this.idpId);
    }
    @Export(name="idpType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> idpType;

    public Output<Optional<String>> idpType() {
        return Codegen.optional(this.idpType);
    }
    /**
     * Policy Rule Name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Policy Rule Name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Network selection mode: ANYWHERE, ZONE, ON*NETWORK, or OFF*NETWORK.
     * 
     */
    @Export(name="networkConnection", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> networkConnection;

    /**
     * @return Network selection mode: ANYWHERE, ZONE, ON*NETWORK, or OFF*NETWORK.
     * 
     */
    public Output<Optional<String>> networkConnection() {
        return Codegen.optional(this.networkConnection);
    }
    /**
     * The zones to exclude
     * 
     */
    @Export(name="networkExcludes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> networkExcludes;

    /**
     * @return The zones to exclude
     * 
     */
    public Output<Optional<List<String>>> networkExcludes() {
        return Codegen.optional(this.networkExcludes);
    }
    /**
     * The zones to include
     * 
     */
    @Export(name="networkIncludes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> networkIncludes;

    /**
     * @return The zones to include
     * 
     */
    public Output<Optional<List<String>>> networkIncludes() {
        return Codegen.optional(this.networkIncludes);
    }
    @Export(name="platformIncludes", refs={List.class,RuleIdpDiscoveryPlatformInclude.class}, tree="[0,1]")
    private Output</* @Nullable */ List<RuleIdpDiscoveryPlatformInclude>> platformIncludes;

    public Output<Optional<List<RuleIdpDiscoveryPlatformInclude>>> platformIncludes() {
        return Codegen.optional(this.platformIncludes);
    }
    /**
     * Policy ID of the Rule
     * 
     */
    @Export(name="policyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> policyId;

    /**
     * @return Policy ID of the Rule
     * 
     */
    public Output<Optional<String>> policyId() {
        return Codegen.optional(this.policyId);
    }
    /**
     * Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.
     * 
     */
    @Export(name="priority", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> priority;

    /**
     * @return Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.
     * 
     */
    public Output<Optional<Integer>> priority() {
        return Codegen.optional(this.priority);
    }
    /**
     * Policy Rule Status: ACTIVE or INACTIVE.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> status;

    /**
     * @return Policy Rule Status: ACTIVE or INACTIVE.
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    @Export(name="userIdentifierAttribute", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userIdentifierAttribute;

    public Output<Optional<String>> userIdentifierAttribute() {
        return Codegen.optional(this.userIdentifierAttribute);
    }
    @Export(name="userIdentifierPatterns", refs={List.class,RuleIdpDiscoveryUserIdentifierPattern.class}, tree="[0,1]")
    private Output</* @Nullable */ List<RuleIdpDiscoveryUserIdentifierPattern>> userIdentifierPatterns;

    public Output<Optional<List<RuleIdpDiscoveryUserIdentifierPattern>>> userIdentifierPatterns() {
        return Codegen.optional(this.userIdentifierPatterns);
    }
    @Export(name="userIdentifierType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userIdentifierType;

    public Output<Optional<String>> userIdentifierType() {
        return Codegen.optional(this.userIdentifierType);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RuleIdpDiscovery(String name) {
        this(name, RuleIdpDiscoveryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RuleIdpDiscovery(String name, @Nullable RuleIdpDiscoveryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RuleIdpDiscovery(String name, @Nullable RuleIdpDiscoveryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:policy/ruleIdpDiscovery:RuleIdpDiscovery", name, args == null ? RuleIdpDiscoveryArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RuleIdpDiscovery(String name, Output<String> id, @Nullable RuleIdpDiscoveryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:policy/ruleIdpDiscovery:RuleIdpDiscovery", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RuleIdpDiscovery get(String name, Output<String> id, @Nullable RuleIdpDiscoveryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RuleIdpDiscovery(name, id, state, options);
    }
}

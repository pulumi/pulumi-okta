// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.network;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZoneArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZoneArgs Empty = new ZoneArgs();

    /**
     * Format of each array value: a string representation of an ASN numeric value
     * 
     */
    @Import(name="asns")
    private @Nullable Output<List<String>> asns;

    /**
     * @return Format of each array value: a string representation of an ASN numeric value
     * 
     */
    public Optional<Output<List<String>>> asns() {
        return Optional.ofNullable(this.asns);
    }

    /**
     * Array of locations ISO-3166-1(2). Format code: countryCode OR countryCode-regionCode
     * 
     */
    @Import(name="dynamicLocations")
    private @Nullable Output<List<String>> dynamicLocations;

    /**
     * @return Array of locations ISO-3166-1(2). Format code: countryCode OR countryCode-regionCode
     * 
     */
    public Optional<Output<List<String>>> dynamicLocations() {
        return Optional.ofNullable(this.dynamicLocations);
    }

    /**
     * Type of proxy being controlled by this network zone
     * 
     */
    @Import(name="dynamicProxyType")
    private @Nullable Output<String> dynamicProxyType;

    /**
     * @return Type of proxy being controlled by this network zone
     * 
     */
    public Optional<Output<String>> dynamicProxyType() {
        return Optional.ofNullable(this.dynamicProxyType);
    }

    /**
     * Array of values in CIDR/range form depending on the way it&#39;s been declared (i.e. CIDR will contain /suffix). Please check API docs for examples
     * 
     */
    @Import(name="gateways")
    private @Nullable Output<List<String>> gateways;

    /**
     * @return Array of values in CIDR/range form depending on the way it&#39;s been declared (i.e. CIDR will contain /suffix). Please check API docs for examples
     * 
     */
    public Optional<Output<List<String>>> gateways() {
        return Optional.ofNullable(this.gateways);
    }

    /**
     * Name of the Network Zone Resource
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Network Zone Resource
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Array of values in CIDR/range form depending on the way it&#39;s been declared (i.e. CIDR will contain /suffix). Please check API docs for examples
     * 
     */
    @Import(name="proxies")
    private @Nullable Output<List<String>> proxies;

    /**
     * @return Array of values in CIDR/range form depending on the way it&#39;s been declared (i.e. CIDR will contain /suffix). Please check API docs for examples
     * 
     */
    public Optional<Output<List<String>>> proxies() {
        return Optional.ofNullable(this.proxies);
    }

    /**
     * Network Status - can either be ACTIVE or INACTIVE only
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Network Status - can either be ACTIVE or INACTIVE only
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Type of the Network Zone - can either be IP or DYNAMIC only
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of the Network Zone - can either be IP or DYNAMIC only
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * Zone&#39;s purpose: POLICY or BLOCKLIST
     * 
     */
    @Import(name="usage")
    private @Nullable Output<String> usage;

    /**
     * @return Zone&#39;s purpose: POLICY or BLOCKLIST
     * 
     */
    public Optional<Output<String>> usage() {
        return Optional.ofNullable(this.usage);
    }

    private ZoneArgs() {}

    private ZoneArgs(ZoneArgs $) {
        this.asns = $.asns;
        this.dynamicLocations = $.dynamicLocations;
        this.dynamicProxyType = $.dynamicProxyType;
        this.gateways = $.gateways;
        this.name = $.name;
        this.proxies = $.proxies;
        this.status = $.status;
        this.type = $.type;
        this.usage = $.usage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZoneArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZoneArgs $;

        public Builder() {
            $ = new ZoneArgs();
        }

        public Builder(ZoneArgs defaults) {
            $ = new ZoneArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param asns Format of each array value: a string representation of an ASN numeric value
         * 
         * @return builder
         * 
         */
        public Builder asns(@Nullable Output<List<String>> asns) {
            $.asns = asns;
            return this;
        }

        /**
         * @param asns Format of each array value: a string representation of an ASN numeric value
         * 
         * @return builder
         * 
         */
        public Builder asns(List<String> asns) {
            return asns(Output.of(asns));
        }

        /**
         * @param asns Format of each array value: a string representation of an ASN numeric value
         * 
         * @return builder
         * 
         */
        public Builder asns(String... asns) {
            return asns(List.of(asns));
        }

        /**
         * @param dynamicLocations Array of locations ISO-3166-1(2). Format code: countryCode OR countryCode-regionCode
         * 
         * @return builder
         * 
         */
        public Builder dynamicLocations(@Nullable Output<List<String>> dynamicLocations) {
            $.dynamicLocations = dynamicLocations;
            return this;
        }

        /**
         * @param dynamicLocations Array of locations ISO-3166-1(2). Format code: countryCode OR countryCode-regionCode
         * 
         * @return builder
         * 
         */
        public Builder dynamicLocations(List<String> dynamicLocations) {
            return dynamicLocations(Output.of(dynamicLocations));
        }

        /**
         * @param dynamicLocations Array of locations ISO-3166-1(2). Format code: countryCode OR countryCode-regionCode
         * 
         * @return builder
         * 
         */
        public Builder dynamicLocations(String... dynamicLocations) {
            return dynamicLocations(List.of(dynamicLocations));
        }

        /**
         * @param dynamicProxyType Type of proxy being controlled by this network zone
         * 
         * @return builder
         * 
         */
        public Builder dynamicProxyType(@Nullable Output<String> dynamicProxyType) {
            $.dynamicProxyType = dynamicProxyType;
            return this;
        }

        /**
         * @param dynamicProxyType Type of proxy being controlled by this network zone
         * 
         * @return builder
         * 
         */
        public Builder dynamicProxyType(String dynamicProxyType) {
            return dynamicProxyType(Output.of(dynamicProxyType));
        }

        /**
         * @param gateways Array of values in CIDR/range form depending on the way it&#39;s been declared (i.e. CIDR will contain /suffix). Please check API docs for examples
         * 
         * @return builder
         * 
         */
        public Builder gateways(@Nullable Output<List<String>> gateways) {
            $.gateways = gateways;
            return this;
        }

        /**
         * @param gateways Array of values in CIDR/range form depending on the way it&#39;s been declared (i.e. CIDR will contain /suffix). Please check API docs for examples
         * 
         * @return builder
         * 
         */
        public Builder gateways(List<String> gateways) {
            return gateways(Output.of(gateways));
        }

        /**
         * @param gateways Array of values in CIDR/range form depending on the way it&#39;s been declared (i.e. CIDR will contain /suffix). Please check API docs for examples
         * 
         * @return builder
         * 
         */
        public Builder gateways(String... gateways) {
            return gateways(List.of(gateways));
        }

        /**
         * @param name Name of the Network Zone Resource
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Network Zone Resource
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param proxies Array of values in CIDR/range form depending on the way it&#39;s been declared (i.e. CIDR will contain /suffix). Please check API docs for examples
         * 
         * @return builder
         * 
         */
        public Builder proxies(@Nullable Output<List<String>> proxies) {
            $.proxies = proxies;
            return this;
        }

        /**
         * @param proxies Array of values in CIDR/range form depending on the way it&#39;s been declared (i.e. CIDR will contain /suffix). Please check API docs for examples
         * 
         * @return builder
         * 
         */
        public Builder proxies(List<String> proxies) {
            return proxies(Output.of(proxies));
        }

        /**
         * @param proxies Array of values in CIDR/range form depending on the way it&#39;s been declared (i.e. CIDR will contain /suffix). Please check API docs for examples
         * 
         * @return builder
         * 
         */
        public Builder proxies(String... proxies) {
            return proxies(List.of(proxies));
        }

        /**
         * @param status Network Status - can either be ACTIVE or INACTIVE only
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Network Status - can either be ACTIVE or INACTIVE only
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param type Type of the Network Zone - can either be IP or DYNAMIC only
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the Network Zone - can either be IP or DYNAMIC only
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param usage Zone&#39;s purpose: POLICY or BLOCKLIST
         * 
         * @return builder
         * 
         */
        public Builder usage(@Nullable Output<String> usage) {
            $.usage = usage;
            return this;
        }

        /**
         * @param usage Zone&#39;s purpose: POLICY or BLOCKLIST
         * 
         * @return builder
         * 
         */
        public Builder usage(String usage) {
            return usage(Output.of(usage));
        }

        public ZoneArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("ZoneArgs", "type");
            }
            return $;
        }
    }

}

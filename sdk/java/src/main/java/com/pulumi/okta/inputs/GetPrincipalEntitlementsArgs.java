// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.okta.inputs.GetPrincipalEntitlementsDataArgs;
import com.pulumi.okta.inputs.GetPrincipalEntitlementsParentArgs;
import com.pulumi.okta.inputs.GetPrincipalEntitlementsTargetPrincipalArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPrincipalEntitlementsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPrincipalEntitlementsArgs Empty = new GetPrincipalEntitlementsArgs();

    /**
     * Principal entitlements list.
     * 
     */
    @Import(name="datas")
    private @Nullable Output<List<GetPrincipalEntitlementsDataArgs>> datas;

    /**
     * @return Principal entitlements list.
     * 
     */
    public Optional<Output<List<GetPrincipalEntitlementsDataArgs>>> datas() {
        return Optional.ofNullable(this.datas);
    }

    /**
     * Representation of a resource.
     * 
     */
    @Import(name="parent")
    private @Nullable Output<GetPrincipalEntitlementsParentArgs> parent;

    /**
     * @return Representation of a resource.
     * 
     */
    public Optional<Output<GetPrincipalEntitlementsParentArgs>> parent() {
        return Optional.ofNullable(this.parent);
    }

    /**
     * Representation of a principal.
     * 
     */
    @Import(name="targetPrincipal")
    private @Nullable Output<GetPrincipalEntitlementsTargetPrincipalArgs> targetPrincipal;

    /**
     * @return Representation of a principal.
     * 
     */
    public Optional<Output<GetPrincipalEntitlementsTargetPrincipalArgs>> targetPrincipal() {
        return Optional.ofNullable(this.targetPrincipal);
    }

    private GetPrincipalEntitlementsArgs() {}

    private GetPrincipalEntitlementsArgs(GetPrincipalEntitlementsArgs $) {
        this.datas = $.datas;
        this.parent = $.parent;
        this.targetPrincipal = $.targetPrincipal;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPrincipalEntitlementsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPrincipalEntitlementsArgs $;

        public Builder() {
            $ = new GetPrincipalEntitlementsArgs();
        }

        public Builder(GetPrincipalEntitlementsArgs defaults) {
            $ = new GetPrincipalEntitlementsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datas Principal entitlements list.
         * 
         * @return builder
         * 
         */
        public Builder datas(@Nullable Output<List<GetPrincipalEntitlementsDataArgs>> datas) {
            $.datas = datas;
            return this;
        }

        /**
         * @param datas Principal entitlements list.
         * 
         * @return builder
         * 
         */
        public Builder datas(List<GetPrincipalEntitlementsDataArgs> datas) {
            return datas(Output.of(datas));
        }

        /**
         * @param datas Principal entitlements list.
         * 
         * @return builder
         * 
         */
        public Builder datas(GetPrincipalEntitlementsDataArgs... datas) {
            return datas(List.of(datas));
        }

        /**
         * @param parent Representation of a resource.
         * 
         * @return builder
         * 
         */
        public Builder parent(@Nullable Output<GetPrincipalEntitlementsParentArgs> parent) {
            $.parent = parent;
            return this;
        }

        /**
         * @param parent Representation of a resource.
         * 
         * @return builder
         * 
         */
        public Builder parent(GetPrincipalEntitlementsParentArgs parent) {
            return parent(Output.of(parent));
        }

        /**
         * @param targetPrincipal Representation of a principal.
         * 
         * @return builder
         * 
         */
        public Builder targetPrincipal(@Nullable Output<GetPrincipalEntitlementsTargetPrincipalArgs> targetPrincipal) {
            $.targetPrincipal = targetPrincipal;
            return this;
        }

        /**
         * @param targetPrincipal Representation of a principal.
         * 
         * @return builder
         * 
         */
        public Builder targetPrincipal(GetPrincipalEntitlementsTargetPrincipalArgs targetPrincipal) {
            return targetPrincipal(Output.of(targetPrincipal));
        }

        public GetPrincipalEntitlementsArgs build() {
            return $;
        }
    }

}

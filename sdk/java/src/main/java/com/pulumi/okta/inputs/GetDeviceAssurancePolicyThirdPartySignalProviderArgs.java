// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.inputs.GetDeviceAssurancePolicyThirdPartySignalProviderDtcArgs;
import java.util.Objects;


public final class GetDeviceAssurancePolicyThirdPartySignalProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetDeviceAssurancePolicyThirdPartySignalProviderArgs Empty = new GetDeviceAssurancePolicyThirdPartySignalProviderArgs();

    @Import(name="dtc", required=true)
    private Output<GetDeviceAssurancePolicyThirdPartySignalProviderDtcArgs> dtc;

    public Output<GetDeviceAssurancePolicyThirdPartySignalProviderDtcArgs> dtc() {
        return this.dtc;
    }

    private GetDeviceAssurancePolicyThirdPartySignalProviderArgs() {}

    private GetDeviceAssurancePolicyThirdPartySignalProviderArgs(GetDeviceAssurancePolicyThirdPartySignalProviderArgs $) {
        this.dtc = $.dtc;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDeviceAssurancePolicyThirdPartySignalProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDeviceAssurancePolicyThirdPartySignalProviderArgs $;

        public Builder() {
            $ = new GetDeviceAssurancePolicyThirdPartySignalProviderArgs();
        }

        public Builder(GetDeviceAssurancePolicyThirdPartySignalProviderArgs defaults) {
            $ = new GetDeviceAssurancePolicyThirdPartySignalProviderArgs(Objects.requireNonNull(defaults));
        }

        public Builder dtc(Output<GetDeviceAssurancePolicyThirdPartySignalProviderDtcArgs> dtc) {
            $.dtc = dtc;
            return this;
        }

        public Builder dtc(GetDeviceAssurancePolicyThirdPartySignalProviderDtcArgs dtc) {
            return dtc(Output.of(dtc));
        }

        public GetDeviceAssurancePolicyThirdPartySignalProviderArgs build() {
            if ($.dtc == null) {
                throw new MissingRequiredPropertyException("GetDeviceAssurancePolicyThirdPartySignalProviderArgs", "dtc");
            }
            return $;
        }
    }

}

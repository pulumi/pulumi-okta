// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.app.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSamlAttributeStatement {
    /**
     * @return Type of group attribute filter.
     * 
     */
    private final String filterType;
    /**
     * @return Filter value to use.
     * 
     */
    private final String filterValue;
    /**
     * @return The name of the attribute statement.
     * 
     */
    private final String name;
    /**
     * @return The attribute namespace.
     * 
     */
    private final String namespace;
    /**
     * @return The type of attribute statement value.
     * 
     */
    private final String type;
    /**
     * @return Array of values to use.
     * 
     */
    private final List<String> values;

    @CustomType.Constructor
    private GetSamlAttributeStatement(
        @CustomType.Parameter("filterType") String filterType,
        @CustomType.Parameter("filterValue") String filterValue,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("namespace") String namespace,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("values") List<String> values) {
        this.filterType = filterType;
        this.filterValue = filterValue;
        this.name = name;
        this.namespace = namespace;
        this.type = type;
        this.values = values;
    }

    /**
     * @return Type of group attribute filter.
     * 
     */
    public String filterType() {
        return this.filterType;
    }
    /**
     * @return Filter value to use.
     * 
     */
    public String filterValue() {
        return this.filterValue;
    }
    /**
     * @return The name of the attribute statement.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The attribute namespace.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The type of attribute statement value.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Array of values to use.
     * 
     */
    public List<String> values() {
        return this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSamlAttributeStatement defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String filterType;
        private String filterValue;
        private String name;
        private String namespace;
        private String type;
        private List<String> values;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSamlAttributeStatement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filterType = defaults.filterType;
    	      this.filterValue = defaults.filterValue;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.type = defaults.type;
    	      this.values = defaults.values;
        }

        public Builder filterType(String filterType) {
            this.filterType = Objects.requireNonNull(filterType);
            return this;
        }
        public Builder filterValue(String filterValue) {
            this.filterValue = Objects.requireNonNull(filterValue);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder values(List<String> values) {
            this.values = Objects.requireNonNull(values);
            return this;
        }
        public Builder values(String... values) {
            return values(List.of(values));
        }        public GetSamlAttributeStatement build() {
            return new GetSamlAttributeStatement(filterType, filterValue, name, namespace, type, values);
        }
    }
}

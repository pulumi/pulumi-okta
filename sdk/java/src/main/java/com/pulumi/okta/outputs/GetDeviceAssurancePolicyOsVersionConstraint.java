// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.GetDeviceAssurancePolicyOsVersionConstraintDynamicVersionRequirement;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDeviceAssurancePolicyOsVersionConstraint {
    private GetDeviceAssurancePolicyOsVersionConstraintDynamicVersionRequirement dynamicVersionRequirement;
    private String majorVersionConstraint;

    private GetDeviceAssurancePolicyOsVersionConstraint() {}
    public GetDeviceAssurancePolicyOsVersionConstraintDynamicVersionRequirement dynamicVersionRequirement() {
        return this.dynamicVersionRequirement;
    }
    public String majorVersionConstraint() {
        return this.majorVersionConstraint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeviceAssurancePolicyOsVersionConstraint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetDeviceAssurancePolicyOsVersionConstraintDynamicVersionRequirement dynamicVersionRequirement;
        private String majorVersionConstraint;
        public Builder() {}
        public Builder(GetDeviceAssurancePolicyOsVersionConstraint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dynamicVersionRequirement = defaults.dynamicVersionRequirement;
    	      this.majorVersionConstraint = defaults.majorVersionConstraint;
        }

        @CustomType.Setter
        public Builder dynamicVersionRequirement(GetDeviceAssurancePolicyOsVersionConstraintDynamicVersionRequirement dynamicVersionRequirement) {
            if (dynamicVersionRequirement == null) {
              throw new MissingRequiredPropertyException("GetDeviceAssurancePolicyOsVersionConstraint", "dynamicVersionRequirement");
            }
            this.dynamicVersionRequirement = dynamicVersionRequirement;
            return this;
        }
        @CustomType.Setter
        public Builder majorVersionConstraint(String majorVersionConstraint) {
            if (majorVersionConstraint == null) {
              throw new MissingRequiredPropertyException("GetDeviceAssurancePolicyOsVersionConstraint", "majorVersionConstraint");
            }
            this.majorVersionConstraint = majorVersionConstraint;
            return this;
        }
        public GetDeviceAssurancePolicyOsVersionConstraint build() {
            final var _resultValue = new GetDeviceAssurancePolicyOsVersionConstraint();
            _resultValue.dynamicVersionRequirement = dynamicVersionRequirement;
            _resultValue.majorVersionConstraint = majorVersionConstraint;
            return _resultValue;
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.AuthenticatorArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.AuthenticatorState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="okta:index/authenticator:Authenticator")
public class Authenticator extends com.pulumi.resources.CustomResource {
    /**
     * A human-readable string that identifies the Authenticator
     * 
     */
    @Export(name="key", refs={String.class}, tree="[0]")
    private Output<String> key;

    /**
     * @return A human-readable string that identifies the Authenticator
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * Display name of the Authenticator
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Display name of the Authenticator
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The RADIUS server port (for example 1812). This is defined when the On-Prem RADIUS server is configured
     * 
     */
    @Export(name="providerAuthPort", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> providerAuthPort;

    /**
     * @return The RADIUS server port (for example 1812). This is defined when the On-Prem RADIUS server is configured
     * 
     */
    public Output<Optional<Integer>> providerAuthPort() {
        return Codegen.optional(this.providerAuthPort);
    }
    /**
     * The Duo Security API hostname
     * 
     */
    @Export(name="providerHost", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> providerHost;

    /**
     * @return The Duo Security API hostname
     * 
     */
    public Output<Optional<String>> providerHost() {
        return Codegen.optional(this.providerHost);
    }
    /**
     * Server host name or IP address
     * 
     */
    @Export(name="providerHostname", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> providerHostname;

    /**
     * @return Server host name or IP address
     * 
     */
    public Output<Optional<String>> providerHostname() {
        return Codegen.optional(this.providerHostname);
    }
    /**
     * App Instance ID.
     * 
     */
    @Export(name="providerInstanceId", refs={String.class}, tree="[0]")
    private Output<String> providerInstanceId;

    /**
     * @return App Instance ID.
     * 
     */
    public Output<String> providerInstanceId() {
        return this.providerInstanceId;
    }
    /**
     * The Duo Security integration key
     * 
     */
    @Export(name="providerIntegrationKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> providerIntegrationKey;

    /**
     * @return The Duo Security integration key
     * 
     */
    public Output<Optional<String>> providerIntegrationKey() {
        return Codegen.optional(this.providerIntegrationKey);
    }
    /**
     * Provider in JSON format
     * 
     */
    @Export(name="providerJson", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> providerJson;

    /**
     * @return Provider in JSON format
     * 
     */
    public Output<Optional<String>> providerJson() {
        return Codegen.optional(this.providerJson);
    }
    /**
     * The Duo Security secret key
     * 
     */
    @Export(name="providerSecretKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> providerSecretKey;

    /**
     * @return The Duo Security secret key
     * 
     */
    public Output<Optional<String>> providerSecretKey() {
        return Codegen.optional(this.providerSecretKey);
    }
    /**
     * An authentication key that must be defined when the RADIUS server is configured, and must be the same on both the RADIUS client and server.
     * 
     */
    @Export(name="providerSharedSecret", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> providerSharedSecret;

    /**
     * @return An authentication key that must be defined when the RADIUS server is configured, and must be the same on both the RADIUS client and server.
     * 
     */
    public Output<Optional<String>> providerSharedSecret() {
        return Codegen.optional(this.providerSharedSecret);
    }
    /**
     * Provider type. Supported value for Duo: `DUO`. Supported value for Custom App: `PUSH`
     * 
     */
    @Export(name="providerType", refs={String.class}, tree="[0]")
    private Output<String> providerType;

    /**
     * @return Provider type. Supported value for Duo: `DUO`. Supported value for Custom App: `PUSH`
     * 
     */
    public Output<String> providerType() {
        return this.providerType;
    }
    /**
     * Format expected by the provider
     * 
     */
    @Export(name="providerUserNameTemplate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> providerUserNameTemplate;

    /**
     * @return Format expected by the provider
     * 
     */
    public Output<Optional<String>> providerUserNameTemplate() {
        return Codegen.optional(this.providerUserNameTemplate);
    }
    /**
     * Authenticator settings in JSON format
     * 
     */
    @Export(name="settings", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> settings;

    /**
     * @return Authenticator settings in JSON format
     * 
     */
    public Output<Optional<String>> settings() {
        return Codegen.optional(this.settings);
    }
    /**
     * Authenticator status: ACTIVE or INACTIVE
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> status;

    /**
     * @return Authenticator status: ACTIVE or INACTIVE
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * The type of Authenticator
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of Authenticator
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Authenticator(String name) {
        this(name, AuthenticatorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Authenticator(String name, AuthenticatorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Authenticator(String name, AuthenticatorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/authenticator:Authenticator", name, args == null ? AuthenticatorArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Authenticator(String name, Output<String> id, @Nullable AuthenticatorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/authenticator:Authenticator", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "providerSharedSecret"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Authenticator get(String name, Output<String> id, @Nullable AuthenticatorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Authenticator(name, id, state, options);
    }
}

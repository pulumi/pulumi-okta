// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.okta.inputs.RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RequestSettingResourceRequestOnBehalfOfSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final RequestSettingResourceRequestOnBehalfOfSettingsArgs Empty = new RequestSettingResourceRequestOnBehalfOfSettingsArgs();

    /**
     * Indicates that users who can request this resource could also request for another requester of the same resource. This property can only be true.
     * 
     */
    @Import(name="allowed")
    private @Nullable Output<Boolean> allowed;

    /**
     * @return Indicates that users who can request this resource could also request for another requester of the same resource. This property can only be true.
     * 
     */
    public Optional<Output<Boolean>> allowed() {
        return Optional.ofNullable(this.allowed);
    }

    /**
     * Which requesters the resource requester can request on behalf of. Enum: `DIRECT_REPORT`.
     * 
     */
    @Import(name="onlyFors")
    private @Nullable Output<List<RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs>> onlyFors;

    /**
     * @return Which requesters the resource requester can request on behalf of. Enum: `DIRECT_REPORT`.
     * 
     */
    public Optional<Output<List<RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs>>> onlyFors() {
        return Optional.ofNullable(this.onlyFors);
    }

    private RequestSettingResourceRequestOnBehalfOfSettingsArgs() {}

    private RequestSettingResourceRequestOnBehalfOfSettingsArgs(RequestSettingResourceRequestOnBehalfOfSettingsArgs $) {
        this.allowed = $.allowed;
        this.onlyFors = $.onlyFors;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RequestSettingResourceRequestOnBehalfOfSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RequestSettingResourceRequestOnBehalfOfSettingsArgs $;

        public Builder() {
            $ = new RequestSettingResourceRequestOnBehalfOfSettingsArgs();
        }

        public Builder(RequestSettingResourceRequestOnBehalfOfSettingsArgs defaults) {
            $ = new RequestSettingResourceRequestOnBehalfOfSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowed Indicates that users who can request this resource could also request for another requester of the same resource. This property can only be true.
         * 
         * @return builder
         * 
         */
        public Builder allowed(@Nullable Output<Boolean> allowed) {
            $.allowed = allowed;
            return this;
        }

        /**
         * @param allowed Indicates that users who can request this resource could also request for another requester of the same resource. This property can only be true.
         * 
         * @return builder
         * 
         */
        public Builder allowed(Boolean allowed) {
            return allowed(Output.of(allowed));
        }

        /**
         * @param onlyFors Which requesters the resource requester can request on behalf of. Enum: `DIRECT_REPORT`.
         * 
         * @return builder
         * 
         */
        public Builder onlyFors(@Nullable Output<List<RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs>> onlyFors) {
            $.onlyFors = onlyFors;
            return this;
        }

        /**
         * @param onlyFors Which requesters the resource requester can request on behalf of. Enum: `DIRECT_REPORT`.
         * 
         * @return builder
         * 
         */
        public Builder onlyFors(List<RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs> onlyFors) {
            return onlyFors(Output.of(onlyFors));
        }

        /**
         * @param onlyFors Which requesters the resource requester can request on behalf of. Enum: `DIRECT_REPORT`.
         * 
         * @return builder
         * 
         */
        public Builder onlyFors(RequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs... onlyFors) {
            return onlyFors(List.of(onlyFors));
        }

        public RequestSettingResourceRequestOnBehalfOfSettingsArgs build() {
            return $;
        }
    }

}

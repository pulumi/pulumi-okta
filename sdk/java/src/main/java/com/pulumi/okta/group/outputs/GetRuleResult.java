// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.group.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRuleResult {
    /**
     * @return The expression type to use to invoke the rule.
     * 
     */
    private String expressionType;
    /**
     * @return The expression value.
     * 
     */
    private String expressionValue;
    /**
     * @return The list of group ids to assign the users to.
     * 
     */
    private List<String> groupAssignments;
    /**
     * @return The ID of the Group Rule.
     * 
     */
    private @Nullable String id;
    /**
     * @return The name of the Group Rule.
     * 
     */
    private @Nullable String name;
    /**
     * @return The status of the group rule.
     * 
     */
    private @Nullable String status;
    /**
     * @return The list of user IDs that would be excluded when rules are processed.
     * 
     */
    private List<String> usersExcludeds;

    private GetRuleResult() {}
    /**
     * @return The expression type to use to invoke the rule.
     * 
     */
    public String expressionType() {
        return this.expressionType;
    }
    /**
     * @return The expression value.
     * 
     */
    public String expressionValue() {
        return this.expressionValue;
    }
    /**
     * @return The list of group ids to assign the users to.
     * 
     */
    public List<String> groupAssignments() {
        return this.groupAssignments;
    }
    /**
     * @return The ID of the Group Rule.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The name of the Group Rule.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The status of the group rule.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The list of user IDs that would be excluded when rules are processed.
     * 
     */
    public List<String> usersExcludeds() {
        return this.usersExcludeds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String expressionType;
        private String expressionValue;
        private List<String> groupAssignments;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable String status;
        private List<String> usersExcludeds;
        public Builder() {}
        public Builder(GetRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expressionType = defaults.expressionType;
    	      this.expressionValue = defaults.expressionValue;
    	      this.groupAssignments = defaults.groupAssignments;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
    	      this.usersExcludeds = defaults.usersExcludeds;
        }

        @CustomType.Setter
        public Builder expressionType(String expressionType) {
            this.expressionType = Objects.requireNonNull(expressionType);
            return this;
        }
        @CustomType.Setter
        public Builder expressionValue(String expressionValue) {
            this.expressionValue = Objects.requireNonNull(expressionValue);
            return this;
        }
        @CustomType.Setter
        public Builder groupAssignments(List<String> groupAssignments) {
            this.groupAssignments = Objects.requireNonNull(groupAssignments);
            return this;
        }
        public Builder groupAssignments(String... groupAssignments) {
            return groupAssignments(List.of(groupAssignments));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder usersExcludeds(List<String> usersExcludeds) {
            this.usersExcludeds = Objects.requireNonNull(usersExcludeds);
            return this;
        }
        public Builder usersExcludeds(String... usersExcludeds) {
            return usersExcludeds(List.of(usersExcludeds));
        }
        public GetRuleResult build() {
            final var o = new GetRuleResult();
            o.expressionType = expressionType;
            o.expressionValue = expressionValue;
            o.groupAssignments = groupAssignments;
            o.id = id;
            o.name = name;
            o.status = status;
            o.usersExcludeds = usersExcludeds;
            return o;
        }
    }
}

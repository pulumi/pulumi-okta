// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.auth;

import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.auth.ServerPolicyRuleArgs;
import com.pulumi.okta.auth.inputs.ServerPolicyRuleState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.auth.ServerPolicyRule;
 * import com.pulumi.okta.auth.ServerPolicyRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ServerPolicyRule("example", ServerPolicyRuleArgs.builder()
 *             .authServerId("<auth server id>")
 *             .policyId("<auth server policy id>")
 *             .status("ACTIVE")
 *             .name("example")
 *             .priority(1)
 *             .groupWhitelists("<group ids>")
 *             .grantTypeWhitelists("implicit")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:auth/serverPolicyRule:ServerPolicyRule example &lt;auth_server_id&gt;/&lt;policy_id&gt;/&lt;policy_rule_id&gt;
 * ```
 * 
 */
@ResourceType(type="okta:auth/serverPolicyRule:ServerPolicyRule")
public class ServerPolicyRule extends com.pulumi.resources.CustomResource {
    /**
     * Lifetime of access token. Can be set to a value between 5 and 1440 minutes. Default is `60`.
     * 
     */
    @Export(name="accessTokenLifetimeMinutes", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> accessTokenLifetimeMinutes;

    /**
     * @return Lifetime of access token. Can be set to a value between 5 and 1440 minutes. Default is `60`.
     * 
     */
    public Output<Optional<Integer>> accessTokenLifetimeMinutes() {
        return Codegen.optional(this.accessTokenLifetimeMinutes);
    }
    /**
     * Auth server ID
     * 
     */
    @Export(name="authServerId", refs={String.class}, tree="[0]")
    private Output<String> authServerId;

    /**
     * @return Auth server ID
     * 
     */
    public Output<String> authServerId() {
        return this.authServerId;
    }
    /**
     * Accepted grant type values, `authorization_code`, `implicit`, `password`, `client_credentials`, `urn:ietf:params:oauth:grant-type:saml2-bearer` (*Early Access Property*), `urn:ietf:params:oauth:grant-type:token-exchange` (*Early Access Property*),`urn:ietf:params:oauth:grant-type:device_code` (*Early Access Property*), `interaction_code` (*OIE only*). For `implicit` value either `user_whitelist` or `group_whitelist` should be set.
     * 
     */
    @Export(name="grantTypeWhitelists", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> grantTypeWhitelists;

    /**
     * @return Accepted grant type values, `authorization_code`, `implicit`, `password`, `client_credentials`, `urn:ietf:params:oauth:grant-type:saml2-bearer` (*Early Access Property*), `urn:ietf:params:oauth:grant-type:token-exchange` (*Early Access Property*),`urn:ietf:params:oauth:grant-type:device_code` (*Early Access Property*), `interaction_code` (*OIE only*). For `implicit` value either `user_whitelist` or `group_whitelist` should be set.
     * 
     */
    public Output<List<String>> grantTypeWhitelists() {
        return this.grantTypeWhitelists;
    }
    /**
     * Specifies a set of Groups whose Users are to be excluded.
     * 
     */
    @Export(name="groupBlacklists", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> groupBlacklists;

    /**
     * @return Specifies a set of Groups whose Users are to be excluded.
     * 
     */
    public Output<Optional<List<String>>> groupBlacklists() {
        return Codegen.optional(this.groupBlacklists);
    }
    /**
     * Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: `EVERYONE`.
     * 
     */
    @Export(name="groupWhitelists", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> groupWhitelists;

    /**
     * @return Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: `EVERYONE`.
     * 
     */
    public Output<Optional<List<String>>> groupWhitelists() {
        return Codegen.optional(this.groupWhitelists);
    }
    /**
     * The ID of the inline token to trigger.
     * 
     */
    @Export(name="inlineHookId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> inlineHookId;

    /**
     * @return The ID of the inline token to trigger.
     * 
     */
    public Output<Optional<String>> inlineHookId() {
        return Codegen.optional(this.inlineHookId);
    }
    /**
     * Auth server policy rule name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Auth server policy rule name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Auth server policy ID
     * 
     */
    @Export(name="policyId", refs={String.class}, tree="[0]")
    private Output<String> policyId;

    /**
     * @return Auth server policy ID
     * 
     */
    public Output<String> policyId() {
        return this.policyId;
    }
    /**
     * Priority of the auth server policy rule
     * 
     */
    @Export(name="priority", refs={Integer.class}, tree="[0]")
    private Output<Integer> priority;

    /**
     * @return Priority of the auth server policy rule
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }
    /**
     * Lifetime of refresh token.
     * 
     */
    @Export(name="refreshTokenLifetimeMinutes", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> refreshTokenLifetimeMinutes;

    /**
     * @return Lifetime of refresh token.
     * 
     */
    public Output<Optional<Integer>> refreshTokenLifetimeMinutes() {
        return Codegen.optional(this.refreshTokenLifetimeMinutes);
    }
    /**
     * Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes. Default is `10080` (7 days).`refresh_token_window_minutes` must be between `access_token_lifetime_minutes` and `refresh_token_lifetime_minutes`.
     * 
     */
    @Export(name="refreshTokenWindowMinutes", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> refreshTokenWindowMinutes;

    /**
     * @return Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes. Default is `10080` (7 days).`refresh_token_window_minutes` must be between `access_token_lifetime_minutes` and `refresh_token_lifetime_minutes`.
     * 
     */
    public Output<Optional<Integer>> refreshTokenWindowMinutes() {
        return Codegen.optional(this.refreshTokenWindowMinutes);
    }
    /**
     * Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `*`
     * 
     */
    @Export(name="scopeWhitelists", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> scopeWhitelists;

    /**
     * @return Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with `*`
     * 
     */
    public Output<Optional<List<String>>> scopeWhitelists() {
        return Codegen.optional(this.scopeWhitelists);
    }
    /**
     * Default to `ACTIVE`
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> status;

    /**
     * @return Default to `ACTIVE`
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * The rule is the system (default) rule for its associated policy
     * 
     */
    @Export(name="system", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> system;

    /**
     * @return The rule is the system (default) rule for its associated policy
     * 
     */
    public Output<Boolean> system() {
        return this.system;
    }
    /**
     * Auth server policy rule type, unlikely this will be anything other then the default
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> type;

    /**
     * @return Auth server policy rule type, unlikely this will be anything other then the default
     * 
     */
    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }
    /**
     * Specifies a set of Users to be excluded.
     * 
     */
    @Export(name="userBlacklists", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> userBlacklists;

    /**
     * @return Specifies a set of Users to be excluded.
     * 
     */
    public Output<Optional<List<String>>> userBlacklists() {
        return Codegen.optional(this.userBlacklists);
    }
    /**
     * Specifies a set of Users to be included.
     * 
     */
    @Export(name="userWhitelists", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> userWhitelists;

    /**
     * @return Specifies a set of Users to be included.
     * 
     */
    public Output<Optional<List<String>>> userWhitelists() {
        return Codegen.optional(this.userWhitelists);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServerPolicyRule(java.lang.String name) {
        this(name, ServerPolicyRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServerPolicyRule(java.lang.String name, ServerPolicyRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServerPolicyRule(java.lang.String name, ServerPolicyRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:auth/serverPolicyRule:ServerPolicyRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServerPolicyRule(java.lang.String name, Output<java.lang.String> id, @Nullable ServerPolicyRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:auth/serverPolicyRule:ServerPolicyRule", name, state, makeResourceOptions(options, id), false);
    }

    private static ServerPolicyRuleArgs makeArgs(ServerPolicyRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServerPolicyRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("okta:auth/serverPolicyClaim:ServerPolicyClaim").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServerPolicyRule get(java.lang.String name, Output<java.lang.String> id, @Nullable ServerPolicyRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServerPolicyRule(name, id, state, options);
    }
}

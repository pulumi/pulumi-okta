// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.policy.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class RuleSignonFactorSequenceSecondaryCriteriaArgs extends com.pulumi.resources.ResourceArgs {

    public static final RuleSignonFactorSequenceSecondaryCriteriaArgs Empty = new RuleSignonFactorSequenceSecondaryCriteriaArgs();

    /**
     * Type of a Factor
     * 
     */
    @Import(name="factorType", required=true)
    private Output<String> factorType;

    /**
     * @return Type of a Factor
     * 
     */
    public Output<String> factorType() {
        return this.factorType;
    }

    /**
     * Factor provider
     * 
     */
    @Import(name="provider", required=true)
    private Output<String> provider;

    /**
     * @return Factor provider
     * 
     */
    public Output<String> provider() {
        return this.provider;
    }

    private RuleSignonFactorSequenceSecondaryCriteriaArgs() {}

    private RuleSignonFactorSequenceSecondaryCriteriaArgs(RuleSignonFactorSequenceSecondaryCriteriaArgs $) {
        this.factorType = $.factorType;
        this.provider = $.provider;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleSignonFactorSequenceSecondaryCriteriaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleSignonFactorSequenceSecondaryCriteriaArgs $;

        public Builder() {
            $ = new RuleSignonFactorSequenceSecondaryCriteriaArgs();
        }

        public Builder(RuleSignonFactorSequenceSecondaryCriteriaArgs defaults) {
            $ = new RuleSignonFactorSequenceSecondaryCriteriaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param factorType Type of a Factor
         * 
         * @return builder
         * 
         */
        public Builder factorType(Output<String> factorType) {
            $.factorType = factorType;
            return this;
        }

        /**
         * @param factorType Type of a Factor
         * 
         * @return builder
         * 
         */
        public Builder factorType(String factorType) {
            return factorType(Output.of(factorType));
        }

        /**
         * @param provider Factor provider
         * 
         * @return builder
         * 
         */
        public Builder provider(Output<String> provider) {
            $.provider = provider;
            return this;
        }

        /**
         * @param provider Factor provider
         * 
         * @return builder
         * 
         */
        public Builder provider(String provider) {
            return provider(Output.of(provider));
        }

        public RuleSignonFactorSequenceSecondaryCriteriaArgs build() {
            if ($.factorType == null) {
                throw new MissingRequiredPropertyException("RuleSignonFactorSequenceSecondaryCriteriaArgs", "factorType");
            }
            if ($.provider == null) {
                throw new MissingRequiredPropertyException("RuleSignonFactorSequenceSecondaryCriteriaArgs", "provider");
            }
            return $;
        }
    }

}

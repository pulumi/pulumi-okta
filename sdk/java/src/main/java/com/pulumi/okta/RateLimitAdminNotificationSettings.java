// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.RateLimitAdminNotificationSettingsArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.RateLimitAdminNotificationSettingsState;
import java.lang.Boolean;
import javax.annotation.Nullable;

/**
 * Manages principal rate limits.
 * Principal Rate Limits provides operations to manage Principal Rate Limits for your organization.
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.RateLimitAdminNotificationSettings;
 * import com.pulumi.okta.RateLimitAdminNotificationSettingsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new RateLimitAdminNotificationSettings("example", RateLimitAdminNotificationSettingsArgs.builder()
 *             .notificationsEnabled(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:index/rateLimitAdminNotificationSettings:RateLimitAdminNotificationSettings example .
 * ```
 * 
 */
@ResourceType(type="okta:index/rateLimitAdminNotificationSettings:RateLimitAdminNotificationSettings")
public class RateLimitAdminNotificationSettings extends com.pulumi.resources.CustomResource {
    /**
     * Enables or disables admin notifications for rate limiting events.
     * 
     */
    @Export(name="notificationsEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> notificationsEnabled;

    /**
     * @return Enables or disables admin notifications for rate limiting events.
     * 
     */
    public Output<Boolean> notificationsEnabled() {
        return this.notificationsEnabled;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RateLimitAdminNotificationSettings(java.lang.String name) {
        this(name, RateLimitAdminNotificationSettingsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RateLimitAdminNotificationSettings(java.lang.String name, RateLimitAdminNotificationSettingsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RateLimitAdminNotificationSettings(java.lang.String name, RateLimitAdminNotificationSettingsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/rateLimitAdminNotificationSettings:RateLimitAdminNotificationSettings", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RateLimitAdminNotificationSettings(java.lang.String name, Output<java.lang.String> id, @Nullable RateLimitAdminNotificationSettingsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/rateLimitAdminNotificationSettings:RateLimitAdminNotificationSettings", name, state, makeResourceOptions(options, id), false);
    }

    private static RateLimitAdminNotificationSettingsArgs makeArgs(RateLimitAdminNotificationSettingsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RateLimitAdminNotificationSettingsArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RateLimitAdminNotificationSettings get(java.lang.String name, Output<java.lang.String> id, @Nullable RateLimitAdminNotificationSettingsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RateLimitAdminNotificationSettings(name, id, state, options);
    }
}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.inputs.GetReviewAllReviewerLevel;
import com.pulumi.okta.inputs.GetReviewEntitlementBundle;
import com.pulumi.okta.inputs.GetReviewEntitlementValue;
import com.pulumi.okta.inputs.GetReviewLinks;
import com.pulumi.okta.inputs.GetReviewNote;
import com.pulumi.okta.inputs.GetReviewPrincipalProfile;
import com.pulumi.okta.inputs.GetReviewReviewerProfile;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetReviewPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetReviewPlainArgs Empty = new GetReviewPlainArgs();

    @Import(name="allReviewerLevels")
    private @Nullable List<GetReviewAllReviewerLevel> allReviewerLevels;

    public Optional<List<GetReviewAllReviewerLevel>> allReviewerLevels() {
        return Optional.ofNullable(this.allReviewerLevels);
    }

    @Import(name="entitlementBundle")
    private @Nullable GetReviewEntitlementBundle entitlementBundle;

    public Optional<GetReviewEntitlementBundle> entitlementBundle() {
        return Optional.ofNullable(this.entitlementBundle);
    }

    @Import(name="entitlementValue")
    private @Nullable GetReviewEntitlementValue entitlementValue;

    public Optional<GetReviewEntitlementValue> entitlementValue() {
        return Optional.ofNullable(this.entitlementValue);
    }

    /**
     * The ID of  review.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return The ID of  review.
     * 
     */
    public String id() {
        return this.id;
    }

    @Import(name="links")
    private @Nullable GetReviewLinks links;

    public Optional<GetReviewLinks> links() {
        return Optional.ofNullable(this.links);
    }

    @Import(name="note")
    private @Nullable GetReviewNote note;

    public Optional<GetReviewNote> note() {
        return Optional.ofNullable(this.note);
    }

    /**
     * A limited set of properties from the user profile who created the review.
     * 
     */
    @Import(name="principalProfile")
    private @Nullable GetReviewPrincipalProfile principalProfile;

    /**
     * @return A limited set of properties from the user profile who created the review.
     * 
     */
    public Optional<GetReviewPrincipalProfile> principalProfile() {
        return Optional.ofNullable(this.principalProfile);
    }

    @Import(name="reviewerProfile")
    private @Nullable GetReviewReviewerProfile reviewerProfile;

    public Optional<GetReviewReviewerProfile> reviewerProfile() {
        return Optional.ofNullable(this.reviewerProfile);
    }

    private GetReviewPlainArgs() {}

    private GetReviewPlainArgs(GetReviewPlainArgs $) {
        this.allReviewerLevels = $.allReviewerLevels;
        this.entitlementBundle = $.entitlementBundle;
        this.entitlementValue = $.entitlementValue;
        this.id = $.id;
        this.links = $.links;
        this.note = $.note;
        this.principalProfile = $.principalProfile;
        this.reviewerProfile = $.reviewerProfile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetReviewPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetReviewPlainArgs $;

        public Builder() {
            $ = new GetReviewPlainArgs();
        }

        public Builder(GetReviewPlainArgs defaults) {
            $ = new GetReviewPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder allReviewerLevels(@Nullable List<GetReviewAllReviewerLevel> allReviewerLevels) {
            $.allReviewerLevels = allReviewerLevels;
            return this;
        }

        public Builder allReviewerLevels(GetReviewAllReviewerLevel... allReviewerLevels) {
            return allReviewerLevels(List.of(allReviewerLevels));
        }

        public Builder entitlementBundle(@Nullable GetReviewEntitlementBundle entitlementBundle) {
            $.entitlementBundle = entitlementBundle;
            return this;
        }

        public Builder entitlementValue(@Nullable GetReviewEntitlementValue entitlementValue) {
            $.entitlementValue = entitlementValue;
            return this;
        }

        /**
         * @param id The ID of  review.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder links(@Nullable GetReviewLinks links) {
            $.links = links;
            return this;
        }

        public Builder note(@Nullable GetReviewNote note) {
            $.note = note;
            return this;
        }

        /**
         * @param principalProfile A limited set of properties from the user profile who created the review.
         * 
         * @return builder
         * 
         */
        public Builder principalProfile(@Nullable GetReviewPrincipalProfile principalProfile) {
            $.principalProfile = principalProfile;
            return this;
        }

        public Builder reviewerProfile(@Nullable GetReviewReviewerProfile reviewerProfile) {
            $.reviewerProfile = reviewerProfile;
            return this;
        }

        public GetReviewPlainArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetReviewPlainArgs", "id");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class EventHookVerificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventHookVerificationArgs Empty = new EventHookVerificationArgs();

    /**
     * Event hook ID
     * 
     */
    @Import(name="eventHookId", required=true)
    private Output<String> eventHookId;

    /**
     * @return Event hook ID
     * 
     */
    public Output<String> eventHookId() {
        return this.eventHookId;
    }

    private EventHookVerificationArgs() {}

    private EventHookVerificationArgs(EventHookVerificationArgs $) {
        this.eventHookId = $.eventHookId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventHookVerificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventHookVerificationArgs $;

        public Builder() {
            $ = new EventHookVerificationArgs();
        }

        public Builder(EventHookVerificationArgs defaults) {
            $ = new EventHookVerificationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param eventHookId Event hook ID
         * 
         * @return builder
         * 
         */
        public Builder eventHookId(Output<String> eventHookId) {
            $.eventHookId = eventHookId;
            return this;
        }

        /**
         * @param eventHookId Event hook ID
         * 
         * @return builder
         * 
         */
        public Builder eventHookId(String eventHookId) {
            return eventHookId(Output.of(eventHookId));
        }

        public EventHookVerificationArgs build() {
            if ($.eventHookId == null) {
                throw new MissingRequiredPropertyException("EventHookVerificationArgs", "eventHookId");
            }
            return $;
        }
    }

}

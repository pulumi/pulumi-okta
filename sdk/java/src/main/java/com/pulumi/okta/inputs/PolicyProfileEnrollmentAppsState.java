// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyProfileEnrollmentAppsState extends com.pulumi.resources.ResourceArgs {

    public static final PolicyProfileEnrollmentAppsState Empty = new PolicyProfileEnrollmentAppsState();

    /**
     * List of app IDs to be added to this policy.
     * 
     */
    @Import(name="apps")
    private @Nullable Output<List<String>> apps;

    /**
     * @return List of app IDs to be added to this policy.
     * 
     */
    public Optional<Output<List<String>>> apps() {
        return Optional.ofNullable(this.apps);
    }

    /**
     * ID of the default enrollment policy.
     * 
     */
    @Import(name="defaultPolicyId")
    private @Nullable Output<String> defaultPolicyId;

    /**
     * @return ID of the default enrollment policy.
     * 
     */
    public Optional<Output<String>> defaultPolicyId() {
        return Optional.ofNullable(this.defaultPolicyId);
    }

    /**
     * ID of the enrollment policy.
     * 
     */
    @Import(name="policyId")
    private @Nullable Output<String> policyId;

    /**
     * @return ID of the enrollment policy.
     * 
     */
    public Optional<Output<String>> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    private PolicyProfileEnrollmentAppsState() {}

    private PolicyProfileEnrollmentAppsState(PolicyProfileEnrollmentAppsState $) {
        this.apps = $.apps;
        this.defaultPolicyId = $.defaultPolicyId;
        this.policyId = $.policyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyProfileEnrollmentAppsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyProfileEnrollmentAppsState $;

        public Builder() {
            $ = new PolicyProfileEnrollmentAppsState();
        }

        public Builder(PolicyProfileEnrollmentAppsState defaults) {
            $ = new PolicyProfileEnrollmentAppsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param apps List of app IDs to be added to this policy.
         * 
         * @return builder
         * 
         */
        public Builder apps(@Nullable Output<List<String>> apps) {
            $.apps = apps;
            return this;
        }

        /**
         * @param apps List of app IDs to be added to this policy.
         * 
         * @return builder
         * 
         */
        public Builder apps(List<String> apps) {
            return apps(Output.of(apps));
        }

        /**
         * @param apps List of app IDs to be added to this policy.
         * 
         * @return builder
         * 
         */
        public Builder apps(String... apps) {
            return apps(List.of(apps));
        }

        /**
         * @param defaultPolicyId ID of the default enrollment policy.
         * 
         * @return builder
         * 
         */
        public Builder defaultPolicyId(@Nullable Output<String> defaultPolicyId) {
            $.defaultPolicyId = defaultPolicyId;
            return this;
        }

        /**
         * @param defaultPolicyId ID of the default enrollment policy.
         * 
         * @return builder
         * 
         */
        public Builder defaultPolicyId(String defaultPolicyId) {
            return defaultPolicyId(Output.of(defaultPolicyId));
        }

        /**
         * @param policyId ID of the enrollment policy.
         * 
         * @return builder
         * 
         */
        public Builder policyId(@Nullable Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId ID of the enrollment policy.
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        public PolicyProfileEnrollmentAppsState build() {
            return $;
        }
    }

}

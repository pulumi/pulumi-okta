// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.GetRequestConditionAccessScopeSettings;
import com.pulumi.okta.outputs.GetRequestConditionRequesterSettings;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRequestConditionResult {
    private @Nullable GetRequestConditionAccessScopeSettings accessScopeSettings;
    /**
     * @return The date and time when the request condition was created.
     * 
     */
    private String created;
    /**
     * @return The id of the user who created the request condition.
     * 
     */
    private String createdBy;
    /**
     * @return Request condition id.
     * 
     */
    private String id;
    /**
     * @return The date and time when the request condition was last updated.
     * 
     */
    private String lastUpdated;
    /**
     * @return The id of the user who last updated the request condition.
     * 
     */
    private String lastUpdatedBy;
    /**
     * @return The name of the request condition.
     * 
     */
    private String name;
    /**
     * @return The priority of the request condition. Lower numbers indicate higher priority.
     * 
     */
    private Integer priority;
    private @Nullable GetRequestConditionRequesterSettings requesterSettings;
    /**
     * @return The id of the resource in Okta ID format.
     * 
     */
    private String resourceId;
    /**
     * @return Status indicates if this condition is active or not. Default status is INACTIVE. Enum: `ACTIVE`, `INACTIVE`, `DELETED`, `INVALID`.
     * 
     */
    private String status;

    private GetRequestConditionResult() {}
    public Optional<GetRequestConditionAccessScopeSettings> accessScopeSettings() {
        return Optional.ofNullable(this.accessScopeSettings);
    }
    /**
     * @return The date and time when the request condition was created.
     * 
     */
    public String created() {
        return this.created;
    }
    /**
     * @return The id of the user who created the request condition.
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return Request condition id.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The date and time when the request condition was last updated.
     * 
     */
    public String lastUpdated() {
        return this.lastUpdated;
    }
    /**
     * @return The id of the user who last updated the request condition.
     * 
     */
    public String lastUpdatedBy() {
        return this.lastUpdatedBy;
    }
    /**
     * @return The name of the request condition.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The priority of the request condition. Lower numbers indicate higher priority.
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    public Optional<GetRequestConditionRequesterSettings> requesterSettings() {
        return Optional.ofNullable(this.requesterSettings);
    }
    /**
     * @return The id of the resource in Okta ID format.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * @return Status indicates if this condition is active or not. Default status is INACTIVE. Enum: `ACTIVE`, `INACTIVE`, `DELETED`, `INVALID`.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRequestConditionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetRequestConditionAccessScopeSettings accessScopeSettings;
        private String created;
        private String createdBy;
        private String id;
        private String lastUpdated;
        private String lastUpdatedBy;
        private String name;
        private Integer priority;
        private @Nullable GetRequestConditionRequesterSettings requesterSettings;
        private String resourceId;
        private String status;
        public Builder() {}
        public Builder(GetRequestConditionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessScopeSettings = defaults.accessScopeSettings;
    	      this.created = defaults.created;
    	      this.createdBy = defaults.createdBy;
    	      this.id = defaults.id;
    	      this.lastUpdated = defaults.lastUpdated;
    	      this.lastUpdatedBy = defaults.lastUpdatedBy;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.requesterSettings = defaults.requesterSettings;
    	      this.resourceId = defaults.resourceId;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder accessScopeSettings(@Nullable GetRequestConditionAccessScopeSettings accessScopeSettings) {

            this.accessScopeSettings = accessScopeSettings;
            return this;
        }
        @CustomType.Setter
        public Builder created(String created) {
            if (created == null) {
              throw new MissingRequiredPropertyException("GetRequestConditionResult", "created");
            }
            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetRequestConditionResult", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRequestConditionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdated(String lastUpdated) {
            if (lastUpdated == null) {
              throw new MissingRequiredPropertyException("GetRequestConditionResult", "lastUpdated");
            }
            this.lastUpdated = lastUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedBy(String lastUpdatedBy) {
            if (lastUpdatedBy == null) {
              throw new MissingRequiredPropertyException("GetRequestConditionResult", "lastUpdatedBy");
            }
            this.lastUpdatedBy = lastUpdatedBy;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetRequestConditionResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetRequestConditionResult", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder requesterSettings(@Nullable GetRequestConditionRequesterSettings requesterSettings) {

            this.requesterSettings = requesterSettings;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(String resourceId) {
            if (resourceId == null) {
              throw new MissingRequiredPropertyException("GetRequestConditionResult", "resourceId");
            }
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetRequestConditionResult", "status");
            }
            this.status = status;
            return this;
        }
        public GetRequestConditionResult build() {
            final var _resultValue = new GetRequestConditionResult();
            _resultValue.accessScopeSettings = accessScopeSettings;
            _resultValue.created = created;
            _resultValue.createdBy = createdBy;
            _resultValue.id = id;
            _resultValue.lastUpdated = lastUpdated;
            _resultValue.lastUpdatedBy = lastUpdatedBy;
            _resultValue.name = name;
            _resultValue.priority = priority;
            _resultValue.requesterSettings = requesterSettings;
            _resultValue.resourceId = resourceId;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}

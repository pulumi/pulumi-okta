// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.EmailSmtpServerArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.EmailSmtpServerState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Create and configure SMTP email server configuration for your org.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.EmailSmtpServer;
 * import com.pulumi.okta.EmailSmtpServerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new EmailSmtpServer("example", EmailSmtpServerArgs.builder()
 *             .alias("CustomServer")
 *             .host("192.168.160.1")
 *             .port(8086)
 *             .username("abcd")
 *             .enabled(false)
 *             .password("pwd")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 */
@ResourceType(type="okta:index/emailSmtpServer:EmailSmtpServer")
public class EmailSmtpServer extends com.pulumi.resources.CustomResource {
    /**
     * Human-readable name for your SMTP server
     * 
     */
    @Export(name="alias", refs={String.class}, tree="[0]")
    private Output<String> alias;

    /**
     * @return Human-readable name for your SMTP server
     * 
     */
    public Output<String> alias() {
        return this.alias;
    }
    /**
     * If true, routes all email traffic through your SMTP server.Default: `false`
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return If true, routes all email traffic through your SMTP server.Default: `false`
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * Hostname or IP address of your SMTP server
     * 
     */
    @Export(name="host", refs={String.class}, tree="[0]")
    private Output<String> host;

    /**
     * @return Hostname or IP address of your SMTP server
     * 
     */
    public Output<String> host() {
        return this.host;
    }
    /**
     * Password used to access your SMTP server
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output<String> password;

    /**
     * @return Password used to access your SMTP server
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * Port number of your SMTP server
     * 
     */
    @Export(name="port", refs={Integer.class}, tree="[0]")
    private Output<Integer> port;

    /**
     * @return Port number of your SMTP server
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }
    /**
     * Username used to access your SMTP server
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output<String> username;

    /**
     * @return Username used to access your SMTP server
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EmailSmtpServer(java.lang.String name) {
        this(name, EmailSmtpServerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EmailSmtpServer(java.lang.String name, EmailSmtpServerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EmailSmtpServer(java.lang.String name, EmailSmtpServerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/emailSmtpServer:EmailSmtpServer", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private EmailSmtpServer(java.lang.String name, Output<java.lang.String> id, @Nullable EmailSmtpServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/emailSmtpServer:EmailSmtpServer", name, state, makeResourceOptions(options, id), false);
    }

    private static EmailSmtpServerArgs makeArgs(EmailSmtpServerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? EmailSmtpServerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EmailSmtpServer get(java.lang.String name, Output<java.lang.String> id, @Nullable EmailSmtpServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EmailSmtpServer(name, id, state, options);
    }
}

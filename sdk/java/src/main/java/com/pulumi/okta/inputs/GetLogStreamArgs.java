// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.okta.inputs.GetLogStreamSettingsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLogStreamArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLogStreamArgs Empty = new GetLogStreamArgs();

    /**
     * ID of the log stream to retrieve, conflicts with `name`.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return ID of the log stream to retrieve, conflicts with `name`.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Unique name for the Log Stream object, conflicts with `id`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Unique name for the Log Stream object, conflicts with `id`.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="settings")
    private @Nullable Output<GetLogStreamSettingsArgs> settings;

    public Optional<Output<GetLogStreamSettingsArgs>> settings() {
        return Optional.ofNullable(this.settings);
    }

    private GetLogStreamArgs() {}

    private GetLogStreamArgs(GetLogStreamArgs $) {
        this.id = $.id;
        this.name = $.name;
        this.settings = $.settings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLogStreamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLogStreamArgs $;

        public Builder() {
            $ = new GetLogStreamArgs();
        }

        public Builder(GetLogStreamArgs defaults) {
            $ = new GetLogStreamArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id ID of the log stream to retrieve, conflicts with `name`.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id ID of the log stream to retrieve, conflicts with `name`.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name Unique name for the Log Stream object, conflicts with `id`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Unique name for the Log Stream object, conflicts with `id`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder settings(@Nullable Output<GetLogStreamSettingsArgs> settings) {
            $.settings = settings;
            return this;
        }

        public Builder settings(GetLogStreamSettingsArgs settings) {
            return settings(Output.of(settings));
        }

        public GetLogStreamArgs build() {
            return $;
        }
    }

}

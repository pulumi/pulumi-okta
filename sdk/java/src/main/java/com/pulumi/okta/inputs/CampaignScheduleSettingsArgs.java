// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.inputs.CampaignScheduleSettingsRecurrenceArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CampaignScheduleSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CampaignScheduleSettingsArgs Empty = new CampaignScheduleSettingsArgs();

    /**
     * The duration (in days) that the campaign is active.
     * 
     */
    @Import(name="durationInDays", required=true)
    private Output<Integer> durationInDays;

    /**
     * @return The duration (in days) that the campaign is active.
     * 
     */
    public Output<Integer> durationInDays() {
        return this.durationInDays;
    }

    @Import(name="endDate")
    private @Nullable Output<String> endDate;

    public Optional<Output<String>> endDate() {
        return Optional.ofNullable(this.endDate);
    }

    @Import(name="recurrences")
    private @Nullable Output<List<CampaignScheduleSettingsRecurrenceArgs>> recurrences;

    public Optional<Output<List<CampaignScheduleSettingsRecurrenceArgs>>> recurrences() {
        return Optional.ofNullable(this.recurrences);
    }

    /**
     * The date on which the campaign is supposed to start. Accepts date in ISO 8601 format.
     * 
     */
    @Import(name="startDate", required=true)
    private Output<String> startDate;

    /**
     * @return The date on which the campaign is supposed to start. Accepts date in ISO 8601 format.
     * 
     */
    public Output<String> startDate() {
        return this.startDate;
    }

    /**
     * The time zone in which the campaign is active.
     * 
     */
    @Import(name="timeZone", required=true)
    private Output<String> timeZone;

    /**
     * @return The time zone in which the campaign is active.
     * 
     */
    public Output<String> timeZone() {
        return this.timeZone;
    }

    /**
     * The type of campaign being scheduled.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of campaign being scheduled.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private CampaignScheduleSettingsArgs() {}

    private CampaignScheduleSettingsArgs(CampaignScheduleSettingsArgs $) {
        this.durationInDays = $.durationInDays;
        this.endDate = $.endDate;
        this.recurrences = $.recurrences;
        this.startDate = $.startDate;
        this.timeZone = $.timeZone;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CampaignScheduleSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CampaignScheduleSettingsArgs $;

        public Builder() {
            $ = new CampaignScheduleSettingsArgs();
        }

        public Builder(CampaignScheduleSettingsArgs defaults) {
            $ = new CampaignScheduleSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param durationInDays The duration (in days) that the campaign is active.
         * 
         * @return builder
         * 
         */
        public Builder durationInDays(Output<Integer> durationInDays) {
            $.durationInDays = durationInDays;
            return this;
        }

        /**
         * @param durationInDays The duration (in days) that the campaign is active.
         * 
         * @return builder
         * 
         */
        public Builder durationInDays(Integer durationInDays) {
            return durationInDays(Output.of(durationInDays));
        }

        public Builder endDate(@Nullable Output<String> endDate) {
            $.endDate = endDate;
            return this;
        }

        public Builder endDate(String endDate) {
            return endDate(Output.of(endDate));
        }

        public Builder recurrences(@Nullable Output<List<CampaignScheduleSettingsRecurrenceArgs>> recurrences) {
            $.recurrences = recurrences;
            return this;
        }

        public Builder recurrences(List<CampaignScheduleSettingsRecurrenceArgs> recurrences) {
            return recurrences(Output.of(recurrences));
        }

        public Builder recurrences(CampaignScheduleSettingsRecurrenceArgs... recurrences) {
            return recurrences(List.of(recurrences));
        }

        /**
         * @param startDate The date on which the campaign is supposed to start. Accepts date in ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder startDate(Output<String> startDate) {
            $.startDate = startDate;
            return this;
        }

        /**
         * @param startDate The date on which the campaign is supposed to start. Accepts date in ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder startDate(String startDate) {
            return startDate(Output.of(startDate));
        }

        /**
         * @param timeZone The time zone in which the campaign is active.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone The time zone in which the campaign is active.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        /**
         * @param type The type of campaign being scheduled.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of campaign being scheduled.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public CampaignScheduleSettingsArgs build() {
            if ($.durationInDays == null) {
                throw new MissingRequiredPropertyException("CampaignScheduleSettingsArgs", "durationInDays");
            }
            if ($.startDate == null) {
                throw new MissingRequiredPropertyException("CampaignScheduleSettingsArgs", "startDate");
            }
            if ($.timeZone == null) {
                throw new MissingRequiredPropertyException("CampaignScheduleSettingsArgs", "timeZone");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("CampaignScheduleSettingsArgs", "type");
            }
            return $;
        }
    }

}

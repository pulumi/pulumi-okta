// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.okta.outputs.GetAuthServerClaimsClaim;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAuthServerClaimsResult {
    private String authServerId;
    /**
     * @return collection of authorization server claims retrieved from Okta with the following properties.
     * 
     */
    private List<GetAuthServerClaimsClaim> claims;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;

    private GetAuthServerClaimsResult() {}
    public String authServerId() {
        return this.authServerId;
    }
    /**
     * @return collection of authorization server claims retrieved from Okta with the following properties.
     * 
     */
    public List<GetAuthServerClaimsClaim> claims() {
        return this.claims;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuthServerClaimsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authServerId;
        private List<GetAuthServerClaimsClaim> claims;
        private String id;
        public Builder() {}
        public Builder(GetAuthServerClaimsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authServerId = defaults.authServerId;
    	      this.claims = defaults.claims;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder authServerId(String authServerId) {
            this.authServerId = Objects.requireNonNull(authServerId);
            return this;
        }
        @CustomType.Setter
        public Builder claims(List<GetAuthServerClaimsClaim> claims) {
            this.claims = Objects.requireNonNull(claims);
            return this;
        }
        public Builder claims(GetAuthServerClaimsClaim... claims) {
            return claims(List.of(claims));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public GetAuthServerClaimsResult build() {
            final var o = new GetAuthServerClaimsResult();
            o.authServerId = authServerId;
            o.claims = claims;
            o.id = id;
            return o;
        }
    }
}

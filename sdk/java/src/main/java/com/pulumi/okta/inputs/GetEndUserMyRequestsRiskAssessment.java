// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.okta.inputs.GetEndUserMyRequestsRiskAssessmentRiskRule;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEndUserMyRequestsRiskAssessment extends com.pulumi.resources.InvokeArgs {

    public static final GetEndUserMyRequestsRiskAssessment Empty = new GetEndUserMyRequestsRiskAssessment();

    /**
     * Whether request submission is allowed or restricted in the risk settings.
     * 
     */
    @Import(name="requestSubmissionType")
    private @Nullable String requestSubmissionType;

    /**
     * @return Whether request submission is allowed or restricted in the risk settings.
     * 
     */
    public Optional<String> requestSubmissionType() {
        return Optional.ofNullable(this.requestSubmissionType);
    }

    /**
     * An array of resources that are excluded from the review.
     * 
     */
    @Import(name="riskRules")
    private @Nullable List<GetEndUserMyRequestsRiskAssessmentRiskRule> riskRules;

    /**
     * @return An array of resources that are excluded from the review.
     * 
     */
    public Optional<List<GetEndUserMyRequestsRiskAssessmentRiskRule>> riskRules() {
        return Optional.ofNullable(this.riskRules);
    }

    private GetEndUserMyRequestsRiskAssessment() {}

    private GetEndUserMyRequestsRiskAssessment(GetEndUserMyRequestsRiskAssessment $) {
        this.requestSubmissionType = $.requestSubmissionType;
        this.riskRules = $.riskRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEndUserMyRequestsRiskAssessment defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEndUserMyRequestsRiskAssessment $;

        public Builder() {
            $ = new GetEndUserMyRequestsRiskAssessment();
        }

        public Builder(GetEndUserMyRequestsRiskAssessment defaults) {
            $ = new GetEndUserMyRequestsRiskAssessment(Objects.requireNonNull(defaults));
        }

        /**
         * @param requestSubmissionType Whether request submission is allowed or restricted in the risk settings.
         * 
         * @return builder
         * 
         */
        public Builder requestSubmissionType(@Nullable String requestSubmissionType) {
            $.requestSubmissionType = requestSubmissionType;
            return this;
        }

        /**
         * @param riskRules An array of resources that are excluded from the review.
         * 
         * @return builder
         * 
         */
        public Builder riskRules(@Nullable List<GetEndUserMyRequestsRiskAssessmentRiskRule> riskRules) {
            $.riskRules = riskRules;
            return this;
        }

        /**
         * @param riskRules An array of resources that are excluded from the review.
         * 
         * @return builder
         * 
         */
        public Builder riskRules(GetEndUserMyRequestsRiskAssessmentRiskRule... riskRules) {
            return riskRules(List.of(riskRules));
        }

        public GetEndUserMyRequestsRiskAssessment build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.AppSignonPolicyArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.AppSignonPolicyState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:index/appSignonPolicy:AppSignonPolicy example &lt;policy_id&gt;
 * ```
 * 
 */
@ResourceType(type="okta:index/appSignonPolicy:AppSignonPolicy")
public class AppSignonPolicy extends com.pulumi.resources.CustomResource {
    /**
     * If false, the default rule of the policy is set access to `DENY`. Otherwise default behavior of the default rule is to leave access at `ALLOW`.  **WARNING** setting this attribute to false changes policy rule&#39;s default behavior. Use at your own risk. This is only applied during creation and does not affect import or update.
     * 
     */
    @Export(name="catchAll", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> catchAll;

    /**
     * @return If false, the default rule of the policy is set access to `DENY`. Otherwise default behavior of the default rule is to leave access at `ALLOW`.  **WARNING** setting this attribute to false changes policy rule&#39;s default behavior. Use at your own risk. This is only applied during creation and does not affect import or update.
     * 
     */
    public Output<Boolean> catchAll() {
        return this.catchAll;
    }
    /**
     * Default rule (system=true) id of the policy
     * 
     */
    @Export(name="defaultRuleId", refs={String.class}, tree="[0]")
    private Output<String> defaultRuleId;

    /**
     * @return Default rule (system=true) id of the policy
     * 
     */
    public Output<String> defaultRuleId() {
        return this.defaultRuleId;
    }
    /**
     * Description of the policy.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return Description of the policy.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Name of the policy.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the policy.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies the order in which this policy is evaluated in relation to the other policies.
     * 
     */
    @Export(name="priority", refs={Integer.class}, tree="[0]")
    private Output<Integer> priority;

    /**
     * @return Specifies the order in which this policy is evaluated in relation to the other policies.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AppSignonPolicy(java.lang.String name) {
        this(name, AppSignonPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AppSignonPolicy(java.lang.String name, AppSignonPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AppSignonPolicy(java.lang.String name, AppSignonPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/appSignonPolicy:AppSignonPolicy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AppSignonPolicy(java.lang.String name, Output<java.lang.String> id, @Nullable AppSignonPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/appSignonPolicy:AppSignonPolicy", name, state, makeResourceOptions(options, id), false);
    }

    private static AppSignonPolicyArgs makeArgs(AppSignonPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AppSignonPolicyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AppSignonPolicy get(java.lang.String name, Output<java.lang.String> id, @Nullable AppSignonPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AppSignonPolicy(name, id, state, options);
    }
}

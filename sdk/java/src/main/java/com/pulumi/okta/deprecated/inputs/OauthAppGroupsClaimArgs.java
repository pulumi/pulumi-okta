// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.deprecated.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OauthAppGroupsClaimArgs extends com.pulumi.resources.ResourceArgs {

    public static final OauthAppGroupsClaimArgs Empty = new OauthAppGroupsClaimArgs();

    @Import(name="filterType")
    private @Nullable Output<String> filterType;

    public Optional<Output<String>> filterType() {
        return Optional.ofNullable(this.filterType);
    }

    @Import(name="issuerMode")
    private @Nullable Output<String> issuerMode;

    public Optional<Output<String>> issuerMode() {
        return Optional.ofNullable(this.issuerMode);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="value", required=true)
    private Output<String> value;

    public Output<String> value() {
        return this.value;
    }

    private OauthAppGroupsClaimArgs() {}

    private OauthAppGroupsClaimArgs(OauthAppGroupsClaimArgs $) {
        this.filterType = $.filterType;
        this.issuerMode = $.issuerMode;
        this.name = $.name;
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OauthAppGroupsClaimArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OauthAppGroupsClaimArgs $;

        public Builder() {
            $ = new OauthAppGroupsClaimArgs();
        }

        public Builder(OauthAppGroupsClaimArgs defaults) {
            $ = new OauthAppGroupsClaimArgs(Objects.requireNonNull(defaults));
        }

        public Builder filterType(@Nullable Output<String> filterType) {
            $.filterType = filterType;
            return this;
        }

        public Builder filterType(String filterType) {
            return filterType(Output.of(filterType));
        }

        public Builder issuerMode(@Nullable Output<String> issuerMode) {
            $.issuerMode = issuerMode;
            return this;
        }

        public Builder issuerMode(String issuerMode) {
            return issuerMode(Output.of(issuerMode));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        public Builder value(String value) {
            return value(Output.of(value));
        }

        public OauthAppGroupsClaimArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.okta.inputs.EntitlementBundleEntitlementArgs;
import com.pulumi.okta.inputs.EntitlementBundleTargetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EntitlementBundleArgs extends com.pulumi.resources.ResourceArgs {

    public static final EntitlementBundleArgs Empty = new EntitlementBundleArgs();

    /**
     * The description of an entitlement property.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of an entitlement property.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * List of entitlements in the bundle
     * 
     */
    @Import(name="entitlements")
    private @Nullable Output<List<EntitlementBundleEntitlementArgs>> entitlements;

    /**
     * @return List of entitlements in the bundle
     * 
     */
    public Optional<Output<List<EntitlementBundleEntitlementArgs>>> entitlements() {
        return Optional.ofNullable(this.entitlements);
    }

    /**
     * The display name for an entitlement bundle.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The display name for an entitlement bundle.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The status of the entitlement bundle.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the entitlement bundle.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Representation of a resource
     * 
     */
    @Import(name="target")
    private @Nullable Output<EntitlementBundleTargetArgs> target;

    /**
     * @return Representation of a resource
     * 
     */
    public Optional<Output<EntitlementBundleTargetArgs>> target() {
        return Optional.ofNullable(this.target);
    }

    /**
     * The ORN of the target resource. Required when updating the entitlement bundle.
     * 
     */
    @Import(name="targetResourceOrn")
    private @Nullable Output<String> targetResourceOrn;

    /**
     * @return The ORN of the target resource. Required when updating the entitlement bundle.
     * 
     */
    public Optional<Output<String>> targetResourceOrn() {
        return Optional.ofNullable(this.targetResourceOrn);
    }

    private EntitlementBundleArgs() {}

    private EntitlementBundleArgs(EntitlementBundleArgs $) {
        this.description = $.description;
        this.entitlements = $.entitlements;
        this.name = $.name;
        this.status = $.status;
        this.target = $.target;
        this.targetResourceOrn = $.targetResourceOrn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EntitlementBundleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EntitlementBundleArgs $;

        public Builder() {
            $ = new EntitlementBundleArgs();
        }

        public Builder(EntitlementBundleArgs defaults) {
            $ = new EntitlementBundleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of an entitlement property.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of an entitlement property.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param entitlements List of entitlements in the bundle
         * 
         * @return builder
         * 
         */
        public Builder entitlements(@Nullable Output<List<EntitlementBundleEntitlementArgs>> entitlements) {
            $.entitlements = entitlements;
            return this;
        }

        /**
         * @param entitlements List of entitlements in the bundle
         * 
         * @return builder
         * 
         */
        public Builder entitlements(List<EntitlementBundleEntitlementArgs> entitlements) {
            return entitlements(Output.of(entitlements));
        }

        /**
         * @param entitlements List of entitlements in the bundle
         * 
         * @return builder
         * 
         */
        public Builder entitlements(EntitlementBundleEntitlementArgs... entitlements) {
            return entitlements(List.of(entitlements));
        }

        /**
         * @param name The display name for an entitlement bundle.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The display name for an entitlement bundle.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param status The status of the entitlement bundle.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the entitlement bundle.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param target Representation of a resource
         * 
         * @return builder
         * 
         */
        public Builder target(@Nullable Output<EntitlementBundleTargetArgs> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target Representation of a resource
         * 
         * @return builder
         * 
         */
        public Builder target(EntitlementBundleTargetArgs target) {
            return target(Output.of(target));
        }

        /**
         * @param targetResourceOrn The ORN of the target resource. Required when updating the entitlement bundle.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceOrn(@Nullable Output<String> targetResourceOrn) {
            $.targetResourceOrn = targetResourceOrn;
            return this;
        }

        /**
         * @param targetResourceOrn The ORN of the target resource. Required when updating the entitlement bundle.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceOrn(String targetResourceOrn) {
            return targetResourceOrn(Output.of(targetResourceOrn));
        }

        public EntitlementBundleArgs build() {
            return $;
        }
    }

}

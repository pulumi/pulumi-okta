// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.group;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.group.OwnerArgs;
import com.pulumi.okta.group.inputs.OwnerState;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages group owner resource.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.user.User;
 * import com.pulumi.okta.user.UserArgs;
 * import com.pulumi.okta.group.Group;
 * import com.pulumi.okta.group.GroupArgs;
 * import com.pulumi.okta.group.Owner;
 * import com.pulumi.okta.group.OwnerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var test = new User("test", UserArgs.builder()
 *             .firstName("TestAcc")
 *             .lastName("Smith")
 *             .login("testAcc-replace_with_uuid}{@literal @}{@code example.com")
 *             .email("testAcc-replace_with_uuid}{@literal @}{@code example.com")
 *             .build());
 * 
 *         var testGroup = new Group("testGroup", GroupArgs.builder()
 *             .name("testAcc_replace_with_uuid")
 *             .build());
 * 
 *         var testOwner = new Owner("testOwner", OwnerArgs.builder()
 *             .groupId(testGroup.id())
 *             .idOfGroupOwner(test.id())
 *             .type("USER")
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="okta:group/owner:Owner")
public class Owner extends com.pulumi.resources.CustomResource {
    /**
     * The display name of the group owner
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return The display name of the group owner
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * The id of the group
     * 
     */
    @Export(name="groupId", refs={String.class}, tree="[0]")
    private Output<String> groupId;

    /**
     * @return The id of the group
     * 
     */
    public Output<String> groupId() {
        return this.groupId;
    }
    /**
     * The user id of the group owner
     * 
     */
    @Export(name="idOfGroupOwner", refs={String.class}, tree="[0]")
    private Output<String> idOfGroupOwner;

    /**
     * @return The user id of the group owner
     * 
     */
    public Output<String> idOfGroupOwner() {
        return this.idOfGroupOwner;
    }
    /**
     * The ID of the app instance if the originType is APPLICATION. This value is NULL if originType is OKTA_DIRECTORY.
     * 
     */
    @Export(name="originId", refs={String.class}, tree="[0]")
    private Output<String> originId;

    /**
     * @return The ID of the app instance if the originType is APPLICATION. This value is NULL if originType is OKTA_DIRECTORY.
     * 
     */
    public Output<String> originId() {
        return this.originId;
    }
    /**
     * The source where group ownership is managed. Enum: &#34;APPLICATION&#34; &#34;OKTA_DIRECTORY&#34;
     * 
     */
    @Export(name="originType", refs={String.class}, tree="[0]")
    private Output<String> originType;

    /**
     * @return The source where group ownership is managed. Enum: &#34;APPLICATION&#34; &#34;OKTA_DIRECTORY&#34;
     * 
     */
    public Output<String> originType() {
        return this.originType;
    }
    /**
     * If originType is APPLICATION, this parameter is set to FALSE until the owner&#39;s originId is reconciled with an associated Okta ID.
     * 
     */
    @Export(name="resolved", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> resolved;

    /**
     * @return If originType is APPLICATION, this parameter is set to FALSE until the owner&#39;s originId is reconciled with an associated Okta ID.
     * 
     */
    public Output<Boolean> resolved() {
        return this.resolved;
    }
    /**
     * The entity type of the owner. Enum: &#34;GROUP&#34; &#34;USER&#34;
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The entity type of the owner. Enum: &#34;GROUP&#34; &#34;USER&#34;
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Owner(java.lang.String name) {
        this(name, OwnerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Owner(java.lang.String name, OwnerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Owner(java.lang.String name, OwnerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:group/owner:Owner", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Owner(java.lang.String name, Output<java.lang.String> id, @Nullable OwnerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:group/owner:Owner", name, state, makeResourceOptions(options, id), false);
    }

    private static OwnerArgs makeArgs(OwnerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? OwnerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Owner get(java.lang.String name, Output<java.lang.String> id, @Nullable OwnerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Owner(name, id, state, options);
    }
}

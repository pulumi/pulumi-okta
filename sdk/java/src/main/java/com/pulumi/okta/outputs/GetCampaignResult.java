// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.GetCampaignNotificationSettings;
import com.pulumi.okta.outputs.GetCampaignPrincipalScopeSettings;
import com.pulumi.okta.outputs.GetCampaignRemediationSettings;
import com.pulumi.okta.outputs.GetCampaignResourceSettings;
import com.pulumi.okta.outputs.GetCampaignReviewerSettings;
import com.pulumi.okta.outputs.GetCampaignScheduleSettings;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCampaignResult {
    private String campaignType;
    private String created;
    private String createdBy;
    private String description;
    /**
     * @return The ID of this resource.
     * 
     */
    private String id;
    private String lastUpdated;
    private String lastUpdatedBy;
    private String name;
    private @Nullable GetCampaignNotificationSettings notificationSettings;
    private @Nullable GetCampaignPrincipalScopeSettings principalScopeSettings;
    private String recurringCampaignId;
    private @Nullable GetCampaignRemediationSettings remediationSettings;
    private @Nullable GetCampaignResourceSettings resourceSettings;
    private @Nullable GetCampaignReviewerSettings reviewerSettings;
    private @Nullable GetCampaignScheduleSettings scheduleSettings;
    private String status;

    private GetCampaignResult() {}
    public String campaignType() {
        return this.campaignType;
    }
    public String created() {
        return this.created;
    }
    public String createdBy() {
        return this.createdBy;
    }
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of this resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String lastUpdated() {
        return this.lastUpdated;
    }
    public String lastUpdatedBy() {
        return this.lastUpdatedBy;
    }
    public String name() {
        return this.name;
    }
    public Optional<GetCampaignNotificationSettings> notificationSettings() {
        return Optional.ofNullable(this.notificationSettings);
    }
    public Optional<GetCampaignPrincipalScopeSettings> principalScopeSettings() {
        return Optional.ofNullable(this.principalScopeSettings);
    }
    public String recurringCampaignId() {
        return this.recurringCampaignId;
    }
    public Optional<GetCampaignRemediationSettings> remediationSettings() {
        return Optional.ofNullable(this.remediationSettings);
    }
    public Optional<GetCampaignResourceSettings> resourceSettings() {
        return Optional.ofNullable(this.resourceSettings);
    }
    public Optional<GetCampaignReviewerSettings> reviewerSettings() {
        return Optional.ofNullable(this.reviewerSettings);
    }
    public Optional<GetCampaignScheduleSettings> scheduleSettings() {
        return Optional.ofNullable(this.scheduleSettings);
    }
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCampaignResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String campaignType;
        private String created;
        private String createdBy;
        private String description;
        private String id;
        private String lastUpdated;
        private String lastUpdatedBy;
        private String name;
        private @Nullable GetCampaignNotificationSettings notificationSettings;
        private @Nullable GetCampaignPrincipalScopeSettings principalScopeSettings;
        private String recurringCampaignId;
        private @Nullable GetCampaignRemediationSettings remediationSettings;
        private @Nullable GetCampaignResourceSettings resourceSettings;
        private @Nullable GetCampaignReviewerSettings reviewerSettings;
        private @Nullable GetCampaignScheduleSettings scheduleSettings;
        private String status;
        public Builder() {}
        public Builder(GetCampaignResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.campaignType = defaults.campaignType;
    	      this.created = defaults.created;
    	      this.createdBy = defaults.createdBy;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.lastUpdated = defaults.lastUpdated;
    	      this.lastUpdatedBy = defaults.lastUpdatedBy;
    	      this.name = defaults.name;
    	      this.notificationSettings = defaults.notificationSettings;
    	      this.principalScopeSettings = defaults.principalScopeSettings;
    	      this.recurringCampaignId = defaults.recurringCampaignId;
    	      this.remediationSettings = defaults.remediationSettings;
    	      this.resourceSettings = defaults.resourceSettings;
    	      this.reviewerSettings = defaults.reviewerSettings;
    	      this.scheduleSettings = defaults.scheduleSettings;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder campaignType(String campaignType) {
            if (campaignType == null) {
              throw new MissingRequiredPropertyException("GetCampaignResult", "campaignType");
            }
            this.campaignType = campaignType;
            return this;
        }
        @CustomType.Setter
        public Builder created(String created) {
            if (created == null) {
              throw new MissingRequiredPropertyException("GetCampaignResult", "created");
            }
            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetCampaignResult", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetCampaignResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCampaignResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdated(String lastUpdated) {
            if (lastUpdated == null) {
              throw new MissingRequiredPropertyException("GetCampaignResult", "lastUpdated");
            }
            this.lastUpdated = lastUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedBy(String lastUpdatedBy) {
            if (lastUpdatedBy == null) {
              throw new MissingRequiredPropertyException("GetCampaignResult", "lastUpdatedBy");
            }
            this.lastUpdatedBy = lastUpdatedBy;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCampaignResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder notificationSettings(@Nullable GetCampaignNotificationSettings notificationSettings) {

            this.notificationSettings = notificationSettings;
            return this;
        }
        @CustomType.Setter
        public Builder principalScopeSettings(@Nullable GetCampaignPrincipalScopeSettings principalScopeSettings) {

            this.principalScopeSettings = principalScopeSettings;
            return this;
        }
        @CustomType.Setter
        public Builder recurringCampaignId(String recurringCampaignId) {
            if (recurringCampaignId == null) {
              throw new MissingRequiredPropertyException("GetCampaignResult", "recurringCampaignId");
            }
            this.recurringCampaignId = recurringCampaignId;
            return this;
        }
        @CustomType.Setter
        public Builder remediationSettings(@Nullable GetCampaignRemediationSettings remediationSettings) {

            this.remediationSettings = remediationSettings;
            return this;
        }
        @CustomType.Setter
        public Builder resourceSettings(@Nullable GetCampaignResourceSettings resourceSettings) {

            this.resourceSettings = resourceSettings;
            return this;
        }
        @CustomType.Setter
        public Builder reviewerSettings(@Nullable GetCampaignReviewerSettings reviewerSettings) {

            this.reviewerSettings = reviewerSettings;
            return this;
        }
        @CustomType.Setter
        public Builder scheduleSettings(@Nullable GetCampaignScheduleSettings scheduleSettings) {

            this.scheduleSettings = scheduleSettings;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetCampaignResult", "status");
            }
            this.status = status;
            return this;
        }
        public GetCampaignResult build() {
            final var _resultValue = new GetCampaignResult();
            _resultValue.campaignType = campaignType;
            _resultValue.created = created;
            _resultValue.createdBy = createdBy;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.lastUpdated = lastUpdated;
            _resultValue.lastUpdatedBy = lastUpdatedBy;
            _resultValue.name = name;
            _resultValue.notificationSettings = notificationSettings;
            _resultValue.principalScopeSettings = principalScopeSettings;
            _resultValue.recurringCampaignId = recurringCampaignId;
            _resultValue.remediationSettings = remediationSettings;
            _resultValue.resourceSettings = resourceSettings;
            _resultValue.reviewerSettings = reviewerSettings;
            _resultValue.scheduleSettings = scheduleSettings;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}

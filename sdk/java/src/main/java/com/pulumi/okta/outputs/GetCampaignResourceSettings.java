// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.GetCampaignResourceSettingsExcludedResource;
import com.pulumi.okta.outputs.GetCampaignResourceSettingsTargetResource;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetCampaignResourceSettings {
    /**
     * @return An array of resources that are excluded from the review.
     * 
     */
    private @Nullable List<GetCampaignResourceSettingsExcludedResource> excludedResources;
    /**
     * @return Include admin roles.
     * 
     */
    private Boolean includeAdminRoles;
    /**
     * @return Include entitlements for this application.
     * 
     */
    private Boolean includeEntitlements;
    /**
     * @return Only include individually assigned groups.
     * 
     */
    private Boolean individuallyAssignedAppsOnly;
    /**
     * @return Only include individually assigned groups.
     * 
     */
    private Boolean individuallyAssignedGroupsOnly;
    /**
     * @return Only include out-of-policy entitlements.
     * 
     */
    private Boolean onlyIncludeOutOfPolicyEntitlements;
    /**
     * @return Represents a resource that will be part of Access certifications.
     * 
     */
    private @Nullable List<GetCampaignResourceSettingsTargetResource> targetResources;
    /**
     * @return The type of Okta resource.
     * 
     */
    private String type;

    private GetCampaignResourceSettings() {}
    /**
     * @return An array of resources that are excluded from the review.
     * 
     */
    public List<GetCampaignResourceSettingsExcludedResource> excludedResources() {
        return this.excludedResources == null ? List.of() : this.excludedResources;
    }
    /**
     * @return Include admin roles.
     * 
     */
    public Boolean includeAdminRoles() {
        return this.includeAdminRoles;
    }
    /**
     * @return Include entitlements for this application.
     * 
     */
    public Boolean includeEntitlements() {
        return this.includeEntitlements;
    }
    /**
     * @return Only include individually assigned groups.
     * 
     */
    public Boolean individuallyAssignedAppsOnly() {
        return this.individuallyAssignedAppsOnly;
    }
    /**
     * @return Only include individually assigned groups.
     * 
     */
    public Boolean individuallyAssignedGroupsOnly() {
        return this.individuallyAssignedGroupsOnly;
    }
    /**
     * @return Only include out-of-policy entitlements.
     * 
     */
    public Boolean onlyIncludeOutOfPolicyEntitlements() {
        return this.onlyIncludeOutOfPolicyEntitlements;
    }
    /**
     * @return Represents a resource that will be part of Access certifications.
     * 
     */
    public List<GetCampaignResourceSettingsTargetResource> targetResources() {
        return this.targetResources == null ? List.of() : this.targetResources;
    }
    /**
     * @return The type of Okta resource.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCampaignResourceSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetCampaignResourceSettingsExcludedResource> excludedResources;
        private Boolean includeAdminRoles;
        private Boolean includeEntitlements;
        private Boolean individuallyAssignedAppsOnly;
        private Boolean individuallyAssignedGroupsOnly;
        private Boolean onlyIncludeOutOfPolicyEntitlements;
        private @Nullable List<GetCampaignResourceSettingsTargetResource> targetResources;
        private String type;
        public Builder() {}
        public Builder(GetCampaignResourceSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludedResources = defaults.excludedResources;
    	      this.includeAdminRoles = defaults.includeAdminRoles;
    	      this.includeEntitlements = defaults.includeEntitlements;
    	      this.individuallyAssignedAppsOnly = defaults.individuallyAssignedAppsOnly;
    	      this.individuallyAssignedGroupsOnly = defaults.individuallyAssignedGroupsOnly;
    	      this.onlyIncludeOutOfPolicyEntitlements = defaults.onlyIncludeOutOfPolicyEntitlements;
    	      this.targetResources = defaults.targetResources;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder excludedResources(@Nullable List<GetCampaignResourceSettingsExcludedResource> excludedResources) {

            this.excludedResources = excludedResources;
            return this;
        }
        public Builder excludedResources(GetCampaignResourceSettingsExcludedResource... excludedResources) {
            return excludedResources(List.of(excludedResources));
        }
        @CustomType.Setter
        public Builder includeAdminRoles(Boolean includeAdminRoles) {
            if (includeAdminRoles == null) {
              throw new MissingRequiredPropertyException("GetCampaignResourceSettings", "includeAdminRoles");
            }
            this.includeAdminRoles = includeAdminRoles;
            return this;
        }
        @CustomType.Setter
        public Builder includeEntitlements(Boolean includeEntitlements) {
            if (includeEntitlements == null) {
              throw new MissingRequiredPropertyException("GetCampaignResourceSettings", "includeEntitlements");
            }
            this.includeEntitlements = includeEntitlements;
            return this;
        }
        @CustomType.Setter
        public Builder individuallyAssignedAppsOnly(Boolean individuallyAssignedAppsOnly) {
            if (individuallyAssignedAppsOnly == null) {
              throw new MissingRequiredPropertyException("GetCampaignResourceSettings", "individuallyAssignedAppsOnly");
            }
            this.individuallyAssignedAppsOnly = individuallyAssignedAppsOnly;
            return this;
        }
        @CustomType.Setter
        public Builder individuallyAssignedGroupsOnly(Boolean individuallyAssignedGroupsOnly) {
            if (individuallyAssignedGroupsOnly == null) {
              throw new MissingRequiredPropertyException("GetCampaignResourceSettings", "individuallyAssignedGroupsOnly");
            }
            this.individuallyAssignedGroupsOnly = individuallyAssignedGroupsOnly;
            return this;
        }
        @CustomType.Setter
        public Builder onlyIncludeOutOfPolicyEntitlements(Boolean onlyIncludeOutOfPolicyEntitlements) {
            if (onlyIncludeOutOfPolicyEntitlements == null) {
              throw new MissingRequiredPropertyException("GetCampaignResourceSettings", "onlyIncludeOutOfPolicyEntitlements");
            }
            this.onlyIncludeOutOfPolicyEntitlements = onlyIncludeOutOfPolicyEntitlements;
            return this;
        }
        @CustomType.Setter
        public Builder targetResources(@Nullable List<GetCampaignResourceSettingsTargetResource> targetResources) {

            this.targetResources = targetResources;
            return this;
        }
        public Builder targetResources(GetCampaignResourceSettingsTargetResource... targetResources) {
            return targetResources(List.of(targetResources));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetCampaignResourceSettings", "type");
            }
            this.type = type;
            return this;
        }
        public GetCampaignResourceSettings build() {
            final var _resultValue = new GetCampaignResourceSettings();
            _resultValue.excludedResources = excludedResources;
            _resultValue.includeAdminRoles = includeAdminRoles;
            _resultValue.includeEntitlements = includeEntitlements;
            _resultValue.individuallyAssignedAppsOnly = individuallyAssignedAppsOnly;
            _resultValue.individuallyAssignedGroupsOnly = individuallyAssignedGroupsOnly;
            _resultValue.onlyIncludeOutOfPolicyEntitlements = onlyIncludeOutOfPolicyEntitlements;
            _resultValue.targetResources = targetResources;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceSetArgs Empty = new ResourceSetArgs();

    /**
     * A description of the Resource Set.
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return A description of the Resource Set.
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * Unique name given to the Resource Set.
     * 
     */
    @Import(name="label", required=true)
    private Output<String> label;

    /**
     * @return Unique name given to the Resource Set.
     * 
     */
    public Output<String> label() {
        return this.label;
    }

    /**
     * The endpoints that reference the resources to be included in the new Resource Set. At least one
     * endpoint must be specified when creating resource set.
     * 
     */
    @Import(name="resources")
    private @Nullable Output<List<String>> resources;

    /**
     * @return The endpoints that reference the resources to be included in the new Resource Set. At least one
     * endpoint must be specified when creating resource set.
     * 
     */
    public Optional<Output<List<String>>> resources() {
        return Optional.ofNullable(this.resources);
    }

    private ResourceSetArgs() {}

    private ResourceSetArgs(ResourceSetArgs $) {
        this.description = $.description;
        this.label = $.label;
        this.resources = $.resources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceSetArgs $;

        public Builder() {
            $ = new ResourceSetArgs();
        }

        public Builder(ResourceSetArgs defaults) {
            $ = new ResourceSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A description of the Resource Set.
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the Resource Set.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param label Unique name given to the Resource Set.
         * 
         * @return builder
         * 
         */
        public Builder label(Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label Unique name given to the Resource Set.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param resources The endpoints that reference the resources to be included in the new Resource Set. At least one
         * endpoint must be specified when creating resource set.
         * 
         * @return builder
         * 
         */
        public Builder resources(@Nullable Output<List<String>> resources) {
            $.resources = resources;
            return this;
        }

        /**
         * @param resources The endpoints that reference the resources to be included in the new Resource Set. At least one
         * endpoint must be specified when creating resource set.
         * 
         * @return builder
         * 
         */
        public Builder resources(List<String> resources) {
            return resources(Output.of(resources));
        }

        /**
         * @param resources The endpoints that reference the resources to be included in the new Resource Set. At least one
         * endpoint must be specified when creating resource set.
         * 
         * @return builder
         * 
         */
        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }

        public ResourceSetArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("ResourceSetArgs", "description");
            }
            if ($.label == null) {
                throw new MissingRequiredPropertyException("ResourceSetArgs", "label");
            }
            return $;
        }
    }

}

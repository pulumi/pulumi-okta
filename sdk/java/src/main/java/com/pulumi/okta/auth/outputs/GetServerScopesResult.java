// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.auth.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.okta.auth.outputs.GetServerScopesScope;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServerScopesResult {
    private final String authServerId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return collection of authorization server scopes retrieved from Okta with the following properties.
     * 
     */
    private final List<GetServerScopesScope> scopes;

    @CustomType.Constructor
    private GetServerScopesResult(
        @CustomType.Parameter("authServerId") String authServerId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("scopes") List<GetServerScopesScope> scopes) {
        this.authServerId = authServerId;
        this.id = id;
        this.scopes = scopes;
    }

    public String authServerId() {
        return this.authServerId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return collection of authorization server scopes retrieved from Okta with the following properties.
     * 
     */
    public List<GetServerScopesScope> scopes() {
        return this.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServerScopesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String authServerId;
        private String id;
        private List<GetServerScopesScope> scopes;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServerScopesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authServerId = defaults.authServerId;
    	      this.id = defaults.id;
    	      this.scopes = defaults.scopes;
        }

        public Builder authServerId(String authServerId) {
            this.authServerId = Objects.requireNonNull(authServerId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder scopes(List<GetServerScopesScope> scopes) {
            this.scopes = Objects.requireNonNull(scopes);
            return this;
        }
        public Builder scopes(GetServerScopesScope... scopes) {
            return scopes(List.of(scopes));
        }        public GetServerScopesResult build() {
            return new GetServerScopesResult(authServerId, id, scopes);
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs Empty = new GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs();

    @Import(name="minimum", required=true)
    private Output<String> minimum;

    public Output<String> minimum() {
        return this.minimum;
    }

    private GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs() {}

    private GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs(GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs $) {
        this.minimum = $.minimum;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs $;

        public Builder() {
            $ = new GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs();
        }

        public Builder(GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs defaults) {
            $ = new GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs(Objects.requireNonNull(defaults));
        }

        public Builder minimum(Output<String> minimum) {
            $.minimum = minimum;
            return this;
        }

        public Builder minimum(String minimum) {
            return minimum(Output.of(minimum));
        }

        public GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs build() {
            if ($.minimum == null) {
                throw new MissingRequiredPropertyException("GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs", "minimum");
            }
            return $;
        }
    }

}

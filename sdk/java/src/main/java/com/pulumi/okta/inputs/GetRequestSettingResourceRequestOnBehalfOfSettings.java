// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.inputs.GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRequestSettingResourceRequestOnBehalfOfSettings extends com.pulumi.resources.InvokeArgs {

    public static final GetRequestSettingResourceRequestOnBehalfOfSettings Empty = new GetRequestSettingResourceRequestOnBehalfOfSettings();

    @Import(name="allowed", required=true)
    private Boolean allowed;

    public Boolean allowed() {
        return this.allowed;
    }

    @Import(name="onlyFors")
    private @Nullable List<GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor> onlyFors;

    public Optional<List<GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor>> onlyFors() {
        return Optional.ofNullable(this.onlyFors);
    }

    private GetRequestSettingResourceRequestOnBehalfOfSettings() {}

    private GetRequestSettingResourceRequestOnBehalfOfSettings(GetRequestSettingResourceRequestOnBehalfOfSettings $) {
        this.allowed = $.allowed;
        this.onlyFors = $.onlyFors;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRequestSettingResourceRequestOnBehalfOfSettings defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRequestSettingResourceRequestOnBehalfOfSettings $;

        public Builder() {
            $ = new GetRequestSettingResourceRequestOnBehalfOfSettings();
        }

        public Builder(GetRequestSettingResourceRequestOnBehalfOfSettings defaults) {
            $ = new GetRequestSettingResourceRequestOnBehalfOfSettings(Objects.requireNonNull(defaults));
        }

        public Builder allowed(Boolean allowed) {
            $.allowed = allowed;
            return this;
        }

        public Builder onlyFors(@Nullable List<GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor> onlyFors) {
            $.onlyFors = onlyFors;
            return this;
        }

        public Builder onlyFors(GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor... onlyFors) {
            return onlyFors(List.of(onlyFors));
        }

        public GetRequestSettingResourceRequestOnBehalfOfSettings build() {
            if ($.allowed == null) {
                throw new MissingRequiredPropertyException("GetRequestSettingResourceRequestOnBehalfOfSettings", "allowed");
            }
            return $;
        }
    }

}

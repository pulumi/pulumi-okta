// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.idp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.idp.SocialArgs;
import com.pulumi.okta.idp.inputs.SocialState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates a Social Identity Provider. This resource allows you to create and configure a Social Identity Provider.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.idp.Social;
 * import com.pulumi.okta.idp.SocialArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Social("example", SocialArgs.builder()
 *             .type("FACEBOOK")
 *             .protocolType("OAUTH2")
 *             .name("testAcc_facebook_replace_with_uuid")
 *             .scopes(            
 *                 "public_profile",
 *                 "email")
 *             .clientId("abcd123")
 *             .clientSecret("abcd123")
 *             .usernameTemplate("idpuser.email")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:idp/social:Social example &lt;idp_id&gt;
 * ```
 * 
 */
@ResourceType(type="okta:idp/social:Social")
public class Social extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the account linking action for an IdP user. Default: `AUTO`
     * 
     */
    @Export(name="accountLinkAction", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accountLinkAction;

    /**
     * @return Specifies the account linking action for an IdP user. Default: `AUTO`
     * 
     */
    public Output<Optional<String>> accountLinkAction() {
        return Codegen.optional(this.accountLinkAction);
    }
    /**
     * Group memberships to determine link candidates.
     * 
     */
    @Export(name="accountLinkGroupIncludes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> accountLinkGroupIncludes;

    /**
     * @return Group memberships to determine link candidates.
     * 
     */
    public Output<Optional<List<String>>> accountLinkGroupIncludes() {
        return Codegen.optional(this.accountLinkGroupIncludes);
    }
    /**
     * The Key ID that you obtained from Apple when you created the private key for the client
     * 
     */
    @Export(name="appleKid", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> appleKid;

    /**
     * @return The Key ID that you obtained from Apple when you created the private key for the client
     * 
     */
    public Output<Optional<String>> appleKid() {
        return Codegen.optional(this.appleKid);
    }
    /**
     * The Key ID that you obtained from Apple when you created the private key for the client. PrivateKey is required when resource is first created. For all consecutive updates, it can be empty/omitted and keeps the existing value if it is empty/omitted. PrivateKey isn&#39;t returned when importing this resource.
     * 
     */
    @Export(name="applePrivateKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> applePrivateKey;

    /**
     * @return The Key ID that you obtained from Apple when you created the private key for the client. PrivateKey is required when resource is first created. For all consecutive updates, it can be empty/omitted and keeps the existing value if it is empty/omitted. PrivateKey isn&#39;t returned when importing this resource.
     * 
     */
    public Output<Optional<String>> applePrivateKey() {
        return Codegen.optional(this.applePrivateKey);
    }
    /**
     * The Team ID associated with your Apple developer account
     * 
     */
    @Export(name="appleTeamId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> appleTeamId;

    /**
     * @return The Team ID associated with your Apple developer account
     * 
     */
    public Output<Optional<String>> appleTeamId() {
        return Codegen.optional(this.appleTeamId);
    }
    /**
     * The method of making an authorization request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`.
     * 
     */
    @Export(name="authorizationBinding", refs={String.class}, tree="[0]")
    private Output<String> authorizationBinding;

    /**
     * @return The method of making an authorization request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`.
     * 
     */
    public Output<String> authorizationBinding() {
        return this.authorizationBinding;
    }
    /**
     * IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.
     * 
     */
    @Export(name="authorizationUrl", refs={String.class}, tree="[0]")
    private Output<String> authorizationUrl;

    /**
     * @return IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.
     * 
     */
    public Output<String> authorizationUrl() {
        return this.authorizationUrl;
    }
    /**
     * Unique identifier issued by AS for the Okta IdP instance.
     * 
     */
    @Export(name="clientId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientId;

    /**
     * @return Unique identifier issued by AS for the Okta IdP instance.
     * 
     */
    public Output<Optional<String>> clientId() {
        return Codegen.optional(this.clientId);
    }
    /**
     * Client secret issued by AS for the Okta IdP instance.
     * 
     */
    @Export(name="clientSecret", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientSecret;

    /**
     * @return Client secret issued by AS for the Okta IdP instance.
     * 
     */
    public Output<Optional<String>> clientSecret() {
        return Codegen.optional(this.clientSecret);
    }
    /**
     * Action for a previously deprovisioned IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`
     * 
     */
    @Export(name="deprovisionedAction", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deprovisionedAction;

    /**
     * @return Action for a previously deprovisioned IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`
     * 
     */
    public Output<Optional<String>> deprovisionedAction() {
        return Codegen.optional(this.deprovisionedAction);
    }
    /**
     * Provisioning action for IdP user&#39;s group memberships. It can be `NONE`, `SYNC`, `APPEND`, or `ASSIGN`. Default: `NONE`
     * 
     */
    @Export(name="groupsAction", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> groupsAction;

    /**
     * @return Provisioning action for IdP user&#39;s group memberships. It can be `NONE`, `SYNC`, `APPEND`, or `ASSIGN`. Default: `NONE`
     * 
     */
    public Output<Optional<String>> groupsAction() {
        return Codegen.optional(this.groupsAction);
    }
    /**
     * List of Okta Group IDs to add an IdP user as a member with the `ASSIGN` `groupsAction`.
     * 
     */
    @Export(name="groupsAssignments", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> groupsAssignments;

    /**
     * @return List of Okta Group IDs to add an IdP user as a member with the `ASSIGN` `groupsAction`.
     * 
     */
    public Output<Optional<List<String>>> groupsAssignments() {
        return Codegen.optional(this.groupsAssignments);
    }
    /**
     * IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.
     * 
     */
    @Export(name="groupsAttribute", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> groupsAttribute;

    /**
     * @return IdP user profile attribute name (case-insensitive) for an array value that contains group memberships.
     * 
     */
    public Output<Optional<String>> groupsAttribute() {
        return Codegen.optional(this.groupsAttribute);
    }
    /**
     * Whitelist of Okta Group identifiers that are allowed for the `APPEND` or `SYNC` `groupsAction`.
     * 
     */
    @Export(name="groupsFilters", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> groupsFilters;

    /**
     * @return Whitelist of Okta Group identifiers that are allowed for the `APPEND` or `SYNC` `groupsAction`.
     * 
     */
    public Output<Optional<List<String>>> groupsFilters() {
        return Codegen.optional(this.groupsFilters);
    }
    /**
     * Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `ORG_URL` or `CUSTOM_URL`. Default: `ORG_URL`
     * 
     */
    @Export(name="issuerMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> issuerMode;

    /**
     * @return Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL. It can be `ORG_URL` or `CUSTOM_URL`. Default: `ORG_URL`
     * 
     */
    public Output<Optional<String>> issuerMode() {
        return Codegen.optional(this.issuerMode);
    }
    /**
     * Maximum allowable clock-skew when processing messages from the IdP.
     * 
     */
    @Export(name="maxClockSkew", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maxClockSkew;

    /**
     * @return Maximum allowable clock-skew when processing messages from the IdP.
     * 
     */
    public Output<Optional<Integer>> maxClockSkew() {
        return Codegen.optional(this.maxClockSkew);
    }
    /**
     * Name of the IdP
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the IdP
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Determines if the IdP should act as a source of truth for user profile attributes.
     * 
     */
    @Export(name="profileMaster", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> profileMaster;

    /**
     * @return Determines if the IdP should act as a source of truth for user profile attributes.
     * 
     */
    public Output<Optional<Boolean>> profileMaster() {
        return Codegen.optional(this.profileMaster);
    }
    /**
     * The type of protocol to use. It can be `OIDC` or `OAUTH2`. Default: `OAUTH2`
     * 
     */
    @Export(name="protocolType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> protocolType;

    /**
     * @return The type of protocol to use. It can be `OIDC` or `OAUTH2`. Default: `OAUTH2`
     * 
     */
    public Output<Optional<String>> protocolType() {
        return Codegen.optional(this.protocolType);
    }
    /**
     * Provisioning action for an IdP user during authentication. Default: `AUTO`
     * 
     */
    @Export(name="provisioningAction", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> provisioningAction;

    /**
     * @return Provisioning action for an IdP user during authentication. Default: `AUTO`
     * 
     */
    public Output<Optional<String>> provisioningAction() {
        return Codegen.optional(this.provisioningAction);
    }
    /**
     * The scopes of the IdP.
     * 
     */
    @Export(name="scopes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> scopes;

    /**
     * @return The scopes of the IdP.
     * 
     */
    public Output<List<String>> scopes() {
        return this.scopes;
    }
    /**
     * Default to `ACTIVE`
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> status;

    /**
     * @return Default to `ACTIVE`
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * Okta user profile attribute for matching transformed IdP username. Only for matchType `CUSTOM_ATTRIBUTE`.
     * 
     */
    @Export(name="subjectMatchAttribute", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> subjectMatchAttribute;

    /**
     * @return Okta user profile attribute for matching transformed IdP username. Only for matchType `CUSTOM_ATTRIBUTE`.
     * 
     */
    public Output<Optional<String>> subjectMatchAttribute() {
        return Codegen.optional(this.subjectMatchAttribute);
    }
    /**
     * Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `USERNAME`. It can be set to `USERNAME`, `EMAIL`, `USERNAME_OR_EMAIL` or `CUSTOM_ATTRIBUTE`.
     * 
     */
    @Export(name="subjectMatchType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> subjectMatchType;

    /**
     * @return Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username. By default, it is set to `USERNAME`. It can be set to `USERNAME`, `EMAIL`, `USERNAME_OR_EMAIL` or `CUSTOM_ATTRIBUTE`.
     * 
     */
    public Output<Optional<String>> subjectMatchType() {
        return Codegen.optional(this.subjectMatchType);
    }
    /**
     * Action for a previously suspended IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`
     * 
     */
    @Export(name="suspendedAction", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> suspendedAction;

    /**
     * @return Action for a previously suspended IdP user during authentication. Can be `NONE` or `REACTIVATE`. Default: `NONE`
     * 
     */
    public Output<Optional<String>> suspendedAction() {
        return Codegen.optional(this.suspendedAction);
    }
    /**
     * The method of making a token request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`.
     * 
     */
    @Export(name="tokenBinding", refs={String.class}, tree="[0]")
    private Output<String> tokenBinding;

    /**
     * @return The method of making a token request. It can be set to `HTTP-POST` or `HTTP-REDIRECT`.
     * 
     */
    public Output<String> tokenBinding() {
        return this.tokenBinding;
    }
    /**
     * IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.
     * 
     */
    @Export(name="tokenUrl", refs={String.class}, tree="[0]")
    private Output<String> tokenUrl;

    /**
     * @return IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.
     * 
     */
    public Output<String> tokenUrl() {
        return this.tokenUrl;
    }
    /**
     * Trust audience for the Okta IdP instance.
     * 
     */
    @Export(name="trustAudience", refs={String.class}, tree="[0]")
    private Output<String> trustAudience;

    /**
     * @return Trust audience for the Okta IdP instance.
     * 
     */
    public Output<String> trustAudience() {
        return this.trustAudience;
    }
    /**
     * Trust issuer for the Okta IdP instance.
     * 
     */
    @Export(name="trustIssuer", refs={String.class}, tree="[0]")
    private Output<String> trustIssuer;

    /**
     * @return Trust issuer for the Okta IdP instance.
     * 
     */
    public Output<String> trustIssuer() {
        return this.trustIssuer;
    }
    /**
     * Trust kid for the Okta IdP instance.
     * 
     */
    @Export(name="trustKid", refs={String.class}, tree="[0]")
    private Output<String> trustKid;

    /**
     * @return Trust kid for the Okta IdP instance.
     * 
     */
    public Output<String> trustKid() {
        return this.trustKid;
    }
    /**
     * Trust revocation for the Okta IdP instance.
     * 
     */
    @Export(name="trustRevocation", refs={String.class}, tree="[0]")
    private Output<String> trustRevocation;

    /**
     * @return Trust revocation for the Okta IdP instance.
     * 
     */
    public Output<String> trustRevocation() {
        return this.trustRevocation;
    }
    /**
     * Trust revocation cache lifetime for the Okta IdP instance.
     * 
     */
    @Export(name="trustRevocationCacheLifetime", refs={Integer.class}, tree="[0]")
    private Output<Integer> trustRevocationCacheLifetime;

    /**
     * @return Trust revocation cache lifetime for the Okta IdP instance.
     * 
     */
    public Output<Integer> trustRevocationCacheLifetime() {
        return this.trustRevocationCacheLifetime;
    }
    /**
     * Identity Provider Types: https://developer.okta.com/docs/reference/api/idps/#identity-provider-type
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Identity Provider Types: https://developer.okta.com/docs/reference/api/idps/#identity-provider-type
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Okta EL Expression to generate or transform a unique username for the IdP user. Default: `idpuser.email`
     * 
     */
    @Export(name="usernameTemplate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> usernameTemplate;

    /**
     * @return Okta EL Expression to generate or transform a unique username for the IdP user. Default: `idpuser.email`
     * 
     */
    public Output<Optional<String>> usernameTemplate() {
        return Codegen.optional(this.usernameTemplate);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Social(java.lang.String name) {
        this(name, SocialArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Social(java.lang.String name, SocialArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Social(java.lang.String name, SocialArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:idp/social:Social", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Social(java.lang.String name, Output<java.lang.String> id, @Nullable SocialState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:idp/social:Social", name, state, makeResourceOptions(options, id), false);
    }

    private static SocialArgs makeArgs(SocialArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SocialArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "applePrivateKey",
                "clientSecret"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Social get(java.lang.String name, Output<java.lang.String> id, @Nullable SocialState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Social(name, id, state, options);
    }
}

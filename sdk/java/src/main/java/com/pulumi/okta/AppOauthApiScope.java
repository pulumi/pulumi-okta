// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.AppOauthApiScopeArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.AppOauthApiScopeState;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manages API scopes for OAuth applications.
 * This resource allows you to grant or revoke API scopes for OAuth2 applications within your organization.
 * Note: you have to create an application before using this resource.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.AppOauthApiScope;
 * import com.pulumi.okta.AppOauthApiScopeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new AppOauthApiScope("example", AppOauthApiScopeArgs.builder()
 *             .appId("<application_id>")
 *             .issuer("<your org domain>")
 *             .scopes(            
 *                 "okta.users.read",
 *                 "okta.users.manage")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:index/appOauthApiScope:AppOauthApiScope example &amp;#60;app id&amp;#62
 * ```
 * 
 */
@ResourceType(type="okta:index/appOauthApiScope:AppOauthApiScope")
public class AppOauthApiScope extends com.pulumi.resources.CustomResource {
    /**
     * ID of the application.
     * 
     */
    @Export(name="appId", refs={String.class}, tree="[0]")
    private Output<String> appId;

    /**
     * @return ID of the application.
     * 
     */
    public Output<String> appId() {
        return this.appId;
    }
    /**
     * The issuer of your Org Authorization Server, your Org URL.
     * 
     */
    @Export(name="issuer", refs={String.class}, tree="[0]")
    private Output<String> issuer;

    /**
     * @return The issuer of your Org Authorization Server, your Org URL.
     * 
     */
    public Output<String> issuer() {
        return this.issuer;
    }
    /**
     * Scopes of the application for which consent is granted.
     * 
     */
    @Export(name="scopes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> scopes;

    /**
     * @return Scopes of the application for which consent is granted.
     * 
     */
    public Output<List<String>> scopes() {
        return this.scopes;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AppOauthApiScope(String name) {
        this(name, AppOauthApiScopeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AppOauthApiScope(String name, AppOauthApiScopeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AppOauthApiScope(String name, AppOauthApiScopeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/appOauthApiScope:AppOauthApiScope", name, args == null ? AppOauthApiScopeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AppOauthApiScope(String name, Output<String> id, @Nullable AppOauthApiScopeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/appOauthApiScope:AppOauthApiScope", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AppOauthApiScope get(String name, Output<String> id, @Nullable AppOauthApiScopeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AppOauthApiScope(name, id, state, options);
    }
}

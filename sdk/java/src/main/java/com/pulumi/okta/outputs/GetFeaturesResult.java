// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.GetFeaturesFeature;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFeaturesResult {
    /**
     * @return List of `okta.Feature` belonging to the organization
     * 
     */
    private List<GetFeaturesFeature> features;
    /**
     * @return Generated ID
     * 
     */
    private String id;
    /**
     * @return Searches for features whose label or name property matches this value exactly. Case sensitive
     * 
     */
    private @Nullable String label;
    /**
     * @return Searches for features whose label or name property substring match this value. Case sensitive
     * 
     */
    private @Nullable String substring;

    private GetFeaturesResult() {}
    /**
     * @return List of `okta.Feature` belonging to the organization
     * 
     */
    public List<GetFeaturesFeature> features() {
        return this.features;
    }
    /**
     * @return Generated ID
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Searches for features whose label or name property matches this value exactly. Case sensitive
     * 
     */
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }
    /**
     * @return Searches for features whose label or name property substring match this value. Case sensitive
     * 
     */
    public Optional<String> substring() {
        return Optional.ofNullable(this.substring);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFeaturesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetFeaturesFeature> features;
        private String id;
        private @Nullable String label;
        private @Nullable String substring;
        public Builder() {}
        public Builder(GetFeaturesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.features = defaults.features;
    	      this.id = defaults.id;
    	      this.label = defaults.label;
    	      this.substring = defaults.substring;
        }

        @CustomType.Setter
        public Builder features(List<GetFeaturesFeature> features) {
            if (features == null) {
              throw new MissingRequiredPropertyException("GetFeaturesResult", "features");
            }
            this.features = features;
            return this;
        }
        public Builder features(GetFeaturesFeature... features) {
            return features(List.of(features));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFeaturesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder label(@Nullable String label) {

            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder substring(@Nullable String substring) {

            this.substring = substring;
            return this;
        }
        public GetFeaturesResult build() {
            final var _resultValue = new GetFeaturesResult();
            _resultValue.features = features;
            _resultValue.id = id;
            _resultValue.label = label;
            _resultValue.substring = substring;
            return _resultValue;
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserFactorQuestionState extends com.pulumi.resources.ResourceArgs {

    public static final UserFactorQuestionState Empty = new UserFactorQuestionState();

    /**
     * Security question answer. Note here that answer won&#39;t be set during the resource import.
     * 
     */
    @Import(name="answer")
    private @Nullable Output<String> answer;

    /**
     * @return Security question answer. Note here that answer won&#39;t be set during the resource import.
     * 
     */
    public Optional<Output<String>> answer() {
        return Optional.ofNullable(this.answer);
    }

    /**
     * Security question unique key.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return Security question unique key.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * The status of the security question factor.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the security question factor.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Display text for security question.
     * 
     */
    @Import(name="text")
    private @Nullable Output<String> text;

    /**
     * @return Display text for security question.
     * 
     */
    public Optional<Output<String>> text() {
        return Optional.ofNullable(this.text);
    }

    /**
     * ID of the user. Resource will be recreated when `user_id` changes.
     * 
     */
    @Import(name="userId")
    private @Nullable Output<String> userId;

    /**
     * @return ID of the user. Resource will be recreated when `user_id` changes.
     * 
     */
    public Optional<Output<String>> userId() {
        return Optional.ofNullable(this.userId);
    }

    private UserFactorQuestionState() {}

    private UserFactorQuestionState(UserFactorQuestionState $) {
        this.answer = $.answer;
        this.key = $.key;
        this.status = $.status;
        this.text = $.text;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserFactorQuestionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserFactorQuestionState $;

        public Builder() {
            $ = new UserFactorQuestionState();
        }

        public Builder(UserFactorQuestionState defaults) {
            $ = new UserFactorQuestionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param answer Security question answer. Note here that answer won&#39;t be set during the resource import.
         * 
         * @return builder
         * 
         */
        public Builder answer(@Nullable Output<String> answer) {
            $.answer = answer;
            return this;
        }

        /**
         * @param answer Security question answer. Note here that answer won&#39;t be set during the resource import.
         * 
         * @return builder
         * 
         */
        public Builder answer(String answer) {
            return answer(Output.of(answer));
        }

        /**
         * @param key Security question unique key.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Security question unique key.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param status The status of the security question factor.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the security question factor.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param text Display text for security question.
         * 
         * @return builder
         * 
         */
        public Builder text(@Nullable Output<String> text) {
            $.text = text;
            return this;
        }

        /**
         * @param text Display text for security question.
         * 
         * @return builder
         * 
         */
        public Builder text(String text) {
            return text(Output.of(text));
        }

        /**
         * @param userId ID of the user. Resource will be recreated when `user_id` changes.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId ID of the user. Resource will be recreated when `user_id` changes.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public UserFactorQuestionState build() {
            return $;
        }
    }

}

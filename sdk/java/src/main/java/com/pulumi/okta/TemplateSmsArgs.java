// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.okta.inputs.TemplateSmsTranslationArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TemplateSmsArgs extends com.pulumi.resources.ResourceArgs {

    public static final TemplateSmsArgs Empty = new TemplateSmsArgs();

    /**
     * SMS default template
     * 
     */
    @Import(name="template", required=true)
    private Output<String> template;

    /**
     * @return SMS default template
     * 
     */
    public Output<String> template() {
        return this.template;
    }

    @Import(name="translations")
    private @Nullable Output<List<TemplateSmsTranslationArgs>> translations;

    public Optional<Output<List<TemplateSmsTranslationArgs>>> translations() {
        return Optional.ofNullable(this.translations);
    }

    /**
     * SMS template type
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return SMS template type
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private TemplateSmsArgs() {}

    private TemplateSmsArgs(TemplateSmsArgs $) {
        this.template = $.template;
        this.translations = $.translations;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TemplateSmsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TemplateSmsArgs $;

        public Builder() {
            $ = new TemplateSmsArgs();
        }

        public Builder(TemplateSmsArgs defaults) {
            $ = new TemplateSmsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param template SMS default template
         * 
         * @return builder
         * 
         */
        public Builder template(Output<String> template) {
            $.template = template;
            return this;
        }

        /**
         * @param template SMS default template
         * 
         * @return builder
         * 
         */
        public Builder template(String template) {
            return template(Output.of(template));
        }

        public Builder translations(@Nullable Output<List<TemplateSmsTranslationArgs>> translations) {
            $.translations = translations;
            return this;
        }

        public Builder translations(List<TemplateSmsTranslationArgs> translations) {
            return translations(Output.of(translations));
        }

        public Builder translations(TemplateSmsTranslationArgs... translations) {
            return translations(List.of(translations));
        }

        /**
         * @param type SMS template type
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type SMS template type
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public TemplateSmsArgs build() {
            $.template = Objects.requireNonNull($.template, "expected parameter 'template' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSamlAppSettingsState extends com.pulumi.resources.ResourceArgs {

    public static final AppSamlAppSettingsState Empty = new AppSamlAppSettingsState();

    /**
     * ID of the application.
     * 
     */
    @Import(name="appId")
    private @Nullable Output<String> appId;

    /**
     * @return ID of the application.
     * 
     */
    public Optional<Output<String>> appId() {
        return Optional.ofNullable(this.appId);
    }

    /**
     * Application settings in JSON format
     * 
     */
    @Import(name="settings")
    private @Nullable Output<String> settings;

    /**
     * @return Application settings in JSON format
     * 
     */
    public Optional<Output<String>> settings() {
        return Optional.ofNullable(this.settings);
    }

    private AppSamlAppSettingsState() {}

    private AppSamlAppSettingsState(AppSamlAppSettingsState $) {
        this.appId = $.appId;
        this.settings = $.settings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSamlAppSettingsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSamlAppSettingsState $;

        public Builder() {
            $ = new AppSamlAppSettingsState();
        }

        public Builder(AppSamlAppSettingsState defaults) {
            $ = new AppSamlAppSettingsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param appId ID of the application.
         * 
         * @return builder
         * 
         */
        public Builder appId(@Nullable Output<String> appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param appId ID of the application.
         * 
         * @return builder
         * 
         */
        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        /**
         * @param settings Application settings in JSON format
         * 
         * @return builder
         * 
         */
        public Builder settings(@Nullable Output<String> settings) {
            $.settings = settings;
            return this;
        }

        /**
         * @param settings Application settings in JSON format
         * 
         * @return builder
         * 
         */
        public Builder settings(String settings) {
            return settings(Output.of(settings));
        }

        public AppSamlAppSettingsState build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class TrustedServerArgs extends com.pulumi.resources.ResourceArgs {

    public static final TrustedServerArgs Empty = new TrustedServerArgs();

    /**
     * Authorization server ID
     * 
     */
    @Import(name="authServerId", required=true)
    private Output<String> authServerId;

    /**
     * @return Authorization server ID
     * 
     */
    public Output<String> authServerId() {
        return this.authServerId;
    }

    /**
     * A list of the authorization server IDs user want to trust
     * 
     */
    @Import(name="trusteds", required=true)
    private Output<List<String>> trusteds;

    /**
     * @return A list of the authorization server IDs user want to trust
     * 
     */
    public Output<List<String>> trusteds() {
        return this.trusteds;
    }

    private TrustedServerArgs() {}

    private TrustedServerArgs(TrustedServerArgs $) {
        this.authServerId = $.authServerId;
        this.trusteds = $.trusteds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TrustedServerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TrustedServerArgs $;

        public Builder() {
            $ = new TrustedServerArgs();
        }

        public Builder(TrustedServerArgs defaults) {
            $ = new TrustedServerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authServerId Authorization server ID
         * 
         * @return builder
         * 
         */
        public Builder authServerId(Output<String> authServerId) {
            $.authServerId = authServerId;
            return this;
        }

        /**
         * @param authServerId Authorization server ID
         * 
         * @return builder
         * 
         */
        public Builder authServerId(String authServerId) {
            return authServerId(Output.of(authServerId));
        }

        /**
         * @param trusteds A list of the authorization server IDs user want to trust
         * 
         * @return builder
         * 
         */
        public Builder trusteds(Output<List<String>> trusteds) {
            $.trusteds = trusteds;
            return this;
        }

        /**
         * @param trusteds A list of the authorization server IDs user want to trust
         * 
         * @return builder
         * 
         */
        public Builder trusteds(List<String> trusteds) {
            return trusteds(Output.of(trusteds));
        }

        /**
         * @param trusteds A list of the authorization server IDs user want to trust
         * 
         * @return builder
         * 
         */
        public Builder trusteds(String... trusteds) {
            return trusteds(List.of(trusteds));
        }

        public TrustedServerArgs build() {
            if ($.authServerId == null) {
                throw new MissingRequiredPropertyException("TrustedServerArgs", "authServerId");
            }
            if ($.trusteds == null) {
                throw new MissingRequiredPropertyException("TrustedServerArgs", "trusteds");
            }
            return $;
        }
    }

}

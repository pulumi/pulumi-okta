// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.EntitlementBundleArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.EntitlementBundleState;
import com.pulumi.okta.outputs.EntitlementBundleEntitlement;
import com.pulumi.okta.outputs.EntitlementBundleTarget;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages Entitlement Bundles. This resource allows you to create and configure an Okta [Entitlement Bundle](https://developer.okta.com/docs/api/iga/openapi/governance.api/tag/Entitlement-Bundles/#tag/Entitlement-Bundles).
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.EntitlementBundle;
 * import com.pulumi.okta.EntitlementBundleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new EntitlementBundle("example", EntitlementBundleArgs.builder()
 *             .name("example")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:index/entitlementBundle:EntitlementBundle example &lt;entitlement_bundle_id&gt;
 * ```
 * 
 */
@ResourceType(type="okta:index/entitlementBundle:EntitlementBundle")
public class EntitlementBundle extends com.pulumi.resources.CustomResource {
    /**
     * The description of an entitlement property.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of an entitlement property.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * List of entitlements in the bundle
     * 
     */
    @Export(name="entitlements", refs={List.class,EntitlementBundleEntitlement.class}, tree="[0,1]")
    private Output</* @Nullable */ List<EntitlementBundleEntitlement>> entitlements;

    /**
     * @return List of entitlements in the bundle
     * 
     */
    public Output<Optional<List<EntitlementBundleEntitlement>>> entitlements() {
        return Codegen.optional(this.entitlements);
    }
    /**
     * The display name for an entitlement bundle.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The display name for an entitlement bundle.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The status of the entitlement bundle.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the entitlement bundle.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Representation of a resource
     * 
     */
    @Export(name="target", refs={EntitlementBundleTarget.class}, tree="[0]")
    private Output</* @Nullable */ EntitlementBundleTarget> target;

    /**
     * @return Representation of a resource
     * 
     */
    public Output<Optional<EntitlementBundleTarget>> target() {
        return Codegen.optional(this.target);
    }
    /**
     * The ORN of the target resource. Required when updating the entitlement bundle.
     * 
     */
    @Export(name="targetResourceOrn", refs={String.class}, tree="[0]")
    private Output<String> targetResourceOrn;

    /**
     * @return The ORN of the target resource. Required when updating the entitlement bundle.
     * 
     */
    public Output<String> targetResourceOrn() {
        return this.targetResourceOrn;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EntitlementBundle(java.lang.String name) {
        this(name, EntitlementBundleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EntitlementBundle(java.lang.String name, @Nullable EntitlementBundleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EntitlementBundle(java.lang.String name, @Nullable EntitlementBundleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/entitlementBundle:EntitlementBundle", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private EntitlementBundle(java.lang.String name, Output<java.lang.String> id, @Nullable EntitlementBundleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/entitlementBundle:EntitlementBundle", name, state, makeResourceOptions(options, id), false);
    }

    private static EntitlementBundleArgs makeArgs(@Nullable EntitlementBundleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? EntitlementBundleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EntitlementBundle get(java.lang.String name, Output<java.lang.String> id, @Nullable EntitlementBundleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EntitlementBundle(name, id, state, options);
    }
}

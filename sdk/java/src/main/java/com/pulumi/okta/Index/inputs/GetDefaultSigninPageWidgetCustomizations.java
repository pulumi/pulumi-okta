// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.Index.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class GetDefaultSigninPageWidgetCustomizations extends com.pulumi.resources.InvokeArgs {

    public static final GetDefaultSigninPageWidgetCustomizations Empty = new GetDefaultSigninPageWidgetCustomizations();

    @Import(name="authenticatorPageCustomLinkLabel", required=true)
    private String authenticatorPageCustomLinkLabel;

    public String authenticatorPageCustomLinkLabel() {
        return this.authenticatorPageCustomLinkLabel;
    }

    @Import(name="authenticatorPageCustomLinkUrl", required=true)
    private String authenticatorPageCustomLinkUrl;

    public String authenticatorPageCustomLinkUrl() {
        return this.authenticatorPageCustomLinkUrl;
    }

    @Import(name="classicRecoveryFlowEmailOrUsernameLabel", required=true)
    private String classicRecoveryFlowEmailOrUsernameLabel;

    public String classicRecoveryFlowEmailOrUsernameLabel() {
        return this.classicRecoveryFlowEmailOrUsernameLabel;
    }

    @Import(name="customLink1Label", required=true)
    private String customLink1Label;

    public String customLink1Label() {
        return this.customLink1Label;
    }

    @Import(name="customLink1Url", required=true)
    private String customLink1Url;

    public String customLink1Url() {
        return this.customLink1Url;
    }

    @Import(name="customLink2Label", required=true)
    private String customLink2Label;

    public String customLink2Label() {
        return this.customLink2Label;
    }

    @Import(name="customLink2Url", required=true)
    private String customLink2Url;

    public String customLink2Url() {
        return this.customLink2Url;
    }

    @Import(name="forgotPasswordLabel", required=true)
    private String forgotPasswordLabel;

    public String forgotPasswordLabel() {
        return this.forgotPasswordLabel;
    }

    @Import(name="forgotPasswordUrl", required=true)
    private String forgotPasswordUrl;

    public String forgotPasswordUrl() {
        return this.forgotPasswordUrl;
    }

    @Import(name="helpLabel", required=true)
    private String helpLabel;

    public String helpLabel() {
        return this.helpLabel;
    }

    @Import(name="helpUrl", required=true)
    private String helpUrl;

    public String helpUrl() {
        return this.helpUrl;
    }

    @Import(name="passwordInfoTip", required=true)
    private String passwordInfoTip;

    public String passwordInfoTip() {
        return this.passwordInfoTip;
    }

    @Import(name="passwordLabel", required=true)
    private String passwordLabel;

    public String passwordLabel() {
        return this.passwordLabel;
    }

    @Import(name="showPasswordVisibilityToggle", required=true)
    private Boolean showPasswordVisibilityToggle;

    public Boolean showPasswordVisibilityToggle() {
        return this.showPasswordVisibilityToggle;
    }

    @Import(name="showUserIdentifier", required=true)
    private Boolean showUserIdentifier;

    public Boolean showUserIdentifier() {
        return this.showUserIdentifier;
    }

    @Import(name="signInLabel", required=true)
    private String signInLabel;

    public String signInLabel() {
        return this.signInLabel;
    }

    @Import(name="unlockAccountLabel", required=true)
    private String unlockAccountLabel;

    public String unlockAccountLabel() {
        return this.unlockAccountLabel;
    }

    @Import(name="unlockAccountUrl", required=true)
    private String unlockAccountUrl;

    public String unlockAccountUrl() {
        return this.unlockAccountUrl;
    }

    @Import(name="usernameInfoTip", required=true)
    private String usernameInfoTip;

    public String usernameInfoTip() {
        return this.usernameInfoTip;
    }

    @Import(name="usernameLabel", required=true)
    private String usernameLabel;

    public String usernameLabel() {
        return this.usernameLabel;
    }

    @Import(name="widgetGeneration", required=true)
    private String widgetGeneration;

    public String widgetGeneration() {
        return this.widgetGeneration;
    }

    private GetDefaultSigninPageWidgetCustomizations() {}

    private GetDefaultSigninPageWidgetCustomizations(GetDefaultSigninPageWidgetCustomizations $) {
        this.authenticatorPageCustomLinkLabel = $.authenticatorPageCustomLinkLabel;
        this.authenticatorPageCustomLinkUrl = $.authenticatorPageCustomLinkUrl;
        this.classicRecoveryFlowEmailOrUsernameLabel = $.classicRecoveryFlowEmailOrUsernameLabel;
        this.customLink1Label = $.customLink1Label;
        this.customLink1Url = $.customLink1Url;
        this.customLink2Label = $.customLink2Label;
        this.customLink2Url = $.customLink2Url;
        this.forgotPasswordLabel = $.forgotPasswordLabel;
        this.forgotPasswordUrl = $.forgotPasswordUrl;
        this.helpLabel = $.helpLabel;
        this.helpUrl = $.helpUrl;
        this.passwordInfoTip = $.passwordInfoTip;
        this.passwordLabel = $.passwordLabel;
        this.showPasswordVisibilityToggle = $.showPasswordVisibilityToggle;
        this.showUserIdentifier = $.showUserIdentifier;
        this.signInLabel = $.signInLabel;
        this.unlockAccountLabel = $.unlockAccountLabel;
        this.unlockAccountUrl = $.unlockAccountUrl;
        this.usernameInfoTip = $.usernameInfoTip;
        this.usernameLabel = $.usernameLabel;
        this.widgetGeneration = $.widgetGeneration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDefaultSigninPageWidgetCustomizations defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDefaultSigninPageWidgetCustomizations $;

        public Builder() {
            $ = new GetDefaultSigninPageWidgetCustomizations();
        }

        public Builder(GetDefaultSigninPageWidgetCustomizations defaults) {
            $ = new GetDefaultSigninPageWidgetCustomizations(Objects.requireNonNull(defaults));
        }

        public Builder authenticatorPageCustomLinkLabel(String authenticatorPageCustomLinkLabel) {
            $.authenticatorPageCustomLinkLabel = authenticatorPageCustomLinkLabel;
            return this;
        }

        public Builder authenticatorPageCustomLinkUrl(String authenticatorPageCustomLinkUrl) {
            $.authenticatorPageCustomLinkUrl = authenticatorPageCustomLinkUrl;
            return this;
        }

        public Builder classicRecoveryFlowEmailOrUsernameLabel(String classicRecoveryFlowEmailOrUsernameLabel) {
            $.classicRecoveryFlowEmailOrUsernameLabel = classicRecoveryFlowEmailOrUsernameLabel;
            return this;
        }

        public Builder customLink1Label(String customLink1Label) {
            $.customLink1Label = customLink1Label;
            return this;
        }

        public Builder customLink1Url(String customLink1Url) {
            $.customLink1Url = customLink1Url;
            return this;
        }

        public Builder customLink2Label(String customLink2Label) {
            $.customLink2Label = customLink2Label;
            return this;
        }

        public Builder customLink2Url(String customLink2Url) {
            $.customLink2Url = customLink2Url;
            return this;
        }

        public Builder forgotPasswordLabel(String forgotPasswordLabel) {
            $.forgotPasswordLabel = forgotPasswordLabel;
            return this;
        }

        public Builder forgotPasswordUrl(String forgotPasswordUrl) {
            $.forgotPasswordUrl = forgotPasswordUrl;
            return this;
        }

        public Builder helpLabel(String helpLabel) {
            $.helpLabel = helpLabel;
            return this;
        }

        public Builder helpUrl(String helpUrl) {
            $.helpUrl = helpUrl;
            return this;
        }

        public Builder passwordInfoTip(String passwordInfoTip) {
            $.passwordInfoTip = passwordInfoTip;
            return this;
        }

        public Builder passwordLabel(String passwordLabel) {
            $.passwordLabel = passwordLabel;
            return this;
        }

        public Builder showPasswordVisibilityToggle(Boolean showPasswordVisibilityToggle) {
            $.showPasswordVisibilityToggle = showPasswordVisibilityToggle;
            return this;
        }

        public Builder showUserIdentifier(Boolean showUserIdentifier) {
            $.showUserIdentifier = showUserIdentifier;
            return this;
        }

        public Builder signInLabel(String signInLabel) {
            $.signInLabel = signInLabel;
            return this;
        }

        public Builder unlockAccountLabel(String unlockAccountLabel) {
            $.unlockAccountLabel = unlockAccountLabel;
            return this;
        }

        public Builder unlockAccountUrl(String unlockAccountUrl) {
            $.unlockAccountUrl = unlockAccountUrl;
            return this;
        }

        public Builder usernameInfoTip(String usernameInfoTip) {
            $.usernameInfoTip = usernameInfoTip;
            return this;
        }

        public Builder usernameLabel(String usernameLabel) {
            $.usernameLabel = usernameLabel;
            return this;
        }

        public Builder widgetGeneration(String widgetGeneration) {
            $.widgetGeneration = widgetGeneration;
            return this;
        }

        public GetDefaultSigninPageWidgetCustomizations build() {
            if ($.authenticatorPageCustomLinkLabel == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "authenticatorPageCustomLinkLabel");
            }
            if ($.authenticatorPageCustomLinkUrl == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "authenticatorPageCustomLinkUrl");
            }
            if ($.classicRecoveryFlowEmailOrUsernameLabel == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "classicRecoveryFlowEmailOrUsernameLabel");
            }
            if ($.customLink1Label == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "customLink1Label");
            }
            if ($.customLink1Url == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "customLink1Url");
            }
            if ($.customLink2Label == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "customLink2Label");
            }
            if ($.customLink2Url == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "customLink2Url");
            }
            if ($.forgotPasswordLabel == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "forgotPasswordLabel");
            }
            if ($.forgotPasswordUrl == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "forgotPasswordUrl");
            }
            if ($.helpLabel == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "helpLabel");
            }
            if ($.helpUrl == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "helpUrl");
            }
            if ($.passwordInfoTip == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "passwordInfoTip");
            }
            if ($.passwordLabel == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "passwordLabel");
            }
            if ($.showPasswordVisibilityToggle == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "showPasswordVisibilityToggle");
            }
            if ($.showUserIdentifier == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "showUserIdentifier");
            }
            if ($.signInLabel == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "signInLabel");
            }
            if ($.unlockAccountLabel == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "unlockAccountLabel");
            }
            if ($.unlockAccountUrl == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "unlockAccountUrl");
            }
            if ($.usernameInfoTip == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "usernameInfoTip");
            }
            if ($.usernameLabel == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "usernameLabel");
            }
            if ($.widgetGeneration == null) {
                throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "widgetGeneration");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.inputs.GetCampaignScheduleSettingsRecurrenceArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCampaignScheduleSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCampaignScheduleSettingsArgs Empty = new GetCampaignScheduleSettingsArgs();

    @Import(name="durationInDays", required=true)
    private Output<Integer> durationInDays;

    public Output<Integer> durationInDays() {
        return this.durationInDays;
    }

    @Import(name="endDate", required=true)
    private Output<String> endDate;

    public Output<String> endDate() {
        return this.endDate;
    }

    @Import(name="recurrences")
    private @Nullable Output<List<GetCampaignScheduleSettingsRecurrenceArgs>> recurrences;

    public Optional<Output<List<GetCampaignScheduleSettingsRecurrenceArgs>>> recurrences() {
        return Optional.ofNullable(this.recurrences);
    }

    @Import(name="startDate", required=true)
    private Output<String> startDate;

    public Output<String> startDate() {
        return this.startDate;
    }

    @Import(name="timeZone", required=true)
    private Output<String> timeZone;

    public Output<String> timeZone() {
        return this.timeZone;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private GetCampaignScheduleSettingsArgs() {}

    private GetCampaignScheduleSettingsArgs(GetCampaignScheduleSettingsArgs $) {
        this.durationInDays = $.durationInDays;
        this.endDate = $.endDate;
        this.recurrences = $.recurrences;
        this.startDate = $.startDate;
        this.timeZone = $.timeZone;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCampaignScheduleSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCampaignScheduleSettingsArgs $;

        public Builder() {
            $ = new GetCampaignScheduleSettingsArgs();
        }

        public Builder(GetCampaignScheduleSettingsArgs defaults) {
            $ = new GetCampaignScheduleSettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder durationInDays(Output<Integer> durationInDays) {
            $.durationInDays = durationInDays;
            return this;
        }

        public Builder durationInDays(Integer durationInDays) {
            return durationInDays(Output.of(durationInDays));
        }

        public Builder endDate(Output<String> endDate) {
            $.endDate = endDate;
            return this;
        }

        public Builder endDate(String endDate) {
            return endDate(Output.of(endDate));
        }

        public Builder recurrences(@Nullable Output<List<GetCampaignScheduleSettingsRecurrenceArgs>> recurrences) {
            $.recurrences = recurrences;
            return this;
        }

        public Builder recurrences(List<GetCampaignScheduleSettingsRecurrenceArgs> recurrences) {
            return recurrences(Output.of(recurrences));
        }

        public Builder recurrences(GetCampaignScheduleSettingsRecurrenceArgs... recurrences) {
            return recurrences(List.of(recurrences));
        }

        public Builder startDate(Output<String> startDate) {
            $.startDate = startDate;
            return this;
        }

        public Builder startDate(String startDate) {
            return startDate(Output.of(startDate));
        }

        public Builder timeZone(Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetCampaignScheduleSettingsArgs build() {
            if ($.durationInDays == null) {
                throw new MissingRequiredPropertyException("GetCampaignScheduleSettingsArgs", "durationInDays");
            }
            if ($.endDate == null) {
                throw new MissingRequiredPropertyException("GetCampaignScheduleSettingsArgs", "endDate");
            }
            if ($.startDate == null) {
                throw new MissingRequiredPropertyException("GetCampaignScheduleSettingsArgs", "startDate");
            }
            if ($.timeZone == null) {
                throw new MissingRequiredPropertyException("GetCampaignScheduleSettingsArgs", "timeZone");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetCampaignScheduleSettingsArgs", "type");
            }
            return $;
        }
    }

}

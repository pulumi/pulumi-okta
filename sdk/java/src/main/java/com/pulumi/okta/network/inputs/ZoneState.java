// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZoneState extends com.pulumi.resources.ResourceArgs {

    public static final ZoneState Empty = new ZoneState();

    /**
     * Array of Autonomous System Numbers (each element is a string representation of an ASN numeric value).
     * 
     */
    @Import(name="asns")
    private @Nullable Output<List<String>> asns;

    /**
     * @return Array of Autonomous System Numbers (each element is a string representation of an ASN numeric value).
     * 
     */
    public Optional<Output<List<String>>> asns() {
        return Optional.ofNullable(this.asns);
    }

    /**
     * Array of locations [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
     * and [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2). Format code: countryCode OR countryCode-regionCode.
     * 
     */
    @Import(name="dynamicLocations")
    private @Nullable Output<List<String>> dynamicLocations;

    /**
     * @return Array of locations [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
     * and [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2). Format code: countryCode OR countryCode-regionCode.
     * 
     */
    public Optional<Output<List<String>>> dynamicLocations() {
        return Optional.ofNullable(this.dynamicLocations);
    }

    /**
     * Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or `NotTorAnonymizer`.
     * 
     */
    @Import(name="dynamicProxyType")
    private @Nullable Output<String> dynamicProxyType;

    /**
     * @return Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or `NotTorAnonymizer`.
     * 
     */
    public Optional<Output<String>> dynamicProxyType() {
        return Optional.ofNullable(this.dynamicProxyType);
    }

    /**
     * Array of values in CIDR/range form.
     * 
     */
    @Import(name="gateways")
    private @Nullable Output<List<String>> gateways;

    /**
     * @return Array of values in CIDR/range form.
     * 
     */
    public Optional<Output<List<String>>> gateways() {
        return Optional.ofNullable(this.gateways);
    }

    /**
     * Name of the Network Zone Resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Network Zone Resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Array of values in CIDR/range form. Can not be set if `usage` is set to `&#34;BLOCKLIST&#34;`.
     * 
     */
    @Import(name="proxies")
    private @Nullable Output<List<String>> proxies;

    /**
     * @return Array of values in CIDR/range form. Can not be set if `usage` is set to `&#34;BLOCKLIST&#34;`.
     * 
     */
    public Optional<Output<List<String>>> proxies() {
        return Optional.ofNullable(this.proxies);
    }

    /**
     * Type of the Network Zone - can either be `&#34;IP&#34;` or `&#34;DYNAMIC&#34;` only.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of the Network Zone - can either be `&#34;IP&#34;` or `&#34;DYNAMIC&#34;` only.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Usage of the Network Zone - can be either `&#34;POLICY&#34;` or `&#34;BLOCKLIST&#34;`. By default, it is `&#34;POLICY&#34;`.
     * 
     */
    @Import(name="usage")
    private @Nullable Output<String> usage;

    /**
     * @return Usage of the Network Zone - can be either `&#34;POLICY&#34;` or `&#34;BLOCKLIST&#34;`. By default, it is `&#34;POLICY&#34;`.
     * 
     */
    public Optional<Output<String>> usage() {
        return Optional.ofNullable(this.usage);
    }

    private ZoneState() {}

    private ZoneState(ZoneState $) {
        this.asns = $.asns;
        this.dynamicLocations = $.dynamicLocations;
        this.dynamicProxyType = $.dynamicProxyType;
        this.gateways = $.gateways;
        this.name = $.name;
        this.proxies = $.proxies;
        this.type = $.type;
        this.usage = $.usage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZoneState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZoneState $;

        public Builder() {
            $ = new ZoneState();
        }

        public Builder(ZoneState defaults) {
            $ = new ZoneState(Objects.requireNonNull(defaults));
        }

        /**
         * @param asns Array of Autonomous System Numbers (each element is a string representation of an ASN numeric value).
         * 
         * @return builder
         * 
         */
        public Builder asns(@Nullable Output<List<String>> asns) {
            $.asns = asns;
            return this;
        }

        /**
         * @param asns Array of Autonomous System Numbers (each element is a string representation of an ASN numeric value).
         * 
         * @return builder
         * 
         */
        public Builder asns(List<String> asns) {
            return asns(Output.of(asns));
        }

        /**
         * @param asns Array of Autonomous System Numbers (each element is a string representation of an ASN numeric value).
         * 
         * @return builder
         * 
         */
        public Builder asns(String... asns) {
            return asns(List.of(asns));
        }

        /**
         * @param dynamicLocations Array of locations [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
         * and [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2). Format code: countryCode OR countryCode-regionCode.
         * 
         * @return builder
         * 
         */
        public Builder dynamicLocations(@Nullable Output<List<String>> dynamicLocations) {
            $.dynamicLocations = dynamicLocations;
            return this;
        }

        /**
         * @param dynamicLocations Array of locations [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
         * and [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2). Format code: countryCode OR countryCode-regionCode.
         * 
         * @return builder
         * 
         */
        public Builder dynamicLocations(List<String> dynamicLocations) {
            return dynamicLocations(Output.of(dynamicLocations));
        }

        /**
         * @param dynamicLocations Array of locations [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
         * and [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2). Format code: countryCode OR countryCode-regionCode.
         * 
         * @return builder
         * 
         */
        public Builder dynamicLocations(String... dynamicLocations) {
            return dynamicLocations(List.of(dynamicLocations));
        }

        /**
         * @param dynamicProxyType Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or `NotTorAnonymizer`.
         * 
         * @return builder
         * 
         */
        public Builder dynamicProxyType(@Nullable Output<String> dynamicProxyType) {
            $.dynamicProxyType = dynamicProxyType;
            return this;
        }

        /**
         * @param dynamicProxyType Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or `NotTorAnonymizer`.
         * 
         * @return builder
         * 
         */
        public Builder dynamicProxyType(String dynamicProxyType) {
            return dynamicProxyType(Output.of(dynamicProxyType));
        }

        /**
         * @param gateways Array of values in CIDR/range form.
         * 
         * @return builder
         * 
         */
        public Builder gateways(@Nullable Output<List<String>> gateways) {
            $.gateways = gateways;
            return this;
        }

        /**
         * @param gateways Array of values in CIDR/range form.
         * 
         * @return builder
         * 
         */
        public Builder gateways(List<String> gateways) {
            return gateways(Output.of(gateways));
        }

        /**
         * @param gateways Array of values in CIDR/range form.
         * 
         * @return builder
         * 
         */
        public Builder gateways(String... gateways) {
            return gateways(List.of(gateways));
        }

        /**
         * @param name Name of the Network Zone Resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Network Zone Resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param proxies Array of values in CIDR/range form. Can not be set if `usage` is set to `&#34;BLOCKLIST&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder proxies(@Nullable Output<List<String>> proxies) {
            $.proxies = proxies;
            return this;
        }

        /**
         * @param proxies Array of values in CIDR/range form. Can not be set if `usage` is set to `&#34;BLOCKLIST&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder proxies(List<String> proxies) {
            return proxies(Output.of(proxies));
        }

        /**
         * @param proxies Array of values in CIDR/range form. Can not be set if `usage` is set to `&#34;BLOCKLIST&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder proxies(String... proxies) {
            return proxies(List.of(proxies));
        }

        /**
         * @param type Type of the Network Zone - can either be `&#34;IP&#34;` or `&#34;DYNAMIC&#34;` only.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the Network Zone - can either be `&#34;IP&#34;` or `&#34;DYNAMIC&#34;` only.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param usage Usage of the Network Zone - can be either `&#34;POLICY&#34;` or `&#34;BLOCKLIST&#34;`. By default, it is `&#34;POLICY&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder usage(@Nullable Output<String> usage) {
            $.usage = usage;
            return this;
        }

        /**
         * @param usage Usage of the Network Zone - can be either `&#34;POLICY&#34;` or `&#34;BLOCKLIST&#34;`. By default, it is `&#34;POLICY&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder usage(String usage) {
            return usage(Output.of(usage));
        }

        public ZoneState build() {
            return $;
        }
    }

}

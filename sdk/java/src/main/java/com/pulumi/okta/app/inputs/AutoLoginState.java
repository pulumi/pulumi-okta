// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.app.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.okta.app.inputs.AutoLoginUserArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutoLoginState extends com.pulumi.resources.ResourceArgs {

    public static final AutoLoginState Empty = new AutoLoginState();

    /**
     * Custom error page URL.
     * 
     */
    @Import(name="accessibilityErrorRedirectUrl")
    private @Nullable Output<String> accessibilityErrorRedirectUrl;

    /**
     * @return Custom error page URL.
     * 
     */
    public Optional<Output<String>> accessibilityErrorRedirectUrl() {
        return Optional.ofNullable(this.accessibilityErrorRedirectUrl);
    }

    /**
     * Custom login page for this application.
     * 
     */
    @Import(name="accessibilityLoginRedirectUrl")
    private @Nullable Output<String> accessibilityLoginRedirectUrl;

    /**
     * @return Custom login page for this application.
     * 
     */
    public Optional<Output<String>> accessibilityLoginRedirectUrl() {
        return Optional.ofNullable(this.accessibilityLoginRedirectUrl);
    }

    /**
     * Enable self-service. By default, it is `false`.
     * 
     */
    @Import(name="accessibilitySelfService")
    private @Nullable Output<Boolean> accessibilitySelfService;

    /**
     * @return Enable self-service. By default, it is `false`.
     * 
     */
    public Optional<Output<Boolean>> accessibilitySelfService() {
        return Optional.ofNullable(this.accessibilitySelfService);
    }

    /**
     * Application notes for admins.
     * 
     */
    @Import(name="adminNote")
    private @Nullable Output<String> adminNote;

    /**
     * @return Application notes for admins.
     * 
     */
    public Optional<Output<String>> adminNote() {
        return Optional.ofNullable(this.adminNote);
    }

    /**
     * Displays specific appLinks for the app. The value for each application link should be boolean.
     * 
     */
    @Import(name="appLinksJson")
    private @Nullable Output<String> appLinksJson;

    /**
     * @return Displays specific appLinks for the app. The value for each application link should be boolean.
     * 
     */
    public Optional<Output<String>> appLinksJson() {
        return Optional.ofNullable(this.appLinksJson);
    }

    /**
     * Application settings in JSON format.
     * 
     */
    @Import(name="appSettingsJson")
    private @Nullable Output<String> appSettingsJson;

    /**
     * @return Application settings in JSON format.
     * 
     */
    public Optional<Output<String>> appSettingsJson() {
        return Optional.ofNullable(this.appSettingsJson);
    }

    /**
     * Display auto submit toolbar.
     * 
     */
    @Import(name="autoSubmitToolbar")
    private @Nullable Output<Boolean> autoSubmitToolbar;

    /**
     * @return Display auto submit toolbar.
     * 
     */
    public Optional<Output<Boolean>> autoSubmitToolbar() {
        return Optional.ofNullable(this.autoSubmitToolbar);
    }

    /**
     * One of: `&#34;EDIT_USERNAME_AND_PASSWORD&#34;`, `&#34;ADMIN_SETS_CREDENTIALS&#34;`, `&#34;EDIT_PASSWORD_ONLY&#34;`, `&#34;EXTERNAL_PASSWORD_SYNC&#34;`, or `&#34;SHARED_USERNAME_AND_PASSWORD&#34;`.
     * 
     */
    @Import(name="credentialsScheme")
    private @Nullable Output<String> credentialsScheme;

    /**
     * @return One of: `&#34;EDIT_USERNAME_AND_PASSWORD&#34;`, `&#34;ADMIN_SETS_CREDENTIALS&#34;`, `&#34;EDIT_PASSWORD_ONLY&#34;`, `&#34;EXTERNAL_PASSWORD_SYNC&#34;`, or `&#34;SHARED_USERNAME_AND_PASSWORD&#34;`.
     * 
     */
    public Optional<Output<String>> credentialsScheme() {
        return Optional.ofNullable(this.credentialsScheme);
    }

    /**
     * Application notes for end users.
     * 
     */
    @Import(name="enduserNote")
    private @Nullable Output<String> enduserNote;

    /**
     * @return Application notes for end users.
     * 
     */
    public Optional<Output<String>> enduserNote() {
        return Optional.ofNullable(this.enduserNote);
    }

    /**
     * Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.
     * 
     * @deprecated
     * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
    @Import(name="groups")
    private @Nullable Output<List<String>> groups;

    /**
     * @return Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.
     * 
     * @deprecated
     * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
    public Optional<Output<List<String>>> groups() {
        return Optional.ofNullable(this.groups);
    }

    /**
     * Do not display application icon on mobile app.
     * 
     */
    @Import(name="hideIos")
    private @Nullable Output<Boolean> hideIos;

    /**
     * @return Do not display application icon on mobile app.
     * 
     */
    public Optional<Output<Boolean>> hideIos() {
        return Optional.ofNullable(this.hideIos);
    }

    /**
     * Do not display application icon to users.
     * 
     */
    @Import(name="hideWeb")
    private @Nullable Output<Boolean> hideWeb;

    /**
     * @return Do not display application icon to users.
     * 
     */
    public Optional<Output<Boolean>> hideWeb() {
        return Optional.ofNullable(this.hideWeb);
    }

    /**
     * The Application&#39;s display name.
     * 
     */
    @Import(name="label")
    private @Nullable Output<String> label;

    /**
     * @return The Application&#39;s display name.
     * 
     */
    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     * 
     */
    @Import(name="logo")
    private @Nullable Output<String> logo;

    /**
     * @return Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     * 
     */
    public Optional<Output<String>> logo() {
        return Optional.ofNullable(this.logo);
    }

    /**
     * Direct link of application logo.
     * 
     */
    @Import(name="logoUrl")
    private @Nullable Output<String> logoUrl;

    /**
     * @return Direct link of application logo.
     * 
     */
    public Optional<Output<String>> logoUrl() {
        return Optional.ofNullable(this.logoUrl);
    }

    /**
     * Name assigned to the application by Okta.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name assigned to the application by Okta.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Tells Okta to use an existing application in their application catalog, as opposed to a custom application.
     * 
     */
    @Import(name="preconfiguredApp")
    private @Nullable Output<String> preconfiguredApp;

    /**
     * @return Tells Okta to use an existing application in their application catalog, as opposed to a custom application.
     * 
     */
    public Optional<Output<String>> preconfiguredApp() {
        return Optional.ofNullable(this.preconfiguredApp);
    }

    /**
     * Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `&#34;ADMIN_SETS_CREDENTIALS&#34;`, `&#34;SHARED_USERNAME_AND_PASSWORD&#34;` or `&#34;EXTERNAL_PASSWORD_SYNC&#34;`.
     * 
     */
    @Import(name="revealPassword")
    private @Nullable Output<Boolean> revealPassword;

    /**
     * @return Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `&#34;ADMIN_SETS_CREDENTIALS&#34;`, `&#34;SHARED_USERNAME_AND_PASSWORD&#34;` or `&#34;EXTERNAL_PASSWORD_SYNC&#34;`.
     * 
     */
    public Optional<Output<Boolean>> revealPassword() {
        return Optional.ofNullable(this.revealPassword);
    }

    /**
     * Shared password, required for certain schemes
     * 
     */
    @Import(name="sharedPassword")
    private @Nullable Output<String> sharedPassword;

    /**
     * @return Shared password, required for certain schemes
     * 
     */
    public Optional<Output<String>> sharedPassword() {
        return Optional.ofNullable(this.sharedPassword);
    }

    /**
     * Shared username, required for certain schemes
     * 
     */
    @Import(name="sharedUsername")
    private @Nullable Output<String> sharedUsername;

    /**
     * @return Shared username, required for certain schemes
     * 
     */
    public Optional<Output<String>> sharedUsername() {
        return Optional.ofNullable(this.sharedUsername);
    }

    /**
     * Sign-on mode of the application.
     * 
     */
    @Import(name="signOnMode")
    private @Nullable Output<String> signOnMode;

    /**
     * @return Sign-on mode of the application.
     * 
     */
    public Optional<Output<String>> signOnMode() {
        return Optional.ofNullable(this.signOnMode);
    }

    /**
     * Redirect URL; if going to the login page URL redirects to another page, then enter that URL here
     * 
     */
    @Import(name="signOnRedirectUrl")
    private @Nullable Output<String> signOnRedirectUrl;

    /**
     * @return Redirect URL; if going to the login page URL redirects to another page, then enter that URL here
     * 
     */
    public Optional<Output<String>> signOnRedirectUrl() {
        return Optional.ofNullable(this.signOnRedirectUrl);
    }

    /**
     * App login page URL
     * 
     */
    @Import(name="signOnUrl")
    private @Nullable Output<String> signOnUrl;

    /**
     * @return App login page URL
     * 
     */
    public Optional<Output<String>> signOnUrl() {
        return Optional.ofNullable(this.signOnUrl);
    }

    /**
     * Indicator that allows the app to skip `groups` sync (it&#39;s also can be provided during import). Default is `false`.
     * 
     */
    @Import(name="skipGroups")
    private @Nullable Output<Boolean> skipGroups;

    /**
     * @return Indicator that allows the app to skip `groups` sync (it&#39;s also can be provided during import). Default is `false`.
     * 
     */
    public Optional<Output<Boolean>> skipGroups() {
        return Optional.ofNullable(this.skipGroups);
    }

    /**
     * Indicator that allows the app to skip `users` sync (it&#39;s also can be provided during import). Default is `false`.
     * 
     */
    @Import(name="skipUsers")
    private @Nullable Output<Boolean> skipUsers;

    /**
     * @return Indicator that allows the app to skip `users` sync (it&#39;s also can be provided during import). Default is `false`.
     * 
     */
    public Optional<Output<Boolean>> skipUsers() {
        return Optional.ofNullable(this.skipUsers);
    }

    /**
     * The status of the application, by default, it is `&#34;ACTIVE&#34;`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the application, by default, it is `&#34;ACTIVE&#34;`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Username template. Default: `&#34;${source.login}&#34;`
     * 
     */
    @Import(name="userNameTemplate")
    private @Nullable Output<String> userNameTemplate;

    /**
     * @return Username template. Default: `&#34;${source.login}&#34;`
     * 
     */
    public Optional<Output<String>> userNameTemplate() {
        return Optional.ofNullable(this.userNameTemplate);
    }

    /**
     * Push username on update. Valid values: `&#34;PUSH&#34;` and `&#34;DONT_PUSH&#34;`.
     * 
     */
    @Import(name="userNameTemplatePushStatus")
    private @Nullable Output<String> userNameTemplatePushStatus;

    /**
     * @return Push username on update. Valid values: `&#34;PUSH&#34;` and `&#34;DONT_PUSH&#34;`.
     * 
     */
    public Optional<Output<String>> userNameTemplatePushStatus() {
        return Optional.ofNullable(this.userNameTemplatePushStatus);
    }

    /**
     * Username template suffix.
     * 
     */
    @Import(name="userNameTemplateSuffix")
    private @Nullable Output<String> userNameTemplateSuffix;

    /**
     * @return Username template suffix.
     * 
     */
    public Optional<Output<String>> userNameTemplateSuffix() {
        return Optional.ofNullable(this.userNameTemplateSuffix);
    }

    /**
     * Username template type. Default: `&#34;BUILT_IN&#34;`.
     * 
     */
    @Import(name="userNameTemplateType")
    private @Nullable Output<String> userNameTemplateType;

    /**
     * @return Username template type. Default: `&#34;BUILT_IN&#34;`.
     * 
     */
    public Optional<Output<String>> userNameTemplateType() {
        return Optional.ofNullable(this.userNameTemplateType);
    }

    /**
     * The users assigned to the application. See `okta.app.User` for a more flexible approach.
     * 
     * @deprecated
     * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
    @Import(name="users")
    private @Nullable Output<List<AutoLoginUserArgs>> users;

    /**
     * @return The users assigned to the application. See `okta.app.User` for a more flexible approach.
     * 
     * @deprecated
     * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
    public Optional<Output<List<AutoLoginUserArgs>>> users() {
        return Optional.ofNullable(this.users);
    }

    private AutoLoginState() {}

    private AutoLoginState(AutoLoginState $) {
        this.accessibilityErrorRedirectUrl = $.accessibilityErrorRedirectUrl;
        this.accessibilityLoginRedirectUrl = $.accessibilityLoginRedirectUrl;
        this.accessibilitySelfService = $.accessibilitySelfService;
        this.adminNote = $.adminNote;
        this.appLinksJson = $.appLinksJson;
        this.appSettingsJson = $.appSettingsJson;
        this.autoSubmitToolbar = $.autoSubmitToolbar;
        this.credentialsScheme = $.credentialsScheme;
        this.enduserNote = $.enduserNote;
        this.groups = $.groups;
        this.hideIos = $.hideIos;
        this.hideWeb = $.hideWeb;
        this.label = $.label;
        this.logo = $.logo;
        this.logoUrl = $.logoUrl;
        this.name = $.name;
        this.preconfiguredApp = $.preconfiguredApp;
        this.revealPassword = $.revealPassword;
        this.sharedPassword = $.sharedPassword;
        this.sharedUsername = $.sharedUsername;
        this.signOnMode = $.signOnMode;
        this.signOnRedirectUrl = $.signOnRedirectUrl;
        this.signOnUrl = $.signOnUrl;
        this.skipGroups = $.skipGroups;
        this.skipUsers = $.skipUsers;
        this.status = $.status;
        this.userNameTemplate = $.userNameTemplate;
        this.userNameTemplatePushStatus = $.userNameTemplatePushStatus;
        this.userNameTemplateSuffix = $.userNameTemplateSuffix;
        this.userNameTemplateType = $.userNameTemplateType;
        this.users = $.users;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutoLoginState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutoLoginState $;

        public Builder() {
            $ = new AutoLoginState();
        }

        public Builder(AutoLoginState defaults) {
            $ = new AutoLoginState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessibilityErrorRedirectUrl Custom error page URL.
         * 
         * @return builder
         * 
         */
        public Builder accessibilityErrorRedirectUrl(@Nullable Output<String> accessibilityErrorRedirectUrl) {
            $.accessibilityErrorRedirectUrl = accessibilityErrorRedirectUrl;
            return this;
        }

        /**
         * @param accessibilityErrorRedirectUrl Custom error page URL.
         * 
         * @return builder
         * 
         */
        public Builder accessibilityErrorRedirectUrl(String accessibilityErrorRedirectUrl) {
            return accessibilityErrorRedirectUrl(Output.of(accessibilityErrorRedirectUrl));
        }

        /**
         * @param accessibilityLoginRedirectUrl Custom login page for this application.
         * 
         * @return builder
         * 
         */
        public Builder accessibilityLoginRedirectUrl(@Nullable Output<String> accessibilityLoginRedirectUrl) {
            $.accessibilityLoginRedirectUrl = accessibilityLoginRedirectUrl;
            return this;
        }

        /**
         * @param accessibilityLoginRedirectUrl Custom login page for this application.
         * 
         * @return builder
         * 
         */
        public Builder accessibilityLoginRedirectUrl(String accessibilityLoginRedirectUrl) {
            return accessibilityLoginRedirectUrl(Output.of(accessibilityLoginRedirectUrl));
        }

        /**
         * @param accessibilitySelfService Enable self-service. By default, it is `false`.
         * 
         * @return builder
         * 
         */
        public Builder accessibilitySelfService(@Nullable Output<Boolean> accessibilitySelfService) {
            $.accessibilitySelfService = accessibilitySelfService;
            return this;
        }

        /**
         * @param accessibilitySelfService Enable self-service. By default, it is `false`.
         * 
         * @return builder
         * 
         */
        public Builder accessibilitySelfService(Boolean accessibilitySelfService) {
            return accessibilitySelfService(Output.of(accessibilitySelfService));
        }

        /**
         * @param adminNote Application notes for admins.
         * 
         * @return builder
         * 
         */
        public Builder adminNote(@Nullable Output<String> adminNote) {
            $.adminNote = adminNote;
            return this;
        }

        /**
         * @param adminNote Application notes for admins.
         * 
         * @return builder
         * 
         */
        public Builder adminNote(String adminNote) {
            return adminNote(Output.of(adminNote));
        }

        /**
         * @param appLinksJson Displays specific appLinks for the app. The value for each application link should be boolean.
         * 
         * @return builder
         * 
         */
        public Builder appLinksJson(@Nullable Output<String> appLinksJson) {
            $.appLinksJson = appLinksJson;
            return this;
        }

        /**
         * @param appLinksJson Displays specific appLinks for the app. The value for each application link should be boolean.
         * 
         * @return builder
         * 
         */
        public Builder appLinksJson(String appLinksJson) {
            return appLinksJson(Output.of(appLinksJson));
        }

        /**
         * @param appSettingsJson Application settings in JSON format.
         * 
         * @return builder
         * 
         */
        public Builder appSettingsJson(@Nullable Output<String> appSettingsJson) {
            $.appSettingsJson = appSettingsJson;
            return this;
        }

        /**
         * @param appSettingsJson Application settings in JSON format.
         * 
         * @return builder
         * 
         */
        public Builder appSettingsJson(String appSettingsJson) {
            return appSettingsJson(Output.of(appSettingsJson));
        }

        /**
         * @param autoSubmitToolbar Display auto submit toolbar.
         * 
         * @return builder
         * 
         */
        public Builder autoSubmitToolbar(@Nullable Output<Boolean> autoSubmitToolbar) {
            $.autoSubmitToolbar = autoSubmitToolbar;
            return this;
        }

        /**
         * @param autoSubmitToolbar Display auto submit toolbar.
         * 
         * @return builder
         * 
         */
        public Builder autoSubmitToolbar(Boolean autoSubmitToolbar) {
            return autoSubmitToolbar(Output.of(autoSubmitToolbar));
        }

        /**
         * @param credentialsScheme One of: `&#34;EDIT_USERNAME_AND_PASSWORD&#34;`, `&#34;ADMIN_SETS_CREDENTIALS&#34;`, `&#34;EDIT_PASSWORD_ONLY&#34;`, `&#34;EXTERNAL_PASSWORD_SYNC&#34;`, or `&#34;SHARED_USERNAME_AND_PASSWORD&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder credentialsScheme(@Nullable Output<String> credentialsScheme) {
            $.credentialsScheme = credentialsScheme;
            return this;
        }

        /**
         * @param credentialsScheme One of: `&#34;EDIT_USERNAME_AND_PASSWORD&#34;`, `&#34;ADMIN_SETS_CREDENTIALS&#34;`, `&#34;EDIT_PASSWORD_ONLY&#34;`, `&#34;EXTERNAL_PASSWORD_SYNC&#34;`, or `&#34;SHARED_USERNAME_AND_PASSWORD&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder credentialsScheme(String credentialsScheme) {
            return credentialsScheme(Output.of(credentialsScheme));
        }

        /**
         * @param enduserNote Application notes for end users.
         * 
         * @return builder
         * 
         */
        public Builder enduserNote(@Nullable Output<String> enduserNote) {
            $.enduserNote = enduserNote;
            return this;
        }

        /**
         * @param enduserNote Application notes for end users.
         * 
         * @return builder
         * 
         */
        public Builder enduserNote(String enduserNote) {
            return enduserNote(Output.of(enduserNote));
        }

        /**
         * @param groups Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
        public Builder groups(@Nullable Output<List<String>> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
        public Builder groups(List<String> groups) {
            return groups(Output.of(groups));
        }

        /**
         * @param groups Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }

        /**
         * @param hideIos Do not display application icon on mobile app.
         * 
         * @return builder
         * 
         */
        public Builder hideIos(@Nullable Output<Boolean> hideIos) {
            $.hideIos = hideIos;
            return this;
        }

        /**
         * @param hideIos Do not display application icon on mobile app.
         * 
         * @return builder
         * 
         */
        public Builder hideIos(Boolean hideIos) {
            return hideIos(Output.of(hideIos));
        }

        /**
         * @param hideWeb Do not display application icon to users.
         * 
         * @return builder
         * 
         */
        public Builder hideWeb(@Nullable Output<Boolean> hideWeb) {
            $.hideWeb = hideWeb;
            return this;
        }

        /**
         * @param hideWeb Do not display application icon to users.
         * 
         * @return builder
         * 
         */
        public Builder hideWeb(Boolean hideWeb) {
            return hideWeb(Output.of(hideWeb));
        }

        /**
         * @param label The Application&#39;s display name.
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label The Application&#39;s display name.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param logo Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
         * 
         * @return builder
         * 
         */
        public Builder logo(@Nullable Output<String> logo) {
            $.logo = logo;
            return this;
        }

        /**
         * @param logo Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
         * 
         * @return builder
         * 
         */
        public Builder logo(String logo) {
            return logo(Output.of(logo));
        }

        /**
         * @param logoUrl Direct link of application logo.
         * 
         * @return builder
         * 
         */
        public Builder logoUrl(@Nullable Output<String> logoUrl) {
            $.logoUrl = logoUrl;
            return this;
        }

        /**
         * @param logoUrl Direct link of application logo.
         * 
         * @return builder
         * 
         */
        public Builder logoUrl(String logoUrl) {
            return logoUrl(Output.of(logoUrl));
        }

        /**
         * @param name Name assigned to the application by Okta.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name assigned to the application by Okta.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param preconfiguredApp Tells Okta to use an existing application in their application catalog, as opposed to a custom application.
         * 
         * @return builder
         * 
         */
        public Builder preconfiguredApp(@Nullable Output<String> preconfiguredApp) {
            $.preconfiguredApp = preconfiguredApp;
            return this;
        }

        /**
         * @param preconfiguredApp Tells Okta to use an existing application in their application catalog, as opposed to a custom application.
         * 
         * @return builder
         * 
         */
        public Builder preconfiguredApp(String preconfiguredApp) {
            return preconfiguredApp(Output.of(preconfiguredApp));
        }

        /**
         * @param revealPassword Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `&#34;ADMIN_SETS_CREDENTIALS&#34;`, `&#34;SHARED_USERNAME_AND_PASSWORD&#34;` or `&#34;EXTERNAL_PASSWORD_SYNC&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder revealPassword(@Nullable Output<Boolean> revealPassword) {
            $.revealPassword = revealPassword;
            return this;
        }

        /**
         * @param revealPassword Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `&#34;ADMIN_SETS_CREDENTIALS&#34;`, `&#34;SHARED_USERNAME_AND_PASSWORD&#34;` or `&#34;EXTERNAL_PASSWORD_SYNC&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder revealPassword(Boolean revealPassword) {
            return revealPassword(Output.of(revealPassword));
        }

        /**
         * @param sharedPassword Shared password, required for certain schemes
         * 
         * @return builder
         * 
         */
        public Builder sharedPassword(@Nullable Output<String> sharedPassword) {
            $.sharedPassword = sharedPassword;
            return this;
        }

        /**
         * @param sharedPassword Shared password, required for certain schemes
         * 
         * @return builder
         * 
         */
        public Builder sharedPassword(String sharedPassword) {
            return sharedPassword(Output.of(sharedPassword));
        }

        /**
         * @param sharedUsername Shared username, required for certain schemes
         * 
         * @return builder
         * 
         */
        public Builder sharedUsername(@Nullable Output<String> sharedUsername) {
            $.sharedUsername = sharedUsername;
            return this;
        }

        /**
         * @param sharedUsername Shared username, required for certain schemes
         * 
         * @return builder
         * 
         */
        public Builder sharedUsername(String sharedUsername) {
            return sharedUsername(Output.of(sharedUsername));
        }

        /**
         * @param signOnMode Sign-on mode of the application.
         * 
         * @return builder
         * 
         */
        public Builder signOnMode(@Nullable Output<String> signOnMode) {
            $.signOnMode = signOnMode;
            return this;
        }

        /**
         * @param signOnMode Sign-on mode of the application.
         * 
         * @return builder
         * 
         */
        public Builder signOnMode(String signOnMode) {
            return signOnMode(Output.of(signOnMode));
        }

        /**
         * @param signOnRedirectUrl Redirect URL; if going to the login page URL redirects to another page, then enter that URL here
         * 
         * @return builder
         * 
         */
        public Builder signOnRedirectUrl(@Nullable Output<String> signOnRedirectUrl) {
            $.signOnRedirectUrl = signOnRedirectUrl;
            return this;
        }

        /**
         * @param signOnRedirectUrl Redirect URL; if going to the login page URL redirects to another page, then enter that URL here
         * 
         * @return builder
         * 
         */
        public Builder signOnRedirectUrl(String signOnRedirectUrl) {
            return signOnRedirectUrl(Output.of(signOnRedirectUrl));
        }

        /**
         * @param signOnUrl App login page URL
         * 
         * @return builder
         * 
         */
        public Builder signOnUrl(@Nullable Output<String> signOnUrl) {
            $.signOnUrl = signOnUrl;
            return this;
        }

        /**
         * @param signOnUrl App login page URL
         * 
         * @return builder
         * 
         */
        public Builder signOnUrl(String signOnUrl) {
            return signOnUrl(Output.of(signOnUrl));
        }

        /**
         * @param skipGroups Indicator that allows the app to skip `groups` sync (it&#39;s also can be provided during import). Default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder skipGroups(@Nullable Output<Boolean> skipGroups) {
            $.skipGroups = skipGroups;
            return this;
        }

        /**
         * @param skipGroups Indicator that allows the app to skip `groups` sync (it&#39;s also can be provided during import). Default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder skipGroups(Boolean skipGroups) {
            return skipGroups(Output.of(skipGroups));
        }

        /**
         * @param skipUsers Indicator that allows the app to skip `users` sync (it&#39;s also can be provided during import). Default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder skipUsers(@Nullable Output<Boolean> skipUsers) {
            $.skipUsers = skipUsers;
            return this;
        }

        /**
         * @param skipUsers Indicator that allows the app to skip `users` sync (it&#39;s also can be provided during import). Default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder skipUsers(Boolean skipUsers) {
            return skipUsers(Output.of(skipUsers));
        }

        /**
         * @param status The status of the application, by default, it is `&#34;ACTIVE&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the application, by default, it is `&#34;ACTIVE&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param userNameTemplate Username template. Default: `&#34;${source.login}&#34;`
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplate(@Nullable Output<String> userNameTemplate) {
            $.userNameTemplate = userNameTemplate;
            return this;
        }

        /**
         * @param userNameTemplate Username template. Default: `&#34;${source.login}&#34;`
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplate(String userNameTemplate) {
            return userNameTemplate(Output.of(userNameTemplate));
        }

        /**
         * @param userNameTemplatePushStatus Push username on update. Valid values: `&#34;PUSH&#34;` and `&#34;DONT_PUSH&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplatePushStatus(@Nullable Output<String> userNameTemplatePushStatus) {
            $.userNameTemplatePushStatus = userNameTemplatePushStatus;
            return this;
        }

        /**
         * @param userNameTemplatePushStatus Push username on update. Valid values: `&#34;PUSH&#34;` and `&#34;DONT_PUSH&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplatePushStatus(String userNameTemplatePushStatus) {
            return userNameTemplatePushStatus(Output.of(userNameTemplatePushStatus));
        }

        /**
         * @param userNameTemplateSuffix Username template suffix.
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplateSuffix(@Nullable Output<String> userNameTemplateSuffix) {
            $.userNameTemplateSuffix = userNameTemplateSuffix;
            return this;
        }

        /**
         * @param userNameTemplateSuffix Username template suffix.
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplateSuffix(String userNameTemplateSuffix) {
            return userNameTemplateSuffix(Output.of(userNameTemplateSuffix));
        }

        /**
         * @param userNameTemplateType Username template type. Default: `&#34;BUILT_IN&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplateType(@Nullable Output<String> userNameTemplateType) {
            $.userNameTemplateType = userNameTemplateType;
            return this;
        }

        /**
         * @param userNameTemplateType Username template type. Default: `&#34;BUILT_IN&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplateType(String userNameTemplateType) {
            return userNameTemplateType(Output.of(userNameTemplateType));
        }

        /**
         * @param users The users assigned to the application. See `okta.app.User` for a more flexible approach.
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
        public Builder users(@Nullable Output<List<AutoLoginUserArgs>> users) {
            $.users = users;
            return this;
        }

        /**
         * @param users The users assigned to the application. See `okta.app.User` for a more flexible approach.
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
        public Builder users(List<AutoLoginUserArgs> users) {
            return users(Output.of(users));
        }

        /**
         * @param users The users assigned to the application. See `okta.app.User` for a more flexible approach.
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
        public Builder users(AutoLoginUserArgs... users) {
            return users(List.of(users));
        }

        public AutoLoginState build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.policy.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RuleIdpDiscoveryUserIdentifierPattern {
    /**
     * @return The kind of pattern. For regex, use `&#34;EXPRESSION&#34;`. For simple string matches, use one of the following: `&#34;SUFFIX&#34;`, `&#34;EQUALS&#34;`, `&#34;STARTS_WITH&#34;`, `&#34;CONTAINS&#34;`
     * 
     */
    private final @Nullable String matchType;
    /**
     * @return The regex or simple match string to match against.
     * 
     */
    private final @Nullable String value;

    @CustomType.Constructor
    private RuleIdpDiscoveryUserIdentifierPattern(
        @CustomType.Parameter("matchType") @Nullable String matchType,
        @CustomType.Parameter("value") @Nullable String value) {
        this.matchType = matchType;
        this.value = value;
    }

    /**
     * @return The kind of pattern. For regex, use `&#34;EXPRESSION&#34;`. For simple string matches, use one of the following: `&#34;SUFFIX&#34;`, `&#34;EQUALS&#34;`, `&#34;STARTS_WITH&#34;`, `&#34;CONTAINS&#34;`
     * 
     */
    public Optional<String> matchType() {
        return Optional.ofNullable(this.matchType);
    }
    /**
     * @return The regex or simple match string to match against.
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuleIdpDiscoveryUserIdentifierPattern defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String matchType;
        private @Nullable String value;

        public Builder() {
    	      // Empty
        }

        public Builder(RuleIdpDiscoveryUserIdentifierPattern defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.matchType = defaults.matchType;
    	      this.value = defaults.value;
        }

        public Builder matchType(@Nullable String matchType) {
            this.matchType = matchType;
            return this;
        }
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }        public RuleIdpDiscoveryUserIdentifierPattern build() {
            return new RuleIdpDiscoveryUserIdentifierPattern(matchType, value);
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.app.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMetadataSamlResult {
    private final String appId;
    /**
     * @return public certificate from application metadata.
     * 
     */
    private final String certificate;
    /**
     * @return Entity URL for instance `https://www.okta.com/saml2/service-provider/sposcfdmlybtwkdcgtuf`.
     * 
     */
    private final String entityId;
    /**
     * @return urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.
     * 
     */
    private final String httpPostBinding;
    /**
     * @return urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.
     * 
     */
    private final String httpRedirectBinding;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final @Nullable String keyId;
    /**
     * @return raw metadata of application.
     * 
     */
    private final String metadata;
    /**
     * @return Whether authn requests are signed.
     * 
     */
    private final Boolean wantAuthnRequestsSigned;

    @CustomType.Constructor
    private GetMetadataSamlResult(
        @CustomType.Parameter("appId") String appId,
        @CustomType.Parameter("certificate") String certificate,
        @CustomType.Parameter("entityId") String entityId,
        @CustomType.Parameter("httpPostBinding") String httpPostBinding,
        @CustomType.Parameter("httpRedirectBinding") String httpRedirectBinding,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("keyId") @Nullable String keyId,
        @CustomType.Parameter("metadata") String metadata,
        @CustomType.Parameter("wantAuthnRequestsSigned") Boolean wantAuthnRequestsSigned) {
        this.appId = appId;
        this.certificate = certificate;
        this.entityId = entityId;
        this.httpPostBinding = httpPostBinding;
        this.httpRedirectBinding = httpRedirectBinding;
        this.id = id;
        this.keyId = keyId;
        this.metadata = metadata;
        this.wantAuthnRequestsSigned = wantAuthnRequestsSigned;
    }

    public String appId() {
        return this.appId;
    }
    /**
     * @return public certificate from application metadata.
     * 
     */
    public String certificate() {
        return this.certificate;
    }
    /**
     * @return Entity URL for instance `https://www.okta.com/saml2/service-provider/sposcfdmlybtwkdcgtuf`.
     * 
     */
    public String entityId() {
        return this.entityId;
    }
    /**
     * @return urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.
     * 
     */
    public String httpPostBinding() {
        return this.httpPostBinding;
    }
    /**
     * @return urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.
     * 
     */
    public String httpRedirectBinding() {
        return this.httpRedirectBinding;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> keyId() {
        return Optional.ofNullable(this.keyId);
    }
    /**
     * @return raw metadata of application.
     * 
     */
    public String metadata() {
        return this.metadata;
    }
    /**
     * @return Whether authn requests are signed.
     * 
     */
    public Boolean wantAuthnRequestsSigned() {
        return this.wantAuthnRequestsSigned;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMetadataSamlResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String appId;
        private String certificate;
        private String entityId;
        private String httpPostBinding;
        private String httpRedirectBinding;
        private String id;
        private @Nullable String keyId;
        private String metadata;
        private Boolean wantAuthnRequestsSigned;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMetadataSamlResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appId = defaults.appId;
    	      this.certificate = defaults.certificate;
    	      this.entityId = defaults.entityId;
    	      this.httpPostBinding = defaults.httpPostBinding;
    	      this.httpRedirectBinding = defaults.httpRedirectBinding;
    	      this.id = defaults.id;
    	      this.keyId = defaults.keyId;
    	      this.metadata = defaults.metadata;
    	      this.wantAuthnRequestsSigned = defaults.wantAuthnRequestsSigned;
        }

        public Builder appId(String appId) {
            this.appId = Objects.requireNonNull(appId);
            return this;
        }
        public Builder certificate(String certificate) {
            this.certificate = Objects.requireNonNull(certificate);
            return this;
        }
        public Builder entityId(String entityId) {
            this.entityId = Objects.requireNonNull(entityId);
            return this;
        }
        public Builder httpPostBinding(String httpPostBinding) {
            this.httpPostBinding = Objects.requireNonNull(httpPostBinding);
            return this;
        }
        public Builder httpRedirectBinding(String httpRedirectBinding) {
            this.httpRedirectBinding = Objects.requireNonNull(httpRedirectBinding);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder keyId(@Nullable String keyId) {
            this.keyId = keyId;
            return this;
        }
        public Builder metadata(String metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }
        public Builder wantAuthnRequestsSigned(Boolean wantAuthnRequestsSigned) {
            this.wantAuthnRequestsSigned = Objects.requireNonNull(wantAuthnRequestsSigned);
            return this;
        }        public GetMetadataSamlResult build() {
            return new GetMetadataSamlResult(appId, certificate, entityId, httpPostBinding, httpRedirectBinding, id, keyId, metadata, wantAuthnRequestsSigned);
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.UserFactorQuestionArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.UserFactorQuestionState;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Resource to manage a question factor for a user
 * 
 */
@ResourceType(type="okta:index/userFactorQuestion:UserFactorQuestion")
public class UserFactorQuestion extends com.pulumi.resources.CustomResource {
    /**
     * User password security answer
     * 
     */
    @Export(name="answer", refs={String.class}, tree="[0]")
    private Output<String> answer;

    /**
     * @return User password security answer
     * 
     */
    public Output<String> answer() {
        return this.answer;
    }
    /**
     * Unique key for question
     * 
     */
    @Export(name="key", refs={String.class}, tree="[0]")
    private Output<String> key;

    /**
     * @return Unique key for question
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * User factor status.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return User factor status.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Display text for question
     * 
     */
    @Export(name="text", refs={String.class}, tree="[0]")
    private Output<String> text;

    /**
     * @return Display text for question
     * 
     */
    public Output<String> text() {
        return this.text;
    }
    /**
     * ID of a Okta User
     * 
     */
    @Export(name="userId", refs={String.class}, tree="[0]")
    private Output<String> userId;

    /**
     * @return ID of a Okta User
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UserFactorQuestion(String name) {
        this(name, UserFactorQuestionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UserFactorQuestion(String name, UserFactorQuestionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UserFactorQuestion(String name, UserFactorQuestionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/userFactorQuestion:UserFactorQuestion", name, args == null ? UserFactorQuestionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private UserFactorQuestion(String name, Output<String> id, @Nullable UserFactorQuestionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/userFactorQuestion:UserFactorQuestion", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "answer"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UserFactorQuestion get(String name, Output<String> id, @Nullable UserFactorQuestionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new UserFactorQuestion(name, id, state, options);
    }
}

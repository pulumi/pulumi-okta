// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetReviewLinks {
    private String reassignReviewHref;
    private String selfHref;

    private GetReviewLinks() {}
    public String reassignReviewHref() {
        return this.reassignReviewHref;
    }
    public String selfHref() {
        return this.selfHref;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReviewLinks defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String reassignReviewHref;
        private String selfHref;
        public Builder() {}
        public Builder(GetReviewLinks defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.reassignReviewHref = defaults.reassignReviewHref;
    	      this.selfHref = defaults.selfHref;
        }

        @CustomType.Setter
        public Builder reassignReviewHref(String reassignReviewHref) {
            if (reassignReviewHref == null) {
              throw new MissingRequiredPropertyException("GetReviewLinks", "reassignReviewHref");
            }
            this.reassignReviewHref = reassignReviewHref;
            return this;
        }
        @CustomType.Setter
        public Builder selfHref(String selfHref) {
            if (selfHref == null) {
              throw new MissingRequiredPropertyException("GetReviewLinks", "selfHref");
            }
            this.selfHref = selfHref;
            return this;
        }
        public GetReviewLinks build() {
            final var _resultValue = new GetReviewLinks();
            _resultValue.reassignReviewHref = reassignReviewHref;
            _resultValue.selfHref = selfHref;
            return _resultValue;
        }
    }
}

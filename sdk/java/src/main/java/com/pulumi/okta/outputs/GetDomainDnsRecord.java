// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDomainDnsRecord {
    /**
     * @return TXT record expiration
     * 
     */
    private String expiration;
    /**
     * @return DNS record name
     * 
     */
    private String fqdn;
    /**
     * @return Record type can be TXT or CNAME
     * 
     */
    private String recordType;
    /**
     * @return DNS verification value
     * 
     */
    private List<String> values;

    private GetDomainDnsRecord() {}
    /**
     * @return TXT record expiration
     * 
     */
    public String expiration() {
        return this.expiration;
    }
    /**
     * @return DNS record name
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return Record type can be TXT or CNAME
     * 
     */
    public String recordType() {
        return this.recordType;
    }
    /**
     * @return DNS verification value
     * 
     */
    public List<String> values() {
        return this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainDnsRecord defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String expiration;
        private String fqdn;
        private String recordType;
        private List<String> values;
        public Builder() {}
        public Builder(GetDomainDnsRecord defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expiration = defaults.expiration;
    	      this.fqdn = defaults.fqdn;
    	      this.recordType = defaults.recordType;
    	      this.values = defaults.values;
        }

        @CustomType.Setter
        public Builder expiration(String expiration) {
            if (expiration == null) {
              throw new MissingRequiredPropertyException("GetDomainDnsRecord", "expiration");
            }
            this.expiration = expiration;
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            if (fqdn == null) {
              throw new MissingRequiredPropertyException("GetDomainDnsRecord", "fqdn");
            }
            this.fqdn = fqdn;
            return this;
        }
        @CustomType.Setter
        public Builder recordType(String recordType) {
            if (recordType == null) {
              throw new MissingRequiredPropertyException("GetDomainDnsRecord", "recordType");
            }
            this.recordType = recordType;
            return this;
        }
        @CustomType.Setter
        public Builder values(List<String> values) {
            if (values == null) {
              throw new MissingRequiredPropertyException("GetDomainDnsRecord", "values");
            }
            this.values = values;
            return this;
        }
        public Builder values(String... values) {
            return values(List.of(values));
        }
        public GetDomainDnsRecord build() {
            final var _resultValue = new GetDomainDnsRecord();
            _resultValue.expiration = expiration;
            _resultValue.fqdn = fqdn;
            _resultValue.recordType = recordType;
            _resultValue.values = values;
            return _resultValue;
        }
    }
}

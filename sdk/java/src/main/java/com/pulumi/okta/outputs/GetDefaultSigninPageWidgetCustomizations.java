// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDefaultSigninPageWidgetCustomizations {
    private String authenticatorPageCustomLinkLabel;
    private String authenticatorPageCustomLinkUrl;
    private String classicRecoveryFlowEmailOrUsernameLabel;
    private String customLink1Label;
    private String customLink1Url;
    private String customLink2Label;
    private String customLink2Url;
    private String forgotPasswordLabel;
    private String forgotPasswordUrl;
    private String helpLabel;
    private String helpUrl;
    private String passwordInfoTip;
    private String passwordLabel;
    private Boolean showPasswordVisibilityToggle;
    private Boolean showUserIdentifier;
    private String signInLabel;
    private String unlockAccountLabel;
    private String unlockAccountUrl;
    private String usernameInfoTip;
    private String usernameLabel;
    private String widgetGeneration;

    private GetDefaultSigninPageWidgetCustomizations() {}
    public String authenticatorPageCustomLinkLabel() {
        return this.authenticatorPageCustomLinkLabel;
    }
    public String authenticatorPageCustomLinkUrl() {
        return this.authenticatorPageCustomLinkUrl;
    }
    public String classicRecoveryFlowEmailOrUsernameLabel() {
        return this.classicRecoveryFlowEmailOrUsernameLabel;
    }
    public String customLink1Label() {
        return this.customLink1Label;
    }
    public String customLink1Url() {
        return this.customLink1Url;
    }
    public String customLink2Label() {
        return this.customLink2Label;
    }
    public String customLink2Url() {
        return this.customLink2Url;
    }
    public String forgotPasswordLabel() {
        return this.forgotPasswordLabel;
    }
    public String forgotPasswordUrl() {
        return this.forgotPasswordUrl;
    }
    public String helpLabel() {
        return this.helpLabel;
    }
    public String helpUrl() {
        return this.helpUrl;
    }
    public String passwordInfoTip() {
        return this.passwordInfoTip;
    }
    public String passwordLabel() {
        return this.passwordLabel;
    }
    public Boolean showPasswordVisibilityToggle() {
        return this.showPasswordVisibilityToggle;
    }
    public Boolean showUserIdentifier() {
        return this.showUserIdentifier;
    }
    public String signInLabel() {
        return this.signInLabel;
    }
    public String unlockAccountLabel() {
        return this.unlockAccountLabel;
    }
    public String unlockAccountUrl() {
        return this.unlockAccountUrl;
    }
    public String usernameInfoTip() {
        return this.usernameInfoTip;
    }
    public String usernameLabel() {
        return this.usernameLabel;
    }
    public String widgetGeneration() {
        return this.widgetGeneration;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDefaultSigninPageWidgetCustomizations defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authenticatorPageCustomLinkLabel;
        private String authenticatorPageCustomLinkUrl;
        private String classicRecoveryFlowEmailOrUsernameLabel;
        private String customLink1Label;
        private String customLink1Url;
        private String customLink2Label;
        private String customLink2Url;
        private String forgotPasswordLabel;
        private String forgotPasswordUrl;
        private String helpLabel;
        private String helpUrl;
        private String passwordInfoTip;
        private String passwordLabel;
        private Boolean showPasswordVisibilityToggle;
        private Boolean showUserIdentifier;
        private String signInLabel;
        private String unlockAccountLabel;
        private String unlockAccountUrl;
        private String usernameInfoTip;
        private String usernameLabel;
        private String widgetGeneration;
        public Builder() {}
        public Builder(GetDefaultSigninPageWidgetCustomizations defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticatorPageCustomLinkLabel = defaults.authenticatorPageCustomLinkLabel;
    	      this.authenticatorPageCustomLinkUrl = defaults.authenticatorPageCustomLinkUrl;
    	      this.classicRecoveryFlowEmailOrUsernameLabel = defaults.classicRecoveryFlowEmailOrUsernameLabel;
    	      this.customLink1Label = defaults.customLink1Label;
    	      this.customLink1Url = defaults.customLink1Url;
    	      this.customLink2Label = defaults.customLink2Label;
    	      this.customLink2Url = defaults.customLink2Url;
    	      this.forgotPasswordLabel = defaults.forgotPasswordLabel;
    	      this.forgotPasswordUrl = defaults.forgotPasswordUrl;
    	      this.helpLabel = defaults.helpLabel;
    	      this.helpUrl = defaults.helpUrl;
    	      this.passwordInfoTip = defaults.passwordInfoTip;
    	      this.passwordLabel = defaults.passwordLabel;
    	      this.showPasswordVisibilityToggle = defaults.showPasswordVisibilityToggle;
    	      this.showUserIdentifier = defaults.showUserIdentifier;
    	      this.signInLabel = defaults.signInLabel;
    	      this.unlockAccountLabel = defaults.unlockAccountLabel;
    	      this.unlockAccountUrl = defaults.unlockAccountUrl;
    	      this.usernameInfoTip = defaults.usernameInfoTip;
    	      this.usernameLabel = defaults.usernameLabel;
    	      this.widgetGeneration = defaults.widgetGeneration;
        }

        @CustomType.Setter
        public Builder authenticatorPageCustomLinkLabel(String authenticatorPageCustomLinkLabel) {
            if (authenticatorPageCustomLinkLabel == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "authenticatorPageCustomLinkLabel");
            }
            this.authenticatorPageCustomLinkLabel = authenticatorPageCustomLinkLabel;
            return this;
        }
        @CustomType.Setter
        public Builder authenticatorPageCustomLinkUrl(String authenticatorPageCustomLinkUrl) {
            if (authenticatorPageCustomLinkUrl == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "authenticatorPageCustomLinkUrl");
            }
            this.authenticatorPageCustomLinkUrl = authenticatorPageCustomLinkUrl;
            return this;
        }
        @CustomType.Setter
        public Builder classicRecoveryFlowEmailOrUsernameLabel(String classicRecoveryFlowEmailOrUsernameLabel) {
            if (classicRecoveryFlowEmailOrUsernameLabel == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "classicRecoveryFlowEmailOrUsernameLabel");
            }
            this.classicRecoveryFlowEmailOrUsernameLabel = classicRecoveryFlowEmailOrUsernameLabel;
            return this;
        }
        @CustomType.Setter
        public Builder customLink1Label(String customLink1Label) {
            if (customLink1Label == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "customLink1Label");
            }
            this.customLink1Label = customLink1Label;
            return this;
        }
        @CustomType.Setter
        public Builder customLink1Url(String customLink1Url) {
            if (customLink1Url == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "customLink1Url");
            }
            this.customLink1Url = customLink1Url;
            return this;
        }
        @CustomType.Setter
        public Builder customLink2Label(String customLink2Label) {
            if (customLink2Label == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "customLink2Label");
            }
            this.customLink2Label = customLink2Label;
            return this;
        }
        @CustomType.Setter
        public Builder customLink2Url(String customLink2Url) {
            if (customLink2Url == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "customLink2Url");
            }
            this.customLink2Url = customLink2Url;
            return this;
        }
        @CustomType.Setter
        public Builder forgotPasswordLabel(String forgotPasswordLabel) {
            if (forgotPasswordLabel == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "forgotPasswordLabel");
            }
            this.forgotPasswordLabel = forgotPasswordLabel;
            return this;
        }
        @CustomType.Setter
        public Builder forgotPasswordUrl(String forgotPasswordUrl) {
            if (forgotPasswordUrl == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "forgotPasswordUrl");
            }
            this.forgotPasswordUrl = forgotPasswordUrl;
            return this;
        }
        @CustomType.Setter
        public Builder helpLabel(String helpLabel) {
            if (helpLabel == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "helpLabel");
            }
            this.helpLabel = helpLabel;
            return this;
        }
        @CustomType.Setter
        public Builder helpUrl(String helpUrl) {
            if (helpUrl == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "helpUrl");
            }
            this.helpUrl = helpUrl;
            return this;
        }
        @CustomType.Setter
        public Builder passwordInfoTip(String passwordInfoTip) {
            if (passwordInfoTip == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "passwordInfoTip");
            }
            this.passwordInfoTip = passwordInfoTip;
            return this;
        }
        @CustomType.Setter
        public Builder passwordLabel(String passwordLabel) {
            if (passwordLabel == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "passwordLabel");
            }
            this.passwordLabel = passwordLabel;
            return this;
        }
        @CustomType.Setter
        public Builder showPasswordVisibilityToggle(Boolean showPasswordVisibilityToggle) {
            if (showPasswordVisibilityToggle == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "showPasswordVisibilityToggle");
            }
            this.showPasswordVisibilityToggle = showPasswordVisibilityToggle;
            return this;
        }
        @CustomType.Setter
        public Builder showUserIdentifier(Boolean showUserIdentifier) {
            if (showUserIdentifier == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "showUserIdentifier");
            }
            this.showUserIdentifier = showUserIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder signInLabel(String signInLabel) {
            if (signInLabel == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "signInLabel");
            }
            this.signInLabel = signInLabel;
            return this;
        }
        @CustomType.Setter
        public Builder unlockAccountLabel(String unlockAccountLabel) {
            if (unlockAccountLabel == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "unlockAccountLabel");
            }
            this.unlockAccountLabel = unlockAccountLabel;
            return this;
        }
        @CustomType.Setter
        public Builder unlockAccountUrl(String unlockAccountUrl) {
            if (unlockAccountUrl == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "unlockAccountUrl");
            }
            this.unlockAccountUrl = unlockAccountUrl;
            return this;
        }
        @CustomType.Setter
        public Builder usernameInfoTip(String usernameInfoTip) {
            if (usernameInfoTip == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "usernameInfoTip");
            }
            this.usernameInfoTip = usernameInfoTip;
            return this;
        }
        @CustomType.Setter
        public Builder usernameLabel(String usernameLabel) {
            if (usernameLabel == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "usernameLabel");
            }
            this.usernameLabel = usernameLabel;
            return this;
        }
        @CustomType.Setter
        public Builder widgetGeneration(String widgetGeneration) {
            if (widgetGeneration == null) {
              throw new MissingRequiredPropertyException("GetDefaultSigninPageWidgetCustomizations", "widgetGeneration");
            }
            this.widgetGeneration = widgetGeneration;
            return this;
        }
        public GetDefaultSigninPageWidgetCustomizations build() {
            final var _resultValue = new GetDefaultSigninPageWidgetCustomizations();
            _resultValue.authenticatorPageCustomLinkLabel = authenticatorPageCustomLinkLabel;
            _resultValue.authenticatorPageCustomLinkUrl = authenticatorPageCustomLinkUrl;
            _resultValue.classicRecoveryFlowEmailOrUsernameLabel = classicRecoveryFlowEmailOrUsernameLabel;
            _resultValue.customLink1Label = customLink1Label;
            _resultValue.customLink1Url = customLink1Url;
            _resultValue.customLink2Label = customLink2Label;
            _resultValue.customLink2Url = customLink2Url;
            _resultValue.forgotPasswordLabel = forgotPasswordLabel;
            _resultValue.forgotPasswordUrl = forgotPasswordUrl;
            _resultValue.helpLabel = helpLabel;
            _resultValue.helpUrl = helpUrl;
            _resultValue.passwordInfoTip = passwordInfoTip;
            _resultValue.passwordLabel = passwordLabel;
            _resultValue.showPasswordVisibilityToggle = showPasswordVisibilityToggle;
            _resultValue.showUserIdentifier = showUserIdentifier;
            _resultValue.signInLabel = signInLabel;
            _resultValue.unlockAccountLabel = unlockAccountLabel;
            _resultValue.unlockAccountUrl = unlockAccountUrl;
            _resultValue.usernameInfoTip = usernameInfoTip;
            _resultValue.usernameLabel = usernameLabel;
            _resultValue.widgetGeneration = widgetGeneration;
            return _resultValue;
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.deprecated;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.deprecated.OauthAppArgs;
import com.pulumi.okta.deprecated.inputs.OauthAppState;
import com.pulumi.okta.deprecated.outputs.OauthAppGroupsClaim;
import com.pulumi.okta.deprecated.outputs.OauthAppJwk;
import com.pulumi.okta.deprecated.outputs.OauthAppUser;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * @deprecated
 * Deprecated. Use app.OAuth instead. This resource will be removed in version 4.0 of this provider.
 * 
 */
@Deprecated /* Deprecated. Use app.OAuth instead. This resource will be removed in version 4.0 of this provider. */
@ResourceType(type="okta:deprecated/oauthApp:OauthApp")
public class OauthApp extends com.pulumi.resources.CustomResource {
    /**
     * Custom error page URL
     * 
     */
    @Export(name="accessibilityErrorRedirectUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> accessibilityErrorRedirectUrl;

    /**
     * @return Custom error page URL
     * 
     */
    public Output<Optional<String>> accessibilityErrorRedirectUrl() {
        return Codegen.optional(this.accessibilityErrorRedirectUrl);
    }
    /**
     * Custom login page URL
     * 
     */
    @Export(name="accessibilityLoginRedirectUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> accessibilityLoginRedirectUrl;

    /**
     * @return Custom login page URL
     * 
     */
    public Output<Optional<String>> accessibilityLoginRedirectUrl() {
        return Codegen.optional(this.accessibilityLoginRedirectUrl);
    }
    /**
     * Enable self service
     * 
     */
    @Export(name="accessibilitySelfService", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> accessibilitySelfService;

    /**
     * @return Enable self service
     * 
     */
    public Output<Optional<Boolean>> accessibilitySelfService() {
        return Codegen.optional(this.accessibilitySelfService);
    }
    /**
     * Application notes for admins.
     * 
     */
    @Export(name="adminNote", type=String.class, parameters={})
    private Output</* @Nullable */ String> adminNote;

    /**
     * @return Application notes for admins.
     * 
     */
    public Output<Optional<String>> adminNote() {
        return Codegen.optional(this.adminNote);
    }
    /**
     * Displays specific appLinks for the app
     * 
     */
    @Export(name="appLinksJson", type=String.class, parameters={})
    private Output</* @Nullable */ String> appLinksJson;

    /**
     * @return Displays specific appLinks for the app
     * 
     */
    public Output<Optional<String>> appLinksJson() {
        return Codegen.optional(this.appLinksJson);
    }
    /**
     * Application settings in JSON format
     * 
     */
    @Export(name="appSettingsJson", type=String.class, parameters={})
    private Output</* @Nullable */ String> appSettingsJson;

    /**
     * @return Application settings in JSON format
     * 
     */
    public Output<Optional<String>> appSettingsJson() {
        return Codegen.optional(this.appSettingsJson);
    }
    /**
     * Id of this apps authentication policy
     * 
     */
    @Export(name="authenticationPolicy", type=String.class, parameters={})
    private Output</* @Nullable */ String> authenticationPolicy;

    /**
     * @return Id of this apps authentication policy
     * 
     */
    public Output<Optional<String>> authenticationPolicy() {
        return Codegen.optional(this.authenticationPolicy);
    }
    /**
     * Requested key rotation mode.
     * 
     */
    @Export(name="autoKeyRotation", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> autoKeyRotation;

    /**
     * @return Requested key rotation mode.
     * 
     */
    public Output<Optional<Boolean>> autoKeyRotation() {
        return Codegen.optional(this.autoKeyRotation);
    }
    /**
     * Display auto submit toolbar
     * 
     */
    @Export(name="autoSubmitToolbar", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> autoSubmitToolbar;

    /**
     * @return Display auto submit toolbar
     * 
     */
    public Output<Optional<Boolean>> autoSubmitToolbar() {
        return Codegen.optional(this.autoSubmitToolbar);
    }
    /**
     * OAuth client secret key, this can be set when token_endpoint_auth_method is client_secret_basic.
     * 
     */
    @Export(name="clientBasicSecret", type=String.class, parameters={})
    private Output</* @Nullable */ String> clientBasicSecret;

    /**
     * @return OAuth client secret key, this can be set when token_endpoint_auth_method is client_secret_basic.
     * 
     */
    public Output<Optional<String>> clientBasicSecret() {
        return Codegen.optional(this.clientBasicSecret);
    }
    /**
     * OAuth client ID. If set during creation, app is created with this id.
     * 
     */
    @Export(name="clientId", type=String.class, parameters={})
    private Output<String> clientId;

    /**
     * @return OAuth client ID. If set during creation, app is created with this id.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }
    /**
     * OAuth client secret key. This will be in plain text in your statefile unless you set omit_secret above.
     * 
     */
    @Export(name="clientSecret", type=String.class, parameters={})
    private Output<String> clientSecret;

    /**
     * @return OAuth client secret key. This will be in plain text in your statefile unless you set omit_secret above.
     * 
     */
    public Output<String> clientSecret() {
        return this.clientSecret;
    }
    /**
     * URI to a web page providing information about the client.
     * 
     */
    @Export(name="clientUri", type=String.class, parameters={})
    private Output</* @Nullable */ String> clientUri;

    /**
     * @return URI to a web page providing information about the client.
     * 
     */
    public Output<Optional<String>> clientUri() {
        return Codegen.optional(this.clientUri);
    }
    /**
     * *Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED.
     * Default value is TRUSTED
     * 
     */
    @Export(name="consentMethod", type=String.class, parameters={})
    private Output</* @Nullable */ String> consentMethod;

    /**
     * @return *Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED.
     * Default value is TRUSTED
     * 
     */
    public Output<Optional<String>> consentMethod() {
        return Codegen.optional(this.consentMethod);
    }
    /**
     * **Deprecated** This property allows you to set your client_id during creation. NOTE: updating after creation will be a
     * no-op, use client_id for that behavior instead.
     * 
     * @deprecated
     * This field is being replaced by client_id. Please set that field instead.
     * 
     */
    @Deprecated /* This field is being replaced by client_id. Please set that field instead. */
    @Export(name="customClientId", type=String.class, parameters={})
    private Output</* @Nullable */ String> customClientId;

    /**
     * @return **Deprecated** This property allows you to set your client_id during creation. NOTE: updating after creation will be a
     * no-op, use client_id for that behavior instead.
     * 
     */
    public Output<Optional<String>> customClientId() {
        return Codegen.optional(this.customClientId);
    }
    /**
     * Application notes for end users.
     * 
     */
    @Export(name="enduserNote", type=String.class, parameters={})
    private Output</* @Nullable */ String> enduserNote;

    /**
     * @return Application notes for end users.
     * 
     */
    public Output<Optional<String>> enduserNote() {
        return Codegen.optional(this.enduserNote);
    }
    /**
     * List of OAuth 2.0 grant types. Conditional validation params found here
     * https://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per
     * app type.
     * 
     */
    @Export(name="grantTypes", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> grantTypes;

    /**
     * @return List of OAuth 2.0 grant types. Conditional validation params found here
     * https://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per
     * app type.
     * 
     */
    public Output<Optional<List<String>>> grantTypes() {
        return Codegen.optional(this.grantTypes);
    }
    /**
     * Groups associated with the application
     * 
     * @deprecated
     * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
    @Export(name="groups", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> groups;

    /**
     * @return Groups associated with the application
     * 
     */
    public Output<Optional<List<String>>> groups() {
        return Codegen.optional(this.groups);
    }
    /**
     * Groups claim for an OpenID Connect client application
     * 
     */
    @Export(name="groupsClaim", type=OauthAppGroupsClaim.class, parameters={})
    private Output</* @Nullable */ OauthAppGroupsClaim> groupsClaim;

    /**
     * @return Groups claim for an OpenID Connect client application
     * 
     */
    public Output<Optional<OauthAppGroupsClaim>> groupsClaim() {
        return Codegen.optional(this.groupsClaim);
    }
    /**
     * Do not display application icon on mobile app
     * 
     */
    @Export(name="hideIos", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> hideIos;

    /**
     * @return Do not display application icon on mobile app
     * 
     */
    public Output<Optional<Boolean>> hideIos() {
        return Codegen.optional(this.hideIos);
    }
    /**
     * Do not display application icon to users
     * 
     */
    @Export(name="hideWeb", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> hideWeb;

    /**
     * @return Do not display application icon to users
     * 
     */
    public Output<Optional<Boolean>> hideWeb() {
        return Codegen.optional(this.hideWeb);
    }
    /**
     * *Early Access Property*. Enable Federation Broker Mode.
     * 
     */
    @Export(name="implicitAssignment", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> implicitAssignment;

    /**
     * @return *Early Access Property*. Enable Federation Broker Mode.
     * 
     */
    public Output<Optional<Boolean>> implicitAssignment() {
        return Codegen.optional(this.implicitAssignment);
    }
    /**
     * *Early Access Property*. Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a
     * custom domain URL as the issuer of ID token for this client.
     * 
     */
    @Export(name="issuerMode", type=String.class, parameters={})
    private Output</* @Nullable */ String> issuerMode;

    /**
     * @return *Early Access Property*. Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a
     * custom domain URL as the issuer of ID token for this client.
     * 
     */
    public Output<Optional<String>> issuerMode() {
        return Codegen.optional(this.issuerMode);
    }
    @Export(name="jwks", type=List.class, parameters={OauthAppJwk.class})
    private Output</* @Nullable */ List<OauthAppJwk>> jwks;

    public Output<Optional<List<OauthAppJwk>>> jwks() {
        return Codegen.optional(this.jwks);
    }
    /**
     * Pretty name of app.
     * 
     */
    @Export(name="label", type=String.class, parameters={})
    private Output<String> label;

    /**
     * @return Pretty name of app.
     * 
     */
    public Output<String> label() {
        return this.label;
    }
    /**
     * The type of Idp-Initiated login that the client supports, if any
     * 
     */
    @Export(name="loginMode", type=String.class, parameters={})
    private Output</* @Nullable */ String> loginMode;

    /**
     * @return The type of Idp-Initiated login that the client supports, if any
     * 
     */
    public Output<Optional<String>> loginMode() {
        return Codegen.optional(this.loginMode);
    }
    /**
     * List of scopes to use for the request
     * 
     */
    @Export(name="loginScopes", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> loginScopes;

    /**
     * @return List of scopes to use for the request
     * 
     */
    public Output<Optional<List<String>>> loginScopes() {
        return Codegen.optional(this.loginScopes);
    }
    /**
     * URI that initiates login.
     * 
     */
    @Export(name="loginUri", type=String.class, parameters={})
    private Output</* @Nullable */ String> loginUri;

    /**
     * @return URI that initiates login.
     * 
     */
    public Output<Optional<String>> loginUri() {
        return Codegen.optional(this.loginUri);
    }
    /**
     * Local path to logo of the application.
     * 
     */
    @Export(name="logo", type=String.class, parameters={})
    private Output</* @Nullable */ String> logo;

    /**
     * @return Local path to logo of the application.
     * 
     */
    public Output<Optional<String>> logo() {
        return Codegen.optional(this.logo);
    }
    /**
     * URI that references a logo for the client.
     * 
     */
    @Export(name="logoUri", type=String.class, parameters={})
    private Output</* @Nullable */ String> logoUri;

    /**
     * @return URI that references a logo for the client.
     * 
     */
    public Output<Optional<String>> logoUri() {
        return Codegen.optional(this.logoUri);
    }
    /**
     * URL of the application&#39;s logo
     * 
     */
    @Export(name="logoUrl", type=String.class, parameters={})
    private Output<String> logoUrl;

    /**
     * @return URL of the application&#39;s logo
     * 
     */
    public Output<String> logoUrl() {
        return this.logoUrl;
    }
    /**
     * Name of the app.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the app.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * This tells the provider not to persist the application&#39;s secret to state. If this is ever changes from true =&gt; false
     * your app will be recreated.
     * 
     */
    @Export(name="omitSecret", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> omitSecret;

    /**
     * @return This tells the provider not to persist the application&#39;s secret to state. If this is ever changes from true =&gt; false
     * your app will be recreated.
     * 
     */
    public Output<Optional<Boolean>> omitSecret() {
        return Codegen.optional(this.omitSecret);
    }
    /**
     * Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. `true` for `browser` and
     * `native` application types.
     * 
     */
    @Export(name="pkceRequired", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> pkceRequired;

    /**
     * @return Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. `true` for `browser` and
     * `native` application types.
     * 
     */
    public Output<Optional<Boolean>> pkceRequired() {
        return Codegen.optional(this.pkceRequired);
    }
    /**
     * URI to web page providing client policy document.
     * 
     */
    @Export(name="policyUri", type=String.class, parameters={})
    private Output</* @Nullable */ String> policyUri;

    /**
     * @return URI to web page providing client policy document.
     * 
     */
    public Output<Optional<String>> policyUri() {
        return Codegen.optional(this.policyUri);
    }
    /**
     * List of URIs for redirection after logout. Note: see okta_app_oauth_post_logout_redirect_uri for appending to this list
     * in a decentralized way.
     * 
     */
    @Export(name="postLogoutRedirectUris", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> postLogoutRedirectUris;

    /**
     * @return List of URIs for redirection after logout. Note: see okta_app_oauth_post_logout_redirect_uri for appending to this list
     * in a decentralized way.
     * 
     */
    public Output<Optional<List<String>>> postLogoutRedirectUris() {
        return Codegen.optional(this.postLogoutRedirectUris);
    }
    /**
     * Custom JSON that represents an OAuth application&#39;s profile
     * 
     */
    @Export(name="profile", type=String.class, parameters={})
    private Output</* @Nullable */ String> profile;

    /**
     * @return Custom JSON that represents an OAuth application&#39;s profile
     * 
     */
    public Output<Optional<String>> profile() {
        return Codegen.optional(this.profile);
    }
    /**
     * List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see
     * okta_app_oauth_redirect_uri for appending to this list in a decentralized way.
     * 
     */
    @Export(name="redirectUris", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> redirectUris;

    /**
     * @return List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see
     * okta_app_oauth_redirect_uri for appending to this list in a decentralized way.
     * 
     */
    public Output<Optional<List<String>>> redirectUris() {
        return Codegen.optional(this.redirectUris);
    }
    /**
     * *Early Access Property* Grace period for token rotation
     * 
     */
    @Export(name="refreshTokenLeeway", type=Integer.class, parameters={})
    private Output<Integer> refreshTokenLeeway;

    /**
     * @return *Early Access Property* Grace period for token rotation
     * 
     */
    public Output<Integer> refreshTokenLeeway() {
        return this.refreshTokenLeeway;
    }
    /**
     * *Early Access Property* Refresh token rotation behavior
     * 
     */
    @Export(name="refreshTokenRotation", type=String.class, parameters={})
    private Output<String> refreshTokenRotation;

    /**
     * @return *Early Access Property* Refresh token rotation behavior
     * 
     */
    public Output<String> refreshTokenRotation() {
        return this.refreshTokenRotation;
    }
    /**
     * List of OAuth 2.0 response type strings.
     * 
     */
    @Export(name="responseTypes", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> responseTypes;

    /**
     * @return List of OAuth 2.0 response type strings.
     * 
     */
    public Output<Optional<List<String>>> responseTypes() {
        return Codegen.optional(this.responseTypes);
    }
    /**
     * Sign on mode of application.
     * 
     */
    @Export(name="signOnMode", type=String.class, parameters={})
    private Output<String> signOnMode;

    /**
     * @return Sign on mode of application.
     * 
     */
    public Output<String> signOnMode() {
        return this.signOnMode;
    }
    /**
     * Ignore groups sync. This is a temporary solution until &#39;groups&#39; field is supported in all the app-like resources
     * 
     */
    @Export(name="skipGroups", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> skipGroups;

    /**
     * @return Ignore groups sync. This is a temporary solution until &#39;groups&#39; field is supported in all the app-like resources
     * 
     */
    public Output<Optional<Boolean>> skipGroups() {
        return Codegen.optional(this.skipGroups);
    }
    /**
     * Ignore users sync. This is a temporary solution until &#39;users&#39; field is supported in all the app-like resources
     * 
     */
    @Export(name="skipUsers", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> skipUsers;

    /**
     * @return Ignore users sync. This is a temporary solution until &#39;users&#39; field is supported in all the app-like resources
     * 
     */
    public Output<Optional<Boolean>> skipUsers() {
        return Codegen.optional(this.skipUsers);
    }
    /**
     * Status of application.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output</* @Nullable */ String> status;

    /**
     * @return Status of application.
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * Requested authentication method for the token endpoint.
     * 
     */
    @Export(name="tokenEndpointAuthMethod", type=String.class, parameters={})
    private Output</* @Nullable */ String> tokenEndpointAuthMethod;

    /**
     * @return Requested authentication method for the token endpoint.
     * 
     */
    public Output<Optional<String>> tokenEndpointAuthMethod() {
        return Codegen.optional(this.tokenEndpointAuthMethod);
    }
    /**
     * URI to web page providing client tos (terms of service).
     * 
     */
    @Export(name="tosUri", type=String.class, parameters={})
    private Output</* @Nullable */ String> tosUri;

    /**
     * @return URI to web page providing client tos (terms of service).
     * 
     */
    public Output<Optional<String>> tosUri() {
        return Codegen.optional(this.tosUri);
    }
    /**
     * The type of client application.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of client application.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Username template
     * 
     */
    @Export(name="userNameTemplate", type=String.class, parameters={})
    private Output</* @Nullable */ String> userNameTemplate;

    /**
     * @return Username template
     * 
     */
    public Output<Optional<String>> userNameTemplate() {
        return Codegen.optional(this.userNameTemplate);
    }
    /**
     * Push username on update
     * 
     */
    @Export(name="userNameTemplatePushStatus", type=String.class, parameters={})
    private Output</* @Nullable */ String> userNameTemplatePushStatus;

    /**
     * @return Push username on update
     * 
     */
    public Output<Optional<String>> userNameTemplatePushStatus() {
        return Codegen.optional(this.userNameTemplatePushStatus);
    }
    /**
     * Username template suffix
     * 
     */
    @Export(name="userNameTemplateSuffix", type=String.class, parameters={})
    private Output</* @Nullable */ String> userNameTemplateSuffix;

    /**
     * @return Username template suffix
     * 
     */
    public Output<Optional<String>> userNameTemplateSuffix() {
        return Codegen.optional(this.userNameTemplateSuffix);
    }
    /**
     * Username template type
     * 
     */
    @Export(name="userNameTemplateType", type=String.class, parameters={})
    private Output</* @Nullable */ String> userNameTemplateType;

    /**
     * @return Username template type
     * 
     */
    public Output<Optional<String>> userNameTemplateType() {
        return Codegen.optional(this.userNameTemplateType);
    }
    /**
     * Users associated with the application
     * 
     * @deprecated
     * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
    @Export(name="users", type=List.class, parameters={OauthAppUser.class})
    private Output</* @Nullable */ List<OauthAppUser>> users;

    /**
     * @return Users associated with the application
     * 
     */
    public Output<Optional<List<OauthAppUser>>> users() {
        return Codegen.optional(this.users);
    }
    /**
     * *Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris
     * 
     */
    @Export(name="wildcardRedirect", type=String.class, parameters={})
    private Output</* @Nullable */ String> wildcardRedirect;

    /**
     * @return *Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris
     * 
     */
    public Output<Optional<String>> wildcardRedirect() {
        return Codegen.optional(this.wildcardRedirect);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OauthApp(String name) {
        this(name, OauthAppArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OauthApp(String name, OauthAppArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OauthApp(String name, OauthAppArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:deprecated/oauthApp:OauthApp", name, args == null ? OauthAppArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private OauthApp(String name, Output<String> id, @Nullable OauthAppState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:deprecated/oauthApp:OauthApp", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OauthApp get(String name, Output<String> id, @Nullable OauthAppState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new OauthApp(name, id, state, options);
    }
}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.CampaignResourceSettingsTargetResourceEntitlement;
import com.pulumi.okta.outputs.CampaignResourceSettingsTargetResourceEntitlementBundle;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CampaignResourceSettingsTargetResource {
    /**
     * @return An array of entitlement bundles for this application.
     * 
     */
    private @Nullable List<CampaignResourceSettingsTargetResourceEntitlementBundle> entitlementBundles;
    /**
     * @return An array of entitlements associated with resourceId that should be chosen as target when creating reviews
     * 
     */
    private @Nullable List<CampaignResourceSettingsTargetResourceEntitlement> entitlements;
    /**
     * @return Include all entitlements and entitlement bundles for this application. Only applicable if the resourcetype = APPLICATION and Entitlement Management is enabled.
     * 
     */
    private @Nullable Boolean includeAllEntitlementsAndBundles;
    /**
     * @return The resource ID that is being reviewed.
     * 
     */
    private String resourceId;
    /**
     * @return The type of Okta resource.
     * 
     */
    private String resourceType;

    private CampaignResourceSettingsTargetResource() {}
    /**
     * @return An array of entitlement bundles for this application.
     * 
     */
    public List<CampaignResourceSettingsTargetResourceEntitlementBundle> entitlementBundles() {
        return this.entitlementBundles == null ? List.of() : this.entitlementBundles;
    }
    /**
     * @return An array of entitlements associated with resourceId that should be chosen as target when creating reviews
     * 
     */
    public List<CampaignResourceSettingsTargetResourceEntitlement> entitlements() {
        return this.entitlements == null ? List.of() : this.entitlements;
    }
    /**
     * @return Include all entitlements and entitlement bundles for this application. Only applicable if the resourcetype = APPLICATION and Entitlement Management is enabled.
     * 
     */
    public Optional<Boolean> includeAllEntitlementsAndBundles() {
        return Optional.ofNullable(this.includeAllEntitlementsAndBundles);
    }
    /**
     * @return The resource ID that is being reviewed.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * @return The type of Okta resource.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CampaignResourceSettingsTargetResource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<CampaignResourceSettingsTargetResourceEntitlementBundle> entitlementBundles;
        private @Nullable List<CampaignResourceSettingsTargetResourceEntitlement> entitlements;
        private @Nullable Boolean includeAllEntitlementsAndBundles;
        private String resourceId;
        private String resourceType;
        public Builder() {}
        public Builder(CampaignResourceSettingsTargetResource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entitlementBundles = defaults.entitlementBundles;
    	      this.entitlements = defaults.entitlements;
    	      this.includeAllEntitlementsAndBundles = defaults.includeAllEntitlementsAndBundles;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceType = defaults.resourceType;
        }

        @CustomType.Setter
        public Builder entitlementBundles(@Nullable List<CampaignResourceSettingsTargetResourceEntitlementBundle> entitlementBundles) {

            this.entitlementBundles = entitlementBundles;
            return this;
        }
        public Builder entitlementBundles(CampaignResourceSettingsTargetResourceEntitlementBundle... entitlementBundles) {
            return entitlementBundles(List.of(entitlementBundles));
        }
        @CustomType.Setter
        public Builder entitlements(@Nullable List<CampaignResourceSettingsTargetResourceEntitlement> entitlements) {

            this.entitlements = entitlements;
            return this;
        }
        public Builder entitlements(CampaignResourceSettingsTargetResourceEntitlement... entitlements) {
            return entitlements(List.of(entitlements));
        }
        @CustomType.Setter
        public Builder includeAllEntitlementsAndBundles(@Nullable Boolean includeAllEntitlementsAndBundles) {

            this.includeAllEntitlementsAndBundles = includeAllEntitlementsAndBundles;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(String resourceId) {
            if (resourceId == null) {
              throw new MissingRequiredPropertyException("CampaignResourceSettingsTargetResource", "resourceId");
            }
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("CampaignResourceSettingsTargetResource", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        public CampaignResourceSettingsTargetResource build() {
            final var _resultValue = new CampaignResourceSettingsTargetResource();
            _resultValue.entitlementBundles = entitlementBundles;
            _resultValue.entitlements = entitlements;
            _resultValue.includeAllEntitlementsAndBundles = includeAllEntitlementsAndBundles;
            _resultValue.resourceId = resourceId;
            _resultValue.resourceType = resourceType;
            return _resultValue;
        }
    }
}

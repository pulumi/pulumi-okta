// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.app;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.app.inputs.GetAppArgs;
import com.pulumi.okta.app.inputs.GetAppPlainArgs;
import com.pulumi.okta.app.inputs.GetMetadataSamlArgs;
import com.pulumi.okta.app.inputs.GetMetadataSamlPlainArgs;
import com.pulumi.okta.app.inputs.GetOauthArgs;
import com.pulumi.okta.app.inputs.GetOauthPlainArgs;
import com.pulumi.okta.app.inputs.GetSamlArgs;
import com.pulumi.okta.app.inputs.GetSamlPlainArgs;
import com.pulumi.okta.app.outputs.GetAppResult;
import com.pulumi.okta.app.outputs.GetMetadataSamlResult;
import com.pulumi.okta.app.outputs.GetOauthResult;
import com.pulumi.okta.app.outputs.GetSamlResult;
import java.util.concurrent.CompletableFuture;

public final class AppFunctions {
    /**
     * Use this data source to retrieve an application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetAppArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AppFunctions.getApp(GetAppArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAppResult> getApp() {
        return getApp(GetAppArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve an application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetAppArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AppFunctions.getApp(GetAppArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAppResult> getAppPlain() {
        return getAppPlain(GetAppPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve an application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetAppArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AppFunctions.getApp(GetAppArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAppResult> getApp(GetAppArgs args) {
        return getApp(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve an application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetAppArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AppFunctions.getApp(GetAppArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAppResult> getAppPlain(GetAppPlainArgs args) {
        return getAppPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve an application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetAppArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AppFunctions.getApp(GetAppArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAppResult> getApp(GetAppArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:app/getApp:getApp", TypeShape.of(GetAppResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve an application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetAppArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AppFunctions.getApp(GetAppArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAppResult> getAppPlain(GetAppPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:app/getApp:getApp", TypeShape.of(GetAppResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve the metadata for SAML application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetMetadataSamlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AppFunctions.getMetadataSaml(GetMetadataSamlArgs.builder()
     *             .appId("<app id>")
     *             .keyId("<cert key id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMetadataSamlResult> getMetadataSaml(GetMetadataSamlArgs args) {
        return getMetadataSaml(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve the metadata for SAML application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetMetadataSamlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AppFunctions.getMetadataSaml(GetMetadataSamlArgs.builder()
     *             .appId("<app id>")
     *             .keyId("<cert key id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMetadataSamlResult> getMetadataSamlPlain(GetMetadataSamlPlainArgs args) {
        return getMetadataSamlPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve the metadata for SAML application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetMetadataSamlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AppFunctions.getMetadataSaml(GetMetadataSamlArgs.builder()
     *             .appId("<app id>")
     *             .keyId("<cert key id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMetadataSamlResult> getMetadataSaml(GetMetadataSamlArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:app/getMetadataSaml:getMetadataSaml", TypeShape.of(GetMetadataSamlResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve the metadata for SAML application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetMetadataSamlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AppFunctions.getMetadataSaml(GetMetadataSamlArgs.builder()
     *             .appId("<app id>")
     *             .keyId("<cert key id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMetadataSamlResult> getMetadataSamlPlain(GetMetadataSamlPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:app/getMetadataSaml:getMetadataSaml", TypeShape.of(GetMetadataSamlResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve an OIDC application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetOauthArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = AppFunctions.getOauth(GetOauthArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOauthResult> getOauth() {
        return getOauth(GetOauthArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve an OIDC application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetOauthArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = AppFunctions.getOauth(GetOauthArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOauthResult> getOauthPlain() {
        return getOauthPlain(GetOauthPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve an OIDC application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetOauthArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = AppFunctions.getOauth(GetOauthArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOauthResult> getOauth(GetOauthArgs args) {
        return getOauth(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve an OIDC application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetOauthArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = AppFunctions.getOauth(GetOauthArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOauthResult> getOauthPlain(GetOauthPlainArgs args) {
        return getOauthPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve an OIDC application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetOauthArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = AppFunctions.getOauth(GetOauthArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOauthResult> getOauth(GetOauthArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:app/getOauth:getOauth", TypeShape.of(GetOauthResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve an OIDC application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetOauthArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = AppFunctions.getOauth(GetOauthArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOauthResult> getOauthPlain(GetOauthPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:app/getOauth:getOauth", TypeShape.of(GetOauthResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve an SAML application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetSamlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AppFunctions.getSaml(GetSamlArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSamlResult> getSaml() {
        return getSaml(GetSamlArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve an SAML application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetSamlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AppFunctions.getSaml(GetSamlArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSamlResult> getSamlPlain() {
        return getSamlPlain(GetSamlPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve an SAML application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetSamlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AppFunctions.getSaml(GetSamlArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSamlResult> getSaml(GetSamlArgs args) {
        return getSaml(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve an SAML application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetSamlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AppFunctions.getSaml(GetSamlArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSamlResult> getSamlPlain(GetSamlPlainArgs args) {
        return getSamlPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve an SAML application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetSamlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AppFunctions.getSaml(GetSamlArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSamlResult> getSaml(GetSamlArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:app/getSaml:getSaml", TypeShape.of(GetSamlResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve an SAML application from Okta.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.app.AppFunctions;
     * import com.pulumi.okta.app.inputs.GetSamlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AppFunctions.getSaml(GetSamlArgs.builder()
     *             .label("Example App")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSamlResult> getSamlPlain(GetSamlPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:app/getSaml:getSaml", TypeShape.of(GetSamlResult.class), args, Utilities.withVersion(options));
    }
}

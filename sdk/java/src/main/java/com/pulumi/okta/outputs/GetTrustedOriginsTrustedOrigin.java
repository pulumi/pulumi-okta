// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTrustedOriginsTrustedOrigin {
    /**
     * @return Whether the Trusted Origin is active or not - can only be issued post-creation
     * 
     */
    private Boolean active;
    /**
     * @return Unique identifier
     * 
     */
    private String id;
    /**
     * @return Unique name for this trusted origin
     * 
     */
    private String name;
    /**
     * @return Unique origin URL for this trusted origin
     * 
     */
    private String origin;
    /**
     * @return Scopes of the Trusted Origin - can either be CORS or REDIRECT only
     * 
     */
    private List<String> scopes;

    private GetTrustedOriginsTrustedOrigin() {}
    /**
     * @return Whether the Trusted Origin is active or not - can only be issued post-creation
     * 
     */
    public Boolean active() {
        return this.active;
    }
    /**
     * @return Unique identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Unique name for this trusted origin
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Unique origin URL for this trusted origin
     * 
     */
    public String origin() {
        return this.origin;
    }
    /**
     * @return Scopes of the Trusted Origin - can either be CORS or REDIRECT only
     * 
     */
    public List<String> scopes() {
        return this.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTrustedOriginsTrustedOrigin defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean active;
        private String id;
        private String name;
        private String origin;
        private List<String> scopes;
        public Builder() {}
        public Builder(GetTrustedOriginsTrustedOrigin defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.origin = defaults.origin;
    	      this.scopes = defaults.scopes;
        }

        @CustomType.Setter
        public Builder active(Boolean active) {
            if (active == null) {
              throw new MissingRequiredPropertyException("GetTrustedOriginsTrustedOrigin", "active");
            }
            this.active = active;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTrustedOriginsTrustedOrigin", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetTrustedOriginsTrustedOrigin", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder origin(String origin) {
            if (origin == null) {
              throw new MissingRequiredPropertyException("GetTrustedOriginsTrustedOrigin", "origin");
            }
            this.origin = origin;
            return this;
        }
        @CustomType.Setter
        public Builder scopes(List<String> scopes) {
            if (scopes == null) {
              throw new MissingRequiredPropertyException("GetTrustedOriginsTrustedOrigin", "scopes");
            }
            this.scopes = scopes;
            return this;
        }
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }
        public GetTrustedOriginsTrustedOrigin build() {
            final var _resultValue = new GetTrustedOriginsTrustedOrigin();
            _resultValue.active = active;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.origin = origin;
            _resultValue.scopes = scopes;
            return _resultValue;
        }
    }
}

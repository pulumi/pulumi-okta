// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.deprecated.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SamlAppAttributeStatement {
    private @Nullable String filterType;
    private @Nullable String filterValue;
    private String name;
    private @Nullable String namespace;
    private @Nullable String type;
    private @Nullable List<String> values;

    private SamlAppAttributeStatement() {}
    public Optional<String> filterType() {
        return Optional.ofNullable(this.filterType);
    }
    public Optional<String> filterValue() {
        return Optional.ofNullable(this.filterValue);
    }
    public String name() {
        return this.name;
    }
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    public List<String> values() {
        return this.values == null ? List.of() : this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SamlAppAttributeStatement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String filterType;
        private @Nullable String filterValue;
        private String name;
        private @Nullable String namespace;
        private @Nullable String type;
        private @Nullable List<String> values;
        public Builder() {}
        public Builder(SamlAppAttributeStatement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filterType = defaults.filterType;
    	      this.filterValue = defaults.filterValue;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.type = defaults.type;
    	      this.values = defaults.values;
        }

        @CustomType.Setter
        public Builder filterType(@Nullable String filterType) {
            this.filterType = filterType;
            return this;
        }
        @CustomType.Setter
        public Builder filterValue(@Nullable String filterValue) {
            this.filterValue = filterValue;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder values(@Nullable List<String> values) {
            this.values = values;
            return this;
        }
        public Builder values(String... values) {
            return values(List.of(values));
        }
        public SamlAppAttributeStatement build() {
            final var o = new SamlAppAttributeStatement();
            o.filterType = filterType;
            o.filterValue = filterValue;
            o.name = name;
            o.namespace = namespace;
            o.type = type;
            o.values = values;
            return o;
        }
    }
}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityNotificationEmailsState extends com.pulumi.resources.ResourceArgs {

    public static final SecurityNotificationEmailsState Empty = new SecurityNotificationEmailsState();

    /**
     * Notifies end users about suspicious or unrecognized activity from their account. Default is `true`.
     * 
     */
    @Import(name="reportSuspiciousActivityEnabled")
    private @Nullable Output<Boolean> reportSuspiciousActivityEnabled;

    /**
     * @return Notifies end users about suspicious or unrecognized activity from their account. Default is `true`.
     * 
     */
    public Optional<Output<Boolean>> reportSuspiciousActivityEnabled() {
        return Optional.ofNullable(this.reportSuspiciousActivityEnabled);
    }

    /**
     * Notifies end users of any activity on their account related to MFA factor enrollment. Default is `true`.
     * 
     */
    @Import(name="sendEmailForFactorEnrollmentEnabled")
    private @Nullable Output<Boolean> sendEmailForFactorEnrollmentEnabled;

    /**
     * @return Notifies end users of any activity on their account related to MFA factor enrollment. Default is `true`.
     * 
     */
    public Optional<Output<Boolean>> sendEmailForFactorEnrollmentEnabled() {
        return Optional.ofNullable(this.sendEmailForFactorEnrollmentEnabled);
    }

    /**
     * Notifies end users that one or more factors have been reset for their account. Default is `true`.
     * 
     */
    @Import(name="sendEmailForFactorResetEnabled")
    private @Nullable Output<Boolean> sendEmailForFactorResetEnabled;

    /**
     * @return Notifies end users that one or more factors have been reset for their account. Default is `true`.
     * 
     */
    public Optional<Output<Boolean>> sendEmailForFactorResetEnabled() {
        return Optional.ofNullable(this.sendEmailForFactorResetEnabled);
    }

    /**
     * Notifies end users about new sign-on activity. Default is `true`.
     * 
     */
    @Import(name="sendEmailForNewDeviceEnabled")
    private @Nullable Output<Boolean> sendEmailForNewDeviceEnabled;

    /**
     * @return Notifies end users about new sign-on activity. Default is `true`.
     * 
     */
    public Optional<Output<Boolean>> sendEmailForNewDeviceEnabled() {
        return Optional.ofNullable(this.sendEmailForNewDeviceEnabled);
    }

    /**
     * Notifies end users that the password for their account has changed. Default is `true`.
     * 
     */
    @Import(name="sendEmailForPasswordChangedEnabled")
    private @Nullable Output<Boolean> sendEmailForPasswordChangedEnabled;

    /**
     * @return Notifies end users that the password for their account has changed. Default is `true`.
     * 
     */
    public Optional<Output<Boolean>> sendEmailForPasswordChangedEnabled() {
        return Optional.ofNullable(this.sendEmailForPasswordChangedEnabled);
    }

    private SecurityNotificationEmailsState() {}

    private SecurityNotificationEmailsState(SecurityNotificationEmailsState $) {
        this.reportSuspiciousActivityEnabled = $.reportSuspiciousActivityEnabled;
        this.sendEmailForFactorEnrollmentEnabled = $.sendEmailForFactorEnrollmentEnabled;
        this.sendEmailForFactorResetEnabled = $.sendEmailForFactorResetEnabled;
        this.sendEmailForNewDeviceEnabled = $.sendEmailForNewDeviceEnabled;
        this.sendEmailForPasswordChangedEnabled = $.sendEmailForPasswordChangedEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityNotificationEmailsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityNotificationEmailsState $;

        public Builder() {
            $ = new SecurityNotificationEmailsState();
        }

        public Builder(SecurityNotificationEmailsState defaults) {
            $ = new SecurityNotificationEmailsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param reportSuspiciousActivityEnabled Notifies end users about suspicious or unrecognized activity from their account. Default is `true`.
         * 
         * @return builder
         * 
         */
        public Builder reportSuspiciousActivityEnabled(@Nullable Output<Boolean> reportSuspiciousActivityEnabled) {
            $.reportSuspiciousActivityEnabled = reportSuspiciousActivityEnabled;
            return this;
        }

        /**
         * @param reportSuspiciousActivityEnabled Notifies end users about suspicious or unrecognized activity from their account. Default is `true`.
         * 
         * @return builder
         * 
         */
        public Builder reportSuspiciousActivityEnabled(Boolean reportSuspiciousActivityEnabled) {
            return reportSuspiciousActivityEnabled(Output.of(reportSuspiciousActivityEnabled));
        }

        /**
         * @param sendEmailForFactorEnrollmentEnabled Notifies end users of any activity on their account related to MFA factor enrollment. Default is `true`.
         * 
         * @return builder
         * 
         */
        public Builder sendEmailForFactorEnrollmentEnabled(@Nullable Output<Boolean> sendEmailForFactorEnrollmentEnabled) {
            $.sendEmailForFactorEnrollmentEnabled = sendEmailForFactorEnrollmentEnabled;
            return this;
        }

        /**
         * @param sendEmailForFactorEnrollmentEnabled Notifies end users of any activity on their account related to MFA factor enrollment. Default is `true`.
         * 
         * @return builder
         * 
         */
        public Builder sendEmailForFactorEnrollmentEnabled(Boolean sendEmailForFactorEnrollmentEnabled) {
            return sendEmailForFactorEnrollmentEnabled(Output.of(sendEmailForFactorEnrollmentEnabled));
        }

        /**
         * @param sendEmailForFactorResetEnabled Notifies end users that one or more factors have been reset for their account. Default is `true`.
         * 
         * @return builder
         * 
         */
        public Builder sendEmailForFactorResetEnabled(@Nullable Output<Boolean> sendEmailForFactorResetEnabled) {
            $.sendEmailForFactorResetEnabled = sendEmailForFactorResetEnabled;
            return this;
        }

        /**
         * @param sendEmailForFactorResetEnabled Notifies end users that one or more factors have been reset for their account. Default is `true`.
         * 
         * @return builder
         * 
         */
        public Builder sendEmailForFactorResetEnabled(Boolean sendEmailForFactorResetEnabled) {
            return sendEmailForFactorResetEnabled(Output.of(sendEmailForFactorResetEnabled));
        }

        /**
         * @param sendEmailForNewDeviceEnabled Notifies end users about new sign-on activity. Default is `true`.
         * 
         * @return builder
         * 
         */
        public Builder sendEmailForNewDeviceEnabled(@Nullable Output<Boolean> sendEmailForNewDeviceEnabled) {
            $.sendEmailForNewDeviceEnabled = sendEmailForNewDeviceEnabled;
            return this;
        }

        /**
         * @param sendEmailForNewDeviceEnabled Notifies end users about new sign-on activity. Default is `true`.
         * 
         * @return builder
         * 
         */
        public Builder sendEmailForNewDeviceEnabled(Boolean sendEmailForNewDeviceEnabled) {
            return sendEmailForNewDeviceEnabled(Output.of(sendEmailForNewDeviceEnabled));
        }

        /**
         * @param sendEmailForPasswordChangedEnabled Notifies end users that the password for their account has changed. Default is `true`.
         * 
         * @return builder
         * 
         */
        public Builder sendEmailForPasswordChangedEnabled(@Nullable Output<Boolean> sendEmailForPasswordChangedEnabled) {
            $.sendEmailForPasswordChangedEnabled = sendEmailForPasswordChangedEnabled;
            return this;
        }

        /**
         * @param sendEmailForPasswordChangedEnabled Notifies end users that the password for their account has changed. Default is `true`.
         * 
         * @return builder
         * 
         */
        public Builder sendEmailForPasswordChangedEnabled(Boolean sendEmailForPasswordChangedEnabled) {
            return sendEmailForPasswordChangedEnabled(Output.of(sendEmailForPasswordChangedEnabled));
        }

        public SecurityNotificationEmailsState build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyProfileEnrollmentAppsArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyProfileEnrollmentAppsArgs Empty = new PolicyProfileEnrollmentAppsArgs();

    /**
     * List of app IDs to be added to this policy
     * 
     */
    @Import(name="apps")
    private @Nullable Output<List<String>> apps;

    /**
     * @return List of app IDs to be added to this policy
     * 
     */
    public Optional<Output<List<String>>> apps() {
        return Optional.ofNullable(this.apps);
    }

    /**
     * ID of the enrollment policy.
     * 
     */
    @Import(name="policyId", required=true)
    private Output<String> policyId;

    /**
     * @return ID of the enrollment policy.
     * 
     */
    public Output<String> policyId() {
        return this.policyId;
    }

    private PolicyProfileEnrollmentAppsArgs() {}

    private PolicyProfileEnrollmentAppsArgs(PolicyProfileEnrollmentAppsArgs $) {
        this.apps = $.apps;
        this.policyId = $.policyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyProfileEnrollmentAppsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyProfileEnrollmentAppsArgs $;

        public Builder() {
            $ = new PolicyProfileEnrollmentAppsArgs();
        }

        public Builder(PolicyProfileEnrollmentAppsArgs defaults) {
            $ = new PolicyProfileEnrollmentAppsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apps List of app IDs to be added to this policy
         * 
         * @return builder
         * 
         */
        public Builder apps(@Nullable Output<List<String>> apps) {
            $.apps = apps;
            return this;
        }

        /**
         * @param apps List of app IDs to be added to this policy
         * 
         * @return builder
         * 
         */
        public Builder apps(List<String> apps) {
            return apps(Output.of(apps));
        }

        /**
         * @param apps List of app IDs to be added to this policy
         * 
         * @return builder
         * 
         */
        public Builder apps(String... apps) {
            return apps(List.of(apps));
        }

        /**
         * @param policyId ID of the enrollment policy.
         * 
         * @return builder
         * 
         */
        public Builder policyId(Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId ID of the enrollment policy.
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        public PolicyProfileEnrollmentAppsArgs build() {
            $.policyId = Objects.requireNonNull($.policyId, "expected parameter 'policyId' to be non-null");
            return $;
        }
    }

}

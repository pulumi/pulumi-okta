// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs Empty = new GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs();

    @Import(name="minimum", required=true)
    private Output<String> minimum;

    public Output<String> minimum() {
        return this.minimum;
    }

    private GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs() {}

    private GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs(GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs $) {
        this.minimum = $.minimum;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs $;

        public Builder() {
            $ = new GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs();
        }

        public Builder(GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs defaults) {
            $ = new GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs(Objects.requireNonNull(defaults));
        }

        public Builder minimum(Output<String> minimum) {
            $.minimum = minimum;
            return this;
        }

        public Builder minimum(String minimum) {
            return minimum(Output.of(minimum));
        }

        public GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs build() {
            if ($.minimum == null) {
                throw new MissingRequiredPropertyException("GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs", "minimum");
            }
            return $;
        }
    }

}

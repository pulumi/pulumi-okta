// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.GetEntitlementBundleEntitlement;
import com.pulumi.okta.outputs.GetEntitlementBundleTarget;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEntitlementBundleResult {
    /**
     * @return The created timestamp of this resource.
     * 
     */
    private String created;
    /**
     * @return The ID of the user that created this resource.
     * 
     */
    private String createdBy;
    /**
     * @return The description of an entitlement property.
     * 
     */
    private String description;
    /**
     * @return List of entitlements in the bundle
     * 
     */
    private @Nullable List<GetEntitlementBundleEntitlement> entitlements;
    /**
     * @return The ID of this resource.
     * 
     */
    private String id;
    /**
     * @return The last updated timestamp of this resource.
     * 
     */
    private String lastUpdated;
    /**
     * @return The ID of the user that last updated this resource.
     * 
     */
    private String lastUpdatedBy;
    /**
     * @return The display name for an entitlement bundle.
     * 
     */
    private String name;
    /**
     * @return The status of the entitlement bundle.
     * 
     */
    private String status;
    /**
     * @return Representation of a resource
     * 
     */
    private @Nullable GetEntitlementBundleTarget target;
    /**
     * @return The ORN of the target resource. Required when updating the entitlement bundle.
     * 
     */
    private String targetResourceOrn;

    private GetEntitlementBundleResult() {}
    /**
     * @return The created timestamp of this resource.
     * 
     */
    public String created() {
        return this.created;
    }
    /**
     * @return The ID of the user that created this resource.
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return The description of an entitlement property.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return List of entitlements in the bundle
     * 
     */
    public List<GetEntitlementBundleEntitlement> entitlements() {
        return this.entitlements == null ? List.of() : this.entitlements;
    }
    /**
     * @return The ID of this resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The last updated timestamp of this resource.
     * 
     */
    public String lastUpdated() {
        return this.lastUpdated;
    }
    /**
     * @return The ID of the user that last updated this resource.
     * 
     */
    public String lastUpdatedBy() {
        return this.lastUpdatedBy;
    }
    /**
     * @return The display name for an entitlement bundle.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of the entitlement bundle.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Representation of a resource
     * 
     */
    public Optional<GetEntitlementBundleTarget> target() {
        return Optional.ofNullable(this.target);
    }
    /**
     * @return The ORN of the target resource. Required when updating the entitlement bundle.
     * 
     */
    public String targetResourceOrn() {
        return this.targetResourceOrn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEntitlementBundleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String created;
        private String createdBy;
        private String description;
        private @Nullable List<GetEntitlementBundleEntitlement> entitlements;
        private String id;
        private String lastUpdated;
        private String lastUpdatedBy;
        private String name;
        private String status;
        private @Nullable GetEntitlementBundleTarget target;
        private String targetResourceOrn;
        public Builder() {}
        public Builder(GetEntitlementBundleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.created = defaults.created;
    	      this.createdBy = defaults.createdBy;
    	      this.description = defaults.description;
    	      this.entitlements = defaults.entitlements;
    	      this.id = defaults.id;
    	      this.lastUpdated = defaults.lastUpdated;
    	      this.lastUpdatedBy = defaults.lastUpdatedBy;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
    	      this.target = defaults.target;
    	      this.targetResourceOrn = defaults.targetResourceOrn;
        }

        @CustomType.Setter
        public Builder created(String created) {
            if (created == null) {
              throw new MissingRequiredPropertyException("GetEntitlementBundleResult", "created");
            }
            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetEntitlementBundleResult", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetEntitlementBundleResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder entitlements(@Nullable List<GetEntitlementBundleEntitlement> entitlements) {

            this.entitlements = entitlements;
            return this;
        }
        public Builder entitlements(GetEntitlementBundleEntitlement... entitlements) {
            return entitlements(List.of(entitlements));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEntitlementBundleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdated(String lastUpdated) {
            if (lastUpdated == null) {
              throw new MissingRequiredPropertyException("GetEntitlementBundleResult", "lastUpdated");
            }
            this.lastUpdated = lastUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedBy(String lastUpdatedBy) {
            if (lastUpdatedBy == null) {
              throw new MissingRequiredPropertyException("GetEntitlementBundleResult", "lastUpdatedBy");
            }
            this.lastUpdatedBy = lastUpdatedBy;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetEntitlementBundleResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetEntitlementBundleResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder target(@Nullable GetEntitlementBundleTarget target) {

            this.target = target;
            return this;
        }
        @CustomType.Setter
        public Builder targetResourceOrn(String targetResourceOrn) {
            if (targetResourceOrn == null) {
              throw new MissingRequiredPropertyException("GetEntitlementBundleResult", "targetResourceOrn");
            }
            this.targetResourceOrn = targetResourceOrn;
            return this;
        }
        public GetEntitlementBundleResult build() {
            final var _resultValue = new GetEntitlementBundleResult();
            _resultValue.created = created;
            _resultValue.createdBy = createdBy;
            _resultValue.description = description;
            _resultValue.entitlements = entitlements;
            _resultValue.id = id;
            _resultValue.lastUpdated = lastUpdated;
            _resultValue.lastUpdatedBy = lastUpdatedBy;
            _resultValue.name = name;
            _resultValue.status = status;
            _resultValue.target = target;
            _resultValue.targetResourceOrn = targetResourceOrn;
            return _resultValue;
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRealmAssignmentResult {
    private String conditionExpression;
    private String id;
    private Boolean isDefault;
    private @Nullable String name;
    private Integer priority;
    private String profileSourceId;
    private String realmId;
    private String status;

    private GetRealmAssignmentResult() {}
    public String conditionExpression() {
        return this.conditionExpression;
    }
    public String id() {
        return this.id;
    }
    public Boolean isDefault() {
        return this.isDefault;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Integer priority() {
        return this.priority;
    }
    public String profileSourceId() {
        return this.profileSourceId;
    }
    public String realmId() {
        return this.realmId;
    }
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRealmAssignmentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String conditionExpression;
        private String id;
        private Boolean isDefault;
        private @Nullable String name;
        private Integer priority;
        private String profileSourceId;
        private String realmId;
        private String status;
        public Builder() {}
        public Builder(GetRealmAssignmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditionExpression = defaults.conditionExpression;
    	      this.id = defaults.id;
    	      this.isDefault = defaults.isDefault;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.profileSourceId = defaults.profileSourceId;
    	      this.realmId = defaults.realmId;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder conditionExpression(String conditionExpression) {
            if (conditionExpression == null) {
              throw new MissingRequiredPropertyException("GetRealmAssignmentResult", "conditionExpression");
            }
            this.conditionExpression = conditionExpression;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRealmAssignmentResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isDefault(Boolean isDefault) {
            if (isDefault == null) {
              throw new MissingRequiredPropertyException("GetRealmAssignmentResult", "isDefault");
            }
            this.isDefault = isDefault;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetRealmAssignmentResult", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder profileSourceId(String profileSourceId) {
            if (profileSourceId == null) {
              throw new MissingRequiredPropertyException("GetRealmAssignmentResult", "profileSourceId");
            }
            this.profileSourceId = profileSourceId;
            return this;
        }
        @CustomType.Setter
        public Builder realmId(String realmId) {
            if (realmId == null) {
              throw new MissingRequiredPropertyException("GetRealmAssignmentResult", "realmId");
            }
            this.realmId = realmId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetRealmAssignmentResult", "status");
            }
            this.status = status;
            return this;
        }
        public GetRealmAssignmentResult build() {
            final var _resultValue = new GetRealmAssignmentResult();
            _resultValue.conditionExpression = conditionExpression;
            _resultValue.id = id;
            _resultValue.isDefault = isDefault;
            _resultValue.name = name;
            _resultValue.priority = priority;
            _resultValue.profileSourceId = profileSourceId;
            _resultValue.realmId = realmId;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.profile.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MappingMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final MappingMappingArgs Empty = new MappingMappingArgs();

    @Import(name="expression", required=true)
    private Output<String> expression;

    public Output<String> expression() {
        return this.expression;
    }

    /**
     * The mapping property key.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The mapping property key.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    @Import(name="pushStatus")
    private @Nullable Output<String> pushStatus;

    public Optional<Output<String>> pushStatus() {
        return Optional.ofNullable(this.pushStatus);
    }

    private MappingMappingArgs() {}

    private MappingMappingArgs(MappingMappingArgs $) {
        this.expression = $.expression;
        this.id = $.id;
        this.pushStatus = $.pushStatus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MappingMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MappingMappingArgs $;

        public Builder() {
            $ = new MappingMappingArgs();
        }

        public Builder(MappingMappingArgs defaults) {
            $ = new MappingMappingArgs(Objects.requireNonNull(defaults));
        }

        public Builder expression(Output<String> expression) {
            $.expression = expression;
            return this;
        }

        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        /**
         * @param id The mapping property key.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The mapping property key.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder pushStatus(@Nullable Output<String> pushStatus) {
            $.pushStatus = pushStatus;
            return this;
        }

        public Builder pushStatus(String pushStatus) {
            return pushStatus(Output.of(pushStatus));
        }

        public MappingMappingArgs build() {
            if ($.expression == null) {
                throw new MissingRequiredPropertyException("MappingMappingArgs", "expression");
            }
            if ($.id == null) {
                throw new MissingRequiredPropertyException("MappingMappingArgs", "id");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.CampaignPrincipalScopeSettingsPredefinedInactiveUsersScope;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CampaignPrincipalScopeSettings {
    /**
     * @return An array of Okta user IDs excluded from access certification or the campaign. This field is optional. A maximum of 50 users can be specified in the array.
     * 
     */
    private @Nullable List<String> excludedUserIds;
    /**
     * @return An array of Okta group IDs included from access certification or the campaign. userIds, groupIds or userScopeExpression is required if campaign type is USER. A maximum of 5 groups can be specified in the array.
     * 
     */
    private @Nullable List<String> groupIds;
    /**
     * @return If set to true, only active Okta users are included in the campaign.
     * 
     */
    private @Nullable Boolean includeOnlyActiveUsers;
    /**
     * @return If set to true, only includes users that have at least one SOD conflict that was caused due to entitlement(s) within Campaign scope.
     * 
     */
    private @Nullable Boolean onlyIncludeUsersWithSodConflicts;
    private @Nullable List<CampaignPrincipalScopeSettingsPredefinedInactiveUsersScope> predefinedInactiveUsersScopes;
    /**
     * @return Specifies the type for principal_scope_settings.
     * 
     */
    private String type;
    /**
     * @return An array of Okta user IDs included from access certification or the campaign. userIds, groupIds or userScopeExpression is required if campaign type is USER. A maximum of 100 users can be specified in the array.
     * 
     */
    private @Nullable List<String> userIds;
    /**
     * @return The Okta expression language user expression on the resourceSettings to include users in the campaign.
     * 
     */
    private @Nullable String userScopeExpression;

    private CampaignPrincipalScopeSettings() {}
    /**
     * @return An array of Okta user IDs excluded from access certification or the campaign. This field is optional. A maximum of 50 users can be specified in the array.
     * 
     */
    public List<String> excludedUserIds() {
        return this.excludedUserIds == null ? List.of() : this.excludedUserIds;
    }
    /**
     * @return An array of Okta group IDs included from access certification or the campaign. userIds, groupIds or userScopeExpression is required if campaign type is USER. A maximum of 5 groups can be specified in the array.
     * 
     */
    public List<String> groupIds() {
        return this.groupIds == null ? List.of() : this.groupIds;
    }
    /**
     * @return If set to true, only active Okta users are included in the campaign.
     * 
     */
    public Optional<Boolean> includeOnlyActiveUsers() {
        return Optional.ofNullable(this.includeOnlyActiveUsers);
    }
    /**
     * @return If set to true, only includes users that have at least one SOD conflict that was caused due to entitlement(s) within Campaign scope.
     * 
     */
    public Optional<Boolean> onlyIncludeUsersWithSodConflicts() {
        return Optional.ofNullable(this.onlyIncludeUsersWithSodConflicts);
    }
    public List<CampaignPrincipalScopeSettingsPredefinedInactiveUsersScope> predefinedInactiveUsersScopes() {
        return this.predefinedInactiveUsersScopes == null ? List.of() : this.predefinedInactiveUsersScopes;
    }
    /**
     * @return Specifies the type for principal_scope_settings.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return An array of Okta user IDs included from access certification or the campaign. userIds, groupIds or userScopeExpression is required if campaign type is USER. A maximum of 100 users can be specified in the array.
     * 
     */
    public List<String> userIds() {
        return this.userIds == null ? List.of() : this.userIds;
    }
    /**
     * @return The Okta expression language user expression on the resourceSettings to include users in the campaign.
     * 
     */
    public Optional<String> userScopeExpression() {
        return Optional.ofNullable(this.userScopeExpression);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CampaignPrincipalScopeSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> excludedUserIds;
        private @Nullable List<String> groupIds;
        private @Nullable Boolean includeOnlyActiveUsers;
        private @Nullable Boolean onlyIncludeUsersWithSodConflicts;
        private @Nullable List<CampaignPrincipalScopeSettingsPredefinedInactiveUsersScope> predefinedInactiveUsersScopes;
        private String type;
        private @Nullable List<String> userIds;
        private @Nullable String userScopeExpression;
        public Builder() {}
        public Builder(CampaignPrincipalScopeSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludedUserIds = defaults.excludedUserIds;
    	      this.groupIds = defaults.groupIds;
    	      this.includeOnlyActiveUsers = defaults.includeOnlyActiveUsers;
    	      this.onlyIncludeUsersWithSodConflicts = defaults.onlyIncludeUsersWithSodConflicts;
    	      this.predefinedInactiveUsersScopes = defaults.predefinedInactiveUsersScopes;
    	      this.type = defaults.type;
    	      this.userIds = defaults.userIds;
    	      this.userScopeExpression = defaults.userScopeExpression;
        }

        @CustomType.Setter
        public Builder excludedUserIds(@Nullable List<String> excludedUserIds) {

            this.excludedUserIds = excludedUserIds;
            return this;
        }
        public Builder excludedUserIds(String... excludedUserIds) {
            return excludedUserIds(List.of(excludedUserIds));
        }
        @CustomType.Setter
        public Builder groupIds(@Nullable List<String> groupIds) {

            this.groupIds = groupIds;
            return this;
        }
        public Builder groupIds(String... groupIds) {
            return groupIds(List.of(groupIds));
        }
        @CustomType.Setter
        public Builder includeOnlyActiveUsers(@Nullable Boolean includeOnlyActiveUsers) {

            this.includeOnlyActiveUsers = includeOnlyActiveUsers;
            return this;
        }
        @CustomType.Setter
        public Builder onlyIncludeUsersWithSodConflicts(@Nullable Boolean onlyIncludeUsersWithSodConflicts) {

            this.onlyIncludeUsersWithSodConflicts = onlyIncludeUsersWithSodConflicts;
            return this;
        }
        @CustomType.Setter
        public Builder predefinedInactiveUsersScopes(@Nullable List<CampaignPrincipalScopeSettingsPredefinedInactiveUsersScope> predefinedInactiveUsersScopes) {

            this.predefinedInactiveUsersScopes = predefinedInactiveUsersScopes;
            return this;
        }
        public Builder predefinedInactiveUsersScopes(CampaignPrincipalScopeSettingsPredefinedInactiveUsersScope... predefinedInactiveUsersScopes) {
            return predefinedInactiveUsersScopes(List.of(predefinedInactiveUsersScopes));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("CampaignPrincipalScopeSettings", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder userIds(@Nullable List<String> userIds) {

            this.userIds = userIds;
            return this;
        }
        public Builder userIds(String... userIds) {
            return userIds(List.of(userIds));
        }
        @CustomType.Setter
        public Builder userScopeExpression(@Nullable String userScopeExpression) {

            this.userScopeExpression = userScopeExpression;
            return this;
        }
        public CampaignPrincipalScopeSettings build() {
            final var _resultValue = new CampaignPrincipalScopeSettings();
            _resultValue.excludedUserIds = excludedUserIds;
            _resultValue.groupIds = groupIds;
            _resultValue.includeOnlyActiveUsers = includeOnlyActiveUsers;
            _resultValue.onlyIncludeUsersWithSodConflicts = onlyIncludeUsersWithSodConflicts;
            _resultValue.predefinedInactiveUsersScopes = predefinedInactiveUsersScopes;
            _resultValue.type = type;
            _resultValue.userIds = userIds;
            _resultValue.userScopeExpression = userScopeExpression;
            return _resultValue;
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetTemplateArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTemplateArgs Empty = new GetTemplateArgs();

    /**
     * Brand ID
     * 
     */
    @Import(name="brandId", required=true)
    private Output<String> brandId;

    /**
     * @return Brand ID
     * 
     */
    public Output<String> brandId() {
        return this.brandId;
    }

    /**
     * Template Name
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Template Name
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private GetTemplateArgs() {}

    private GetTemplateArgs(GetTemplateArgs $) {
        this.brandId = $.brandId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTemplateArgs $;

        public Builder() {
            $ = new GetTemplateArgs();
        }

        public Builder(GetTemplateArgs defaults) {
            $ = new GetTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param brandId Brand ID
         * 
         * @return builder
         * 
         */
        public Builder brandId(Output<String> brandId) {
            $.brandId = brandId;
            return this;
        }

        /**
         * @param brandId Brand ID
         * 
         * @return builder
         * 
         */
        public Builder brandId(String brandId) {
            return brandId(Output.of(brandId));
        }

        /**
         * @param name Template Name
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Template Name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetTemplateArgs build() {
            $.brandId = Objects.requireNonNull($.brandId, "expected parameter 'brandId' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}

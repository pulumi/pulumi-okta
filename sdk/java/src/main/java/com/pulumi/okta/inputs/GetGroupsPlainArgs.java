// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGroupsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGroupsPlainArgs Empty = new GetGroupsPlainArgs();

    /**
     * Searches the name property of groups for matching value
     * 
     */
    @Import(name="q")
    private @Nullable String q;

    /**
     * @return Searches the name property of groups for matching value
     * 
     */
    public Optional<String> q() {
        return Optional.ofNullable(this.q);
    }

    /**
     * Searches for groups with a supported filtering expression for all attributes except for &#39;*embedded&#39;, &#39;*links&#39;, and &#39;objectClass&#39;
     * 
     */
    @Import(name="search")
    private @Nullable String search;

    /**
     * @return Searches for groups with a supported filtering expression for all attributes except for &#39;*embedded&#39;, &#39;*links&#39;, and &#39;objectClass&#39;
     * 
     */
    public Optional<String> search() {
        return Optional.ofNullable(this.search);
    }

    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private GetGroupsPlainArgs() {}

    private GetGroupsPlainArgs(GetGroupsPlainArgs $) {
        this.q = $.q;
        this.search = $.search;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGroupsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGroupsPlainArgs $;

        public Builder() {
            $ = new GetGroupsPlainArgs();
        }

        public Builder(GetGroupsPlainArgs defaults) {
            $ = new GetGroupsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param q Searches the name property of groups for matching value
         * 
         * @return builder
         * 
         */
        public Builder q(@Nullable String q) {
            $.q = q;
            return this;
        }

        /**
         * @param search Searches for groups with a supported filtering expression for all attributes except for &#39;*embedded&#39;, &#39;*links&#39;, and &#39;objectClass&#39;
         * 
         * @return builder
         * 
         */
        public Builder search(@Nullable String search) {
            $.search = search;
            return this;
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public GetGroupsPlainArgs build() {
            return $;
        }
    }

}

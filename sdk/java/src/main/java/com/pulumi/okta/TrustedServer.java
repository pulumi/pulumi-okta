// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.TrustedServerArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.TrustedServerState;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Associated (Trusted) authorization servers allow you to designate a trusted authorization server that you associate with another authorization server.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.auth.Server;
 * import com.pulumi.okta.auth.ServerArgs;
 * import com.pulumi.okta.TrustedServer;
 * import com.pulumi.okta.TrustedServerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test1 = new Server("test1", ServerArgs.builder()
 *             .audiences("whatever.rise.zone")
 *             .credentialsRotationMode("AUTO")
 *             .description("The best way to find out if you can trust somebody is to trust them.")
 *             .name("testAcc-replace_with_uuid")
 *             .build());
 * 
 *         var test2 = new Server("test2", ServerArgs.builder()
 *             .audiences("whatever.rise.zone")
 *             .credentialsRotationMode("AUTO")
 *             .description("The best way to find out if you can trust somebody is to trust them.")
 *             .name("testAcc-replace_with_uuid")
 *             .build());
 * 
 *         var test3 = new Server("test3", ServerArgs.builder()
 *             .audiences("whatever.rise.zone")
 *             .credentialsRotationMode("AUTO")
 *             .description("The best way to find out if you can trust somebody is to trust them.")
 *             .name("testAcc-replace_with_uuid")
 *             .build());
 * 
 *         var example = new TrustedServer("example", TrustedServerArgs.builder()
 *             .authServerId(oktaAuthServer.test1().id())
 *             .trusteds(            
 *                 oktaAuthServer.test2().id(),
 *                 oktaAuthServer.test3().id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="okta:index/trustedServer:TrustedServer")
public class TrustedServer extends com.pulumi.resources.CustomResource {
    /**
     * Authorization server ID
     * 
     */
    @Export(name="authServerId", refs={String.class}, tree="[0]")
    private Output<String> authServerId;

    /**
     * @return Authorization server ID
     * 
     */
    public Output<String> authServerId() {
        return this.authServerId;
    }
    /**
     * A list of the authorization server IDs user want to trust
     * 
     */
    @Export(name="trusteds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> trusteds;

    /**
     * @return A list of the authorization server IDs user want to trust
     * 
     */
    public Output<List<String>> trusteds() {
        return this.trusteds;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TrustedServer(String name) {
        this(name, TrustedServerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TrustedServer(String name, TrustedServerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TrustedServer(String name, TrustedServerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/trustedServer:TrustedServer", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private TrustedServer(String name, Output<String> id, @Nullable TrustedServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/trustedServer:TrustedServer", name, state, makeResourceOptions(options, id));
    }

    private static TrustedServerArgs makeArgs(TrustedServerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TrustedServerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TrustedServer get(String name, Output<String> id, @Nullable TrustedServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TrustedServer(name, id, state, options);
    }
}

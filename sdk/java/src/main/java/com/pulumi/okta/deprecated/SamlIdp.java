// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.deprecated;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.deprecated.SamlIdpArgs;
import com.pulumi.okta.deprecated.inputs.SamlIdpState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * @deprecated
 * Deprecated. Use idp.Saml instead. This resource will be removed in version 4.0 of this provider.
 * 
 */
@Deprecated /* Deprecated. Use idp.Saml instead. This resource will be removed in version 4.0 of this provider. */
@ResourceType(type="okta:deprecated/samlIdp:SamlIdp")
public class SamlIdp extends com.pulumi.resources.CustomResource {
    @Export(name="accountLinkAction", type=String.class, parameters={})
    private Output</* @Nullable */ String> accountLinkAction;

    public Output<Optional<String>> accountLinkAction() {
        return Codegen.optional(this.accountLinkAction);
    }
    @Export(name="accountLinkGroupIncludes", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> accountLinkGroupIncludes;

    public Output<Optional<List<String>>> accountLinkGroupIncludes() {
        return Codegen.optional(this.accountLinkGroupIncludes);
    }
    /**
     * @deprecated
     * This property will be removed in the future, as it can only be set to &#39;HTTP-POST&#39;
     * 
     */
    @Deprecated /* This property will be removed in the future, as it can only be set to 'HTTP-POST' */
    @Export(name="acsBinding", type=String.class, parameters={})
    private Output</* @Nullable */ String> acsBinding;

    public Output<Optional<String>> acsBinding() {
        return Codegen.optional(this.acsBinding);
    }
    @Export(name="acsType", type=String.class, parameters={})
    private Output</* @Nullable */ String> acsType;

    public Output<Optional<String>> acsType() {
        return Codegen.optional(this.acsType);
    }
    @Export(name="audience", type=String.class, parameters={})
    private Output<String> audience;

    public Output<String> audience() {
        return this.audience;
    }
    @Export(name="deprovisionedAction", type=String.class, parameters={})
    private Output</* @Nullable */ String> deprovisionedAction;

    public Output<Optional<String>> deprovisionedAction() {
        return Codegen.optional(this.deprovisionedAction);
    }
    @Export(name="groupsAction", type=String.class, parameters={})
    private Output</* @Nullable */ String> groupsAction;

    public Output<Optional<String>> groupsAction() {
        return Codegen.optional(this.groupsAction);
    }
    @Export(name="groupsAssignments", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> groupsAssignments;

    public Output<Optional<List<String>>> groupsAssignments() {
        return Codegen.optional(this.groupsAssignments);
    }
    @Export(name="groupsAttribute", type=String.class, parameters={})
    private Output</* @Nullable */ String> groupsAttribute;

    public Output<Optional<String>> groupsAttribute() {
        return Codegen.optional(this.groupsAttribute);
    }
    @Export(name="groupsFilters", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> groupsFilters;

    public Output<Optional<List<String>>> groupsFilters() {
        return Codegen.optional(this.groupsFilters);
    }
    @Export(name="issuer", type=String.class, parameters={})
    private Output<String> issuer;

    public Output<String> issuer() {
        return this.issuer;
    }
    /**
     * Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL
     * 
     */
    @Export(name="issuerMode", type=String.class, parameters={})
    private Output</* @Nullable */ String> issuerMode;

    /**
     * @return Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL
     * 
     */
    public Output<Optional<String>> issuerMode() {
        return Codegen.optional(this.issuerMode);
    }
    @Export(name="kid", type=String.class, parameters={})
    private Output<String> kid;

    public Output<String> kid() {
        return this.kid;
    }
    @Export(name="maxClockSkew", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maxClockSkew;

    public Output<Optional<Integer>> maxClockSkew() {
        return Codegen.optional(this.maxClockSkew);
    }
    /**
     * Name of the IdP
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the IdP
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="nameFormat", type=String.class, parameters={})
    private Output</* @Nullable */ String> nameFormat;

    public Output<Optional<String>> nameFormat() {
        return Codegen.optional(this.nameFormat);
    }
    @Export(name="profileMaster", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> profileMaster;

    public Output<Optional<Boolean>> profileMaster() {
        return Codegen.optional(this.profileMaster);
    }
    @Export(name="provisioningAction", type=String.class, parameters={})
    private Output</* @Nullable */ String> provisioningAction;

    public Output<Optional<String>> provisioningAction() {
        return Codegen.optional(this.provisioningAction);
    }
    /**
     * The XML digital Signature Algorithm used when signing an &lt;AuthnRequest&gt; message
     * 
     */
    @Export(name="requestSignatureAlgorithm", type=String.class, parameters={})
    private Output</* @Nullable */ String> requestSignatureAlgorithm;

    /**
     * @return The XML digital Signature Algorithm used when signing an &lt;AuthnRequest&gt; message
     * 
     */
    public Output<Optional<String>> requestSignatureAlgorithm() {
        return Codegen.optional(this.requestSignatureAlgorithm);
    }
    /**
     * Specifies whether to digitally sign &lt;AuthnRequest&gt; messages to the IdP
     * 
     */
    @Export(name="requestSignatureScope", type=String.class, parameters={})
    private Output</* @Nullable */ String> requestSignatureScope;

    /**
     * @return Specifies whether to digitally sign &lt;AuthnRequest&gt; messages to the IdP
     * 
     */
    public Output<Optional<String>> requestSignatureScope() {
        return Codegen.optional(this.requestSignatureScope);
    }
    /**
     * The minimum XML digital Signature Algorithm allowed when verifying a &lt;SAMLResponse&gt; message or &lt;Assertion&gt; element
     * 
     */
    @Export(name="responseSignatureAlgorithm", type=String.class, parameters={})
    private Output</* @Nullable */ String> responseSignatureAlgorithm;

    /**
     * @return The minimum XML digital Signature Algorithm allowed when verifying a &lt;SAMLResponse&gt; message or &lt;Assertion&gt; element
     * 
     */
    public Output<Optional<String>> responseSignatureAlgorithm() {
        return Codegen.optional(this.responseSignatureAlgorithm);
    }
    /**
     * Specifies whether to verify a &lt;SAMLResponse&gt; message or &lt;Assertion&gt; element XML digital signature
     * 
     */
    @Export(name="responseSignatureScope", type=String.class, parameters={})
    private Output</* @Nullable */ String> responseSignatureScope;

    /**
     * @return Specifies whether to verify a &lt;SAMLResponse&gt; message or &lt;Assertion&gt; element XML digital signature
     * 
     */
    public Output<Optional<String>> responseSignatureScope() {
        return Codegen.optional(this.responseSignatureScope);
    }
    @Export(name="ssoBinding", type=String.class, parameters={})
    private Output</* @Nullable */ String> ssoBinding;

    public Output<Optional<String>> ssoBinding() {
        return Codegen.optional(this.ssoBinding);
    }
    @Export(name="ssoDestination", type=String.class, parameters={})
    private Output</* @Nullable */ String> ssoDestination;

    public Output<Optional<String>> ssoDestination() {
        return Codegen.optional(this.ssoDestination);
    }
    @Export(name="ssoUrl", type=String.class, parameters={})
    private Output<String> ssoUrl;

    public Output<String> ssoUrl() {
        return this.ssoUrl;
    }
    @Export(name="status", type=String.class, parameters={})
    private Output</* @Nullable */ String> status;

    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    @Export(name="subjectFilter", type=String.class, parameters={})
    private Output</* @Nullable */ String> subjectFilter;

    public Output<Optional<String>> subjectFilter() {
        return Codegen.optional(this.subjectFilter);
    }
    @Export(name="subjectFormats", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> subjectFormats;

    public Output<Optional<List<String>>> subjectFormats() {
        return Codegen.optional(this.subjectFormats);
    }
    @Export(name="subjectMatchAttribute", type=String.class, parameters={})
    private Output</* @Nullable */ String> subjectMatchAttribute;

    public Output<Optional<String>> subjectMatchAttribute() {
        return Codegen.optional(this.subjectMatchAttribute);
    }
    @Export(name="subjectMatchType", type=String.class, parameters={})
    private Output</* @Nullable */ String> subjectMatchType;

    public Output<Optional<String>> subjectMatchType() {
        return Codegen.optional(this.subjectMatchType);
    }
    @Export(name="suspendedAction", type=String.class, parameters={})
    private Output</* @Nullable */ String> suspendedAction;

    public Output<Optional<String>> suspendedAction() {
        return Codegen.optional(this.suspendedAction);
    }
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }
    @Export(name="userTypeId", type=String.class, parameters={})
    private Output<String> userTypeId;

    public Output<String> userTypeId() {
        return this.userTypeId;
    }
    @Export(name="usernameTemplate", type=String.class, parameters={})
    private Output</* @Nullable */ String> usernameTemplate;

    public Output<Optional<String>> usernameTemplate() {
        return Codegen.optional(this.usernameTemplate);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SamlIdp(String name) {
        this(name, SamlIdpArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SamlIdp(String name, SamlIdpArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SamlIdp(String name, SamlIdpArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:deprecated/samlIdp:SamlIdp", name, args == null ? SamlIdpArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SamlIdp(String name, Output<String> id, @Nullable SamlIdpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:deprecated/samlIdp:SamlIdp", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SamlIdp get(String name, Output<String> id, @Nullable SamlIdpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SamlIdp(name, id, state, options);
    }
}

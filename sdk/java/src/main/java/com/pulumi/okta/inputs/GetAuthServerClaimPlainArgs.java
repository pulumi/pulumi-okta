// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAuthServerClaimPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAuthServerClaimPlainArgs Empty = new GetAuthServerClaimPlainArgs();

    /**
     * Auth server ID.
     * 
     */
    @Import(name="authServerId", required=true)
    private String authServerId;

    /**
     * @return Auth server ID.
     * 
     */
    public String authServerId() {
        return this.authServerId;
    }

    /**
     * ID of the claim. Conflicts with `name`.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return ID of the claim. Conflicts with `name`.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Name of the claim. Conflicts with `id`.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the claim. Conflicts with `id`.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    private GetAuthServerClaimPlainArgs() {}

    private GetAuthServerClaimPlainArgs(GetAuthServerClaimPlainArgs $) {
        this.authServerId = $.authServerId;
        this.id = $.id;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAuthServerClaimPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAuthServerClaimPlainArgs $;

        public Builder() {
            $ = new GetAuthServerClaimPlainArgs();
        }

        public Builder(GetAuthServerClaimPlainArgs defaults) {
            $ = new GetAuthServerClaimPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authServerId Auth server ID.
         * 
         * @return builder
         * 
         */
        public Builder authServerId(String authServerId) {
            $.authServerId = authServerId;
            return this;
        }

        /**
         * @param id ID of the claim. Conflicts with `name`.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param name Name of the claim. Conflicts with `id`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public GetAuthServerClaimPlainArgs build() {
            $.authServerId = Objects.requireNonNull($.authServerId, "expected parameter 'authServerId' to be non-null");
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.GetEndUserMyRequestsRequested;
import com.pulumi.okta.outputs.GetEndUserMyRequestsRequestedBy;
import com.pulumi.okta.outputs.GetEndUserMyRequestsRequestedFor;
import com.pulumi.okta.outputs.GetEndUserMyRequestsRequesterFieldValue;
import com.pulumi.okta.outputs.GetEndUserMyRequestsRiskAssessment;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEndUserMyRequestsResult {
    private String accessDuration;
    private String created;
    private String createdBy;
    /**
     * @return The ID of the catalog entry for which the request was made.
     * 
     */
    private String entryId;
    private String grantStatus;
    private String granted;
    /**
     * @return The ID of the request to retrieve.
     * 
     */
    private String id;
    private String lastUpdated;
    private String lastUpdatedBy;
    private @Nullable GetEndUserMyRequestsRequested requested;
    private @Nullable GetEndUserMyRequestsRequestedBy requestedBy;
    private @Nullable GetEndUserMyRequestsRequestedFor requestedFor;
    /**
     * @return The requester input fields and their values from the request.
     * 
     */
    private @Nullable List<GetEndUserMyRequestsRequesterFieldValue> requesterFieldValues;
    private String resolved;
    private String revocationScheduled;
    private String revocationStatus;
    private String revoked;
    private @Nullable GetEndUserMyRequestsRiskAssessment riskAssessment;
    /**
     * @return The current status of the request. Possible values include: `APPROVED`, `CANCELED`, `DENIED`, `EXPIRED`, `PENDING`, `REJECTED`, `SUBMITTED`
     * 
     */
    private String status;

    private GetEndUserMyRequestsResult() {}
    public String accessDuration() {
        return this.accessDuration;
    }
    public String created() {
        return this.created;
    }
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return The ID of the catalog entry for which the request was made.
     * 
     */
    public String entryId() {
        return this.entryId;
    }
    public String grantStatus() {
        return this.grantStatus;
    }
    public String granted() {
        return this.granted;
    }
    /**
     * @return The ID of the request to retrieve.
     * 
     */
    public String id() {
        return this.id;
    }
    public String lastUpdated() {
        return this.lastUpdated;
    }
    public String lastUpdatedBy() {
        return this.lastUpdatedBy;
    }
    public Optional<GetEndUserMyRequestsRequested> requested() {
        return Optional.ofNullable(this.requested);
    }
    public Optional<GetEndUserMyRequestsRequestedBy> requestedBy() {
        return Optional.ofNullable(this.requestedBy);
    }
    public Optional<GetEndUserMyRequestsRequestedFor> requestedFor() {
        return Optional.ofNullable(this.requestedFor);
    }
    /**
     * @return The requester input fields and their values from the request.
     * 
     */
    public List<GetEndUserMyRequestsRequesterFieldValue> requesterFieldValues() {
        return this.requesterFieldValues == null ? List.of() : this.requesterFieldValues;
    }
    public String resolved() {
        return this.resolved;
    }
    public String revocationScheduled() {
        return this.revocationScheduled;
    }
    public String revocationStatus() {
        return this.revocationStatus;
    }
    public String revoked() {
        return this.revoked;
    }
    public Optional<GetEndUserMyRequestsRiskAssessment> riskAssessment() {
        return Optional.ofNullable(this.riskAssessment);
    }
    /**
     * @return The current status of the request. Possible values include: `APPROVED`, `CANCELED`, `DENIED`, `EXPIRED`, `PENDING`, `REJECTED`, `SUBMITTED`
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEndUserMyRequestsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessDuration;
        private String created;
        private String createdBy;
        private String entryId;
        private String grantStatus;
        private String granted;
        private String id;
        private String lastUpdated;
        private String lastUpdatedBy;
        private @Nullable GetEndUserMyRequestsRequested requested;
        private @Nullable GetEndUserMyRequestsRequestedBy requestedBy;
        private @Nullable GetEndUserMyRequestsRequestedFor requestedFor;
        private @Nullable List<GetEndUserMyRequestsRequesterFieldValue> requesterFieldValues;
        private String resolved;
        private String revocationScheduled;
        private String revocationStatus;
        private String revoked;
        private @Nullable GetEndUserMyRequestsRiskAssessment riskAssessment;
        private String status;
        public Builder() {}
        public Builder(GetEndUserMyRequestsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessDuration = defaults.accessDuration;
    	      this.created = defaults.created;
    	      this.createdBy = defaults.createdBy;
    	      this.entryId = defaults.entryId;
    	      this.grantStatus = defaults.grantStatus;
    	      this.granted = defaults.granted;
    	      this.id = defaults.id;
    	      this.lastUpdated = defaults.lastUpdated;
    	      this.lastUpdatedBy = defaults.lastUpdatedBy;
    	      this.requested = defaults.requested;
    	      this.requestedBy = defaults.requestedBy;
    	      this.requestedFor = defaults.requestedFor;
    	      this.requesterFieldValues = defaults.requesterFieldValues;
    	      this.resolved = defaults.resolved;
    	      this.revocationScheduled = defaults.revocationScheduled;
    	      this.revocationStatus = defaults.revocationStatus;
    	      this.revoked = defaults.revoked;
    	      this.riskAssessment = defaults.riskAssessment;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder accessDuration(String accessDuration) {
            if (accessDuration == null) {
              throw new MissingRequiredPropertyException("GetEndUserMyRequestsResult", "accessDuration");
            }
            this.accessDuration = accessDuration;
            return this;
        }
        @CustomType.Setter
        public Builder created(String created) {
            if (created == null) {
              throw new MissingRequiredPropertyException("GetEndUserMyRequestsResult", "created");
            }
            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetEndUserMyRequestsResult", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder entryId(String entryId) {
            if (entryId == null) {
              throw new MissingRequiredPropertyException("GetEndUserMyRequestsResult", "entryId");
            }
            this.entryId = entryId;
            return this;
        }
        @CustomType.Setter
        public Builder grantStatus(String grantStatus) {
            if (grantStatus == null) {
              throw new MissingRequiredPropertyException("GetEndUserMyRequestsResult", "grantStatus");
            }
            this.grantStatus = grantStatus;
            return this;
        }
        @CustomType.Setter
        public Builder granted(String granted) {
            if (granted == null) {
              throw new MissingRequiredPropertyException("GetEndUserMyRequestsResult", "granted");
            }
            this.granted = granted;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEndUserMyRequestsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdated(String lastUpdated) {
            if (lastUpdated == null) {
              throw new MissingRequiredPropertyException("GetEndUserMyRequestsResult", "lastUpdated");
            }
            this.lastUpdated = lastUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedBy(String lastUpdatedBy) {
            if (lastUpdatedBy == null) {
              throw new MissingRequiredPropertyException("GetEndUserMyRequestsResult", "lastUpdatedBy");
            }
            this.lastUpdatedBy = lastUpdatedBy;
            return this;
        }
        @CustomType.Setter
        public Builder requested(@Nullable GetEndUserMyRequestsRequested requested) {

            this.requested = requested;
            return this;
        }
        @CustomType.Setter
        public Builder requestedBy(@Nullable GetEndUserMyRequestsRequestedBy requestedBy) {

            this.requestedBy = requestedBy;
            return this;
        }
        @CustomType.Setter
        public Builder requestedFor(@Nullable GetEndUserMyRequestsRequestedFor requestedFor) {

            this.requestedFor = requestedFor;
            return this;
        }
        @CustomType.Setter
        public Builder requesterFieldValues(@Nullable List<GetEndUserMyRequestsRequesterFieldValue> requesterFieldValues) {

            this.requesterFieldValues = requesterFieldValues;
            return this;
        }
        public Builder requesterFieldValues(GetEndUserMyRequestsRequesterFieldValue... requesterFieldValues) {
            return requesterFieldValues(List.of(requesterFieldValues));
        }
        @CustomType.Setter
        public Builder resolved(String resolved) {
            if (resolved == null) {
              throw new MissingRequiredPropertyException("GetEndUserMyRequestsResult", "resolved");
            }
            this.resolved = resolved;
            return this;
        }
        @CustomType.Setter
        public Builder revocationScheduled(String revocationScheduled) {
            if (revocationScheduled == null) {
              throw new MissingRequiredPropertyException("GetEndUserMyRequestsResult", "revocationScheduled");
            }
            this.revocationScheduled = revocationScheduled;
            return this;
        }
        @CustomType.Setter
        public Builder revocationStatus(String revocationStatus) {
            if (revocationStatus == null) {
              throw new MissingRequiredPropertyException("GetEndUserMyRequestsResult", "revocationStatus");
            }
            this.revocationStatus = revocationStatus;
            return this;
        }
        @CustomType.Setter
        public Builder revoked(String revoked) {
            if (revoked == null) {
              throw new MissingRequiredPropertyException("GetEndUserMyRequestsResult", "revoked");
            }
            this.revoked = revoked;
            return this;
        }
        @CustomType.Setter
        public Builder riskAssessment(@Nullable GetEndUserMyRequestsRiskAssessment riskAssessment) {

            this.riskAssessment = riskAssessment;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetEndUserMyRequestsResult", "status");
            }
            this.status = status;
            return this;
        }
        public GetEndUserMyRequestsResult build() {
            final var _resultValue = new GetEndUserMyRequestsResult();
            _resultValue.accessDuration = accessDuration;
            _resultValue.created = created;
            _resultValue.createdBy = createdBy;
            _resultValue.entryId = entryId;
            _resultValue.grantStatus = grantStatus;
            _resultValue.granted = granted;
            _resultValue.id = id;
            _resultValue.lastUpdated = lastUpdated;
            _resultValue.lastUpdatedBy = lastUpdatedBy;
            _resultValue.requested = requested;
            _resultValue.requestedBy = requestedBy;
            _resultValue.requestedFor = requestedFor;
            _resultValue.requesterFieldValues = requesterFieldValues;
            _resultValue.resolved = resolved;
            _resultValue.revocationScheduled = revocationScheduled;
            _resultValue.revocationStatus = revocationStatus;
            _resultValue.revoked = revoked;
            _resultValue.riskAssessment = riskAssessment;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}

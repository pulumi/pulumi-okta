// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAuthenticatorArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAuthenticatorArgs Empty = new GetAuthenticatorArgs();

    /**
     * ID of the authenticator.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return ID of the authenticator.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * A human-readable string that identifies the authenticator.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return A human-readable string that identifies the authenticator.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * Name of the authenticator.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the authenticator.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private GetAuthenticatorArgs() {}

    private GetAuthenticatorArgs(GetAuthenticatorArgs $) {
        this.id = $.id;
        this.key = $.key;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAuthenticatorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAuthenticatorArgs $;

        public Builder() {
            $ = new GetAuthenticatorArgs();
        }

        public Builder(GetAuthenticatorArgs defaults) {
            $ = new GetAuthenticatorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id ID of the authenticator.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id ID of the authenticator.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param key A human-readable string that identifies the authenticator.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key A human-readable string that identifies the authenticator.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param name Name of the authenticator.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the authenticator.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetAuthenticatorArgs build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.trustedorigin;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OriginArgs extends com.pulumi.resources.ResourceArgs {

    public static final OriginArgs Empty = new OriginArgs();

    /**
     * Whether the Trusted Origin is active or not - can only be issued post-creation
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    /**
     * @return Whether the Trusted Origin is active or not - can only be issued post-creation
     * 
     */
    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * Unique name for this trusted origin
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Unique name for this trusted origin
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Unique origin URL for this trusted origin
     * 
     */
    @Import(name="origin", required=true)
    private Output<String> origin;

    /**
     * @return Unique origin URL for this trusted origin
     * 
     */
    public Output<String> origin() {
        return this.origin;
    }

    /**
     * Scopes of the Trusted Origin - can either be CORS or REDIRECT only
     * 
     */
    @Import(name="scopes", required=true)
    private Output<List<String>> scopes;

    /**
     * @return Scopes of the Trusted Origin - can either be CORS or REDIRECT only
     * 
     */
    public Output<List<String>> scopes() {
        return this.scopes;
    }

    private OriginArgs() {}

    private OriginArgs(OriginArgs $) {
        this.active = $.active;
        this.name = $.name;
        this.origin = $.origin;
        this.scopes = $.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OriginArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OriginArgs $;

        public Builder() {
            $ = new OriginArgs();
        }

        public Builder(OriginArgs defaults) {
            $ = new OriginArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param active Whether the Trusted Origin is active or not - can only be issued post-creation
         * 
         * @return builder
         * 
         */
        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active Whether the Trusted Origin is active or not - can only be issued post-creation
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param name Unique name for this trusted origin
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Unique name for this trusted origin
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param origin Unique origin URL for this trusted origin
         * 
         * @return builder
         * 
         */
        public Builder origin(Output<String> origin) {
            $.origin = origin;
            return this;
        }

        /**
         * @param origin Unique origin URL for this trusted origin
         * 
         * @return builder
         * 
         */
        public Builder origin(String origin) {
            return origin(Output.of(origin));
        }

        /**
         * @param scopes Scopes of the Trusted Origin - can either be CORS or REDIRECT only
         * 
         * @return builder
         * 
         */
        public Builder scopes(Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes Scopes of the Trusted Origin - can either be CORS or REDIRECT only
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes Scopes of the Trusted Origin - can either be CORS or REDIRECT only
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        public OriginArgs build() {
            if ($.origin == null) {
                throw new MissingRequiredPropertyException("OriginArgs", "origin");
            }
            if ($.scopes == null) {
                throw new MissingRequiredPropertyException("OriginArgs", "scopes");
            }
            return $;
        }
    }

}

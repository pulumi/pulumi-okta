// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.deprecated;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.okta.deprecated.inputs.ThreeFieldAppUserArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ThreeFieldAppArgs extends com.pulumi.resources.ResourceArgs {

    public static final ThreeFieldAppArgs Empty = new ThreeFieldAppArgs();

    /**
     * Custom error page URL
     * 
     */
    @Import(name="accessibilityErrorRedirectUrl")
    private @Nullable Output<String> accessibilityErrorRedirectUrl;

    /**
     * @return Custom error page URL
     * 
     */
    public Optional<Output<String>> accessibilityErrorRedirectUrl() {
        return Optional.ofNullable(this.accessibilityErrorRedirectUrl);
    }

    /**
     * Custom login page URL
     * 
     */
    @Import(name="accessibilityLoginRedirectUrl")
    private @Nullable Output<String> accessibilityLoginRedirectUrl;

    /**
     * @return Custom login page URL
     * 
     */
    public Optional<Output<String>> accessibilityLoginRedirectUrl() {
        return Optional.ofNullable(this.accessibilityLoginRedirectUrl);
    }

    /**
     * Enable self service
     * 
     */
    @Import(name="accessibilitySelfService")
    private @Nullable Output<Boolean> accessibilitySelfService;

    /**
     * @return Enable self service
     * 
     */
    public Optional<Output<Boolean>> accessibilitySelfService() {
        return Optional.ofNullable(this.accessibilitySelfService);
    }

    /**
     * Application notes for admins.
     * 
     */
    @Import(name="adminNote")
    private @Nullable Output<String> adminNote;

    /**
     * @return Application notes for admins.
     * 
     */
    public Optional<Output<String>> adminNote() {
        return Optional.ofNullable(this.adminNote);
    }

    /**
     * Displays specific appLinks for the app
     * 
     */
    @Import(name="appLinksJson")
    private @Nullable Output<String> appLinksJson;

    /**
     * @return Displays specific appLinks for the app
     * 
     */
    public Optional<Output<String>> appLinksJson() {
        return Optional.ofNullable(this.appLinksJson);
    }

    /**
     * Display auto submit toolbar
     * 
     */
    @Import(name="autoSubmitToolbar")
    private @Nullable Output<Boolean> autoSubmitToolbar;

    /**
     * @return Display auto submit toolbar
     * 
     */
    public Optional<Output<Boolean>> autoSubmitToolbar() {
        return Optional.ofNullable(this.autoSubmitToolbar);
    }

    /**
     * Login button field CSS selector
     * 
     */
    @Import(name="buttonSelector", required=true)
    private Output<String> buttonSelector;

    /**
     * @return Login button field CSS selector
     * 
     */
    public Output<String> buttonSelector() {
        return this.buttonSelector;
    }

    /**
     * Application credentials scheme
     * 
     */
    @Import(name="credentialsScheme")
    private @Nullable Output<String> credentialsScheme;

    /**
     * @return Application credentials scheme
     * 
     */
    public Optional<Output<String>> credentialsScheme() {
        return Optional.ofNullable(this.credentialsScheme);
    }

    /**
     * Application notes for end users.
     * 
     */
    @Import(name="enduserNote")
    private @Nullable Output<String> enduserNote;

    /**
     * @return Application notes for end users.
     * 
     */
    public Optional<Output<String>> enduserNote() {
        return Optional.ofNullable(this.enduserNote);
    }

    /**
     * Extra field CSS selector
     * 
     */
    @Import(name="extraFieldSelector", required=true)
    private Output<String> extraFieldSelector;

    /**
     * @return Extra field CSS selector
     * 
     */
    public Output<String> extraFieldSelector() {
        return this.extraFieldSelector;
    }

    /**
     * Value for extra form field
     * 
     */
    @Import(name="extraFieldValue", required=true)
    private Output<String> extraFieldValue;

    /**
     * @return Value for extra form field
     * 
     */
    public Output<String> extraFieldValue() {
        return this.extraFieldValue;
    }

    /**
     * Groups associated with the application
     * 
     * @deprecated
     * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
    @Import(name="groups")
    private @Nullable Output<List<String>> groups;

    /**
     * @return Groups associated with the application
     * 
     * @deprecated
     * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
    public Optional<Output<List<String>>> groups() {
        return Optional.ofNullable(this.groups);
    }

    /**
     * Do not display application icon on mobile app
     * 
     */
    @Import(name="hideIos")
    private @Nullable Output<Boolean> hideIos;

    /**
     * @return Do not display application icon on mobile app
     * 
     */
    public Optional<Output<Boolean>> hideIos() {
        return Optional.ofNullable(this.hideIos);
    }

    /**
     * Do not display application icon to users
     * 
     */
    @Import(name="hideWeb")
    private @Nullable Output<Boolean> hideWeb;

    /**
     * @return Do not display application icon to users
     * 
     */
    public Optional<Output<Boolean>> hideWeb() {
        return Optional.ofNullable(this.hideWeb);
    }

    /**
     * Pretty name of app.
     * 
     */
    @Import(name="label", required=true)
    private Output<String> label;

    /**
     * @return Pretty name of app.
     * 
     */
    public Output<String> label() {
        return this.label;
    }

    /**
     * Local path to logo of the application.
     * 
     */
    @Import(name="logo")
    private @Nullable Output<String> logo;

    /**
     * @return Local path to logo of the application.
     * 
     */
    public Optional<Output<String>> logo() {
        return Optional.ofNullable(this.logo);
    }

    /**
     * Login password field CSS selector
     * 
     */
    @Import(name="passwordSelector", required=true)
    private Output<String> passwordSelector;

    /**
     * @return Login password field CSS selector
     * 
     */
    public Output<String> passwordSelector() {
        return this.passwordSelector;
    }

    /**
     * Allow user to reveal password
     * 
     */
    @Import(name="revealPassword")
    private @Nullable Output<Boolean> revealPassword;

    /**
     * @return Allow user to reveal password
     * 
     */
    public Optional<Output<Boolean>> revealPassword() {
        return Optional.ofNullable(this.revealPassword);
    }

    /**
     * Shared password, required for certain schemes.
     * 
     */
    @Import(name="sharedPassword")
    private @Nullable Output<String> sharedPassword;

    /**
     * @return Shared password, required for certain schemes.
     * 
     */
    public Optional<Output<String>> sharedPassword() {
        return Optional.ofNullable(this.sharedPassword);
    }

    /**
     * Shared username, required for certain schemes.
     * 
     */
    @Import(name="sharedUsername")
    private @Nullable Output<String> sharedUsername;

    /**
     * @return Shared username, required for certain schemes.
     * 
     */
    public Optional<Output<String>> sharedUsername() {
        return Optional.ofNullable(this.sharedUsername);
    }

    /**
     * Ignore groups sync. This is a temporary solution until &#39;groups&#39; field is supported in all the app-like resources
     * 
     */
    @Import(name="skipGroups")
    private @Nullable Output<Boolean> skipGroups;

    /**
     * @return Ignore groups sync. This is a temporary solution until &#39;groups&#39; field is supported in all the app-like resources
     * 
     */
    public Optional<Output<Boolean>> skipGroups() {
        return Optional.ofNullable(this.skipGroups);
    }

    /**
     * Ignore users sync. This is a temporary solution until &#39;users&#39; field is supported in all the app-like resources
     * 
     */
    @Import(name="skipUsers")
    private @Nullable Output<Boolean> skipUsers;

    /**
     * @return Ignore users sync. This is a temporary solution until &#39;users&#39; field is supported in all the app-like resources
     * 
     */
    public Optional<Output<Boolean>> skipUsers() {
        return Optional.ofNullable(this.skipUsers);
    }

    /**
     * Status of application.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status of application.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Login URL
     * 
     */
    @Import(name="url", required=true)
    private Output<String> url;

    /**
     * @return Login URL
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    /**
     * A regex that further restricts URL to the specified regex
     * 
     */
    @Import(name="urlRegex")
    private @Nullable Output<String> urlRegex;

    /**
     * @return A regex that further restricts URL to the specified regex
     * 
     */
    public Optional<Output<String>> urlRegex() {
        return Optional.ofNullable(this.urlRegex);
    }

    /**
     * Username template
     * 
     */
    @Import(name="userNameTemplate")
    private @Nullable Output<String> userNameTemplate;

    /**
     * @return Username template
     * 
     */
    public Optional<Output<String>> userNameTemplate() {
        return Optional.ofNullable(this.userNameTemplate);
    }

    /**
     * Push username on update
     * 
     */
    @Import(name="userNameTemplatePushStatus")
    private @Nullable Output<String> userNameTemplatePushStatus;

    /**
     * @return Push username on update
     * 
     */
    public Optional<Output<String>> userNameTemplatePushStatus() {
        return Optional.ofNullable(this.userNameTemplatePushStatus);
    }

    /**
     * Username template suffix
     * 
     */
    @Import(name="userNameTemplateSuffix")
    private @Nullable Output<String> userNameTemplateSuffix;

    /**
     * @return Username template suffix
     * 
     */
    public Optional<Output<String>> userNameTemplateSuffix() {
        return Optional.ofNullable(this.userNameTemplateSuffix);
    }

    /**
     * Username template type
     * 
     */
    @Import(name="userNameTemplateType")
    private @Nullable Output<String> userNameTemplateType;

    /**
     * @return Username template type
     * 
     */
    public Optional<Output<String>> userNameTemplateType() {
        return Optional.ofNullable(this.userNameTemplateType);
    }

    /**
     * Login username field CSS selector
     * 
     */
    @Import(name="usernameSelector", required=true)
    private Output<String> usernameSelector;

    /**
     * @return Login username field CSS selector
     * 
     */
    public Output<String> usernameSelector() {
        return this.usernameSelector;
    }

    /**
     * Users associated with the application
     * 
     * @deprecated
     * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
    @Import(name="users")
    private @Nullable Output<List<ThreeFieldAppUserArgs>> users;

    /**
     * @return Users associated with the application
     * 
     * @deprecated
     * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
    public Optional<Output<List<ThreeFieldAppUserArgs>>> users() {
        return Optional.ofNullable(this.users);
    }

    private ThreeFieldAppArgs() {}

    private ThreeFieldAppArgs(ThreeFieldAppArgs $) {
        this.accessibilityErrorRedirectUrl = $.accessibilityErrorRedirectUrl;
        this.accessibilityLoginRedirectUrl = $.accessibilityLoginRedirectUrl;
        this.accessibilitySelfService = $.accessibilitySelfService;
        this.adminNote = $.adminNote;
        this.appLinksJson = $.appLinksJson;
        this.autoSubmitToolbar = $.autoSubmitToolbar;
        this.buttonSelector = $.buttonSelector;
        this.credentialsScheme = $.credentialsScheme;
        this.enduserNote = $.enduserNote;
        this.extraFieldSelector = $.extraFieldSelector;
        this.extraFieldValue = $.extraFieldValue;
        this.groups = $.groups;
        this.hideIos = $.hideIos;
        this.hideWeb = $.hideWeb;
        this.label = $.label;
        this.logo = $.logo;
        this.passwordSelector = $.passwordSelector;
        this.revealPassword = $.revealPassword;
        this.sharedPassword = $.sharedPassword;
        this.sharedUsername = $.sharedUsername;
        this.skipGroups = $.skipGroups;
        this.skipUsers = $.skipUsers;
        this.status = $.status;
        this.url = $.url;
        this.urlRegex = $.urlRegex;
        this.userNameTemplate = $.userNameTemplate;
        this.userNameTemplatePushStatus = $.userNameTemplatePushStatus;
        this.userNameTemplateSuffix = $.userNameTemplateSuffix;
        this.userNameTemplateType = $.userNameTemplateType;
        this.usernameSelector = $.usernameSelector;
        this.users = $.users;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ThreeFieldAppArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ThreeFieldAppArgs $;

        public Builder() {
            $ = new ThreeFieldAppArgs();
        }

        public Builder(ThreeFieldAppArgs defaults) {
            $ = new ThreeFieldAppArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessibilityErrorRedirectUrl Custom error page URL
         * 
         * @return builder
         * 
         */
        public Builder accessibilityErrorRedirectUrl(@Nullable Output<String> accessibilityErrorRedirectUrl) {
            $.accessibilityErrorRedirectUrl = accessibilityErrorRedirectUrl;
            return this;
        }

        /**
         * @param accessibilityErrorRedirectUrl Custom error page URL
         * 
         * @return builder
         * 
         */
        public Builder accessibilityErrorRedirectUrl(String accessibilityErrorRedirectUrl) {
            return accessibilityErrorRedirectUrl(Output.of(accessibilityErrorRedirectUrl));
        }

        /**
         * @param accessibilityLoginRedirectUrl Custom login page URL
         * 
         * @return builder
         * 
         */
        public Builder accessibilityLoginRedirectUrl(@Nullable Output<String> accessibilityLoginRedirectUrl) {
            $.accessibilityLoginRedirectUrl = accessibilityLoginRedirectUrl;
            return this;
        }

        /**
         * @param accessibilityLoginRedirectUrl Custom login page URL
         * 
         * @return builder
         * 
         */
        public Builder accessibilityLoginRedirectUrl(String accessibilityLoginRedirectUrl) {
            return accessibilityLoginRedirectUrl(Output.of(accessibilityLoginRedirectUrl));
        }

        /**
         * @param accessibilitySelfService Enable self service
         * 
         * @return builder
         * 
         */
        public Builder accessibilitySelfService(@Nullable Output<Boolean> accessibilitySelfService) {
            $.accessibilitySelfService = accessibilitySelfService;
            return this;
        }

        /**
         * @param accessibilitySelfService Enable self service
         * 
         * @return builder
         * 
         */
        public Builder accessibilitySelfService(Boolean accessibilitySelfService) {
            return accessibilitySelfService(Output.of(accessibilitySelfService));
        }

        /**
         * @param adminNote Application notes for admins.
         * 
         * @return builder
         * 
         */
        public Builder adminNote(@Nullable Output<String> adminNote) {
            $.adminNote = adminNote;
            return this;
        }

        /**
         * @param adminNote Application notes for admins.
         * 
         * @return builder
         * 
         */
        public Builder adminNote(String adminNote) {
            return adminNote(Output.of(adminNote));
        }

        /**
         * @param appLinksJson Displays specific appLinks for the app
         * 
         * @return builder
         * 
         */
        public Builder appLinksJson(@Nullable Output<String> appLinksJson) {
            $.appLinksJson = appLinksJson;
            return this;
        }

        /**
         * @param appLinksJson Displays specific appLinks for the app
         * 
         * @return builder
         * 
         */
        public Builder appLinksJson(String appLinksJson) {
            return appLinksJson(Output.of(appLinksJson));
        }

        /**
         * @param autoSubmitToolbar Display auto submit toolbar
         * 
         * @return builder
         * 
         */
        public Builder autoSubmitToolbar(@Nullable Output<Boolean> autoSubmitToolbar) {
            $.autoSubmitToolbar = autoSubmitToolbar;
            return this;
        }

        /**
         * @param autoSubmitToolbar Display auto submit toolbar
         * 
         * @return builder
         * 
         */
        public Builder autoSubmitToolbar(Boolean autoSubmitToolbar) {
            return autoSubmitToolbar(Output.of(autoSubmitToolbar));
        }

        /**
         * @param buttonSelector Login button field CSS selector
         * 
         * @return builder
         * 
         */
        public Builder buttonSelector(Output<String> buttonSelector) {
            $.buttonSelector = buttonSelector;
            return this;
        }

        /**
         * @param buttonSelector Login button field CSS selector
         * 
         * @return builder
         * 
         */
        public Builder buttonSelector(String buttonSelector) {
            return buttonSelector(Output.of(buttonSelector));
        }

        /**
         * @param credentialsScheme Application credentials scheme
         * 
         * @return builder
         * 
         */
        public Builder credentialsScheme(@Nullable Output<String> credentialsScheme) {
            $.credentialsScheme = credentialsScheme;
            return this;
        }

        /**
         * @param credentialsScheme Application credentials scheme
         * 
         * @return builder
         * 
         */
        public Builder credentialsScheme(String credentialsScheme) {
            return credentialsScheme(Output.of(credentialsScheme));
        }

        /**
         * @param enduserNote Application notes for end users.
         * 
         * @return builder
         * 
         */
        public Builder enduserNote(@Nullable Output<String> enduserNote) {
            $.enduserNote = enduserNote;
            return this;
        }

        /**
         * @param enduserNote Application notes for end users.
         * 
         * @return builder
         * 
         */
        public Builder enduserNote(String enduserNote) {
            return enduserNote(Output.of(enduserNote));
        }

        /**
         * @param extraFieldSelector Extra field CSS selector
         * 
         * @return builder
         * 
         */
        public Builder extraFieldSelector(Output<String> extraFieldSelector) {
            $.extraFieldSelector = extraFieldSelector;
            return this;
        }

        /**
         * @param extraFieldSelector Extra field CSS selector
         * 
         * @return builder
         * 
         */
        public Builder extraFieldSelector(String extraFieldSelector) {
            return extraFieldSelector(Output.of(extraFieldSelector));
        }

        /**
         * @param extraFieldValue Value for extra form field
         * 
         * @return builder
         * 
         */
        public Builder extraFieldValue(Output<String> extraFieldValue) {
            $.extraFieldValue = extraFieldValue;
            return this;
        }

        /**
         * @param extraFieldValue Value for extra form field
         * 
         * @return builder
         * 
         */
        public Builder extraFieldValue(String extraFieldValue) {
            return extraFieldValue(Output.of(extraFieldValue));
        }

        /**
         * @param groups Groups associated with the application
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
        public Builder groups(@Nullable Output<List<String>> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups Groups associated with the application
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
        public Builder groups(List<String> groups) {
            return groups(Output.of(groups));
        }

        /**
         * @param groups Groups associated with the application
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }

        /**
         * @param hideIos Do not display application icon on mobile app
         * 
         * @return builder
         * 
         */
        public Builder hideIos(@Nullable Output<Boolean> hideIos) {
            $.hideIos = hideIos;
            return this;
        }

        /**
         * @param hideIos Do not display application icon on mobile app
         * 
         * @return builder
         * 
         */
        public Builder hideIos(Boolean hideIos) {
            return hideIos(Output.of(hideIos));
        }

        /**
         * @param hideWeb Do not display application icon to users
         * 
         * @return builder
         * 
         */
        public Builder hideWeb(@Nullable Output<Boolean> hideWeb) {
            $.hideWeb = hideWeb;
            return this;
        }

        /**
         * @param hideWeb Do not display application icon to users
         * 
         * @return builder
         * 
         */
        public Builder hideWeb(Boolean hideWeb) {
            return hideWeb(Output.of(hideWeb));
        }

        /**
         * @param label Pretty name of app.
         * 
         * @return builder
         * 
         */
        public Builder label(Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label Pretty name of app.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param logo Local path to logo of the application.
         * 
         * @return builder
         * 
         */
        public Builder logo(@Nullable Output<String> logo) {
            $.logo = logo;
            return this;
        }

        /**
         * @param logo Local path to logo of the application.
         * 
         * @return builder
         * 
         */
        public Builder logo(String logo) {
            return logo(Output.of(logo));
        }

        /**
         * @param passwordSelector Login password field CSS selector
         * 
         * @return builder
         * 
         */
        public Builder passwordSelector(Output<String> passwordSelector) {
            $.passwordSelector = passwordSelector;
            return this;
        }

        /**
         * @param passwordSelector Login password field CSS selector
         * 
         * @return builder
         * 
         */
        public Builder passwordSelector(String passwordSelector) {
            return passwordSelector(Output.of(passwordSelector));
        }

        /**
         * @param revealPassword Allow user to reveal password
         * 
         * @return builder
         * 
         */
        public Builder revealPassword(@Nullable Output<Boolean> revealPassword) {
            $.revealPassword = revealPassword;
            return this;
        }

        /**
         * @param revealPassword Allow user to reveal password
         * 
         * @return builder
         * 
         */
        public Builder revealPassword(Boolean revealPassword) {
            return revealPassword(Output.of(revealPassword));
        }

        /**
         * @param sharedPassword Shared password, required for certain schemes.
         * 
         * @return builder
         * 
         */
        public Builder sharedPassword(@Nullable Output<String> sharedPassword) {
            $.sharedPassword = sharedPassword;
            return this;
        }

        /**
         * @param sharedPassword Shared password, required for certain schemes.
         * 
         * @return builder
         * 
         */
        public Builder sharedPassword(String sharedPassword) {
            return sharedPassword(Output.of(sharedPassword));
        }

        /**
         * @param sharedUsername Shared username, required for certain schemes.
         * 
         * @return builder
         * 
         */
        public Builder sharedUsername(@Nullable Output<String> sharedUsername) {
            $.sharedUsername = sharedUsername;
            return this;
        }

        /**
         * @param sharedUsername Shared username, required for certain schemes.
         * 
         * @return builder
         * 
         */
        public Builder sharedUsername(String sharedUsername) {
            return sharedUsername(Output.of(sharedUsername));
        }

        /**
         * @param skipGroups Ignore groups sync. This is a temporary solution until &#39;groups&#39; field is supported in all the app-like resources
         * 
         * @return builder
         * 
         */
        public Builder skipGroups(@Nullable Output<Boolean> skipGroups) {
            $.skipGroups = skipGroups;
            return this;
        }

        /**
         * @param skipGroups Ignore groups sync. This is a temporary solution until &#39;groups&#39; field is supported in all the app-like resources
         * 
         * @return builder
         * 
         */
        public Builder skipGroups(Boolean skipGroups) {
            return skipGroups(Output.of(skipGroups));
        }

        /**
         * @param skipUsers Ignore users sync. This is a temporary solution until &#39;users&#39; field is supported in all the app-like resources
         * 
         * @return builder
         * 
         */
        public Builder skipUsers(@Nullable Output<Boolean> skipUsers) {
            $.skipUsers = skipUsers;
            return this;
        }

        /**
         * @param skipUsers Ignore users sync. This is a temporary solution until &#39;users&#39; field is supported in all the app-like resources
         * 
         * @return builder
         * 
         */
        public Builder skipUsers(Boolean skipUsers) {
            return skipUsers(Output.of(skipUsers));
        }

        /**
         * @param status Status of application.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status of application.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param url Login URL
         * 
         * @return builder
         * 
         */
        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url Login URL
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        /**
         * @param urlRegex A regex that further restricts URL to the specified regex
         * 
         * @return builder
         * 
         */
        public Builder urlRegex(@Nullable Output<String> urlRegex) {
            $.urlRegex = urlRegex;
            return this;
        }

        /**
         * @param urlRegex A regex that further restricts URL to the specified regex
         * 
         * @return builder
         * 
         */
        public Builder urlRegex(String urlRegex) {
            return urlRegex(Output.of(urlRegex));
        }

        /**
         * @param userNameTemplate Username template
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplate(@Nullable Output<String> userNameTemplate) {
            $.userNameTemplate = userNameTemplate;
            return this;
        }

        /**
         * @param userNameTemplate Username template
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplate(String userNameTemplate) {
            return userNameTemplate(Output.of(userNameTemplate));
        }

        /**
         * @param userNameTemplatePushStatus Push username on update
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplatePushStatus(@Nullable Output<String> userNameTemplatePushStatus) {
            $.userNameTemplatePushStatus = userNameTemplatePushStatus;
            return this;
        }

        /**
         * @param userNameTemplatePushStatus Push username on update
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplatePushStatus(String userNameTemplatePushStatus) {
            return userNameTemplatePushStatus(Output.of(userNameTemplatePushStatus));
        }

        /**
         * @param userNameTemplateSuffix Username template suffix
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplateSuffix(@Nullable Output<String> userNameTemplateSuffix) {
            $.userNameTemplateSuffix = userNameTemplateSuffix;
            return this;
        }

        /**
         * @param userNameTemplateSuffix Username template suffix
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplateSuffix(String userNameTemplateSuffix) {
            return userNameTemplateSuffix(Output.of(userNameTemplateSuffix));
        }

        /**
         * @param userNameTemplateType Username template type
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplateType(@Nullable Output<String> userNameTemplateType) {
            $.userNameTemplateType = userNameTemplateType;
            return this;
        }

        /**
         * @param userNameTemplateType Username template type
         * 
         * @return builder
         * 
         */
        public Builder userNameTemplateType(String userNameTemplateType) {
            return userNameTemplateType(Output.of(userNameTemplateType));
        }

        /**
         * @param usernameSelector Login username field CSS selector
         * 
         * @return builder
         * 
         */
        public Builder usernameSelector(Output<String> usernameSelector) {
            $.usernameSelector = usernameSelector;
            return this;
        }

        /**
         * @param usernameSelector Login username field CSS selector
         * 
         * @return builder
         * 
         */
        public Builder usernameSelector(String usernameSelector) {
            return usernameSelector(Output.of(usernameSelector));
        }

        /**
         * @param users Users associated with the application
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
        public Builder users(@Nullable Output<List<ThreeFieldAppUserArgs>> users) {
            $.users = users;
            return this;
        }

        /**
         * @param users Users associated with the application
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
        public Builder users(List<ThreeFieldAppUserArgs> users) {
            return users(Output.of(users));
        }

        /**
         * @param users Users associated with the application
         * 
         * @return builder
         * 
         * @deprecated
         * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
         * 
         */
        @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
        public Builder users(ThreeFieldAppUserArgs... users) {
            return users(List.of(users));
        }

        public ThreeFieldAppArgs build() {
            $.buttonSelector = Objects.requireNonNull($.buttonSelector, "expected parameter 'buttonSelector' to be non-null");
            $.extraFieldSelector = Objects.requireNonNull($.extraFieldSelector, "expected parameter 'extraFieldSelector' to be non-null");
            $.extraFieldValue = Objects.requireNonNull($.extraFieldValue, "expected parameter 'extraFieldValue' to be non-null");
            $.label = Objects.requireNonNull($.label, "expected parameter 'label' to be non-null");
            $.passwordSelector = Objects.requireNonNull($.passwordSelector, "expected parameter 'passwordSelector' to be non-null");
            $.url = Objects.requireNonNull($.url, "expected parameter 'url' to be non-null");
            $.usernameSelector = Objects.requireNonNull($.usernameSelector, "expected parameter 'usernameSelector' to be non-null");
            return $;
        }
    }

}

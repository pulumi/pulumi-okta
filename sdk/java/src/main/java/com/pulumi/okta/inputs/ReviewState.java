// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReviewState extends com.pulumi.resources.ResourceArgs {

    public static final ReviewState Empty = new ReviewState();

    /**
     * The id of the campaign.
     * 
     */
    @Import(name="campaignId")
    private @Nullable Output<String> campaignId;

    /**
     * @return The id of the campaign.
     * 
     */
    public Optional<Output<String>> campaignId() {
        return Optional.ofNullable(this.campaignId);
    }

    /**
     * The ISO 8601 formatted date and time when the resource was created
     * 
     */
    @Import(name="created")
    private @Nullable Output<String> created;

    /**
     * @return The ISO 8601 formatted date and time when the resource was created
     * 
     */
    public Optional<Output<String>> created() {
        return Optional.ofNullable(this.created);
    }

    /**
     * The id of user who created the resource.
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return The id of user who created the resource.
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * The decision of the reviewer.
     * 
     */
    @Import(name="decision")
    private @Nullable Output<String> decision;

    /**
     * @return The decision of the reviewer.
     * 
     */
    public Optional<Output<String>> decision() {
        return Optional.ofNullable(this.decision);
    }

    /**
     * The ISO 8601 formatted date and time when the object was last updated.
     * 
     */
    @Import(name="lastUpdated")
    private @Nullable Output<String> lastUpdated;

    /**
     * @return The ISO 8601 formatted date and time when the object was last updated.
     * 
     */
    public Optional<Output<String>> lastUpdated() {
        return Optional.ofNullable(this.lastUpdated);
    }

    /**
     * The id of user who last updated the object.
     * 
     */
    @Import(name="lastUpdatedBy")
    private @Nullable Output<String> lastUpdatedBy;

    /**
     * @return The id of user who last updated the object.
     * 
     */
    public Optional<Output<String>> lastUpdatedBy() {
        return Optional.ofNullable(this.lastUpdatedBy);
    }

    /**
     * A note to justify the reassignment decision for the specified review.
     * 
     */
    @Import(name="note")
    private @Nullable Output<String> note;

    /**
     * @return A note to justify the reassignment decision for the specified review.
     * 
     */
    public Optional<Output<String>> note() {
        return Optional.ofNullable(this.note);
    }

    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * A list of reviews (review id values) that are reassigned to the new reviewer.
     * 
     */
    @Import(name="reviewIds")
    private @Nullable Output<List<String>> reviewIds;

    /**
     * @return A list of reviews (review id values) that are reassigned to the new reviewer.
     * 
     */
    public Optional<Output<List<String>>> reviewIds() {
        return Optional.ofNullable(this.reviewIds);
    }

    /**
     * The Okta user id of the new reviewer.
     * 
     */
    @Import(name="reviewerId")
    private @Nullable Output<String> reviewerId;

    /**
     * @return The Okta user id of the new reviewer.
     * 
     */
    public Optional<Output<String>> reviewerId() {
        return Optional.ofNullable(this.reviewerId);
    }

    /**
     * Identifies the reviewer level of each reviews during access certification. Applicable for multi level campaigns only.
     * 
     */
    @Import(name="reviewerLevel")
    private @Nullable Output<String> reviewerLevel;

    /**
     * @return Identifies the reviewer level of each reviews during access certification. Applicable for multi level campaigns only.
     * 
     */
    public Optional<Output<String>> reviewerLevel() {
        return Optional.ofNullable(this.reviewerLevel);
    }

    /**
     * The type of reviewer to which the review is assigned.
     * 
     */
    @Import(name="reviewerType")
    private @Nullable Output<String> reviewerType;

    /**
     * @return The type of reviewer to which the review is assigned.
     * 
     */
    public Optional<Output<String>> reviewerType() {
        return Optional.ofNullable(this.reviewerType);
    }

    private ReviewState() {}

    private ReviewState(ReviewState $) {
        this.campaignId = $.campaignId;
        this.created = $.created;
        this.createdBy = $.createdBy;
        this.decision = $.decision;
        this.lastUpdated = $.lastUpdated;
        this.lastUpdatedBy = $.lastUpdatedBy;
        this.note = $.note;
        this.resourceId = $.resourceId;
        this.reviewIds = $.reviewIds;
        this.reviewerId = $.reviewerId;
        this.reviewerLevel = $.reviewerLevel;
        this.reviewerType = $.reviewerType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReviewState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReviewState $;

        public Builder() {
            $ = new ReviewState();
        }

        public Builder(ReviewState defaults) {
            $ = new ReviewState(Objects.requireNonNull(defaults));
        }

        /**
         * @param campaignId The id of the campaign.
         * 
         * @return builder
         * 
         */
        public Builder campaignId(@Nullable Output<String> campaignId) {
            $.campaignId = campaignId;
            return this;
        }

        /**
         * @param campaignId The id of the campaign.
         * 
         * @return builder
         * 
         */
        public Builder campaignId(String campaignId) {
            return campaignId(Output.of(campaignId));
        }

        /**
         * @param created The ISO 8601 formatted date and time when the resource was created
         * 
         * @return builder
         * 
         */
        public Builder created(@Nullable Output<String> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created The ISO 8601 formatted date and time when the resource was created
         * 
         * @return builder
         * 
         */
        public Builder created(String created) {
            return created(Output.of(created));
        }

        /**
         * @param createdBy The id of user who created the resource.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy The id of user who created the resource.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param decision The decision of the reviewer.
         * 
         * @return builder
         * 
         */
        public Builder decision(@Nullable Output<String> decision) {
            $.decision = decision;
            return this;
        }

        /**
         * @param decision The decision of the reviewer.
         * 
         * @return builder
         * 
         */
        public Builder decision(String decision) {
            return decision(Output.of(decision));
        }

        /**
         * @param lastUpdated The ISO 8601 formatted date and time when the object was last updated.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdated(@Nullable Output<String> lastUpdated) {
            $.lastUpdated = lastUpdated;
            return this;
        }

        /**
         * @param lastUpdated The ISO 8601 formatted date and time when the object was last updated.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdated(String lastUpdated) {
            return lastUpdated(Output.of(lastUpdated));
        }

        /**
         * @param lastUpdatedBy The id of user who last updated the object.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdatedBy(@Nullable Output<String> lastUpdatedBy) {
            $.lastUpdatedBy = lastUpdatedBy;
            return this;
        }

        /**
         * @param lastUpdatedBy The id of user who last updated the object.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdatedBy(String lastUpdatedBy) {
            return lastUpdatedBy(Output.of(lastUpdatedBy));
        }

        /**
         * @param note A note to justify the reassignment decision for the specified review.
         * 
         * @return builder
         * 
         */
        public Builder note(@Nullable Output<String> note) {
            $.note = note;
            return this;
        }

        /**
         * @param note A note to justify the reassignment decision for the specified review.
         * 
         * @return builder
         * 
         */
        public Builder note(String note) {
            return note(Output.of(note));
        }

        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param reviewIds A list of reviews (review id values) that are reassigned to the new reviewer.
         * 
         * @return builder
         * 
         */
        public Builder reviewIds(@Nullable Output<List<String>> reviewIds) {
            $.reviewIds = reviewIds;
            return this;
        }

        /**
         * @param reviewIds A list of reviews (review id values) that are reassigned to the new reviewer.
         * 
         * @return builder
         * 
         */
        public Builder reviewIds(List<String> reviewIds) {
            return reviewIds(Output.of(reviewIds));
        }

        /**
         * @param reviewIds A list of reviews (review id values) that are reassigned to the new reviewer.
         * 
         * @return builder
         * 
         */
        public Builder reviewIds(String... reviewIds) {
            return reviewIds(List.of(reviewIds));
        }

        /**
         * @param reviewerId The Okta user id of the new reviewer.
         * 
         * @return builder
         * 
         */
        public Builder reviewerId(@Nullable Output<String> reviewerId) {
            $.reviewerId = reviewerId;
            return this;
        }

        /**
         * @param reviewerId The Okta user id of the new reviewer.
         * 
         * @return builder
         * 
         */
        public Builder reviewerId(String reviewerId) {
            return reviewerId(Output.of(reviewerId));
        }

        /**
         * @param reviewerLevel Identifies the reviewer level of each reviews during access certification. Applicable for multi level campaigns only.
         * 
         * @return builder
         * 
         */
        public Builder reviewerLevel(@Nullable Output<String> reviewerLevel) {
            $.reviewerLevel = reviewerLevel;
            return this;
        }

        /**
         * @param reviewerLevel Identifies the reviewer level of each reviews during access certification. Applicable for multi level campaigns only.
         * 
         * @return builder
         * 
         */
        public Builder reviewerLevel(String reviewerLevel) {
            return reviewerLevel(Output.of(reviewerLevel));
        }

        /**
         * @param reviewerType The type of reviewer to which the review is assigned.
         * 
         * @return builder
         * 
         */
        public Builder reviewerType(@Nullable Output<String> reviewerType) {
            $.reviewerType = reviewerType;
            return this;
        }

        /**
         * @param reviewerType The type of reviewer to which the review is assigned.
         * 
         * @return builder
         * 
         */
        public Builder reviewerType(String reviewerType) {
            return reviewerType(Output.of(reviewerType));
        }

        public ReviewState build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.AppSharedCredentialsArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.AppSharedCredentialsState;
import com.pulumi.okta.outputs.AppSharedCredentialsUser;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource allows you to create and configure SWA shared credentials app.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.AppSharedCredentials;
 * import com.pulumi.okta.AppSharedCredentialsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new AppSharedCredentials(&#34;example&#34;, AppSharedCredentialsArgs.builder()        
 *             .accessibilityErrorRedirectUrl(&#34;https://example.com/redirect_url_1&#34;)
 *             .accessibilityLoginRedirectUrl(&#34;https://example.com/redirect_url_2&#34;)
 *             .accessibilitySelfService(true)
 *             .autoSubmitToolbar(true)
 *             .buttonField(&#34;btn-login&#34;)
 *             .checkbox(&#34;checkbox_red&#34;)
 *             .hideIos(true)
 *             .label(&#34;Example App&#34;)
 *             .passwordField(&#34;txtbox-password&#34;)
 *             .redirectUrl(&#34;https://example.com/redirect_url&#34;)
 *             .sharedPassword(&#34;sharedpass&#34;)
 *             .sharedUsername(&#34;sharedusername&#34;)
 *             .status(&#34;ACTIVE&#34;)
 *             .url(&#34;https://example.com/login.html&#34;)
 *             .userNameTemplate(&#34;user.firstName&#34;)
 *             .userNameTemplateSuffix(&#34;hello&#34;)
 *             .userNameTemplateType(&#34;CUSTOM&#34;)
 *             .usernameField(&#34;txtbox-username&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Okta SWA Shared Credentials App can be imported via the Okta ID.
 * 
 * ```sh
 *  $ pulumi import okta:index/appSharedCredentials:AppSharedCredentials example &amp;#60;app id&amp;#62;
 * ```
 * 
 *  It&#39;s also possible to import app without groups or/and users. In this case ID may look like this
 * 
 * ```sh
 *  $ pulumi import okta:index/appSharedCredentials:AppSharedCredentials example &amp;#60;app id&amp;#62;/skip_users
 * ```
 * 
 * ```sh
 *  $ pulumi import okta:index/appSharedCredentials:AppSharedCredentials example &amp;#60;app id&amp;#62;/skip_users/skip_groups
 * ```
 * 
 * ```sh
 *  $ pulumi import okta:index/appSharedCredentials:AppSharedCredentials example &amp;#60;app id&amp;#62;/skip_groups
 * ```
 * 
 */
@ResourceType(type="okta:index/appSharedCredentials:AppSharedCredentials")
public class AppSharedCredentials extends com.pulumi.resources.CustomResource {
    /**
     * Custom error page URL.
     * 
     */
    @Export(name="accessibilityErrorRedirectUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> accessibilityErrorRedirectUrl;

    /**
     * @return Custom error page URL.
     * 
     */
    public Output<Optional<String>> accessibilityErrorRedirectUrl() {
        return Codegen.optional(this.accessibilityErrorRedirectUrl);
    }
    /**
     * Custom login page for this application.
     * 
     */
    @Export(name="accessibilityLoginRedirectUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> accessibilityLoginRedirectUrl;

    /**
     * @return Custom login page for this application.
     * 
     */
    public Output<Optional<String>> accessibilityLoginRedirectUrl() {
        return Codegen.optional(this.accessibilityLoginRedirectUrl);
    }
    /**
     * Enable self-service. By default, it is `false`.
     * 
     */
    @Export(name="accessibilitySelfService", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> accessibilitySelfService;

    /**
     * @return Enable self-service. By default, it is `false`.
     * 
     */
    public Output<Optional<Boolean>> accessibilitySelfService() {
        return Codegen.optional(this.accessibilitySelfService);
    }
    /**
     * Application notes for admins.
     * 
     */
    @Export(name="adminNote", type=String.class, parameters={})
    private Output</* @Nullable */ String> adminNote;

    /**
     * @return Application notes for admins.
     * 
     */
    public Output<Optional<String>> adminNote() {
        return Codegen.optional(this.adminNote);
    }
    /**
     * Displays specific appLinks for the app. The value for each application link should be boolean.
     * 
     */
    @Export(name="appLinksJson", type=String.class, parameters={})
    private Output</* @Nullable */ String> appLinksJson;

    /**
     * @return Displays specific appLinks for the app. The value for each application link should be boolean.
     * 
     */
    public Output<Optional<String>> appLinksJson() {
        return Codegen.optional(this.appLinksJson);
    }
    /**
     * Display auto submit toolbar.
     * 
     */
    @Export(name="autoSubmitToolbar", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> autoSubmitToolbar;

    /**
     * @return Display auto submit toolbar.
     * 
     */
    public Output<Optional<Boolean>> autoSubmitToolbar() {
        return Codegen.optional(this.autoSubmitToolbar);
    }
    /**
     * CSS selector for the Sign-In button in the sign-in form.
     * 
     */
    @Export(name="buttonField", type=String.class, parameters={})
    private Output</* @Nullable */ String> buttonField;

    /**
     * @return CSS selector for the Sign-In button in the sign-in form.
     * 
     */
    public Output<Optional<String>> buttonField() {
        return Codegen.optional(this.buttonField);
    }
    /**
     * CSS selector for the checkbox.
     * 
     */
    @Export(name="checkbox", type=String.class, parameters={})
    private Output</* @Nullable */ String> checkbox;

    /**
     * @return CSS selector for the checkbox.
     * 
     */
    public Output<Optional<String>> checkbox() {
        return Codegen.optional(this.checkbox);
    }
    /**
     * Application notes for end users.
     * 
     */
    @Export(name="enduserNote", type=String.class, parameters={})
    private Output</* @Nullable */ String> enduserNote;

    /**
     * @return Application notes for end users.
     * 
     */
    public Output<Optional<String>> enduserNote() {
        return Codegen.optional(this.enduserNote);
    }
    /**
     * Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.
     * - `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.
     * 
     * @deprecated
     * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
    @Export(name="groups", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> groups;

    /**
     * @return Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.
     * - `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.
     * 
     */
    public Output<Optional<List<String>>> groups() {
        return Codegen.optional(this.groups);
    }
    /**
     * Do not display application icon on mobile app.
     * 
     */
    @Export(name="hideIos", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> hideIos;

    /**
     * @return Do not display application icon on mobile app.
     * 
     */
    public Output<Optional<Boolean>> hideIos() {
        return Codegen.optional(this.hideIos);
    }
    /**
     * Do not display application icon to users.
     * 
     */
    @Export(name="hideWeb", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> hideWeb;

    /**
     * @return Do not display application icon to users.
     * 
     */
    public Output<Optional<Boolean>> hideWeb() {
        return Codegen.optional(this.hideWeb);
    }
    /**
     * The Application&#39;s display name.
     * 
     */
    @Export(name="label", type=String.class, parameters={})
    private Output<String> label;

    /**
     * @return The Application&#39;s display name.
     * 
     */
    public Output<String> label() {
        return this.label;
    }
    /**
     * Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     * 
     */
    @Export(name="logo", type=String.class, parameters={})
    private Output</* @Nullable */ String> logo;

    /**
     * @return Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     * 
     */
    public Output<Optional<String>> logo() {
        return Codegen.optional(this.logo);
    }
    /**
     * Direct link of application logo.
     * 
     */
    @Export(name="logoUrl", type=String.class, parameters={})
    private Output<String> logoUrl;

    /**
     * @return Direct link of application logo.
     * 
     */
    public Output<String> logoUrl() {
        return this.logoUrl;
    }
    /**
     * Name assigned to the application by Okta.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name assigned to the application by Okta.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * CSS selector for the Password field in the sign-in form.
     * 
     */
    @Export(name="passwordField", type=String.class, parameters={})
    private Output</* @Nullable */ String> passwordField;

    /**
     * @return CSS selector for the Password field in the sign-in form.
     * 
     */
    public Output<Optional<String>> passwordField() {
        return Codegen.optional(this.passwordField);
    }
    /**
     * name of application from the Okta Integration Network, if not included a custom app will be created.
     * 
     */
    @Export(name="preconfiguredApp", type=String.class, parameters={})
    private Output</* @Nullable */ String> preconfiguredApp;

    /**
     * @return name of application from the Okta Integration Network, if not included a custom app will be created.
     * 
     */
    public Output<Optional<String>> preconfiguredApp() {
        return Codegen.optional(this.preconfiguredApp);
    }
    /**
     * Redirect URL. If going to the login page URL redirects to another page, then enter that URL here.
     * 
     */
    @Export(name="redirectUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> redirectUrl;

    /**
     * @return Redirect URL. If going to the login page URL redirects to another page, then enter that URL here.
     * 
     */
    public Output<Optional<String>> redirectUrl() {
        return Codegen.optional(this.redirectUrl);
    }
    /**
     * Shared password, required for certain schemes.
     * 
     */
    @Export(name="sharedPassword", type=String.class, parameters={})
    private Output</* @Nullable */ String> sharedPassword;

    /**
     * @return Shared password, required for certain schemes.
     * 
     */
    public Output<Optional<String>> sharedPassword() {
        return Codegen.optional(this.sharedPassword);
    }
    /**
     * Shared username, required for certain schemes.
     * 
     */
    @Export(name="sharedUsername", type=String.class, parameters={})
    private Output</* @Nullable */ String> sharedUsername;

    /**
     * @return Shared username, required for certain schemes.
     * 
     */
    public Output<Optional<String>> sharedUsername() {
        return Codegen.optional(this.sharedUsername);
    }
    /**
     * Authentication mode of app.
     * 
     */
    @Export(name="signOnMode", type=String.class, parameters={})
    private Output<String> signOnMode;

    /**
     * @return Authentication mode of app.
     * 
     */
    public Output<String> signOnMode() {
        return this.signOnMode;
    }
    /**
     * Indicator that allows the app to skip `groups` sync (it&#39;s also can be provided during import). Default is `false`.
     * 
     */
    @Export(name="skipGroups", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> skipGroups;

    /**
     * @return Indicator that allows the app to skip `groups` sync (it&#39;s also can be provided during import). Default is `false`.
     * 
     */
    public Output<Optional<Boolean>> skipGroups() {
        return Codegen.optional(this.skipGroups);
    }
    /**
     * Indicator that allows the app to skip `users` sync (it&#39;s also can be provided during import). Default is `false`.
     * 
     */
    @Export(name="skipUsers", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> skipUsers;

    /**
     * @return Indicator that allows the app to skip `users` sync (it&#39;s also can be provided during import). Default is `false`.
     * 
     */
    public Output<Optional<Boolean>> skipUsers() {
        return Codegen.optional(this.skipUsers);
    }
    /**
     * The status of the application, by default, it is `&#34;ACTIVE&#34;`.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output</* @Nullable */ String> status;

    /**
     * @return The status of the application, by default, it is `&#34;ACTIVE&#34;`.
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * The URL of the sign-in page for this app.
     * 
     */
    @Export(name="url", type=String.class, parameters={})
    private Output</* @Nullable */ String> url;

    /**
     * @return The URL of the sign-in page for this app.
     * 
     */
    public Output<Optional<String>> url() {
        return Codegen.optional(this.url);
    }
    /**
     * A regular expression that further restricts url to the specified regular expression.
     * 
     */
    @Export(name="urlRegex", type=String.class, parameters={})
    private Output</* @Nullable */ String> urlRegex;

    /**
     * @return A regular expression that further restricts url to the specified regular expression.
     * 
     */
    public Output<Optional<String>> urlRegex() {
        return Codegen.optional(this.urlRegex);
    }
    /**
     * Username template. Default: `&#34;${source.login}&#34;`
     * 
     */
    @Export(name="userNameTemplate", type=String.class, parameters={})
    private Output</* @Nullable */ String> userNameTemplate;

    /**
     * @return Username template. Default: `&#34;${source.login}&#34;`
     * 
     */
    public Output<Optional<String>> userNameTemplate() {
        return Codegen.optional(this.userNameTemplate);
    }
    /**
     * Push username on update. Valid values: `&#34;PUSH&#34;` and `&#34;DONT_PUSH&#34;`.
     * 
     */
    @Export(name="userNameTemplatePushStatus", type=String.class, parameters={})
    private Output</* @Nullable */ String> userNameTemplatePushStatus;

    /**
     * @return Push username on update. Valid values: `&#34;PUSH&#34;` and `&#34;DONT_PUSH&#34;`.
     * 
     */
    public Output<Optional<String>> userNameTemplatePushStatus() {
        return Codegen.optional(this.userNameTemplatePushStatus);
    }
    /**
     * Username template suffix.
     * 
     */
    @Export(name="userNameTemplateSuffix", type=String.class, parameters={})
    private Output</* @Nullable */ String> userNameTemplateSuffix;

    /**
     * @return Username template suffix.
     * 
     */
    public Output<Optional<String>> userNameTemplateSuffix() {
        return Codegen.optional(this.userNameTemplateSuffix);
    }
    /**
     * Username template type. Default: `&#34;BUILT_IN&#34;`.
     * 
     */
    @Export(name="userNameTemplateType", type=String.class, parameters={})
    private Output</* @Nullable */ String> userNameTemplateType;

    /**
     * @return Username template type. Default: `&#34;BUILT_IN&#34;`.
     * 
     */
    public Output<Optional<String>> userNameTemplateType() {
        return Codegen.optional(this.userNameTemplateType);
    }
    /**
     * CSS selector for the username field.
     * 
     */
    @Export(name="usernameField", type=String.class, parameters={})
    private Output</* @Nullable */ String> usernameField;

    /**
     * @return CSS selector for the username field.
     * 
     */
    public Output<Optional<String>> usernameField() {
        return Codegen.optional(this.usernameField);
    }
    /**
     * The users assigned to the application. See `okta.app.User` for a more flexible approach.
     * - `DEPRECATED`: Please replace usage with the `okta.app.User` resource.
     * 
     * @deprecated
     * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
    @Export(name="users", type=List.class, parameters={AppSharedCredentialsUser.class})
    private Output</* @Nullable */ List<AppSharedCredentialsUser>> users;

    /**
     * @return The users assigned to the application. See `okta.app.User` for a more flexible approach.
     * - `DEPRECATED`: Please replace usage with the `okta.app.User` resource.
     * 
     */
    public Output<Optional<List<AppSharedCredentialsUser>>> users() {
        return Codegen.optional(this.users);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AppSharedCredentials(String name) {
        this(name, AppSharedCredentialsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AppSharedCredentials(String name, AppSharedCredentialsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AppSharedCredentials(String name, AppSharedCredentialsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/appSharedCredentials:AppSharedCredentials", name, args == null ? AppSharedCredentialsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AppSharedCredentials(String name, Output<String> id, @Nullable AppSharedCredentialsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/appSharedCredentials:AppSharedCredentials", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AppSharedCredentials get(String name, Output<String> id, @Nullable AppSharedCredentialsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AppSharedCredentials(name, id, state, options);
    }
}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.inputs.GetCatalogEntryDefaultCounts;
import com.pulumi.okta.inputs.GetCatalogEntryDefaultLinks;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCatalogEntryDefaultPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCatalogEntryDefaultPlainArgs Empty = new GetCatalogEntryDefaultPlainArgs();

    @Import(name="counts")
    private @Nullable GetCatalogEntryDefaultCounts counts;

    public Optional<GetCatalogEntryDefaultCounts> counts() {
        return Optional.ofNullable(this.counts);
    }

    /**
     * TThe ID of the catalog entry.
     * 
     */
    @Import(name="entryId", required=true)
    private String entryId;

    /**
     * @return TThe ID of the catalog entry.
     * 
     */
    public String entryId() {
        return this.entryId;
    }

    @Import(name="links")
    private @Nullable GetCatalogEntryDefaultLinks links;

    public Optional<GetCatalogEntryDefaultLinks> links() {
        return Optional.ofNullable(this.links);
    }

    private GetCatalogEntryDefaultPlainArgs() {}

    private GetCatalogEntryDefaultPlainArgs(GetCatalogEntryDefaultPlainArgs $) {
        this.counts = $.counts;
        this.entryId = $.entryId;
        this.links = $.links;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCatalogEntryDefaultPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCatalogEntryDefaultPlainArgs $;

        public Builder() {
            $ = new GetCatalogEntryDefaultPlainArgs();
        }

        public Builder(GetCatalogEntryDefaultPlainArgs defaults) {
            $ = new GetCatalogEntryDefaultPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder counts(@Nullable GetCatalogEntryDefaultCounts counts) {
            $.counts = counts;
            return this;
        }

        /**
         * @param entryId TThe ID of the catalog entry.
         * 
         * @return builder
         * 
         */
        public Builder entryId(String entryId) {
            $.entryId = entryId;
            return this;
        }

        public Builder links(@Nullable GetCatalogEntryDefaultLinks links) {
            $.links = links;
            return this;
        }

        public GetCatalogEntryDefaultPlainArgs build() {
            if ($.entryId == null) {
                throw new MissingRequiredPropertyException("GetCatalogEntryDefaultPlainArgs", "entryId");
            }
            return $;
        }
    }

}

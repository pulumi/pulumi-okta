// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.okta.inputs.RequestConditionAccessDurationSettingsArgs;
import com.pulumi.okta.inputs.RequestConditionAccessScopeSettingsArgs;
import com.pulumi.okta.inputs.RequestConditionRequesterSettingsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RequestConditionState extends com.pulumi.resources.ResourceArgs {

    public static final RequestConditionState Empty = new RequestConditionState();

    /**
     * The access duration settings for the request condition
     * 
     */
    @Import(name="accessDurationSettings")
    private @Nullable Output<RequestConditionAccessDurationSettingsArgs> accessDurationSettings;

    /**
     * @return The access duration settings for the request condition
     * 
     */
    public Optional<Output<RequestConditionAccessDurationSettingsArgs>> accessDurationSettings() {
        return Optional.ofNullable(this.accessDurationSettings);
    }

    @Import(name="accessScopeSettings")
    private @Nullable Output<RequestConditionAccessScopeSettingsArgs> accessScopeSettings;

    public Optional<Output<RequestConditionAccessScopeSettingsArgs>> accessScopeSettings() {
        return Optional.ofNullable(this.accessScopeSettings);
    }

    /**
     * The ID of the approval sequence.
     * 
     */
    @Import(name="approvalSequenceId")
    private @Nullable Output<String> approvalSequenceId;

    /**
     * @return The ID of the approval sequence.
     * 
     */
    public Optional<Output<String>> approvalSequenceId() {
        return Optional.ofNullable(this.approvalSequenceId);
    }

    /**
     * The date and time when the request condition was created.
     * 
     */
    @Import(name="created")
    private @Nullable Output<String> created;

    /**
     * @return The date and time when the request condition was created.
     * 
     */
    public Optional<Output<String>> created() {
        return Optional.ofNullable(this.created);
    }

    /**
     * The id of the user who created the request condition.
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return The id of the user who created the request condition.
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * The description of the request condition.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the request condition.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The date and time when the request condition was last updated.
     * 
     */
    @Import(name="lastUpdated")
    private @Nullable Output<String> lastUpdated;

    /**
     * @return The date and time when the request condition was last updated.
     * 
     */
    public Optional<Output<String>> lastUpdated() {
        return Optional.ofNullable(this.lastUpdated);
    }

    /**
     * The id of the user who last updated the request condition.
     * 
     */
    @Import(name="lastUpdatedBy")
    private @Nullable Output<String> lastUpdatedBy;

    /**
     * @return The id of the user who last updated the request condition.
     * 
     */
    public Optional<Output<String>> lastUpdatedBy() {
        return Optional.ofNullable(this.lastUpdatedBy);
    }

    /**
     * The name of the request condition.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the request condition.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The priority of the request condition. Lower numbers indicate higher priority.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return The priority of the request condition. Lower numbers indicate higher priority.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    @Import(name="requesterSettings")
    private @Nullable Output<RequestConditionRequesterSettingsArgs> requesterSettings;

    public Optional<Output<RequestConditionRequesterSettingsArgs>> requesterSettings() {
        return Optional.ofNullable(this.requesterSettings);
    }

    /**
     * The id of the resource in Okta ID format.
     * 
     */
    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    /**
     * @return The id of the resource in Okta ID format.
     * 
     */
    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * Status indicates if this condition is active or not. Default status is INACTIVE. Enum: `ACTIVE`, `INACTIVE`, `DELETED`, `INVALID`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status indicates if this condition is active or not. Default status is INACTIVE. Enum: `ACTIVE`, `INACTIVE`, `DELETED`, `INVALID`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private RequestConditionState() {}

    private RequestConditionState(RequestConditionState $) {
        this.accessDurationSettings = $.accessDurationSettings;
        this.accessScopeSettings = $.accessScopeSettings;
        this.approvalSequenceId = $.approvalSequenceId;
        this.created = $.created;
        this.createdBy = $.createdBy;
        this.description = $.description;
        this.lastUpdated = $.lastUpdated;
        this.lastUpdatedBy = $.lastUpdatedBy;
        this.name = $.name;
        this.priority = $.priority;
        this.requesterSettings = $.requesterSettings;
        this.resourceId = $.resourceId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RequestConditionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RequestConditionState $;

        public Builder() {
            $ = new RequestConditionState();
        }

        public Builder(RequestConditionState defaults) {
            $ = new RequestConditionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessDurationSettings The access duration settings for the request condition
         * 
         * @return builder
         * 
         */
        public Builder accessDurationSettings(@Nullable Output<RequestConditionAccessDurationSettingsArgs> accessDurationSettings) {
            $.accessDurationSettings = accessDurationSettings;
            return this;
        }

        /**
         * @param accessDurationSettings The access duration settings for the request condition
         * 
         * @return builder
         * 
         */
        public Builder accessDurationSettings(RequestConditionAccessDurationSettingsArgs accessDurationSettings) {
            return accessDurationSettings(Output.of(accessDurationSettings));
        }

        public Builder accessScopeSettings(@Nullable Output<RequestConditionAccessScopeSettingsArgs> accessScopeSettings) {
            $.accessScopeSettings = accessScopeSettings;
            return this;
        }

        public Builder accessScopeSettings(RequestConditionAccessScopeSettingsArgs accessScopeSettings) {
            return accessScopeSettings(Output.of(accessScopeSettings));
        }

        /**
         * @param approvalSequenceId The ID of the approval sequence.
         * 
         * @return builder
         * 
         */
        public Builder approvalSequenceId(@Nullable Output<String> approvalSequenceId) {
            $.approvalSequenceId = approvalSequenceId;
            return this;
        }

        /**
         * @param approvalSequenceId The ID of the approval sequence.
         * 
         * @return builder
         * 
         */
        public Builder approvalSequenceId(String approvalSequenceId) {
            return approvalSequenceId(Output.of(approvalSequenceId));
        }

        /**
         * @param created The date and time when the request condition was created.
         * 
         * @return builder
         * 
         */
        public Builder created(@Nullable Output<String> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created The date and time when the request condition was created.
         * 
         * @return builder
         * 
         */
        public Builder created(String created) {
            return created(Output.of(created));
        }

        /**
         * @param createdBy The id of the user who created the request condition.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy The id of the user who created the request condition.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param description The description of the request condition.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the request condition.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param lastUpdated The date and time when the request condition was last updated.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdated(@Nullable Output<String> lastUpdated) {
            $.lastUpdated = lastUpdated;
            return this;
        }

        /**
         * @param lastUpdated The date and time when the request condition was last updated.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdated(String lastUpdated) {
            return lastUpdated(Output.of(lastUpdated));
        }

        /**
         * @param lastUpdatedBy The id of the user who last updated the request condition.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdatedBy(@Nullable Output<String> lastUpdatedBy) {
            $.lastUpdatedBy = lastUpdatedBy;
            return this;
        }

        /**
         * @param lastUpdatedBy The id of the user who last updated the request condition.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdatedBy(String lastUpdatedBy) {
            return lastUpdatedBy(Output.of(lastUpdatedBy));
        }

        /**
         * @param name The name of the request condition.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the request condition.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param priority The priority of the request condition. Lower numbers indicate higher priority.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The priority of the request condition. Lower numbers indicate higher priority.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        public Builder requesterSettings(@Nullable Output<RequestConditionRequesterSettingsArgs> requesterSettings) {
            $.requesterSettings = requesterSettings;
            return this;
        }

        public Builder requesterSettings(RequestConditionRequesterSettingsArgs requesterSettings) {
            return requesterSettings(Output.of(requesterSettings));
        }

        /**
         * @param resourceId The id of the resource in Okta ID format.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId The id of the resource in Okta ID format.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param status Status indicates if this condition is active or not. Default status is INACTIVE. Enum: `ACTIVE`, `INACTIVE`, `DELETED`, `INVALID`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status indicates if this condition is active or not. Default status is INACTIVE. Enum: `ACTIVE`, `INACTIVE`, `DELETED`, `INVALID`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public RequestConditionState build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetThemeArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetThemeArgs Empty = new GetThemeArgs();

    /**
     * Brand ID
     * 
     */
    @Import(name="brandId", required=true)
    private Output<String> brandId;

    /**
     * @return Brand ID
     * 
     */
    public Output<String> brandId() {
        return this.brandId;
    }

    /**
     * Theme ID
     * 
     */
    @Import(name="themeId", required=true)
    private Output<String> themeId;

    /**
     * @return Theme ID
     * 
     */
    public Output<String> themeId() {
        return this.themeId;
    }

    private GetThemeArgs() {}

    private GetThemeArgs(GetThemeArgs $) {
        this.brandId = $.brandId;
        this.themeId = $.themeId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetThemeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetThemeArgs $;

        public Builder() {
            $ = new GetThemeArgs();
        }

        public Builder(GetThemeArgs defaults) {
            $ = new GetThemeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param brandId Brand ID
         * 
         * @return builder
         * 
         */
        public Builder brandId(Output<String> brandId) {
            $.brandId = brandId;
            return this;
        }

        /**
         * @param brandId Brand ID
         * 
         * @return builder
         * 
         */
        public Builder brandId(String brandId) {
            return brandId(Output.of(brandId));
        }

        /**
         * @param themeId Theme ID
         * 
         * @return builder
         * 
         */
        public Builder themeId(Output<String> themeId) {
            $.themeId = themeId;
            return this;
        }

        /**
         * @param themeId Theme ID
         * 
         * @return builder
         * 
         */
        public Builder themeId(String themeId) {
            return themeId(Output.of(themeId));
        }

        public GetThemeArgs build() {
            if ($.brandId == null) {
                throw new MissingRequiredPropertyException("GetThemeArgs", "brandId");
            }
            if ($.themeId == null) {
                throw new MissingRequiredPropertyException("GetThemeArgs", "themeId");
            }
            return $;
        }
    }

}

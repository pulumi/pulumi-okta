// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.deprecated;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.deprecated.SamlAppArgs;
import com.pulumi.okta.deprecated.inputs.SamlAppState;
import com.pulumi.okta.deprecated.outputs.SamlAppAttributeStatement;
import com.pulumi.okta.deprecated.outputs.SamlAppKey;
import com.pulumi.okta.deprecated.outputs.SamlAppUser;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * @deprecated
 * Deprecated. Use app.Saml instead. This resource will be removed in version 4.0 of this provider.
 * 
 */
@Deprecated /* Deprecated. Use app.Saml instead. This resource will be removed in version 4.0 of this provider. */
@ResourceType(type="okta:deprecated/samlApp:SamlApp")
public class SamlApp extends com.pulumi.resources.CustomResource {
    /**
     * Custom error page URL
     * 
     */
    @Export(name="accessibilityErrorRedirectUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> accessibilityErrorRedirectUrl;

    /**
     * @return Custom error page URL
     * 
     */
    public Output<Optional<String>> accessibilityErrorRedirectUrl() {
        return Codegen.optional(this.accessibilityErrorRedirectUrl);
    }
    /**
     * Custom login page URL
     * 
     */
    @Export(name="accessibilityLoginRedirectUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> accessibilityLoginRedirectUrl;

    /**
     * @return Custom login page URL
     * 
     */
    public Output<Optional<String>> accessibilityLoginRedirectUrl() {
        return Codegen.optional(this.accessibilityLoginRedirectUrl);
    }
    /**
     * Enable self service
     * 
     */
    @Export(name="accessibilitySelfService", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> accessibilitySelfService;

    /**
     * @return Enable self service
     * 
     */
    public Output<Optional<Boolean>> accessibilitySelfService() {
        return Codegen.optional(this.accessibilitySelfService);
    }
    /**
     * List of ACS endpoints for this SAML application
     * 
     */
    @Export(name="acsEndpoints", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> acsEndpoints;

    /**
     * @return List of ACS endpoints for this SAML application
     * 
     */
    public Output<Optional<List<String>>> acsEndpoints() {
        return Codegen.optional(this.acsEndpoints);
    }
    /**
     * Application notes for admins.
     * 
     */
    @Export(name="adminNote", type=String.class, parameters={})
    private Output</* @Nullable */ String> adminNote;

    /**
     * @return Application notes for admins.
     * 
     */
    public Output<Optional<String>> adminNote() {
        return Codegen.optional(this.adminNote);
    }
    /**
     * Displays specific appLinks for the app
     * 
     */
    @Export(name="appLinksJson", type=String.class, parameters={})
    private Output</* @Nullable */ String> appLinksJson;

    /**
     * @return Displays specific appLinks for the app
     * 
     */
    public Output<Optional<String>> appLinksJson() {
        return Codegen.optional(this.appLinksJson);
    }
    /**
     * Application settings in JSON format
     * 
     */
    @Export(name="appSettingsJson", type=String.class, parameters={})
    private Output</* @Nullable */ String> appSettingsJson;

    /**
     * @return Application settings in JSON format
     * 
     */
    public Output<Optional<String>> appSettingsJson() {
        return Codegen.optional(this.appSettingsJson);
    }
    /**
     * Determines whether the SAML assertion is digitally signed
     * 
     */
    @Export(name="assertionSigned", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> assertionSigned;

    /**
     * @return Determines whether the SAML assertion is digitally signed
     * 
     */
    public Output<Optional<Boolean>> assertionSigned() {
        return Codegen.optional(this.assertionSigned);
    }
    @Export(name="attributeStatements", type=List.class, parameters={SamlAppAttributeStatement.class})
    private Output</* @Nullable */ List<SamlAppAttributeStatement>> attributeStatements;

    public Output<Optional<List<SamlAppAttributeStatement>>> attributeStatements() {
        return Codegen.optional(this.attributeStatements);
    }
    /**
     * Audience Restriction
     * 
     */
    @Export(name="audience", type=String.class, parameters={})
    private Output</* @Nullable */ String> audience;

    /**
     * @return Audience Restriction
     * 
     */
    public Output<Optional<String>> audience() {
        return Codegen.optional(this.audience);
    }
    /**
     * Id of this apps authentication policy
     * 
     */
    @Export(name="authenticationPolicy", type=String.class, parameters={})
    private Output</* @Nullable */ String> authenticationPolicy;

    /**
     * @return Id of this apps authentication policy
     * 
     */
    public Output<Optional<String>> authenticationPolicy() {
        return Codegen.optional(this.authenticationPolicy);
    }
    /**
     * Identifies the SAML authentication context class for the assertion’s authentication statement
     * 
     */
    @Export(name="authnContextClassRef", type=String.class, parameters={})
    private Output</* @Nullable */ String> authnContextClassRef;

    /**
     * @return Identifies the SAML authentication context class for the assertion’s authentication statement
     * 
     */
    public Output<Optional<String>> authnContextClassRef() {
        return Codegen.optional(this.authnContextClassRef);
    }
    /**
     * Display auto submit toolbar
     * 
     */
    @Export(name="autoSubmitToolbar", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> autoSubmitToolbar;

    /**
     * @return Display auto submit toolbar
     * 
     */
    public Output<Optional<Boolean>> autoSubmitToolbar() {
        return Codegen.optional(this.autoSubmitToolbar);
    }
    /**
     * cert from SAML XML metadata payload
     * 
     */
    @Export(name="certificate", type=String.class, parameters={})
    private Output<String> certificate;

    /**
     * @return cert from SAML XML metadata payload
     * 
     */
    public Output<String> certificate() {
        return this.certificate;
    }
    /**
     * Identifies a specific application resource in an IDP initiated SSO scenario.
     * 
     */
    @Export(name="defaultRelayState", type=String.class, parameters={})
    private Output</* @Nullable */ String> defaultRelayState;

    /**
     * @return Identifies a specific application resource in an IDP initiated SSO scenario.
     * 
     */
    public Output<Optional<String>> defaultRelayState() {
        return Codegen.optional(this.defaultRelayState);
    }
    /**
     * Identifies the location where the SAML response is intended to be sent inside of the SAML assertion
     * 
     */
    @Export(name="destination", type=String.class, parameters={})
    private Output</* @Nullable */ String> destination;

    /**
     * @return Identifies the location where the SAML response is intended to be sent inside of the SAML assertion
     * 
     */
    public Output<Optional<String>> destination() {
        return Codegen.optional(this.destination);
    }
    /**
     * Determines the digest algorithm used to digitally sign the SAML assertion and response
     * 
     */
    @Export(name="digestAlgorithm", type=String.class, parameters={})
    private Output</* @Nullable */ String> digestAlgorithm;

    /**
     * @return Determines the digest algorithm used to digitally sign the SAML assertion and response
     * 
     */
    public Output<Optional<String>> digestAlgorithm() {
        return Codegen.optional(this.digestAlgorithm);
    }
    /**
     * The url that can be used to embed this application in other portals.
     * 
     */
    @Export(name="embedUrl", type=String.class, parameters={})
    private Output<String> embedUrl;

    /**
     * @return The url that can be used to embed this application in other portals.
     * 
     */
    public Output<String> embedUrl() {
        return this.embedUrl;
    }
    /**
     * Application notes for end users.
     * 
     */
    @Export(name="enduserNote", type=String.class, parameters={})
    private Output</* @Nullable */ String> enduserNote;

    /**
     * @return Application notes for end users.
     * 
     */
    public Output<Optional<String>> enduserNote() {
        return Codegen.optional(this.enduserNote);
    }
    /**
     * Entity ID, the ID portion of the entity_url
     * 
     */
    @Export(name="entityKey", type=String.class, parameters={})
    private Output<String> entityKey;

    /**
     * @return Entity ID, the ID portion of the entity_url
     * 
     */
    public Output<String> entityKey() {
        return this.entityKey;
    }
    /**
     * Entity URL for instance http://www.okta.com/exk1fcia6d6EMsf331d8
     * 
     */
    @Export(name="entityUrl", type=String.class, parameters={})
    private Output<String> entityUrl;

    /**
     * @return Entity URL for instance http://www.okta.com/exk1fcia6d6EMsf331d8
     * 
     */
    public Output<String> entityUrl() {
        return this.entityUrl;
    }
    /**
     * features to enable
     * 
     */
    @Export(name="features", type=List.class, parameters={String.class})
    private Output<List<String>> features;

    /**
     * @return features to enable
     * 
     */
    public Output<List<String>> features() {
        return this.features;
    }
    /**
     * Groups associated with the application
     * 
     * @deprecated
     * The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality. */
    @Export(name="groups", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> groups;

    /**
     * @return Groups associated with the application
     * 
     */
    public Output<Optional<List<String>>> groups() {
        return Codegen.optional(this.groups);
    }
    /**
     * Do not display application icon on mobile app
     * 
     */
    @Export(name="hideIos", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> hideIos;

    /**
     * @return Do not display application icon on mobile app
     * 
     */
    public Output<Optional<Boolean>> hideIos() {
        return Codegen.optional(this.hideIos);
    }
    /**
     * Do not display application icon to users
     * 
     */
    @Export(name="hideWeb", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> hideWeb;

    /**
     * @return Do not display application icon to users
     * 
     */
    public Output<Optional<Boolean>> hideWeb() {
        return Codegen.optional(this.hideWeb);
    }
    /**
     * Prompt user to re-authenticate if SP asks for it
     * 
     */
    @Export(name="honorForceAuthn", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> honorForceAuthn;

    /**
     * @return Prompt user to re-authenticate if SP asks for it
     * 
     */
    public Output<Optional<Boolean>> honorForceAuthn() {
        return Codegen.optional(this.honorForceAuthn);
    }
    /**
     * urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.
     * 
     */
    @Export(name="httpPostBinding", type=String.class, parameters={})
    private Output<String> httpPostBinding;

    /**
     * @return urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.
     * 
     */
    public Output<String> httpPostBinding() {
        return this.httpPostBinding;
    }
    /**
     * urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.
     * 
     */
    @Export(name="httpRedirectBinding", type=String.class, parameters={})
    private Output<String> httpRedirectBinding;

    /**
     * @return urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.
     * 
     */
    public Output<String> httpRedirectBinding() {
        return this.httpRedirectBinding;
    }
    /**
     * SAML issuer ID
     * 
     */
    @Export(name="idpIssuer", type=String.class, parameters={})
    private Output</* @Nullable */ String> idpIssuer;

    /**
     * @return SAML issuer ID
     * 
     */
    public Output<Optional<String>> idpIssuer() {
        return Codegen.optional(this.idpIssuer);
    }
    /**
     * *Early Access Property*. Enable Federation Broker Mode.
     * 
     */
    @Export(name="implicitAssignment", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> implicitAssignment;

    /**
     * @return *Early Access Property*. Enable Federation Broker Mode.
     * 
     */
    public Output<Optional<Boolean>> implicitAssignment() {
        return Codegen.optional(this.implicitAssignment);
    }
    /**
     * Saml Inline Hook setting
     * 
     */
    @Export(name="inlineHookId", type=String.class, parameters={})
    private Output</* @Nullable */ String> inlineHookId;

    /**
     * @return Saml Inline Hook setting
     * 
     */
    public Output<Optional<String>> inlineHookId() {
        return Codegen.optional(this.inlineHookId);
    }
    /**
     * Certificate ID
     * 
     */
    @Export(name="keyId", type=String.class, parameters={})
    private Output<String> keyId;

    /**
     * @return Certificate ID
     * 
     */
    public Output<String> keyId() {
        return this.keyId;
    }
    /**
     * Certificate name. This modulates the rotation of keys. New name == new key.
     * 
     */
    @Export(name="keyName", type=String.class, parameters={})
    private Output</* @Nullable */ String> keyName;

    /**
     * @return Certificate name. This modulates the rotation of keys. New name == new key.
     * 
     */
    public Output<Optional<String>> keyName() {
        return Codegen.optional(this.keyName);
    }
    /**
     * Number of years the certificate is valid.
     * 
     */
    @Export(name="keyYearsValid", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> keyYearsValid;

    /**
     * @return Number of years the certificate is valid.
     * 
     */
    public Output<Optional<Integer>> keyYearsValid() {
        return Codegen.optional(this.keyYearsValid);
    }
    /**
     * Application keys
     * 
     */
    @Export(name="keys", type=List.class, parameters={SamlAppKey.class})
    private Output<List<SamlAppKey>> keys;

    /**
     * @return Application keys
     * 
     */
    public Output<List<SamlAppKey>> keys() {
        return this.keys;
    }
    /**
     * Pretty name of app.
     * 
     */
    @Export(name="label", type=String.class, parameters={})
    private Output<String> label;

    /**
     * @return Pretty name of app.
     * 
     */
    public Output<String> label() {
        return this.label;
    }
    /**
     * Local path to logo of the application.
     * 
     */
    @Export(name="logo", type=String.class, parameters={})
    private Output</* @Nullable */ String> logo;

    /**
     * @return Local path to logo of the application.
     * 
     */
    public Output<Optional<String>> logo() {
        return Codegen.optional(this.logo);
    }
    /**
     * URL of the application&#39;s logo
     * 
     */
    @Export(name="logoUrl", type=String.class, parameters={})
    private Output<String> logoUrl;

    /**
     * @return URL of the application&#39;s logo
     * 
     */
    public Output<String> logoUrl() {
        return this.logoUrl;
    }
    /**
     * SAML xml metadata payload
     * 
     */
    @Export(name="metadata", type=String.class, parameters={})
    private Output<String> metadata;

    /**
     * @return SAML xml metadata payload
     * 
     */
    public Output<String> metadata() {
        return this.metadata;
    }
    /**
     * SAML xml metadata URL
     * 
     */
    @Export(name="metadataUrl", type=String.class, parameters={})
    private Output<String> metadataUrl;

    /**
     * @return SAML xml metadata URL
     * 
     */
    public Output<String> metadataUrl() {
        return this.metadataUrl;
    }
    /**
     * Name of the app.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the app.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Name of preexisting SAML application. For instance &#39;slack&#39;
     * 
     */
    @Export(name="preconfiguredApp", type=String.class, parameters={})
    private Output</* @Nullable */ String> preconfiguredApp;

    /**
     * @return Name of preexisting SAML application. For instance &#39;slack&#39;
     * 
     */
    public Output<Optional<String>> preconfiguredApp() {
        return Codegen.optional(this.preconfiguredApp);
    }
    /**
     * The location where the app may present the SAML assertion
     * 
     */
    @Export(name="recipient", type=String.class, parameters={})
    private Output</* @Nullable */ String> recipient;

    /**
     * @return The location where the app may present the SAML assertion
     * 
     */
    public Output<Optional<String>> recipient() {
        return Codegen.optional(this.recipient);
    }
    /**
     * Denotes whether the request is compressed or not.
     * 
     */
    @Export(name="requestCompressed", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> requestCompressed;

    /**
     * @return Denotes whether the request is compressed or not.
     * 
     */
    public Output<Optional<Boolean>> requestCompressed() {
        return Codegen.optional(this.requestCompressed);
    }
    /**
     * Determines whether the SAML auth response message is digitally signed
     * 
     */
    @Export(name="responseSigned", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> responseSigned;

    /**
     * @return Determines whether the SAML auth response message is digitally signed
     * 
     */
    public Output<Optional<Boolean>> responseSigned() {
        return Codegen.optional(this.responseSigned);
    }
    /**
     * SAML Signed Request enabled
     * 
     */
    @Export(name="samlSignedRequestEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> samlSignedRequestEnabled;

    /**
     * @return SAML Signed Request enabled
     * 
     */
    public Output<Optional<Boolean>> samlSignedRequestEnabled() {
        return Codegen.optional(this.samlSignedRequestEnabled);
    }
    /**
     * SAML version for the app&#39;s sign-on mode
     * 
     */
    @Export(name="samlVersion", type=String.class, parameters={})
    private Output</* @Nullable */ String> samlVersion;

    /**
     * @return SAML version for the app&#39;s sign-on mode
     * 
     */
    public Output<Optional<String>> samlVersion() {
        return Codegen.optional(this.samlVersion);
    }
    /**
     * Sign on mode of application.
     * 
     */
    @Export(name="signOnMode", type=String.class, parameters={})
    private Output<String> signOnMode;

    /**
     * @return Sign on mode of application.
     * 
     */
    public Output<String> signOnMode() {
        return this.signOnMode;
    }
    /**
     * Signature algorithm used ot digitally sign the assertion and response
     * 
     */
    @Export(name="signatureAlgorithm", type=String.class, parameters={})
    private Output</* @Nullable */ String> signatureAlgorithm;

    /**
     * @return Signature algorithm used ot digitally sign the assertion and response
     * 
     */
    public Output<Optional<String>> signatureAlgorithm() {
        return Codegen.optional(this.signatureAlgorithm);
    }
    /**
     * x509 encoded certificate that the Service Provider uses to sign Single Logout requests
     * 
     */
    @Export(name="singleLogoutCertificate", type=String.class, parameters={})
    private Output</* @Nullable */ String> singleLogoutCertificate;

    /**
     * @return x509 encoded certificate that the Service Provider uses to sign Single Logout requests
     * 
     */
    public Output<Optional<String>> singleLogoutCertificate() {
        return Codegen.optional(this.singleLogoutCertificate);
    }
    /**
     * The issuer of the Service Provider that generates the Single Logout request
     * 
     */
    @Export(name="singleLogoutIssuer", type=String.class, parameters={})
    private Output</* @Nullable */ String> singleLogoutIssuer;

    /**
     * @return The issuer of the Service Provider that generates the Single Logout request
     * 
     */
    public Output<Optional<String>> singleLogoutIssuer() {
        return Codegen.optional(this.singleLogoutIssuer);
    }
    /**
     * The location where the logout response is sent
     * 
     */
    @Export(name="singleLogoutUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> singleLogoutUrl;

    /**
     * @return The location where the logout response is sent
     * 
     */
    public Output<Optional<String>> singleLogoutUrl() {
        return Codegen.optional(this.singleLogoutUrl);
    }
    /**
     * Ignore groups sync. This is a temporary solution until &#39;groups&#39; field is supported in all the app-like resources
     * 
     */
    @Export(name="skipGroups", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> skipGroups;

    /**
     * @return Ignore groups sync. This is a temporary solution until &#39;groups&#39; field is supported in all the app-like resources
     * 
     */
    public Output<Optional<Boolean>> skipGroups() {
        return Codegen.optional(this.skipGroups);
    }
    /**
     * Ignore users sync. This is a temporary solution until &#39;users&#39; field is supported in all the app-like resources
     * 
     */
    @Export(name="skipUsers", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> skipUsers;

    /**
     * @return Ignore users sync. This is a temporary solution until &#39;users&#39; field is supported in all the app-like resources
     * 
     */
    public Output<Optional<Boolean>> skipUsers() {
        return Codegen.optional(this.skipUsers);
    }
    /**
     * SAML SP issuer ID
     * 
     */
    @Export(name="spIssuer", type=String.class, parameters={})
    private Output</* @Nullable */ String> spIssuer;

    /**
     * @return SAML SP issuer ID
     * 
     */
    public Output<Optional<String>> spIssuer() {
        return Codegen.optional(this.spIssuer);
    }
    /**
     * Single Sign On URL
     * 
     */
    @Export(name="ssoUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> ssoUrl;

    /**
     * @return Single Sign On URL
     * 
     */
    public Output<Optional<String>> ssoUrl() {
        return Codegen.optional(this.ssoUrl);
    }
    /**
     * Status of application.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output</* @Nullable */ String> status;

    /**
     * @return Status of application.
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * Identifies the SAML processing rules.
     * 
     */
    @Export(name="subjectNameIdFormat", type=String.class, parameters={})
    private Output</* @Nullable */ String> subjectNameIdFormat;

    /**
     * @return Identifies the SAML processing rules.
     * 
     */
    public Output<Optional<String>> subjectNameIdFormat() {
        return Codegen.optional(this.subjectNameIdFormat);
    }
    /**
     * Template for app user&#39;s username when a user is assigned to the app
     * 
     */
    @Export(name="subjectNameIdTemplate", type=String.class, parameters={})
    private Output</* @Nullable */ String> subjectNameIdTemplate;

    /**
     * @return Template for app user&#39;s username when a user is assigned to the app
     * 
     */
    public Output<Optional<String>> subjectNameIdTemplate() {
        return Codegen.optional(this.subjectNameIdTemplate);
    }
    /**
     * Username template
     * 
     */
    @Export(name="userNameTemplate", type=String.class, parameters={})
    private Output</* @Nullable */ String> userNameTemplate;

    /**
     * @return Username template
     * 
     */
    public Output<Optional<String>> userNameTemplate() {
        return Codegen.optional(this.userNameTemplate);
    }
    /**
     * Push username on update
     * 
     */
    @Export(name="userNameTemplatePushStatus", type=String.class, parameters={})
    private Output</* @Nullable */ String> userNameTemplatePushStatus;

    /**
     * @return Push username on update
     * 
     */
    public Output<Optional<String>> userNameTemplatePushStatus() {
        return Codegen.optional(this.userNameTemplatePushStatus);
    }
    /**
     * Username template suffix
     * 
     */
    @Export(name="userNameTemplateSuffix", type=String.class, parameters={})
    private Output</* @Nullable */ String> userNameTemplateSuffix;

    /**
     * @return Username template suffix
     * 
     */
    public Output<Optional<String>> userNameTemplateSuffix() {
        return Codegen.optional(this.userNameTemplateSuffix);
    }
    /**
     * Username template type
     * 
     */
    @Export(name="userNameTemplateType", type=String.class, parameters={})
    private Output</* @Nullable */ String> userNameTemplateType;

    /**
     * @return Username template type
     * 
     */
    public Output<Optional<String>> userNameTemplateType() {
        return Codegen.optional(this.userNameTemplateType);
    }
    /**
     * Users associated with the application
     * 
     * @deprecated
     * The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
     * 
     */
    @Deprecated /* The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality. */
    @Export(name="users", type=List.class, parameters={SamlAppUser.class})
    private Output</* @Nullable */ List<SamlAppUser>> users;

    /**
     * @return Users associated with the application
     * 
     */
    public Output<Optional<List<SamlAppUser>>> users() {
        return Codegen.optional(this.users);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SamlApp(String name) {
        this(name, SamlAppArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SamlApp(String name, SamlAppArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SamlApp(String name, SamlAppArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:deprecated/samlApp:SamlApp", name, args == null ? SamlAppArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SamlApp(String name, Output<String> id, @Nullable SamlAppState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:deprecated/samlApp:SamlApp", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SamlApp get(String name, Output<String> id, @Nullable SamlAppState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SamlApp(name, id, state, options);
    }
}

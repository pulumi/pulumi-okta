// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.RequestSettingOrganizationArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.RequestSettingOrganizationState;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages request settings. This resource allows you to read and configure an Okta [request-setting](https://developer.okta.com/docs/api/iga/openapi/governance.requests.admin.v2/tag/Request-Settings/#tag/Request-Settings/operation/updateOrgRequestSettingsV2).
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.RequestCondition;
 * import com.pulumi.okta.RequestConditionArgs;
 * import com.pulumi.okta.inputs.RequestConditionAccessScopeSettingsArgs;
 * import com.pulumi.okta.inputs.RequestConditionRequesterSettingsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new RequestCondition("example", RequestConditionArgs.builder()
 *             .resourceId("<resource_id>")
 *             .approvalSequenceId("<approval_sequence_id>")
 *             .name("<name>")
 *             .accessScopeSettings(RequestConditionAccessScopeSettingsArgs.builder()
 *                 .type("RESOURCE_DEFAULT")
 *                 .build())
 *             .requesterSettings(RequestConditionRequesterSettingsArgs.builder()
 *                 .type("EVERYONE")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:index/requestSettingOrganization:RequestSettingOrganization example &#34;default&#34;
 * ```
 * 
 */
@ResourceType(type="okta:index/requestSettingOrganization:RequestSettingOrganization")
public class RequestSettingOrganization extends com.pulumi.resources.CustomResource {
    /**
     * Request condition id.
     * 
     */
    @Export(name="idProperty", refs={String.class}, tree="[0]")
    private Output<String> idProperty;

    /**
     * @return Request condition id.
     * 
     */
    public Output<String> idProperty() {
        return this.idProperty;
    }
    /**
     * Whether a customer has acknowledged Access Requests subprocessors.
     * 
     */
    @Export(name="subprocessorsAcknowledged", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> subprocessorsAcknowledged;

    /**
     * @return Whether a customer has acknowledged Access Requests subprocessors.
     * 
     */
    public Output<Boolean> subprocessorsAcknowledged() {
        return this.subprocessorsAcknowledged;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RequestSettingOrganization(java.lang.String name) {
        this(name, RequestSettingOrganizationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RequestSettingOrganization(java.lang.String name, RequestSettingOrganizationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RequestSettingOrganization(java.lang.String name, RequestSettingOrganizationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/requestSettingOrganization:RequestSettingOrganization", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RequestSettingOrganization(java.lang.String name, Output<java.lang.String> id, @Nullable RequestSettingOrganizationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/requestSettingOrganization:RequestSettingOrganization", name, state, makeResourceOptions(options, id), false);
    }

    private static RequestSettingOrganizationArgs makeArgs(RequestSettingOrganizationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RequestSettingOrganizationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RequestSettingOrganization get(java.lang.String name, Output<java.lang.String> id, @Nullable RequestSettingOrganizationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RequestSettingOrganization(name, id, state, options);
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.app.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAppResult {
    private @Nullable Boolean activeOnly;
    /**
     * @deprecated
     * The `groups` field is now deprecated for the data source `okta_app`, please replace all uses of this with: `okta_app_group_assignments`
     * 
     */
    @Deprecated /* The `groups` field is now deprecated for the data source `okta_app`, please replace all uses of this with: `okta_app_group_assignments` */
    private List<String> groups;
    /**
     * @return Application ID.
     * 
     */
    private @Nullable String id;
    /**
     * @return Application label.
     * 
     */
    private @Nullable String label;
    private @Nullable String labelPrefix;
    /**
     * @return Generic JSON containing discoverable resources related to the app.
     * 
     */
    private String links;
    /**
     * @return Application name.
     * 
     */
    private String name;
    /**
     * @deprecated
     * Because groups has been removed, this attribute is a no op and will be removed
     * 
     */
    @Deprecated /* Because groups has been removed, this attribute is a no op and will be removed */
    private @Nullable Boolean skipGroups;
    /**
     * @deprecated
     * Because users has been removed, this attribute is a no op and will be removed
     * 
     */
    @Deprecated /* Because users has been removed, this attribute is a no op and will be removed */
    private @Nullable Boolean skipUsers;
    /**
     * @return Application status.
     * 
     */
    private String status;
    /**
     * @deprecated
     * The `users` field is now deprecated for the data source `okta_app`, please replace all uses of this with: `okta_app_user_assignments`
     * 
     */
    @Deprecated /* The `users` field is now deprecated for the data source `okta_app`, please replace all uses of this with: `okta_app_user_assignments` */
    private List<String> users;

    private GetAppResult() {}
    public Optional<Boolean> activeOnly() {
        return Optional.ofNullable(this.activeOnly);
    }
    /**
     * @deprecated
     * The `groups` field is now deprecated for the data source `okta_app`, please replace all uses of this with: `okta_app_group_assignments`
     * 
     */
    @Deprecated /* The `groups` field is now deprecated for the data source `okta_app`, please replace all uses of this with: `okta_app_group_assignments` */
    public List<String> groups() {
        return this.groups;
    }
    /**
     * @return Application ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Application label.
     * 
     */
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }
    public Optional<String> labelPrefix() {
        return Optional.ofNullable(this.labelPrefix);
    }
    /**
     * @return Generic JSON containing discoverable resources related to the app.
     * 
     */
    public String links() {
        return this.links;
    }
    /**
     * @return Application name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @deprecated
     * Because groups has been removed, this attribute is a no op and will be removed
     * 
     */
    @Deprecated /* Because groups has been removed, this attribute is a no op and will be removed */
    public Optional<Boolean> skipGroups() {
        return Optional.ofNullable(this.skipGroups);
    }
    /**
     * @deprecated
     * Because users has been removed, this attribute is a no op and will be removed
     * 
     */
    @Deprecated /* Because users has been removed, this attribute is a no op and will be removed */
    public Optional<Boolean> skipUsers() {
        return Optional.ofNullable(this.skipUsers);
    }
    /**
     * @return Application status.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @deprecated
     * The `users` field is now deprecated for the data source `okta_app`, please replace all uses of this with: `okta_app_user_assignments`
     * 
     */
    @Deprecated /* The `users` field is now deprecated for the data source `okta_app`, please replace all uses of this with: `okta_app_user_assignments` */
    public List<String> users() {
        return this.users;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean activeOnly;
        private List<String> groups;
        private @Nullable String id;
        private @Nullable String label;
        private @Nullable String labelPrefix;
        private String links;
        private String name;
        private @Nullable Boolean skipGroups;
        private @Nullable Boolean skipUsers;
        private String status;
        private List<String> users;
        public Builder() {}
        public Builder(GetAppResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeOnly = defaults.activeOnly;
    	      this.groups = defaults.groups;
    	      this.id = defaults.id;
    	      this.label = defaults.label;
    	      this.labelPrefix = defaults.labelPrefix;
    	      this.links = defaults.links;
    	      this.name = defaults.name;
    	      this.skipGroups = defaults.skipGroups;
    	      this.skipUsers = defaults.skipUsers;
    	      this.status = defaults.status;
    	      this.users = defaults.users;
        }

        @CustomType.Setter
        public Builder activeOnly(@Nullable Boolean activeOnly) {
            this.activeOnly = activeOnly;
            return this;
        }
        @CustomType.Setter
        public Builder groups(List<String> groups) {
            this.groups = Objects.requireNonNull(groups);
            return this;
        }
        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder label(@Nullable String label) {
            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder labelPrefix(@Nullable String labelPrefix) {
            this.labelPrefix = labelPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder links(String links) {
            this.links = Objects.requireNonNull(links);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder skipGroups(@Nullable Boolean skipGroups) {
            this.skipGroups = skipGroups;
            return this;
        }
        @CustomType.Setter
        public Builder skipUsers(@Nullable Boolean skipUsers) {
            this.skipUsers = skipUsers;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder users(List<String> users) {
            this.users = Objects.requireNonNull(users);
            return this;
        }
        public Builder users(String... users) {
            return users(List.of(users));
        }
        public GetAppResult build() {
            final var o = new GetAppResult();
            o.activeOnly = activeOnly;
            o.groups = groups;
            o.id = id;
            o.label = label;
            o.labelPrefix = labelPrefix;
            o.links = links;
            o.name = name;
            o.skipGroups = skipGroups;
            o.skipUsers = skipUsers;
            o.status = status;
            o.users = users;
            return o;
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ThemeState extends com.pulumi.resources.ResourceArgs {

    public static final ThemeState Empty = new ThemeState();

    /**
     * (Optional) Local path to background image file. Setting the value to the blank string `&#34;&#34;` will delete the favicon on the theme at Okta but will not delete the local file.
     * 
     */
    @Import(name="backgroundImage")
    private @Nullable Output<String> backgroundImage;

    /**
     * @return (Optional) Local path to background image file. Setting the value to the blank string `&#34;&#34;` will delete the favicon on the theme at Okta but will not delete the local file.
     * 
     */
    public Optional<Output<String>> backgroundImage() {
        return Optional.ofNullable(this.backgroundImage);
    }

    /**
     * (Read-Only) Background image URL
     * 
     */
    @Import(name="backgroundImageUrl")
    private @Nullable Output<String> backgroundImageUrl;

    /**
     * @return (Read-Only) Background image URL
     * 
     */
    public Optional<Output<String>> backgroundImageUrl() {
        return Optional.ofNullable(this.backgroundImageUrl);
    }

    /**
     * Brand ID
     * 
     */
    @Import(name="brandId")
    private @Nullable Output<String> brandId;

    /**
     * @return Brand ID
     * 
     */
    public Optional<Output<String>> brandId() {
        return Optional.ofNullable(this.brandId);
    }

    /**
     * (Required) Variant for email templates. Valid values: (`OKTA_DEFAULT`, `FULL_THEME`)
     * 
     */
    @Import(name="emailTemplateTouchPointVariant")
    private @Nullable Output<String> emailTemplateTouchPointVariant;

    /**
     * @return (Required) Variant for email templates. Valid values: (`OKTA_DEFAULT`, `FULL_THEME`)
     * 
     */
    public Optional<Output<String>> emailTemplateTouchPointVariant() {
        return Optional.ofNullable(this.emailTemplateTouchPointVariant);
    }

    /**
     * (Required) Variant for the Okta End-User Dashboard. Valid values: (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)
     * 
     */
    @Import(name="endUserDashboardTouchPointVariant")
    private @Nullable Output<String> endUserDashboardTouchPointVariant;

    /**
     * @return (Required) Variant for the Okta End-User Dashboard. Valid values: (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)
     * 
     */
    public Optional<Output<String>> endUserDashboardTouchPointVariant() {
        return Optional.ofNullable(this.endUserDashboardTouchPointVariant);
    }

    /**
     * (Required) Variant for the error page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
     * 
     */
    @Import(name="errorPageTouchPointVariant")
    private @Nullable Output<String> errorPageTouchPointVariant;

    /**
     * @return (Required) Variant for the error page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
     * 
     */
    public Optional<Output<String>> errorPageTouchPointVariant() {
        return Optional.ofNullable(this.errorPageTouchPointVariant);
    }

    /**
     * (Optional) Local path to favicon file. Setting the value to the blank string `&#34;&#34;` will delete the favicon on the theme at Okta but will not delete the local file.
     * 
     */
    @Import(name="favicon")
    private @Nullable Output<String> favicon;

    /**
     * @return (Optional) Local path to favicon file. Setting the value to the blank string `&#34;&#34;` will delete the favicon on the theme at Okta but will not delete the local file.
     * 
     */
    public Optional<Output<String>> favicon() {
        return Optional.ofNullable(this.favicon);
    }

    /**
     * (Read-Only) Favicon URL
     * 
     */
    @Import(name="faviconUrl")
    private @Nullable Output<String> faviconUrl;

    /**
     * @return (Read-Only) Favicon URL
     * 
     */
    public Optional<Output<String>> faviconUrl() {
        return Optional.ofNullable(this.faviconUrl);
    }

    /**
     * Link relations for this object - JSON HAL - (Read-Only) Discoverable resources related to the brand
     * 
     */
    @Import(name="links")
    private @Nullable Output<String> links;

    /**
     * @return Link relations for this object - JSON HAL - (Read-Only) Discoverable resources related to the brand
     * 
     */
    public Optional<Output<String>> links() {
        return Optional.ofNullable(this.links);
    }

    /**
     * (Optional) Local path to logo file. Setting the value to the blank string `&#34;&#34;` will delete the logo on the theme at Okta but will not delete the local file.
     * 
     */
    @Import(name="logo")
    private @Nullable Output<String> logo;

    /**
     * @return (Optional) Local path to logo file. Setting the value to the blank string `&#34;&#34;` will delete the logo on the theme at Okta but will not delete the local file.
     * 
     */
    public Optional<Output<String>> logo() {
        return Optional.ofNullable(this.logo);
    }

    /**
     * (Read-Only) Logo URL
     * 
     */
    @Import(name="logoUrl")
    private @Nullable Output<String> logoUrl;

    /**
     * @return (Read-Only) Logo URL
     * 
     */
    public Optional<Output<String>> logoUrl() {
        return Optional.ofNullable(this.logoUrl);
    }

    /**
     * (Optional) Primary color contrast hex code
     * 
     */
    @Import(name="primaryColorContrastHex")
    private @Nullable Output<String> primaryColorContrastHex;

    /**
     * @return (Optional) Primary color contrast hex code
     * 
     */
    public Optional<Output<String>> primaryColorContrastHex() {
        return Optional.ofNullable(this.primaryColorContrastHex);
    }

    /**
     * (Required) Primary color hex code
     * 
     */
    @Import(name="primaryColorHex")
    private @Nullable Output<String> primaryColorHex;

    /**
     * @return (Required) Primary color hex code
     * 
     */
    public Optional<Output<String>> primaryColorHex() {
        return Optional.ofNullable(this.primaryColorHex);
    }

    /**
     * (Optional) Secondary color contrast hex code
     * 
     */
    @Import(name="secondaryColorContrastHex")
    private @Nullable Output<String> secondaryColorContrastHex;

    /**
     * @return (Optional) Secondary color contrast hex code
     * 
     */
    public Optional<Output<String>> secondaryColorContrastHex() {
        return Optional.ofNullable(this.secondaryColorContrastHex);
    }

    /**
     * (Required) Secondary color hex code
     * 
     */
    @Import(name="secondaryColorHex")
    private @Nullable Output<String> secondaryColorHex;

    /**
     * @return (Required) Secondary color hex code
     * 
     */
    public Optional<Output<String>> secondaryColorHex() {
        return Optional.ofNullable(this.secondaryColorHex);
    }

    /**
     * (Required) Variant for the Okta Sign-In Page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
     * 
     */
    @Import(name="signInPageTouchPointVariant")
    private @Nullable Output<String> signInPageTouchPointVariant;

    /**
     * @return (Required) Variant for the Okta Sign-In Page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
     * 
     */
    public Optional<Output<String>> signInPageTouchPointVariant() {
        return Optional.ofNullable(this.signInPageTouchPointVariant);
    }

    /**
     * Theme ID, used for read (faux-create)
     * 
     */
    @Import(name="themeId")
    private @Nullable Output<String> themeId;

    /**
     * @return Theme ID, used for read (faux-create)
     * 
     */
    public Optional<Output<String>> themeId() {
        return Optional.ofNullable(this.themeId);
    }

    private ThemeState() {}

    private ThemeState(ThemeState $) {
        this.backgroundImage = $.backgroundImage;
        this.backgroundImageUrl = $.backgroundImageUrl;
        this.brandId = $.brandId;
        this.emailTemplateTouchPointVariant = $.emailTemplateTouchPointVariant;
        this.endUserDashboardTouchPointVariant = $.endUserDashboardTouchPointVariant;
        this.errorPageTouchPointVariant = $.errorPageTouchPointVariant;
        this.favicon = $.favicon;
        this.faviconUrl = $.faviconUrl;
        this.links = $.links;
        this.logo = $.logo;
        this.logoUrl = $.logoUrl;
        this.primaryColorContrastHex = $.primaryColorContrastHex;
        this.primaryColorHex = $.primaryColorHex;
        this.secondaryColorContrastHex = $.secondaryColorContrastHex;
        this.secondaryColorHex = $.secondaryColorHex;
        this.signInPageTouchPointVariant = $.signInPageTouchPointVariant;
        this.themeId = $.themeId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ThemeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ThemeState $;

        public Builder() {
            $ = new ThemeState();
        }

        public Builder(ThemeState defaults) {
            $ = new ThemeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backgroundImage (Optional) Local path to background image file. Setting the value to the blank string `&#34;&#34;` will delete the favicon on the theme at Okta but will not delete the local file.
         * 
         * @return builder
         * 
         */
        public Builder backgroundImage(@Nullable Output<String> backgroundImage) {
            $.backgroundImage = backgroundImage;
            return this;
        }

        /**
         * @param backgroundImage (Optional) Local path to background image file. Setting the value to the blank string `&#34;&#34;` will delete the favicon on the theme at Okta but will not delete the local file.
         * 
         * @return builder
         * 
         */
        public Builder backgroundImage(String backgroundImage) {
            return backgroundImage(Output.of(backgroundImage));
        }

        /**
         * @param backgroundImageUrl (Read-Only) Background image URL
         * 
         * @return builder
         * 
         */
        public Builder backgroundImageUrl(@Nullable Output<String> backgroundImageUrl) {
            $.backgroundImageUrl = backgroundImageUrl;
            return this;
        }

        /**
         * @param backgroundImageUrl (Read-Only) Background image URL
         * 
         * @return builder
         * 
         */
        public Builder backgroundImageUrl(String backgroundImageUrl) {
            return backgroundImageUrl(Output.of(backgroundImageUrl));
        }

        /**
         * @param brandId Brand ID
         * 
         * @return builder
         * 
         */
        public Builder brandId(@Nullable Output<String> brandId) {
            $.brandId = brandId;
            return this;
        }

        /**
         * @param brandId Brand ID
         * 
         * @return builder
         * 
         */
        public Builder brandId(String brandId) {
            return brandId(Output.of(brandId));
        }

        /**
         * @param emailTemplateTouchPointVariant (Required) Variant for email templates. Valid values: (`OKTA_DEFAULT`, `FULL_THEME`)
         * 
         * @return builder
         * 
         */
        public Builder emailTemplateTouchPointVariant(@Nullable Output<String> emailTemplateTouchPointVariant) {
            $.emailTemplateTouchPointVariant = emailTemplateTouchPointVariant;
            return this;
        }

        /**
         * @param emailTemplateTouchPointVariant (Required) Variant for email templates. Valid values: (`OKTA_DEFAULT`, `FULL_THEME`)
         * 
         * @return builder
         * 
         */
        public Builder emailTemplateTouchPointVariant(String emailTemplateTouchPointVariant) {
            return emailTemplateTouchPointVariant(Output.of(emailTemplateTouchPointVariant));
        }

        /**
         * @param endUserDashboardTouchPointVariant (Required) Variant for the Okta End-User Dashboard. Valid values: (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)
         * 
         * @return builder
         * 
         */
        public Builder endUserDashboardTouchPointVariant(@Nullable Output<String> endUserDashboardTouchPointVariant) {
            $.endUserDashboardTouchPointVariant = endUserDashboardTouchPointVariant;
            return this;
        }

        /**
         * @param endUserDashboardTouchPointVariant (Required) Variant for the Okta End-User Dashboard. Valid values: (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)
         * 
         * @return builder
         * 
         */
        public Builder endUserDashboardTouchPointVariant(String endUserDashboardTouchPointVariant) {
            return endUserDashboardTouchPointVariant(Output.of(endUserDashboardTouchPointVariant));
        }

        /**
         * @param errorPageTouchPointVariant (Required) Variant for the error page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
         * 
         * @return builder
         * 
         */
        public Builder errorPageTouchPointVariant(@Nullable Output<String> errorPageTouchPointVariant) {
            $.errorPageTouchPointVariant = errorPageTouchPointVariant;
            return this;
        }

        /**
         * @param errorPageTouchPointVariant (Required) Variant for the error page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
         * 
         * @return builder
         * 
         */
        public Builder errorPageTouchPointVariant(String errorPageTouchPointVariant) {
            return errorPageTouchPointVariant(Output.of(errorPageTouchPointVariant));
        }

        /**
         * @param favicon (Optional) Local path to favicon file. Setting the value to the blank string `&#34;&#34;` will delete the favicon on the theme at Okta but will not delete the local file.
         * 
         * @return builder
         * 
         */
        public Builder favicon(@Nullable Output<String> favicon) {
            $.favicon = favicon;
            return this;
        }

        /**
         * @param favicon (Optional) Local path to favicon file. Setting the value to the blank string `&#34;&#34;` will delete the favicon on the theme at Okta but will not delete the local file.
         * 
         * @return builder
         * 
         */
        public Builder favicon(String favicon) {
            return favicon(Output.of(favicon));
        }

        /**
         * @param faviconUrl (Read-Only) Favicon URL
         * 
         * @return builder
         * 
         */
        public Builder faviconUrl(@Nullable Output<String> faviconUrl) {
            $.faviconUrl = faviconUrl;
            return this;
        }

        /**
         * @param faviconUrl (Read-Only) Favicon URL
         * 
         * @return builder
         * 
         */
        public Builder faviconUrl(String faviconUrl) {
            return faviconUrl(Output.of(faviconUrl));
        }

        /**
         * @param links Link relations for this object - JSON HAL - (Read-Only) Discoverable resources related to the brand
         * 
         * @return builder
         * 
         */
        public Builder links(@Nullable Output<String> links) {
            $.links = links;
            return this;
        }

        /**
         * @param links Link relations for this object - JSON HAL - (Read-Only) Discoverable resources related to the brand
         * 
         * @return builder
         * 
         */
        public Builder links(String links) {
            return links(Output.of(links));
        }

        /**
         * @param logo (Optional) Local path to logo file. Setting the value to the blank string `&#34;&#34;` will delete the logo on the theme at Okta but will not delete the local file.
         * 
         * @return builder
         * 
         */
        public Builder logo(@Nullable Output<String> logo) {
            $.logo = logo;
            return this;
        }

        /**
         * @param logo (Optional) Local path to logo file. Setting the value to the blank string `&#34;&#34;` will delete the logo on the theme at Okta but will not delete the local file.
         * 
         * @return builder
         * 
         */
        public Builder logo(String logo) {
            return logo(Output.of(logo));
        }

        /**
         * @param logoUrl (Read-Only) Logo URL
         * 
         * @return builder
         * 
         */
        public Builder logoUrl(@Nullable Output<String> logoUrl) {
            $.logoUrl = logoUrl;
            return this;
        }

        /**
         * @param logoUrl (Read-Only) Logo URL
         * 
         * @return builder
         * 
         */
        public Builder logoUrl(String logoUrl) {
            return logoUrl(Output.of(logoUrl));
        }

        /**
         * @param primaryColorContrastHex (Optional) Primary color contrast hex code
         * 
         * @return builder
         * 
         */
        public Builder primaryColorContrastHex(@Nullable Output<String> primaryColorContrastHex) {
            $.primaryColorContrastHex = primaryColorContrastHex;
            return this;
        }

        /**
         * @param primaryColorContrastHex (Optional) Primary color contrast hex code
         * 
         * @return builder
         * 
         */
        public Builder primaryColorContrastHex(String primaryColorContrastHex) {
            return primaryColorContrastHex(Output.of(primaryColorContrastHex));
        }

        /**
         * @param primaryColorHex (Required) Primary color hex code
         * 
         * @return builder
         * 
         */
        public Builder primaryColorHex(@Nullable Output<String> primaryColorHex) {
            $.primaryColorHex = primaryColorHex;
            return this;
        }

        /**
         * @param primaryColorHex (Required) Primary color hex code
         * 
         * @return builder
         * 
         */
        public Builder primaryColorHex(String primaryColorHex) {
            return primaryColorHex(Output.of(primaryColorHex));
        }

        /**
         * @param secondaryColorContrastHex (Optional) Secondary color contrast hex code
         * 
         * @return builder
         * 
         */
        public Builder secondaryColorContrastHex(@Nullable Output<String> secondaryColorContrastHex) {
            $.secondaryColorContrastHex = secondaryColorContrastHex;
            return this;
        }

        /**
         * @param secondaryColorContrastHex (Optional) Secondary color contrast hex code
         * 
         * @return builder
         * 
         */
        public Builder secondaryColorContrastHex(String secondaryColorContrastHex) {
            return secondaryColorContrastHex(Output.of(secondaryColorContrastHex));
        }

        /**
         * @param secondaryColorHex (Required) Secondary color hex code
         * 
         * @return builder
         * 
         */
        public Builder secondaryColorHex(@Nullable Output<String> secondaryColorHex) {
            $.secondaryColorHex = secondaryColorHex;
            return this;
        }

        /**
         * @param secondaryColorHex (Required) Secondary color hex code
         * 
         * @return builder
         * 
         */
        public Builder secondaryColorHex(String secondaryColorHex) {
            return secondaryColorHex(Output.of(secondaryColorHex));
        }

        /**
         * @param signInPageTouchPointVariant (Required) Variant for the Okta Sign-In Page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
         * 
         * @return builder
         * 
         */
        public Builder signInPageTouchPointVariant(@Nullable Output<String> signInPageTouchPointVariant) {
            $.signInPageTouchPointVariant = signInPageTouchPointVariant;
            return this;
        }

        /**
         * @param signInPageTouchPointVariant (Required) Variant for the Okta Sign-In Page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
         * 
         * @return builder
         * 
         */
        public Builder signInPageTouchPointVariant(String signInPageTouchPointVariant) {
            return signInPageTouchPointVariant(Output.of(signInPageTouchPointVariant));
        }

        /**
         * @param themeId Theme ID, used for read (faux-create)
         * 
         * @return builder
         * 
         */
        public Builder themeId(@Nullable Output<String> themeId) {
            $.themeId = themeId;
            return this;
        }

        /**
         * @param themeId Theme ID, used for read (faux-create)
         * 
         * @return builder
         * 
         */
        public Builder themeId(String themeId) {
            return themeId(Output.of(themeId));
        }

        public ThemeState build() {
            return $;
        }
    }

}

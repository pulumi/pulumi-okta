// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AdminRoleCustomArgs extends com.pulumi.resources.ResourceArgs {

    public static final AdminRoleCustomArgs Empty = new AdminRoleCustomArgs();

    /**
     * A human-readable description of the new Role
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return A human-readable description of the new Role
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * The name given to the new Role
     * 
     */
    @Import(name="label", required=true)
    private Output<String> label;

    /**
     * @return The name given to the new Role
     * 
     */
    public Output<String> label() {
        return this.label;
    }

    /**
     * The permissions that the new Role grants.
     * 
     */
    @Import(name="permissions")
    private @Nullable Output<List<String>> permissions;

    /**
     * @return The permissions that the new Role grants.
     * 
     */
    public Optional<Output<List<String>>> permissions() {
        return Optional.ofNullable(this.permissions);
    }

    private AdminRoleCustomArgs() {}

    private AdminRoleCustomArgs(AdminRoleCustomArgs $) {
        this.description = $.description;
        this.label = $.label;
        this.permissions = $.permissions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AdminRoleCustomArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AdminRoleCustomArgs $;

        public Builder() {
            $ = new AdminRoleCustomArgs();
        }

        public Builder(AdminRoleCustomArgs defaults) {
            $ = new AdminRoleCustomArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A human-readable description of the new Role
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A human-readable description of the new Role
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param label The name given to the new Role
         * 
         * @return builder
         * 
         */
        public Builder label(Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label The name given to the new Role
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param permissions The permissions that the new Role grants.
         * 
         * @return builder
         * 
         */
        public Builder permissions(@Nullable Output<List<String>> permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param permissions The permissions that the new Role grants.
         * 
         * @return builder
         * 
         */
        public Builder permissions(List<String> permissions) {
            return permissions(Output.of(permissions));
        }

        /**
         * @param permissions The permissions that the new Role grants.
         * 
         * @return builder
         * 
         */
        public Builder permissions(String... permissions) {
            return permissions(List.of(permissions));
        }

        public AdminRoleCustomArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("AdminRoleCustomArgs", "description");
            }
            if ($.label == null) {
                throw new MissingRequiredPropertyException("AdminRoleCustomArgs", "label");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.app;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.app.SecurePasswordStoreArgs;
import com.pulumi.okta.app.inputs.SecurePasswordStoreState;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource allows you to create and configure a Secure Password Store Application.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.app.SecurePasswordStore;
 * import com.pulumi.okta.app.SecurePasswordStoreArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new SecurePasswordStore(&#34;example&#34;, SecurePasswordStoreArgs.builder()        
 *             .credentialsScheme(&#34;ADMIN_SETS_CREDENTIALS&#34;)
 *             .label(&#34;example&#34;)
 *             .passwordField(&#34;pass&#34;)
 *             .url(&#34;https://test.com&#34;)
 *             .usernameField(&#34;user&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Secure Password Store Application can be imported via the Okta ID.
 * 
 * ```sh
 *  $ pulumi import okta:app/securePasswordStore:SecurePasswordStore example &amp;#60;app id&amp;#62;
 * ```
 * 
 */
@ResourceType(type="okta:app/securePasswordStore:SecurePasswordStore")
public class SecurePasswordStore extends com.pulumi.resources.CustomResource {
    /**
     * Custom error page URL.
     * 
     */
    @Export(name="accessibilityErrorRedirectUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> accessibilityErrorRedirectUrl;

    /**
     * @return Custom error page URL.
     * 
     */
    public Output<Optional<String>> accessibilityErrorRedirectUrl() {
        return Codegen.optional(this.accessibilityErrorRedirectUrl);
    }
    /**
     * Custom login page for this application.
     * 
     */
    @Export(name="accessibilityLoginRedirectUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> accessibilityLoginRedirectUrl;

    /**
     * @return Custom login page for this application.
     * 
     */
    public Output<Optional<String>> accessibilityLoginRedirectUrl() {
        return Codegen.optional(this.accessibilityLoginRedirectUrl);
    }
    /**
     * Enable self-service. By default, it is `false`.
     * 
     */
    @Export(name="accessibilitySelfService", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> accessibilitySelfService;

    /**
     * @return Enable self-service. By default, it is `false`.
     * 
     */
    public Output<Optional<Boolean>> accessibilitySelfService() {
        return Codegen.optional(this.accessibilitySelfService);
    }
    /**
     * Application notes for admins.
     * 
     */
    @Export(name="adminNote", type=String.class, parameters={})
    private Output</* @Nullable */ String> adminNote;

    /**
     * @return Application notes for admins.
     * 
     */
    public Output<Optional<String>> adminNote() {
        return Codegen.optional(this.adminNote);
    }
    /**
     * Displays specific appLinks for the app. The value for each application link should be boolean.
     * 
     */
    @Export(name="appLinksJson", type=String.class, parameters={})
    private Output</* @Nullable */ String> appLinksJson;

    /**
     * @return Displays specific appLinks for the app. The value for each application link should be boolean.
     * 
     */
    public Output<Optional<String>> appLinksJson() {
        return Codegen.optional(this.appLinksJson);
    }
    /**
     * Display auto submit toolbar.
     * 
     */
    @Export(name="autoSubmitToolbar", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> autoSubmitToolbar;

    /**
     * @return Display auto submit toolbar.
     * 
     */
    public Output<Optional<Boolean>> autoSubmitToolbar() {
        return Codegen.optional(this.autoSubmitToolbar);
    }
    /**
     * Application credentials scheme. Can be set to `&#34;EDIT_USERNAME_AND_PASSWORD&#34;`, `&#34;ADMIN_SETS_CREDENTIALS&#34;`, `&#34;EDIT_PASSWORD_ONLY&#34;`, `&#34;EXTERNAL_PASSWORD_SYNC&#34;`, or `&#34;SHARED_USERNAME_AND_PASSWORD&#34;`.
     * 
     */
    @Export(name="credentialsScheme", type=String.class, parameters={})
    private Output</* @Nullable */ String> credentialsScheme;

    /**
     * @return Application credentials scheme. Can be set to `&#34;EDIT_USERNAME_AND_PASSWORD&#34;`, `&#34;ADMIN_SETS_CREDENTIALS&#34;`, `&#34;EDIT_PASSWORD_ONLY&#34;`, `&#34;EXTERNAL_PASSWORD_SYNC&#34;`, or `&#34;SHARED_USERNAME_AND_PASSWORD&#34;`.
     * 
     */
    public Output<Optional<String>> credentialsScheme() {
        return Codegen.optional(this.credentialsScheme);
    }
    /**
     * Application notes for end users.
     * 
     */
    @Export(name="enduserNote", type=String.class, parameters={})
    private Output</* @Nullable */ String> enduserNote;

    /**
     * @return Application notes for end users.
     * 
     */
    public Output<Optional<String>> enduserNote() {
        return Codegen.optional(this.enduserNote);
    }
    /**
     * Do not display application icon on mobile app.
     * 
     */
    @Export(name="hideIos", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> hideIos;

    /**
     * @return Do not display application icon on mobile app.
     * 
     */
    public Output<Optional<Boolean>> hideIos() {
        return Codegen.optional(this.hideIos);
    }
    /**
     * Do not display application icon to users.
     * 
     */
    @Export(name="hideWeb", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> hideWeb;

    /**
     * @return Do not display application icon to users.
     * 
     */
    public Output<Optional<Boolean>> hideWeb() {
        return Codegen.optional(this.hideWeb);
    }
    /**
     * The display name of the Application.
     * 
     */
    @Export(name="label", type=String.class, parameters={})
    private Output<String> label;

    /**
     * @return The display name of the Application.
     * 
     */
    public Output<String> label() {
        return this.label;
    }
    /**
     * Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     * 
     */
    @Export(name="logo", type=String.class, parameters={})
    private Output</* @Nullable */ String> logo;

    /**
     * @return Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     * 
     */
    public Output<Optional<String>> logo() {
        return Codegen.optional(this.logo);
    }
    /**
     * URL of the application&#39;s logo
     * 
     */
    @Export(name="logoUrl", type=String.class, parameters={})
    private Output<String> logoUrl;

    /**
     * @return URL of the application&#39;s logo
     * 
     */
    public Output<String> logoUrl() {
        return this.logoUrl;
    }
    /**
     * Name assigned to the application by Okta.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name assigned to the application by Okta.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Name of optional param in the login form.
     * 
     */
    @Export(name="optionalField1", type=String.class, parameters={})
    private Output</* @Nullable */ String> optionalField1;

    /**
     * @return Name of optional param in the login form.
     * 
     */
    public Output<Optional<String>> optionalField1() {
        return Codegen.optional(this.optionalField1);
    }
    /**
     * Name of optional value in the login form.
     * 
     */
    @Export(name="optionalField1Value", type=String.class, parameters={})
    private Output</* @Nullable */ String> optionalField1Value;

    /**
     * @return Name of optional value in the login form.
     * 
     */
    public Output<Optional<String>> optionalField1Value() {
        return Codegen.optional(this.optionalField1Value);
    }
    /**
     * Name of optional param in the login form.
     * 
     */
    @Export(name="optionalField2", type=String.class, parameters={})
    private Output</* @Nullable */ String> optionalField2;

    /**
     * @return Name of optional param in the login form.
     * 
     */
    public Output<Optional<String>> optionalField2() {
        return Codegen.optional(this.optionalField2);
    }
    /**
     * Name of optional value in the login form.
     * 
     */
    @Export(name="optionalField2Value", type=String.class, parameters={})
    private Output</* @Nullable */ String> optionalField2Value;

    /**
     * @return Name of optional value in the login form.
     * 
     */
    public Output<Optional<String>> optionalField2Value() {
        return Codegen.optional(this.optionalField2Value);
    }
    /**
     * Name of optional param in the login form.
     * 
     */
    @Export(name="optionalField3", type=String.class, parameters={})
    private Output</* @Nullable */ String> optionalField3;

    /**
     * @return Name of optional param in the login form.
     * 
     */
    public Output<Optional<String>> optionalField3() {
        return Codegen.optional(this.optionalField3);
    }
    /**
     * Name of optional value in the login form.
     * 
     */
    @Export(name="optionalField3Value", type=String.class, parameters={})
    private Output</* @Nullable */ String> optionalField3Value;

    /**
     * @return Name of optional value in the login form.
     * 
     */
    public Output<Optional<String>> optionalField3Value() {
        return Codegen.optional(this.optionalField3Value);
    }
    /**
     * Login password field.
     * 
     */
    @Export(name="passwordField", type=String.class, parameters={})
    private Output<String> passwordField;

    /**
     * @return Login password field.
     * 
     */
    public Output<String> passwordField() {
        return this.passwordField;
    }
    /**
     * Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `&#34;ADMIN_SETS_CREDENTIALS&#34;`, `&#34;SHARED_USERNAME_AND_PASSWORD&#34;` or `&#34;EXTERNAL_PASSWORD_SYNC&#34;`.
     * 
     */
    @Export(name="revealPassword", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> revealPassword;

    /**
     * @return Allow user to reveal password. It can not be set to `true` if `credentials_scheme` is `&#34;ADMIN_SETS_CREDENTIALS&#34;`, `&#34;SHARED_USERNAME_AND_PASSWORD&#34;` or `&#34;EXTERNAL_PASSWORD_SYNC&#34;`.
     * 
     */
    public Output<Optional<Boolean>> revealPassword() {
        return Codegen.optional(this.revealPassword);
    }
    /**
     * Shared password, required for certain schemes.
     * 
     */
    @Export(name="sharedPassword", type=String.class, parameters={})
    private Output</* @Nullable */ String> sharedPassword;

    /**
     * @return Shared password, required for certain schemes.
     * 
     */
    public Output<Optional<String>> sharedPassword() {
        return Codegen.optional(this.sharedPassword);
    }
    /**
     * Shared username, required for certain schemes.
     * 
     */
    @Export(name="sharedUsername", type=String.class, parameters={})
    private Output</* @Nullable */ String> sharedUsername;

    /**
     * @return Shared username, required for certain schemes.
     * 
     */
    public Output<Optional<String>> sharedUsername() {
        return Codegen.optional(this.sharedUsername);
    }
    /**
     * Sign-on mode of application.
     * 
     */
    @Export(name="signOnMode", type=String.class, parameters={})
    private Output<String> signOnMode;

    /**
     * @return Sign-on mode of application.
     * 
     */
    public Output<String> signOnMode() {
        return this.signOnMode;
    }
    /**
     * Status of application. By default, it is `&#34;ACTIVE&#34;`.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output</* @Nullable */ String> status;

    /**
     * @return Status of application. By default, it is `&#34;ACTIVE&#34;`.
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * Login URL.
     * 
     */
    @Export(name="url", type=String.class, parameters={})
    private Output<String> url;

    /**
     * @return Login URL.
     * 
     */
    public Output<String> url() {
        return this.url;
    }
    /**
     * Username template. Default: `&#34;${source.login}&#34;`
     * 
     */
    @Export(name="userNameTemplate", type=String.class, parameters={})
    private Output</* @Nullable */ String> userNameTemplate;

    /**
     * @return Username template. Default: `&#34;${source.login}&#34;`
     * 
     */
    public Output<Optional<String>> userNameTemplate() {
        return Codegen.optional(this.userNameTemplate);
    }
    /**
     * Push username on update. Valid values: `&#34;PUSH&#34;` and `&#34;DONT_PUSH&#34;`.
     * 
     */
    @Export(name="userNameTemplatePushStatus", type=String.class, parameters={})
    private Output</* @Nullable */ String> userNameTemplatePushStatus;

    /**
     * @return Push username on update. Valid values: `&#34;PUSH&#34;` and `&#34;DONT_PUSH&#34;`.
     * 
     */
    public Output<Optional<String>> userNameTemplatePushStatus() {
        return Codegen.optional(this.userNameTemplatePushStatus);
    }
    /**
     * Username template suffix.
     * 
     */
    @Export(name="userNameTemplateSuffix", type=String.class, parameters={})
    private Output</* @Nullable */ String> userNameTemplateSuffix;

    /**
     * @return Username template suffix.
     * 
     */
    public Output<Optional<String>> userNameTemplateSuffix() {
        return Codegen.optional(this.userNameTemplateSuffix);
    }
    /**
     * Username template type. Default: `&#34;BUILT_IN&#34;`.
     * 
     */
    @Export(name="userNameTemplateType", type=String.class, parameters={})
    private Output</* @Nullable */ String> userNameTemplateType;

    /**
     * @return Username template type. Default: `&#34;BUILT_IN&#34;`.
     * 
     */
    public Output<Optional<String>> userNameTemplateType() {
        return Codegen.optional(this.userNameTemplateType);
    }
    /**
     * Login username field.
     * 
     */
    @Export(name="usernameField", type=String.class, parameters={})
    private Output<String> usernameField;

    /**
     * @return Login username field.
     * 
     */
    public Output<String> usernameField() {
        return this.usernameField;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SecurePasswordStore(String name) {
        this(name, SecurePasswordStoreArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SecurePasswordStore(String name, SecurePasswordStoreArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SecurePasswordStore(String name, SecurePasswordStoreArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:app/securePasswordStore:SecurePasswordStore", name, args == null ? SecurePasswordStoreArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SecurePasswordStore(String name, Output<String> id, @Nullable SecurePasswordStoreState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:app/securePasswordStore:SecurePasswordStore", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SecurePasswordStore get(String name, Output<String> id, @Nullable SecurePasswordStoreState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SecurePasswordStore(name, id, state, options);
    }
}

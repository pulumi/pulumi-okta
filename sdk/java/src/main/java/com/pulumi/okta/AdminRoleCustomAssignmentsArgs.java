// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AdminRoleCustomAssignmentsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AdminRoleCustomAssignmentsArgs Empty = new AdminRoleCustomAssignmentsArgs();

    /**
     * ID of the Custom Role
     * 
     */
    @Import(name="customRoleId", required=true)
    private Output<String> customRoleId;

    /**
     * @return ID of the Custom Role
     * 
     */
    public Output<String> customRoleId() {
        return this.customRoleId;
    }

    /**
     * The hrefs that point to User(s) and/or Group(s) that receive the Role
     * 
     */
    @Import(name="members")
    private @Nullable Output<List<String>> members;

    /**
     * @return The hrefs that point to User(s) and/or Group(s) that receive the Role
     * 
     */
    public Optional<Output<List<String>>> members() {
        return Optional.ofNullable(this.members);
    }

    /**
     * ID of the target Resource Set
     * 
     */
    @Import(name="resourceSetId", required=true)
    private Output<String> resourceSetId;

    /**
     * @return ID of the target Resource Set
     * 
     */
    public Output<String> resourceSetId() {
        return this.resourceSetId;
    }

    private AdminRoleCustomAssignmentsArgs() {}

    private AdminRoleCustomAssignmentsArgs(AdminRoleCustomAssignmentsArgs $) {
        this.customRoleId = $.customRoleId;
        this.members = $.members;
        this.resourceSetId = $.resourceSetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AdminRoleCustomAssignmentsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AdminRoleCustomAssignmentsArgs $;

        public Builder() {
            $ = new AdminRoleCustomAssignmentsArgs();
        }

        public Builder(AdminRoleCustomAssignmentsArgs defaults) {
            $ = new AdminRoleCustomAssignmentsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customRoleId ID of the Custom Role
         * 
         * @return builder
         * 
         */
        public Builder customRoleId(Output<String> customRoleId) {
            $.customRoleId = customRoleId;
            return this;
        }

        /**
         * @param customRoleId ID of the Custom Role
         * 
         * @return builder
         * 
         */
        public Builder customRoleId(String customRoleId) {
            return customRoleId(Output.of(customRoleId));
        }

        /**
         * @param members The hrefs that point to User(s) and/or Group(s) that receive the Role
         * 
         * @return builder
         * 
         */
        public Builder members(@Nullable Output<List<String>> members) {
            $.members = members;
            return this;
        }

        /**
         * @param members The hrefs that point to User(s) and/or Group(s) that receive the Role
         * 
         * @return builder
         * 
         */
        public Builder members(List<String> members) {
            return members(Output.of(members));
        }

        /**
         * @param members The hrefs that point to User(s) and/or Group(s) that receive the Role
         * 
         * @return builder
         * 
         */
        public Builder members(String... members) {
            return members(List.of(members));
        }

        /**
         * @param resourceSetId ID of the target Resource Set
         * 
         * @return builder
         * 
         */
        public Builder resourceSetId(Output<String> resourceSetId) {
            $.resourceSetId = resourceSetId;
            return this;
        }

        /**
         * @param resourceSetId ID of the target Resource Set
         * 
         * @return builder
         * 
         */
        public Builder resourceSetId(String resourceSetId) {
            return resourceSetId(Output.of(resourceSetId));
        }

        public AdminRoleCustomAssignmentsArgs build() {
            if ($.customRoleId == null) {
                throw new MissingRequiredPropertyException("AdminRoleCustomAssignmentsArgs", "customRoleId");
            }
            if ($.resourceSetId == null) {
                throw new MissingRequiredPropertyException("AdminRoleCustomAssignmentsArgs", "resourceSetId");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.inputs.GetCampaignResourceSettingsExcludedResourceArgs;
import com.pulumi.okta.inputs.GetCampaignResourceSettingsTargetResourceArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCampaignResourceSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCampaignResourceSettingsArgs Empty = new GetCampaignResourceSettingsArgs();

    /**
     * An array of resources that are excluded from the review.
     * 
     */
    @Import(name="excludedResources")
    private @Nullable Output<List<GetCampaignResourceSettingsExcludedResourceArgs>> excludedResources;

    /**
     * @return An array of resources that are excluded from the review.
     * 
     */
    public Optional<Output<List<GetCampaignResourceSettingsExcludedResourceArgs>>> excludedResources() {
        return Optional.ofNullable(this.excludedResources);
    }

    /**
     * Include admin roles.
     * 
     */
    @Import(name="includeAdminRoles", required=true)
    private Output<Boolean> includeAdminRoles;

    /**
     * @return Include admin roles.
     * 
     */
    public Output<Boolean> includeAdminRoles() {
        return this.includeAdminRoles;
    }

    /**
     * Include entitlements for this application.
     * 
     */
    @Import(name="includeEntitlements", required=true)
    private Output<Boolean> includeEntitlements;

    /**
     * @return Include entitlements for this application.
     * 
     */
    public Output<Boolean> includeEntitlements() {
        return this.includeEntitlements;
    }

    /**
     * Only include individually assigned groups.
     * 
     */
    @Import(name="individuallyAssignedAppsOnly", required=true)
    private Output<Boolean> individuallyAssignedAppsOnly;

    /**
     * @return Only include individually assigned groups.
     * 
     */
    public Output<Boolean> individuallyAssignedAppsOnly() {
        return this.individuallyAssignedAppsOnly;
    }

    /**
     * Only include individually assigned groups.
     * 
     */
    @Import(name="individuallyAssignedGroupsOnly", required=true)
    private Output<Boolean> individuallyAssignedGroupsOnly;

    /**
     * @return Only include individually assigned groups.
     * 
     */
    public Output<Boolean> individuallyAssignedGroupsOnly() {
        return this.individuallyAssignedGroupsOnly;
    }

    /**
     * Only include out-of-policy entitlements.
     * 
     */
    @Import(name="onlyIncludeOutOfPolicyEntitlements", required=true)
    private Output<Boolean> onlyIncludeOutOfPolicyEntitlements;

    /**
     * @return Only include out-of-policy entitlements.
     * 
     */
    public Output<Boolean> onlyIncludeOutOfPolicyEntitlements() {
        return this.onlyIncludeOutOfPolicyEntitlements;
    }

    /**
     * Represents a resource that will be part of Access certifications.
     * 
     */
    @Import(name="targetResources")
    private @Nullable Output<List<GetCampaignResourceSettingsTargetResourceArgs>> targetResources;

    /**
     * @return Represents a resource that will be part of Access certifications.
     * 
     */
    public Optional<Output<List<GetCampaignResourceSettingsTargetResourceArgs>>> targetResources() {
        return Optional.ofNullable(this.targetResources);
    }

    /**
     * The type of Okta resource.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of Okta resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private GetCampaignResourceSettingsArgs() {}

    private GetCampaignResourceSettingsArgs(GetCampaignResourceSettingsArgs $) {
        this.excludedResources = $.excludedResources;
        this.includeAdminRoles = $.includeAdminRoles;
        this.includeEntitlements = $.includeEntitlements;
        this.individuallyAssignedAppsOnly = $.individuallyAssignedAppsOnly;
        this.individuallyAssignedGroupsOnly = $.individuallyAssignedGroupsOnly;
        this.onlyIncludeOutOfPolicyEntitlements = $.onlyIncludeOutOfPolicyEntitlements;
        this.targetResources = $.targetResources;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCampaignResourceSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCampaignResourceSettingsArgs $;

        public Builder() {
            $ = new GetCampaignResourceSettingsArgs();
        }

        public Builder(GetCampaignResourceSettingsArgs defaults) {
            $ = new GetCampaignResourceSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param excludedResources An array of resources that are excluded from the review.
         * 
         * @return builder
         * 
         */
        public Builder excludedResources(@Nullable Output<List<GetCampaignResourceSettingsExcludedResourceArgs>> excludedResources) {
            $.excludedResources = excludedResources;
            return this;
        }

        /**
         * @param excludedResources An array of resources that are excluded from the review.
         * 
         * @return builder
         * 
         */
        public Builder excludedResources(List<GetCampaignResourceSettingsExcludedResourceArgs> excludedResources) {
            return excludedResources(Output.of(excludedResources));
        }

        /**
         * @param excludedResources An array of resources that are excluded from the review.
         * 
         * @return builder
         * 
         */
        public Builder excludedResources(GetCampaignResourceSettingsExcludedResourceArgs... excludedResources) {
            return excludedResources(List.of(excludedResources));
        }

        /**
         * @param includeAdminRoles Include admin roles.
         * 
         * @return builder
         * 
         */
        public Builder includeAdminRoles(Output<Boolean> includeAdminRoles) {
            $.includeAdminRoles = includeAdminRoles;
            return this;
        }

        /**
         * @param includeAdminRoles Include admin roles.
         * 
         * @return builder
         * 
         */
        public Builder includeAdminRoles(Boolean includeAdminRoles) {
            return includeAdminRoles(Output.of(includeAdminRoles));
        }

        /**
         * @param includeEntitlements Include entitlements for this application.
         * 
         * @return builder
         * 
         */
        public Builder includeEntitlements(Output<Boolean> includeEntitlements) {
            $.includeEntitlements = includeEntitlements;
            return this;
        }

        /**
         * @param includeEntitlements Include entitlements for this application.
         * 
         * @return builder
         * 
         */
        public Builder includeEntitlements(Boolean includeEntitlements) {
            return includeEntitlements(Output.of(includeEntitlements));
        }

        /**
         * @param individuallyAssignedAppsOnly Only include individually assigned groups.
         * 
         * @return builder
         * 
         */
        public Builder individuallyAssignedAppsOnly(Output<Boolean> individuallyAssignedAppsOnly) {
            $.individuallyAssignedAppsOnly = individuallyAssignedAppsOnly;
            return this;
        }

        /**
         * @param individuallyAssignedAppsOnly Only include individually assigned groups.
         * 
         * @return builder
         * 
         */
        public Builder individuallyAssignedAppsOnly(Boolean individuallyAssignedAppsOnly) {
            return individuallyAssignedAppsOnly(Output.of(individuallyAssignedAppsOnly));
        }

        /**
         * @param individuallyAssignedGroupsOnly Only include individually assigned groups.
         * 
         * @return builder
         * 
         */
        public Builder individuallyAssignedGroupsOnly(Output<Boolean> individuallyAssignedGroupsOnly) {
            $.individuallyAssignedGroupsOnly = individuallyAssignedGroupsOnly;
            return this;
        }

        /**
         * @param individuallyAssignedGroupsOnly Only include individually assigned groups.
         * 
         * @return builder
         * 
         */
        public Builder individuallyAssignedGroupsOnly(Boolean individuallyAssignedGroupsOnly) {
            return individuallyAssignedGroupsOnly(Output.of(individuallyAssignedGroupsOnly));
        }

        /**
         * @param onlyIncludeOutOfPolicyEntitlements Only include out-of-policy entitlements.
         * 
         * @return builder
         * 
         */
        public Builder onlyIncludeOutOfPolicyEntitlements(Output<Boolean> onlyIncludeOutOfPolicyEntitlements) {
            $.onlyIncludeOutOfPolicyEntitlements = onlyIncludeOutOfPolicyEntitlements;
            return this;
        }

        /**
         * @param onlyIncludeOutOfPolicyEntitlements Only include out-of-policy entitlements.
         * 
         * @return builder
         * 
         */
        public Builder onlyIncludeOutOfPolicyEntitlements(Boolean onlyIncludeOutOfPolicyEntitlements) {
            return onlyIncludeOutOfPolicyEntitlements(Output.of(onlyIncludeOutOfPolicyEntitlements));
        }

        /**
         * @param targetResources Represents a resource that will be part of Access certifications.
         * 
         * @return builder
         * 
         */
        public Builder targetResources(@Nullable Output<List<GetCampaignResourceSettingsTargetResourceArgs>> targetResources) {
            $.targetResources = targetResources;
            return this;
        }

        /**
         * @param targetResources Represents a resource that will be part of Access certifications.
         * 
         * @return builder
         * 
         */
        public Builder targetResources(List<GetCampaignResourceSettingsTargetResourceArgs> targetResources) {
            return targetResources(Output.of(targetResources));
        }

        /**
         * @param targetResources Represents a resource that will be part of Access certifications.
         * 
         * @return builder
         * 
         */
        public Builder targetResources(GetCampaignResourceSettingsTargetResourceArgs... targetResources) {
            return targetResources(List.of(targetResources));
        }

        /**
         * @param type The type of Okta resource.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of Okta resource.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetCampaignResourceSettingsArgs build() {
            if ($.includeAdminRoles == null) {
                throw new MissingRequiredPropertyException("GetCampaignResourceSettingsArgs", "includeAdminRoles");
            }
            if ($.includeEntitlements == null) {
                throw new MissingRequiredPropertyException("GetCampaignResourceSettingsArgs", "includeEntitlements");
            }
            if ($.individuallyAssignedAppsOnly == null) {
                throw new MissingRequiredPropertyException("GetCampaignResourceSettingsArgs", "individuallyAssignedAppsOnly");
            }
            if ($.individuallyAssignedGroupsOnly == null) {
                throw new MissingRequiredPropertyException("GetCampaignResourceSettingsArgs", "individuallyAssignedGroupsOnly");
            }
            if ($.onlyIncludeOutOfPolicyEntitlements == null) {
                throw new MissingRequiredPropertyException("GetCampaignResourceSettingsArgs", "onlyIncludeOutOfPolicyEntitlements");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetCampaignResourceSettingsArgs", "type");
            }
            return $;
        }
    }

}

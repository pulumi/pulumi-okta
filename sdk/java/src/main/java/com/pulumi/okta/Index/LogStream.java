// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.Index;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Index.LogStreamArgs;
import com.pulumi.okta.Index.inputs.LogStreamState;
import com.pulumi.okta.Index.outputs.LogStreamSettings;
import com.pulumi.okta.Utilities;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates an Okta Log Stream.
 * 
 * This resource allows you to create and configure an Okta Log Stream.
 * 
 * ## Example Usage
 * 
 * ### AWS EventBridge
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.Index.LogStream;
 * import com.pulumi.okta.Index.LogStreamArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new LogStream("example", LogStreamArgs.builder()
 *             .name("EventBridge Log Stream")
 *             .type("aws_eventbridge")
 *             .status("ACTIVE")
 *             .settings(LogStreamSettingsArgs.builder()
 *                 .accountId("123456789012")
 *                 .region("us-north-1")
 *                 .eventSourceName("okta_log_stream")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Splunk Event Collector
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.Index.LogStream;
 * import com.pulumi.okta.Index.LogStreamArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new LogStream("example", LogStreamArgs.builder()
 *             .name("Splunk log Stream")
 *             .type("splunk_cloud_logstreaming")
 *             .status("ACTIVE")
 *             .settings(LogStreamSettingsArgs.builder()
 *                 .host("acme.splunkcloud.com")
 *                 .edition("gcp")
 *                 .token("YOUR_HEC_TOKEN")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Okta Log Stream can be imported via the Okta ID.
 * 
 * ```sh
 * $ pulumi import okta:Index/logStream:LogStream example &amp;#60;strema id&amp;#62;
 * ```
 * 
 */
@ResourceType(type="okta:Index/logStream:LogStream")
public class LogStream extends com.pulumi.resources.CustomResource {
    /**
     * Name of the Log Stream Resource.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the Log Stream Resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Stream provider specific configuration.
     * 
     */
    @Export(name="settings", refs={LogStreamSettings.class}, tree="[0]")
    private Output</* @Nullable */ LogStreamSettings> settings;

    /**
     * @return Stream provider specific configuration.
     * 
     */
    public Output<Optional<LogStreamSettings>> settings() {
        return Codegen.optional(this.settings);
    }
    /**
     * Log Stream Status - can either be ACTIVE or INACTIVE only. Default is ACTIVE.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> status;

    /**
     * @return Log Stream Status - can either be ACTIVE or INACTIVE only. Default is ACTIVE.
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * Type of the Log Stream - can either be `&#34;aws_eventbridge&#34;` or `&#34;splunk_cloud_logstreaming&#34;` only.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Type of the Log Stream - can either be `&#34;aws_eventbridge&#34;` or `&#34;splunk_cloud_logstreaming&#34;` only.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LogStream(String name) {
        this(name, LogStreamArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LogStream(String name, LogStreamArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LogStream(String name, LogStreamArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:Index/logStream:LogStream", name, args == null ? LogStreamArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LogStream(String name, Output<String> id, @Nullable LogStreamState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:Index/logStream:LogStream", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LogStream get(String name, Output<String> id, @Nullable LogStreamState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LogStream(name, id, state, options);
    }
}

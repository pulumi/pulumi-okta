// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.GetAppGroupAssignmentsArgs;
import com.pulumi.okta.inputs.GetAppGroupAssignmentsPlainArgs;
import com.pulumi.okta.inputs.GetAppSignonPolicyArgs;
import com.pulumi.okta.inputs.GetAppSignonPolicyPlainArgs;
import com.pulumi.okta.inputs.GetAppUserAssignmentsArgs;
import com.pulumi.okta.inputs.GetAppUserAssignmentsPlainArgs;
import com.pulumi.okta.inputs.GetAppsArgs;
import com.pulumi.okta.inputs.GetAppsPlainArgs;
import com.pulumi.okta.inputs.GetAuthServerClaimArgs;
import com.pulumi.okta.inputs.GetAuthServerClaimPlainArgs;
import com.pulumi.okta.inputs.GetAuthServerClaimsArgs;
import com.pulumi.okta.inputs.GetAuthServerClaimsPlainArgs;
import com.pulumi.okta.inputs.GetAuthenticatorArgs;
import com.pulumi.okta.inputs.GetAuthenticatorPlainArgs;
import com.pulumi.okta.inputs.GetBehaviourArgs;
import com.pulumi.okta.inputs.GetBehaviourPlainArgs;
import com.pulumi.okta.inputs.GetBehavioursArgs;
import com.pulumi.okta.inputs.GetBehavioursPlainArgs;
import com.pulumi.okta.inputs.GetBrandArgs;
import com.pulumi.okta.inputs.GetBrandPlainArgs;
import com.pulumi.okta.inputs.GetCampaignArgs;
import com.pulumi.okta.inputs.GetCampaignPlainArgs;
import com.pulumi.okta.inputs.GetCatalogEntryDefaultArgs;
import com.pulumi.okta.inputs.GetCatalogEntryDefaultPlainArgs;
import com.pulumi.okta.inputs.GetCatalogEntryUserAccessRequestFieldsArgs;
import com.pulumi.okta.inputs.GetCatalogEntryUserAccessRequestFieldsPlainArgs;
import com.pulumi.okta.inputs.GetDefaultSigninPageArgs;
import com.pulumi.okta.inputs.GetDefaultSigninPagePlainArgs;
import com.pulumi.okta.inputs.GetDeviceAssurancePolicyArgs;
import com.pulumi.okta.inputs.GetDeviceAssurancePolicyPlainArgs;
import com.pulumi.okta.inputs.GetDomainArgs;
import com.pulumi.okta.inputs.GetDomainPlainArgs;
import com.pulumi.okta.inputs.GetEmailCustomizationArgs;
import com.pulumi.okta.inputs.GetEmailCustomizationPlainArgs;
import com.pulumi.okta.inputs.GetEmailCustomizationsArgs;
import com.pulumi.okta.inputs.GetEmailCustomizationsPlainArgs;
import com.pulumi.okta.inputs.GetEmailSmtpServerArgs;
import com.pulumi.okta.inputs.GetEmailSmtpServerPlainArgs;
import com.pulumi.okta.inputs.GetEndUserMyRequestsArgs;
import com.pulumi.okta.inputs.GetEndUserMyRequestsPlainArgs;
import com.pulumi.okta.inputs.GetEntitlementArgs;
import com.pulumi.okta.inputs.GetEntitlementBundleArgs;
import com.pulumi.okta.inputs.GetEntitlementBundlePlainArgs;
import com.pulumi.okta.inputs.GetEntitlementPlainArgs;
import com.pulumi.okta.inputs.GetFeaturesArgs;
import com.pulumi.okta.inputs.GetFeaturesPlainArgs;
import com.pulumi.okta.inputs.GetGroupsArgs;
import com.pulumi.okta.inputs.GetGroupsPlainArgs;
import com.pulumi.okta.inputs.GetLogStreamArgs;
import com.pulumi.okta.inputs.GetLogStreamPlainArgs;
import com.pulumi.okta.inputs.GetNetworkZoneArgs;
import com.pulumi.okta.inputs.GetNetworkZonePlainArgs;
import com.pulumi.okta.inputs.GetOrgMetadataArgs;
import com.pulumi.okta.inputs.GetOrgMetadataPlainArgs;
import com.pulumi.okta.inputs.GetPrincipalEntitlementsArgs;
import com.pulumi.okta.inputs.GetPrincipalEntitlementsPlainArgs;
import com.pulumi.okta.inputs.GetPrincipalRateLimitsArgs;
import com.pulumi.okta.inputs.GetPrincipalRateLimitsPlainArgs;
import com.pulumi.okta.inputs.GetRealmArgs;
import com.pulumi.okta.inputs.GetRealmAssignmentArgs;
import com.pulumi.okta.inputs.GetRealmAssignmentPlainArgs;
import com.pulumi.okta.inputs.GetRealmPlainArgs;
import com.pulumi.okta.inputs.GetRequestConditionArgs;
import com.pulumi.okta.inputs.GetRequestConditionPlainArgs;
import com.pulumi.okta.inputs.GetRequestSequenceArgs;
import com.pulumi.okta.inputs.GetRequestSequencePlainArgs;
import com.pulumi.okta.inputs.GetRequestSettingOrganizationArgs;
import com.pulumi.okta.inputs.GetRequestSettingOrganizationPlainArgs;
import com.pulumi.okta.inputs.GetRequestSettingResourceArgs;
import com.pulumi.okta.inputs.GetRequestSettingResourcePlainArgs;
import com.pulumi.okta.inputs.GetRequestV2Args;
import com.pulumi.okta.inputs.GetRequestV2PlainArgs;
import com.pulumi.okta.inputs.GetReviewArgs;
import com.pulumi.okta.inputs.GetReviewPlainArgs;
import com.pulumi.okta.inputs.GetRoleSubscriptionArgs;
import com.pulumi.okta.inputs.GetRoleSubscriptionPlainArgs;
import com.pulumi.okta.inputs.GetTemplateArgs;
import com.pulumi.okta.inputs.GetTemplatePlainArgs;
import com.pulumi.okta.inputs.GetTemplatesArgs;
import com.pulumi.okta.inputs.GetTemplatesPlainArgs;
import com.pulumi.okta.inputs.GetThemeArgs;
import com.pulumi.okta.inputs.GetThemePlainArgs;
import com.pulumi.okta.inputs.GetThemesArgs;
import com.pulumi.okta.inputs.GetThemesPlainArgs;
import com.pulumi.okta.inputs.GetTrustedOriginsArgs;
import com.pulumi.okta.inputs.GetTrustedOriginsPlainArgs;
import com.pulumi.okta.inputs.GetUserSecurityQuestionsArgs;
import com.pulumi.okta.inputs.GetUserSecurityQuestionsPlainArgs;
import com.pulumi.okta.outputs.GetAppGroupAssignmentsResult;
import com.pulumi.okta.outputs.GetAppSignonPolicyResult;
import com.pulumi.okta.outputs.GetAppUserAssignmentsResult;
import com.pulumi.okta.outputs.GetAppsResult;
import com.pulumi.okta.outputs.GetAuthServerClaimResult;
import com.pulumi.okta.outputs.GetAuthServerClaimsResult;
import com.pulumi.okta.outputs.GetAuthenticatorResult;
import com.pulumi.okta.outputs.GetBehaviourResult;
import com.pulumi.okta.outputs.GetBehavioursResult;
import com.pulumi.okta.outputs.GetBrandResult;
import com.pulumi.okta.outputs.GetBrandsResult;
import com.pulumi.okta.outputs.GetCampaignResult;
import com.pulumi.okta.outputs.GetCatalogEntryDefaultResult;
import com.pulumi.okta.outputs.GetCatalogEntryUserAccessRequestFieldsResult;
import com.pulumi.okta.outputs.GetDefaultSigninPageResult;
import com.pulumi.okta.outputs.GetDeviceAssurancePolicyResult;
import com.pulumi.okta.outputs.GetDomainResult;
import com.pulumi.okta.outputs.GetEmailCustomizationResult;
import com.pulumi.okta.outputs.GetEmailCustomizationsResult;
import com.pulumi.okta.outputs.GetEmailSmtpServerResult;
import com.pulumi.okta.outputs.GetEndUserMyRequestsResult;
import com.pulumi.okta.outputs.GetEntitlementBundleResult;
import com.pulumi.okta.outputs.GetEntitlementResult;
import com.pulumi.okta.outputs.GetFeaturesResult;
import com.pulumi.okta.outputs.GetGroupsResult;
import com.pulumi.okta.outputs.GetLogStreamResult;
import com.pulumi.okta.outputs.GetNetworkZoneResult;
import com.pulumi.okta.outputs.GetOrgMetadataResult;
import com.pulumi.okta.outputs.GetPrincipalEntitlementsResult;
import com.pulumi.okta.outputs.GetPrincipalRateLimitsResult;
import com.pulumi.okta.outputs.GetRateLimitAdminNotificationSettingsResult;
import com.pulumi.okta.outputs.GetRateLimitWarningThresholdPercentageResult;
import com.pulumi.okta.outputs.GetRealmAssignmentResult;
import com.pulumi.okta.outputs.GetRealmResult;
import com.pulumi.okta.outputs.GetRequestConditionResult;
import com.pulumi.okta.outputs.GetRequestSequenceResult;
import com.pulumi.okta.outputs.GetRequestSettingOrganizationResult;
import com.pulumi.okta.outputs.GetRequestSettingResourceResult;
import com.pulumi.okta.outputs.GetRequestV2Result;
import com.pulumi.okta.outputs.GetReviewResult;
import com.pulumi.okta.outputs.GetRoleSubscriptionResult;
import com.pulumi.okta.outputs.GetTemplateResult;
import com.pulumi.okta.outputs.GetTemplatesResult;
import com.pulumi.okta.outputs.GetThemeResult;
import com.pulumi.okta.outputs.GetThemesResult;
import com.pulumi.okta.outputs.GetTrustedOriginsResult;
import com.pulumi.okta.outputs.GetUserSecurityQuestionsResult;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class OktaFunctions {
    /**
     * Get a set of groups assigned to an Okta application.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAppGroupAssignmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAppGroupAssignments(GetAppGroupAssignmentsArgs.builder()
     *             .id(testOktaAppOauth.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAppGroupAssignmentsResult> getAppGroupAssignments(GetAppGroupAssignmentsArgs args) {
        return getAppGroupAssignments(args, InvokeOptions.Empty);
    }
    /**
     * Get a set of groups assigned to an Okta application.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAppGroupAssignmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAppGroupAssignments(GetAppGroupAssignmentsArgs.builder()
     *             .id(testOktaAppOauth.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAppGroupAssignmentsResult> getAppGroupAssignmentsPlain(GetAppGroupAssignmentsPlainArgs args) {
        return getAppGroupAssignmentsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a set of groups assigned to an Okta application.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAppGroupAssignmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAppGroupAssignments(GetAppGroupAssignmentsArgs.builder()
     *             .id(testOktaAppOauth.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAppGroupAssignmentsResult> getAppGroupAssignments(GetAppGroupAssignmentsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getAppGroupAssignments:getAppGroupAssignments", TypeShape.of(GetAppGroupAssignmentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a set of groups assigned to an Okta application.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAppGroupAssignmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAppGroupAssignments(GetAppGroupAssignmentsArgs.builder()
     *             .id(testOktaAppOauth.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAppGroupAssignmentsResult> getAppGroupAssignments(GetAppGroupAssignmentsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getAppGroupAssignments:getAppGroupAssignments", TypeShape.of(GetAppGroupAssignmentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a set of groups assigned to an Okta application.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAppGroupAssignmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAppGroupAssignments(GetAppGroupAssignmentsArgs.builder()
     *             .id(testOktaAppOauth.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAppGroupAssignmentsResult> getAppGroupAssignmentsPlain(GetAppGroupAssignmentsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getAppGroupAssignments:getAppGroupAssignments", TypeShape.of(GetAppGroupAssignmentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a sign-on policy for the application.
     * 
     * &gt; **WARNING:** This feature is only available as a part of the
     * Identity Engine. Contact support
     * for further information.
     * 
     * &gt; Inside the product a sign-on policy is referenced as an _authentication
     * policy_, in the public API the policy is of type
     * [`ACCESS_POLICY`](https://developer.okta.com/docs/reference/api/policy/#policy-object).
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAppSignonPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getAppSignonPolicy(GetAppSignonPolicyArgs.builder()
     *             .appId("app_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAppSignonPolicyResult> getAppSignonPolicy(GetAppSignonPolicyArgs args) {
        return getAppSignonPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Get a sign-on policy for the application.
     * 
     * &gt; **WARNING:** This feature is only available as a part of the
     * Identity Engine. Contact support
     * for further information.
     * 
     * &gt; Inside the product a sign-on policy is referenced as an _authentication
     * policy_, in the public API the policy is of type
     * [`ACCESS_POLICY`](https://developer.okta.com/docs/reference/api/policy/#policy-object).
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAppSignonPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getAppSignonPolicy(GetAppSignonPolicyArgs.builder()
     *             .appId("app_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAppSignonPolicyResult> getAppSignonPolicyPlain(GetAppSignonPolicyPlainArgs args) {
        return getAppSignonPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a sign-on policy for the application.
     * 
     * &gt; **WARNING:** This feature is only available as a part of the
     * Identity Engine. Contact support
     * for further information.
     * 
     * &gt; Inside the product a sign-on policy is referenced as an _authentication
     * policy_, in the public API the policy is of type
     * [`ACCESS_POLICY`](https://developer.okta.com/docs/reference/api/policy/#policy-object).
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAppSignonPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getAppSignonPolicy(GetAppSignonPolicyArgs.builder()
     *             .appId("app_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAppSignonPolicyResult> getAppSignonPolicy(GetAppSignonPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getAppSignonPolicy:getAppSignonPolicy", TypeShape.of(GetAppSignonPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a sign-on policy for the application.
     * 
     * &gt; **WARNING:** This feature is only available as a part of the
     * Identity Engine. Contact support
     * for further information.
     * 
     * &gt; Inside the product a sign-on policy is referenced as an _authentication
     * policy_, in the public API the policy is of type
     * [`ACCESS_POLICY`](https://developer.okta.com/docs/reference/api/policy/#policy-object).
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAppSignonPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getAppSignonPolicy(GetAppSignonPolicyArgs.builder()
     *             .appId("app_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAppSignonPolicyResult> getAppSignonPolicy(GetAppSignonPolicyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getAppSignonPolicy:getAppSignonPolicy", TypeShape.of(GetAppSignonPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a sign-on policy for the application.
     * 
     * &gt; **WARNING:** This feature is only available as a part of the
     * Identity Engine. Contact support
     * for further information.
     * 
     * &gt; Inside the product a sign-on policy is referenced as an _authentication
     * policy_, in the public API the policy is of type
     * [`ACCESS_POLICY`](https://developer.okta.com/docs/reference/api/policy/#policy-object).
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAppSignonPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getAppSignonPolicy(GetAppSignonPolicyArgs.builder()
     *             .appId("app_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAppSignonPolicyResult> getAppSignonPolicyPlain(GetAppSignonPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getAppSignonPolicy:getAppSignonPolicy", TypeShape.of(GetAppSignonPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a set of users assigned to an Okta application.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAppUserAssignmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAppUserAssignments(GetAppUserAssignmentsArgs.builder()
     *             .id(testOktaAppOauth.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAppUserAssignmentsResult> getAppUserAssignments(GetAppUserAssignmentsArgs args) {
        return getAppUserAssignments(args, InvokeOptions.Empty);
    }
    /**
     * Get a set of users assigned to an Okta application.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAppUserAssignmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAppUserAssignments(GetAppUserAssignmentsArgs.builder()
     *             .id(testOktaAppOauth.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAppUserAssignmentsResult> getAppUserAssignmentsPlain(GetAppUserAssignmentsPlainArgs args) {
        return getAppUserAssignmentsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a set of users assigned to an Okta application.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAppUserAssignmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAppUserAssignments(GetAppUserAssignmentsArgs.builder()
     *             .id(testOktaAppOauth.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAppUserAssignmentsResult> getAppUserAssignments(GetAppUserAssignmentsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getAppUserAssignments:getAppUserAssignments", TypeShape.of(GetAppUserAssignmentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a set of users assigned to an Okta application.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAppUserAssignmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAppUserAssignments(GetAppUserAssignmentsArgs.builder()
     *             .id(testOktaAppOauth.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAppUserAssignmentsResult> getAppUserAssignments(GetAppUserAssignmentsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getAppUserAssignments:getAppUserAssignments", TypeShape.of(GetAppUserAssignmentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a set of users assigned to an Okta application.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAppUserAssignmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAppUserAssignments(GetAppUserAssignmentsArgs.builder()
     *             .id(testOktaAppOauth.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAppUserAssignmentsResult> getAppUserAssignmentsPlain(GetAppUserAssignmentsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getAppUserAssignments:getAppUserAssignments", TypeShape.of(GetAppUserAssignmentsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetAppsResult> getApps() {
        return getApps(GetAppsArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAppsResult> getAppsPlain() {
        return getAppsPlain(GetAppsPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetAppsResult> getApps(GetAppsArgs args) {
        return getApps(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAppsResult> getAppsPlain(GetAppsPlainArgs args) {
        return getAppsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetAppsResult> getApps(GetAppsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getApps:getApps", TypeShape.of(GetAppsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetAppsResult> getApps(GetAppsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getApps:getApps", TypeShape.of(GetAppsResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetAppsResult> getAppsPlain(GetAppsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getApps:getApps", TypeShape.of(GetAppsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get authorization server claim from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthServerClaimArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthServerClaim(GetAuthServerClaimArgs.builder()
     *             .authServerId("default")
     *             .name("birthdate")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAuthServerClaimResult> getAuthServerClaim(GetAuthServerClaimArgs args) {
        return getAuthServerClaim(args, InvokeOptions.Empty);
    }
    /**
     * Get authorization server claim from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthServerClaimArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthServerClaim(GetAuthServerClaimArgs.builder()
     *             .authServerId("default")
     *             .name("birthdate")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAuthServerClaimResult> getAuthServerClaimPlain(GetAuthServerClaimPlainArgs args) {
        return getAuthServerClaimPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get authorization server claim from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthServerClaimArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthServerClaim(GetAuthServerClaimArgs.builder()
     *             .authServerId("default")
     *             .name("birthdate")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAuthServerClaimResult> getAuthServerClaim(GetAuthServerClaimArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getAuthServerClaim:getAuthServerClaim", TypeShape.of(GetAuthServerClaimResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get authorization server claim from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthServerClaimArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthServerClaim(GetAuthServerClaimArgs.builder()
     *             .authServerId("default")
     *             .name("birthdate")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAuthServerClaimResult> getAuthServerClaim(GetAuthServerClaimArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getAuthServerClaim:getAuthServerClaim", TypeShape.of(GetAuthServerClaimResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get authorization server claim from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthServerClaimArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthServerClaim(GetAuthServerClaimArgs.builder()
     *             .authServerId("default")
     *             .name("birthdate")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAuthServerClaimResult> getAuthServerClaimPlain(GetAuthServerClaimPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getAuthServerClaim:getAuthServerClaim", TypeShape.of(GetAuthServerClaimResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a list of authorization server claims from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthServerClaimsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthServerClaims(GetAuthServerClaimsArgs.builder()
     *             .authServerId("default")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAuthServerClaimsResult> getAuthServerClaims(GetAuthServerClaimsArgs args) {
        return getAuthServerClaims(args, InvokeOptions.Empty);
    }
    /**
     * Get a list of authorization server claims from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthServerClaimsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthServerClaims(GetAuthServerClaimsArgs.builder()
     *             .authServerId("default")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAuthServerClaimsResult> getAuthServerClaimsPlain(GetAuthServerClaimsPlainArgs args) {
        return getAuthServerClaimsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a list of authorization server claims from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthServerClaimsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthServerClaims(GetAuthServerClaimsArgs.builder()
     *             .authServerId("default")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAuthServerClaimsResult> getAuthServerClaims(GetAuthServerClaimsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getAuthServerClaims:getAuthServerClaims", TypeShape.of(GetAuthServerClaimsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a list of authorization server claims from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthServerClaimsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthServerClaims(GetAuthServerClaimsArgs.builder()
     *             .authServerId("default")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAuthServerClaimsResult> getAuthServerClaims(GetAuthServerClaimsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getAuthServerClaims:getAuthServerClaims", TypeShape.of(GetAuthServerClaimsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a list of authorization server claims from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthServerClaimsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthServerClaims(GetAuthServerClaimsArgs.builder()
     *             .authServerId("default")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAuthServerClaimsResult> getAuthServerClaimsPlain(GetAuthServerClaimsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getAuthServerClaims:getAuthServerClaims", TypeShape.of(GetAuthServerClaimsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get an authenticator by key, name of ID.
     * 
     * &gt; **WARNING:** This feature is only available as a part of the
     * Identity Engine. Contact support
     * for further information.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthenticatorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()
     *             .key("security_question")
     *             .build());
     * 
     *         final var test1 = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()
     *             .name("Okta Verify")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAuthenticatorResult> getAuthenticator() {
        return getAuthenticator(GetAuthenticatorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get an authenticator by key, name of ID.
     * 
     * &gt; **WARNING:** This feature is only available as a part of the
     * Identity Engine. Contact support
     * for further information.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthenticatorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()
     *             .key("security_question")
     *             .build());
     * 
     *         final var test1 = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()
     *             .name("Okta Verify")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAuthenticatorResult> getAuthenticatorPlain() {
        return getAuthenticatorPlain(GetAuthenticatorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get an authenticator by key, name of ID.
     * 
     * &gt; **WARNING:** This feature is only available as a part of the
     * Identity Engine. Contact support
     * for further information.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthenticatorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()
     *             .key("security_question")
     *             .build());
     * 
     *         final var test1 = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()
     *             .name("Okta Verify")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAuthenticatorResult> getAuthenticator(GetAuthenticatorArgs args) {
        return getAuthenticator(args, InvokeOptions.Empty);
    }
    /**
     * Get an authenticator by key, name of ID.
     * 
     * &gt; **WARNING:** This feature is only available as a part of the
     * Identity Engine. Contact support
     * for further information.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthenticatorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()
     *             .key("security_question")
     *             .build());
     * 
     *         final var test1 = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()
     *             .name("Okta Verify")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAuthenticatorResult> getAuthenticatorPlain(GetAuthenticatorPlainArgs args) {
        return getAuthenticatorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get an authenticator by key, name of ID.
     * 
     * &gt; **WARNING:** This feature is only available as a part of the
     * Identity Engine. Contact support
     * for further information.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthenticatorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()
     *             .key("security_question")
     *             .build());
     * 
     *         final var test1 = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()
     *             .name("Okta Verify")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAuthenticatorResult> getAuthenticator(GetAuthenticatorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getAuthenticator:getAuthenticator", TypeShape.of(GetAuthenticatorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get an authenticator by key, name of ID.
     * 
     * &gt; **WARNING:** This feature is only available as a part of the
     * Identity Engine. Contact support
     * for further information.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthenticatorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()
     *             .key("security_question")
     *             .build());
     * 
     *         final var test1 = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()
     *             .name("Okta Verify")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAuthenticatorResult> getAuthenticator(GetAuthenticatorArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getAuthenticator:getAuthenticator", TypeShape.of(GetAuthenticatorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get an authenticator by key, name of ID.
     * 
     * &gt; **WARNING:** This feature is only available as a part of the
     * Identity Engine. Contact support
     * for further information.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetAuthenticatorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()
     *             .key("security_question")
     *             .build());
     * 
     *         final var test1 = OktaFunctions.getAuthenticator(GetAuthenticatorArgs.builder()
     *             .name("Okta Verify")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAuthenticatorResult> getAuthenticatorPlain(GetAuthenticatorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getAuthenticator:getAuthenticator", TypeShape.of(GetAuthenticatorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a behavior by name or ID.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetBehaviourResult> getBehaviour() {
        return getBehaviour(GetBehaviourArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a behavior by name or ID.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetBehaviourResult> getBehaviourPlain() {
        return getBehaviourPlain(GetBehaviourPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a behavior by name or ID.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetBehaviourResult> getBehaviour(GetBehaviourArgs args) {
        return getBehaviour(args, InvokeOptions.Empty);
    }
    /**
     * Get a behavior by name or ID.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetBehaviourResult> getBehaviourPlain(GetBehaviourPlainArgs args) {
        return getBehaviourPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a behavior by name or ID.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetBehaviourResult> getBehaviour(GetBehaviourArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getBehaviour:getBehaviour", TypeShape.of(GetBehaviourResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a behavior by name or ID.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetBehaviourResult> getBehaviour(GetBehaviourArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getBehaviour:getBehaviour", TypeShape.of(GetBehaviourResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a behavior by name or ID.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetBehaviourResult> getBehaviourPlain(GetBehaviourPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getBehaviour:getBehaviour", TypeShape.of(GetBehaviourResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a behaviors by search criteria.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetBehavioursArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getBehaviours(GetBehavioursArgs.builder()
     *             .q("New")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetBehavioursResult> getBehaviours() {
        return getBehaviours(GetBehavioursArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a behaviors by search criteria.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetBehavioursArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getBehaviours(GetBehavioursArgs.builder()
     *             .q("New")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetBehavioursResult> getBehavioursPlain() {
        return getBehavioursPlain(GetBehavioursPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a behaviors by search criteria.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetBehavioursArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getBehaviours(GetBehavioursArgs.builder()
     *             .q("New")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetBehavioursResult> getBehaviours(GetBehavioursArgs args) {
        return getBehaviours(args, InvokeOptions.Empty);
    }
    /**
     * Get a behaviors by search criteria.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetBehavioursArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getBehaviours(GetBehavioursArgs.builder()
     *             .q("New")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetBehavioursResult> getBehavioursPlain(GetBehavioursPlainArgs args) {
        return getBehavioursPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a behaviors by search criteria.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetBehavioursArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getBehaviours(GetBehavioursArgs.builder()
     *             .q("New")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetBehavioursResult> getBehaviours(GetBehavioursArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getBehaviours:getBehaviours", TypeShape.of(GetBehavioursResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a behaviors by search criteria.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetBehavioursArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getBehaviours(GetBehavioursArgs.builder()
     *             .q("New")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetBehavioursResult> getBehaviours(GetBehavioursArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getBehaviours:getBehaviours", TypeShape.of(GetBehavioursResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a behaviors by search criteria.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetBehavioursArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getBehaviours(GetBehavioursArgs.builder()
     *             .q("New")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetBehavioursResult> getBehavioursPlain(GetBehavioursPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getBehaviours:getBehaviours", TypeShape.of(GetBehavioursResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a single Brand from Okta.
     * 
     */
    public static Output<GetBrandResult> getBrand(GetBrandArgs args) {
        return getBrand(args, InvokeOptions.Empty);
    }
    /**
     * Get a single Brand from Okta.
     * 
     */
    public static CompletableFuture<GetBrandResult> getBrandPlain(GetBrandPlainArgs args) {
        return getBrandPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a single Brand from Okta.
     * 
     */
    public static Output<GetBrandResult> getBrand(GetBrandArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getBrand:getBrand", TypeShape.of(GetBrandResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a single Brand from Okta.
     * 
     */
    public static Output<GetBrandResult> getBrand(GetBrandArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getBrand:getBrand", TypeShape.of(GetBrandResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a single Brand from Okta.
     * 
     */
    public static CompletableFuture<GetBrandResult> getBrandPlain(GetBrandPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getBrand:getBrand", TypeShape.of(GetBrandResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the brands belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getBrands(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetBrandsResult> getBrands() {
        return getBrands(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get the brands belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getBrands(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetBrandsResult> getBrandsPlain() {
        return getBrandsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get the brands belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getBrands(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetBrandsResult> getBrands(InvokeArgs args) {
        return getBrands(args, InvokeOptions.Empty);
    }
    /**
     * Get the brands belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getBrands(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetBrandsResult> getBrandsPlain(InvokeArgs args) {
        return getBrandsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get the brands belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getBrands(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetBrandsResult> getBrands(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getBrands:getBrands", TypeShape.of(GetBrandsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the brands belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getBrands(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetBrandsResult> getBrands(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getBrands:getBrands", TypeShape.of(GetBrandsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the brands belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getBrands(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetBrandsResult> getBrandsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getBrands:getBrands", TypeShape.of(GetBrandsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the campaign belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetCampaignArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getCampaign(GetCampaignArgs.builder()
     *             .id("<campaign id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCampaignResult> getCampaign() {
        return getCampaign(GetCampaignArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get the campaign belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetCampaignArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getCampaign(GetCampaignArgs.builder()
     *             .id("<campaign id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCampaignResult> getCampaignPlain() {
        return getCampaignPlain(GetCampaignPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get the campaign belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetCampaignArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getCampaign(GetCampaignArgs.builder()
     *             .id("<campaign id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCampaignResult> getCampaign(GetCampaignArgs args) {
        return getCampaign(args, InvokeOptions.Empty);
    }
    /**
     * Get the campaign belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetCampaignArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getCampaign(GetCampaignArgs.builder()
     *             .id("<campaign id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCampaignResult> getCampaignPlain(GetCampaignPlainArgs args) {
        return getCampaignPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get the campaign belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetCampaignArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getCampaign(GetCampaignArgs.builder()
     *             .id("<campaign id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCampaignResult> getCampaign(GetCampaignArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getCampaign:getCampaign", TypeShape.of(GetCampaignResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the campaign belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetCampaignArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getCampaign(GetCampaignArgs.builder()
     *             .id("<campaign id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCampaignResult> getCampaign(GetCampaignArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getCampaign:getCampaign", TypeShape.of(GetCampaignResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the campaign belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetCampaignArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getCampaign(GetCampaignArgs.builder()
     *             .id("<campaign id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCampaignResult> getCampaignPlain(GetCampaignPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getCampaign:getCampaign", TypeShape.of(GetCampaignResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a catalog entry.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetCatalogEntryUserAccessRequestFieldsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getCatalogEntryUserAccessRequestFields(GetCatalogEntryUserAccessRequestFieldsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCatalogEntryDefaultResult> getCatalogEntryDefault(GetCatalogEntryDefaultArgs args) {
        return getCatalogEntryDefault(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a catalog entry.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetCatalogEntryUserAccessRequestFieldsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getCatalogEntryUserAccessRequestFields(GetCatalogEntryUserAccessRequestFieldsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCatalogEntryDefaultResult> getCatalogEntryDefaultPlain(GetCatalogEntryDefaultPlainArgs args) {
        return getCatalogEntryDefaultPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a catalog entry.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetCatalogEntryUserAccessRequestFieldsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getCatalogEntryUserAccessRequestFields(GetCatalogEntryUserAccessRequestFieldsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCatalogEntryDefaultResult> getCatalogEntryDefault(GetCatalogEntryDefaultArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getCatalogEntryDefault:getCatalogEntryDefault", TypeShape.of(GetCatalogEntryDefaultResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a catalog entry.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetCatalogEntryUserAccessRequestFieldsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getCatalogEntryUserAccessRequestFields(GetCatalogEntryUserAccessRequestFieldsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCatalogEntryDefaultResult> getCatalogEntryDefault(GetCatalogEntryDefaultArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getCatalogEntryDefault:getCatalogEntryDefault", TypeShape.of(GetCatalogEntryDefaultResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a catalog entry.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetCatalogEntryUserAccessRequestFieldsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getCatalogEntryUserAccessRequestFields(GetCatalogEntryUserAccessRequestFieldsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCatalogEntryDefaultResult> getCatalogEntryDefaultPlain(GetCatalogEntryDefaultPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getCatalogEntryDefault:getCatalogEntryDefault", TypeShape.of(GetCatalogEntryDefaultResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetCatalogEntryUserAccessRequestFieldsResult> getCatalogEntryUserAccessRequestFields(GetCatalogEntryUserAccessRequestFieldsArgs args) {
        return getCatalogEntryUserAccessRequestFields(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetCatalogEntryUserAccessRequestFieldsResult> getCatalogEntryUserAccessRequestFieldsPlain(GetCatalogEntryUserAccessRequestFieldsPlainArgs args) {
        return getCatalogEntryUserAccessRequestFieldsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetCatalogEntryUserAccessRequestFieldsResult> getCatalogEntryUserAccessRequestFields(GetCatalogEntryUserAccessRequestFieldsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getCatalogEntryUserAccessRequestFields:getCatalogEntryUserAccessRequestFields", TypeShape.of(GetCatalogEntryUserAccessRequestFieldsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetCatalogEntryUserAccessRequestFieldsResult> getCatalogEntryUserAccessRequestFields(GetCatalogEntryUserAccessRequestFieldsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getCatalogEntryUserAccessRequestFields:getCatalogEntryUserAccessRequestFields", TypeShape.of(GetCatalogEntryUserAccessRequestFieldsResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetCatalogEntryUserAccessRequestFieldsResult> getCatalogEntryUserAccessRequestFieldsPlain(GetCatalogEntryUserAccessRequestFieldsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getCatalogEntryUserAccessRequestFields:getCatalogEntryUserAccessRequestFields", TypeShape.of(GetCatalogEntryUserAccessRequestFieldsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieve the default signin page of a brand
     * 
     */
    public static Output<GetDefaultSigninPageResult> getDefaultSigninPage(GetDefaultSigninPageArgs args) {
        return getDefaultSigninPage(args, InvokeOptions.Empty);
    }
    /**
     * Retrieve the default signin page of a brand
     * 
     */
    public static CompletableFuture<GetDefaultSigninPageResult> getDefaultSigninPagePlain(GetDefaultSigninPagePlainArgs args) {
        return getDefaultSigninPagePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieve the default signin page of a brand
     * 
     */
    public static Output<GetDefaultSigninPageResult> getDefaultSigninPage(GetDefaultSigninPageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getDefaultSigninPage:getDefaultSigninPage", TypeShape.of(GetDefaultSigninPageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieve the default signin page of a brand
     * 
     */
    public static Output<GetDefaultSigninPageResult> getDefaultSigninPage(GetDefaultSigninPageArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getDefaultSigninPage:getDefaultSigninPage", TypeShape.of(GetDefaultSigninPageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieve the default signin page of a brand
     * 
     */
    public static CompletableFuture<GetDefaultSigninPageResult> getDefaultSigninPagePlain(GetDefaultSigninPagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getDefaultSigninPage:getDefaultSigninPage", TypeShape.of(GetDefaultSigninPageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a policy assurance from Okta.
     * 
     */
    public static Output<GetDeviceAssurancePolicyResult> getDeviceAssurancePolicy() {
        return getDeviceAssurancePolicy(GetDeviceAssurancePolicyArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a policy assurance from Okta.
     * 
     */
    public static CompletableFuture<GetDeviceAssurancePolicyResult> getDeviceAssurancePolicyPlain() {
        return getDeviceAssurancePolicyPlain(GetDeviceAssurancePolicyPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a policy assurance from Okta.
     * 
     */
    public static Output<GetDeviceAssurancePolicyResult> getDeviceAssurancePolicy(GetDeviceAssurancePolicyArgs args) {
        return getDeviceAssurancePolicy(args, InvokeOptions.Empty);
    }
    /**
     * Get a policy assurance from Okta.
     * 
     */
    public static CompletableFuture<GetDeviceAssurancePolicyResult> getDeviceAssurancePolicyPlain(GetDeviceAssurancePolicyPlainArgs args) {
        return getDeviceAssurancePolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a policy assurance from Okta.
     * 
     */
    public static Output<GetDeviceAssurancePolicyResult> getDeviceAssurancePolicy(GetDeviceAssurancePolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getDeviceAssurancePolicy:getDeviceAssurancePolicy", TypeShape.of(GetDeviceAssurancePolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a policy assurance from Okta.
     * 
     */
    public static Output<GetDeviceAssurancePolicyResult> getDeviceAssurancePolicy(GetDeviceAssurancePolicyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getDeviceAssurancePolicy:getDeviceAssurancePolicy", TypeShape.of(GetDeviceAssurancePolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a policy assurance from Okta.
     * 
     */
    public static CompletableFuture<GetDeviceAssurancePolicyResult> getDeviceAssurancePolicyPlain(GetDeviceAssurancePolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getDeviceAssurancePolicy:getDeviceAssurancePolicy", TypeShape.of(GetDeviceAssurancePolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a domain from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.Domain;
     * import com.pulumi.okta.DomainArgs;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var example = new Domain("example", DomainArgs.builder()
     *             .name("www.example.com")
     *             .build());
     * 
     *         final var by-name = OktaFunctions.getDomain(GetDomainArgs.builder()
     *             .domainIdOrName("www.example.com")
     *             .build());
     * 
     *         final var by-id = OktaFunctions.getDomain(GetDomainArgs.builder()
     *             .domainIdOrName(example.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDomainResult> getDomain(GetDomainArgs args) {
        return getDomain(args, InvokeOptions.Empty);
    }
    /**
     * Get a domain from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.Domain;
     * import com.pulumi.okta.DomainArgs;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var example = new Domain("example", DomainArgs.builder()
     *             .name("www.example.com")
     *             .build());
     * 
     *         final var by-name = OktaFunctions.getDomain(GetDomainArgs.builder()
     *             .domainIdOrName("www.example.com")
     *             .build());
     * 
     *         final var by-id = OktaFunctions.getDomain(GetDomainArgs.builder()
     *             .domainIdOrName(example.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDomainResult> getDomainPlain(GetDomainPlainArgs args) {
        return getDomainPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a domain from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.Domain;
     * import com.pulumi.okta.DomainArgs;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var example = new Domain("example", DomainArgs.builder()
     *             .name("www.example.com")
     *             .build());
     * 
     *         final var by-name = OktaFunctions.getDomain(GetDomainArgs.builder()
     *             .domainIdOrName("www.example.com")
     *             .build());
     * 
     *         final var by-id = OktaFunctions.getDomain(GetDomainArgs.builder()
     *             .domainIdOrName(example.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDomainResult> getDomain(GetDomainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getDomain:getDomain", TypeShape.of(GetDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a domain from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.Domain;
     * import com.pulumi.okta.DomainArgs;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var example = new Domain("example", DomainArgs.builder()
     *             .name("www.example.com")
     *             .build());
     * 
     *         final var by-name = OktaFunctions.getDomain(GetDomainArgs.builder()
     *             .domainIdOrName("www.example.com")
     *             .build());
     * 
     *         final var by-id = OktaFunctions.getDomain(GetDomainArgs.builder()
     *             .domainIdOrName(example.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDomainResult> getDomain(GetDomainArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getDomain:getDomain", TypeShape.of(GetDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a domain from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.Domain;
     * import com.pulumi.okta.DomainArgs;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var example = new Domain("example", DomainArgs.builder()
     *             .name("www.example.com")
     *             .build());
     * 
     *         final var by-name = OktaFunctions.getDomain(GetDomainArgs.builder()
     *             .domainIdOrName("www.example.com")
     *             .build());
     * 
     *         final var by-id = OktaFunctions.getDomain(GetDomainArgs.builder()
     *             .domainIdOrName(example.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDomainResult> getDomainPlain(GetDomainPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getDomain:getDomain", TypeShape.of(GetDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the email customization of an email template belonging to a brand in an Okta organization.
     * 
     */
    public static Output<GetEmailCustomizationResult> getEmailCustomization(GetEmailCustomizationArgs args) {
        return getEmailCustomization(args, InvokeOptions.Empty);
    }
    /**
     * Get the email customization of an email template belonging to a brand in an Okta organization.
     * 
     */
    public static CompletableFuture<GetEmailCustomizationResult> getEmailCustomizationPlain(GetEmailCustomizationPlainArgs args) {
        return getEmailCustomizationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get the email customization of an email template belonging to a brand in an Okta organization.
     * 
     */
    public static Output<GetEmailCustomizationResult> getEmailCustomization(GetEmailCustomizationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getEmailCustomization:getEmailCustomization", TypeShape.of(GetEmailCustomizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the email customization of an email template belonging to a brand in an Okta organization.
     * 
     */
    public static Output<GetEmailCustomizationResult> getEmailCustomization(GetEmailCustomizationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getEmailCustomization:getEmailCustomization", TypeShape.of(GetEmailCustomizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the email customization of an email template belonging to a brand in an Okta organization.
     * 
     */
    public static CompletableFuture<GetEmailCustomizationResult> getEmailCustomizationPlain(GetEmailCustomizationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getEmailCustomization:getEmailCustomization", TypeShape.of(GetEmailCustomizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the email customizations of an email template belonging to a brand in an Okta organization.
     * 
     */
    public static Output<GetEmailCustomizationsResult> getEmailCustomizations(GetEmailCustomizationsArgs args) {
        return getEmailCustomizations(args, InvokeOptions.Empty);
    }
    /**
     * Get the email customizations of an email template belonging to a brand in an Okta organization.
     * 
     */
    public static CompletableFuture<GetEmailCustomizationsResult> getEmailCustomizationsPlain(GetEmailCustomizationsPlainArgs args) {
        return getEmailCustomizationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get the email customizations of an email template belonging to a brand in an Okta organization.
     * 
     */
    public static Output<GetEmailCustomizationsResult> getEmailCustomizations(GetEmailCustomizationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getEmailCustomizations:getEmailCustomizations", TypeShape.of(GetEmailCustomizationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the email customizations of an email template belonging to a brand in an Okta organization.
     * 
     */
    public static Output<GetEmailCustomizationsResult> getEmailCustomizations(GetEmailCustomizationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getEmailCustomizations:getEmailCustomizations", TypeShape.of(GetEmailCustomizationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the email customizations of an email template belonging to a brand in an Okta organization.
     * 
     */
    public static CompletableFuture<GetEmailCustomizationsResult> getEmailCustomizationsPlain(GetEmailCustomizationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getEmailCustomizations:getEmailCustomizations", TypeShape.of(GetEmailCustomizationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get existing SMTP email server configuration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.EmailSmtpServer;
     * import com.pulumi.okta.EmailSmtpServerArgs;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEmailSmtpServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var smtpServer = new EmailSmtpServer("smtpServer", EmailSmtpServerArgs.builder()
     *             .alias("CustomServer")
     *             .host("192.168.160.1")
     *             .port(8086)
     *             .username("aUser")
     *             .password("abcd")
     *             .build());
     * 
     *         final var serverConfig = OktaFunctions.getEmailSmtpServer(GetEmailSmtpServerArgs.builder()
     *             .id("id-of-your-smtp-server")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEmailSmtpServerResult> getEmailSmtpServer(GetEmailSmtpServerArgs args) {
        return getEmailSmtpServer(args, InvokeOptions.Empty);
    }
    /**
     * Get existing SMTP email server configuration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.EmailSmtpServer;
     * import com.pulumi.okta.EmailSmtpServerArgs;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEmailSmtpServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var smtpServer = new EmailSmtpServer("smtpServer", EmailSmtpServerArgs.builder()
     *             .alias("CustomServer")
     *             .host("192.168.160.1")
     *             .port(8086)
     *             .username("aUser")
     *             .password("abcd")
     *             .build());
     * 
     *         final var serverConfig = OktaFunctions.getEmailSmtpServer(GetEmailSmtpServerArgs.builder()
     *             .id("id-of-your-smtp-server")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEmailSmtpServerResult> getEmailSmtpServerPlain(GetEmailSmtpServerPlainArgs args) {
        return getEmailSmtpServerPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get existing SMTP email server configuration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.EmailSmtpServer;
     * import com.pulumi.okta.EmailSmtpServerArgs;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEmailSmtpServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var smtpServer = new EmailSmtpServer("smtpServer", EmailSmtpServerArgs.builder()
     *             .alias("CustomServer")
     *             .host("192.168.160.1")
     *             .port(8086)
     *             .username("aUser")
     *             .password("abcd")
     *             .build());
     * 
     *         final var serverConfig = OktaFunctions.getEmailSmtpServer(GetEmailSmtpServerArgs.builder()
     *             .id("id-of-your-smtp-server")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEmailSmtpServerResult> getEmailSmtpServer(GetEmailSmtpServerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getEmailSmtpServer:getEmailSmtpServer", TypeShape.of(GetEmailSmtpServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get existing SMTP email server configuration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.EmailSmtpServer;
     * import com.pulumi.okta.EmailSmtpServerArgs;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEmailSmtpServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var smtpServer = new EmailSmtpServer("smtpServer", EmailSmtpServerArgs.builder()
     *             .alias("CustomServer")
     *             .host("192.168.160.1")
     *             .port(8086)
     *             .username("aUser")
     *             .password("abcd")
     *             .build());
     * 
     *         final var serverConfig = OktaFunctions.getEmailSmtpServer(GetEmailSmtpServerArgs.builder()
     *             .id("id-of-your-smtp-server")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEmailSmtpServerResult> getEmailSmtpServer(GetEmailSmtpServerArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getEmailSmtpServer:getEmailSmtpServer", TypeShape.of(GetEmailSmtpServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get existing SMTP email server configuration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.EmailSmtpServer;
     * import com.pulumi.okta.EmailSmtpServerArgs;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEmailSmtpServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var smtpServer = new EmailSmtpServer("smtpServer", EmailSmtpServerArgs.builder()
     *             .alias("CustomServer")
     *             .host("192.168.160.1")
     *             .port(8086)
     *             .username("aUser")
     *             .password("abcd")
     *             .build());
     * 
     *         final var serverConfig = OktaFunctions.getEmailSmtpServer(GetEmailSmtpServerArgs.builder()
     *             .id("id-of-your-smtp-server")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEmailSmtpServerResult> getEmailSmtpServerPlain(GetEmailSmtpServerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getEmailSmtpServer:getEmailSmtpServer", TypeShape.of(GetEmailSmtpServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get an End User Request from Okta Identity Governance. This data source allows you to retrieve information about existing access requests in the Okta Identity Governance system.
     * 
     * Use this data source to fetch details about a specific request, including its current status, field values, and other metadata.
     * 
     * &gt; **Note:** This data source is part of Okta Identity Governance functionality and requires appropriate licensing and configuration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEndUserMyRequestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get a request by its catalog entry ID and request ID
     *         final var example = OktaFunctions.getEndUserMyRequests(GetEndUserMyRequestsArgs.builder()
     *             .entryId("cen123456789abcdefgh")
     *             .id("reqABCDEFG0123456789")
     *             .build());
     * 
     *         ctx.export("requestStatus", example.status());
     *         ctx.export("requestFieldValues", example.requesterFieldValues());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Field Type Reference
     * 
     * ### Field Types and Values
     * 
     * - **TEXT**: Contains free-form text input in the `value` attribute
     * - **SELECT**: Contains single selection value in the `value` attribute
     * - **MULTISELECT**: Contains multiple selection values in the `values` attribute (list)
     * - **DURATION**: Contains time duration specification in the `value` attribute (e.g., &#34;5 days&#34;, &#34;2 weeks&#34;)
     * - **ISO_DATE**: Contains date specification in ISO format in the `value` attribute
     * - **OKTA_USER_ID**: Contains Okta user ID in the `value` attribute
     * 
     * ### Usage Notes
     * 
     * - For `MULTISELECT` type fields, the values will be in the `values` attribute as a list
     * - For all other field types, the value will be in the `value` attribute as a string
     * - The `label` and `type` attributes provide metadata about the field structure
     * - Field definitions and requirements are determined by the approval system configuration
     * 
     * ## Limitations and Considerations
     * 
     * 1. **Read-Only**: This data source only retrieves existing request information and cannot modify requests.
     * 
     * 2. **Identity Governance Licensing**: This data source requires Okta Identity Governance licensing and proper configuration.
     * 
     * 3. **Request Lifecycle**: The data reflects the current state of the request in the approval workflow.
     * 
     * 4. **Field Structure**: The field structure and available types depend on the approval system configuration in Okta Identity Governance.
     * 
     */
    public static Output<GetEndUserMyRequestsResult> getEndUserMyRequests(GetEndUserMyRequestsArgs args) {
        return getEndUserMyRequests(args, InvokeOptions.Empty);
    }
    /**
     * Get an End User Request from Okta Identity Governance. This data source allows you to retrieve information about existing access requests in the Okta Identity Governance system.
     * 
     * Use this data source to fetch details about a specific request, including its current status, field values, and other metadata.
     * 
     * &gt; **Note:** This data source is part of Okta Identity Governance functionality and requires appropriate licensing and configuration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEndUserMyRequestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get a request by its catalog entry ID and request ID
     *         final var example = OktaFunctions.getEndUserMyRequests(GetEndUserMyRequestsArgs.builder()
     *             .entryId("cen123456789abcdefgh")
     *             .id("reqABCDEFG0123456789")
     *             .build());
     * 
     *         ctx.export("requestStatus", example.status());
     *         ctx.export("requestFieldValues", example.requesterFieldValues());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Field Type Reference
     * 
     * ### Field Types and Values
     * 
     * - **TEXT**: Contains free-form text input in the `value` attribute
     * - **SELECT**: Contains single selection value in the `value` attribute
     * - **MULTISELECT**: Contains multiple selection values in the `values` attribute (list)
     * - **DURATION**: Contains time duration specification in the `value` attribute (e.g., &#34;5 days&#34;, &#34;2 weeks&#34;)
     * - **ISO_DATE**: Contains date specification in ISO format in the `value` attribute
     * - **OKTA_USER_ID**: Contains Okta user ID in the `value` attribute
     * 
     * ### Usage Notes
     * 
     * - For `MULTISELECT` type fields, the values will be in the `values` attribute as a list
     * - For all other field types, the value will be in the `value` attribute as a string
     * - The `label` and `type` attributes provide metadata about the field structure
     * - Field definitions and requirements are determined by the approval system configuration
     * 
     * ## Limitations and Considerations
     * 
     * 1. **Read-Only**: This data source only retrieves existing request information and cannot modify requests.
     * 
     * 2. **Identity Governance Licensing**: This data source requires Okta Identity Governance licensing and proper configuration.
     * 
     * 3. **Request Lifecycle**: The data reflects the current state of the request in the approval workflow.
     * 
     * 4. **Field Structure**: The field structure and available types depend on the approval system configuration in Okta Identity Governance.
     * 
     */
    public static CompletableFuture<GetEndUserMyRequestsResult> getEndUserMyRequestsPlain(GetEndUserMyRequestsPlainArgs args) {
        return getEndUserMyRequestsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get an End User Request from Okta Identity Governance. This data source allows you to retrieve information about existing access requests in the Okta Identity Governance system.
     * 
     * Use this data source to fetch details about a specific request, including its current status, field values, and other metadata.
     * 
     * &gt; **Note:** This data source is part of Okta Identity Governance functionality and requires appropriate licensing and configuration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEndUserMyRequestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get a request by its catalog entry ID and request ID
     *         final var example = OktaFunctions.getEndUserMyRequests(GetEndUserMyRequestsArgs.builder()
     *             .entryId("cen123456789abcdefgh")
     *             .id("reqABCDEFG0123456789")
     *             .build());
     * 
     *         ctx.export("requestStatus", example.status());
     *         ctx.export("requestFieldValues", example.requesterFieldValues());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Field Type Reference
     * 
     * ### Field Types and Values
     * 
     * - **TEXT**: Contains free-form text input in the `value` attribute
     * - **SELECT**: Contains single selection value in the `value` attribute
     * - **MULTISELECT**: Contains multiple selection values in the `values` attribute (list)
     * - **DURATION**: Contains time duration specification in the `value` attribute (e.g., &#34;5 days&#34;, &#34;2 weeks&#34;)
     * - **ISO_DATE**: Contains date specification in ISO format in the `value` attribute
     * - **OKTA_USER_ID**: Contains Okta user ID in the `value` attribute
     * 
     * ### Usage Notes
     * 
     * - For `MULTISELECT` type fields, the values will be in the `values` attribute as a list
     * - For all other field types, the value will be in the `value` attribute as a string
     * - The `label` and `type` attributes provide metadata about the field structure
     * - Field definitions and requirements are determined by the approval system configuration
     * 
     * ## Limitations and Considerations
     * 
     * 1. **Read-Only**: This data source only retrieves existing request information and cannot modify requests.
     * 
     * 2. **Identity Governance Licensing**: This data source requires Okta Identity Governance licensing and proper configuration.
     * 
     * 3. **Request Lifecycle**: The data reflects the current state of the request in the approval workflow.
     * 
     * 4. **Field Structure**: The field structure and available types depend on the approval system configuration in Okta Identity Governance.
     * 
     */
    public static Output<GetEndUserMyRequestsResult> getEndUserMyRequests(GetEndUserMyRequestsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getEndUserMyRequests:getEndUserMyRequests", TypeShape.of(GetEndUserMyRequestsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get an End User Request from Okta Identity Governance. This data source allows you to retrieve information about existing access requests in the Okta Identity Governance system.
     * 
     * Use this data source to fetch details about a specific request, including its current status, field values, and other metadata.
     * 
     * &gt; **Note:** This data source is part of Okta Identity Governance functionality and requires appropriate licensing and configuration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEndUserMyRequestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get a request by its catalog entry ID and request ID
     *         final var example = OktaFunctions.getEndUserMyRequests(GetEndUserMyRequestsArgs.builder()
     *             .entryId("cen123456789abcdefgh")
     *             .id("reqABCDEFG0123456789")
     *             .build());
     * 
     *         ctx.export("requestStatus", example.status());
     *         ctx.export("requestFieldValues", example.requesterFieldValues());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Field Type Reference
     * 
     * ### Field Types and Values
     * 
     * - **TEXT**: Contains free-form text input in the `value` attribute
     * - **SELECT**: Contains single selection value in the `value` attribute
     * - **MULTISELECT**: Contains multiple selection values in the `values` attribute (list)
     * - **DURATION**: Contains time duration specification in the `value` attribute (e.g., &#34;5 days&#34;, &#34;2 weeks&#34;)
     * - **ISO_DATE**: Contains date specification in ISO format in the `value` attribute
     * - **OKTA_USER_ID**: Contains Okta user ID in the `value` attribute
     * 
     * ### Usage Notes
     * 
     * - For `MULTISELECT` type fields, the values will be in the `values` attribute as a list
     * - For all other field types, the value will be in the `value` attribute as a string
     * - The `label` and `type` attributes provide metadata about the field structure
     * - Field definitions and requirements are determined by the approval system configuration
     * 
     * ## Limitations and Considerations
     * 
     * 1. **Read-Only**: This data source only retrieves existing request information and cannot modify requests.
     * 
     * 2. **Identity Governance Licensing**: This data source requires Okta Identity Governance licensing and proper configuration.
     * 
     * 3. **Request Lifecycle**: The data reflects the current state of the request in the approval workflow.
     * 
     * 4. **Field Structure**: The field structure and available types depend on the approval system configuration in Okta Identity Governance.
     * 
     */
    public static Output<GetEndUserMyRequestsResult> getEndUserMyRequests(GetEndUserMyRequestsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getEndUserMyRequests:getEndUserMyRequests", TypeShape.of(GetEndUserMyRequestsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get an End User Request from Okta Identity Governance. This data source allows you to retrieve information about existing access requests in the Okta Identity Governance system.
     * 
     * Use this data source to fetch details about a specific request, including its current status, field values, and other metadata.
     * 
     * &gt; **Note:** This data source is part of Okta Identity Governance functionality and requires appropriate licensing and configuration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEndUserMyRequestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get a request by its catalog entry ID and request ID
     *         final var example = OktaFunctions.getEndUserMyRequests(GetEndUserMyRequestsArgs.builder()
     *             .entryId("cen123456789abcdefgh")
     *             .id("reqABCDEFG0123456789")
     *             .build());
     * 
     *         ctx.export("requestStatus", example.status());
     *         ctx.export("requestFieldValues", example.requesterFieldValues());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Field Type Reference
     * 
     * ### Field Types and Values
     * 
     * - **TEXT**: Contains free-form text input in the `value` attribute
     * - **SELECT**: Contains single selection value in the `value` attribute
     * - **MULTISELECT**: Contains multiple selection values in the `values` attribute (list)
     * - **DURATION**: Contains time duration specification in the `value` attribute (e.g., &#34;5 days&#34;, &#34;2 weeks&#34;)
     * - **ISO_DATE**: Contains date specification in ISO format in the `value` attribute
     * - **OKTA_USER_ID**: Contains Okta user ID in the `value` attribute
     * 
     * ### Usage Notes
     * 
     * - For `MULTISELECT` type fields, the values will be in the `values` attribute as a list
     * - For all other field types, the value will be in the `value` attribute as a string
     * - The `label` and `type` attributes provide metadata about the field structure
     * - Field definitions and requirements are determined by the approval system configuration
     * 
     * ## Limitations and Considerations
     * 
     * 1. **Read-Only**: This data source only retrieves existing request information and cannot modify requests.
     * 
     * 2. **Identity Governance Licensing**: This data source requires Okta Identity Governance licensing and proper configuration.
     * 
     * 3. **Request Lifecycle**: The data reflects the current state of the request in the approval workflow.
     * 
     * 4. **Field Structure**: The field structure and available types depend on the approval system configuration in Okta Identity Governance.
     * 
     */
    public static CompletableFuture<GetEndUserMyRequestsResult> getEndUserMyRequestsPlain(GetEndUserMyRequestsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getEndUserMyRequests:getEndUserMyRequests", TypeShape.of(GetEndUserMyRequestsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the entitlement belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEntitlementArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getEntitlement(GetEntitlementArgs.builder()
     *             .id("<entitlement id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEntitlementResult> getEntitlement(GetEntitlementArgs args) {
        return getEntitlement(args, InvokeOptions.Empty);
    }
    /**
     * Get the entitlement belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEntitlementArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getEntitlement(GetEntitlementArgs.builder()
     *             .id("<entitlement id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEntitlementResult> getEntitlementPlain(GetEntitlementPlainArgs args) {
        return getEntitlementPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get the entitlement belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEntitlementArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getEntitlement(GetEntitlementArgs.builder()
     *             .id("<entitlement id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEntitlementResult> getEntitlement(GetEntitlementArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getEntitlement:getEntitlement", TypeShape.of(GetEntitlementResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the entitlement belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEntitlementArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getEntitlement(GetEntitlementArgs.builder()
     *             .id("<entitlement id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEntitlementResult> getEntitlement(GetEntitlementArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getEntitlement:getEntitlement", TypeShape.of(GetEntitlementResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the entitlement belonging to an Okta organization.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEntitlementArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getEntitlement(GetEntitlementArgs.builder()
     *             .id("<entitlement id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEntitlementResult> getEntitlementPlain(GetEntitlementPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getEntitlement:getEntitlement", TypeShape.of(GetEntitlementResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the entitlement bundle for the given id.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEntitlementBundleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getEntitlementBundle(GetEntitlementBundleArgs.builder()
     *             .id("<entitlement_bundle id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEntitlementBundleResult> getEntitlementBundle(GetEntitlementBundleArgs args) {
        return getEntitlementBundle(args, InvokeOptions.Empty);
    }
    /**
     * Get the entitlement bundle for the given id.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEntitlementBundleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getEntitlementBundle(GetEntitlementBundleArgs.builder()
     *             .id("<entitlement_bundle id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEntitlementBundleResult> getEntitlementBundlePlain(GetEntitlementBundlePlainArgs args) {
        return getEntitlementBundlePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get the entitlement bundle for the given id.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEntitlementBundleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getEntitlementBundle(GetEntitlementBundleArgs.builder()
     *             .id("<entitlement_bundle id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEntitlementBundleResult> getEntitlementBundle(GetEntitlementBundleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getEntitlementBundle:getEntitlementBundle", TypeShape.of(GetEntitlementBundleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the entitlement bundle for the given id.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEntitlementBundleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getEntitlementBundle(GetEntitlementBundleArgs.builder()
     *             .id("<entitlement_bundle id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEntitlementBundleResult> getEntitlementBundle(GetEntitlementBundleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getEntitlementBundle:getEntitlementBundle", TypeShape.of(GetEntitlementBundleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the entitlement bundle for the given id.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetEntitlementBundleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getEntitlementBundle(GetEntitlementBundleArgs.builder()
     *             .id("<entitlement_bundle id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEntitlementBundleResult> getEntitlementBundlePlain(GetEntitlementBundlePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getEntitlementBundle:getEntitlementBundle", TypeShape.of(GetEntitlementBundleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a list of features from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getFeatures(GetFeaturesArgs.builder()
     *             .label("Android Device Trust")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetFeaturesResult> getFeatures() {
        return getFeatures(GetFeaturesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a list of features from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getFeatures(GetFeaturesArgs.builder()
     *             .label("Android Device Trust")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetFeaturesResult> getFeaturesPlain() {
        return getFeaturesPlain(GetFeaturesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a list of features from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getFeatures(GetFeaturesArgs.builder()
     *             .label("Android Device Trust")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetFeaturesResult> getFeatures(GetFeaturesArgs args) {
        return getFeatures(args, InvokeOptions.Empty);
    }
    /**
     * Get a list of features from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getFeatures(GetFeaturesArgs.builder()
     *             .label("Android Device Trust")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetFeaturesResult> getFeaturesPlain(GetFeaturesPlainArgs args) {
        return getFeaturesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a list of features from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getFeatures(GetFeaturesArgs.builder()
     *             .label("Android Device Trust")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetFeaturesResult> getFeatures(GetFeaturesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getFeatures:getFeatures", TypeShape.of(GetFeaturesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a list of features from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getFeatures(GetFeaturesArgs.builder()
     *             .label("Android Device Trust")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetFeaturesResult> getFeatures(GetFeaturesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getFeatures:getFeatures", TypeShape.of(GetFeaturesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a list of features from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getFeatures(GetFeaturesArgs.builder()
     *             .label("Android Device Trust")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetFeaturesResult> getFeaturesPlain(GetFeaturesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getFeatures:getFeatures", TypeShape.of(GetFeaturesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a list of groups from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getGroups(GetGroupsArgs.builder()
     *             .q("Engineering - ")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetGroupsResult> getGroups() {
        return getGroups(GetGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a list of groups from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getGroups(GetGroupsArgs.builder()
     *             .q("Engineering - ")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetGroupsResult> getGroupsPlain() {
        return getGroupsPlain(GetGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a list of groups from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getGroups(GetGroupsArgs.builder()
     *             .q("Engineering - ")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetGroupsResult> getGroups(GetGroupsArgs args) {
        return getGroups(args, InvokeOptions.Empty);
    }
    /**
     * Get a list of groups from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getGroups(GetGroupsArgs.builder()
     *             .q("Engineering - ")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetGroupsResult> getGroupsPlain(GetGroupsPlainArgs args) {
        return getGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a list of groups from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getGroups(GetGroupsArgs.builder()
     *             .q("Engineering - ")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetGroupsResult> getGroups(GetGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getGroups:getGroups", TypeShape.of(GetGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a list of groups from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getGroups(GetGroupsArgs.builder()
     *             .q("Engineering - ")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetGroupsResult> getGroups(GetGroupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getGroups:getGroups", TypeShape.of(GetGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a list of groups from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getGroups(GetGroupsArgs.builder()
     *             .q("Engineering - ")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetGroupsResult> getGroupsPlain(GetGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getGroups:getGroups", TypeShape.of(GetGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Log Streams
     * 
     */
    public static Output<GetLogStreamResult> getLogStream() {
        return getLogStream(GetLogStreamArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Log Streams
     * 
     */
    public static CompletableFuture<GetLogStreamResult> getLogStreamPlain() {
        return getLogStreamPlain(GetLogStreamPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Log Streams
     * 
     */
    public static Output<GetLogStreamResult> getLogStream(GetLogStreamArgs args) {
        return getLogStream(args, InvokeOptions.Empty);
    }
    /**
     * Log Streams
     * 
     */
    public static CompletableFuture<GetLogStreamResult> getLogStreamPlain(GetLogStreamPlainArgs args) {
        return getLogStreamPlain(args, InvokeOptions.Empty);
    }
    /**
     * Log Streams
     * 
     */
    public static Output<GetLogStreamResult> getLogStream(GetLogStreamArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getLogStream:getLogStream", TypeShape.of(GetLogStreamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Log Streams
     * 
     */
    public static Output<GetLogStreamResult> getLogStream(GetLogStreamArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getLogStream:getLogStream", TypeShape.of(GetLogStreamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Log Streams
     * 
     */
    public static CompletableFuture<GetLogStreamResult> getLogStreamPlain(GetLogStreamPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getLogStream:getLogStream", TypeShape.of(GetLogStreamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets Okta Network Zone.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetNetworkZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getNetworkZone(GetNetworkZoneArgs.builder()
     *             .name("Block Antarctica")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNetworkZoneResult> getNetworkZone() {
        return getNetworkZone(GetNetworkZoneArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets Okta Network Zone.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetNetworkZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getNetworkZone(GetNetworkZoneArgs.builder()
     *             .name("Block Antarctica")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNetworkZoneResult> getNetworkZonePlain() {
        return getNetworkZonePlain(GetNetworkZonePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets Okta Network Zone.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetNetworkZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getNetworkZone(GetNetworkZoneArgs.builder()
     *             .name("Block Antarctica")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNetworkZoneResult> getNetworkZone(GetNetworkZoneArgs args) {
        return getNetworkZone(args, InvokeOptions.Empty);
    }
    /**
     * Gets Okta Network Zone.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetNetworkZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getNetworkZone(GetNetworkZoneArgs.builder()
     *             .name("Block Antarctica")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNetworkZoneResult> getNetworkZonePlain(GetNetworkZonePlainArgs args) {
        return getNetworkZonePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets Okta Network Zone.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetNetworkZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getNetworkZone(GetNetworkZoneArgs.builder()
     *             .name("Block Antarctica")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNetworkZoneResult> getNetworkZone(GetNetworkZoneArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getNetworkZone:getNetworkZone", TypeShape.of(GetNetworkZoneResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets Okta Network Zone.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetNetworkZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getNetworkZone(GetNetworkZoneArgs.builder()
     *             .name("Block Antarctica")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNetworkZoneResult> getNetworkZone(GetNetworkZoneArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getNetworkZone:getNetworkZone", TypeShape.of(GetNetworkZoneResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets Okta Network Zone.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetNetworkZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getNetworkZone(GetNetworkZoneArgs.builder()
     *             .name("Block Antarctica")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNetworkZoneResult> getNetworkZonePlain(GetNetworkZonePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getNetworkZone:getNetworkZone", TypeShape.of(GetNetworkZoneResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the well-known org metadata, which includes the id, configured custom domains, authentication pipeline, and various other org settings.
     * 
     */
    public static Output<GetOrgMetadataResult> getOrgMetadata() {
        return getOrgMetadata(GetOrgMetadataArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves the well-known org metadata, which includes the id, configured custom domains, authentication pipeline, and various other org settings.
     * 
     */
    public static CompletableFuture<GetOrgMetadataResult> getOrgMetadataPlain() {
        return getOrgMetadataPlain(GetOrgMetadataPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves the well-known org metadata, which includes the id, configured custom domains, authentication pipeline, and various other org settings.
     * 
     */
    public static Output<GetOrgMetadataResult> getOrgMetadata(GetOrgMetadataArgs args) {
        return getOrgMetadata(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the well-known org metadata, which includes the id, configured custom domains, authentication pipeline, and various other org settings.
     * 
     */
    public static CompletableFuture<GetOrgMetadataResult> getOrgMetadataPlain(GetOrgMetadataPlainArgs args) {
        return getOrgMetadataPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the well-known org metadata, which includes the id, configured custom domains, authentication pipeline, and various other org settings.
     * 
     */
    public static Output<GetOrgMetadataResult> getOrgMetadata(GetOrgMetadataArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getOrgMetadata:getOrgMetadata", TypeShape.of(GetOrgMetadataResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the well-known org metadata, which includes the id, configured custom domains, authentication pipeline, and various other org settings.
     * 
     */
    public static Output<GetOrgMetadataResult> getOrgMetadata(GetOrgMetadataArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getOrgMetadata:getOrgMetadata", TypeShape.of(GetOrgMetadataResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the well-known org metadata, which includes the id, configured custom domains, authentication pipeline, and various other org settings.
     * 
     */
    public static CompletableFuture<GetOrgMetadataResult> getOrgMetadataPlain(GetOrgMetadataPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getOrgMetadata:getOrgMetadata", TypeShape.of(GetOrgMetadataResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the entitlements for a user and resource after evaluating all grants.
     * 
     */
    public static Output<GetPrincipalEntitlementsResult> getPrincipalEntitlements() {
        return getPrincipalEntitlements(GetPrincipalEntitlementsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get the entitlements for a user and resource after evaluating all grants.
     * 
     */
    public static CompletableFuture<GetPrincipalEntitlementsResult> getPrincipalEntitlementsPlain() {
        return getPrincipalEntitlementsPlain(GetPrincipalEntitlementsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get the entitlements for a user and resource after evaluating all grants.
     * 
     */
    public static Output<GetPrincipalEntitlementsResult> getPrincipalEntitlements(GetPrincipalEntitlementsArgs args) {
        return getPrincipalEntitlements(args, InvokeOptions.Empty);
    }
    /**
     * Get the entitlements for a user and resource after evaluating all grants.
     * 
     */
    public static CompletableFuture<GetPrincipalEntitlementsResult> getPrincipalEntitlementsPlain(GetPrincipalEntitlementsPlainArgs args) {
        return getPrincipalEntitlementsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get the entitlements for a user and resource after evaluating all grants.
     * 
     */
    public static Output<GetPrincipalEntitlementsResult> getPrincipalEntitlements(GetPrincipalEntitlementsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getPrincipalEntitlements:getPrincipalEntitlements", TypeShape.of(GetPrincipalEntitlementsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the entitlements for a user and resource after evaluating all grants.
     * 
     */
    public static Output<GetPrincipalEntitlementsResult> getPrincipalEntitlements(GetPrincipalEntitlementsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getPrincipalEntitlements:getPrincipalEntitlements", TypeShape.of(GetPrincipalEntitlementsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the entitlements for a user and resource after evaluating all grants.
     * 
     */
    public static CompletableFuture<GetPrincipalEntitlementsResult> getPrincipalEntitlementsPlain(GetPrincipalEntitlementsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getPrincipalEntitlements:getPrincipalEntitlements", TypeShape.of(GetPrincipalEntitlementsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the entitlements for a user and resource after evaluating all grants.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetPrincipalRateLimitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getPrincipalRateLimits(GetPrincipalRateLimitsArgs.builder()
     *             .id("<principal_rate_limit_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrincipalRateLimitsResult> getPrincipalRateLimits(GetPrincipalRateLimitsArgs args) {
        return getPrincipalRateLimits(args, InvokeOptions.Empty);
    }
    /**
     * Get the entitlements for a user and resource after evaluating all grants.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetPrincipalRateLimitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getPrincipalRateLimits(GetPrincipalRateLimitsArgs.builder()
     *             .id("<principal_rate_limit_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPrincipalRateLimitsResult> getPrincipalRateLimitsPlain(GetPrincipalRateLimitsPlainArgs args) {
        return getPrincipalRateLimitsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get the entitlements for a user and resource after evaluating all grants.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetPrincipalRateLimitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getPrincipalRateLimits(GetPrincipalRateLimitsArgs.builder()
     *             .id("<principal_rate_limit_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrincipalRateLimitsResult> getPrincipalRateLimits(GetPrincipalRateLimitsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getPrincipalRateLimits:getPrincipalRateLimits", TypeShape.of(GetPrincipalRateLimitsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the entitlements for a user and resource after evaluating all grants.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetPrincipalRateLimitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getPrincipalRateLimits(GetPrincipalRateLimitsArgs.builder()
     *             .id("<principal_rate_limit_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrincipalRateLimitsResult> getPrincipalRateLimits(GetPrincipalRateLimitsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getPrincipalRateLimits:getPrincipalRateLimits", TypeShape.of(GetPrincipalRateLimitsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the entitlements for a user and resource after evaluating all grants.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetPrincipalRateLimitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getPrincipalRateLimits(GetPrincipalRateLimitsArgs.builder()
     *             .id("<principal_rate_limit_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPrincipalRateLimitsResult> getPrincipalRateLimitsPlain(GetPrincipalRateLimitsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getPrincipalRateLimits:getPrincipalRateLimits", TypeShape.of(GetPrincipalRateLimitsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the currently configured Rate Limit Admin Notification Settings
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRateLimitAdminNotificationSettings(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRateLimitAdminNotificationSettingsResult> getRateLimitAdminNotificationSettings() {
        return getRateLimitAdminNotificationSettings(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves the currently configured Rate Limit Admin Notification Settings
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRateLimitAdminNotificationSettings(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRateLimitAdminNotificationSettingsResult> getRateLimitAdminNotificationSettingsPlain() {
        return getRateLimitAdminNotificationSettingsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves the currently configured Rate Limit Admin Notification Settings
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRateLimitAdminNotificationSettings(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRateLimitAdminNotificationSettingsResult> getRateLimitAdminNotificationSettings(InvokeArgs args) {
        return getRateLimitAdminNotificationSettings(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the currently configured Rate Limit Admin Notification Settings
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRateLimitAdminNotificationSettings(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRateLimitAdminNotificationSettingsResult> getRateLimitAdminNotificationSettingsPlain(InvokeArgs args) {
        return getRateLimitAdminNotificationSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the currently configured Rate Limit Admin Notification Settings
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRateLimitAdminNotificationSettings(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRateLimitAdminNotificationSettingsResult> getRateLimitAdminNotificationSettings(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRateLimitAdminNotificationSettings:getRateLimitAdminNotificationSettings", TypeShape.of(GetRateLimitAdminNotificationSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the currently configured Rate Limit Admin Notification Settings
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRateLimitAdminNotificationSettings(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRateLimitAdminNotificationSettingsResult> getRateLimitAdminNotificationSettings(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRateLimitAdminNotificationSettings:getRateLimitAdminNotificationSettings", TypeShape.of(GetRateLimitAdminNotificationSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the currently configured Rate Limit Admin Notification Settings
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRateLimitAdminNotificationSettings(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRateLimitAdminNotificationSettingsResult> getRateLimitAdminNotificationSettingsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getRateLimitAdminNotificationSettings:getRateLimitAdminNotificationSettings", TypeShape.of(GetRateLimitAdminNotificationSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Manages principal rate limits.
     * Principal Rate Limits provides operations to manage Principal Rate Limits for your organization.
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRateLimitWarningThresholdPercentage(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRateLimitWarningThresholdPercentageResult> getRateLimitWarningThresholdPercentage() {
        return getRateLimitWarningThresholdPercentage(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Manages principal rate limits.
     * Principal Rate Limits provides operations to manage Principal Rate Limits for your organization.
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRateLimitWarningThresholdPercentage(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRateLimitWarningThresholdPercentageResult> getRateLimitWarningThresholdPercentagePlain() {
        return getRateLimitWarningThresholdPercentagePlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Manages principal rate limits.
     * Principal Rate Limits provides operations to manage Principal Rate Limits for your organization.
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRateLimitWarningThresholdPercentage(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRateLimitWarningThresholdPercentageResult> getRateLimitWarningThresholdPercentage(InvokeArgs args) {
        return getRateLimitWarningThresholdPercentage(args, InvokeOptions.Empty);
    }
    /**
     * Manages principal rate limits.
     * Principal Rate Limits provides operations to manage Principal Rate Limits for your organization.
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRateLimitWarningThresholdPercentage(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRateLimitWarningThresholdPercentageResult> getRateLimitWarningThresholdPercentagePlain(InvokeArgs args) {
        return getRateLimitWarningThresholdPercentagePlain(args, InvokeOptions.Empty);
    }
    /**
     * Manages principal rate limits.
     * Principal Rate Limits provides operations to manage Principal Rate Limits for your organization.
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRateLimitWarningThresholdPercentage(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRateLimitWarningThresholdPercentageResult> getRateLimitWarningThresholdPercentage(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRateLimitWarningThresholdPercentage:getRateLimitWarningThresholdPercentage", TypeShape.of(GetRateLimitWarningThresholdPercentageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Manages principal rate limits.
     * Principal Rate Limits provides operations to manage Principal Rate Limits for your organization.
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRateLimitWarningThresholdPercentage(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRateLimitWarningThresholdPercentageResult> getRateLimitWarningThresholdPercentage(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRateLimitWarningThresholdPercentage:getRateLimitWarningThresholdPercentage", TypeShape.of(GetRateLimitWarningThresholdPercentageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Manages principal rate limits.
     * Principal Rate Limits provides operations to manage Principal Rate Limits for your organization.
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRateLimitWarningThresholdPercentage(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRateLimitWarningThresholdPercentageResult> getRateLimitWarningThresholdPercentagePlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getRateLimitWarningThresholdPercentage:getRateLimitWarningThresholdPercentage", TypeShape.of(GetRateLimitWarningThresholdPercentageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a realm from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRealmArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleName = OktaFunctions.getRealm(GetRealmArgs.builder()
     *             .name("Example Realm")
     *             .build());
     * 
     *         final var exampleId = OktaFunctions.getRealm(GetRealmArgs.builder()
     *             .id("<realm_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRealmResult> getRealm() {
        return getRealm(GetRealmArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a realm from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRealmArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleName = OktaFunctions.getRealm(GetRealmArgs.builder()
     *             .name("Example Realm")
     *             .build());
     * 
     *         final var exampleId = OktaFunctions.getRealm(GetRealmArgs.builder()
     *             .id("<realm_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRealmResult> getRealmPlain() {
        return getRealmPlain(GetRealmPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a realm from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRealmArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleName = OktaFunctions.getRealm(GetRealmArgs.builder()
     *             .name("Example Realm")
     *             .build());
     * 
     *         final var exampleId = OktaFunctions.getRealm(GetRealmArgs.builder()
     *             .id("<realm_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRealmResult> getRealm(GetRealmArgs args) {
        return getRealm(args, InvokeOptions.Empty);
    }
    /**
     * Get a realm from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRealmArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleName = OktaFunctions.getRealm(GetRealmArgs.builder()
     *             .name("Example Realm")
     *             .build());
     * 
     *         final var exampleId = OktaFunctions.getRealm(GetRealmArgs.builder()
     *             .id("<realm_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRealmResult> getRealmPlain(GetRealmPlainArgs args) {
        return getRealmPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a realm from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRealmArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleName = OktaFunctions.getRealm(GetRealmArgs.builder()
     *             .name("Example Realm")
     *             .build());
     * 
     *         final var exampleId = OktaFunctions.getRealm(GetRealmArgs.builder()
     *             .id("<realm_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRealmResult> getRealm(GetRealmArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRealm:getRealm", TypeShape.of(GetRealmResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a realm from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRealmArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleName = OktaFunctions.getRealm(GetRealmArgs.builder()
     *             .name("Example Realm")
     *             .build());
     * 
     *         final var exampleId = OktaFunctions.getRealm(GetRealmArgs.builder()
     *             .id("<realm_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRealmResult> getRealm(GetRealmArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRealm:getRealm", TypeShape.of(GetRealmResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a realm from Okta.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRealmArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleName = OktaFunctions.getRealm(GetRealmArgs.builder()
     *             .name("Example Realm")
     *             .build());
     * 
     *         final var exampleId = OktaFunctions.getRealm(GetRealmArgs.builder()
     *             .id("<realm_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRealmResult> getRealmPlain(GetRealmPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getRealm:getRealm", TypeShape.of(GetRealmResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a realm assignment from Okta.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetRealmAssignmentResult> getRealmAssignment() {
        return getRealmAssignment(GetRealmAssignmentArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a realm assignment from Okta.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetRealmAssignmentResult> getRealmAssignmentPlain() {
        return getRealmAssignmentPlain(GetRealmAssignmentPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a realm assignment from Okta.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetRealmAssignmentResult> getRealmAssignment(GetRealmAssignmentArgs args) {
        return getRealmAssignment(args, InvokeOptions.Empty);
    }
    /**
     * Get a realm assignment from Okta.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetRealmAssignmentResult> getRealmAssignmentPlain(GetRealmAssignmentPlainArgs args) {
        return getRealmAssignmentPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a realm assignment from Okta.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetRealmAssignmentResult> getRealmAssignment(GetRealmAssignmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRealmAssignment:getRealmAssignment", TypeShape.of(GetRealmAssignmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a realm assignment from Okta.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetRealmAssignmentResult> getRealmAssignment(GetRealmAssignmentArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRealmAssignment:getRealmAssignment", TypeShape.of(GetRealmAssignmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a realm assignment from Okta.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetRealmAssignmentResult> getRealmAssignmentPlain(GetRealmAssignmentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getRealmAssignment:getRealmAssignment", TypeShape.of(GetRealmAssignmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a resource request condition
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestConditionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestCondition(GetRequestConditionArgs.builder()
     *             .id("<request_condition_id>")
     *             .resourceId("<resource_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRequestConditionResult> getRequestCondition(GetRequestConditionArgs args) {
        return getRequestCondition(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a resource request condition
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestConditionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestCondition(GetRequestConditionArgs.builder()
     *             .id("<request_condition_id>")
     *             .resourceId("<resource_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRequestConditionResult> getRequestConditionPlain(GetRequestConditionPlainArgs args) {
        return getRequestConditionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a resource request condition
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestConditionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestCondition(GetRequestConditionArgs.builder()
     *             .id("<request_condition_id>")
     *             .resourceId("<resource_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRequestConditionResult> getRequestCondition(GetRequestConditionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRequestCondition:getRequestCondition", TypeShape.of(GetRequestConditionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a resource request condition
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestConditionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestCondition(GetRequestConditionArgs.builder()
     *             .id("<request_condition_id>")
     *             .resourceId("<resource_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRequestConditionResult> getRequestCondition(GetRequestConditionArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRequestCondition:getRequestCondition", TypeShape.of(GetRequestConditionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a resource request condition
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestConditionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestCondition(GetRequestConditionArgs.builder()
     *             .id("<request_condition_id>")
     *             .resourceId("<resource_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRequestConditionResult> getRequestConditionPlain(GetRequestConditionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getRequestCondition:getRequestCondition", TypeShape.of(GetRequestConditionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a access request sequence referenced by the specified resource.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestSequenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestSequence(GetRequestSequenceArgs.builder()
     *             .id("<sequence_id>")
     *             .resourceId("<resource_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRequestSequenceResult> getRequestSequence(GetRequestSequenceArgs args) {
        return getRequestSequence(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a access request sequence referenced by the specified resource.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestSequenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestSequence(GetRequestSequenceArgs.builder()
     *             .id("<sequence_id>")
     *             .resourceId("<resource_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRequestSequenceResult> getRequestSequencePlain(GetRequestSequencePlainArgs args) {
        return getRequestSequencePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a access request sequence referenced by the specified resource.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestSequenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestSequence(GetRequestSequenceArgs.builder()
     *             .id("<sequence_id>")
     *             .resourceId("<resource_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRequestSequenceResult> getRequestSequence(GetRequestSequenceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRequestSequence:getRequestSequence", TypeShape.of(GetRequestSequenceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a access request sequence referenced by the specified resource.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestSequenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestSequence(GetRequestSequenceArgs.builder()
     *             .id("<sequence_id>")
     *             .resourceId("<resource_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRequestSequenceResult> getRequestSequence(GetRequestSequenceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRequestSequence:getRequestSequence", TypeShape.of(GetRequestSequenceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a access request sequence referenced by the specified resource.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestSequenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestSequence(GetRequestSequenceArgs.builder()
     *             .id("<sequence_id>")
     *             .resourceId("<resource_id>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRequestSequenceResult> getRequestSequencePlain(GetRequestSequencePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getRequestSequence:getRequestSequence", TypeShape.of(GetRequestSequenceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the request settings for the org.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestSettingOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestSettingOrganization(GetRequestSettingOrganizationArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRequestSettingOrganizationResult> getRequestSettingOrganization() {
        return getRequestSettingOrganization(GetRequestSettingOrganizationArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves the request settings for the org.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestSettingOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestSettingOrganization(GetRequestSettingOrganizationArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRequestSettingOrganizationResult> getRequestSettingOrganizationPlain() {
        return getRequestSettingOrganizationPlain(GetRequestSettingOrganizationPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves the request settings for the org.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestSettingOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestSettingOrganization(GetRequestSettingOrganizationArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRequestSettingOrganizationResult> getRequestSettingOrganization(GetRequestSettingOrganizationArgs args) {
        return getRequestSettingOrganization(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the request settings for the org.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestSettingOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestSettingOrganization(GetRequestSettingOrganizationArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRequestSettingOrganizationResult> getRequestSettingOrganizationPlain(GetRequestSettingOrganizationPlainArgs args) {
        return getRequestSettingOrganizationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the request settings for the org.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestSettingOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestSettingOrganization(GetRequestSettingOrganizationArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRequestSettingOrganizationResult> getRequestSettingOrganization(GetRequestSettingOrganizationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRequestSettingOrganization:getRequestSettingOrganization", TypeShape.of(GetRequestSettingOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the request settings for the org.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestSettingOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestSettingOrganization(GetRequestSettingOrganizationArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRequestSettingOrganizationResult> getRequestSettingOrganization(GetRequestSettingOrganizationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRequestSettingOrganization:getRequestSettingOrganization", TypeShape.of(GetRequestSettingOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the request settings for the org.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRequestSettingOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getRequestSettingOrganization(GetRequestSettingOrganizationArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRequestSettingOrganizationResult> getRequestSettingOrganizationPlain(GetRequestSettingOrganizationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getRequestSettingOrganization:getRequestSettingOrganization", TypeShape.of(GetRequestSettingOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the request settings for a resource.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetRequestSettingResourceResult> getRequestSettingResource(GetRequestSettingResourceArgs args) {
        return getRequestSettingResource(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the request settings for a resource.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetRequestSettingResourceResult> getRequestSettingResourcePlain(GetRequestSettingResourcePlainArgs args) {
        return getRequestSettingResourcePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the request settings for a resource.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetRequestSettingResourceResult> getRequestSettingResource(GetRequestSettingResourceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRequestSettingResource:getRequestSettingResource", TypeShape.of(GetRequestSettingResourceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the request settings for a resource.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetRequestSettingResourceResult> getRequestSettingResource(GetRequestSettingResourceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRequestSettingResource:getRequestSettingResource", TypeShape.of(GetRequestSettingResourceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the request settings for a resource.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetRequestSettingResourceResult> getRequestSettingResourcePlain(GetRequestSettingResourcePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getRequestSettingResource:getRequestSettingResource", TypeShape.of(GetRequestSettingResourceResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetRequestV2Result> getRequestV2(GetRequestV2Args args) {
        return getRequestV2(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRequestV2Result> getRequestV2Plain(GetRequestV2PlainArgs args) {
        return getRequestV2Plain(args, InvokeOptions.Empty);
    }
    public static Output<GetRequestV2Result> getRequestV2(GetRequestV2Args args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRequestV2:getRequestV2", TypeShape.of(GetRequestV2Result.class), args, Utilities.withVersion(options));
    }
    public static Output<GetRequestV2Result> getRequestV2(GetRequestV2Args args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRequestV2:getRequestV2", TypeShape.of(GetRequestV2Result.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetRequestV2Result> getRequestV2Plain(GetRequestV2PlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getRequestV2:getRequestV2", TypeShape.of(GetRequestV2Result.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the reviews belonging to a campaign
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetReviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getReview(GetReviewArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Required:
     * 
     * - `email` (String) The Okta user&#39;s email address.
     * - `id` (String) The Okta user id.
     * - `status` (String) The status of the principal&#39;s profile. Enum: `INACTIVE`, `ACTIVE`.
     * 
     * ## Optional:
     * 
     * - `firstName` (String) The Okta user&#39;s first name.
     * - `lastName` (String) The Okta user&#39;s last name
     * - `login` (String) The Okta user&#39;s login
     * 
     */
    public static Output<GetReviewResult> getReview(GetReviewArgs args) {
        return getReview(args, InvokeOptions.Empty);
    }
    /**
     * Get the reviews belonging to a campaign
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetReviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getReview(GetReviewArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Required:
     * 
     * - `email` (String) The Okta user&#39;s email address.
     * - `id` (String) The Okta user id.
     * - `status` (String) The status of the principal&#39;s profile. Enum: `INACTIVE`, `ACTIVE`.
     * 
     * ## Optional:
     * 
     * - `firstName` (String) The Okta user&#39;s first name.
     * - `lastName` (String) The Okta user&#39;s last name
     * - `login` (String) The Okta user&#39;s login
     * 
     */
    public static CompletableFuture<GetReviewResult> getReviewPlain(GetReviewPlainArgs args) {
        return getReviewPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get the reviews belonging to a campaign
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetReviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getReview(GetReviewArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Required:
     * 
     * - `email` (String) The Okta user&#39;s email address.
     * - `id` (String) The Okta user id.
     * - `status` (String) The status of the principal&#39;s profile. Enum: `INACTIVE`, `ACTIVE`.
     * 
     * ## Optional:
     * 
     * - `firstName` (String) The Okta user&#39;s first name.
     * - `lastName` (String) The Okta user&#39;s last name
     * - `login` (String) The Okta user&#39;s login
     * 
     */
    public static Output<GetReviewResult> getReview(GetReviewArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getReview:getReview", TypeShape.of(GetReviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the reviews belonging to a campaign
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetReviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getReview(GetReviewArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Required:
     * 
     * - `email` (String) The Okta user&#39;s email address.
     * - `id` (String) The Okta user id.
     * - `status` (String) The status of the principal&#39;s profile. Enum: `INACTIVE`, `ACTIVE`.
     * 
     * ## Optional:
     * 
     * - `firstName` (String) The Okta user&#39;s first name.
     * - `lastName` (String) The Okta user&#39;s last name
     * - `login` (String) The Okta user&#39;s login
     * 
     */
    public static Output<GetReviewResult> getReview(GetReviewArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getReview:getReview", TypeShape.of(GetReviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the reviews belonging to a campaign
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetReviewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = OktaFunctions.getReview(GetReviewArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Required:
     * 
     * - `email` (String) The Okta user&#39;s email address.
     * - `id` (String) The Okta user id.
     * - `status` (String) The status of the principal&#39;s profile. Enum: `INACTIVE`, `ACTIVE`.
     * 
     * ## Optional:
     * 
     * - `firstName` (String) The Okta user&#39;s first name.
     * - `lastName` (String) The Okta user&#39;s last name
     * - `login` (String) The Okta user&#39;s login
     * 
     */
    public static CompletableFuture<GetReviewResult> getReviewPlain(GetReviewPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getReview:getReview", TypeShape.of(GetReviewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get subscriptions of a Role with a specific type
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRoleSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRoleSubscription(GetRoleSubscriptionArgs.builder()
     *             .notificationType("APP_IMPORT")
     *             .roleType("SUPER_ADMIN")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRoleSubscriptionResult> getRoleSubscription(GetRoleSubscriptionArgs args) {
        return getRoleSubscription(args, InvokeOptions.Empty);
    }
    /**
     * Get subscriptions of a Role with a specific type
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRoleSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRoleSubscription(GetRoleSubscriptionArgs.builder()
     *             .notificationType("APP_IMPORT")
     *             .roleType("SUPER_ADMIN")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRoleSubscriptionResult> getRoleSubscriptionPlain(GetRoleSubscriptionPlainArgs args) {
        return getRoleSubscriptionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get subscriptions of a Role with a specific type
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRoleSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRoleSubscription(GetRoleSubscriptionArgs.builder()
     *             .notificationType("APP_IMPORT")
     *             .roleType("SUPER_ADMIN")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRoleSubscriptionResult> getRoleSubscription(GetRoleSubscriptionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRoleSubscription:getRoleSubscription", TypeShape.of(GetRoleSubscriptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get subscriptions of a Role with a specific type
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRoleSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRoleSubscription(GetRoleSubscriptionArgs.builder()
     *             .notificationType("APP_IMPORT")
     *             .roleType("SUPER_ADMIN")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRoleSubscriptionResult> getRoleSubscription(GetRoleSubscriptionArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getRoleSubscription:getRoleSubscription", TypeShape.of(GetRoleSubscriptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get subscriptions of a Role with a specific type
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetRoleSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OktaFunctions.getRoleSubscription(GetRoleSubscriptionArgs.builder()
     *             .notificationType("APP_IMPORT")
     *             .roleType("SUPER_ADMIN")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRoleSubscriptionResult> getRoleSubscriptionPlain(GetRoleSubscriptionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getRoleSubscription:getRoleSubscription", TypeShape.of(GetRoleSubscriptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a single Email Template for a Brand belonging to an Okta organization.
     * 
     */
    public static Output<GetTemplateResult> getTemplate(GetTemplateArgs args) {
        return getTemplate(args, InvokeOptions.Empty);
    }
    /**
     * Get a single Email Template for a Brand belonging to an Okta organization.
     * 
     */
    public static CompletableFuture<GetTemplateResult> getTemplatePlain(GetTemplatePlainArgs args) {
        return getTemplatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a single Email Template for a Brand belonging to an Okta organization.
     * 
     */
    public static Output<GetTemplateResult> getTemplate(GetTemplateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getTemplate:getTemplate", TypeShape.of(GetTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a single Email Template for a Brand belonging to an Okta organization.
     * 
     */
    public static Output<GetTemplateResult> getTemplate(GetTemplateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getTemplate:getTemplate", TypeShape.of(GetTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a single Email Template for a Brand belonging to an Okta organization.
     * 
     */
    public static CompletableFuture<GetTemplateResult> getTemplatePlain(GetTemplatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getTemplate:getTemplate", TypeShape.of(GetTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the email templates belonging to a brand in an Okta organization.
     * 
     */
    public static Output<GetTemplatesResult> getTemplates(GetTemplatesArgs args) {
        return getTemplates(args, InvokeOptions.Empty);
    }
    /**
     * Get the email templates belonging to a brand in an Okta organization.
     * 
     */
    public static CompletableFuture<GetTemplatesResult> getTemplatesPlain(GetTemplatesPlainArgs args) {
        return getTemplatesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get the email templates belonging to a brand in an Okta organization.
     * 
     */
    public static Output<GetTemplatesResult> getTemplates(GetTemplatesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getTemplates:getTemplates", TypeShape.of(GetTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the email templates belonging to a brand in an Okta organization.
     * 
     */
    public static Output<GetTemplatesResult> getTemplates(GetTemplatesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getTemplates:getTemplates", TypeShape.of(GetTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the email templates belonging to a brand in an Okta organization.
     * 
     */
    public static CompletableFuture<GetTemplatesResult> getTemplatesPlain(GetTemplatesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getTemplates:getTemplates", TypeShape.of(GetTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a single Theme of a Brand of an Okta Organization.
     * 
     */
    public static Output<GetThemeResult> getTheme(GetThemeArgs args) {
        return getTheme(args, InvokeOptions.Empty);
    }
    /**
     * Get a single Theme of a Brand of an Okta Organization.
     * 
     */
    public static CompletableFuture<GetThemeResult> getThemePlain(GetThemePlainArgs args) {
        return getThemePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a single Theme of a Brand of an Okta Organization.
     * 
     */
    public static Output<GetThemeResult> getTheme(GetThemeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getTheme:getTheme", TypeShape.of(GetThemeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a single Theme of a Brand of an Okta Organization.
     * 
     */
    public static Output<GetThemeResult> getTheme(GetThemeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getTheme:getTheme", TypeShape.of(GetThemeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a single Theme of a Brand of an Okta Organization.
     * 
     */
    public static CompletableFuture<GetThemeResult> getThemePlain(GetThemePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getTheme:getTheme", TypeShape.of(GetThemeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get Themes of a Brand of an Okta Organization.
     * 
     */
    public static Output<GetThemesResult> getThemes(GetThemesArgs args) {
        return getThemes(args, InvokeOptions.Empty);
    }
    /**
     * Get Themes of a Brand of an Okta Organization.
     * 
     */
    public static CompletableFuture<GetThemesResult> getThemesPlain(GetThemesPlainArgs args) {
        return getThemesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get Themes of a Brand of an Okta Organization.
     * 
     */
    public static Output<GetThemesResult> getThemes(GetThemesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getThemes:getThemes", TypeShape.of(GetThemesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get Themes of a Brand of an Okta Organization.
     * 
     */
    public static Output<GetThemesResult> getThemes(GetThemesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getThemes:getThemes", TypeShape.of(GetThemesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get Themes of a Brand of an Okta Organization.
     * 
     */
    public static CompletableFuture<GetThemesResult> getThemesPlain(GetThemesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getThemes:getThemes", TypeShape.of(GetThemesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get List of Trusted Origins using filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetTrustedOriginsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = OktaFunctions.getTrustedOrigins(GetTrustedOriginsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTrustedOriginsResult> getTrustedOrigins() {
        return getTrustedOrigins(GetTrustedOriginsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get List of Trusted Origins using filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetTrustedOriginsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = OktaFunctions.getTrustedOrigins(GetTrustedOriginsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTrustedOriginsResult> getTrustedOriginsPlain() {
        return getTrustedOriginsPlain(GetTrustedOriginsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get List of Trusted Origins using filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetTrustedOriginsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = OktaFunctions.getTrustedOrigins(GetTrustedOriginsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTrustedOriginsResult> getTrustedOrigins(GetTrustedOriginsArgs args) {
        return getTrustedOrigins(args, InvokeOptions.Empty);
    }
    /**
     * Get List of Trusted Origins using filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetTrustedOriginsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = OktaFunctions.getTrustedOrigins(GetTrustedOriginsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTrustedOriginsResult> getTrustedOriginsPlain(GetTrustedOriginsPlainArgs args) {
        return getTrustedOriginsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get List of Trusted Origins using filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetTrustedOriginsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = OktaFunctions.getTrustedOrigins(GetTrustedOriginsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTrustedOriginsResult> getTrustedOrigins(GetTrustedOriginsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getTrustedOrigins:getTrustedOrigins", TypeShape.of(GetTrustedOriginsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get List of Trusted Origins using filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetTrustedOriginsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = OktaFunctions.getTrustedOrigins(GetTrustedOriginsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTrustedOriginsResult> getTrustedOrigins(GetTrustedOriginsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getTrustedOrigins:getTrustedOrigins", TypeShape.of(GetTrustedOriginsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get List of Trusted Origins using filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetTrustedOriginsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = OktaFunctions.getTrustedOrigins(GetTrustedOriginsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTrustedOriginsResult> getTrustedOriginsPlain(GetTrustedOriginsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getTrustedOrigins:getTrustedOrigins", TypeShape.of(GetTrustedOriginsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.user.User;
     * import com.pulumi.okta.user.UserArgs;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetUserSecurityQuestionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         var exampleUser = new User("exampleUser", UserArgs.builder()
     *             .firstName("John")
     *             .lastName("Smith")
     *             .login("john.smith}{@literal @}{@code example.com")
     *             .email("john.smith}{@literal @}{@code example.com")
     *             .build());
     * 
     *         final var example = OktaFunctions.getUserSecurityQuestions(GetUserSecurityQuestionsArgs.builder()
     *             .userId(exampleUser.id())
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static Output<GetUserSecurityQuestionsResult> getUserSecurityQuestions(GetUserSecurityQuestionsArgs args) {
        return getUserSecurityQuestions(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.user.User;
     * import com.pulumi.okta.user.UserArgs;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetUserSecurityQuestionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         var exampleUser = new User("exampleUser", UserArgs.builder()
     *             .firstName("John")
     *             .lastName("Smith")
     *             .login("john.smith}{@literal @}{@code example.com")
     *             .email("john.smith}{@literal @}{@code example.com")
     *             .build());
     * 
     *         final var example = OktaFunctions.getUserSecurityQuestions(GetUserSecurityQuestionsArgs.builder()
     *             .userId(exampleUser.id())
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetUserSecurityQuestionsResult> getUserSecurityQuestionsPlain(GetUserSecurityQuestionsPlainArgs args) {
        return getUserSecurityQuestionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.user.User;
     * import com.pulumi.okta.user.UserArgs;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetUserSecurityQuestionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         var exampleUser = new User("exampleUser", UserArgs.builder()
     *             .firstName("John")
     *             .lastName("Smith")
     *             .login("john.smith}{@literal @}{@code example.com")
     *             .email("john.smith}{@literal @}{@code example.com")
     *             .build());
     * 
     *         final var example = OktaFunctions.getUserSecurityQuestions(GetUserSecurityQuestionsArgs.builder()
     *             .userId(exampleUser.id())
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static Output<GetUserSecurityQuestionsResult> getUserSecurityQuestions(GetUserSecurityQuestionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("okta:index/getUserSecurityQuestions:getUserSecurityQuestions", TypeShape.of(GetUserSecurityQuestionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.user.User;
     * import com.pulumi.okta.user.UserArgs;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetUserSecurityQuestionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         var exampleUser = new User("exampleUser", UserArgs.builder()
     *             .firstName("John")
     *             .lastName("Smith")
     *             .login("john.smith}{@literal @}{@code example.com")
     *             .email("john.smith}{@literal @}{@code example.com")
     *             .build());
     * 
     *         final var example = OktaFunctions.getUserSecurityQuestions(GetUserSecurityQuestionsArgs.builder()
     *             .userId(exampleUser.id())
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static Output<GetUserSecurityQuestionsResult> getUserSecurityQuestions(GetUserSecurityQuestionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("okta:index/getUserSecurityQuestions:getUserSecurityQuestions", TypeShape.of(GetUserSecurityQuestionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.okta.user.User;
     * import com.pulumi.okta.user.UserArgs;
     * import com.pulumi.okta.OktaFunctions;
     * import com.pulumi.okta.inputs.GetUserSecurityQuestionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         var exampleUser = new User("exampleUser", UserArgs.builder()
     *             .firstName("John")
     *             .lastName("Smith")
     *             .login("john.smith}{@literal @}{@code example.com")
     *             .email("john.smith}{@literal @}{@code example.com")
     *             .build());
     * 
     *         final var example = OktaFunctions.getUserSecurityQuestions(GetUserSecurityQuestionsArgs.builder()
     *             .userId(exampleUser.id())
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetUserSecurityQuestionsResult> getUserSecurityQuestionsPlain(GetUserSecurityQuestionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("okta:index/getUserSecurityQuestions:getUserSecurityQuestions", TypeShape.of(GetUserSecurityQuestionsResult.class), args, Utilities.withVersion(options));
    }
}

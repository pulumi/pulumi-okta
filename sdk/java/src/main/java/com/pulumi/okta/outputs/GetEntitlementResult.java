// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.GetEntitlementParent;
import com.pulumi.okta.outputs.GetEntitlementValue;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEntitlementResult {
    private String dataType;
    private String externalValue;
    /**
     * @return The ID of this resource.
     * 
     */
    private String id;
    private Boolean multiValue;
    private String name;
    private @Nullable GetEntitlementParent parent;
    private String parentResourceOrn;
    private @Nullable List<GetEntitlementValue> values;

    private GetEntitlementResult() {}
    public String dataType() {
        return this.dataType;
    }
    public String externalValue() {
        return this.externalValue;
    }
    /**
     * @return The ID of this resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Boolean multiValue() {
        return this.multiValue;
    }
    public String name() {
        return this.name;
    }
    public Optional<GetEntitlementParent> parent() {
        return Optional.ofNullable(this.parent);
    }
    public String parentResourceOrn() {
        return this.parentResourceOrn;
    }
    public List<GetEntitlementValue> values() {
        return this.values == null ? List.of() : this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEntitlementResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dataType;
        private String externalValue;
        private String id;
        private Boolean multiValue;
        private String name;
        private @Nullable GetEntitlementParent parent;
        private String parentResourceOrn;
        private @Nullable List<GetEntitlementValue> values;
        public Builder() {}
        public Builder(GetEntitlementResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataType = defaults.dataType;
    	      this.externalValue = defaults.externalValue;
    	      this.id = defaults.id;
    	      this.multiValue = defaults.multiValue;
    	      this.name = defaults.name;
    	      this.parent = defaults.parent;
    	      this.parentResourceOrn = defaults.parentResourceOrn;
    	      this.values = defaults.values;
        }

        @CustomType.Setter
        public Builder dataType(String dataType) {
            if (dataType == null) {
              throw new MissingRequiredPropertyException("GetEntitlementResult", "dataType");
            }
            this.dataType = dataType;
            return this;
        }
        @CustomType.Setter
        public Builder externalValue(String externalValue) {
            if (externalValue == null) {
              throw new MissingRequiredPropertyException("GetEntitlementResult", "externalValue");
            }
            this.externalValue = externalValue;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEntitlementResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder multiValue(Boolean multiValue) {
            if (multiValue == null) {
              throw new MissingRequiredPropertyException("GetEntitlementResult", "multiValue");
            }
            this.multiValue = multiValue;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetEntitlementResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder parent(@Nullable GetEntitlementParent parent) {

            this.parent = parent;
            return this;
        }
        @CustomType.Setter
        public Builder parentResourceOrn(String parentResourceOrn) {
            if (parentResourceOrn == null) {
              throw new MissingRequiredPropertyException("GetEntitlementResult", "parentResourceOrn");
            }
            this.parentResourceOrn = parentResourceOrn;
            return this;
        }
        @CustomType.Setter
        public Builder values(@Nullable List<GetEntitlementValue> values) {

            this.values = values;
            return this;
        }
        public Builder values(GetEntitlementValue... values) {
            return values(List.of(values));
        }
        public GetEntitlementResult build() {
            final var _resultValue = new GetEntitlementResult();
            _resultValue.dataType = dataType;
            _resultValue.externalValue = externalValue;
            _resultValue.id = id;
            _resultValue.multiValue = multiValue;
            _resultValue.name = name;
            _resultValue.parent = parent;
            _resultValue.parentResourceOrn = parentResourceOrn;
            _resultValue.values = values;
            return _resultValue;
        }
    }
}

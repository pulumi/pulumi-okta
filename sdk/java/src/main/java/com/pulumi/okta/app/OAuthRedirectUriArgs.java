// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.app;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class OAuthRedirectUriArgs extends com.pulumi.resources.ResourceArgs {

    public static final OAuthRedirectUriArgs Empty = new OAuthRedirectUriArgs();

    /**
     * OAuth application ID.
     * 
     */
    @Import(name="appId", required=true)
    private Output<String> appId;

    /**
     * @return OAuth application ID.
     * 
     */
    public Output<String> appId() {
        return this.appId;
    }

    /**
     * Redirect URI to append to Okta OIDC application.
     * 
     */
    @Import(name="uri", required=true)
    private Output<String> uri;

    /**
     * @return Redirect URI to append to Okta OIDC application.
     * 
     */
    public Output<String> uri() {
        return this.uri;
    }

    private OAuthRedirectUriArgs() {}

    private OAuthRedirectUriArgs(OAuthRedirectUriArgs $) {
        this.appId = $.appId;
        this.uri = $.uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OAuthRedirectUriArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OAuthRedirectUriArgs $;

        public Builder() {
            $ = new OAuthRedirectUriArgs();
        }

        public Builder(OAuthRedirectUriArgs defaults) {
            $ = new OAuthRedirectUriArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appId OAuth application ID.
         * 
         * @return builder
         * 
         */
        public Builder appId(Output<String> appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param appId OAuth application ID.
         * 
         * @return builder
         * 
         */
        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        /**
         * @param uri Redirect URI to append to Okta OIDC application.
         * 
         * @return builder
         * 
         */
        public Builder uri(Output<String> uri) {
            $.uri = uri;
            return this;
        }

        /**
         * @param uri Redirect URI to append to Okta OIDC application.
         * 
         * @return builder
         * 
         */
        public Builder uri(String uri) {
            return uri(Output.of(uri));
        }

        public OAuthRedirectUriArgs build() {
            if ($.appId == null) {
                throw new MissingRequiredPropertyException("OAuthRedirectUriArgs", "appId");
            }
            if ($.uri == null) {
                throw new MissingRequiredPropertyException("OAuthRedirectUriArgs", "uri");
            }
            return $;
        }
    }

}

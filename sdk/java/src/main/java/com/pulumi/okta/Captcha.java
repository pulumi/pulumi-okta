// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.CaptchaArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.CaptchaState;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Creates different types of captcha.
 * &gt; **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.
 * This resource allows you to create and configure a CAPTCHA.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.Captcha;
 * import com.pulumi.okta.CaptchaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Captcha("example", CaptchaArgs.builder()
 *             .name("My CAPTCHA")
 *             .type("HCAPTCHA")
 *             .siteKey("some_key")
 *             .secretKey("some_secret_key")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:index/captcha:Captcha example &amp;#60;captcha id&amp;#62;
 * ```
 * 
 */
@ResourceType(type="okta:index/captcha:Captcha")
public class Captcha extends com.pulumi.resources.CustomResource {
    /**
     * Name of the CAPTCHA
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the CAPTCHA
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Secret key issued from the CAPTCHA vendor to perform server-side validation for a CAPTCHA token
     * 
     */
    @Export(name="secretKey", refs={String.class}, tree="[0]")
    private Output<String> secretKey;

    /**
     * @return Secret key issued from the CAPTCHA vendor to perform server-side validation for a CAPTCHA token
     * 
     */
    public Output<String> secretKey() {
        return this.secretKey;
    }
    /**
     * Site key issued from the CAPTCHA vendor to render a CAPTCHA on a page
     * 
     */
    @Export(name="siteKey", refs={String.class}, tree="[0]")
    private Output<String> siteKey;

    /**
     * @return Site key issued from the CAPTCHA vendor to render a CAPTCHA on a page
     * 
     */
    public Output<String> siteKey() {
        return this.siteKey;
    }
    /**
     * Type of the captcha. Valid values: `HCAPTCHA`, `RECAPTCHA_V2`
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Type of the captcha. Valid values: `HCAPTCHA`, `RECAPTCHA_V2`
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Captcha(java.lang.String name) {
        this(name, CaptchaArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Captcha(java.lang.String name, CaptchaArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Captcha(java.lang.String name, CaptchaArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/captcha:Captcha", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Captcha(java.lang.String name, Output<java.lang.String> id, @Nullable CaptchaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/captcha:Captcha", name, state, makeResourceOptions(options, id), false);
    }

    private static CaptchaArgs makeArgs(CaptchaArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CaptchaArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "secretKey"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Captcha get(java.lang.String name, Output<java.lang.String> id, @Nullable CaptchaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Captcha(name, id, state, options);
    }
}

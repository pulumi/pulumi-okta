// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.AdminRoleCustomArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.AdminRoleCustomState;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * These operations allow the creation and manipulation of custom roles as custom collections of permissions.
 * 
 * &gt; **NOTE:** This an `Early Access` feature.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.AdminRoleCustom;
 * import com.pulumi.okta.AdminRoleCustomArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new AdminRoleCustom(&#34;example&#34;, AdminRoleCustomArgs.builder()        
 *             .label(&#34;AppAssignmentManager&#34;)
 *             .description(&#34;This role allows app assignment management&#34;)
 *             .permissions(&#34;okta.apps.assignment.manage&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Okta Custom Admin Role can be imported via the Okta ID.
 * 
 * ```sh
 * $ pulumi import okta:index/adminRoleCustom:AdminRoleCustom example &amp;#60;custom role id&amp;#62;
 * ```
 * 
 */
@ResourceType(type="okta:index/adminRoleCustom:AdminRoleCustom")
public class AdminRoleCustom extends com.pulumi.resources.CustomResource {
    /**
     * A human-readable description of the new Role.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return A human-readable description of the new Role.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * The name given to the new Role.
     * 
     */
    @Export(name="label", refs={String.class}, tree="[0]")
    private Output<String> label;

    /**
     * @return The name given to the new Role.
     * 
     */
    public Output<String> label() {
        return this.label;
    }
    /**
     * The permissions that the new Role grants. At least one
     * permission must be specified when creating custom role. Valid values: `&#34;okta.authzServers.manage&#34;`,
     * `&#34;okta.authzServers.read&#34;`,
     * `&#34;okta.apps.assignment.manage&#34;`,
     * `&#34;okta.apps.manage&#34;`,
     * `&#34;okta.apps.read&#34;`,
     * `&#34;okta.customizations.manage&#34;`,
     * `&#34;okta.customizations.read&#34;`,
     * `&#34;okta.groups.appAssignment.manage&#34;`,
     * `&#34;okta.groups.create&#34;`,
     * `&#34;okta.groups.manage&#34;`,
     * `&#34;okta.groups.members.manage&#34;`,
     * `&#34;okta.groups.read&#34;`,
     * `&#34;okta.profilesources.import.run&#34;`,
     * `&#34;okta.users.appAssignment.manage&#34;`,
     * `&#34;okta.users.create&#34;`,
     * `&#34;okta.users.credentials.expirePassword&#34;`,
     * `&#34;okta.users.credentials.manage&#34;`,
     * `&#34;okta.users.credentials.resetFactors&#34;`,
     * `&#34;okta.users.credentials.resetPassword&#34;`,
     * `&#34;okta.users.groupMembership.manage&#34;`,
     * `&#34;okta.users.lifecycle.activate&#34;`,
     * `&#34;okta.users.lifecycle.clearSessions&#34;`,
     * `&#34;okta.users.lifecycle.deactivate&#34;`,
     * `&#34;okta.users.lifecycle.delete&#34;`,
     * `&#34;okta.users.lifecycle.manage&#34;`,
     * `&#34;okta.users.lifecycle.suspend&#34;`,
     * `&#34;okta.users.lifecycle.unlock&#34;`,
     * `&#34;okta.users.lifecycle.unsuspend&#34;`,
     * `&#34;okta.users.manage&#34;`,
     * `&#34;okta.users.read&#34;`,
     * `&#34;okta.users.userprofile.manage&#34;`,
     * `&#34;okta.workflows.invoke&#34;`.,
     * 
     */
    @Export(name="permissions", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> permissions;

    /**
     * @return The permissions that the new Role grants. At least one
     * permission must be specified when creating custom role. Valid values: `&#34;okta.authzServers.manage&#34;`,
     * `&#34;okta.authzServers.read&#34;`,
     * `&#34;okta.apps.assignment.manage&#34;`,
     * `&#34;okta.apps.manage&#34;`,
     * `&#34;okta.apps.read&#34;`,
     * `&#34;okta.customizations.manage&#34;`,
     * `&#34;okta.customizations.read&#34;`,
     * `&#34;okta.groups.appAssignment.manage&#34;`,
     * `&#34;okta.groups.create&#34;`,
     * `&#34;okta.groups.manage&#34;`,
     * `&#34;okta.groups.members.manage&#34;`,
     * `&#34;okta.groups.read&#34;`,
     * `&#34;okta.profilesources.import.run&#34;`,
     * `&#34;okta.users.appAssignment.manage&#34;`,
     * `&#34;okta.users.create&#34;`,
     * `&#34;okta.users.credentials.expirePassword&#34;`,
     * `&#34;okta.users.credentials.manage&#34;`,
     * `&#34;okta.users.credentials.resetFactors&#34;`,
     * `&#34;okta.users.credentials.resetPassword&#34;`,
     * `&#34;okta.users.groupMembership.manage&#34;`,
     * `&#34;okta.users.lifecycle.activate&#34;`,
     * `&#34;okta.users.lifecycle.clearSessions&#34;`,
     * `&#34;okta.users.lifecycle.deactivate&#34;`,
     * `&#34;okta.users.lifecycle.delete&#34;`,
     * `&#34;okta.users.lifecycle.manage&#34;`,
     * `&#34;okta.users.lifecycle.suspend&#34;`,
     * `&#34;okta.users.lifecycle.unlock&#34;`,
     * `&#34;okta.users.lifecycle.unsuspend&#34;`,
     * `&#34;okta.users.manage&#34;`,
     * `&#34;okta.users.read&#34;`,
     * `&#34;okta.users.userprofile.manage&#34;`,
     * `&#34;okta.workflows.invoke&#34;`.,
     * 
     */
    public Output<Optional<List<String>>> permissions() {
        return Codegen.optional(this.permissions);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AdminRoleCustom(String name) {
        this(name, AdminRoleCustomArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AdminRoleCustom(String name, AdminRoleCustomArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AdminRoleCustom(String name, AdminRoleCustomArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/adminRoleCustom:AdminRoleCustom", name, args == null ? AdminRoleCustomArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AdminRoleCustom(String name, Output<String> id, @Nullable AdminRoleCustomState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/adminRoleCustom:AdminRoleCustom", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AdminRoleCustom get(String name, Output<String> id, @Nullable AdminRoleCustomState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AdminRoleCustom(name, id, state, options);
    }
}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.GetUserSecurityQuestionsQuestion;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUserSecurityQuestionsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<GetUserSecurityQuestionsQuestion> questions;
    /**
     * @return ID of a Okta User
     * 
     */
    private String userId;

    private GetUserSecurityQuestionsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetUserSecurityQuestionsQuestion> questions() {
        return this.questions;
    }
    /**
     * @return ID of a Okta User
     * 
     */
    public String userId() {
        return this.userId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserSecurityQuestionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetUserSecurityQuestionsQuestion> questions;
        private String userId;
        public Builder() {}
        public Builder(GetUserSecurityQuestionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.questions = defaults.questions;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUserSecurityQuestionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder questions(List<GetUserSecurityQuestionsQuestion> questions) {
            if (questions == null) {
              throw new MissingRequiredPropertyException("GetUserSecurityQuestionsResult", "questions");
            }
            this.questions = questions;
            return this;
        }
        public Builder questions(GetUserSecurityQuestionsQuestion... questions) {
            return questions(List.of(questions));
        }
        @CustomType.Setter
        public Builder userId(String userId) {
            if (userId == null) {
              throw new MissingRequiredPropertyException("GetUserSecurityQuestionsResult", "userId");
            }
            this.userId = userId;
            return this;
        }
        public GetUserSecurityQuestionsResult build() {
            final var _resultValue = new GetUserSecurityQuestionsResult();
            _resultValue.id = id;
            _resultValue.questions = questions;
            _resultValue.userId = userId;
            return _resultValue;
        }
    }
}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.RealmAssignmentArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.RealmAssignmentState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates an Okta Realm Assignment. This resource allows you to create and configure an Okta Realm Assignment.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.Realm;
 * import com.pulumi.okta.RealmArgs;
 * import com.pulumi.okta.RealmAssignment;
 * import com.pulumi.okta.RealmAssignmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var example = new Realm("example", RealmArgs.builder()
 *             .name("Example Realm")
 *             .realmType("DEFAULT")
 *             .build());
 * 
 *         var test = new RealmAssignment("test", RealmAssignmentArgs.builder()
 *             .name("Example Realm Assignment")
 *             .priority(55)
 *             .status("ACTIVE")
 *             .profileSourceId(testOktaIdpSaml.id())
 *             .conditionExpression("user.profile.login.contains(\"}{@literal @}{@code example.com\")")
 *             .realmId(example.id())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:index/realmAssignment:RealmAssignment example &lt;realm_assignment_id&gt;
 * ```
 * 
 */
@ResourceType(type="okta:index/realmAssignment:RealmAssignment")
public class RealmAssignment extends com.pulumi.resources.CustomResource {
    /**
     * Condition expression for the Realm Assignment in Okta Expression Language. Example: `user.profile.role ==&#34;Manager&#34;` or `user.profile.state.contains(&#34;example&#34;)`.
     * 
     */
    @Export(name="conditionExpression", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> conditionExpression;

    /**
     * @return Condition expression for the Realm Assignment in Okta Expression Language. Example: `user.profile.role ==&#34;Manager&#34;` or `user.profile.state.contains(&#34;example&#34;)`.
     * 
     */
    public Output<Optional<String>> conditionExpression() {
        return Codegen.optional(this.conditionExpression);
    }
    /**
     * Indicates whether the realm assignment is the default.
     * 
     */
    @Export(name="isDefault", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isDefault;

    /**
     * @return Indicates whether the realm assignment is the default.
     * 
     */
    public Output<Boolean> isDefault() {
        return this.isDefault;
    }
    /**
     * The name of the Okta Realm Assignment.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Okta Realm Assignment.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Priority of the Realm Assignment. The lower the number, the higher the priority.
     * 
     */
    @Export(name="priority", refs={Integer.class}, tree="[0]")
    private Output<Integer> priority;

    /**
     * @return The Priority of the Realm Assignment. The lower the number, the higher the priority.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }
    /**
     * The ID of the Profile Source.
     * 
     */
    @Export(name="profileSourceId", refs={String.class}, tree="[0]")
    private Output<String> profileSourceId;

    /**
     * @return The ID of the Profile Source.
     * 
     */
    public Output<String> profileSourceId() {
        return this.profileSourceId;
    }
    /**
     * The ID of the Realm asscociated with the Realm Assignment.
     * 
     */
    @Export(name="realmId", refs={String.class}, tree="[0]")
    private Output<String> realmId;

    /**
     * @return The ID of the Realm asscociated with the Realm Assignment.
     * 
     */
    public Output<String> realmId() {
        return this.realmId;
    }
    /**
     * Defines whether the Realm Assignment is active or not. Valid values: `ACTIVE` and `INACTIVE`.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Defines whether the Realm Assignment is active or not. Valid values: `ACTIVE` and `INACTIVE`.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RealmAssignment(java.lang.String name) {
        this(name, RealmAssignmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RealmAssignment(java.lang.String name, RealmAssignmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RealmAssignment(java.lang.String name, RealmAssignmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/realmAssignment:RealmAssignment", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RealmAssignment(java.lang.String name, Output<java.lang.String> id, @Nullable RealmAssignmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/realmAssignment:RealmAssignment", name, state, makeResourceOptions(options, id), false);
    }

    private static RealmAssignmentArgs makeArgs(RealmAssignmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RealmAssignmentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RealmAssignment get(java.lang.String name, Output<java.lang.String> id, @Nullable RealmAssignmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RealmAssignment(name, id, state, options);
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.AppUserSchemaPropertyArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.AppUserSchemaPropertyState;
import com.pulumi.okta.outputs.AppUserSchemaPropertyArrayOneOf;
import com.pulumi.okta.outputs.AppUserSchemaPropertyOneOf;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.AppUserSchemaProperty;
 * import com.pulumi.okta.AppUserSchemaPropertyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new AppUserSchemaProperty("example", AppUserSchemaPropertyArgs.builder()
 *             .appId("<app id>")
 *             .index("customPropertyName")
 *             .title("customPropertyName")
 *             .type("string")
 *             .description("My custom property name")
 *             .master("OKTA")
 *             .scope("SELF")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:index/appUserSchemaProperty:AppUserSchemaProperty example &amp;#60;app id&amp;#62;/&amp;#60;property name&amp;#62;
 * ```
 * 
 */
@ResourceType(type="okta:index/appUserSchemaProperty:AppUserSchemaProperty")
public class AppUserSchemaProperty extends com.pulumi.resources.CustomResource {
    /**
     * The Application&#39;s ID the user custom schema property should be assigned to.
     * 
     */
    @Export(name="appId", refs={String.class}, tree="[0]")
    private Output<String> appId;

    /**
     * @return The Application&#39;s ID the user custom schema property should be assigned to.
     * 
     */
    public Output<String> appId() {
        return this.appId;
    }
    /**
     * Array of values that an array property&#39;s items can be set to.
     * 
     */
    @Export(name="arrayEnums", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> arrayEnums;

    /**
     * @return Array of values that an array property&#39;s items can be set to.
     * 
     */
    public Output<Optional<List<String>>> arrayEnums() {
        return Codegen.optional(this.arrayEnums);
    }
    /**
     * Display name and value an enum array can be set to. - &#39;const&#39; - (Required) value mapping to member of &#39;enum&#39;. - &#39;title&#39;
     * - (Required) display name for the enum value.
     * 
     */
    @Export(name="arrayOneOfs", refs={List.class,AppUserSchemaPropertyArrayOneOf.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AppUserSchemaPropertyArrayOneOf>> arrayOneOfs;

    /**
     * @return Display name and value an enum array can be set to. - &#39;const&#39; - (Required) value mapping to member of &#39;enum&#39;. - &#39;title&#39;
     * - (Required) display name for the enum value.
     * 
     */
    public Output<Optional<List<AppUserSchemaPropertyArrayOneOf>>> arrayOneOfs() {
        return Codegen.optional(this.arrayOneOfs);
    }
    /**
     * The type of the array elements if `type` is set to `array`
     * 
     */
    @Export(name="arrayType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> arrayType;

    /**
     * @return The type of the array elements if `type` is set to `array`
     * 
     */
    public Output<Optional<String>> arrayType() {
        return Codegen.optional(this.arrayType);
    }
    /**
     * The description of the user schema property.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the user schema property.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Array of values a primitive property can be set to. See `array_enum` for arrays.
     * 
     */
    @Export(name="enums", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> enums;

    /**
     * @return Array of values a primitive property can be set to. See `array_enum` for arrays.
     * 
     */
    public Output<Optional<List<String>>> enums() {
        return Codegen.optional(this.enums);
    }
    /**
     * External name of the user schema property.
     * 
     */
    @Export(name="externalName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> externalName;

    /**
     * @return External name of the user schema property.
     * 
     */
    public Output<Optional<String>> externalName() {
        return Codegen.optional(this.externalName);
    }
    /**
     * External namespace of the user schema property.
     * 
     */
    @Export(name="externalNamespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> externalNamespace;

    /**
     * @return External namespace of the user schema property.
     * 
     */
    public Output<Optional<String>> externalNamespace() {
        return Codegen.optional(this.externalNamespace);
    }
    /**
     * Subschema unique string identifier
     * 
     */
    @Export(name="index", refs={String.class}, tree="[0]")
    private Output<String> index;

    /**
     * @return Subschema unique string identifier
     * 
     */
    public Output<String> index() {
        return this.index;
    }
    /**
     * Master priority for the user schema property. It can be set to `PROFILE_MASTER` or `OKTA`
     * 
     */
    @Export(name="master", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> master;

    /**
     * @return Master priority for the user schema property. It can be set to `PROFILE_MASTER` or `OKTA`
     * 
     */
    public Output<Optional<String>> master() {
        return Codegen.optional(this.master);
    }
    /**
     * The maximum length of the user property value. Only applies to type `string`
     * 
     */
    @Export(name="maxLength", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maxLength;

    /**
     * @return The maximum length of the user property value. Only applies to type `string`
     * 
     */
    public Output<Optional<Integer>> maxLength() {
        return Codegen.optional(this.maxLength);
    }
    /**
     * The minimum length of the user property value. Only applies to type `string`
     * 
     */
    @Export(name="minLength", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> minLength;

    /**
     * @return The minimum length of the user property value. Only applies to type `string`
     * 
     */
    public Output<Optional<Integer>> minLength() {
        return Codegen.optional(this.minLength);
    }
    /**
     * Array of maps containing a mapping for display name to enum value. - &#39;const&#39; - (Required) value mapping to member of
     * &#39;enum&#39;. - &#39;title&#39; - (Required) display name for the enum value.
     * 
     */
    @Export(name="oneOfs", refs={List.class,AppUserSchemaPropertyOneOf.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AppUserSchemaPropertyOneOf>> oneOfs;

    /**
     * @return Array of maps containing a mapping for display name to enum value. - &#39;const&#39; - (Required) value mapping to member of
     * &#39;enum&#39;. - &#39;title&#39; - (Required) display name for the enum value.
     * 
     */
    public Output<Optional<List<AppUserSchemaPropertyOneOf>>> oneOfs() {
        return Codegen.optional(this.oneOfs);
    }
    /**
     * Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`
     * 
     */
    @Export(name="permissions", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> permissions;

    /**
     * @return Access control permissions for the property. It can be set to `READ_WRITE`, `READ_ONLY`, `HIDE`. Default: `READ_ONLY`
     * 
     */
    public Output<Optional<String>> permissions() {
        return Codegen.optional(this.permissions);
    }
    /**
     * Whether the subschema is required
     * 
     */
    @Export(name="required", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> required;

    /**
     * @return Whether the subschema is required
     * 
     */
    public Output<Optional<Boolean>> required() {
        return Codegen.optional(this.required);
    }
    /**
     * determines whether an app user attribute can be set at the Personal `SELF` or Group `NONE` level. Default value is
     * `NONE`.
     * 
     */
    @Export(name="scope", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> scope;

    /**
     * @return determines whether an app user attribute can be set at the Personal `SELF` or Group `NONE` level. Default value is
     * `NONE`.
     * 
     */
    public Output<Optional<String>> scope() {
        return Codegen.optional(this.scope);
    }
    /**
     * Subschema title (display name)
     * 
     */
    @Export(name="title", refs={String.class}, tree="[0]")
    private Output<String> title;

    /**
     * @return Subschema title (display name)
     * 
     */
    public Output<String> title() {
        return this.title;
    }
    /**
     * The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of the schema property. It can be `string`, `boolean`, `number`, `integer`, `array`, or `object`
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * If `type` is set to `array`, used to set whether attribute value is determined by group priority `false`, or combine
     * values across groups `true`. Can not be set to `true` if `scope` is set to `SELF`.
     * 
     */
    @Export(name="union", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> union;

    /**
     * @return If `type` is set to `array`, used to set whether attribute value is determined by group priority `false`, or combine
     * values across groups `true`. Can not be set to `true` if `scope` is set to `SELF`.
     * 
     */
    public Output<Optional<Boolean>> union() {
        return Codegen.optional(this.union);
    }
    /**
     * Whether the property should be unique. It can be set to `UNIQUE_VALIDATED` or `NOT_UNIQUE`.
     * 
     */
    @Export(name="unique", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> unique;

    /**
     * @return Whether the property should be unique. It can be set to `UNIQUE_VALIDATED` or `NOT_UNIQUE`.
     * 
     */
    public Output<Optional<String>> unique() {
        return Codegen.optional(this.unique);
    }
    /**
     * User type ID. By default, it is `default`
     * 
     */
    @Export(name="userType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userType;

    /**
     * @return User type ID. By default, it is `default`
     * 
     */
    public Output<Optional<String>> userType() {
        return Codegen.optional(this.userType);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AppUserSchemaProperty(String name) {
        this(name, AppUserSchemaPropertyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AppUserSchemaProperty(String name, AppUserSchemaPropertyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AppUserSchemaProperty(String name, AppUserSchemaPropertyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/appUserSchemaProperty:AppUserSchemaProperty", name, args == null ? AppUserSchemaPropertyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AppUserSchemaProperty(String name, Output<String> id, @Nullable AppUserSchemaPropertyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/appUserSchemaProperty:AppUserSchemaProperty", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AppUserSchemaProperty get(String name, Output<String> id, @Nullable AppUserSchemaPropertyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AppUserSchemaProperty(name, id, state, options);
    }
}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.CampaignScheduleSettingsRecurrence;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CampaignScheduleSettings {
    /**
     * @return The duration (in days) that the campaign is active.
     * 
     */
    private Integer durationInDays;
    private @Nullable String endDate;
    private @Nullable List<CampaignScheduleSettingsRecurrence> recurrences;
    /**
     * @return The date on which the campaign is supposed to start. Accepts date in ISO 8601 format.
     * 
     */
    private String startDate;
    /**
     * @return The time zone in which the campaign is active.
     * 
     */
    private String timeZone;
    /**
     * @return The type of campaign being scheduled.
     * 
     */
    private String type;

    private CampaignScheduleSettings() {}
    /**
     * @return The duration (in days) that the campaign is active.
     * 
     */
    public Integer durationInDays() {
        return this.durationInDays;
    }
    public Optional<String> endDate() {
        return Optional.ofNullable(this.endDate);
    }
    public List<CampaignScheduleSettingsRecurrence> recurrences() {
        return this.recurrences == null ? List.of() : this.recurrences;
    }
    /**
     * @return The date on which the campaign is supposed to start. Accepts date in ISO 8601 format.
     * 
     */
    public String startDate() {
        return this.startDate;
    }
    /**
     * @return The time zone in which the campaign is active.
     * 
     */
    public String timeZone() {
        return this.timeZone;
    }
    /**
     * @return The type of campaign being scheduled.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CampaignScheduleSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer durationInDays;
        private @Nullable String endDate;
        private @Nullable List<CampaignScheduleSettingsRecurrence> recurrences;
        private String startDate;
        private String timeZone;
        private String type;
        public Builder() {}
        public Builder(CampaignScheduleSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.durationInDays = defaults.durationInDays;
    	      this.endDate = defaults.endDate;
    	      this.recurrences = defaults.recurrences;
    	      this.startDate = defaults.startDate;
    	      this.timeZone = defaults.timeZone;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder durationInDays(Integer durationInDays) {
            if (durationInDays == null) {
              throw new MissingRequiredPropertyException("CampaignScheduleSettings", "durationInDays");
            }
            this.durationInDays = durationInDays;
            return this;
        }
        @CustomType.Setter
        public Builder endDate(@Nullable String endDate) {

            this.endDate = endDate;
            return this;
        }
        @CustomType.Setter
        public Builder recurrences(@Nullable List<CampaignScheduleSettingsRecurrence> recurrences) {

            this.recurrences = recurrences;
            return this;
        }
        public Builder recurrences(CampaignScheduleSettingsRecurrence... recurrences) {
            return recurrences(List.of(recurrences));
        }
        @CustomType.Setter
        public Builder startDate(String startDate) {
            if (startDate == null) {
              throw new MissingRequiredPropertyException("CampaignScheduleSettings", "startDate");
            }
            this.startDate = startDate;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            if (timeZone == null) {
              throw new MissingRequiredPropertyException("CampaignScheduleSettings", "timeZone");
            }
            this.timeZone = timeZone;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("CampaignScheduleSettings", "type");
            }
            this.type = type;
            return this;
        }
        public CampaignScheduleSettings build() {
            final var _resultValue = new CampaignScheduleSettings();
            _resultValue.durationInDays = durationInDays;
            _resultValue.endDate = endDate;
            _resultValue.recurrences = recurrences;
            _resultValue.startDate = startDate;
            _resultValue.timeZone = timeZone;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}

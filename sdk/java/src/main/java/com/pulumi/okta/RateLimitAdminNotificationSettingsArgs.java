// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;


public final class RateLimitAdminNotificationSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final RateLimitAdminNotificationSettingsArgs Empty = new RateLimitAdminNotificationSettingsArgs();

    /**
     * Enables or disables admin notifications for rate limiting events.
     * 
     */
    @Import(name="notificationsEnabled", required=true)
    private Output<Boolean> notificationsEnabled;

    /**
     * @return Enables or disables admin notifications for rate limiting events.
     * 
     */
    public Output<Boolean> notificationsEnabled() {
        return this.notificationsEnabled;
    }

    private RateLimitAdminNotificationSettingsArgs() {}

    private RateLimitAdminNotificationSettingsArgs(RateLimitAdminNotificationSettingsArgs $) {
        this.notificationsEnabled = $.notificationsEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RateLimitAdminNotificationSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RateLimitAdminNotificationSettingsArgs $;

        public Builder() {
            $ = new RateLimitAdminNotificationSettingsArgs();
        }

        public Builder(RateLimitAdminNotificationSettingsArgs defaults) {
            $ = new RateLimitAdminNotificationSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param notificationsEnabled Enables or disables admin notifications for rate limiting events.
         * 
         * @return builder
         * 
         */
        public Builder notificationsEnabled(Output<Boolean> notificationsEnabled) {
            $.notificationsEnabled = notificationsEnabled;
            return this;
        }

        /**
         * @param notificationsEnabled Enables or disables admin notifications for rate limiting events.
         * 
         * @return builder
         * 
         */
        public Builder notificationsEnabled(Boolean notificationsEnabled) {
            return notificationsEnabled(Output.of(notificationsEnabled));
        }

        public RateLimitAdminNotificationSettingsArgs build() {
            if ($.notificationsEnabled == null) {
                throw new MissingRequiredPropertyException("RateLimitAdminNotificationSettingsArgs", "notificationsEnabled");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetEndUserMyRequestsRequestedArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetEndUserMyRequestsRequestedArgs Empty = new GetEndUserMyRequestsRequestedArgs();

    /**
     * ID of the access scope
     * 
     */
    @Import(name="accessScopeId", required=true)
    private Output<String> accessScopeId;

    /**
     * @return ID of the access scope
     * 
     */
    public Output<String> accessScopeId() {
        return this.accessScopeId;
    }

    /**
     * The access scope type
     * 
     */
    @Import(name="accessScopeType", required=true)
    private Output<String> accessScopeType;

    /**
     * @return The access scope type
     * 
     */
    public Output<String> accessScopeType() {
        return this.accessScopeType;
    }

    /**
     * The ID of the catalog entry for which the request was made.
     * 
     */
    @Import(name="entryId", required=true)
    private Output<String> entryId;

    /**
     * @return The ID of the catalog entry for which the request was made.
     * 
     */
    public Output<String> entryId() {
        return this.entryId;
    }

    /**
     * The requested resource ID
     * 
     */
    @Import(name="resourceId", required=true)
    private Output<String> resourceId;

    /**
     * @return The requested resource ID
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }

    /**
     * The requested resource type.
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    /**
     * @return The requested resource type.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }

    private GetEndUserMyRequestsRequestedArgs() {}

    private GetEndUserMyRequestsRequestedArgs(GetEndUserMyRequestsRequestedArgs $) {
        this.accessScopeId = $.accessScopeId;
        this.accessScopeType = $.accessScopeType;
        this.entryId = $.entryId;
        this.resourceId = $.resourceId;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEndUserMyRequestsRequestedArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEndUserMyRequestsRequestedArgs $;

        public Builder() {
            $ = new GetEndUserMyRequestsRequestedArgs();
        }

        public Builder(GetEndUserMyRequestsRequestedArgs defaults) {
            $ = new GetEndUserMyRequestsRequestedArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessScopeId ID of the access scope
         * 
         * @return builder
         * 
         */
        public Builder accessScopeId(Output<String> accessScopeId) {
            $.accessScopeId = accessScopeId;
            return this;
        }

        /**
         * @param accessScopeId ID of the access scope
         * 
         * @return builder
         * 
         */
        public Builder accessScopeId(String accessScopeId) {
            return accessScopeId(Output.of(accessScopeId));
        }

        /**
         * @param accessScopeType The access scope type
         * 
         * @return builder
         * 
         */
        public Builder accessScopeType(Output<String> accessScopeType) {
            $.accessScopeType = accessScopeType;
            return this;
        }

        /**
         * @param accessScopeType The access scope type
         * 
         * @return builder
         * 
         */
        public Builder accessScopeType(String accessScopeType) {
            return accessScopeType(Output.of(accessScopeType));
        }

        /**
         * @param entryId The ID of the catalog entry for which the request was made.
         * 
         * @return builder
         * 
         */
        public Builder entryId(Output<String> entryId) {
            $.entryId = entryId;
            return this;
        }

        /**
         * @param entryId The ID of the catalog entry for which the request was made.
         * 
         * @return builder
         * 
         */
        public Builder entryId(String entryId) {
            return entryId(Output.of(entryId));
        }

        /**
         * @param resourceId The requested resource ID
         * 
         * @return builder
         * 
         */
        public Builder resourceId(Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId The requested resource ID
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param resourceType The requested resource type.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The requested resource type.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public GetEndUserMyRequestsRequestedArgs build() {
            if ($.accessScopeId == null) {
                throw new MissingRequiredPropertyException("GetEndUserMyRequestsRequestedArgs", "accessScopeId");
            }
            if ($.accessScopeType == null) {
                throw new MissingRequiredPropertyException("GetEndUserMyRequestsRequestedArgs", "accessScopeType");
            }
            if ($.entryId == null) {
                throw new MissingRequiredPropertyException("GetEndUserMyRequestsRequestedArgs", "entryId");
            }
            if ($.resourceId == null) {
                throw new MissingRequiredPropertyException("GetEndUserMyRequestsRequestedArgs", "resourceId");
            }
            if ($.resourceType == null) {
                throw new MissingRequiredPropertyException("GetEndUserMyRequestsRequestedArgs", "resourceType");
            }
            return $;
        }
    }

}

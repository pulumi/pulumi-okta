// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReviewArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReviewArgs Empty = new ReviewArgs();

    /**
     * The id of the campaign.
     * 
     */
    @Import(name="campaignId", required=true)
    private Output<String> campaignId;

    /**
     * @return The id of the campaign.
     * 
     */
    public Output<String> campaignId() {
        return this.campaignId;
    }

    /**
     * A note to justify the reassignment decision for the specified review.
     * 
     */
    @Import(name="note", required=true)
    private Output<String> note;

    /**
     * @return A note to justify the reassignment decision for the specified review.
     * 
     */
    public Output<String> note() {
        return this.note;
    }

    /**
     * A list of reviews (review id values) that are reassigned to the new reviewer.
     * 
     */
    @Import(name="reviewIds", required=true)
    private Output<List<String>> reviewIds;

    /**
     * @return A list of reviews (review id values) that are reassigned to the new reviewer.
     * 
     */
    public Output<List<String>> reviewIds() {
        return this.reviewIds;
    }

    /**
     * The Okta user id of the new reviewer.
     * 
     */
    @Import(name="reviewerId", required=true)
    private Output<String> reviewerId;

    /**
     * @return The Okta user id of the new reviewer.
     * 
     */
    public Output<String> reviewerId() {
        return this.reviewerId;
    }

    /**
     * Identifies the reviewer level of each reviews during access certification. Applicable for multi level campaigns only.
     * 
     */
    @Import(name="reviewerLevel")
    private @Nullable Output<String> reviewerLevel;

    /**
     * @return Identifies the reviewer level of each reviews during access certification. Applicable for multi level campaigns only.
     * 
     */
    public Optional<Output<String>> reviewerLevel() {
        return Optional.ofNullable(this.reviewerLevel);
    }

    private ReviewArgs() {}

    private ReviewArgs(ReviewArgs $) {
        this.campaignId = $.campaignId;
        this.note = $.note;
        this.reviewIds = $.reviewIds;
        this.reviewerId = $.reviewerId;
        this.reviewerLevel = $.reviewerLevel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReviewArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReviewArgs $;

        public Builder() {
            $ = new ReviewArgs();
        }

        public Builder(ReviewArgs defaults) {
            $ = new ReviewArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param campaignId The id of the campaign.
         * 
         * @return builder
         * 
         */
        public Builder campaignId(Output<String> campaignId) {
            $.campaignId = campaignId;
            return this;
        }

        /**
         * @param campaignId The id of the campaign.
         * 
         * @return builder
         * 
         */
        public Builder campaignId(String campaignId) {
            return campaignId(Output.of(campaignId));
        }

        /**
         * @param note A note to justify the reassignment decision for the specified review.
         * 
         * @return builder
         * 
         */
        public Builder note(Output<String> note) {
            $.note = note;
            return this;
        }

        /**
         * @param note A note to justify the reassignment decision for the specified review.
         * 
         * @return builder
         * 
         */
        public Builder note(String note) {
            return note(Output.of(note));
        }

        /**
         * @param reviewIds A list of reviews (review id values) that are reassigned to the new reviewer.
         * 
         * @return builder
         * 
         */
        public Builder reviewIds(Output<List<String>> reviewIds) {
            $.reviewIds = reviewIds;
            return this;
        }

        /**
         * @param reviewIds A list of reviews (review id values) that are reassigned to the new reviewer.
         * 
         * @return builder
         * 
         */
        public Builder reviewIds(List<String> reviewIds) {
            return reviewIds(Output.of(reviewIds));
        }

        /**
         * @param reviewIds A list of reviews (review id values) that are reassigned to the new reviewer.
         * 
         * @return builder
         * 
         */
        public Builder reviewIds(String... reviewIds) {
            return reviewIds(List.of(reviewIds));
        }

        /**
         * @param reviewerId The Okta user id of the new reviewer.
         * 
         * @return builder
         * 
         */
        public Builder reviewerId(Output<String> reviewerId) {
            $.reviewerId = reviewerId;
            return this;
        }

        /**
         * @param reviewerId The Okta user id of the new reviewer.
         * 
         * @return builder
         * 
         */
        public Builder reviewerId(String reviewerId) {
            return reviewerId(Output.of(reviewerId));
        }

        /**
         * @param reviewerLevel Identifies the reviewer level of each reviews during access certification. Applicable for multi level campaigns only.
         * 
         * @return builder
         * 
         */
        public Builder reviewerLevel(@Nullable Output<String> reviewerLevel) {
            $.reviewerLevel = reviewerLevel;
            return this;
        }

        /**
         * @param reviewerLevel Identifies the reviewer level of each reviews during access certification. Applicable for multi level campaigns only.
         * 
         * @return builder
         * 
         */
        public Builder reviewerLevel(String reviewerLevel) {
            return reviewerLevel(Output.of(reviewerLevel));
        }

        public ReviewArgs build() {
            if ($.campaignId == null) {
                throw new MissingRequiredPropertyException("ReviewArgs", "campaignId");
            }
            if ($.note == null) {
                throw new MissingRequiredPropertyException("ReviewArgs", "note");
            }
            if ($.reviewIds == null) {
                throw new MissingRequiredPropertyException("ReviewArgs", "reviewIds");
            }
            if ($.reviewerId == null) {
                throw new MissingRequiredPropertyException("ReviewArgs", "reviewerId");
            }
            return $;
        }
    }

}

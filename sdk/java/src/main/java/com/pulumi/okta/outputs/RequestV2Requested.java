// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RequestV2Requested {
    /**
     * @return The ID of the access scope associated with the resource.
     * 
     */
    private @Nullable String accessScopeId;
    /**
     * @return The access scope type.
     * 
     */
    private @Nullable String accessScopeType;
    /**
     * @return The ID of the resource catalog entry.
     * 
     */
    private String entryId;
    /**
     * @return The ID of the requested resource.
     * 
     */
    private @Nullable String resourceId;
    /**
     * @return The requested resource type.
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return The type of the resource.
     * 
     */
    private String type;

    private RequestV2Requested() {}
    /**
     * @return The ID of the access scope associated with the resource.
     * 
     */
    public Optional<String> accessScopeId() {
        return Optional.ofNullable(this.accessScopeId);
    }
    /**
     * @return The access scope type.
     * 
     */
    public Optional<String> accessScopeType() {
        return Optional.ofNullable(this.accessScopeType);
    }
    /**
     * @return The ID of the resource catalog entry.
     * 
     */
    public String entryId() {
        return this.entryId;
    }
    /**
     * @return The ID of the requested resource.
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return The requested resource type.
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return The type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RequestV2Requested defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessScopeId;
        private @Nullable String accessScopeType;
        private String entryId;
        private @Nullable String resourceId;
        private @Nullable String resourceType;
        private String type;
        public Builder() {}
        public Builder(RequestV2Requested defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessScopeId = defaults.accessScopeId;
    	      this.accessScopeType = defaults.accessScopeType;
    	      this.entryId = defaults.entryId;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceType = defaults.resourceType;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder accessScopeId(@Nullable String accessScopeId) {

            this.accessScopeId = accessScopeId;
            return this;
        }
        @CustomType.Setter
        public Builder accessScopeType(@Nullable String accessScopeType) {

            this.accessScopeType = accessScopeType;
            return this;
        }
        @CustomType.Setter
        public Builder entryId(String entryId) {
            if (entryId == null) {
              throw new MissingRequiredPropertyException("RequestV2Requested", "entryId");
            }
            this.entryId = entryId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {

            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {

            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("RequestV2Requested", "type");
            }
            this.type = type;
            return this;
        }
        public RequestV2Requested build() {
            final var _resultValue = new RequestV2Requested();
            _resultValue.accessScopeId = accessScopeId;
            _resultValue.accessScopeType = accessScopeType;
            _resultValue.entryId = entryId;
            _resultValue.resourceId = resourceId;
            _resultValue.resourceType = resourceType;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}

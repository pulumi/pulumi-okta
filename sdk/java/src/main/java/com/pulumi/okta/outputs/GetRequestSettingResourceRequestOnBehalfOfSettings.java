// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetRequestSettingResourceRequestOnBehalfOfSettings {
    private Boolean allowed;
    private @Nullable List<GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor> onlyFors;

    private GetRequestSettingResourceRequestOnBehalfOfSettings() {}
    public Boolean allowed() {
        return this.allowed;
    }
    public List<GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor> onlyFors() {
        return this.onlyFors == null ? List.of() : this.onlyFors;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRequestSettingResourceRequestOnBehalfOfSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allowed;
        private @Nullable List<GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor> onlyFors;
        public Builder() {}
        public Builder(GetRequestSettingResourceRequestOnBehalfOfSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowed = defaults.allowed;
    	      this.onlyFors = defaults.onlyFors;
        }

        @CustomType.Setter
        public Builder allowed(Boolean allowed) {
            if (allowed == null) {
              throw new MissingRequiredPropertyException("GetRequestSettingResourceRequestOnBehalfOfSettings", "allowed");
            }
            this.allowed = allowed;
            return this;
        }
        @CustomType.Setter
        public Builder onlyFors(@Nullable List<GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor> onlyFors) {

            this.onlyFors = onlyFors;
            return this;
        }
        public Builder onlyFors(GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor... onlyFors) {
            return onlyFors(List.of(onlyFors));
        }
        public GetRequestSettingResourceRequestOnBehalfOfSettings build() {
            final var _resultValue = new GetRequestSettingResourceRequestOnBehalfOfSettings();
            _resultValue.allowed = allowed;
            _resultValue.onlyFors = onlyFors;
            return _resultValue;
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAuthenticatorResult {
    /**
     * @return ID of the authenticator.
     * 
     */
    private final @Nullable String id;
    private final @Nullable String key;
    /**
     * @return Name of the authenticator.
     * 
     */
    private final @Nullable String name;
    private final Integer providerAuthPort;
    private final String providerHostname;
    private final String providerInstanceId;
    private final String providerType;
    private final String providerUserNameTemplate;
    /**
     * @return Settings for the authenticator.
     * 
     */
    private final String settings;
    private final String status;
    /**
     * @return Type of the Authenticator.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetAuthenticatorResult(
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("key") @Nullable String key,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("providerAuthPort") Integer providerAuthPort,
        @CustomType.Parameter("providerHostname") String providerHostname,
        @CustomType.Parameter("providerInstanceId") String providerInstanceId,
        @CustomType.Parameter("providerType") String providerType,
        @CustomType.Parameter("providerUserNameTemplate") String providerUserNameTemplate,
        @CustomType.Parameter("settings") String settings,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("type") String type) {
        this.id = id;
        this.key = key;
        this.name = name;
        this.providerAuthPort = providerAuthPort;
        this.providerHostname = providerHostname;
        this.providerInstanceId = providerInstanceId;
        this.providerType = providerType;
        this.providerUserNameTemplate = providerUserNameTemplate;
        this.settings = settings;
        this.status = status;
        this.type = type;
    }

    /**
     * @return ID of the authenticator.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return Name of the authenticator.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Integer providerAuthPort() {
        return this.providerAuthPort;
    }
    public String providerHostname() {
        return this.providerHostname;
    }
    public String providerInstanceId() {
        return this.providerInstanceId;
    }
    public String providerType() {
        return this.providerType;
    }
    public String providerUserNameTemplate() {
        return this.providerUserNameTemplate;
    }
    /**
     * @return Settings for the authenticator.
     * 
     */
    public String settings() {
        return this.settings;
    }
    public String status() {
        return this.status;
    }
    /**
     * @return Type of the Authenticator.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuthenticatorResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String id;
        private @Nullable String key;
        private @Nullable String name;
        private Integer providerAuthPort;
        private String providerHostname;
        private String providerInstanceId;
        private String providerType;
        private String providerUserNameTemplate;
        private String settings;
        private String status;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAuthenticatorResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.key = defaults.key;
    	      this.name = defaults.name;
    	      this.providerAuthPort = defaults.providerAuthPort;
    	      this.providerHostname = defaults.providerHostname;
    	      this.providerInstanceId = defaults.providerInstanceId;
    	      this.providerType = defaults.providerType;
    	      this.providerUserNameTemplate = defaults.providerUserNameTemplate;
    	      this.settings = defaults.settings;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
        }

        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder key(@Nullable String key) {
            this.key = key;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder providerAuthPort(Integer providerAuthPort) {
            this.providerAuthPort = Objects.requireNonNull(providerAuthPort);
            return this;
        }
        public Builder providerHostname(String providerHostname) {
            this.providerHostname = Objects.requireNonNull(providerHostname);
            return this;
        }
        public Builder providerInstanceId(String providerInstanceId) {
            this.providerInstanceId = Objects.requireNonNull(providerInstanceId);
            return this;
        }
        public Builder providerType(String providerType) {
            this.providerType = Objects.requireNonNull(providerType);
            return this;
        }
        public Builder providerUserNameTemplate(String providerUserNameTemplate) {
            this.providerUserNameTemplate = Objects.requireNonNull(providerUserNameTemplate);
            return this;
        }
        public Builder settings(String settings) {
            this.settings = Objects.requireNonNull(settings);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetAuthenticatorResult build() {
            return new GetAuthenticatorResult(id, key, name, providerAuthPort, providerHostname, providerInstanceId, providerType, providerUserNameTemplate, settings, status, type);
        }
    }
}

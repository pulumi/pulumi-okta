// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.inputs.GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScopeArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCampaignPrincipalScopeSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCampaignPrincipalScopeSettingsArgs Empty = new GetCampaignPrincipalScopeSettingsArgs();

    @Import(name="excludedUserIds", required=true)
    private Output<List<String>> excludedUserIds;

    public Output<List<String>> excludedUserIds() {
        return this.excludedUserIds;
    }

    @Import(name="groupIds", required=true)
    private Output<List<String>> groupIds;

    public Output<List<String>> groupIds() {
        return this.groupIds;
    }

    @Import(name="includeOnlyActiveUsers", required=true)
    private Output<Boolean> includeOnlyActiveUsers;

    public Output<Boolean> includeOnlyActiveUsers() {
        return this.includeOnlyActiveUsers;
    }

    @Import(name="onlyIncludeUsersWithSodConflicts", required=true)
    private Output<Boolean> onlyIncludeUsersWithSodConflicts;

    public Output<Boolean> onlyIncludeUsersWithSodConflicts() {
        return this.onlyIncludeUsersWithSodConflicts;
    }

    @Import(name="predefinedInactiveUsersScopes")
    private @Nullable Output<List<GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScopeArgs>> predefinedInactiveUsersScopes;

    public Optional<Output<List<GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScopeArgs>>> predefinedInactiveUsersScopes() {
        return Optional.ofNullable(this.predefinedInactiveUsersScopes);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="userIds", required=true)
    private Output<List<String>> userIds;

    public Output<List<String>> userIds() {
        return this.userIds;
    }

    @Import(name="userScopeExpression", required=true)
    private Output<String> userScopeExpression;

    public Output<String> userScopeExpression() {
        return this.userScopeExpression;
    }

    private GetCampaignPrincipalScopeSettingsArgs() {}

    private GetCampaignPrincipalScopeSettingsArgs(GetCampaignPrincipalScopeSettingsArgs $) {
        this.excludedUserIds = $.excludedUserIds;
        this.groupIds = $.groupIds;
        this.includeOnlyActiveUsers = $.includeOnlyActiveUsers;
        this.onlyIncludeUsersWithSodConflicts = $.onlyIncludeUsersWithSodConflicts;
        this.predefinedInactiveUsersScopes = $.predefinedInactiveUsersScopes;
        this.type = $.type;
        this.userIds = $.userIds;
        this.userScopeExpression = $.userScopeExpression;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCampaignPrincipalScopeSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCampaignPrincipalScopeSettingsArgs $;

        public Builder() {
            $ = new GetCampaignPrincipalScopeSettingsArgs();
        }

        public Builder(GetCampaignPrincipalScopeSettingsArgs defaults) {
            $ = new GetCampaignPrincipalScopeSettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder excludedUserIds(Output<List<String>> excludedUserIds) {
            $.excludedUserIds = excludedUserIds;
            return this;
        }

        public Builder excludedUserIds(List<String> excludedUserIds) {
            return excludedUserIds(Output.of(excludedUserIds));
        }

        public Builder excludedUserIds(String... excludedUserIds) {
            return excludedUserIds(List.of(excludedUserIds));
        }

        public Builder groupIds(Output<List<String>> groupIds) {
            $.groupIds = groupIds;
            return this;
        }

        public Builder groupIds(List<String> groupIds) {
            return groupIds(Output.of(groupIds));
        }

        public Builder groupIds(String... groupIds) {
            return groupIds(List.of(groupIds));
        }

        public Builder includeOnlyActiveUsers(Output<Boolean> includeOnlyActiveUsers) {
            $.includeOnlyActiveUsers = includeOnlyActiveUsers;
            return this;
        }

        public Builder includeOnlyActiveUsers(Boolean includeOnlyActiveUsers) {
            return includeOnlyActiveUsers(Output.of(includeOnlyActiveUsers));
        }

        public Builder onlyIncludeUsersWithSodConflicts(Output<Boolean> onlyIncludeUsersWithSodConflicts) {
            $.onlyIncludeUsersWithSodConflicts = onlyIncludeUsersWithSodConflicts;
            return this;
        }

        public Builder onlyIncludeUsersWithSodConflicts(Boolean onlyIncludeUsersWithSodConflicts) {
            return onlyIncludeUsersWithSodConflicts(Output.of(onlyIncludeUsersWithSodConflicts));
        }

        public Builder predefinedInactiveUsersScopes(@Nullable Output<List<GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScopeArgs>> predefinedInactiveUsersScopes) {
            $.predefinedInactiveUsersScopes = predefinedInactiveUsersScopes;
            return this;
        }

        public Builder predefinedInactiveUsersScopes(List<GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScopeArgs> predefinedInactiveUsersScopes) {
            return predefinedInactiveUsersScopes(Output.of(predefinedInactiveUsersScopes));
        }

        public Builder predefinedInactiveUsersScopes(GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScopeArgs... predefinedInactiveUsersScopes) {
            return predefinedInactiveUsersScopes(List.of(predefinedInactiveUsersScopes));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder userIds(Output<List<String>> userIds) {
            $.userIds = userIds;
            return this;
        }

        public Builder userIds(List<String> userIds) {
            return userIds(Output.of(userIds));
        }

        public Builder userIds(String... userIds) {
            return userIds(List.of(userIds));
        }

        public Builder userScopeExpression(Output<String> userScopeExpression) {
            $.userScopeExpression = userScopeExpression;
            return this;
        }

        public Builder userScopeExpression(String userScopeExpression) {
            return userScopeExpression(Output.of(userScopeExpression));
        }

        public GetCampaignPrincipalScopeSettingsArgs build() {
            if ($.excludedUserIds == null) {
                throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettingsArgs", "excludedUserIds");
            }
            if ($.groupIds == null) {
                throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettingsArgs", "groupIds");
            }
            if ($.includeOnlyActiveUsers == null) {
                throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettingsArgs", "includeOnlyActiveUsers");
            }
            if ($.onlyIncludeUsersWithSodConflicts == null) {
                throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettingsArgs", "onlyIncludeUsersWithSodConflicts");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettingsArgs", "type");
            }
            if ($.userIds == null) {
                throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettingsArgs", "userIds");
            }
            if ($.userScopeExpression == null) {
                throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettingsArgs", "userScopeExpression");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.app;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.app.OAuthArgs;
import com.pulumi.okta.app.inputs.OAuthState;
import com.pulumi.okta.app.outputs.OAuthGroupsClaim;
import com.pulumi.okta.app.outputs.OAuthJwk;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource allows you to create and configure an OIDC Application.
 * &gt; During an apply if there is change in status the app will first be
 * activated or deactivated in accordance with the status change. Then, all
 * other arguments that changed will be applied.
 * 
 * &gt; `okta.app.OAuthRedirectUri` has been marked deprecated and will be removed
 * in the v5 release of the provider. Operators should manage the redirect URIs for
 * an oauth app directly on that resource.
 * 
 * ### Private Keys
 * 
 * The private key format that an Okta OAuth app expects is PKCS#8 (unencrypted).
 * The operator either uploads their own private key or Okta can generate one in
 * the Admin UI Panel under the apps Client Credentials. PKCS#8 format can be
 * identified by a header that starts with `-----BEGIN PRIVATE KEY-----`. If the
 * operator has a PKCS#1 (unencrypted) format private key (the header starts with
 * `-----BEGIN RSA PRIVATE KEY-----`) they can generate a PKCS#8 format
 * key with `openssl`:
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:app/oAuth:OAuth example &lt;app_id&gt;
 * ```
 * 
 */
@ResourceType(type="okta:app/oAuth:OAuth")
public class OAuth extends com.pulumi.resources.CustomResource {
    /**
     * Custom error page URL
     * 
     */
    @Export(name="accessibilityErrorRedirectUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accessibilityErrorRedirectUrl;

    /**
     * @return Custom error page URL
     * 
     */
    public Output<Optional<String>> accessibilityErrorRedirectUrl() {
        return Codegen.optional(this.accessibilityErrorRedirectUrl);
    }
    /**
     * Custom login page URL
     * 
     */
    @Export(name="accessibilityLoginRedirectUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accessibilityLoginRedirectUrl;

    /**
     * @return Custom login page URL
     * 
     */
    public Output<Optional<String>> accessibilityLoginRedirectUrl() {
        return Codegen.optional(this.accessibilityLoginRedirectUrl);
    }
    /**
     * Enable self service. Default is `false`
     * 
     */
    @Export(name="accessibilitySelfService", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accessibilitySelfService;

    /**
     * @return Enable self service. Default is `false`
     * 
     */
    public Output<Optional<Boolean>> accessibilitySelfService() {
        return Codegen.optional(this.accessibilitySelfService);
    }
    /**
     * Application notes for admins.
     * 
     */
    @Export(name="adminNote", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> adminNote;

    /**
     * @return Application notes for admins.
     * 
     */
    public Output<Optional<String>> adminNote() {
        return Codegen.optional(this.adminNote);
    }
    /**
     * Displays specific appLinks for the app. The value for each application link should be boolean.
     * 
     */
    @Export(name="appLinksJson", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> appLinksJson;

    /**
     * @return Displays specific appLinks for the app. The value for each application link should be boolean.
     * 
     */
    public Output<Optional<String>> appLinksJson() {
        return Codegen.optional(this.appLinksJson);
    }
    /**
     * Application settings in JSON format
     * 
     */
    @Export(name="appSettingsJson", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> appSettingsJson;

    /**
     * @return Application settings in JSON format
     * 
     */
    public Output<Optional<String>> appSettingsJson() {
        return Codegen.optional(this.appSettingsJson);
    }
    /**
     * The ID of the associated app*signon*policy. If this property is removed from the application the default sign-on-policy will be associated with this application.
     * 
     */
    @Export(name="authenticationPolicy", refs={String.class}, tree="[0]")
    private Output<String> authenticationPolicy;

    /**
     * @return The ID of the associated app*signon*policy. If this property is removed from the application the default sign-on-policy will be associated with this application.
     * 
     */
    public Output<String> authenticationPolicy() {
        return this.authenticationPolicy;
    }
    /**
     * Requested key rotation mode. If
     * 			auto*key*rotation isn&#39;t specified, the client automatically opts in for Okta&#39;s
     * 			key rotation. You can update this property via the API or via the administrator
     * 			UI.
     * 			See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object&#34;
     * 
     */
    @Export(name="autoKeyRotation", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoKeyRotation;

    /**
     * @return Requested key rotation mode. If
     * 			auto*key*rotation isn&#39;t specified, the client automatically opts in for Okta&#39;s
     * 			key rotation. You can update this property via the API or via the administrator
     * 			UI.
     * 			See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object&#34;
     * 
     */
    public Output<Optional<Boolean>> autoKeyRotation() {
        return Codegen.optional(this.autoKeyRotation);
    }
    /**
     * Display auto submit toolbar
     * 
     */
    @Export(name="autoSubmitToolbar", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoSubmitToolbar;

    /**
     * @return Display auto submit toolbar
     * 
     */
    public Output<Optional<Boolean>> autoSubmitToolbar() {
        return Codegen.optional(this.autoSubmitToolbar);
    }
    /**
     * The user provided OAuth client secret key value, this can be set when token*endpoint*auth*method is client*secret*basic. This does nothing when `omit*secret is set to true.
     * 
     */
    @Export(name="clientBasicSecret", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientBasicSecret;

    /**
     * @return The user provided OAuth client secret key value, this can be set when token*endpoint*auth*method is client*secret*basic. This does nothing when `omit*secret is set to true.
     * 
     */
    public Output<Optional<String>> clientBasicSecret() {
        return Codegen.optional(this.clientBasicSecret);
    }
    /**
     * OAuth client ID. If set during creation, app is created with this id.
     * 
     */
    @Export(name="clientId", refs={String.class}, tree="[0]")
    private Output<String> clientId;

    /**
     * @return OAuth client ID. If set during creation, app is created with this id.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }
    /**
     * OAuth client secret value, this is output only. This will be in plain text in your statefile unless you set omit_secret above.
     * 
     */
    @Export(name="clientSecret", refs={String.class}, tree="[0]")
    private Output<String> clientSecret;

    /**
     * @return OAuth client secret value, this is output only. This will be in plain text in your statefile unless you set omit_secret above.
     * 
     */
    public Output<String> clientSecret() {
        return this.clientSecret;
    }
    /**
     * URI to a web page providing information about the client.
     * 
     */
    @Export(name="clientUri", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientUri;

    /**
     * @return URI to a web page providing information about the client.
     * 
     */
    public Output<Optional<String>> clientUri() {
        return Codegen.optional(this.clientUri);
    }
    /**
     * *Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED. Default value is TRUSTED
     * 
     */
    @Export(name="consentMethod", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> consentMethod;

    /**
     * @return *Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED. Default value is TRUSTED
     * 
     */
    public Output<Optional<String>> consentMethod() {
        return Codegen.optional(this.consentMethod);
    }
    /**
     * Application notes for end users.
     * 
     */
    @Export(name="enduserNote", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> enduserNote;

    /**
     * @return Application notes for end users.
     * 
     */
    public Output<Optional<String>> enduserNote() {
        return Codegen.optional(this.enduserNote);
    }
    /**
     * List of OAuth 2.0 grant types. Conditional validation params found here https://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per app type.
     * 
     */
    @Export(name="grantTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> grantTypes;

    /**
     * @return List of OAuth 2.0 grant types. Conditional validation params found here https://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per app type.
     * 
     */
    public Output<List<String>> grantTypes() {
        return this.grantTypes;
    }
    /**
     * Groups claim for an OpenID Connect client application (argument is ignored when API auth is done with OAuth 2.0 credentials)
     * 
     */
    @Export(name="groupsClaim", refs={OAuthGroupsClaim.class}, tree="[0]")
    private Output</* @Nullable */ OAuthGroupsClaim> groupsClaim;

    /**
     * @return Groups claim for an OpenID Connect client application (argument is ignored when API auth is done with OAuth 2.0 credentials)
     * 
     */
    public Output<Optional<OAuthGroupsClaim>> groupsClaim() {
        return Codegen.optional(this.groupsClaim);
    }
    /**
     * Do not display application icon on mobile app
     * 
     */
    @Export(name="hideIos", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> hideIos;

    /**
     * @return Do not display application icon on mobile app
     * 
     */
    public Output<Optional<Boolean>> hideIos() {
        return Codegen.optional(this.hideIos);
    }
    /**
     * Do not display application icon to users
     * 
     */
    @Export(name="hideWeb", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> hideWeb;

    /**
     * @return Do not display application icon to users
     * 
     */
    public Output<Optional<Boolean>> hideWeb() {
        return Codegen.optional(this.hideWeb);
    }
    /**
     * *Early Access Property*. Enable Federation Broker Mode.
     * 
     */
    @Export(name="implicitAssignment", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> implicitAssignment;

    /**
     * @return *Early Access Property*. Enable Federation Broker Mode.
     * 
     */
    public Output<Optional<Boolean>> implicitAssignment() {
        return Codegen.optional(this.implicitAssignment);
    }
    /**
     * *Early Access Property*. Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.
     * 
     */
    @Export(name="issuerMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> issuerMode;

    /**
     * @return *Early Access Property*. Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.
     * 
     */
    public Output<Optional<String>> issuerMode() {
        return Codegen.optional(this.issuerMode);
    }
    @Export(name="jwks", refs={List.class,OAuthJwk.class}, tree="[0,1]")
    private Output</* @Nullable */ List<OAuthJwk>> jwks;

    public Output<Optional<List<OAuthJwk>>> jwks() {
        return Codegen.optional(this.jwks);
    }
    /**
     * URL reference to JWKS
     * 
     */
    @Export(name="jwksUri", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> jwksUri;

    /**
     * @return URL reference to JWKS
     * 
     */
    public Output<Optional<String>> jwksUri() {
        return Codegen.optional(this.jwksUri);
    }
    /**
     * The Application&#39;s display name.
     * 
     */
    @Export(name="label", refs={String.class}, tree="[0]")
    private Output<String> label;

    /**
     * @return The Application&#39;s display name.
     * 
     */
    public Output<String> label() {
        return this.label;
    }
    /**
     * The type of Idp-Initiated login that the client supports, if any
     * 
     */
    @Export(name="loginMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> loginMode;

    /**
     * @return The type of Idp-Initiated login that the client supports, if any
     * 
     */
    public Output<Optional<String>> loginMode() {
        return Codegen.optional(this.loginMode);
    }
    /**
     * List of scopes to use for the request
     * 
     */
    @Export(name="loginScopes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> loginScopes;

    /**
     * @return List of scopes to use for the request
     * 
     */
    public Output<Optional<List<String>>> loginScopes() {
        return Codegen.optional(this.loginScopes);
    }
    /**
     * URI that initiates login.
     * 
     */
    @Export(name="loginUri", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> loginUri;

    /**
     * @return URI that initiates login.
     * 
     */
    public Output<Optional<String>> loginUri() {
        return Codegen.optional(this.loginUri);
    }
    /**
     * Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     * 
     */
    @Export(name="logo", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> logo;

    /**
     * @return Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     * 
     */
    public Output<Optional<String>> logo() {
        return Codegen.optional(this.logo);
    }
    /**
     * URI that references a logo for the client.
     * 
     */
    @Export(name="logoUri", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> logoUri;

    /**
     * @return URI that references a logo for the client.
     * 
     */
    public Output<Optional<String>> logoUri() {
        return Codegen.optional(this.logoUri);
    }
    /**
     * URL of the application&#39;s logo
     * 
     */
    @Export(name="logoUrl", refs={String.class}, tree="[0]")
    private Output<String> logoUrl;

    /**
     * @return URL of the application&#39;s logo
     * 
     */
    public Output<String> logoUrl() {
        return this.logoUrl;
    }
    /**
     * Name of the app.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the app.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * This tells the provider not manage the client*secret value in state. When this is false (the default), it will cause the auto-generated client*secret to be persisted in the client_secret attribute in state. This also means that every time an update to this app is run, this value is also set on the API. If this changes from false =&gt; true, the `client_secret` is dropped from state and the secret at the time of the apply is what remains. If this is ever changes from true =&gt; false your app will be recreated, due to the need to regenerate a secret we can store in state.
     * 
     */
    @Export(name="omitSecret", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> omitSecret;

    /**
     * @return This tells the provider not manage the client*secret value in state. When this is false (the default), it will cause the auto-generated client*secret to be persisted in the client_secret attribute in state. This also means that every time an update to this app is run, this value is also set on the API. If this changes from false =&gt; true, the `client_secret` is dropped from state and the secret at the time of the apply is what remains. If this is ever changes from true =&gt; false your app will be recreated, due to the need to regenerate a secret we can store in state.
     * 
     */
    public Output<Optional<Boolean>> omitSecret() {
        return Codegen.optional(this.omitSecret);
    }
    /**
     * Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object
     * 
     */
    @Export(name="pkceRequired", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> pkceRequired;

    /**
     * @return Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object
     * 
     */
    public Output<Boolean> pkceRequired() {
        return this.pkceRequired;
    }
    /**
     * URI to web page providing client policy document.
     * 
     */
    @Export(name="policyUri", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> policyUri;

    /**
     * @return URI to web page providing client policy document.
     * 
     */
    public Output<Optional<String>> policyUri() {
        return Codegen.optional(this.policyUri);
    }
    /**
     * List of URIs for redirection after logout. Note: see okta*app*oauth*post*logout*redirect*uri for appending to this list in a decentralized way.
     * 
     */
    @Export(name="postLogoutRedirectUris", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> postLogoutRedirectUris;

    /**
     * @return List of URIs for redirection after logout. Note: see okta*app*oauth*post*logout*redirect*uri for appending to this list in a decentralized way.
     * 
     */
    public Output<Optional<List<String>>> postLogoutRedirectUris() {
        return Codegen.optional(this.postLogoutRedirectUris);
    }
    /**
     * Custom JSON that represents an OAuth application&#39;s profile
     * 
     */
    @Export(name="profile", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> profile;

    /**
     * @return Custom JSON that represents an OAuth application&#39;s profile
     * 
     */
    public Output<Optional<String>> profile() {
        return Codegen.optional(this.profile);
    }
    /**
     * List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see okta*app*oauth*redirect*uri for appending to this list in a decentralized way.
     * 
     */
    @Export(name="redirectUris", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> redirectUris;

    /**
     * @return List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see okta*app*oauth*redirect*uri for appending to this list in a decentralized way.
     * 
     */
    public Output<Optional<List<String>>> redirectUris() {
        return Codegen.optional(this.redirectUris);
    }
    /**
     * *Early Access Property* Grace period for token rotation, required with grant types refresh_token
     * 
     */
    @Export(name="refreshTokenLeeway", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> refreshTokenLeeway;

    /**
     * @return *Early Access Property* Grace period for token rotation, required with grant types refresh_token
     * 
     */
    public Output<Optional<Integer>> refreshTokenLeeway() {
        return Codegen.optional(this.refreshTokenLeeway);
    }
    /**
     * *Early Access Property* Refresh token rotation behavior, required with grant types refresh_token
     * 
     */
    @Export(name="refreshTokenRotation", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> refreshTokenRotation;

    /**
     * @return *Early Access Property* Refresh token rotation behavior, required with grant types refresh_token
     * 
     */
    public Output<Optional<String>> refreshTokenRotation() {
        return Codegen.optional(this.refreshTokenRotation);
    }
    /**
     * List of OAuth 2.0 response type strings. Valid values are any combination of: `code`, `token`, and `id_token`.
     * 
     */
    @Export(name="responseTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> responseTypes;

    /**
     * @return List of OAuth 2.0 response type strings. Valid values are any combination of: `code`, `token`, and `id_token`.
     * 
     */
    public Output<List<String>> responseTypes() {
        return this.responseTypes;
    }
    /**
     * Sign on mode of application.
     * 
     */
    @Export(name="signOnMode", refs={String.class}, tree="[0]")
    private Output<String> signOnMode;

    /**
     * @return Sign on mode of application.
     * 
     */
    public Output<String> signOnMode() {
        return this.signOnMode;
    }
    /**
     * Status of application. By default, it is `ACTIVE`
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> status;

    /**
     * @return Status of application. By default, it is `ACTIVE`
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * Requested authentication method for the token endpoint, valid values include:  &#39;client*secret*basic&#39;, &#39;client*secret*post&#39;, &#39;client*secret*jwt&#39;, &#39;private*key*jwt&#39;, &#39;none&#39;, etc.
     * 
     */
    @Export(name="tokenEndpointAuthMethod", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tokenEndpointAuthMethod;

    /**
     * @return Requested authentication method for the token endpoint, valid values include:  &#39;client*secret*basic&#39;, &#39;client*secret*post&#39;, &#39;client*secret*jwt&#39;, &#39;private*key*jwt&#39;, &#39;none&#39;, etc.
     * 
     */
    public Output<Optional<String>> tokenEndpointAuthMethod() {
        return Codegen.optional(this.tokenEndpointAuthMethod);
    }
    /**
     * URI to web page providing client tos (terms of service).
     * 
     */
    @Export(name="tosUri", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tosUri;

    /**
     * @return URI to web page providing client tos (terms of service).
     * 
     */
    public Output<Optional<String>> tosUri() {
        return Codegen.optional(this.tosUri);
    }
    /**
     * The type of client application.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of client application.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Username template. Default: `${source.login}`
     * 
     */
    @Export(name="userNameTemplate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userNameTemplate;

    /**
     * @return Username template. Default: `${source.login}`
     * 
     */
    public Output<Optional<String>> userNameTemplate() {
        return Codegen.optional(this.userNameTemplate);
    }
    /**
     * Push username on update. Valid values: `PUSH` and `DONT_PUSH`
     * 
     */
    @Export(name="userNameTemplatePushStatus", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userNameTemplatePushStatus;

    /**
     * @return Push username on update. Valid values: `PUSH` and `DONT_PUSH`
     * 
     */
    public Output<Optional<String>> userNameTemplatePushStatus() {
        return Codegen.optional(this.userNameTemplatePushStatus);
    }
    /**
     * Username template suffix
     * 
     */
    @Export(name="userNameTemplateSuffix", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userNameTemplateSuffix;

    /**
     * @return Username template suffix
     * 
     */
    public Output<Optional<String>> userNameTemplateSuffix() {
        return Codegen.optional(this.userNameTemplateSuffix);
    }
    /**
     * Username template type. Default: `BUILT_IN`
     * 
     */
    @Export(name="userNameTemplateType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userNameTemplateType;

    /**
     * @return Username template type. Default: `BUILT_IN`
     * 
     */
    public Output<Optional<String>> userNameTemplateType() {
        return Codegen.optional(this.userNameTemplateType);
    }
    /**
     * *Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris
     * 
     */
    @Export(name="wildcardRedirect", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> wildcardRedirect;

    /**
     * @return *Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris
     * 
     */
    public Output<Optional<String>> wildcardRedirect() {
        return Codegen.optional(this.wildcardRedirect);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OAuth(java.lang.String name) {
        this(name, OAuthArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OAuth(java.lang.String name, OAuthArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OAuth(java.lang.String name, OAuthArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:app/oAuth:OAuth", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private OAuth(java.lang.String name, Output<java.lang.String> id, @Nullable OAuthState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:app/oAuth:OAuth", name, state, makeResourceOptions(options, id), false);
    }

    private static OAuthArgs makeArgs(OAuthArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? OAuthArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "clientBasicSecret",
                "clientSecret"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OAuth get(java.lang.String name, Output<java.lang.String> id, @Nullable OAuthState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new OAuth(name, id, state, options);
    }
}

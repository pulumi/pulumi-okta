// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.app.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SamlAttributeStatement {
    /**
     * @return Type of group attribute filter. Valid values are: `STARTS_WITH`, `EQUALS`, `CONTAINS`, or `REGEX`
     * 
     */
    private @Nullable String filterType;
    /**
     * @return Filter value to use
     * 
     */
    private @Nullable String filterValue;
    /**
     * @return The reference name of the attribute statement
     * 
     */
    private String name;
    /**
     * @return The attribute namespace. It can be set to `urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified`, `urn:oasis:names:tc:SAML:2.0:attrname-format:uri`, or `urn:oasis:names:tc:SAML:2.0:attrname-format:basic`
     * 
     */
    private @Nullable String namespace;
    /**
     * @return The type of attribute statements object
     * 
     */
    private @Nullable String type;
    private @Nullable List<String> values;

    private SamlAttributeStatement() {}
    /**
     * @return Type of group attribute filter. Valid values are: `STARTS_WITH`, `EQUALS`, `CONTAINS`, or `REGEX`
     * 
     */
    public Optional<String> filterType() {
        return Optional.ofNullable(this.filterType);
    }
    /**
     * @return Filter value to use
     * 
     */
    public Optional<String> filterValue() {
        return Optional.ofNullable(this.filterValue);
    }
    /**
     * @return The reference name of the attribute statement
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The attribute namespace. It can be set to `urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified`, `urn:oasis:names:tc:SAML:2.0:attrname-format:uri`, or `urn:oasis:names:tc:SAML:2.0:attrname-format:basic`
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return The type of attribute statements object
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    public List<String> values() {
        return this.values == null ? List.of() : this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SamlAttributeStatement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String filterType;
        private @Nullable String filterValue;
        private String name;
        private @Nullable String namespace;
        private @Nullable String type;
        private @Nullable List<String> values;
        public Builder() {}
        public Builder(SamlAttributeStatement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filterType = defaults.filterType;
    	      this.filterValue = defaults.filterValue;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.type = defaults.type;
    	      this.values = defaults.values;
        }

        @CustomType.Setter
        public Builder filterType(@Nullable String filterType) {

            this.filterType = filterType;
            return this;
        }
        @CustomType.Setter
        public Builder filterValue(@Nullable String filterValue) {

            this.filterValue = filterValue;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("SamlAttributeStatement", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder values(@Nullable List<String> values) {

            this.values = values;
            return this;
        }
        public Builder values(String... values) {
            return values(List.of(values));
        }
        public SamlAttributeStatement build() {
            final var _resultValue = new SamlAttributeStatement();
            _resultValue.filterType = filterType;
            _resultValue.filterValue = filterValue;
            _resultValue.name = name;
            _resultValue.namespace = namespace;
            _resultValue.type = type;
            _resultValue.values = values;
            return _resultValue;
        }
    }
}

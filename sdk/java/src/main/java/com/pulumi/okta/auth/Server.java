// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.auth;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.auth.ServerArgs;
import com.pulumi.okta.auth.inputs.ServerState;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="okta:auth/server:Server")
public class Server extends com.pulumi.resources.CustomResource {
    /**
     * Currently Okta only supports a single value here
     * 
     */
    @Export(name="audiences", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> audiences;

    /**
     * @return Currently Okta only supports a single value here
     * 
     */
    public Output<List<String>> audiences() {
        return this.audiences;
    }
    /**
     * The timestamp when the authorization server started to use the `kid` for signing tokens.
     * 
     */
    @Export(name="credentialsLastRotated", refs={String.class}, tree="[0]")
    private Output<String> credentialsLastRotated;

    /**
     * @return The timestamp when the authorization server started to use the `kid` for signing tokens.
     * 
     */
    public Output<String> credentialsLastRotated() {
        return this.credentialsLastRotated;
    }
    /**
     * The timestamp when the authorization server changes the key for signing tokens. Only returned when `credentials_rotation_mode` is `AUTO`.
     * 
     */
    @Export(name="credentialsNextRotation", refs={String.class}, tree="[0]")
    private Output<String> credentialsNextRotation;

    /**
     * @return The timestamp when the authorization server changes the key for signing tokens. Only returned when `credentials_rotation_mode` is `AUTO`.
     * 
     */
    public Output<String> credentialsNextRotation() {
        return this.credentialsNextRotation;
    }
    /**
     * Credential rotation mode, in many cases you cannot set this to MANUAL, the API will ignore the value and you will get a perpetual diff. This should rarely be used.
     * 
     */
    @Export(name="credentialsRotationMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> credentialsRotationMode;

    /**
     * @return Credential rotation mode, in many cases you cannot set this to MANUAL, the API will ignore the value and you will get a perpetual diff. This should rarely be used.
     * 
     */
    public Output<Optional<String>> credentialsRotationMode() {
        return Codegen.optional(this.credentialsRotationMode);
    }
    /**
     * The description of the authorization server.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the authorization server.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * allows you to use a custom issuer URL
     * 
     */
    @Export(name="issuer", refs={String.class}, tree="[0]")
    private Output<String> issuer;

    /**
     * @return allows you to use a custom issuer URL
     * 
     */
    public Output<String> issuer() {
        return this.issuer;
    }
    /**
     * *Early Access Property*. Indicates which value is specified in the issuer of the tokens that a Custom Authorization Server returns: the original Okta org domain URL or a custom domain URL
     * 
     */
    @Export(name="issuerMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> issuerMode;

    /**
     * @return *Early Access Property*. Indicates which value is specified in the issuer of the tokens that a Custom Authorization Server returns: the original Okta org domain URL or a custom domain URL
     * 
     */
    public Output<Optional<String>> issuerMode() {
        return Codegen.optional(this.issuerMode);
    }
    /**
     * The ID of the JSON Web Key used for signing tokens issued by the authorization server.
     * 
     */
    @Export(name="kid", refs={String.class}, tree="[0]")
    private Output<String> kid;

    /**
     * @return The ID of the JSON Web Key used for signing tokens issued by the authorization server.
     * 
     */
    public Output<String> kid() {
        return this.kid;
    }
    /**
     * The name of the authorization server.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the authorization server.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> status;

    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Server(String name) {
        this(name, ServerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Server(String name, ServerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Server(String name, ServerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:auth/server:Server", name, args == null ? ServerArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Server(String name, Output<String> id, @Nullable ServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:auth/server:Server", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Server get(String name, Output<String> id, @Nullable ServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Server(name, id, state, options);
    }
}

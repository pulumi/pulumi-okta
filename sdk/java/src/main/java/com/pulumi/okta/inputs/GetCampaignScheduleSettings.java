// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.inputs.GetCampaignScheduleSettingsRecurrence;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCampaignScheduleSettings extends com.pulumi.resources.InvokeArgs {

    public static final GetCampaignScheduleSettings Empty = new GetCampaignScheduleSettings();

    @Import(name="durationInDays", required=true)
    private Integer durationInDays;

    public Integer durationInDays() {
        return this.durationInDays;
    }

    @Import(name="endDate", required=true)
    private String endDate;

    public String endDate() {
        return this.endDate;
    }

    @Import(name="recurrences")
    private @Nullable List<GetCampaignScheduleSettingsRecurrence> recurrences;

    public Optional<List<GetCampaignScheduleSettingsRecurrence>> recurrences() {
        return Optional.ofNullable(this.recurrences);
    }

    @Import(name="startDate", required=true)
    private String startDate;

    public String startDate() {
        return this.startDate;
    }

    @Import(name="timeZone", required=true)
    private String timeZone;

    public String timeZone() {
        return this.timeZone;
    }

    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private GetCampaignScheduleSettings() {}

    private GetCampaignScheduleSettings(GetCampaignScheduleSettings $) {
        this.durationInDays = $.durationInDays;
        this.endDate = $.endDate;
        this.recurrences = $.recurrences;
        this.startDate = $.startDate;
        this.timeZone = $.timeZone;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCampaignScheduleSettings defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCampaignScheduleSettings $;

        public Builder() {
            $ = new GetCampaignScheduleSettings();
        }

        public Builder(GetCampaignScheduleSettings defaults) {
            $ = new GetCampaignScheduleSettings(Objects.requireNonNull(defaults));
        }

        public Builder durationInDays(Integer durationInDays) {
            $.durationInDays = durationInDays;
            return this;
        }

        public Builder endDate(String endDate) {
            $.endDate = endDate;
            return this;
        }

        public Builder recurrences(@Nullable List<GetCampaignScheduleSettingsRecurrence> recurrences) {
            $.recurrences = recurrences;
            return this;
        }

        public Builder recurrences(GetCampaignScheduleSettingsRecurrence... recurrences) {
            return recurrences(List.of(recurrences));
        }

        public Builder startDate(String startDate) {
            $.startDate = startDate;
            return this;
        }

        public Builder timeZone(String timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetCampaignScheduleSettings build() {
            if ($.durationInDays == null) {
                throw new MissingRequiredPropertyException("GetCampaignScheduleSettings", "durationInDays");
            }
            if ($.endDate == null) {
                throw new MissingRequiredPropertyException("GetCampaignScheduleSettings", "endDate");
            }
            if ($.startDate == null) {
                throw new MissingRequiredPropertyException("GetCampaignScheduleSettings", "startDate");
            }
            if ($.timeZone == null) {
                throw new MissingRequiredPropertyException("GetCampaignScheduleSettings", "timeZone");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetCampaignScheduleSettings", "type");
            }
            return $;
        }
    }

}

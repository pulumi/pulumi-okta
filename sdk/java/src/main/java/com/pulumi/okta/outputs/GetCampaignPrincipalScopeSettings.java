// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScope;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetCampaignPrincipalScopeSettings {
    private List<String> excludedUserIds;
    private List<String> groupIds;
    private Boolean includeOnlyActiveUsers;
    private Boolean onlyIncludeUsersWithSodConflicts;
    private @Nullable List<GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScope> predefinedInactiveUsersScopes;
    private String type;
    private List<String> userIds;
    private String userScopeExpression;

    private GetCampaignPrincipalScopeSettings() {}
    public List<String> excludedUserIds() {
        return this.excludedUserIds;
    }
    public List<String> groupIds() {
        return this.groupIds;
    }
    public Boolean includeOnlyActiveUsers() {
        return this.includeOnlyActiveUsers;
    }
    public Boolean onlyIncludeUsersWithSodConflicts() {
        return this.onlyIncludeUsersWithSodConflicts;
    }
    public List<GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScope> predefinedInactiveUsersScopes() {
        return this.predefinedInactiveUsersScopes == null ? List.of() : this.predefinedInactiveUsersScopes;
    }
    public String type() {
        return this.type;
    }
    public List<String> userIds() {
        return this.userIds;
    }
    public String userScopeExpression() {
        return this.userScopeExpression;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCampaignPrincipalScopeSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> excludedUserIds;
        private List<String> groupIds;
        private Boolean includeOnlyActiveUsers;
        private Boolean onlyIncludeUsersWithSodConflicts;
        private @Nullable List<GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScope> predefinedInactiveUsersScopes;
        private String type;
        private List<String> userIds;
        private String userScopeExpression;
        public Builder() {}
        public Builder(GetCampaignPrincipalScopeSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludedUserIds = defaults.excludedUserIds;
    	      this.groupIds = defaults.groupIds;
    	      this.includeOnlyActiveUsers = defaults.includeOnlyActiveUsers;
    	      this.onlyIncludeUsersWithSodConflicts = defaults.onlyIncludeUsersWithSodConflicts;
    	      this.predefinedInactiveUsersScopes = defaults.predefinedInactiveUsersScopes;
    	      this.type = defaults.type;
    	      this.userIds = defaults.userIds;
    	      this.userScopeExpression = defaults.userScopeExpression;
        }

        @CustomType.Setter
        public Builder excludedUserIds(List<String> excludedUserIds) {
            if (excludedUserIds == null) {
              throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettings", "excludedUserIds");
            }
            this.excludedUserIds = excludedUserIds;
            return this;
        }
        public Builder excludedUserIds(String... excludedUserIds) {
            return excludedUserIds(List.of(excludedUserIds));
        }
        @CustomType.Setter
        public Builder groupIds(List<String> groupIds) {
            if (groupIds == null) {
              throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettings", "groupIds");
            }
            this.groupIds = groupIds;
            return this;
        }
        public Builder groupIds(String... groupIds) {
            return groupIds(List.of(groupIds));
        }
        @CustomType.Setter
        public Builder includeOnlyActiveUsers(Boolean includeOnlyActiveUsers) {
            if (includeOnlyActiveUsers == null) {
              throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettings", "includeOnlyActiveUsers");
            }
            this.includeOnlyActiveUsers = includeOnlyActiveUsers;
            return this;
        }
        @CustomType.Setter
        public Builder onlyIncludeUsersWithSodConflicts(Boolean onlyIncludeUsersWithSodConflicts) {
            if (onlyIncludeUsersWithSodConflicts == null) {
              throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettings", "onlyIncludeUsersWithSodConflicts");
            }
            this.onlyIncludeUsersWithSodConflicts = onlyIncludeUsersWithSodConflicts;
            return this;
        }
        @CustomType.Setter
        public Builder predefinedInactiveUsersScopes(@Nullable List<GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScope> predefinedInactiveUsersScopes) {

            this.predefinedInactiveUsersScopes = predefinedInactiveUsersScopes;
            return this;
        }
        public Builder predefinedInactiveUsersScopes(GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScope... predefinedInactiveUsersScopes) {
            return predefinedInactiveUsersScopes(List.of(predefinedInactiveUsersScopes));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettings", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder userIds(List<String> userIds) {
            if (userIds == null) {
              throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettings", "userIds");
            }
            this.userIds = userIds;
            return this;
        }
        public Builder userIds(String... userIds) {
            return userIds(List.of(userIds));
        }
        @CustomType.Setter
        public Builder userScopeExpression(String userScopeExpression) {
            if (userScopeExpression == null) {
              throw new MissingRequiredPropertyException("GetCampaignPrincipalScopeSettings", "userScopeExpression");
            }
            this.userScopeExpression = userScopeExpression;
            return this;
        }
        public GetCampaignPrincipalScopeSettings build() {
            final var _resultValue = new GetCampaignPrincipalScopeSettings();
            _resultValue.excludedUserIds = excludedUserIds;
            _resultValue.groupIds = groupIds;
            _resultValue.includeOnlyActiveUsers = includeOnlyActiveUsers;
            _resultValue.onlyIncludeUsersWithSodConflicts = onlyIncludeUsersWithSodConflicts;
            _resultValue.predefinedInactiveUsersScopes = predefinedInactiveUsersScopes;
            _resultValue.type = type;
            _resultValue.userIds = userIds;
            _resultValue.userScopeExpression = userScopeExpression;
            return _resultValue;
        }
    }
}

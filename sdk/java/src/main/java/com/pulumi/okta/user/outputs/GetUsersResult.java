// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.user.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.user.outputs.GetUsersSearch;
import com.pulumi.okta.user.outputs.GetUsersUser;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUsersResult {
    private @Nullable String compoundSearchOperator;
    private @Nullable String delayReadSeconds;
    private @Nullable String groupId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean includeGroups;
    private @Nullable Boolean includeRoles;
    private @Nullable List<GetUsersSearch> searches;
    /**
     * @return collection of users retrieved from Okta with the following properties.
     * 
     */
    private List<GetUsersUser> users;

    private GetUsersResult() {}
    public Optional<String> compoundSearchOperator() {
        return Optional.ofNullable(this.compoundSearchOperator);
    }
    public Optional<String> delayReadSeconds() {
        return Optional.ofNullable(this.delayReadSeconds);
    }
    public Optional<String> groupId() {
        return Optional.ofNullable(this.groupId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> includeGroups() {
        return Optional.ofNullable(this.includeGroups);
    }
    public Optional<Boolean> includeRoles() {
        return Optional.ofNullable(this.includeRoles);
    }
    public List<GetUsersSearch> searches() {
        return this.searches == null ? List.of() : this.searches;
    }
    /**
     * @return collection of users retrieved from Okta with the following properties.
     * 
     */
    public List<GetUsersUser> users() {
        return this.users;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUsersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compoundSearchOperator;
        private @Nullable String delayReadSeconds;
        private @Nullable String groupId;
        private String id;
        private @Nullable Boolean includeGroups;
        private @Nullable Boolean includeRoles;
        private @Nullable List<GetUsersSearch> searches;
        private List<GetUsersUser> users;
        public Builder() {}
        public Builder(GetUsersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compoundSearchOperator = defaults.compoundSearchOperator;
    	      this.delayReadSeconds = defaults.delayReadSeconds;
    	      this.groupId = defaults.groupId;
    	      this.id = defaults.id;
    	      this.includeGroups = defaults.includeGroups;
    	      this.includeRoles = defaults.includeRoles;
    	      this.searches = defaults.searches;
    	      this.users = defaults.users;
        }

        @CustomType.Setter
        public Builder compoundSearchOperator(@Nullable String compoundSearchOperator) {

            this.compoundSearchOperator = compoundSearchOperator;
            return this;
        }
        @CustomType.Setter
        public Builder delayReadSeconds(@Nullable String delayReadSeconds) {

            this.delayReadSeconds = delayReadSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(@Nullable String groupId) {

            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUsersResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder includeGroups(@Nullable Boolean includeGroups) {

            this.includeGroups = includeGroups;
            return this;
        }
        @CustomType.Setter
        public Builder includeRoles(@Nullable Boolean includeRoles) {

            this.includeRoles = includeRoles;
            return this;
        }
        @CustomType.Setter
        public Builder searches(@Nullable List<GetUsersSearch> searches) {

            this.searches = searches;
            return this;
        }
        public Builder searches(GetUsersSearch... searches) {
            return searches(List.of(searches));
        }
        @CustomType.Setter
        public Builder users(List<GetUsersUser> users) {
            if (users == null) {
              throw new MissingRequiredPropertyException("GetUsersResult", "users");
            }
            this.users = users;
            return this;
        }
        public Builder users(GetUsersUser... users) {
            return users(List.of(users));
        }
        public GetUsersResult build() {
            final var _resultValue = new GetUsersResult();
            _resultValue.compoundSearchOperator = compoundSearchOperator;
            _resultValue.delayReadSeconds = delayReadSeconds;
            _resultValue.groupId = groupId;
            _resultValue.id = id;
            _resultValue.includeGroups = includeGroups;
            _resultValue.includeRoles = includeRoles;
            _resultValue.searches = searches;
            _resultValue.users = users;
            return _resultValue;
        }
    }
}

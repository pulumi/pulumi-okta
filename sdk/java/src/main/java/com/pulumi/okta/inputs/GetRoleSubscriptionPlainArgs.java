// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetRoleSubscriptionPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRoleSubscriptionPlainArgs Empty = new GetRoleSubscriptionPlainArgs();

    /**
     * Type of the notification
     * 
     */
    @Import(name="notificationType", required=true)
    private String notificationType;

    /**
     * @return Type of the notification
     * 
     */
    public String notificationType() {
        return this.notificationType;
    }

    /**
     * Type of the role
     * 
     */
    @Import(name="roleType", required=true)
    private String roleType;

    /**
     * @return Type of the role
     * 
     */
    public String roleType() {
        return this.roleType;
    }

    private GetRoleSubscriptionPlainArgs() {}

    private GetRoleSubscriptionPlainArgs(GetRoleSubscriptionPlainArgs $) {
        this.notificationType = $.notificationType;
        this.roleType = $.roleType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRoleSubscriptionPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRoleSubscriptionPlainArgs $;

        public Builder() {
            $ = new GetRoleSubscriptionPlainArgs();
        }

        public Builder(GetRoleSubscriptionPlainArgs defaults) {
            $ = new GetRoleSubscriptionPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param notificationType Type of the notification
         * 
         * @return builder
         * 
         */
        public Builder notificationType(String notificationType) {
            $.notificationType = notificationType;
            return this;
        }

        /**
         * @param roleType Type of the role
         * 
         * @return builder
         * 
         */
        public Builder roleType(String roleType) {
            $.roleType = roleType;
            return this;
        }

        public GetRoleSubscriptionPlainArgs build() {
            if ($.notificationType == null) {
                throw new MissingRequiredPropertyException("GetRoleSubscriptionPlainArgs", "notificationType");
            }
            if ($.roleType == null) {
                throw new MissingRequiredPropertyException("GetRoleSubscriptionPlainArgs", "roleType");
            }
            return $;
        }
    }

}

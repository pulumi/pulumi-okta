// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.inputs.CampaignPrincipalScopeSettingsPredefinedInactiveUsersScopeArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CampaignPrincipalScopeSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CampaignPrincipalScopeSettingsArgs Empty = new CampaignPrincipalScopeSettingsArgs();

    /**
     * An array of Okta user IDs excluded from access certification or the campaign. This field is optional. A maximum of 50 users can be specified in the array.
     * 
     */
    @Import(name="excludedUserIds")
    private @Nullable Output<List<String>> excludedUserIds;

    /**
     * @return An array of Okta user IDs excluded from access certification or the campaign. This field is optional. A maximum of 50 users can be specified in the array.
     * 
     */
    public Optional<Output<List<String>>> excludedUserIds() {
        return Optional.ofNullable(this.excludedUserIds);
    }

    /**
     * An array of Okta group IDs included from access certification or the campaign. userIds, groupIds or userScopeExpression is required if campaign type is USER. A maximum of 5 groups can be specified in the array.
     * 
     */
    @Import(name="groupIds")
    private @Nullable Output<List<String>> groupIds;

    /**
     * @return An array of Okta group IDs included from access certification or the campaign. userIds, groupIds or userScopeExpression is required if campaign type is USER. A maximum of 5 groups can be specified in the array.
     * 
     */
    public Optional<Output<List<String>>> groupIds() {
        return Optional.ofNullable(this.groupIds);
    }

    /**
     * If set to true, only active Okta users are included in the campaign.
     * 
     */
    @Import(name="includeOnlyActiveUsers")
    private @Nullable Output<Boolean> includeOnlyActiveUsers;

    /**
     * @return If set to true, only active Okta users are included in the campaign.
     * 
     */
    public Optional<Output<Boolean>> includeOnlyActiveUsers() {
        return Optional.ofNullable(this.includeOnlyActiveUsers);
    }

    /**
     * If set to true, only includes users that have at least one SOD conflict that was caused due to entitlement(s) within Campaign scope.
     * 
     */
    @Import(name="onlyIncludeUsersWithSodConflicts")
    private @Nullable Output<Boolean> onlyIncludeUsersWithSodConflicts;

    /**
     * @return If set to true, only includes users that have at least one SOD conflict that was caused due to entitlement(s) within Campaign scope.
     * 
     */
    public Optional<Output<Boolean>> onlyIncludeUsersWithSodConflicts() {
        return Optional.ofNullable(this.onlyIncludeUsersWithSodConflicts);
    }

    @Import(name="predefinedInactiveUsersScopes")
    private @Nullable Output<List<CampaignPrincipalScopeSettingsPredefinedInactiveUsersScopeArgs>> predefinedInactiveUsersScopes;

    public Optional<Output<List<CampaignPrincipalScopeSettingsPredefinedInactiveUsersScopeArgs>>> predefinedInactiveUsersScopes() {
        return Optional.ofNullable(this.predefinedInactiveUsersScopes);
    }

    /**
     * Specifies the type for principal_scope_settings.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Specifies the type for principal_scope_settings.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * An array of Okta user IDs included from access certification or the campaign. userIds, groupIds or userScopeExpression is required if campaign type is USER. A maximum of 100 users can be specified in the array.
     * 
     */
    @Import(name="userIds")
    private @Nullable Output<List<String>> userIds;

    /**
     * @return An array of Okta user IDs included from access certification or the campaign. userIds, groupIds or userScopeExpression is required if campaign type is USER. A maximum of 100 users can be specified in the array.
     * 
     */
    public Optional<Output<List<String>>> userIds() {
        return Optional.ofNullable(this.userIds);
    }

    /**
     * The Okta expression language user expression on the resourceSettings to include users in the campaign.
     * 
     */
    @Import(name="userScopeExpression")
    private @Nullable Output<String> userScopeExpression;

    /**
     * @return The Okta expression language user expression on the resourceSettings to include users in the campaign.
     * 
     */
    public Optional<Output<String>> userScopeExpression() {
        return Optional.ofNullable(this.userScopeExpression);
    }

    private CampaignPrincipalScopeSettingsArgs() {}

    private CampaignPrincipalScopeSettingsArgs(CampaignPrincipalScopeSettingsArgs $) {
        this.excludedUserIds = $.excludedUserIds;
        this.groupIds = $.groupIds;
        this.includeOnlyActiveUsers = $.includeOnlyActiveUsers;
        this.onlyIncludeUsersWithSodConflicts = $.onlyIncludeUsersWithSodConflicts;
        this.predefinedInactiveUsersScopes = $.predefinedInactiveUsersScopes;
        this.type = $.type;
        this.userIds = $.userIds;
        this.userScopeExpression = $.userScopeExpression;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CampaignPrincipalScopeSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CampaignPrincipalScopeSettingsArgs $;

        public Builder() {
            $ = new CampaignPrincipalScopeSettingsArgs();
        }

        public Builder(CampaignPrincipalScopeSettingsArgs defaults) {
            $ = new CampaignPrincipalScopeSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param excludedUserIds An array of Okta user IDs excluded from access certification or the campaign. This field is optional. A maximum of 50 users can be specified in the array.
         * 
         * @return builder
         * 
         */
        public Builder excludedUserIds(@Nullable Output<List<String>> excludedUserIds) {
            $.excludedUserIds = excludedUserIds;
            return this;
        }

        /**
         * @param excludedUserIds An array of Okta user IDs excluded from access certification or the campaign. This field is optional. A maximum of 50 users can be specified in the array.
         * 
         * @return builder
         * 
         */
        public Builder excludedUserIds(List<String> excludedUserIds) {
            return excludedUserIds(Output.of(excludedUserIds));
        }

        /**
         * @param excludedUserIds An array of Okta user IDs excluded from access certification or the campaign. This field is optional. A maximum of 50 users can be specified in the array.
         * 
         * @return builder
         * 
         */
        public Builder excludedUserIds(String... excludedUserIds) {
            return excludedUserIds(List.of(excludedUserIds));
        }

        /**
         * @param groupIds An array of Okta group IDs included from access certification or the campaign. userIds, groupIds or userScopeExpression is required if campaign type is USER. A maximum of 5 groups can be specified in the array.
         * 
         * @return builder
         * 
         */
        public Builder groupIds(@Nullable Output<List<String>> groupIds) {
            $.groupIds = groupIds;
            return this;
        }

        /**
         * @param groupIds An array of Okta group IDs included from access certification or the campaign. userIds, groupIds or userScopeExpression is required if campaign type is USER. A maximum of 5 groups can be specified in the array.
         * 
         * @return builder
         * 
         */
        public Builder groupIds(List<String> groupIds) {
            return groupIds(Output.of(groupIds));
        }

        /**
         * @param groupIds An array of Okta group IDs included from access certification or the campaign. userIds, groupIds or userScopeExpression is required if campaign type is USER. A maximum of 5 groups can be specified in the array.
         * 
         * @return builder
         * 
         */
        public Builder groupIds(String... groupIds) {
            return groupIds(List.of(groupIds));
        }

        /**
         * @param includeOnlyActiveUsers If set to true, only active Okta users are included in the campaign.
         * 
         * @return builder
         * 
         */
        public Builder includeOnlyActiveUsers(@Nullable Output<Boolean> includeOnlyActiveUsers) {
            $.includeOnlyActiveUsers = includeOnlyActiveUsers;
            return this;
        }

        /**
         * @param includeOnlyActiveUsers If set to true, only active Okta users are included in the campaign.
         * 
         * @return builder
         * 
         */
        public Builder includeOnlyActiveUsers(Boolean includeOnlyActiveUsers) {
            return includeOnlyActiveUsers(Output.of(includeOnlyActiveUsers));
        }

        /**
         * @param onlyIncludeUsersWithSodConflicts If set to true, only includes users that have at least one SOD conflict that was caused due to entitlement(s) within Campaign scope.
         * 
         * @return builder
         * 
         */
        public Builder onlyIncludeUsersWithSodConflicts(@Nullable Output<Boolean> onlyIncludeUsersWithSodConflicts) {
            $.onlyIncludeUsersWithSodConflicts = onlyIncludeUsersWithSodConflicts;
            return this;
        }

        /**
         * @param onlyIncludeUsersWithSodConflicts If set to true, only includes users that have at least one SOD conflict that was caused due to entitlement(s) within Campaign scope.
         * 
         * @return builder
         * 
         */
        public Builder onlyIncludeUsersWithSodConflicts(Boolean onlyIncludeUsersWithSodConflicts) {
            return onlyIncludeUsersWithSodConflicts(Output.of(onlyIncludeUsersWithSodConflicts));
        }

        public Builder predefinedInactiveUsersScopes(@Nullable Output<List<CampaignPrincipalScopeSettingsPredefinedInactiveUsersScopeArgs>> predefinedInactiveUsersScopes) {
            $.predefinedInactiveUsersScopes = predefinedInactiveUsersScopes;
            return this;
        }

        public Builder predefinedInactiveUsersScopes(List<CampaignPrincipalScopeSettingsPredefinedInactiveUsersScopeArgs> predefinedInactiveUsersScopes) {
            return predefinedInactiveUsersScopes(Output.of(predefinedInactiveUsersScopes));
        }

        public Builder predefinedInactiveUsersScopes(CampaignPrincipalScopeSettingsPredefinedInactiveUsersScopeArgs... predefinedInactiveUsersScopes) {
            return predefinedInactiveUsersScopes(List.of(predefinedInactiveUsersScopes));
        }

        /**
         * @param type Specifies the type for principal_scope_settings.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Specifies the type for principal_scope_settings.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param userIds An array of Okta user IDs included from access certification or the campaign. userIds, groupIds or userScopeExpression is required if campaign type is USER. A maximum of 100 users can be specified in the array.
         * 
         * @return builder
         * 
         */
        public Builder userIds(@Nullable Output<List<String>> userIds) {
            $.userIds = userIds;
            return this;
        }

        /**
         * @param userIds An array of Okta user IDs included from access certification or the campaign. userIds, groupIds or userScopeExpression is required if campaign type is USER. A maximum of 100 users can be specified in the array.
         * 
         * @return builder
         * 
         */
        public Builder userIds(List<String> userIds) {
            return userIds(Output.of(userIds));
        }

        /**
         * @param userIds An array of Okta user IDs included from access certification or the campaign. userIds, groupIds or userScopeExpression is required if campaign type is USER. A maximum of 100 users can be specified in the array.
         * 
         * @return builder
         * 
         */
        public Builder userIds(String... userIds) {
            return userIds(List.of(userIds));
        }

        /**
         * @param userScopeExpression The Okta expression language user expression on the resourceSettings to include users in the campaign.
         * 
         * @return builder
         * 
         */
        public Builder userScopeExpression(@Nullable Output<String> userScopeExpression) {
            $.userScopeExpression = userScopeExpression;
            return this;
        }

        /**
         * @param userScopeExpression The Okta expression language user expression on the resourceSettings to include users in the campaign.
         * 
         * @return builder
         * 
         */
        public Builder userScopeExpression(String userScopeExpression) {
            return userScopeExpression(Output.of(userScopeExpression));
        }

        public CampaignPrincipalScopeSettingsArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("CampaignPrincipalScopeSettingsArgs", "type");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.inputs.GetEntitlementParentArgs;
import com.pulumi.okta.inputs.GetEntitlementValueArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEntitlementArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEntitlementArgs Empty = new GetEntitlementArgs();

    /**
     * The ID of this resource.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The ID of this resource.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    @Import(name="parent")
    private @Nullable Output<GetEntitlementParentArgs> parent;

    public Optional<Output<GetEntitlementParentArgs>> parent() {
        return Optional.ofNullable(this.parent);
    }

    @Import(name="values")
    private @Nullable Output<List<GetEntitlementValueArgs>> values;

    public Optional<Output<List<GetEntitlementValueArgs>>> values() {
        return Optional.ofNullable(this.values);
    }

    private GetEntitlementArgs() {}

    private GetEntitlementArgs(GetEntitlementArgs $) {
        this.id = $.id;
        this.parent = $.parent;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEntitlementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEntitlementArgs $;

        public Builder() {
            $ = new GetEntitlementArgs();
        }

        public Builder(GetEntitlementArgs defaults) {
            $ = new GetEntitlementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The ID of this resource.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of this resource.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder parent(@Nullable Output<GetEntitlementParentArgs> parent) {
            $.parent = parent;
            return this;
        }

        public Builder parent(GetEntitlementParentArgs parent) {
            return parent(Output.of(parent));
        }

        public Builder values(@Nullable Output<List<GetEntitlementValueArgs>> values) {
            $.values = values;
            return this;
        }

        public Builder values(List<GetEntitlementValueArgs> values) {
            return values(Output.of(values));
        }

        public Builder values(GetEntitlementValueArgs... values) {
            return values(List.of(values));
        }

        public GetEntitlementArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetEntitlementArgs", "id");
            }
            return $;
        }
    }

}

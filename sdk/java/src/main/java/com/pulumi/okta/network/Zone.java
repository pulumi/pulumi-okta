// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.network;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.network.ZoneArgs;
import com.pulumi.okta.network.inputs.ZoneState;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates an Okta Network Zone. This resource allows you to create and configure an Okta Network Zone.
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:network/zone:Zone example &amp;#60;zone id&amp;#62;
 * ```
 * 
 */
@ResourceType(type="okta:network/zone:Zone")
public class Zone extends com.pulumi.resources.CustomResource {
    /**
     * List of asns included. Format of each array value: a string representation of an ASN numeric value. Use with type `DYNAMIC` or `DYNAMIC_V2`
     * 
     */
    @Export(name="asns", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> asns;

    /**
     * @return List of asns included. Format of each array value: a string representation of an ASN numeric value. Use with type `DYNAMIC` or `DYNAMIC_V2`
     * 
     */
    public Output<Optional<List<String>>> asns() {
        return Codegen.optional(this.asns);
    }
    /**
     * Array of locations ISO-3166-1(2) included. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC` or `DYNAMIC_V2`
     * 
     */
    @Export(name="dynamicLocations", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> dynamicLocations;

    /**
     * @return Array of locations ISO-3166-1(2) included. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC` or `DYNAMIC_V2`
     * 
     */
    public Output<Optional<List<String>>> dynamicLocations() {
        return Codegen.optional(this.dynamicLocations);
    }
    /**
     * Array of locations ISO-3166-1(2) excluded. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC_V2`
     * 
     */
    @Export(name="dynamicLocationsExcludes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> dynamicLocationsExcludes;

    /**
     * @return Array of locations ISO-3166-1(2) excluded. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC_V2`
     * 
     */
    public Output<Optional<List<String>>> dynamicLocationsExcludes() {
        return Codegen.optional(this.dynamicLocationsExcludes);
    }
    /**
     * Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or `NotTorAnonymizer`. Use with type `DYNAMIC`
     * 
     */
    @Export(name="dynamicProxyType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dynamicProxyType;

    /**
     * @return Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or `NotTorAnonymizer`. Use with type `DYNAMIC`
     * 
     */
    public Output<Optional<String>> dynamicProxyType() {
        return Codegen.optional(this.dynamicProxyType);
    }
    /**
     * Array of values in CIDR/range form depending on the way it&#39;s been declared (i.e. CIDR will contain /suffix). Please check API docs for examples. Use with type `IP`
     * 
     */
    @Export(name="gateways", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> gateways;

    /**
     * @return Array of values in CIDR/range form depending on the way it&#39;s been declared (i.e. CIDR will contain /suffix). Please check API docs for examples. Use with type `IP`
     * 
     */
    public Output<Optional<List<String>>> gateways() {
        return Codegen.optional(this.gateways);
    }
    /**
     * List of ip service excluded. Use with type `DYNAMIC_V2`
     * 
     */
    @Export(name="ipServiceCategoriesExcludes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> ipServiceCategoriesExcludes;

    /**
     * @return List of ip service excluded. Use with type `DYNAMIC_V2`
     * 
     */
    public Output<Optional<List<String>>> ipServiceCategoriesExcludes() {
        return Codegen.optional(this.ipServiceCategoriesExcludes);
    }
    /**
     * List of ip service included. Use with type `DYNAMIC_V2`
     * 
     */
    @Export(name="ipServiceCategoriesIncludes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> ipServiceCategoriesIncludes;

    /**
     * @return List of ip service included. Use with type `DYNAMIC_V2`
     * 
     */
    public Output<Optional<List<String>>> ipServiceCategoriesIncludes() {
        return Codegen.optional(this.ipServiceCategoriesIncludes);
    }
    /**
     * Name of the Network Zone Resource
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the Network Zone Resource
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Array of values in CIDR/range form depending on the way it&#39;s been declared (i.e. CIDR will contain /suffix). Please check API docs for examples. Can not be set if `usage` is set to `BLOCKLIST`. Use with type `IP`
     * 
     */
    @Export(name="proxies", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> proxies;

    /**
     * @return Array of values in CIDR/range form depending on the way it&#39;s been declared (i.e. CIDR will contain /suffix). Please check API docs for examples. Can not be set if `usage` is set to `BLOCKLIST`. Use with type `IP`
     * 
     */
    public Output<Optional<List<String>>> proxies() {
        return Codegen.optional(this.proxies);
    }
    /**
     * Network Status - can either be `ACTIVE` or `INACTIVE` only
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> status;

    /**
     * @return Network Status - can either be `ACTIVE` or `INACTIVE` only
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * Type of the Network Zone - can be `IP`, `DYNAMIC` or `DYNAMIC_V2` only
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Type of the Network Zone - can be `IP`, `DYNAMIC` or `DYNAMIC_V2` only
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Usage of the Network Zone - can be either `POLICY` or `BLOCKLIST`. By default, it is `POLICY`
     * 
     */
    @Export(name="usage", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> usage;

    /**
     * @return Usage of the Network Zone - can be either `POLICY` or `BLOCKLIST`. By default, it is `POLICY`
     * 
     */
    public Output<Optional<String>> usage() {
        return Codegen.optional(this.usage);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Zone(java.lang.String name) {
        this(name, ZoneArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Zone(java.lang.String name, ZoneArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Zone(java.lang.String name, ZoneArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:network/zone:Zone", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Zone(java.lang.String name, Output<java.lang.String> id, @Nullable ZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:network/zone:Zone", name, state, makeResourceOptions(options, id), false);
    }

    private static ZoneArgs makeArgs(ZoneArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ZoneArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Zone get(java.lang.String name, Output<java.lang.String> id, @Nullable ZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Zone(name, id, state, options);
    }
}

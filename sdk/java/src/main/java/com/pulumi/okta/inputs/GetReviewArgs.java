// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.inputs.GetReviewAllReviewerLevelArgs;
import com.pulumi.okta.inputs.GetReviewEntitlementBundleArgs;
import com.pulumi.okta.inputs.GetReviewEntitlementValueArgs;
import com.pulumi.okta.inputs.GetReviewLinksArgs;
import com.pulumi.okta.inputs.GetReviewNoteArgs;
import com.pulumi.okta.inputs.GetReviewPrincipalProfileArgs;
import com.pulumi.okta.inputs.GetReviewReviewerProfileArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetReviewArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetReviewArgs Empty = new GetReviewArgs();

    @Import(name="allReviewerLevels")
    private @Nullable Output<List<GetReviewAllReviewerLevelArgs>> allReviewerLevels;

    public Optional<Output<List<GetReviewAllReviewerLevelArgs>>> allReviewerLevels() {
        return Optional.ofNullable(this.allReviewerLevels);
    }

    @Import(name="entitlementBundle")
    private @Nullable Output<GetReviewEntitlementBundleArgs> entitlementBundle;

    public Optional<Output<GetReviewEntitlementBundleArgs>> entitlementBundle() {
        return Optional.ofNullable(this.entitlementBundle);
    }

    @Import(name="entitlementValue")
    private @Nullable Output<GetReviewEntitlementValueArgs> entitlementValue;

    public Optional<Output<GetReviewEntitlementValueArgs>> entitlementValue() {
        return Optional.ofNullable(this.entitlementValue);
    }

    /**
     * The ID of  review.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The ID of  review.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    @Import(name="links")
    private @Nullable Output<GetReviewLinksArgs> links;

    public Optional<Output<GetReviewLinksArgs>> links() {
        return Optional.ofNullable(this.links);
    }

    @Import(name="note")
    private @Nullable Output<GetReviewNoteArgs> note;

    public Optional<Output<GetReviewNoteArgs>> note() {
        return Optional.ofNullable(this.note);
    }

    /**
     * A limited set of properties from the user profile who created the review.
     * 
     */
    @Import(name="principalProfile")
    private @Nullable Output<GetReviewPrincipalProfileArgs> principalProfile;

    /**
     * @return A limited set of properties from the user profile who created the review.
     * 
     */
    public Optional<Output<GetReviewPrincipalProfileArgs>> principalProfile() {
        return Optional.ofNullable(this.principalProfile);
    }

    @Import(name="reviewerProfile")
    private @Nullable Output<GetReviewReviewerProfileArgs> reviewerProfile;

    public Optional<Output<GetReviewReviewerProfileArgs>> reviewerProfile() {
        return Optional.ofNullable(this.reviewerProfile);
    }

    private GetReviewArgs() {}

    private GetReviewArgs(GetReviewArgs $) {
        this.allReviewerLevels = $.allReviewerLevels;
        this.entitlementBundle = $.entitlementBundle;
        this.entitlementValue = $.entitlementValue;
        this.id = $.id;
        this.links = $.links;
        this.note = $.note;
        this.principalProfile = $.principalProfile;
        this.reviewerProfile = $.reviewerProfile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetReviewArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetReviewArgs $;

        public Builder() {
            $ = new GetReviewArgs();
        }

        public Builder(GetReviewArgs defaults) {
            $ = new GetReviewArgs(Objects.requireNonNull(defaults));
        }

        public Builder allReviewerLevels(@Nullable Output<List<GetReviewAllReviewerLevelArgs>> allReviewerLevels) {
            $.allReviewerLevels = allReviewerLevels;
            return this;
        }

        public Builder allReviewerLevels(List<GetReviewAllReviewerLevelArgs> allReviewerLevels) {
            return allReviewerLevels(Output.of(allReviewerLevels));
        }

        public Builder allReviewerLevels(GetReviewAllReviewerLevelArgs... allReviewerLevels) {
            return allReviewerLevels(List.of(allReviewerLevels));
        }

        public Builder entitlementBundle(@Nullable Output<GetReviewEntitlementBundleArgs> entitlementBundle) {
            $.entitlementBundle = entitlementBundle;
            return this;
        }

        public Builder entitlementBundle(GetReviewEntitlementBundleArgs entitlementBundle) {
            return entitlementBundle(Output.of(entitlementBundle));
        }

        public Builder entitlementValue(@Nullable Output<GetReviewEntitlementValueArgs> entitlementValue) {
            $.entitlementValue = entitlementValue;
            return this;
        }

        public Builder entitlementValue(GetReviewEntitlementValueArgs entitlementValue) {
            return entitlementValue(Output.of(entitlementValue));
        }

        /**
         * @param id The ID of  review.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of  review.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder links(@Nullable Output<GetReviewLinksArgs> links) {
            $.links = links;
            return this;
        }

        public Builder links(GetReviewLinksArgs links) {
            return links(Output.of(links));
        }

        public Builder note(@Nullable Output<GetReviewNoteArgs> note) {
            $.note = note;
            return this;
        }

        public Builder note(GetReviewNoteArgs note) {
            return note(Output.of(note));
        }

        /**
         * @param principalProfile A limited set of properties from the user profile who created the review.
         * 
         * @return builder
         * 
         */
        public Builder principalProfile(@Nullable Output<GetReviewPrincipalProfileArgs> principalProfile) {
            $.principalProfile = principalProfile;
            return this;
        }

        /**
         * @param principalProfile A limited set of properties from the user profile who created the review.
         * 
         * @return builder
         * 
         */
        public Builder principalProfile(GetReviewPrincipalProfileArgs principalProfile) {
            return principalProfile(Output.of(principalProfile));
        }

        public Builder reviewerProfile(@Nullable Output<GetReviewReviewerProfileArgs> reviewerProfile) {
            $.reviewerProfile = reviewerProfile;
            return this;
        }

        public Builder reviewerProfile(GetReviewReviewerProfileArgs reviewerProfile) {
            return reviewerProfile(Output.of(reviewerProfile));
        }

        public GetReviewArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetReviewArgs", "id");
            }
            return $;
        }
    }

}

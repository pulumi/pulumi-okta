// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.EntitlementArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.EntitlementState;
import com.pulumi.okta.outputs.EntitlementParent;
import com.pulumi.okta.outputs.EntitlementValue;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages Entitlement. This resource allows you to create and configure an Okta [Entitlement](https://developer.okta.com/docs/api/iga/openapi/governance.api/tag/Entitlements/).
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.Entitlement;
 * import com.pulumi.okta.EntitlementArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Entitlement("example", EntitlementArgs.builder()
 *             .name("example")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import okta:index/entitlement:Entitlement example &lt;entitlement_id&gt;
 * ```
 * 
 */
@ResourceType(type="okta:index/entitlement:Entitlement")
public class Entitlement extends com.pulumi.resources.CustomResource {
    /**
     * The data type of the entitlement property. If the entitlement property is multivalued, the data type is replaced with an array. Enum: &#34;array&#34;, &#34;string&#34;.
     * 
     */
    @Export(name="dataType", refs={String.class}, tree="[0]")
    private Output<String> dataType;

    /**
     * @return The data type of the entitlement property. If the entitlement property is multivalued, the data type is replaced with an array. Enum: &#34;array&#34;, &#34;string&#34;.
     * 
     */
    public Output<String> dataType() {
        return this.dataType;
    }
    /**
     * The description of an entitlement property.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of an entitlement property.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The value of an entitlement property.
     * 
     */
    @Export(name="externalValue", refs={String.class}, tree="[0]")
    private Output<String> externalValue;

    /**
     * @return The value of an entitlement property.
     * 
     */
    public Output<String> externalValue() {
        return this.externalValue;
    }
    /**
     * The property that determines if the entitlement property can hold multiple values.
     * 
     */
    @Export(name="multiValue", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> multiValue;

    /**
     * @return The property that determines if the entitlement property can hold multiple values.
     * 
     */
    public Output<Boolean> multiValue() {
        return this.multiValue;
    }
    /**
     * The display name for an entitlement property.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The display name for an entitlement property.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Representation of a resource
     * 
     */
    @Export(name="parent", refs={EntitlementParent.class}, tree="[0]")
    private Output</* @Nullable */ EntitlementParent> parent;

    /**
     * @return Representation of a resource
     * 
     */
    public Output<Optional<EntitlementParent>> parent() {
        return Codegen.optional(this.parent);
    }
    /**
     * The Okta app instance, in ORN format.
     * 
     */
    @Export(name="parentResourceOrn", refs={String.class}, tree="[0]")
    private Output<String> parentResourceOrn;

    /**
     * @return The Okta app instance, in ORN format.
     * 
     */
    public Output<String> parentResourceOrn() {
        return this.parentResourceOrn;
    }
    /**
     * The value of the entitlement property.
     * 
     */
    @Export(name="value", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> value;

    /**
     * @return The value of the entitlement property.
     * 
     */
    public Output<Optional<String>> value() {
        return Codegen.optional(this.value);
    }
    @Export(name="values", refs={List.class,EntitlementValue.class}, tree="[0,1]")
    private Output</* @Nullable */ List<EntitlementValue>> values;

    public Output<Optional<List<EntitlementValue>>> values() {
        return Codegen.optional(this.values);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Entitlement(java.lang.String name) {
        this(name, EntitlementArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Entitlement(java.lang.String name, EntitlementArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Entitlement(java.lang.String name, EntitlementArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/entitlement:Entitlement", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Entitlement(java.lang.String name, Output<java.lang.String> id, @Nullable EntitlementState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/entitlement:Entitlement", name, state, makeResourceOptions(options, id), false);
    }

    private static EntitlementArgs makeArgs(EntitlementArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? EntitlementArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Entitlement get(java.lang.String name, Output<java.lang.String> id, @Nullable EntitlementState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Entitlement(name, id, state, options);
    }
}

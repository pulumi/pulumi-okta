// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.GetRequestSettingResourceValidAccessDurationSettingsSupportedType;
import java.lang.Boolean;
import java.lang.Double;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetRequestSettingResourceValidAccessDurationSettings {
    /**
     * @return The maximum value allowed for a request condition or risk setting.
     * 
     */
    private Double maximumDays;
    /**
     * @return The maximum value allowed for a request condition or risk setting.
     * 
     */
    private Double maximumHours;
    /**
     * @return The maximum value allowed for a request condition or risk setting.
     * 
     */
    private Double maximumWeeks;
    /**
     * @return Whether accessDurationSetting must be included in the request conditions or risk settings for the specified resource.
     * 
     */
    private Boolean required;
    /**
     * @return Access duration settings that are eligible to be added to a request condition or risk settings for the specified resource.
     * 
     */
    private @Nullable List<GetRequestSettingResourceValidAccessDurationSettingsSupportedType> supportedTypes;

    private GetRequestSettingResourceValidAccessDurationSettings() {}
    /**
     * @return The maximum value allowed for a request condition or risk setting.
     * 
     */
    public Double maximumDays() {
        return this.maximumDays;
    }
    /**
     * @return The maximum value allowed for a request condition or risk setting.
     * 
     */
    public Double maximumHours() {
        return this.maximumHours;
    }
    /**
     * @return The maximum value allowed for a request condition or risk setting.
     * 
     */
    public Double maximumWeeks() {
        return this.maximumWeeks;
    }
    /**
     * @return Whether accessDurationSetting must be included in the request conditions or risk settings for the specified resource.
     * 
     */
    public Boolean required() {
        return this.required;
    }
    /**
     * @return Access duration settings that are eligible to be added to a request condition or risk settings for the specified resource.
     * 
     */
    public List<GetRequestSettingResourceValidAccessDurationSettingsSupportedType> supportedTypes() {
        return this.supportedTypes == null ? List.of() : this.supportedTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRequestSettingResourceValidAccessDurationSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double maximumDays;
        private Double maximumHours;
        private Double maximumWeeks;
        private Boolean required;
        private @Nullable List<GetRequestSettingResourceValidAccessDurationSettingsSupportedType> supportedTypes;
        public Builder() {}
        public Builder(GetRequestSettingResourceValidAccessDurationSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maximumDays = defaults.maximumDays;
    	      this.maximumHours = defaults.maximumHours;
    	      this.maximumWeeks = defaults.maximumWeeks;
    	      this.required = defaults.required;
    	      this.supportedTypes = defaults.supportedTypes;
        }

        @CustomType.Setter
        public Builder maximumDays(Double maximumDays) {
            if (maximumDays == null) {
              throw new MissingRequiredPropertyException("GetRequestSettingResourceValidAccessDurationSettings", "maximumDays");
            }
            this.maximumDays = maximumDays;
            return this;
        }
        @CustomType.Setter
        public Builder maximumHours(Double maximumHours) {
            if (maximumHours == null) {
              throw new MissingRequiredPropertyException("GetRequestSettingResourceValidAccessDurationSettings", "maximumHours");
            }
            this.maximumHours = maximumHours;
            return this;
        }
        @CustomType.Setter
        public Builder maximumWeeks(Double maximumWeeks) {
            if (maximumWeeks == null) {
              throw new MissingRequiredPropertyException("GetRequestSettingResourceValidAccessDurationSettings", "maximumWeeks");
            }
            this.maximumWeeks = maximumWeeks;
            return this;
        }
        @CustomType.Setter
        public Builder required(Boolean required) {
            if (required == null) {
              throw new MissingRequiredPropertyException("GetRequestSettingResourceValidAccessDurationSettings", "required");
            }
            this.required = required;
            return this;
        }
        @CustomType.Setter
        public Builder supportedTypes(@Nullable List<GetRequestSettingResourceValidAccessDurationSettingsSupportedType> supportedTypes) {

            this.supportedTypes = supportedTypes;
            return this;
        }
        public Builder supportedTypes(GetRequestSettingResourceValidAccessDurationSettingsSupportedType... supportedTypes) {
            return supportedTypes(List.of(supportedTypes));
        }
        public GetRequestSettingResourceValidAccessDurationSettings build() {
            final var _resultValue = new GetRequestSettingResourceValidAccessDurationSettings();
            _resultValue.maximumDays = maximumDays;
            _resultValue.maximumHours = maximumHours;
            _resultValue.maximumWeeks = maximumWeeks;
            _resultValue.required = required;
            _resultValue.supportedTypes = supportedTypes;
            return _resultValue;
        }
    }
}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor extends com.pulumi.resources.InvokeArgs {

    public static final GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor Empty = new GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor();

    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor() {}

    private GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor(GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor $) {
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor $;

        public Builder() {
            $ = new GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor();
        }

        public Builder(GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor defaults) {
            $ = new GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor(Objects.requireNonNull(defaults));
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor", "type");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.okta.GroupMembershipsArgs;
import com.pulumi.okta.Utilities;
import com.pulumi.okta.inputs.GroupMembershipsState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource to manage a set of memberships for a specific group.
 * 
 * This resource will allow you to bulk manage group membership in Okta for a given
 * group. This offers an interface to pass multiple users into a single resource
 * call, for better API resource usage. Effectively this is the same as using the
 * `okta.group.Membership` resource several times with a single group and different
 * users. If you need a relationship of a single user to many groups, please use
 * the `okta.UserGroupMemberships` resource.
 * 
 * **Important**: The default behavior of the resource is to only maintain the
 * state of user ids that are assigned it. This behavior will signal drift only if
 * those users stop being part of the group. If the desired behavior is track all
 * users that are added/removed from the group make use of the `track_all_users`
 * argument with this resource.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.okta.group.Group;
 * import com.pulumi.okta.group.GroupArgs;
 * import com.pulumi.okta.GroupMemberships;
 * import com.pulumi.okta.GroupMembershipsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testGroup = new Group(&#34;testGroup&#34;, GroupArgs.builder()        
 *             .description(&#34;testing, testing&#34;)
 *             .build());
 * 
 *         var testGroupMemberships = new GroupMemberships(&#34;testGroupMemberships&#34;, GroupMembershipsArgs.builder()        
 *             .groupId(testGroup.id())
 *             .users(            
 *                 okta_user.test1().id(),
 *                 okta_user.test2().id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * an Okta Group&#39;s memberships can be imported via the Okta group ID.
 * 
 * ```sh
 *  $ pulumi import okta:index/groupMemberships:GroupMemberships test &amp;#60;group id&amp;#62;
 * ```
 * 
 */
@ResourceType(type="okta:index/groupMemberships:GroupMemberships")
public class GroupMemberships extends com.pulumi.resources.CustomResource {
    /**
     * Okta group ID.
     * 
     */
    @Export(name="groupId", type=String.class, parameters={})
    private Output<String> groupId;

    /**
     * @return Okta group ID.
     * 
     */
    public Output<String> groupId() {
        return this.groupId;
    }
    /**
     * The resource will concern itself with all users added/deleted to the group; even those managed outside of the resource.
     * 
     */
    @Export(name="trackAllUsers", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> trackAllUsers;

    /**
     * @return The resource will concern itself with all users added/deleted to the group; even those managed outside of the resource.
     * 
     */
    public Output<Optional<Boolean>> trackAllUsers() {
        return Codegen.optional(this.trackAllUsers);
    }
    /**
     * The list of Okta user IDs which the group should have membership managed for.
     * 
     */
    @Export(name="users", type=List.class, parameters={String.class})
    private Output<List<String>> users;

    /**
     * @return The list of Okta user IDs which the group should have membership managed for.
     * 
     */
    public Output<List<String>> users() {
        return this.users;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GroupMemberships(String name) {
        this(name, GroupMembershipsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GroupMemberships(String name, GroupMembershipsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GroupMemberships(String name, GroupMembershipsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/groupMemberships:GroupMemberships", name, args == null ? GroupMembershipsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private GroupMemberships(String name, Output<String> id, @Nullable GroupMembershipsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("okta:index/groupMemberships:GroupMemberships", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GroupMemberships get(String name, Output<String> id, @Nullable GroupMembershipsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GroupMemberships(name, id, state, options);
    }
}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.okta.inputs.EndUserMyRequestsRequesterFieldValueArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EndUserMyRequestsState extends com.pulumi.resources.ResourceArgs {

    public static final EndUserMyRequestsState Empty = new EndUserMyRequestsState();

    /**
     * The ID of the catalog entry for which the request is being made.
     * 
     */
    @Import(name="entryId")
    private @Nullable Output<String> entryId;

    /**
     * @return The ID of the catalog entry for which the request is being made.
     * 
     */
    public Optional<Output<String>> entryId() {
        return Optional.ofNullable(this.entryId);
    }

    /**
     * The requester input fields required by the approval system. Note: The fields required are determined by the approval system.
     * 
     */
    @Import(name="requesterFieldValues")
    private @Nullable Output<List<EndUserMyRequestsRequesterFieldValueArgs>> requesterFieldValues;

    /**
     * @return The requester input fields required by the approval system. Note: The fields required are determined by the approval system.
     * 
     */
    public Optional<Output<List<EndUserMyRequestsRequesterFieldValueArgs>>> requesterFieldValues() {
        return Optional.ofNullable(this.requesterFieldValues);
    }

    /**
     * The status of the request. Possible values include: `APPROVED`, `CANCELED`, `DENIED`, `EXPIRED`, `PENDING`, `REJECTED`, `SUBMITTED`
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the request. Possible values include: `APPROVED`, `CANCELED`, `DENIED`, `EXPIRED`, `PENDING`, `REJECTED`, `SUBMITTED`
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private EndUserMyRequestsState() {}

    private EndUserMyRequestsState(EndUserMyRequestsState $) {
        this.entryId = $.entryId;
        this.requesterFieldValues = $.requesterFieldValues;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndUserMyRequestsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndUserMyRequestsState $;

        public Builder() {
            $ = new EndUserMyRequestsState();
        }

        public Builder(EndUserMyRequestsState defaults) {
            $ = new EndUserMyRequestsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param entryId The ID of the catalog entry for which the request is being made.
         * 
         * @return builder
         * 
         */
        public Builder entryId(@Nullable Output<String> entryId) {
            $.entryId = entryId;
            return this;
        }

        /**
         * @param entryId The ID of the catalog entry for which the request is being made.
         * 
         * @return builder
         * 
         */
        public Builder entryId(String entryId) {
            return entryId(Output.of(entryId));
        }

        /**
         * @param requesterFieldValues The requester input fields required by the approval system. Note: The fields required are determined by the approval system.
         * 
         * @return builder
         * 
         */
        public Builder requesterFieldValues(@Nullable Output<List<EndUserMyRequestsRequesterFieldValueArgs>> requesterFieldValues) {
            $.requesterFieldValues = requesterFieldValues;
            return this;
        }

        /**
         * @param requesterFieldValues The requester input fields required by the approval system. Note: The fields required are determined by the approval system.
         * 
         * @return builder
         * 
         */
        public Builder requesterFieldValues(List<EndUserMyRequestsRequesterFieldValueArgs> requesterFieldValues) {
            return requesterFieldValues(Output.of(requesterFieldValues));
        }

        /**
         * @param requesterFieldValues The requester input fields required by the approval system. Note: The fields required are determined by the approval system.
         * 
         * @return builder
         * 
         */
        public Builder requesterFieldValues(EndUserMyRequestsRequesterFieldValueArgs... requesterFieldValues) {
            return requesterFieldValues(List.of(requesterFieldValues));
        }

        /**
         * @param status The status of the request. Possible values include: `APPROVED`, `CANCELED`, `DENIED`, `EXPIRED`, `PENDING`, `REJECTED`, `SUBMITTED`
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the request. Possible values include: `APPROVED`, `CANCELED`, `DENIED`, `EXPIRED`, `PENDING`, `REJECTED`, `SUBMITTED`
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public EndUserMyRequestsState build() {
            return $;
        }
    }

}

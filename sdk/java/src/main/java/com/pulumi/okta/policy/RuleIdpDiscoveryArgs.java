// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.policy;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.okta.policy.inputs.RuleIdpDiscoveryAppExcludeArgs;
import com.pulumi.okta.policy.inputs.RuleIdpDiscoveryAppIncludeArgs;
import com.pulumi.okta.policy.inputs.RuleIdpDiscoveryPlatformIncludeArgs;
import com.pulumi.okta.policy.inputs.RuleIdpDiscoveryUserIdentifierPatternArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RuleIdpDiscoveryArgs extends com.pulumi.resources.ResourceArgs {

    public static final RuleIdpDiscoveryArgs Empty = new RuleIdpDiscoveryArgs();

    /**
     * Applications to exclude in discovery rule
     * 
     */
    @Import(name="appExcludes")
    private @Nullable Output<List<RuleIdpDiscoveryAppExcludeArgs>> appExcludes;

    /**
     * @return Applications to exclude in discovery rule
     * 
     */
    public Optional<Output<List<RuleIdpDiscoveryAppExcludeArgs>>> appExcludes() {
        return Optional.ofNullable(this.appExcludes);
    }

    /**
     * Applications to include in discovery rule
     * 
     */
    @Import(name="appIncludes")
    private @Nullable Output<List<RuleIdpDiscoveryAppIncludeArgs>> appIncludes;

    /**
     * @return Applications to include in discovery rule
     * 
     */
    public Optional<Output<List<RuleIdpDiscoveryAppIncludeArgs>>> appIncludes() {
        return Optional.ofNullable(this.appIncludes);
    }

    @Import(name="idpId")
    private @Nullable Output<String> idpId;

    public Optional<Output<String>> idpId() {
        return Optional.ofNullable(this.idpId);
    }

    @Import(name="idpType")
    private @Nullable Output<String> idpType;

    public Optional<Output<String>> idpType() {
        return Optional.ofNullable(this.idpType);
    }

    /**
     * Policy Rule Name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Policy Rule Name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Network selection mode: ANYWHERE, ZONE, ON*NETWORK, or OFF*NETWORK.
     * 
     */
    @Import(name="networkConnection")
    private @Nullable Output<String> networkConnection;

    /**
     * @return Network selection mode: ANYWHERE, ZONE, ON*NETWORK, or OFF*NETWORK.
     * 
     */
    public Optional<Output<String>> networkConnection() {
        return Optional.ofNullable(this.networkConnection);
    }

    /**
     * The zones to exclude
     * 
     */
    @Import(name="networkExcludes")
    private @Nullable Output<List<String>> networkExcludes;

    /**
     * @return The zones to exclude
     * 
     */
    public Optional<Output<List<String>>> networkExcludes() {
        return Optional.ofNullable(this.networkExcludes);
    }

    /**
     * The zones to include
     * 
     */
    @Import(name="networkIncludes")
    private @Nullable Output<List<String>> networkIncludes;

    /**
     * @return The zones to include
     * 
     */
    public Optional<Output<List<String>>> networkIncludes() {
        return Optional.ofNullable(this.networkIncludes);
    }

    @Import(name="platformIncludes")
    private @Nullable Output<List<RuleIdpDiscoveryPlatformIncludeArgs>> platformIncludes;

    public Optional<Output<List<RuleIdpDiscoveryPlatformIncludeArgs>>> platformIncludes() {
        return Optional.ofNullable(this.platformIncludes);
    }

    /**
     * Policy ID of the Rule
     * 
     */
    @Import(name="policyId")
    private @Nullable Output<String> policyId;

    /**
     * @return Policy ID of the Rule
     * 
     */
    public Optional<Output<String>> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    /**
     * Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * Policy Rule Status: ACTIVE or INACTIVE.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Policy Rule Status: ACTIVE or INACTIVE.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="userIdentifierAttribute")
    private @Nullable Output<String> userIdentifierAttribute;

    public Optional<Output<String>> userIdentifierAttribute() {
        return Optional.ofNullable(this.userIdentifierAttribute);
    }

    @Import(name="userIdentifierPatterns")
    private @Nullable Output<List<RuleIdpDiscoveryUserIdentifierPatternArgs>> userIdentifierPatterns;

    public Optional<Output<List<RuleIdpDiscoveryUserIdentifierPatternArgs>>> userIdentifierPatterns() {
        return Optional.ofNullable(this.userIdentifierPatterns);
    }

    @Import(name="userIdentifierType")
    private @Nullable Output<String> userIdentifierType;

    public Optional<Output<String>> userIdentifierType() {
        return Optional.ofNullable(this.userIdentifierType);
    }

    private RuleIdpDiscoveryArgs() {}

    private RuleIdpDiscoveryArgs(RuleIdpDiscoveryArgs $) {
        this.appExcludes = $.appExcludes;
        this.appIncludes = $.appIncludes;
        this.idpId = $.idpId;
        this.idpType = $.idpType;
        this.name = $.name;
        this.networkConnection = $.networkConnection;
        this.networkExcludes = $.networkExcludes;
        this.networkIncludes = $.networkIncludes;
        this.platformIncludes = $.platformIncludes;
        this.policyId = $.policyId;
        this.priority = $.priority;
        this.status = $.status;
        this.userIdentifierAttribute = $.userIdentifierAttribute;
        this.userIdentifierPatterns = $.userIdentifierPatterns;
        this.userIdentifierType = $.userIdentifierType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleIdpDiscoveryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleIdpDiscoveryArgs $;

        public Builder() {
            $ = new RuleIdpDiscoveryArgs();
        }

        public Builder(RuleIdpDiscoveryArgs defaults) {
            $ = new RuleIdpDiscoveryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appExcludes Applications to exclude in discovery rule
         * 
         * @return builder
         * 
         */
        public Builder appExcludes(@Nullable Output<List<RuleIdpDiscoveryAppExcludeArgs>> appExcludes) {
            $.appExcludes = appExcludes;
            return this;
        }

        /**
         * @param appExcludes Applications to exclude in discovery rule
         * 
         * @return builder
         * 
         */
        public Builder appExcludes(List<RuleIdpDiscoveryAppExcludeArgs> appExcludes) {
            return appExcludes(Output.of(appExcludes));
        }

        /**
         * @param appExcludes Applications to exclude in discovery rule
         * 
         * @return builder
         * 
         */
        public Builder appExcludes(RuleIdpDiscoveryAppExcludeArgs... appExcludes) {
            return appExcludes(List.of(appExcludes));
        }

        /**
         * @param appIncludes Applications to include in discovery rule
         * 
         * @return builder
         * 
         */
        public Builder appIncludes(@Nullable Output<List<RuleIdpDiscoveryAppIncludeArgs>> appIncludes) {
            $.appIncludes = appIncludes;
            return this;
        }

        /**
         * @param appIncludes Applications to include in discovery rule
         * 
         * @return builder
         * 
         */
        public Builder appIncludes(List<RuleIdpDiscoveryAppIncludeArgs> appIncludes) {
            return appIncludes(Output.of(appIncludes));
        }

        /**
         * @param appIncludes Applications to include in discovery rule
         * 
         * @return builder
         * 
         */
        public Builder appIncludes(RuleIdpDiscoveryAppIncludeArgs... appIncludes) {
            return appIncludes(List.of(appIncludes));
        }

        public Builder idpId(@Nullable Output<String> idpId) {
            $.idpId = idpId;
            return this;
        }

        public Builder idpId(String idpId) {
            return idpId(Output.of(idpId));
        }

        public Builder idpType(@Nullable Output<String> idpType) {
            $.idpType = idpType;
            return this;
        }

        public Builder idpType(String idpType) {
            return idpType(Output.of(idpType));
        }

        /**
         * @param name Policy Rule Name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Policy Rule Name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkConnection Network selection mode: ANYWHERE, ZONE, ON*NETWORK, or OFF*NETWORK.
         * 
         * @return builder
         * 
         */
        public Builder networkConnection(@Nullable Output<String> networkConnection) {
            $.networkConnection = networkConnection;
            return this;
        }

        /**
         * @param networkConnection Network selection mode: ANYWHERE, ZONE, ON*NETWORK, or OFF*NETWORK.
         * 
         * @return builder
         * 
         */
        public Builder networkConnection(String networkConnection) {
            return networkConnection(Output.of(networkConnection));
        }

        /**
         * @param networkExcludes The zones to exclude
         * 
         * @return builder
         * 
         */
        public Builder networkExcludes(@Nullable Output<List<String>> networkExcludes) {
            $.networkExcludes = networkExcludes;
            return this;
        }

        /**
         * @param networkExcludes The zones to exclude
         * 
         * @return builder
         * 
         */
        public Builder networkExcludes(List<String> networkExcludes) {
            return networkExcludes(Output.of(networkExcludes));
        }

        /**
         * @param networkExcludes The zones to exclude
         * 
         * @return builder
         * 
         */
        public Builder networkExcludes(String... networkExcludes) {
            return networkExcludes(List.of(networkExcludes));
        }

        /**
         * @param networkIncludes The zones to include
         * 
         * @return builder
         * 
         */
        public Builder networkIncludes(@Nullable Output<List<String>> networkIncludes) {
            $.networkIncludes = networkIncludes;
            return this;
        }

        /**
         * @param networkIncludes The zones to include
         * 
         * @return builder
         * 
         */
        public Builder networkIncludes(List<String> networkIncludes) {
            return networkIncludes(Output.of(networkIncludes));
        }

        /**
         * @param networkIncludes The zones to include
         * 
         * @return builder
         * 
         */
        public Builder networkIncludes(String... networkIncludes) {
            return networkIncludes(List.of(networkIncludes));
        }

        public Builder platformIncludes(@Nullable Output<List<RuleIdpDiscoveryPlatformIncludeArgs>> platformIncludes) {
            $.platformIncludes = platformIncludes;
            return this;
        }

        public Builder platformIncludes(List<RuleIdpDiscoveryPlatformIncludeArgs> platformIncludes) {
            return platformIncludes(Output.of(platformIncludes));
        }

        public Builder platformIncludes(RuleIdpDiscoveryPlatformIncludeArgs... platformIncludes) {
            return platformIncludes(List.of(platformIncludes));
        }

        /**
         * @param policyId Policy ID of the Rule
         * 
         * @return builder
         * 
         */
        public Builder policyId(@Nullable Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId Policy ID of the Rule
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        /**
         * @param priority Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param status Policy Rule Status: ACTIVE or INACTIVE.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Policy Rule Status: ACTIVE or INACTIVE.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder userIdentifierAttribute(@Nullable Output<String> userIdentifierAttribute) {
            $.userIdentifierAttribute = userIdentifierAttribute;
            return this;
        }

        public Builder userIdentifierAttribute(String userIdentifierAttribute) {
            return userIdentifierAttribute(Output.of(userIdentifierAttribute));
        }

        public Builder userIdentifierPatterns(@Nullable Output<List<RuleIdpDiscoveryUserIdentifierPatternArgs>> userIdentifierPatterns) {
            $.userIdentifierPatterns = userIdentifierPatterns;
            return this;
        }

        public Builder userIdentifierPatterns(List<RuleIdpDiscoveryUserIdentifierPatternArgs> userIdentifierPatterns) {
            return userIdentifierPatterns(Output.of(userIdentifierPatterns));
        }

        public Builder userIdentifierPatterns(RuleIdpDiscoveryUserIdentifierPatternArgs... userIdentifierPatterns) {
            return userIdentifierPatterns(List.of(userIdentifierPatterns));
        }

        public Builder userIdentifierType(@Nullable Output<String> userIdentifierType) {
            $.userIdentifierType = userIdentifierType;
            return this;
        }

        public Builder userIdentifierType(String userIdentifierType) {
            return userIdentifierType(Output.of(userIdentifierType));
        }

        public RuleIdpDiscoveryArgs build() {
            return $;
        }
    }

}

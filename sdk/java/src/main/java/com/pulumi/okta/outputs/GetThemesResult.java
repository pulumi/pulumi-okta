// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.okta.outputs.GetThemesTheme;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetThemesResult {
    private final String brandId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return List of `okta.Theme` belonging to the brand.
     * 
     */
    private final List<GetThemesTheme> themes;

    @CustomType.Constructor
    private GetThemesResult(
        @CustomType.Parameter("brandId") String brandId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("themes") List<GetThemesTheme> themes) {
        this.brandId = brandId;
        this.id = id;
        this.themes = themes;
    }

    public String brandId() {
        return this.brandId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of `okta.Theme` belonging to the brand.
     * 
     */
    public List<GetThemesTheme> themes() {
        return this.themes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetThemesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String brandId;
        private String id;
        private List<GetThemesTheme> themes;

        public Builder() {
    	      // Empty
        }

        public Builder(GetThemesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.brandId = defaults.brandId;
    	      this.id = defaults.id;
    	      this.themes = defaults.themes;
        }

        public Builder brandId(String brandId) {
            this.brandId = Objects.requireNonNull(brandId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder themes(List<GetThemesTheme> themes) {
            this.themes = Objects.requireNonNull(themes);
            return this;
        }
        public Builder themes(GetThemesTheme... themes) {
            return themes(List.of(themes));
        }        public GetThemesResult build() {
            return new GetThemesResult(brandId, id, themes);
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.okta.outputs.GetThemesTheme;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetThemesResult {
    /**
     * @return Brand ID
     * 
     */
    private String brandId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return List of `okta_them` belonging to the brand in the organization
     * 
     */
    private List<GetThemesTheme> themes;

    private GetThemesResult() {}
    /**
     * @return Brand ID
     * 
     */
    public String brandId() {
        return this.brandId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of `okta_them` belonging to the brand in the organization
     * 
     */
    public List<GetThemesTheme> themes() {
        return this.themes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetThemesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String brandId;
        private String id;
        private List<GetThemesTheme> themes;
        public Builder() {}
        public Builder(GetThemesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.brandId = defaults.brandId;
    	      this.id = defaults.id;
    	      this.themes = defaults.themes;
        }

        @CustomType.Setter
        public Builder brandId(String brandId) {
            if (brandId == null) {
              throw new MissingRequiredPropertyException("GetThemesResult", "brandId");
            }
            this.brandId = brandId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetThemesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder themes(List<GetThemesTheme> themes) {
            if (themes == null) {
              throw new MissingRequiredPropertyException("GetThemesResult", "themes");
            }
            this.themes = themes;
            return this;
        }
        public Builder themes(GetThemesTheme... themes) {
            return themes(List.of(themes));
        }
        public GetThemesResult build() {
            final var _resultValue = new GetThemesResult();
            _resultValue.brandId = brandId;
            _resultValue.id = id;
            _resultValue.themes = themes;
            return _resultValue;
        }
    }
}

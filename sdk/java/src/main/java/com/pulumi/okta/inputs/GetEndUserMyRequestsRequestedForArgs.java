// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.okta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetEndUserMyRequestsRequestedForArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetEndUserMyRequestsRequestedForArgs Empty = new GetEndUserMyRequestsRequestedForArgs();

    /**
     * The Okta user id
     * 
     */
    @Import(name="externalId", required=true)
    private Output<String> externalId;

    /**
     * @return The Okta user id
     * 
     */
    public Output<String> externalId() {
        return this.externalId;
    }

    /**
     * The type of principal
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of principal
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private GetEndUserMyRequestsRequestedForArgs() {}

    private GetEndUserMyRequestsRequestedForArgs(GetEndUserMyRequestsRequestedForArgs $) {
        this.externalId = $.externalId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEndUserMyRequestsRequestedForArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEndUserMyRequestsRequestedForArgs $;

        public Builder() {
            $ = new GetEndUserMyRequestsRequestedForArgs();
        }

        public Builder(GetEndUserMyRequestsRequestedForArgs defaults) {
            $ = new GetEndUserMyRequestsRequestedForArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param externalId The Okta user id
         * 
         * @return builder
         * 
         */
        public Builder externalId(Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param externalId The Okta user id
         * 
         * @return builder
         * 
         */
        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        /**
         * @param type The type of principal
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of principal
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetEndUserMyRequestsRequestedForArgs build() {
            if ($.externalId == null) {
                throw new MissingRequiredPropertyException("GetEndUserMyRequestsRequestedForArgs", "externalId");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetEndUserMyRequestsRequestedForArgs", "type");
            }
            return $;
        }
    }

}

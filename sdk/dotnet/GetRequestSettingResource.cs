// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    public static class GetRequestSettingResource
    {
        /// <summary>
        /// Retrieves the request settings for a resource.
        /// 
        /// ## Example Usage
        /// </summary>
        public static Task<GetRequestSettingResourceResult> InvokeAsync(GetRequestSettingResourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRequestSettingResourceResult>("okta:index/getRequestSettingResource:getRequestSettingResource", args ?? new GetRequestSettingResourceArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the request settings for a resource.
        /// 
        /// ## Example Usage
        /// </summary>
        public static Output<GetRequestSettingResourceResult> Invoke(GetRequestSettingResourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRequestSettingResourceResult>("okta:index/getRequestSettingResource:getRequestSettingResource", args ?? new GetRequestSettingResourceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the request settings for a resource.
        /// 
        /// ## Example Usage
        /// </summary>
        public static Output<GetRequestSettingResourceResult> Invoke(GetRequestSettingResourceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRequestSettingResourceResult>("okta:index/getRequestSettingResource:getRequestSettingResource", args ?? new GetRequestSettingResourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRequestSettingResourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource ID of the request settings to retrieve. This is the unique identifier for the resource in Okta.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// Risk settings for the resource.
        /// </summary>
        [Input("requestOnBehalfOfSettings")]
        public Inputs.GetRequestSettingResourceRequestOnBehalfOfSettingsArgs? RequestOnBehalfOfSettings { get; set; }

        /// <summary>
        /// Risk settings for the resource.
        /// </summary>
        [Input("riskSettings")]
        public Inputs.GetRequestSettingResourceRiskSettingsArgs? RiskSettings { get; set; }

        /// <summary>
        /// Specifies if and for whom a requester may request the resource for.
        /// </summary>
        [Input("validAccessDurationSettings")]
        public Inputs.GetRequestSettingResourceValidAccessDurationSettingsArgs? ValidAccessDurationSettings { get; set; }

        [Input("validAccessScopeSettings")]
        private List<Inputs.GetRequestSettingResourceValidAccessScopeSettingArgs>? _validAccessScopeSettings;

        /// <summary>
        /// Risk settings for the resource.
        /// </summary>
        public List<Inputs.GetRequestSettingResourceValidAccessScopeSettingArgs> ValidAccessScopeSettings
        {
            get => _validAccessScopeSettings ?? (_validAccessScopeSettings = new List<Inputs.GetRequestSettingResourceValidAccessScopeSettingArgs>());
            set => _validAccessScopeSettings = value;
        }

        [Input("validRequesterSettings")]
        private List<Inputs.GetRequestSettingResourceValidRequesterSettingArgs>? _validRequesterSettings;

        /// <summary>
        /// Risk settings for the resource.
        /// </summary>
        public List<Inputs.GetRequestSettingResourceValidRequesterSettingArgs> ValidRequesterSettings
        {
            get => _validRequesterSettings ?? (_validRequesterSettings = new List<Inputs.GetRequestSettingResourceValidRequesterSettingArgs>());
            set => _validRequesterSettings = value;
        }

        public GetRequestSettingResourceArgs()
        {
        }
        public static new GetRequestSettingResourceArgs Empty => new GetRequestSettingResourceArgs();
    }

    public sealed class GetRequestSettingResourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource ID of the request settings to retrieve. This is the unique identifier for the resource in Okta.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Risk settings for the resource.
        /// </summary>
        [Input("requestOnBehalfOfSettings")]
        public Input<Inputs.GetRequestSettingResourceRequestOnBehalfOfSettingsInputArgs>? RequestOnBehalfOfSettings { get; set; }

        /// <summary>
        /// Risk settings for the resource.
        /// </summary>
        [Input("riskSettings")]
        public Input<Inputs.GetRequestSettingResourceRiskSettingsInputArgs>? RiskSettings { get; set; }

        /// <summary>
        /// Specifies if and for whom a requester may request the resource for.
        /// </summary>
        [Input("validAccessDurationSettings")]
        public Input<Inputs.GetRequestSettingResourceValidAccessDurationSettingsInputArgs>? ValidAccessDurationSettings { get; set; }

        [Input("validAccessScopeSettings")]
        private InputList<Inputs.GetRequestSettingResourceValidAccessScopeSettingInputArgs>? _validAccessScopeSettings;

        /// <summary>
        /// Risk settings for the resource.
        /// </summary>
        public InputList<Inputs.GetRequestSettingResourceValidAccessScopeSettingInputArgs> ValidAccessScopeSettings
        {
            get => _validAccessScopeSettings ?? (_validAccessScopeSettings = new InputList<Inputs.GetRequestSettingResourceValidAccessScopeSettingInputArgs>());
            set => _validAccessScopeSettings = value;
        }

        [Input("validRequesterSettings")]
        private InputList<Inputs.GetRequestSettingResourceValidRequesterSettingInputArgs>? _validRequesterSettings;

        /// <summary>
        /// Risk settings for the resource.
        /// </summary>
        public InputList<Inputs.GetRequestSettingResourceValidRequesterSettingInputArgs> ValidRequesterSettings
        {
            get => _validRequesterSettings ?? (_validRequesterSettings = new InputList<Inputs.GetRequestSettingResourceValidRequesterSettingInputArgs>());
            set => _validRequesterSettings = value;
        }

        public GetRequestSettingResourceInvokeArgs()
        {
        }
        public static new GetRequestSettingResourceInvokeArgs Empty => new GetRequestSettingResourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetRequestSettingResourceResult
    {
        /// <summary>
        /// The resource ID of the request settings to retrieve. This is the unique identifier for the resource in Okta.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Risk settings for the resource.
        /// </summary>
        public readonly Outputs.GetRequestSettingResourceRequestOnBehalfOfSettingsResult? RequestOnBehalfOfSettings;
        /// <summary>
        /// Risk settings for the resource.
        /// </summary>
        public readonly Outputs.GetRequestSettingResourceRiskSettingsResult? RiskSettings;
        /// <summary>
        /// Specifies if and for whom a requester may request the resource for.
        /// </summary>
        public readonly Outputs.GetRequestSettingResourceValidAccessDurationSettingsResult? ValidAccessDurationSettings;
        /// <summary>
        /// Risk settings for the resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRequestSettingResourceValidAccessScopeSettingResult> ValidAccessScopeSettings;
        /// <summary>
        /// Risk settings for the resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRequestSettingResourceValidRequesterSettingResult> ValidRequesterSettings;

        [OutputConstructor]
        private GetRequestSettingResourceResult(
            string id,

            Outputs.GetRequestSettingResourceRequestOnBehalfOfSettingsResult? requestOnBehalfOfSettings,

            Outputs.GetRequestSettingResourceRiskSettingsResult? riskSettings,

            Outputs.GetRequestSettingResourceValidAccessDurationSettingsResult? validAccessDurationSettings,

            ImmutableArray<Outputs.GetRequestSettingResourceValidAccessScopeSettingResult> validAccessScopeSettings,

            ImmutableArray<Outputs.GetRequestSettingResourceValidRequesterSettingResult> validRequesterSettings)
        {
            Id = id;
            RequestOnBehalfOfSettings = requestOnBehalfOfSettings;
            RiskSettings = riskSettings;
            ValidAccessDurationSettings = validAccessDurationSettings;
            ValidAccessScopeSettings = validAccessScopeSettings;
            ValidRequesterSettings = validRequesterSettings;
        }
    }
}

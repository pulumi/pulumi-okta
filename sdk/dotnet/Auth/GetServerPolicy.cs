// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Okta.Auth
{
    public static class GetServerPolicy
    {
        /// <summary>
        /// Use this data source to retrieve a authorization server policy from Okta.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Okta.Auth.GetServerPolicy.InvokeAsync(new Okta.Auth.GetServerPolicyArgs
        ///         {
        ///             AuthServerId = "&lt;auth server id&gt;",
        ///             Name = "staff",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServerPolicyResult> InvokeAsync(GetServerPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServerPolicyResult>("okta:auth/getServerPolicy:getServerPolicy", args ?? new GetServerPolicyArgs(), options.WithVersion());

        /// <summary>
        /// Use this data source to retrieve a authorization server policy from Okta.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Okta.Auth.GetServerPolicy.InvokeAsync(new Okta.Auth.GetServerPolicyArgs
        ///         {
        ///             AuthServerId = "&lt;auth server id&gt;",
        ///             Name = "staff",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServerPolicyResult> Invoke(GetServerPolicyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetServerPolicyResult>("okta:auth/getServerPolicy:getServerPolicy", args ?? new GetServerPolicyInvokeArgs(), options.WithVersion());
    }


    public sealed class GetServerPolicyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Auth Server.
        /// </summary>
        [Input("authServerId", required: true)]
        public string AuthServerId { get; set; } = null!;

        /// <summary>
        /// Name of policy to retrieve.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetServerPolicyArgs()
        {
        }
    }

    public sealed class GetServerPolicyInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Auth Server.
        /// </summary>
        [Input("authServerId", required: true)]
        public Input<string> AuthServerId { get; set; } = null!;

        /// <summary>
        /// Name of policy to retrieve.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetServerPolicyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServerPolicyResult
    {
        /// <summary>
        /// list of clients this policy is assigned to. `["ALL_CLIENTS"]` is a special value when policy is assigned to all clients.
        /// </summary>
        public readonly ImmutableArray<string> AssignedClients;
        public readonly string AuthServerId;
        /// <summary>
        /// description of authorization server policy.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetServerPolicyResult(
            ImmutableArray<string> assignedClients,

            string authServerId,

            string description,

            string id,

            string name)
        {
            AssignedClients = assignedClients;
            AuthServerId = authServerId;
            Description = description;
            Id = id;
            Name = name;
        }
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta.Auth
{
    public static class GetServerScopes
    {
        /// <summary>
        /// Use this data source to retrieve a list of authorization server scopes from Okta.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Okta.Auth.GetServerScopes.Invoke(new()
        ///     {
        ///         AuthServerId = "default",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServerScopesResult> InvokeAsync(GetServerScopesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServerScopesResult>("okta:auth/getServerScopes:getServerScopes", args ?? new GetServerScopesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve a list of authorization server scopes from Okta.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Okta.Auth.GetServerScopes.Invoke(new()
        ///     {
        ///         AuthServerId = "default",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServerScopesResult> Invoke(GetServerScopesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServerScopesResult>("okta:auth/getServerScopes:getServerScopes", args ?? new GetServerScopesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServerScopesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Auth server ID.
        /// </summary>
        [Input("authServerId", required: true)]
        public string AuthServerId { get; set; } = null!;

        public GetServerScopesArgs()
        {
        }
        public static new GetServerScopesArgs Empty => new GetServerScopesArgs();
    }

    public sealed class GetServerScopesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Auth server ID.
        /// </summary>
        [Input("authServerId", required: true)]
        public Input<string> AuthServerId { get; set; } = null!;

        public GetServerScopesInvokeArgs()
        {
        }
        public static new GetServerScopesInvokeArgs Empty => new GetServerScopesInvokeArgs();
    }


    [OutputType]
    public sealed class GetServerScopesResult
    {
        public readonly string AuthServerId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// collection of authorization server scopes retrieved from Okta with the following properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServerScopesScopeResult> Scopes;

        [OutputConstructor]
        private GetServerScopesResult(
            string authServerId,

            string id,

            ImmutableArray<Outputs.GetServerScopesScopeResult> scopes)
        {
            AuthServerId = authServerId;
            Id = id;
            Scopes = scopes;
        }
    }
}

// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    public static class GetRequestSettingOrganization
    {
        /// <summary>
        /// Retrieves the request settings for the org.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Okta.GetRequestSettingOrganization.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRequestSettingOrganizationResult> InvokeAsync(GetRequestSettingOrganizationArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRequestSettingOrganizationResult>("okta:index/getRequestSettingOrganization:getRequestSettingOrganization", args ?? new GetRequestSettingOrganizationArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the request settings for the org.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Okta.GetRequestSettingOrganization.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRequestSettingOrganizationResult> Invoke(GetRequestSettingOrganizationInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRequestSettingOrganizationResult>("okta:index/getRequestSettingOrganization:getRequestSettingOrganization", args ?? new GetRequestSettingOrganizationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the request settings for the org.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Okta.GetRequestSettingOrganization.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRequestSettingOrganizationResult> Invoke(GetRequestSettingOrganizationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRequestSettingOrganizationResult>("okta:index/getRequestSettingOrganization:getRequestSettingOrganization", args ?? new GetRequestSettingOrganizationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRequestSettingOrganizationArgs : global::Pulumi.InvokeArgs
    {
        [Input("requestExperiences")]
        private List<Inputs.GetRequestSettingOrganizationRequestExperienceArgs>? _requestExperiences;
        public List<Inputs.GetRequestSettingOrganizationRequestExperienceArgs> RequestExperiences
        {
            get => _requestExperiences ?? (_requestExperiences = new List<Inputs.GetRequestSettingOrganizationRequestExperienceArgs>());
            set => _requestExperiences = value;
        }

        public GetRequestSettingOrganizationArgs()
        {
        }
        public static new GetRequestSettingOrganizationArgs Empty => new GetRequestSettingOrganizationArgs();
    }

    public sealed class GetRequestSettingOrganizationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("requestExperiences")]
        private InputList<Inputs.GetRequestSettingOrganizationRequestExperienceInputArgs>? _requestExperiences;
        public InputList<Inputs.GetRequestSettingOrganizationRequestExperienceInputArgs> RequestExperiences
        {
            get => _requestExperiences ?? (_requestExperiences = new InputList<Inputs.GetRequestSettingOrganizationRequestExperienceInputArgs>());
            set => _requestExperiences = value;
        }

        public GetRequestSettingOrganizationInvokeArgs()
        {
        }
        public static new GetRequestSettingOrganizationInvokeArgs Empty => new GetRequestSettingOrganizationInvokeArgs();
    }


    [OutputType]
    public sealed class GetRequestSettingOrganizationResult
    {
        public readonly string Id;
        public readonly bool LongTimePastProvisioned;
        public readonly string ProvisioningStatus;
        public readonly ImmutableArray<Outputs.GetRequestSettingOrganizationRequestExperienceResult> RequestExperiences;
        public readonly bool SubprocessorsAcknowledged;

        [OutputConstructor]
        private GetRequestSettingOrganizationResult(
            string id,

            bool longTimePastProvisioned,

            string provisioningStatus,

            ImmutableArray<Outputs.GetRequestSettingOrganizationRequestExperienceResult> requestExperiences,

            bool subprocessorsAcknowledged)
        {
            Id = id;
            LongTimePastProvisioned = longTimePastProvisioned;
            ProvisioningStatus = provisioningStatus;
            RequestExperiences = requestExperiences;
            SubprocessorsAcknowledged = subprocessorsAcknowledged;
        }
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    public static class GetNetworkZone
    {
        /// <summary>
        /// Use this data source to retrieve a network zone from Okta.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Okta.GetNetworkZone.Invoke(new()
        ///     {
        ///         Name = "Block Antarctica",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetNetworkZoneResult> InvokeAsync(GetNetworkZoneArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkZoneResult>("okta:index/getNetworkZone:getNetworkZone", args ?? new GetNetworkZoneArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve a network zone from Okta.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Okta.GetNetworkZone.Invoke(new()
        ///     {
        ///         Name = "Block Antarctica",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetNetworkZoneResult> Invoke(GetNetworkZoneInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkZoneResult>("okta:index/getNetworkZone:getNetworkZone", args ?? new GetNetworkZoneInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkZoneArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the network zone to retrieve, conflicts with `name`.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Name of the network zone to retrieve, conflicts with `id`.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetNetworkZoneArgs()
        {
        }
        public static new GetNetworkZoneArgs Empty => new GetNetworkZoneArgs();
    }

    public sealed class GetNetworkZoneInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the network zone to retrieve, conflicts with `name`.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Name of the network zone to retrieve, conflicts with `id`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetNetworkZoneInvokeArgs()
        {
        }
        public static new GetNetworkZoneInvokeArgs Empty => new GetNetworkZoneInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkZoneResult
    {
        /// <summary>
        /// Array of Autonomous System Numbers.
        /// </summary>
        public readonly ImmutableArray<string> Asns;
        /// <summary>
        /// Array of locations.
        /// </summary>
        public readonly ImmutableArray<string> DynamicLocations;
        /// <summary>
        /// Type of proxy being controlled by this dynamic network zone.
        /// </summary>
        public readonly string DynamicProxyType;
        /// <summary>
        /// Array of values in CIDR/range form.
        /// </summary>
        public readonly ImmutableArray<string> Gateways;
        /// <summary>
        /// ID of the network zone.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Name of the network zone.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Array of values in CIDR/range form.
        /// </summary>
        public readonly ImmutableArray<string> Proxies;
        /// <summary>
        /// Type of the Network Zone.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Usage of the Network Zone.
        /// </summary>
        public readonly string Usage;

        [OutputConstructor]
        private GetNetworkZoneResult(
            ImmutableArray<string> asns,

            ImmutableArray<string> dynamicLocations,

            string dynamicProxyType,

            ImmutableArray<string> gateways,

            string? id,

            string? name,

            ImmutableArray<string> proxies,

            string type,

            string usage)
        {
            Asns = asns;
            DynamicLocations = dynamicLocations;
            DynamicProxyType = dynamicProxyType;
            Gateways = gateways;
            Id = id;
            Name = name;
            Proxies = proxies;
            Type = type;
            Usage = usage;
        }
    }
}

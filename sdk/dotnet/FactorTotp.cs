// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    [OktaResourceType("okta:index/factorTotp:FactorTotp")]
    public partial class FactorTotp : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Clock drift interval
        /// </summary>
        [Output("clockDriftInterval")]
        public Output<int?> ClockDriftInterval { get; private set; } = null!;

        /// <summary>
        /// Hash-based message authentication code algorithm
        /// </summary>
        [Output("hmacAlgorithm")]
        public Output<string?> HmacAlgorithm { get; private set; } = null!;

        /// <summary>
        /// The TOTP name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Length of the password. Default is `6`.
        /// </summary>
        [Output("otpLength")]
        public Output<int?> OtpLength { get; private set; } = null!;

        /// <summary>
        /// Shared secret encoding
        /// </summary>
        [Output("sharedSecretEncoding")]
        public Output<string?> SharedSecretEncoding { get; private set; } = null!;

        /// <summary>
        /// Time step in seconds
        /// </summary>
        [Output("timeStep")]
        public Output<int?> TimeStep { get; private set; } = null!;


        /// <summary>
        /// Create a FactorTotp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FactorTotp(string name, FactorTotpArgs? args = null, CustomResourceOptions? options = null)
            : base("okta:index/factorTotp:FactorTotp", name, args ?? new FactorTotpArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FactorTotp(string name, Input<string> id, FactorTotpState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/factorTotp:FactorTotp", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FactorTotp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FactorTotp Get(string name, Input<string> id, FactorTotpState? state = null, CustomResourceOptions? options = null)
        {
            return new FactorTotp(name, id, state, options);
        }
    }

    public sealed class FactorTotpArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Clock drift interval
        /// </summary>
        [Input("clockDriftInterval")]
        public Input<int>? ClockDriftInterval { get; set; }

        /// <summary>
        /// Hash-based message authentication code algorithm
        /// </summary>
        [Input("hmacAlgorithm")]
        public Input<string>? HmacAlgorithm { get; set; }

        /// <summary>
        /// The TOTP name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Length of the password. Default is `6`.
        /// </summary>
        [Input("otpLength")]
        public Input<int>? OtpLength { get; set; }

        /// <summary>
        /// Shared secret encoding
        /// </summary>
        [Input("sharedSecretEncoding")]
        public Input<string>? SharedSecretEncoding { get; set; }

        /// <summary>
        /// Time step in seconds
        /// </summary>
        [Input("timeStep")]
        public Input<int>? TimeStep { get; set; }

        public FactorTotpArgs()
        {
        }
        public static new FactorTotpArgs Empty => new FactorTotpArgs();
    }

    public sealed class FactorTotpState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Clock drift interval
        /// </summary>
        [Input("clockDriftInterval")]
        public Input<int>? ClockDriftInterval { get; set; }

        /// <summary>
        /// Hash-based message authentication code algorithm
        /// </summary>
        [Input("hmacAlgorithm")]
        public Input<string>? HmacAlgorithm { get; set; }

        /// <summary>
        /// The TOTP name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Length of the password. Default is `6`.
        /// </summary>
        [Input("otpLength")]
        public Input<int>? OtpLength { get; set; }

        /// <summary>
        /// Shared secret encoding
        /// </summary>
        [Input("sharedSecretEncoding")]
        public Input<string>? SharedSecretEncoding { get; set; }

        /// <summary>
        /// Time step in seconds
        /// </summary>
        [Input("timeStep")]
        public Input<int>? TimeStep { get; set; }

        public FactorTotpState()
        {
        }
        public static new FactorTotpState Empty => new FactorTotpState();
    }
}

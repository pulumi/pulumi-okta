// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// Allows you to manage the time-based one-time password (TOTP) factors. A time-based one-time password (TOTP) is a
    /// 		temporary passcode that is generated for user authentication. Examples of TOTP include hardware authenticators and
    /// 		mobile app authenticators.
    /// 
    /// Once saved, the settings cannot be changed (except for the 'name' field). Any other change would force resource
    /// recreation.
    /// 
    /// &gt; IMPORTANT: Okta API does not allow deletion of the TOTP factors through the
    /// API. This provider will print a warning if it attempts to destroy the resource
    /// receives a 501 not implemented error from the API instead of outright failing.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Okta.FactorTotp("example", new()
    ///     {
    ///         Name = "example",
    ///         OtpLength = 10,
    ///         HmacAlgorithm = "HMacSHA256",
    ///         TimeStep = 30,
    ///         ClockDriftInterval = 10,
    ///         SharedSecretEncoding = "hexadecimal",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/factorTotp:FactorTotp")]
    public partial class FactorTotp : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Clock drift interval. This setting allows you to build in tolerance for any drift between the token's current time and the server's current time. Valid values: `3`, `5`, `10`. Default is `3`.
        /// </summary>
        [Output("clockDriftInterval")]
        public Output<int?> ClockDriftInterval { get; private set; } = null!;

        /// <summary>
        /// HMAC Algorithm. Valid values: `HMacSHA1`, `HMacSHA256`, `HMacSHA512`. Default is `HMacSHA512`.
        /// </summary>
        [Output("hmacAlgorithm")]
        public Output<string?> HmacAlgorithm { get; private set; } = null!;

        /// <summary>
        /// The TOTP name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Length of the password. Default is `6`.
        /// </summary>
        [Output("otpLength")]
        public Output<int?> OtpLength { get; private set; } = null!;

        /// <summary>
        /// Shared secret encoding. Valid values: `Base32`, `Base64`, `Hexadecimal`. Default is `Base32`.
        /// </summary>
        [Output("sharedSecretEncoding")]
        public Output<string?> SharedSecretEncoding { get; private set; } = null!;

        /// <summary>
        /// Time step in seconds. Valid values: `15`, `30`, `60`. Default is `15`.
        /// </summary>
        [Output("timeStep")]
        public Output<int?> TimeStep { get; private set; } = null!;


        /// <summary>
        /// Create a FactorTotp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FactorTotp(string name, FactorTotpArgs? args = null, CustomResourceOptions? options = null)
            : base("okta:index/factorTotp:FactorTotp", name, args ?? new FactorTotpArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FactorTotp(string name, Input<string> id, FactorTotpState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/factorTotp:FactorTotp", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FactorTotp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FactorTotp Get(string name, Input<string> id, FactorTotpState? state = null, CustomResourceOptions? options = null)
        {
            return new FactorTotp(name, id, state, options);
        }
    }

    public sealed class FactorTotpArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Clock drift interval. This setting allows you to build in tolerance for any drift between the token's current time and the server's current time. Valid values: `3`, `5`, `10`. Default is `3`.
        /// </summary>
        [Input("clockDriftInterval")]
        public Input<int>? ClockDriftInterval { get; set; }

        /// <summary>
        /// HMAC Algorithm. Valid values: `HMacSHA1`, `HMacSHA256`, `HMacSHA512`. Default is `HMacSHA512`.
        /// </summary>
        [Input("hmacAlgorithm")]
        public Input<string>? HmacAlgorithm { get; set; }

        /// <summary>
        /// The TOTP name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Length of the password. Default is `6`.
        /// </summary>
        [Input("otpLength")]
        public Input<int>? OtpLength { get; set; }

        /// <summary>
        /// Shared secret encoding. Valid values: `Base32`, `Base64`, `Hexadecimal`. Default is `Base32`.
        /// </summary>
        [Input("sharedSecretEncoding")]
        public Input<string>? SharedSecretEncoding { get; set; }

        /// <summary>
        /// Time step in seconds. Valid values: `15`, `30`, `60`. Default is `15`.
        /// </summary>
        [Input("timeStep")]
        public Input<int>? TimeStep { get; set; }

        public FactorTotpArgs()
        {
        }
        public static new FactorTotpArgs Empty => new FactorTotpArgs();
    }

    public sealed class FactorTotpState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Clock drift interval. This setting allows you to build in tolerance for any drift between the token's current time and the server's current time. Valid values: `3`, `5`, `10`. Default is `3`.
        /// </summary>
        [Input("clockDriftInterval")]
        public Input<int>? ClockDriftInterval { get; set; }

        /// <summary>
        /// HMAC Algorithm. Valid values: `HMacSHA1`, `HMacSHA256`, `HMacSHA512`. Default is `HMacSHA512`.
        /// </summary>
        [Input("hmacAlgorithm")]
        public Input<string>? HmacAlgorithm { get; set; }

        /// <summary>
        /// The TOTP name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Length of the password. Default is `6`.
        /// </summary>
        [Input("otpLength")]
        public Input<int>? OtpLength { get; set; }

        /// <summary>
        /// Shared secret encoding. Valid values: `Base32`, `Base64`, `Hexadecimal`. Default is `Base32`.
        /// </summary>
        [Input("sharedSecretEncoding")]
        public Input<string>? SharedSecretEncoding { get; set; }

        /// <summary>
        /// Time step in seconds. Valid values: `15`, `30`, `60`. Default is `15`.
        /// </summary>
        [Input("timeStep")]
        public Input<int>? TimeStep { get; set; }

        public FactorTotpState()
        {
        }
        public static new FactorTotpState Empty => new FactorTotpState();
    }
}

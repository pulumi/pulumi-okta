// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// Manages Profile Enrollment Policy Apps
    /// &gt; **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.
    /// This resource allows you to manage the apps in the Profile Enrollment Policy.
    /// **Important Notes:**
    ///  - Default Enrollment Policy can not be used in this resource since it is used as a policy to re-assign apps to when they are unassigned from this one.
    ///  - When re-assigning the app to another policy, please use 'depends_on' in the policy to which the app will be assigned. This is necessary to avoid
    ///      unexpected behavior, since if the app is unassigned from the policy it is just assigned to the 'Default' one.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = Okta.Policy.GetPolicy.Invoke(new()
    ///     {
    ///         Name = "My Policy",
    ///         Type = "PROFILE_ENROLLMENT",
    ///     });
    /// 
    ///     var test = Okta.App.GetApp.Invoke(new()
    ///     {
    ///         Label = "My App",
    ///     });
    /// 
    ///     var examplePolicyProfileEnrollmentApps = new Okta.PolicyProfileEnrollmentApps("example", new()
    ///     {
    ///         PolicyId = exampleOktaPolicy.Id,
    ///         Apps = new[]
    ///         {
    ///             id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import okta:index/policyProfileEnrollmentApps:PolicyProfileEnrollmentApps example &lt;policy_id&gt;
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/policyProfileEnrollmentApps:PolicyProfileEnrollmentApps")]
    public partial class PolicyProfileEnrollmentApps : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of app IDs to be added to this policy
        /// </summary>
        [Output("apps")]
        public Output<ImmutableArray<string>> Apps { get; private set; } = null!;

        /// <summary>
        /// ID of the Default Enrollment Policy. This policy is used as a policy to re-assign apps to when they are unassigned from this one
        /// </summary>
        [Output("defaultPolicyId")]
        public Output<string> DefaultPolicyId { get; private set; } = null!;

        /// <summary>
        /// ID of the enrollment policy.
        /// </summary>
        [Output("policyId")]
        public Output<string> PolicyId { get; private set; } = null!;


        /// <summary>
        /// Create a PolicyProfileEnrollmentApps resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PolicyProfileEnrollmentApps(string name, PolicyProfileEnrollmentAppsArgs args, CustomResourceOptions? options = null)
            : base("okta:index/policyProfileEnrollmentApps:PolicyProfileEnrollmentApps", name, args ?? new PolicyProfileEnrollmentAppsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PolicyProfileEnrollmentApps(string name, Input<string> id, PolicyProfileEnrollmentAppsState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/policyProfileEnrollmentApps:PolicyProfileEnrollmentApps", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PolicyProfileEnrollmentApps resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PolicyProfileEnrollmentApps Get(string name, Input<string> id, PolicyProfileEnrollmentAppsState? state = null, CustomResourceOptions? options = null)
        {
            return new PolicyProfileEnrollmentApps(name, id, state, options);
        }
    }

    public sealed class PolicyProfileEnrollmentAppsArgs : global::Pulumi.ResourceArgs
    {
        [Input("apps")]
        private InputList<string>? _apps;

        /// <summary>
        /// List of app IDs to be added to this policy
        /// </summary>
        public InputList<string> Apps
        {
            get => _apps ?? (_apps = new InputList<string>());
            set => _apps = value;
        }

        /// <summary>
        /// ID of the enrollment policy.
        /// </summary>
        [Input("policyId", required: true)]
        public Input<string> PolicyId { get; set; } = null!;

        public PolicyProfileEnrollmentAppsArgs()
        {
        }
        public static new PolicyProfileEnrollmentAppsArgs Empty => new PolicyProfileEnrollmentAppsArgs();
    }

    public sealed class PolicyProfileEnrollmentAppsState : global::Pulumi.ResourceArgs
    {
        [Input("apps")]
        private InputList<string>? _apps;

        /// <summary>
        /// List of app IDs to be added to this policy
        /// </summary>
        public InputList<string> Apps
        {
            get => _apps ?? (_apps = new InputList<string>());
            set => _apps = value;
        }

        /// <summary>
        /// ID of the Default Enrollment Policy. This policy is used as a policy to re-assign apps to when they are unassigned from this one
        /// </summary>
        [Input("defaultPolicyId")]
        public Input<string>? DefaultPolicyId { get; set; }

        /// <summary>
        /// ID of the enrollment policy.
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        public PolicyProfileEnrollmentAppsState()
        {
        }
        public static new PolicyProfileEnrollmentAppsState Empty => new PolicyProfileEnrollmentAppsState();
    }
}

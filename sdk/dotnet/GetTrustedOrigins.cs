// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    public static class GetTrustedOrigins
    {
        /// <summary>
        /// This resource allows you to retrieve a list of trusted origins from Okta.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Okta.GetTrustedOrigins.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetTrustedOriginsResult> InvokeAsync(GetTrustedOriginsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTrustedOriginsResult>("okta:index/getTrustedOrigins:getTrustedOrigins", args ?? new GetTrustedOriginsArgs(), options.WithDefaults());

        /// <summary>
        /// This resource allows you to retrieve a list of trusted origins from Okta.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Okta.GetTrustedOrigins.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetTrustedOriginsResult> Invoke(GetTrustedOriginsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTrustedOriginsResult>("okta:index/getTrustedOrigins:getTrustedOrigins", args ?? new GetTrustedOriginsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTrustedOriginsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter criteria (will be URL-encoded by the provider). See [Filtering](https://developer.okta.com/docs/reference/core-okta-api/#filter) for more information on the expressions used in filtering.
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        public GetTrustedOriginsArgs()
        {
        }
        public static new GetTrustedOriginsArgs Empty => new GetTrustedOriginsArgs();
    }

    public sealed class GetTrustedOriginsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter criteria (will be URL-encoded by the provider). See [Filtering](https://developer.okta.com/docs/reference/core-okta-api/#filter) for more information on the expressions used in filtering.
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        public GetTrustedOriginsInvokeArgs()
        {
        }
        public static new GetTrustedOriginsInvokeArgs Empty => new GetTrustedOriginsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTrustedOriginsResult
    {
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetTrustedOriginsTrustedOriginResult> TrustedOrigins;

        [OutputConstructor]
        private GetTrustedOriginsResult(
            string? filter,

            string id,

            ImmutableArray<Outputs.GetTrustedOriginsTrustedOriginResult> trustedOrigins)
        {
            Filter = filter;
            Id = id;
            TrustedOrigins = trustedOrigins;
        }
    }
}

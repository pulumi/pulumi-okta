// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// Manages users relationships. Link value operations allow you to create relationships between primary and associated users.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var padishah = new Okta.LinkDefinition("padishah", new()
    ///     {
    ///         PrimaryName = "emperor",
    ///         PrimaryTitle = "Emperor",
    ///         PrimaryDescription = "Hereditary ruler of the Imperium and the Known Universe",
    ///         AssociatedName = "sardaukar",
    ///         AssociatedTitle = "Sardaukar",
    ///         AssociatedDescription = "Elite military force member",
    ///     });
    /// 
    ///     var emperor = new Okta.User.User("emperor", new()
    ///     {
    ///         FirstName = "Shaddam",
    ///         LastName = "Corrino IV",
    ///         Login = "shaddam.corrino.iv@salusa-secundus.planet",
    ///         Email = "shaddam.corrino.iv@salusa-secundus.planet",
    ///     });
    /// 
    ///     var sardaukars = new List&lt;Okta.User.User&gt;();
    ///     for (var rangeIndex = 0; rangeIndex &lt; 5; rangeIndex++)
    ///     {
    ///         var range = new { Value = rangeIndex };
    ///         sardaukars.Add(new Okta.User.User($"sardaukars-{range.Value}", new()
    ///         {
    ///             FirstName = "Amrit",
    ///             LastName = $"Sardaukar_{range.Value}",
    ///             Login = $"amritsardaukar_{range.Value}@salusa-secundus.planet",
    ///             Email = $"amritsardaukar_{range.Value}@salusa-secundus.planet",
    ///         }));
    ///     }
    ///     var example = new Okta.LinkValue("example", new()
    ///     {
    ///         PrimaryName = padishah.PrimaryName,
    ///         PrimaryUserId = emperor.Id,
    ///         AssociatedUserIds = new[]
    ///         {
    ///             sardaukars[0].Id,
    ///             sardaukars[1].Id,
    ///             sardaukars[2].Id,
    ///             sardaukars[3].Id,
    ///             sardaukars[4].Id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import okta:index/linkValue:LinkValue example &lt;primary_name&gt;/&lt;primary_user_id&gt;
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/linkValue:LinkValue")]
    public partial class LinkValue : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Set of User IDs or login values of the users to be assigned the `associated` relationship.
        /// </summary>
        [Output("associatedUserIds")]
        public Output<ImmutableArray<string>> AssociatedUserIds { get; private set; } = null!;

        /// <summary>
        /// Name of the `primary` relationship being assigned.
        /// </summary>
        [Output("primaryName")]
        public Output<string> PrimaryName { get; private set; } = null!;

        /// <summary>
        /// User ID to be assigned to `primary` for the 'associated' user in the specified relationship.
        /// </summary>
        [Output("primaryUserId")]
        public Output<string> PrimaryUserId { get; private set; } = null!;


        /// <summary>
        /// Create a LinkValue resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LinkValue(string name, LinkValueArgs args, CustomResourceOptions? options = null)
            : base("okta:index/linkValue:LinkValue", name, args ?? new LinkValueArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LinkValue(string name, Input<string> id, LinkValueState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/linkValue:LinkValue", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LinkValue resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LinkValue Get(string name, Input<string> id, LinkValueState? state = null, CustomResourceOptions? options = null)
        {
            return new LinkValue(name, id, state, options);
        }
    }

    public sealed class LinkValueArgs : global::Pulumi.ResourceArgs
    {
        [Input("associatedUserIds")]
        private InputList<string>? _associatedUserIds;

        /// <summary>
        /// Set of User IDs or login values of the users to be assigned the `associated` relationship.
        /// </summary>
        public InputList<string> AssociatedUserIds
        {
            get => _associatedUserIds ?? (_associatedUserIds = new InputList<string>());
            set => _associatedUserIds = value;
        }

        /// <summary>
        /// Name of the `primary` relationship being assigned.
        /// </summary>
        [Input("primaryName", required: true)]
        public Input<string> PrimaryName { get; set; } = null!;

        /// <summary>
        /// User ID to be assigned to `primary` for the 'associated' user in the specified relationship.
        /// </summary>
        [Input("primaryUserId", required: true)]
        public Input<string> PrimaryUserId { get; set; } = null!;

        public LinkValueArgs()
        {
        }
        public static new LinkValueArgs Empty => new LinkValueArgs();
    }

    public sealed class LinkValueState : global::Pulumi.ResourceArgs
    {
        [Input("associatedUserIds")]
        private InputList<string>? _associatedUserIds;

        /// <summary>
        /// Set of User IDs or login values of the users to be assigned the `associated` relationship.
        /// </summary>
        public InputList<string> AssociatedUserIds
        {
            get => _associatedUserIds ?? (_associatedUserIds = new InputList<string>());
            set => _associatedUserIds = value;
        }

        /// <summary>
        /// Name of the `primary` relationship being assigned.
        /// </summary>
        [Input("primaryName")]
        public Input<string>? PrimaryName { get; set; }

        /// <summary>
        /// User ID to be assigned to `primary` for the 'associated' user in the specified relationship.
        /// </summary>
        [Input("primaryUserId")]
        public Input<string>? PrimaryUserId { get; set; }

        public LinkValueState()
        {
        }
        public static new LinkValueState Empty => new LinkValueState();
    }
}

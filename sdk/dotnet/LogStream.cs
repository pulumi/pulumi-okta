// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// Creates an Okta Log Stream.
    /// 
    /// This resource allows you to create and configure an Okta Log Stream.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Okta Log Stream can be imported via the Okta ID.
    /// 
    /// ```sh
    /// $ pulumi import okta:index/logStream:LogStream example &amp;#60;strema id&amp;#62;
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/logStream:LogStream")]
    public partial class LogStream : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the Log Stream Resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Stream provider specific configuration.
        /// </summary>
        [Output("settings")]
        public Output<Outputs.LogStreamSettings?> Settings { get; private set; } = null!;

        /// <summary>
        /// Log Stream Status - can either be ACTIVE or INACTIVE only. Default is ACTIVE.
        /// </summary>
        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;

        /// <summary>
        /// Type of the Log Stream - can either be `"aws_eventbridge"` or `"splunk_cloud_logstreaming"` only.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a LogStream resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogStream(string name, LogStreamArgs args, CustomResourceOptions? options = null)
            : base("okta:index/logStream:LogStream", name, args ?? new LogStreamArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogStream(string name, Input<string> id, LogStreamState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/logStream:LogStream", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogStream resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogStream Get(string name, Input<string> id, LogStreamState? state = null, CustomResourceOptions? options = null)
        {
            return new LogStream(name, id, state, options);
        }
    }

    public sealed class LogStreamArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the Log Stream Resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Stream provider specific configuration.
        /// </summary>
        [Input("settings")]
        public Input<Inputs.LogStreamSettingsArgs>? Settings { get; set; }

        /// <summary>
        /// Log Stream Status - can either be ACTIVE or INACTIVE only. Default is ACTIVE.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Type of the Log Stream - can either be `"aws_eventbridge"` or `"splunk_cloud_logstreaming"` only.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public LogStreamArgs()
        {
        }
        public static new LogStreamArgs Empty => new LogStreamArgs();
    }

    public sealed class LogStreamState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the Log Stream Resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Stream provider specific configuration.
        /// </summary>
        [Input("settings")]
        public Input<Inputs.LogStreamSettingsGetArgs>? Settings { get; set; }

        /// <summary>
        /// Log Stream Status - can either be ACTIVE or INACTIVE only. Default is ACTIVE.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Type of the Log Stream - can either be `"aws_eventbridge"` or `"splunk_cloud_logstreaming"` only.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public LogStreamState()
        {
        }
        public static new LogStreamState Empty => new LogStreamState();
    }
}

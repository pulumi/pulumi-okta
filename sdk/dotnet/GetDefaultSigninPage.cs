// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    public static class GetDefaultSigninPage
    {
        /// <summary>
        /// Retrieve the default signin page of a brand
        /// </summary>
        public static Task<GetDefaultSigninPageResult> InvokeAsync(GetDefaultSigninPageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDefaultSigninPageResult>("okta:index/getDefaultSigninPage:getDefaultSigninPage", args ?? new GetDefaultSigninPageArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve the default signin page of a brand
        /// </summary>
        public static Output<GetDefaultSigninPageResult> Invoke(GetDefaultSigninPageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDefaultSigninPageResult>("okta:index/getDefaultSigninPage:getDefaultSigninPage", args ?? new GetDefaultSigninPageInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve the default signin page of a brand
        /// </summary>
        public static Output<GetDefaultSigninPageResult> Invoke(GetDefaultSigninPageInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDefaultSigninPageResult>("okta:index/getDefaultSigninPage:getDefaultSigninPage", args ?? new GetDefaultSigninPageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDefaultSigninPageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// brand id of the preview signin page
        /// </summary>
        [Input("brandId", required: true)]
        public string BrandId { get; set; } = null!;

        [Input("contentSecurityPolicySetting")]
        public Inputs.GetDefaultSigninPageContentSecurityPolicySettingArgs? ContentSecurityPolicySetting { get; set; }

        [Input("widgetCustomizations")]
        public Inputs.GetDefaultSigninPageWidgetCustomizationsArgs? WidgetCustomizations { get; set; }

        public GetDefaultSigninPageArgs()
        {
        }
        public static new GetDefaultSigninPageArgs Empty => new GetDefaultSigninPageArgs();
    }

    public sealed class GetDefaultSigninPageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// brand id of the preview signin page
        /// </summary>
        [Input("brandId", required: true)]
        public Input<string> BrandId { get; set; } = null!;

        [Input("contentSecurityPolicySetting")]
        public Input<Inputs.GetDefaultSigninPageContentSecurityPolicySettingInputArgs>? ContentSecurityPolicySetting { get; set; }

        [Input("widgetCustomizations")]
        public Input<Inputs.GetDefaultSigninPageWidgetCustomizationsInputArgs>? WidgetCustomizations { get; set; }

        public GetDefaultSigninPageInvokeArgs()
        {
        }
        public static new GetDefaultSigninPageInvokeArgs Empty => new GetDefaultSigninPageInvokeArgs();
    }


    [OutputType]
    public sealed class GetDefaultSigninPageResult
    {
        /// <summary>
        /// brand id of the preview signin page
        /// </summary>
        public readonly string BrandId;
        public readonly Outputs.GetDefaultSigninPageContentSecurityPolicySettingResult? ContentSecurityPolicySetting;
        /// <summary>
        /// placeholder id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// page content of the preview signin page
        /// </summary>
        public readonly string PageContent;
        public readonly Outputs.GetDefaultSigninPageWidgetCustomizationsResult? WidgetCustomizations;
        /// <summary>
        /// widget version specified as a Semver
        /// </summary>
        public readonly string WidgetVersion;

        [OutputConstructor]
        private GetDefaultSigninPageResult(
            string brandId,

            Outputs.GetDefaultSigninPageContentSecurityPolicySettingResult? contentSecurityPolicySetting,

            string id,

            string pageContent,

            Outputs.GetDefaultSigninPageWidgetCustomizationsResult? widgetCustomizations,

            string widgetVersion)
        {
            BrandId = brandId;
            ContentSecurityPolicySetting = contentSecurityPolicySetting;
            Id = id;
            PageContent = pageContent;
            WidgetCustomizations = widgetCustomizations;
            WidgetVersion = widgetVersion;
        }
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// Resource to manage a set of group memberships for a specific group.
    /// </summary>
    [OktaResourceType("okta:index/groupMemberships:GroupMemberships")]
    public partial class GroupMemberships : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of a Okta group.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// The resource concerns itself with all users added/deleted to the group; even those managed outside of the resource.
        /// </summary>
        [Output("trackAllUsers")]
        public Output<bool?> TrackAllUsers { get; private set; } = null!;

        /// <summary>
        /// The list of Okta user IDs which the group should have membership managed for.
        /// </summary>
        [Output("users")]
        public Output<ImmutableArray<string>> Users { get; private set; } = null!;


        /// <summary>
        /// Create a GroupMemberships resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GroupMemberships(string name, GroupMembershipsArgs args, CustomResourceOptions? options = null)
            : base("okta:index/groupMemberships:GroupMemberships", name, args ?? new GroupMembershipsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GroupMemberships(string name, Input<string> id, GroupMembershipsState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/groupMemberships:GroupMemberships", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GroupMemberships resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GroupMemberships Get(string name, Input<string> id, GroupMembershipsState? state = null, CustomResourceOptions? options = null)
        {
            return new GroupMemberships(name, id, state, options);
        }
    }

    public sealed class GroupMembershipsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of a Okta group.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// The resource concerns itself with all users added/deleted to the group; even those managed outside of the resource.
        /// </summary>
        [Input("trackAllUsers")]
        public Input<bool>? TrackAllUsers { get; set; }

        [Input("users", required: true)]
        private InputList<string>? _users;

        /// <summary>
        /// The list of Okta user IDs which the group should have membership managed for.
        /// </summary>
        public InputList<string> Users
        {
            get => _users ?? (_users = new InputList<string>());
            set => _users = value;
        }

        public GroupMembershipsArgs()
        {
        }
        public static new GroupMembershipsArgs Empty => new GroupMembershipsArgs();
    }

    public sealed class GroupMembershipsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of a Okta group.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// The resource concerns itself with all users added/deleted to the group; even those managed outside of the resource.
        /// </summary>
        [Input("trackAllUsers")]
        public Input<bool>? TrackAllUsers { get; set; }

        [Input("users")]
        private InputList<string>? _users;

        /// <summary>
        /// The list of Okta user IDs which the group should have membership managed for.
        /// </summary>
        public InputList<string> Users
        {
            get => _users ?? (_users = new InputList<string>());
            set => _users = value;
        }

        public GroupMembershipsState()
        {
        }
        public static new GroupMembershipsState Empty => new GroupMembershipsState();
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    public static class GetAppGroupAssignments
    {
        /// <summary>
        /// Use this data source to retrieve the list of groups assigned to the given Okta application (by ID).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Okta.GetAppGroupAssignments.InvokeAsync(new Okta.GetAppGroupAssignmentsArgs
        ///         {
        ///             Id = okta_app_oauth.Test.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAppGroupAssignmentsResult> InvokeAsync(GetAppGroupAssignmentsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAppGroupAssignmentsResult>("okta:index/getAppGroupAssignments:getAppGroupAssignments", args ?? new GetAppGroupAssignmentsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve the list of groups assigned to the given Okta application (by ID).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Okta.GetAppGroupAssignments.InvokeAsync(new Okta.GetAppGroupAssignmentsArgs
        ///         {
        ///             Id = okta_app_oauth.Test.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAppGroupAssignmentsResult> Invoke(GetAppGroupAssignmentsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAppGroupAssignmentsResult>("okta:index/getAppGroupAssignments:getAppGroupAssignments", args ?? new GetAppGroupAssignmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppGroupAssignmentsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Okta application you want to retrieve the groups for.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetAppGroupAssignmentsArgs()
        {
        }
    }

    public sealed class GetAppGroupAssignmentsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Okta application you want to retrieve the groups for.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetAppGroupAssignmentsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAppGroupAssignmentsResult
    {
        /// <summary>
        /// List of groups IDs assigned to the application.
        /// </summary>
        public readonly ImmutableArray<string> Groups;
        /// <summary>
        /// ID of application.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetAppGroupAssignmentsResult(
            ImmutableArray<string> groups,

            string id)
        {
            Groups = groups;
            Id = id;
        }
    }
}

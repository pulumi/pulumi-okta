// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Okta.Group
{
    public static class GetGroup
    {
        /// <summary>
        /// Use this data source to retrieve a group from Okta.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Okta.Group.GetGroup.InvokeAsync(new Okta.Group.GetGroupArgs
        ///         {
        ///             Name = "Example App",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGroupResult> InvokeAsync(GetGroupArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGroupResult>("okta:group/getGroup:getGroup", args ?? new GetGroupArgs(), options.WithVersion());

        /// <summary>
        /// Use this data source to retrieve a group from Okta.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Okta.Group.GetGroup.InvokeAsync(new Okta.Group.GetGroupArgs
        ///         {
        ///             Name = "Example App",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetGroupResult> Invoke(GetGroupInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetGroupResult>("okta:group/getGroup:getGroup", args ?? new GetGroupInvokeArgs(), options.WithVersion());
    }


    public sealed class GetGroupArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the group. Conflicts with `"name"` and `"type"`.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// whether to retrieve all member ids.
        /// </summary>
        [Input("includeUsers")]
        public bool? IncludeUsers { get; set; }

        /// <summary>
        /// name of group to retrieve.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// type of the group to retrieve. Can only be one of `OKTA_GROUP` (Native Okta Groups), `APP_GROUP`
        /// (Imported App Groups), or `BUILT_IN` (Okta System Groups).
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetGroupArgs()
        {
        }
    }

    public sealed class GetGroupInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the group. Conflicts with `"name"` and `"type"`.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// whether to retrieve all member ids.
        /// </summary>
        [Input("includeUsers")]
        public Input<bool>? IncludeUsers { get; set; }

        /// <summary>
        /// name of group to retrieve.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// type of the group to retrieve. Can only be one of `OKTA_GROUP` (Native Okta Groups), `APP_GROUP`
        /// (Imported App Groups), or `BUILT_IN` (Okta System Groups).
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetGroupInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGroupResult
    {
        /// <summary>
        /// description of group.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// ID of group.
        /// </summary>
        public readonly string? Id;
        public readonly bool? IncludeUsers;
        /// <summary>
        /// name of group.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// type of group.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// user ids that are members of this group, only included if `include_users` is set to `true`.
        /// </summary>
        public readonly ImmutableArray<string> Users;

        [OutputConstructor]
        private GetGroupResult(
            string description,

            string? id,

            bool? includeUsers,

            string? name,

            string? type,

            ImmutableArray<string> users)
        {
            Description = description;
            Id = id;
            IncludeUsers = includeUsers;
            Name = name;
            Type = type;
            Users = users;
        }
    }
}

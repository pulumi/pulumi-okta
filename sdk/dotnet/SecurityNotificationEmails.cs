// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// Manages Security Notification Emails
    /// 		This resource allows you to configure Security Notification Emails.
    /// 		&gt; **WARNING:** This resource is available only when using a SSWS API token in the provider config, it is incompatible with OAuth 2.0 authentication.
    /// 		&gt; **WARNING:** This resource makes use of an internal/private Okta API endpoint that could change without notice rendering this resource inoperable.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Okta.SecurityNotificationEmails("example", new()
    ///     {
    ///         ReportSuspiciousActivityEnabled = true,
    ///         SendEmailForFactorEnrollmentEnabled = true,
    ///         SendEmailForFactorResetEnabled = true,
    ///         SendEmailForNewDeviceEnabled = true,
    ///         SendEmailForPasswordChangedEnabled = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import okta:index/securityNotificationEmails:SecurityNotificationEmails example _
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/securityNotificationEmails:SecurityNotificationEmails")]
    public partial class SecurityNotificationEmails : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Notifies end users about suspicious or unrecognized activity from their account. Default is `true`.
        /// </summary>
        [Output("reportSuspiciousActivityEnabled")]
        public Output<bool?> ReportSuspiciousActivityEnabled { get; private set; } = null!;

        /// <summary>
        /// Notifies end users of any activity on their account related to MFA factor enrollment. Default is `true`.
        /// </summary>
        [Output("sendEmailForFactorEnrollmentEnabled")]
        public Output<bool?> SendEmailForFactorEnrollmentEnabled { get; private set; } = null!;

        /// <summary>
        /// Notifies end users that one or more factors have been reset for their account. Default is `true`.
        /// </summary>
        [Output("sendEmailForFactorResetEnabled")]
        public Output<bool?> SendEmailForFactorResetEnabled { get; private set; } = null!;

        /// <summary>
        /// Notifies end users about new sign-on activity. Default is `true`.
        /// </summary>
        [Output("sendEmailForNewDeviceEnabled")]
        public Output<bool?> SendEmailForNewDeviceEnabled { get; private set; } = null!;

        /// <summary>
        /// Notifies end users that the password for their account has changed. Default is `true`.
        /// </summary>
        [Output("sendEmailForPasswordChangedEnabled")]
        public Output<bool?> SendEmailForPasswordChangedEnabled { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityNotificationEmails resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityNotificationEmails(string name, SecurityNotificationEmailsArgs? args = null, CustomResourceOptions? options = null)
            : base("okta:index/securityNotificationEmails:SecurityNotificationEmails", name, args ?? new SecurityNotificationEmailsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityNotificationEmails(string name, Input<string> id, SecurityNotificationEmailsState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/securityNotificationEmails:SecurityNotificationEmails", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityNotificationEmails resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityNotificationEmails Get(string name, Input<string> id, SecurityNotificationEmailsState? state = null, CustomResourceOptions? options = null)
        {
            return new SecurityNotificationEmails(name, id, state, options);
        }
    }

    public sealed class SecurityNotificationEmailsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Notifies end users about suspicious or unrecognized activity from their account. Default is `true`.
        /// </summary>
        [Input("reportSuspiciousActivityEnabled")]
        public Input<bool>? ReportSuspiciousActivityEnabled { get; set; }

        /// <summary>
        /// Notifies end users of any activity on their account related to MFA factor enrollment. Default is `true`.
        /// </summary>
        [Input("sendEmailForFactorEnrollmentEnabled")]
        public Input<bool>? SendEmailForFactorEnrollmentEnabled { get; set; }

        /// <summary>
        /// Notifies end users that one or more factors have been reset for their account. Default is `true`.
        /// </summary>
        [Input("sendEmailForFactorResetEnabled")]
        public Input<bool>? SendEmailForFactorResetEnabled { get; set; }

        /// <summary>
        /// Notifies end users about new sign-on activity. Default is `true`.
        /// </summary>
        [Input("sendEmailForNewDeviceEnabled")]
        public Input<bool>? SendEmailForNewDeviceEnabled { get; set; }

        /// <summary>
        /// Notifies end users that the password for their account has changed. Default is `true`.
        /// </summary>
        [Input("sendEmailForPasswordChangedEnabled")]
        public Input<bool>? SendEmailForPasswordChangedEnabled { get; set; }

        public SecurityNotificationEmailsArgs()
        {
        }
        public static new SecurityNotificationEmailsArgs Empty => new SecurityNotificationEmailsArgs();
    }

    public sealed class SecurityNotificationEmailsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Notifies end users about suspicious or unrecognized activity from their account. Default is `true`.
        /// </summary>
        [Input("reportSuspiciousActivityEnabled")]
        public Input<bool>? ReportSuspiciousActivityEnabled { get; set; }

        /// <summary>
        /// Notifies end users of any activity on their account related to MFA factor enrollment. Default is `true`.
        /// </summary>
        [Input("sendEmailForFactorEnrollmentEnabled")]
        public Input<bool>? SendEmailForFactorEnrollmentEnabled { get; set; }

        /// <summary>
        /// Notifies end users that one or more factors have been reset for their account. Default is `true`.
        /// </summary>
        [Input("sendEmailForFactorResetEnabled")]
        public Input<bool>? SendEmailForFactorResetEnabled { get; set; }

        /// <summary>
        /// Notifies end users about new sign-on activity. Default is `true`.
        /// </summary>
        [Input("sendEmailForNewDeviceEnabled")]
        public Input<bool>? SendEmailForNewDeviceEnabled { get; set; }

        /// <summary>
        /// Notifies end users that the password for their account has changed. Default is `true`.
        /// </summary>
        [Input("sendEmailForPasswordChangedEnabled")]
        public Input<bool>? SendEmailForPasswordChangedEnabled { get; set; }

        public SecurityNotificationEmailsState()
        {
        }
        public static new SecurityNotificationEmailsState Empty => new SecurityNotificationEmailsState();
    }
}

// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    public static class GetAppSignonPolicy
    {
        /// <summary>
        /// Get a sign-on policy for the application.
        /// 
        /// &gt; **WARNING:** This feature is only available as a part of the 
        /// Identity Engine. Contact support 
        /// for further information.
        /// 
        /// &gt; Inside the product a sign-on policy is referenced as an _authentication
        /// policy_, in the public API the policy is of type
        /// [`ACCESS_POLICY`](https://developer.okta.com/docs/reference/api/policy/#policy-object).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Okta.GetAppSignonPolicy.Invoke(new()
        ///     {
        ///         AppId = "app_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAppSignonPolicyResult> InvokeAsync(GetAppSignonPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAppSignonPolicyResult>("okta:index/getAppSignonPolicy:getAppSignonPolicy", args ?? new GetAppSignonPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Get a sign-on policy for the application.
        /// 
        /// &gt; **WARNING:** This feature is only available as a part of the 
        /// Identity Engine. Contact support 
        /// for further information.
        /// 
        /// &gt; Inside the product a sign-on policy is referenced as an _authentication
        /// policy_, in the public API the policy is of type
        /// [`ACCESS_POLICY`](https://developer.okta.com/docs/reference/api/policy/#policy-object).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Okta.GetAppSignonPolicy.Invoke(new()
        ///     {
        ///         AppId = "app_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAppSignonPolicyResult> Invoke(GetAppSignonPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppSignonPolicyResult>("okta:index/getAppSignonPolicy:getAppSignonPolicy", args ?? new GetAppSignonPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a sign-on policy for the application.
        /// 
        /// &gt; **WARNING:** This feature is only available as a part of the 
        /// Identity Engine. Contact support 
        /// for further information.
        /// 
        /// &gt; Inside the product a sign-on policy is referenced as an _authentication
        /// policy_, in the public API the policy is of type
        /// [`ACCESS_POLICY`](https://developer.okta.com/docs/reference/api/policy/#policy-object).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Okta.GetAppSignonPolicy.Invoke(new()
        ///     {
        ///         AppId = "app_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAppSignonPolicyResult> Invoke(GetAppSignonPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppSignonPolicyResult>("okta:index/getAppSignonPolicy:getAppSignonPolicy", args ?? new GetAppSignonPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppSignonPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// App ID
        /// </summary>
        [Input("appId", required: true)]
        public string AppId { get; set; } = null!;

        public GetAppSignonPolicyArgs()
        {
        }
        public static new GetAppSignonPolicyArgs Empty => new GetAppSignonPolicyArgs();
    }

    public sealed class GetAppSignonPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// App ID
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        public GetAppSignonPolicyInvokeArgs()
        {
        }
        public static new GetAppSignonPolicyInvokeArgs Empty => new GetAppSignonPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetAppSignonPolicyResult
    {
        /// <summary>
        /// App ID
        /// </summary>
        public readonly string AppId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Policy name
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetAppSignonPolicyResult(
            string appId,

            string id,

            string name)
        {
            AppId = appId;
            Id = id;
            Name = name;
        }
    }
}

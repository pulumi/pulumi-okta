// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    public static class GetUserSecurityQuestions
    {
        /// <summary>
        /// Use this data source to retrieve a list of user's security questions.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleUser = new Okta.User.User("exampleUser", new()
        ///     {
        ///         FirstName = "John",
        ///         LastName = "Smith",
        ///         Login = "john.smith@example.com",
        ///         Email = "john.smith@example.com",
        ///     });
        /// 
        ///     var exampleUserSecurityQuestions = Okta.GetUserSecurityQuestions.Invoke(new()
        ///     {
        ///         UserId = exampleUser.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetUserSecurityQuestionsResult> InvokeAsync(GetUserSecurityQuestionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserSecurityQuestionsResult>("okta:index/getUserSecurityQuestions:getUserSecurityQuestions", args ?? new GetUserSecurityQuestionsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve a list of user's security questions.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleUser = new Okta.User.User("exampleUser", new()
        ///     {
        ///         FirstName = "John",
        ///         LastName = "Smith",
        ///         Login = "john.smith@example.com",
        ///         Email = "john.smith@example.com",
        ///     });
        /// 
        ///     var exampleUserSecurityQuestions = Okta.GetUserSecurityQuestions.Invoke(new()
        ///     {
        ///         UserId = exampleUser.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetUserSecurityQuestionsResult> Invoke(GetUserSecurityQuestionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserSecurityQuestionsResult>("okta:index/getUserSecurityQuestions:getUserSecurityQuestions", args ?? new GetUserSecurityQuestionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserSecurityQuestionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// User ID.
        /// </summary>
        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        public GetUserSecurityQuestionsArgs()
        {
        }
        public static new GetUserSecurityQuestionsArgs Empty => new GetUserSecurityQuestionsArgs();
    }

    public sealed class GetUserSecurityQuestionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// User ID.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public GetUserSecurityQuestionsInvokeArgs()
        {
        }
        public static new GetUserSecurityQuestionsInvokeArgs Empty => new GetUserSecurityQuestionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserSecurityQuestionsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// collection of user's security question retrieved from Okta with the following properties:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUserSecurityQuestionsQuestionResult> Questions;
        public readonly string UserId;

        [OutputConstructor]
        private GetUserSecurityQuestionsResult(
            string id,

            ImmutableArray<Outputs.GetUserSecurityQuestionsQuestionResult> questions,

            string userId)
        {
            Id = id;
            Questions = questions;
            UserId = userId;
        }
    }
}

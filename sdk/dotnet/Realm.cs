// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// Creates an Okta Realm. This resource allows you to create and configure an Okta Realm.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Okta.Realm("example", new()
    ///     {
    ///         Name = "Example Realm",
    ///         RealmType = "DEFAULT",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import okta:index/realm:Realm example &lt;realm_id&gt;
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/realm:Realm")]
    public partial class Realm : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Indicates whether the realm is the default realm.
        /// </summary>
        [Output("isDefault")]
        public Output<bool> IsDefault { get; private set; } = null!;

        /// <summary>
        /// The name of the Okta Realm.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The realm type. Valid values: `PARTNER` and `DEFAULT`
        /// </summary>
        [Output("realmType")]
        public Output<string> RealmType { get; private set; } = null!;


        /// <summary>
        /// Create a Realm resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Realm(string name, RealmArgs args, CustomResourceOptions? options = null)
            : base("okta:index/realm:Realm", name, args ?? new RealmArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Realm(string name, Input<string> id, RealmState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/realm:Realm", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Realm resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Realm Get(string name, Input<string> id, RealmState? state = null, CustomResourceOptions? options = null)
        {
            return new Realm(name, id, state, options);
        }
    }

    public sealed class RealmArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Okta Realm.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The realm type. Valid values: `PARTNER` and `DEFAULT`
        /// </summary>
        [Input("realmType", required: true)]
        public Input<string> RealmType { get; set; } = null!;

        public RealmArgs()
        {
        }
        public static new RealmArgs Empty => new RealmArgs();
    }

    public sealed class RealmState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether the realm is the default realm.
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// The name of the Okta Realm.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The realm type. Valid values: `PARTNER` and `DEFAULT`
        /// </summary>
        [Input("realmType")]
        public Input<string>? RealmType { get; set; }

        public RealmState()
        {
        }
        public static new RealmState Empty => new RealmState();
    }
}

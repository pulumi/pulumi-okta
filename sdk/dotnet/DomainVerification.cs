// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// Verifies the Domain. This is replacement for the `verify` field from the `okta.Domain` resource. The resource won't be
    /// created if the domain could not be verified. The provider will make several requests to verify the domain until
    /// the API returns `VERIFIED` verification status.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleDomain = new Okta.Domain("exampleDomain");
    /// 
    ///     var exampleDomainVerification = new Okta.DomainVerification("exampleDomainVerification", new()
    ///     {
    ///         DomainId = okta_domain.Test.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// This resource does not support importing.
    /// </summary>
    [OktaResourceType("okta:index/domainVerification:DomainVerification")]
    public partial class DomainVerification : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Domain ID.
        /// </summary>
        [Output("domainId")]
        public Output<string> DomainId { get; private set; } = null!;


        /// <summary>
        /// Create a DomainVerification resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DomainVerification(string name, DomainVerificationArgs args, CustomResourceOptions? options = null)
            : base("okta:index/domainVerification:DomainVerification", name, args ?? new DomainVerificationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DomainVerification(string name, Input<string> id, DomainVerificationState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/domainVerification:DomainVerification", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DomainVerification resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DomainVerification Get(string name, Input<string> id, DomainVerificationState? state = null, CustomResourceOptions? options = null)
        {
            return new DomainVerification(name, id, state, options);
        }
    }

    public sealed class DomainVerificationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Domain ID.
        /// </summary>
        [Input("domainId", required: true)]
        public Input<string> DomainId { get; set; } = null!;

        public DomainVerificationArgs()
        {
        }
        public static new DomainVerificationArgs Empty => new DomainVerificationArgs();
    }

    public sealed class DomainVerificationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Domain ID.
        /// </summary>
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        public DomainVerificationState()
        {
        }
        public static new DomainVerificationState Empty => new DomainVerificationState();
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// This resource allows you to manage app settings of the SAML Application . It's basically the same as
    /// `app_settings_json` field in `okta.app.Saml` resource and can be used in cases where settings require to be managed separately.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testSaml = new Okta.App.Saml("testSaml", new()
    ///     {
    ///         PreconfiguredApp = "amazon_aws",
    ///         Label = "Amazon AWS",
    ///         Status = "ACTIVE",
    ///     });
    /// 
    ///     var testAppSamlAppSettings = new Okta.AppSamlAppSettings("testAppSamlAppSettings", new()
    ///     {
    ///         AppId = testSaml.Id,
    ///         Settings = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["appFilter"] = "okta",
    ///             ["awsEnvironmentType"] = "aws.amazon",
    ///             ["groupFilter"] = "aws_(?{{accountid}}\\\\d+)_(?{{role}}[a-zA-Z0-9+=,.@\\\\-_]+)",
    ///             ["joinAllRoles"] = false,
    ///             ["loginURL"] = "https://console.aws.amazon.com/ec2/home",
    ///             ["roleValuePattern"] = "arn:aws:iam::${accountid}:saml-provider/OKTA,arn:aws:iam::${accountid}:role/${role}",
    ///             ["sessionDuration"] = 3200,
    ///             ["useGroupMapping"] = false,
    ///         }),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// A settings for the SAML App can be imported via the Okta ID.
    /// 
    /// ```sh
    ///  $ pulumi import okta:index/appSamlAppSettings:AppSamlAppSettings example &amp;#60;app id&amp;#62;
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/appSamlAppSettings:AppSamlAppSettings")]
    public partial class AppSamlAppSettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of the application.
        /// </summary>
        [Output("appId")]
        public Output<string> AppId { get; private set; } = null!;

        /// <summary>
        /// Application settings in JSON format.
        /// </summary>
        [Output("settings")]
        public Output<string> Settings { get; private set; } = null!;


        /// <summary>
        /// Create a AppSamlAppSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppSamlAppSettings(string name, AppSamlAppSettingsArgs args, CustomResourceOptions? options = null)
            : base("okta:index/appSamlAppSettings:AppSamlAppSettings", name, args ?? new AppSamlAppSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppSamlAppSettings(string name, Input<string> id, AppSamlAppSettingsState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/appSamlAppSettings:AppSamlAppSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppSamlAppSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppSamlAppSettings Get(string name, Input<string> id, AppSamlAppSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new AppSamlAppSettings(name, id, state, options);
        }
    }

    public sealed class AppSamlAppSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the application.
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        /// <summary>
        /// Application settings in JSON format.
        /// </summary>
        [Input("settings", required: true)]
        public Input<string> Settings { get; set; } = null!;

        public AppSamlAppSettingsArgs()
        {
        }
        public static new AppSamlAppSettingsArgs Empty => new AppSamlAppSettingsArgs();
    }

    public sealed class AppSamlAppSettingsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the application.
        /// </summary>
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        /// <summary>
        /// Application settings in JSON format.
        /// </summary>
        [Input("settings")]
        public Input<string>? Settings { get; set; }

        public AppSamlAppSettingsState()
        {
        }
        public static new AppSamlAppSettingsState Empty => new AppSamlAppSettingsState();
    }
}

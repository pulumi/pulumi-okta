// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    public static class GetTheme
    {
        /// <summary>
        /// Get a single Theme of a Brand of an Okta Organization.
        /// </summary>
        public static Task<GetThemeResult> InvokeAsync(GetThemeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetThemeResult>("okta:index/getTheme:getTheme", args ?? new GetThemeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a single Theme of a Brand of an Okta Organization.
        /// </summary>
        public static Output<GetThemeResult> Invoke(GetThemeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetThemeResult>("okta:index/getTheme:getTheme", args ?? new GetThemeInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a single Theme of a Brand of an Okta Organization.
        /// </summary>
        public static Output<GetThemeResult> Invoke(GetThemeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetThemeResult>("okta:index/getTheme:getTheme", args ?? new GetThemeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetThemeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Brand ID
        /// </summary>
        [Input("brandId", required: true)]
        public string BrandId { get; set; } = null!;

        /// <summary>
        /// Theme ID
        /// </summary>
        [Input("themeId", required: true)]
        public string ThemeId { get; set; } = null!;

        public GetThemeArgs()
        {
        }
        public static new GetThemeArgs Empty => new GetThemeArgs();
    }

    public sealed class GetThemeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Brand ID
        /// </summary>
        [Input("brandId", required: true)]
        public Input<string> BrandId { get; set; } = null!;

        /// <summary>
        /// Theme ID
        /// </summary>
        [Input("themeId", required: true)]
        public Input<string> ThemeId { get; set; } = null!;

        public GetThemeInvokeArgs()
        {
        }
        public static new GetThemeInvokeArgs Empty => new GetThemeInvokeArgs();
    }


    [OutputType]
    public sealed class GetThemeResult
    {
        /// <summary>
        /// Background image URL
        /// </summary>
        public readonly string BackgroundImageUrl;
        /// <summary>
        /// Brand ID
        /// </summary>
        public readonly string BrandId;
        /// <summary>
        /// Variant for email templates (`OKTA_DEFAULT`, `FULL_THEME`)
        /// </summary>
        public readonly string EmailTemplateTouchPointVariant;
        /// <summary>
        /// Variant for the Okta End-User Dashboard (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)
        /// </summary>
        public readonly string EndUserDashboardTouchPointVariant;
        /// <summary>
        /// Variant for the error page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
        /// </summary>
        public readonly string ErrorPageTouchPointVariant;
        /// <summary>
        /// Favicon URL
        /// </summary>
        public readonly string FaviconUrl;
        /// <summary>
        /// The ID of the theme
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Link relations for this object - JSON HAL - Discoverable resources related to the email template
        /// </summary>
        public readonly string Links;
        /// <summary>
        /// Logo URL
        /// </summary>
        public readonly string LogoUrl;
        /// <summary>
        /// Primary color contrast hex code
        /// </summary>
        public readonly string PrimaryColorContrastHex;
        /// <summary>
        /// Primary color hex code
        /// </summary>
        public readonly string PrimaryColorHex;
        /// <summary>
        /// Secondary color contrast hex code
        /// </summary>
        public readonly string SecondaryColorContrastHex;
        /// <summary>
        /// Secondary color hex code
        /// </summary>
        public readonly string SecondaryColorHex;
        /// <summary>
        /// Variant for the Okta Sign-In Page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
        /// </summary>
        public readonly string SignInPageTouchPointVariant;
        /// <summary>
        /// Theme ID
        /// </summary>
        public readonly string ThemeId;

        [OutputConstructor]
        private GetThemeResult(
            string backgroundImageUrl,

            string brandId,

            string emailTemplateTouchPointVariant,

            string endUserDashboardTouchPointVariant,

            string errorPageTouchPointVariant,

            string faviconUrl,

            string id,

            string links,

            string logoUrl,

            string primaryColorContrastHex,

            string primaryColorHex,

            string secondaryColorContrastHex,

            string secondaryColorHex,

            string signInPageTouchPointVariant,

            string themeId)
        {
            BackgroundImageUrl = backgroundImageUrl;
            BrandId = brandId;
            EmailTemplateTouchPointVariant = emailTemplateTouchPointVariant;
            EndUserDashboardTouchPointVariant = endUserDashboardTouchPointVariant;
            ErrorPageTouchPointVariant = errorPageTouchPointVariant;
            FaviconUrl = faviconUrl;
            Id = id;
            Links = links;
            LogoUrl = logoUrl;
            PrimaryColorContrastHex = primaryColorContrastHex;
            PrimaryColorHex = primaryColorHex;
            SecondaryColorContrastHex = secondaryColorContrastHex;
            SecondaryColorHex = secondaryColorHex;
            SignInPageTouchPointVariant = signInPageTouchPointVariant;
            ThemeId = themeId;
        }
    }
}

// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// Rate limit warning threshold percentage provides operations to manage threshold for warning notifications when the API's rate limit is exceeded.
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Okta.RateLimitWarningThresholdPercentage("example", new()
    ///     {
    ///         WarningThreshold = 90,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import okta:index/rateLimitWarningThresholdPercentage:RateLimitWarningThresholdPercentage example .
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/rateLimitWarningThresholdPercentage:RateLimitWarningThresholdPercentage")]
    public partial class RateLimitWarningThresholdPercentage : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The threshold value (percentage) of a rate limit that, when exceeded, triggers a warning notification. By default, this value is 90 for Workforce orgs and 60 for CIAM orgs.
        /// </summary>
        [Output("warningThreshold")]
        public Output<int> WarningThreshold { get; private set; } = null!;


        /// <summary>
        /// Create a RateLimitWarningThresholdPercentage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RateLimitWarningThresholdPercentage(string name, RateLimitWarningThresholdPercentageArgs args, CustomResourceOptions? options = null)
            : base("okta:index/rateLimitWarningThresholdPercentage:RateLimitWarningThresholdPercentage", name, args ?? new RateLimitWarningThresholdPercentageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RateLimitWarningThresholdPercentage(string name, Input<string> id, RateLimitWarningThresholdPercentageState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/rateLimitWarningThresholdPercentage:RateLimitWarningThresholdPercentage", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RateLimitWarningThresholdPercentage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RateLimitWarningThresholdPercentage Get(string name, Input<string> id, RateLimitWarningThresholdPercentageState? state = null, CustomResourceOptions? options = null)
        {
            return new RateLimitWarningThresholdPercentage(name, id, state, options);
        }
    }

    public sealed class RateLimitWarningThresholdPercentageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The threshold value (percentage) of a rate limit that, when exceeded, triggers a warning notification. By default, this value is 90 for Workforce orgs and 60 for CIAM orgs.
        /// </summary>
        [Input("warningThreshold", required: true)]
        public Input<int> WarningThreshold { get; set; } = null!;

        public RateLimitWarningThresholdPercentageArgs()
        {
        }
        public static new RateLimitWarningThresholdPercentageArgs Empty => new RateLimitWarningThresholdPercentageArgs();
    }

    public sealed class RateLimitWarningThresholdPercentageState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The threshold value (percentage) of a rate limit that, when exceeded, triggers a warning notification. By default, this value is 90 for Workforce orgs and 60 for CIAM orgs.
        /// </summary>
        [Input("warningThreshold")]
        public Input<int>? WarningThreshold { get; set; }

        public RateLimitWarningThresholdPercentageState()
        {
        }
        public static new RateLimitWarningThresholdPercentageState Empty => new RateLimitWarningThresholdPercentageState();
    }
}

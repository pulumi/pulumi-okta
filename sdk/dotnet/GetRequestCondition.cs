// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    public static class GetRequestCondition
    {
        /// <summary>
        /// Retrieves a resource request condition
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Okta.GetRequestCondition.Invoke(new()
        ///     {
        ///         Id = "&lt;request_condition_id&gt;",
        ///         ResourceId = "&lt;resource_id&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRequestConditionResult> InvokeAsync(GetRequestConditionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRequestConditionResult>("okta:index/getRequestCondition:getRequestCondition", args ?? new GetRequestConditionArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a resource request condition
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Okta.GetRequestCondition.Invoke(new()
        ///     {
        ///         Id = "&lt;request_condition_id&gt;",
        ///         ResourceId = "&lt;resource_id&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRequestConditionResult> Invoke(GetRequestConditionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRequestConditionResult>("okta:index/getRequestCondition:getRequestCondition", args ?? new GetRequestConditionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a resource request condition
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Okta.GetRequestCondition.Invoke(new()
        ///     {
        ///         Id = "&lt;request_condition_id&gt;",
        ///         ResourceId = "&lt;resource_id&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRequestConditionResult> Invoke(GetRequestConditionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRequestConditionResult>("okta:index/getRequestCondition:getRequestCondition", args ?? new GetRequestConditionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRequestConditionArgs : global::Pulumi.InvokeArgs
    {
        [Input("accessScopeSettings")]
        public Inputs.GetRequestConditionAccessScopeSettingsArgs? AccessScopeSettings { get; set; }

        /// <summary>
        /// Request condition id.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("requesterSettings")]
        public Inputs.GetRequestConditionRequesterSettingsArgs? RequesterSettings { get; set; }

        /// <summary>
        /// The id of the resource in Okta ID format.
        /// </summary>
        [Input("resourceId", required: true)]
        public string ResourceId { get; set; } = null!;

        public GetRequestConditionArgs()
        {
        }
        public static new GetRequestConditionArgs Empty => new GetRequestConditionArgs();
    }

    public sealed class GetRequestConditionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accessScopeSettings")]
        public Input<Inputs.GetRequestConditionAccessScopeSettingsInputArgs>? AccessScopeSettings { get; set; }

        /// <summary>
        /// Request condition id.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("requesterSettings")]
        public Input<Inputs.GetRequestConditionRequesterSettingsInputArgs>? RequesterSettings { get; set; }

        /// <summary>
        /// The id of the resource in Okta ID format.
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        public GetRequestConditionInvokeArgs()
        {
        }
        public static new GetRequestConditionInvokeArgs Empty => new GetRequestConditionInvokeArgs();
    }


    [OutputType]
    public sealed class GetRequestConditionResult
    {
        public readonly Outputs.GetRequestConditionAccessScopeSettingsResult? AccessScopeSettings;
        /// <summary>
        /// The date and time when the request condition was created.
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// The id of the user who created the request condition.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// Request condition id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The date and time when the request condition was last updated.
        /// </summary>
        public readonly string LastUpdated;
        /// <summary>
        /// The id of the user who last updated the request condition.
        /// </summary>
        public readonly string LastUpdatedBy;
        /// <summary>
        /// The name of the request condition.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The priority of the request condition. Lower numbers indicate higher priority.
        /// </summary>
        public readonly int Priority;
        public readonly Outputs.GetRequestConditionRequesterSettingsResult? RequesterSettings;
        /// <summary>
        /// The id of the resource in Okta ID format.
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// Status indicates if this condition is active or not. Default status is INACTIVE. Enum: `ACTIVE`, `INACTIVE`, `DELETED`, `INVALID`.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetRequestConditionResult(
            Outputs.GetRequestConditionAccessScopeSettingsResult? accessScopeSettings,

            string created,

            string createdBy,

            string id,

            string lastUpdated,

            string lastUpdatedBy,

            string name,

            int priority,

            Outputs.GetRequestConditionRequesterSettingsResult? requesterSettings,

            string resourceId,

            string status)
        {
            AccessScopeSettings = accessScopeSettings;
            Created = created;
            CreatedBy = createdBy;
            Id = id;
            LastUpdated = lastUpdated;
            LastUpdatedBy = lastUpdatedBy;
            Name = name;
            Priority = priority;
            RequesterSettings = requesterSettings;
            ResourceId = resourceId;
            Status = status;
        }
    }
}

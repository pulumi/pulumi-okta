// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta.User
{
    public static class GetUserProfileMappingSource
    {
        /// <summary>
        /// Get the base user Profile Mapping source or target from Okta.
        /// 
        /// &gt; **NOTE:** If using this resource with OAuth2 scopes, this resource 
        /// requires `okta.profileMappings.read` scope.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Okta.User.GetUserProfileMappingSource.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetUserProfileMappingSourceResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserProfileMappingSourceResult>("okta:user/getUserProfileMappingSource:getUserProfileMappingSource", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Get the base user Profile Mapping source or target from Okta.
        /// 
        /// &gt; **NOTE:** If using this resource with OAuth2 scopes, this resource 
        /// requires `okta.profileMappings.read` scope.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Okta.User.GetUserProfileMappingSource.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUserProfileMappingSourceResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserProfileMappingSourceResult>("okta:user/getUserProfileMappingSource:getUserProfileMappingSource", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Get the base user Profile Mapping source or target from Okta.
        /// 
        /// &gt; **NOTE:** If using this resource with OAuth2 scopes, this resource 
        /// requires `okta.profileMappings.read` scope.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Okta.User.GetUserProfileMappingSource.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUserProfileMappingSourceResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserProfileMappingSourceResult>("okta:user/getUserProfileMappingSource:getUserProfileMappingSource", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetUserProfileMappingSourceResult
    {
        /// <summary>
        /// ID of the source
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of source.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Type of source.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetUserProfileMappingSourceResult(
            string id,

            string name,

            string type)
        {
            Id = id;
            Name = name;
            Type = type;
        }
    }
}

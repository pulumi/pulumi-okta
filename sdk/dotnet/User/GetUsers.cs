// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta.User
{
    public static class GetUsers
    {
        /// <summary>
        /// Use this data source to retrieve a list of users from Okta.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Okta.User.GetUsers.InvokeAsync(new Okta.User.GetUsersArgs
        ///         {
        ///             Searches = 
        ///             {
        ///                 new Okta.User.Inputs.GetUsersSearchArgs
        ///                 {
        ///                     Comparison = "sw",
        ///                     Name = "profile.company",
        ///                     Value = "Articulate",
        ///                 },
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// 
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetUsersResult> InvokeAsync(GetUsersArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetUsersResult>("okta:user/getUsers:getUsers", args ?? new GetUsersArgs(), options.WithVersion());
    }


    public sealed class GetUsersArgs : Pulumi.InvokeArgs
    {
        [Input("searches", required: true)]
        private List<Inputs.GetUsersSearchArgs>? _searches;

        /// <summary>
        /// Map of search criteria to use to find users. It supports the following properties.
        /// </summary>
        public List<Inputs.GetUsersSearchArgs> Searches
        {
            get => _searches ?? (_searches = new List<Inputs.GetUsersSearchArgs>());
            set => _searches = value;
        }

        [Input("users")]
        private List<Inputs.GetUsersUserArgs>? _users;

        /// <summary>
        /// collection of users retrieved from Okta with the following properties.
        /// </summary>
        public List<Inputs.GetUsersUserArgs> Users
        {
            get => _users ?? (_users = new List<Inputs.GetUsersUserArgs>());
            set => _users = value;
        }

        public GetUsersArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetUsersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetUsersSearchResult> Searches;
        /// <summary>
        /// collection of users retrieved from Okta with the following properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUsersUserResult> Users;

        [OutputConstructor]
        private GetUsersResult(
            string id,

            ImmutableArray<Outputs.GetUsersSearchResult> searches,

            ImmutableArray<Outputs.GetUsersUserResult> users)
        {
            Id = id;
            Searches = searches;
            Users = users;
        }
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta.User
{
    public static class GetUserType
    {
        /// <summary>
        /// Get a user type from Okta.
        /// </summary>
        public static Task<GetUserTypeResult> InvokeAsync(GetUserTypeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserTypeResult>("okta:user/getUserType:getUserType", args ?? new GetUserTypeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a user type from Okta.
        /// </summary>
        public static Output<GetUserTypeResult> Invoke(GetUserTypeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserTypeResult>("okta:user/getUserType:getUserType", args ?? new GetUserTypeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserTypeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of user type to retrieve.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetUserTypeArgs()
        {
        }
        public static new GetUserTypeArgs Empty => new GetUserTypeArgs();
    }

    public sealed class GetUserTypeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of user type to retrieve.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetUserTypeInvokeArgs()
        {
        }
        public static new GetUserTypeInvokeArgs Empty => new GetUserTypeInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserTypeResult
    {
        /// <summary>
        /// Description of user type.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Display name of user type.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of user type to retrieve.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetUserTypeResult(
            string description,

            string displayName,

            string id,

            string name)
        {
            Description = description;
            DisplayName = displayName;
            Id = id;
            Name = name;
        }
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta.User
{
    /// <summary>
    /// Creates an Okta User.
    /// 
    /// This resource allows you to create and configure an Okta User.
    /// </summary>
    public partial class User : Pulumi.CustomResource
    {
        /// <summary>
        /// Administrator roles assigned to User.
        /// </summary>
        [Output("adminRoles")]
        public Output<ImmutableArray<string>> AdminRoles { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("city")]
        public Output<string?> City { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("costCenter")]
        public Output<string?> CostCenter { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("countryCode")]
        public Output<string?> CountryCode { get; private set; } = null!;

        /// <summary>
        /// raw JSON containing all custom profile attributes.
        /// </summary>
        [Output("customProfileAttributes")]
        public Output<string?> CustomProfileAttributes { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("department")]
        public Output<string?> Department { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("division")]
        public Output<string?> Division { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("email")]
        public Output<string> Email { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("employeeNumber")]
        public Output<string?> EmployeeNumber { get; private set; } = null!;

        /// <summary>
        /// User's First Name, required by default.
        /// </summary>
        [Output("firstName")]
        public Output<string> FirstName { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("groupMemberships")]
        public Output<ImmutableArray<string>> GroupMemberships { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("honorificPrefix")]
        public Output<string?> HonorificPrefix { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("honorificSuffix")]
        public Output<string?> HonorificSuffix { get; private set; } = null!;

        /// <summary>
        /// User's Last Name, required by default.
        /// </summary>
        [Output("lastName")]
        public Output<string> LastName { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("locale")]
        public Output<string?> Locale { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("login")]
        public Output<string> Login { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("manager")]
        public Output<string?> Manager { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("managerId")]
        public Output<string?> ManagerId { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("middleName")]
        public Output<string?> MiddleName { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("mobilePhone")]
        public Output<string?> MobilePhone { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("nickName")]
        public Output<string?> NickName { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("organization")]
        public Output<string?> Organization { get; private set; } = null!;

        /// <summary>
        /// User password.
        /// </summary>
        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("postalAddress")]
        public Output<string?> PostalAddress { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("preferredLanguage")]
        public Output<string?> PreferredLanguage { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("primaryPhone")]
        public Output<string?> PrimaryPhone { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("profileUrl")]
        public Output<string?> ProfileUrl { get; private set; } = null!;

        /// <summary>
        /// The raw status of the User in Okta - (status is mapped)
        /// </summary>
        [Output("rawStatus")]
        public Output<string> RawStatus { get; private set; } = null!;

        /// <summary>
        /// User password recovery answer.
        /// </summary>
        [Output("recoveryAnswer")]
        public Output<string?> RecoveryAnswer { get; private set; } = null!;

        /// <summary>
        /// User password recovery question.
        /// </summary>
        [Output("recoveryQuestion")]
        public Output<string?> RecoveryQuestion { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("secondEmail")]
        public Output<string?> SecondEmail { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("streetAddress")]
        public Output<string?> StreetAddress { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("timezone")]
        public Output<string?> Timezone { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("title")]
        public Output<string?> Title { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("userType")]
        public Output<string?> UserType { get; private set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Output("zipCode")]
        public Output<string?> ZipCode { get; private set; } = null!;


        /// <summary>
        /// Create a User resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public User(string name, UserArgs args, CustomResourceOptions? options = null)
            : base("okta:user/user:User", name, args ?? new UserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private User(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
            : base("okta:user/user:User", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing User resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static User Get(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
        {
            return new User(name, id, state, options);
        }
    }

    public sealed class UserArgs : Pulumi.ResourceArgs
    {
        [Input("adminRoles")]
        private InputList<string>? _adminRoles;

        /// <summary>
        /// Administrator roles assigned to User.
        /// </summary>
        public InputList<string> AdminRoles
        {
            get => _adminRoles ?? (_adminRoles = new InputList<string>());
            set => _adminRoles = value;
        }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("city")]
        public Input<string>? City { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("costCenter")]
        public Input<string>? CostCenter { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("countryCode")]
        public Input<string>? CountryCode { get; set; }

        /// <summary>
        /// raw JSON containing all custom profile attributes.
        /// </summary>
        [Input("customProfileAttributes")]
        public Input<string>? CustomProfileAttributes { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("department")]
        public Input<string>? Department { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("division")]
        public Input<string>? Division { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("employeeNumber")]
        public Input<string>? EmployeeNumber { get; set; }

        /// <summary>
        /// User's First Name, required by default.
        /// </summary>
        [Input("firstName", required: true)]
        public Input<string> FirstName { get; set; } = null!;

        [Input("groupMemberships")]
        private InputList<string>? _groupMemberships;

        /// <summary>
        /// User profile property.
        /// </summary>
        public InputList<string> GroupMemberships
        {
            get => _groupMemberships ?? (_groupMemberships = new InputList<string>());
            set => _groupMemberships = value;
        }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("honorificPrefix")]
        public Input<string>? HonorificPrefix { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("honorificSuffix")]
        public Input<string>? HonorificSuffix { get; set; }

        /// <summary>
        /// User's Last Name, required by default.
        /// </summary>
        [Input("lastName", required: true)]
        public Input<string> LastName { get; set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("locale")]
        public Input<string>? Locale { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("login", required: true)]
        public Input<string> Login { get; set; } = null!;

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("manager")]
        public Input<string>? Manager { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("managerId")]
        public Input<string>? ManagerId { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("middleName")]
        public Input<string>? MiddleName { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("mobilePhone")]
        public Input<string>? MobilePhone { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("nickName")]
        public Input<string>? NickName { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("organization")]
        public Input<string>? Organization { get; set; }

        /// <summary>
        /// User password.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("postalAddress")]
        public Input<string>? PostalAddress { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("preferredLanguage")]
        public Input<string>? PreferredLanguage { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("primaryPhone")]
        public Input<string>? PrimaryPhone { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("profileUrl")]
        public Input<string>? ProfileUrl { get; set; }

        /// <summary>
        /// User password recovery answer.
        /// </summary>
        [Input("recoveryAnswer")]
        public Input<string>? RecoveryAnswer { get; set; }

        /// <summary>
        /// User password recovery question.
        /// </summary>
        [Input("recoveryQuestion")]
        public Input<string>? RecoveryQuestion { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("secondEmail")]
        public Input<string>? SecondEmail { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("streetAddress")]
        public Input<string>? StreetAddress { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("userType")]
        public Input<string>? UserType { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("zipCode")]
        public Input<string>? ZipCode { get; set; }

        public UserArgs()
        {
        }
    }

    public sealed class UserState : Pulumi.ResourceArgs
    {
        [Input("adminRoles")]
        private InputList<string>? _adminRoles;

        /// <summary>
        /// Administrator roles assigned to User.
        /// </summary>
        public InputList<string> AdminRoles
        {
            get => _adminRoles ?? (_adminRoles = new InputList<string>());
            set => _adminRoles = value;
        }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("city")]
        public Input<string>? City { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("costCenter")]
        public Input<string>? CostCenter { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("countryCode")]
        public Input<string>? CountryCode { get; set; }

        /// <summary>
        /// raw JSON containing all custom profile attributes.
        /// </summary>
        [Input("customProfileAttributes")]
        public Input<string>? CustomProfileAttributes { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("department")]
        public Input<string>? Department { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("division")]
        public Input<string>? Division { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("employeeNumber")]
        public Input<string>? EmployeeNumber { get; set; }

        /// <summary>
        /// User's First Name, required by default.
        /// </summary>
        [Input("firstName")]
        public Input<string>? FirstName { get; set; }

        [Input("groupMemberships")]
        private InputList<string>? _groupMemberships;

        /// <summary>
        /// User profile property.
        /// </summary>
        public InputList<string> GroupMemberships
        {
            get => _groupMemberships ?? (_groupMemberships = new InputList<string>());
            set => _groupMemberships = value;
        }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("honorificPrefix")]
        public Input<string>? HonorificPrefix { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("honorificSuffix")]
        public Input<string>? HonorificSuffix { get; set; }

        /// <summary>
        /// User's Last Name, required by default.
        /// </summary>
        [Input("lastName")]
        public Input<string>? LastName { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("locale")]
        public Input<string>? Locale { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("login")]
        public Input<string>? Login { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("manager")]
        public Input<string>? Manager { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("managerId")]
        public Input<string>? ManagerId { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("middleName")]
        public Input<string>? MiddleName { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("mobilePhone")]
        public Input<string>? MobilePhone { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("nickName")]
        public Input<string>? NickName { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("organization")]
        public Input<string>? Organization { get; set; }

        /// <summary>
        /// User password.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("postalAddress")]
        public Input<string>? PostalAddress { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("preferredLanguage")]
        public Input<string>? PreferredLanguage { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("primaryPhone")]
        public Input<string>? PrimaryPhone { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("profileUrl")]
        public Input<string>? ProfileUrl { get; set; }

        /// <summary>
        /// The raw status of the User in Okta - (status is mapped)
        /// </summary>
        [Input("rawStatus")]
        public Input<string>? RawStatus { get; set; }

        /// <summary>
        /// User password recovery answer.
        /// </summary>
        [Input("recoveryAnswer")]
        public Input<string>? RecoveryAnswer { get; set; }

        /// <summary>
        /// User password recovery question.
        /// </summary>
        [Input("recoveryQuestion")]
        public Input<string>? RecoveryQuestion { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("secondEmail")]
        public Input<string>? SecondEmail { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("streetAddress")]
        public Input<string>? StreetAddress { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("userType")]
        public Input<string>? UserType { get; set; }

        /// <summary>
        /// User profile property.
        /// </summary>
        [Input("zipCode")]
        public Input<string>? ZipCode { get; set; }

        public UserState()
        {
        }
    }
}

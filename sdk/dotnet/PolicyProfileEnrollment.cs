// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// &gt; **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.
    /// 
    /// This resource allows you to create and configure a Profile Enrollment Policy.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Okta.PolicyProfileEnrollment("example", new()
    ///     {
    ///         Status = "ACTIVE",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// A Profile Enrollment Policy can be imported via the Okta ID.
    /// 
    /// ```sh
    /// $ pulumi import okta:index/policyProfileEnrollment:PolicyProfileEnrollment example &amp;#60;policy id&amp;#62;
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/policyProfileEnrollment:PolicyProfileEnrollment")]
    public partial class PolicyProfileEnrollment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Policy Name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Status of the policy.
        /// </summary>
        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;


        /// <summary>
        /// Create a PolicyProfileEnrollment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PolicyProfileEnrollment(string name, PolicyProfileEnrollmentArgs? args = null, CustomResourceOptions? options = null)
            : base("okta:index/policyProfileEnrollment:PolicyProfileEnrollment", name, args ?? new PolicyProfileEnrollmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PolicyProfileEnrollment(string name, Input<string> id, PolicyProfileEnrollmentState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/policyProfileEnrollment:PolicyProfileEnrollment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PolicyProfileEnrollment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PolicyProfileEnrollment Get(string name, Input<string> id, PolicyProfileEnrollmentState? state = null, CustomResourceOptions? options = null)
        {
            return new PolicyProfileEnrollment(name, id, state, options);
        }
    }

    public sealed class PolicyProfileEnrollmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Policy Name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Status of the policy.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public PolicyProfileEnrollmentArgs()
        {
        }
        public static new PolicyProfileEnrollmentArgs Empty => new PolicyProfileEnrollmentArgs();
    }

    public sealed class PolicyProfileEnrollmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Policy Name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Status of the policy.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public PolicyProfileEnrollmentState()
        {
        }
        public static new PolicyProfileEnrollmentState Empty => new PolicyProfileEnrollmentState();
    }
}

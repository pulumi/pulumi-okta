// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// Manage the preview signin page of a brand
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Okta.Brand("test", new()
    ///     {
    ///         Name = "testBrand",
    ///         Locale = "en",
    ///     });
    /// 
    ///     var testPreviewSigninPage = new Okta.PreviewSigninPage("test", new()
    ///     {
    ///         BrandId = oktaBrand.Test.Id,
    ///         PageContent = @"&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01//EN"" ""http://www.w3.org/TR/html4/strict.dtd""&gt;
    /// &lt;html&gt;
    /// &lt;head&gt;
    ///     &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8""&gt;
    ///     &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" /&gt;
    ///     &lt;meta name=""robots"" content=""noindex,nofollow"" /&gt;
    ///     &lt;!-- Styles generated from theme --&gt;
    ///     &lt;link href=""{{themedStylesUrl}}"" rel=""stylesheet"" type=""text/css""&gt;
    ///     &lt;!-- Favicon from theme --&gt;
    ///     &lt;link rel=""shortcut icon"" href=""{{faviconUrl}}"" type=""image/x-icon""/&gt;
    /// 
    ///     &lt;title&gt;{{pageTitle}}&lt;/title&gt;
    ///     {{{SignInWidgetResources}}}
    /// 
    ///     &lt;style nonce=""{{nonceValue}}""&gt;
    ///         #login-bg-image-id {
    ///             background-image: {{bgImageUrl}}
    ///         }
    ///     &lt;/style&gt;
    /// &lt;/head&gt;
    /// &lt;body&gt;
    ///     &lt;div id=""login-bg-image-id"" class=""login-bg-image tb--background""&gt;&lt;/div&gt;
    ///     &lt;div id=""okta-login-container""&gt;&lt;/div&gt;
    /// 
    ///     &lt;!--
    ///         ""OktaUtil"" defines a global OktaUtil object
    ///         that contains methods used to complete the Okta login flow.
    ///      --&gt;
    ///     {{{OktaUtil}}}
    /// 
    ///     &lt;script type=""text/javascript"" nonce=""{{nonceValue}}""&gt;
    ///         // ""config"" object contains default widget configuration
    ///         // with any custom overrides defined in your admin settings.
    ///         var config = OktaUtil.getSignInWidgetConfig();
    /// 
    ///         // Render the Okta Sign-In Widget
    ///         var oktaSignIn = new OktaSignIn(config);
    ///         oktaSignIn.renderEl({ el: '#okta-login-container' },
    ///             OktaUtil.completeLogin,
    ///             function(error) {
    ///                 // Logs errors that occur when configuring the widget.
    ///                 // Remove or replace this with your own custom error handler.
    ///                 console.log(error.message, error);
    ///             }
    ///         );
    ///     &lt;/script&gt;
    /// &lt;/body&gt;
    /// &lt;/html&gt;
    /// ",
    ///         WidgetVersion = "^6",
    ///         WidgetCustomizations = new Okta.Inputs.PreviewSigninPageWidgetCustomizationsArgs
    ///         {
    ///             WidgetGeneration = "G3",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/previewSigninPage:PreviewSigninPage")]
    public partial class PreviewSigninPage : global::Pulumi.CustomResource
    {
        /// <summary>
        /// brand id of the preview signin page
        /// </summary>
        [Output("brandId")]
        public Output<string> BrandId { get; private set; } = null!;

        [Output("contentSecurityPolicySetting")]
        public Output<Outputs.PreviewSigninPageContentSecurityPolicySetting?> ContentSecurityPolicySetting { get; private set; } = null!;

        /// <summary>
        /// page content of the preview signin page
        /// </summary>
        [Output("pageContent")]
        public Output<string> PageContent { get; private set; } = null!;

        [Output("widgetCustomizations")]
        public Output<Outputs.PreviewSigninPageWidgetCustomizations?> WidgetCustomizations { get; private set; } = null!;

        /// <summary>
        /// widget version specified as a Semver. The following are currently supported
        /// 		*, ^1, ^2, ^3, ^4, ^5, ^6, ^7, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11, 1.12, 1.13, 2.1, 2.2, 2.3, 2.4,
        /// 		2.5, 2.6, 2.7, 2.8, 2.9, 2.10, 2.11, 2.12, 2.13, 2.14, 2.15, 2.16, 2.17, 2.18, 2.19, 2.20, 2.21,
        /// 		3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 5.0, 5.1, 5.2, 5.3,
        /// 		5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 5.10, 5.11, 5.12, 5.13, 5.14, 5.15, 5.16, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5,
        /// 		6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 7.10, 7.11, 7.12, 7.13.
        /// </summary>
        [Output("widgetVersion")]
        public Output<string> WidgetVersion { get; private set; } = null!;


        /// <summary>
        /// Create a PreviewSigninPage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PreviewSigninPage(string name, PreviewSigninPageArgs args, CustomResourceOptions? options = null)
            : base("okta:index/previewSigninPage:PreviewSigninPage", name, args ?? new PreviewSigninPageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PreviewSigninPage(string name, Input<string> id, PreviewSigninPageState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/previewSigninPage:PreviewSigninPage", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PreviewSigninPage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PreviewSigninPage Get(string name, Input<string> id, PreviewSigninPageState? state = null, CustomResourceOptions? options = null)
        {
            return new PreviewSigninPage(name, id, state, options);
        }
    }

    public sealed class PreviewSigninPageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// brand id of the preview signin page
        /// </summary>
        [Input("brandId", required: true)]
        public Input<string> BrandId { get; set; } = null!;

        [Input("contentSecurityPolicySetting")]
        public Input<Inputs.PreviewSigninPageContentSecurityPolicySettingArgs>? ContentSecurityPolicySetting { get; set; }

        /// <summary>
        /// page content of the preview signin page
        /// </summary>
        [Input("pageContent", required: true)]
        public Input<string> PageContent { get; set; } = null!;

        [Input("widgetCustomizations")]
        public Input<Inputs.PreviewSigninPageWidgetCustomizationsArgs>? WidgetCustomizations { get; set; }

        /// <summary>
        /// widget version specified as a Semver. The following are currently supported
        /// 		*, ^1, ^2, ^3, ^4, ^5, ^6, ^7, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11, 1.12, 1.13, 2.1, 2.2, 2.3, 2.4,
        /// 		2.5, 2.6, 2.7, 2.8, 2.9, 2.10, 2.11, 2.12, 2.13, 2.14, 2.15, 2.16, 2.17, 2.18, 2.19, 2.20, 2.21,
        /// 		3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 5.0, 5.1, 5.2, 5.3,
        /// 		5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 5.10, 5.11, 5.12, 5.13, 5.14, 5.15, 5.16, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5,
        /// 		6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 7.10, 7.11, 7.12, 7.13.
        /// </summary>
        [Input("widgetVersion", required: true)]
        public Input<string> WidgetVersion { get; set; } = null!;

        public PreviewSigninPageArgs()
        {
        }
        public static new PreviewSigninPageArgs Empty => new PreviewSigninPageArgs();
    }

    public sealed class PreviewSigninPageState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// brand id of the preview signin page
        /// </summary>
        [Input("brandId")]
        public Input<string>? BrandId { get; set; }

        [Input("contentSecurityPolicySetting")]
        public Input<Inputs.PreviewSigninPageContentSecurityPolicySettingGetArgs>? ContentSecurityPolicySetting { get; set; }

        /// <summary>
        /// page content of the preview signin page
        /// </summary>
        [Input("pageContent")]
        public Input<string>? PageContent { get; set; }

        [Input("widgetCustomizations")]
        public Input<Inputs.PreviewSigninPageWidgetCustomizationsGetArgs>? WidgetCustomizations { get; set; }

        /// <summary>
        /// widget version specified as a Semver. The following are currently supported
        /// 		*, ^1, ^2, ^3, ^4, ^5, ^6, ^7, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11, 1.12, 1.13, 2.1, 2.2, 2.3, 2.4,
        /// 		2.5, 2.6, 2.7, 2.8, 2.9, 2.10, 2.11, 2.12, 2.13, 2.14, 2.15, 2.16, 2.17, 2.18, 2.19, 2.20, 2.21,
        /// 		3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 5.0, 5.1, 5.2, 5.3,
        /// 		5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 5.10, 5.11, 5.12, 5.13, 5.14, 5.15, 5.16, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5,
        /// 		6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 7.10, 7.11, 7.12, 7.13.
        /// </summary>
        [Input("widgetVersion")]
        public Input<string>? WidgetVersion { get; set; }

        public PreviewSigninPageState()
        {
        }
        public static new PreviewSigninPageState Empty => new PreviewSigninPageState();
    }
}

// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    public static class GetEndUserMyRequests
    {
        /// <summary>
        /// Get an End User Request from Okta Identity Governance. This data source allows you to retrieve information about existing access requests in the Okta Identity Governance system.
        /// 
        /// Use this data source to fetch details about a specific request, including its current status, field values, and other metadata.
        /// 
        /// &gt; **Note:** This data source is part of Okta Identity Governance functionality and requires appropriate licensing and configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get a request by its catalog entry ID and request ID
        ///     var example = Okta.GetEndUserMyRequests.Invoke(new()
        ///     {
        ///         EntryId = "cen123456789abcdefgh",
        ///         Id = "reqABCDEFG0123456789",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["requestStatus"] = example.Apply(getEndUserMyRequestsResult =&gt; getEndUserMyRequestsResult.Status),
        ///         ["requestFieldValues"] = example.Apply(getEndUserMyRequestsResult =&gt; getEndUserMyRequestsResult.RequesterFieldValues),
        ///     };
        /// });
        /// ```
        /// 
        /// 
        /// ## Field Type Reference
        /// 
        /// ### Field Types and Values
        /// 
        /// - **TEXT**: Contains free-form text input in the `Value` attribute
        /// - **SELECT**: Contains single selection value in the `Value` attribute
        /// - **MULTISELECT**: Contains multiple selection values in the `Values` attribute (list)
        /// - **DURATION**: Contains time duration specification in the `Value` attribute (e.g., "5 days", "2 weeks")
        /// - **ISO_DATE**: Contains date specification in ISO format in the `Value` attribute
        /// - **OKTA_USER_ID**: Contains Okta user ID in the `Value` attribute
        /// 
        /// ### Usage Notes
        /// 
        /// - For `MULTISELECT` type fields, the values will be in the `Values` attribute as a list
        /// - For all other field types, the value will be in the `Value` attribute as a string
        /// - The `Label` and `Type` attributes provide metadata about the field structure
        /// - Field definitions and requirements are determined by the approval system configuration
        /// 
        /// ## Limitations and Considerations
        /// 
        /// 1. **Read-Only**: This data source only retrieves existing request information and cannot modify requests.
        /// 
        /// 2. **Identity Governance Licensing**: This data source requires Okta Identity Governance licensing and proper configuration.
        /// 
        /// 3. **Request Lifecycle**: The data reflects the current state of the request in the approval workflow.
        /// 
        /// 4. **Field Structure**: The field structure and available types depend on the approval system configuration in Okta Identity Governance.
        /// </summary>
        public static Task<GetEndUserMyRequestsResult> InvokeAsync(GetEndUserMyRequestsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEndUserMyRequestsResult>("okta:index/getEndUserMyRequests:getEndUserMyRequests", args ?? new GetEndUserMyRequestsArgs(), options.WithDefaults());

        /// <summary>
        /// Get an End User Request from Okta Identity Governance. This data source allows you to retrieve information about existing access requests in the Okta Identity Governance system.
        /// 
        /// Use this data source to fetch details about a specific request, including its current status, field values, and other metadata.
        /// 
        /// &gt; **Note:** This data source is part of Okta Identity Governance functionality and requires appropriate licensing and configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get a request by its catalog entry ID and request ID
        ///     var example = Okta.GetEndUserMyRequests.Invoke(new()
        ///     {
        ///         EntryId = "cen123456789abcdefgh",
        ///         Id = "reqABCDEFG0123456789",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["requestStatus"] = example.Apply(getEndUserMyRequestsResult =&gt; getEndUserMyRequestsResult.Status),
        ///         ["requestFieldValues"] = example.Apply(getEndUserMyRequestsResult =&gt; getEndUserMyRequestsResult.RequesterFieldValues),
        ///     };
        /// });
        /// ```
        /// 
        /// 
        /// ## Field Type Reference
        /// 
        /// ### Field Types and Values
        /// 
        /// - **TEXT**: Contains free-form text input in the `Value` attribute
        /// - **SELECT**: Contains single selection value in the `Value` attribute
        /// - **MULTISELECT**: Contains multiple selection values in the `Values` attribute (list)
        /// - **DURATION**: Contains time duration specification in the `Value` attribute (e.g., "5 days", "2 weeks")
        /// - **ISO_DATE**: Contains date specification in ISO format in the `Value` attribute
        /// - **OKTA_USER_ID**: Contains Okta user ID in the `Value` attribute
        /// 
        /// ### Usage Notes
        /// 
        /// - For `MULTISELECT` type fields, the values will be in the `Values` attribute as a list
        /// - For all other field types, the value will be in the `Value` attribute as a string
        /// - The `Label` and `Type` attributes provide metadata about the field structure
        /// - Field definitions and requirements are determined by the approval system configuration
        /// 
        /// ## Limitations and Considerations
        /// 
        /// 1. **Read-Only**: This data source only retrieves existing request information and cannot modify requests.
        /// 
        /// 2. **Identity Governance Licensing**: This data source requires Okta Identity Governance licensing and proper configuration.
        /// 
        /// 3. **Request Lifecycle**: The data reflects the current state of the request in the approval workflow.
        /// 
        /// 4. **Field Structure**: The field structure and available types depend on the approval system configuration in Okta Identity Governance.
        /// </summary>
        public static Output<GetEndUserMyRequestsResult> Invoke(GetEndUserMyRequestsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEndUserMyRequestsResult>("okta:index/getEndUserMyRequests:getEndUserMyRequests", args ?? new GetEndUserMyRequestsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get an End User Request from Okta Identity Governance. This data source allows you to retrieve information about existing access requests in the Okta Identity Governance system.
        /// 
        /// Use this data source to fetch details about a specific request, including its current status, field values, and other metadata.
        /// 
        /// &gt; **Note:** This data source is part of Okta Identity Governance functionality and requires appropriate licensing and configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get a request by its catalog entry ID and request ID
        ///     var example = Okta.GetEndUserMyRequests.Invoke(new()
        ///     {
        ///         EntryId = "cen123456789abcdefgh",
        ///         Id = "reqABCDEFG0123456789",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["requestStatus"] = example.Apply(getEndUserMyRequestsResult =&gt; getEndUserMyRequestsResult.Status),
        ///         ["requestFieldValues"] = example.Apply(getEndUserMyRequestsResult =&gt; getEndUserMyRequestsResult.RequesterFieldValues),
        ///     };
        /// });
        /// ```
        /// 
        /// 
        /// ## Field Type Reference
        /// 
        /// ### Field Types and Values
        /// 
        /// - **TEXT**: Contains free-form text input in the `Value` attribute
        /// - **SELECT**: Contains single selection value in the `Value` attribute
        /// - **MULTISELECT**: Contains multiple selection values in the `Values` attribute (list)
        /// - **DURATION**: Contains time duration specification in the `Value` attribute (e.g., "5 days", "2 weeks")
        /// - **ISO_DATE**: Contains date specification in ISO format in the `Value` attribute
        /// - **OKTA_USER_ID**: Contains Okta user ID in the `Value` attribute
        /// 
        /// ### Usage Notes
        /// 
        /// - For `MULTISELECT` type fields, the values will be in the `Values` attribute as a list
        /// - For all other field types, the value will be in the `Value` attribute as a string
        /// - The `Label` and `Type` attributes provide metadata about the field structure
        /// - Field definitions and requirements are determined by the approval system configuration
        /// 
        /// ## Limitations and Considerations
        /// 
        /// 1. **Read-Only**: This data source only retrieves existing request information and cannot modify requests.
        /// 
        /// 2. **Identity Governance Licensing**: This data source requires Okta Identity Governance licensing and proper configuration.
        /// 
        /// 3. **Request Lifecycle**: The data reflects the current state of the request in the approval workflow.
        /// 
        /// 4. **Field Structure**: The field structure and available types depend on the approval system configuration in Okta Identity Governance.
        /// </summary>
        public static Output<GetEndUserMyRequestsResult> Invoke(GetEndUserMyRequestsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEndUserMyRequestsResult>("okta:index/getEndUserMyRequests:getEndUserMyRequests", args ?? new GetEndUserMyRequestsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEndUserMyRequestsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the catalog entry for which the request was made.
        /// </summary>
        [Input("entryId", required: true)]
        public string EntryId { get; set; } = null!;

        /// <summary>
        /// The ID of the request to retrieve.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("requested")]
        public Inputs.GetEndUserMyRequestsRequestedArgs? Requested { get; set; }

        [Input("requestedBy")]
        public Inputs.GetEndUserMyRequestsRequestedByArgs? RequestedBy { get; set; }

        [Input("requestedFor")]
        public Inputs.GetEndUserMyRequestsRequestedForArgs? RequestedFor { get; set; }

        [Input("requesterFieldValues")]
        private List<Inputs.GetEndUserMyRequestsRequesterFieldValueArgs>? _requesterFieldValues;

        /// <summary>
        /// The requester input fields and their values from the request.
        /// </summary>
        public List<Inputs.GetEndUserMyRequestsRequesterFieldValueArgs> RequesterFieldValues
        {
            get => _requesterFieldValues ?? (_requesterFieldValues = new List<Inputs.GetEndUserMyRequestsRequesterFieldValueArgs>());
            set => _requesterFieldValues = value;
        }

        [Input("riskAssessment")]
        public Inputs.GetEndUserMyRequestsRiskAssessmentArgs? RiskAssessment { get; set; }

        public GetEndUserMyRequestsArgs()
        {
        }
        public static new GetEndUserMyRequestsArgs Empty => new GetEndUserMyRequestsArgs();
    }

    public sealed class GetEndUserMyRequestsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the catalog entry for which the request was made.
        /// </summary>
        [Input("entryId", required: true)]
        public Input<string> EntryId { get; set; } = null!;

        /// <summary>
        /// The ID of the request to retrieve.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("requested")]
        public Input<Inputs.GetEndUserMyRequestsRequestedInputArgs>? Requested { get; set; }

        [Input("requestedBy")]
        public Input<Inputs.GetEndUserMyRequestsRequestedByInputArgs>? RequestedBy { get; set; }

        [Input("requestedFor")]
        public Input<Inputs.GetEndUserMyRequestsRequestedForInputArgs>? RequestedFor { get; set; }

        [Input("requesterFieldValues")]
        private InputList<Inputs.GetEndUserMyRequestsRequesterFieldValueInputArgs>? _requesterFieldValues;

        /// <summary>
        /// The requester input fields and their values from the request.
        /// </summary>
        public InputList<Inputs.GetEndUserMyRequestsRequesterFieldValueInputArgs> RequesterFieldValues
        {
            get => _requesterFieldValues ?? (_requesterFieldValues = new InputList<Inputs.GetEndUserMyRequestsRequesterFieldValueInputArgs>());
            set => _requesterFieldValues = value;
        }

        [Input("riskAssessment")]
        public Input<Inputs.GetEndUserMyRequestsRiskAssessmentInputArgs>? RiskAssessment { get; set; }

        public GetEndUserMyRequestsInvokeArgs()
        {
        }
        public static new GetEndUserMyRequestsInvokeArgs Empty => new GetEndUserMyRequestsInvokeArgs();
    }


    [OutputType]
    public sealed class GetEndUserMyRequestsResult
    {
        public readonly string AccessDuration;
        public readonly string Created;
        public readonly string CreatedBy;
        /// <summary>
        /// The ID of the catalog entry for which the request was made.
        /// </summary>
        public readonly string EntryId;
        public readonly string GrantStatus;
        public readonly string Granted;
        /// <summary>
        /// The ID of the request to retrieve.
        /// </summary>
        public readonly string Id;
        public readonly string LastUpdated;
        public readonly string LastUpdatedBy;
        public readonly Outputs.GetEndUserMyRequestsRequestedResult? Requested;
        public readonly Outputs.GetEndUserMyRequestsRequestedByResult? RequestedBy;
        public readonly Outputs.GetEndUserMyRequestsRequestedForResult? RequestedFor;
        /// <summary>
        /// The requester input fields and their values from the request.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEndUserMyRequestsRequesterFieldValueResult> RequesterFieldValues;
        public readonly string Resolved;
        public readonly string RevocationScheduled;
        public readonly string RevocationStatus;
        public readonly string Revoked;
        public readonly Outputs.GetEndUserMyRequestsRiskAssessmentResult? RiskAssessment;
        /// <summary>
        /// The current status of the request. Possible values include: `APPROVED`, `CANCELED`, `DENIED`, `EXPIRED`, `PENDING`, `REJECTED`, `SUBMITTED`
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetEndUserMyRequestsResult(
            string accessDuration,

            string created,

            string createdBy,

            string entryId,

            string grantStatus,

            string granted,

            string id,

            string lastUpdated,

            string lastUpdatedBy,

            Outputs.GetEndUserMyRequestsRequestedResult? requested,

            Outputs.GetEndUserMyRequestsRequestedByResult? requestedBy,

            Outputs.GetEndUserMyRequestsRequestedForResult? requestedFor,

            ImmutableArray<Outputs.GetEndUserMyRequestsRequesterFieldValueResult> requesterFieldValues,

            string resolved,

            string revocationScheduled,

            string revocationStatus,

            string revoked,

            Outputs.GetEndUserMyRequestsRiskAssessmentResult? riskAssessment,

            string status)
        {
            AccessDuration = accessDuration;
            Created = created;
            CreatedBy = createdBy;
            EntryId = entryId;
            GrantStatus = grantStatus;
            Granted = granted;
            Id = id;
            LastUpdated = lastUpdated;
            LastUpdatedBy = lastUpdatedBy;
            Requested = requested;
            RequestedBy = requestedBy;
            RequestedFor = requestedFor;
            RequesterFieldValues = requesterFieldValues;
            Resolved = resolved;
            RevocationScheduled = revocationScheduled;
            RevocationStatus = revocationStatus;
            Revoked = revoked;
            RiskAssessment = riskAssessment;
            Status = status;
        }
    }
}

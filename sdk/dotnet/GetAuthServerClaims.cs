// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    public static class GetAuthServerClaims
    {
        /// <summary>
        /// Get a list of authorization server claims from Okta.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Okta.GetAuthServerClaims.Invoke(new()
        ///     {
        ///         AuthServerId = "default",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAuthServerClaimsResult> InvokeAsync(GetAuthServerClaimsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuthServerClaimsResult>("okta:index/getAuthServerClaims:getAuthServerClaims", args ?? new GetAuthServerClaimsArgs(), options.WithDefaults());

        /// <summary>
        /// Get a list of authorization server claims from Okta.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Okta.GetAuthServerClaims.Invoke(new()
        ///     {
        ///         AuthServerId = "default",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAuthServerClaimsResult> Invoke(GetAuthServerClaimsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthServerClaimsResult>("okta:index/getAuthServerClaims:getAuthServerClaims", args ?? new GetAuthServerClaimsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a list of authorization server claims from Okta.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Okta = Pulumi.Okta;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Okta.GetAuthServerClaims.Invoke(new()
        ///     {
        ///         AuthServerId = "default",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAuthServerClaimsResult> Invoke(GetAuthServerClaimsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthServerClaimsResult>("okta:index/getAuthServerClaims:getAuthServerClaims", args ?? new GetAuthServerClaimsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuthServerClaimsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Auth server ID
        /// </summary>
        [Input("authServerId", required: true)]
        public string AuthServerId { get; set; } = null!;

        public GetAuthServerClaimsArgs()
        {
        }
        public static new GetAuthServerClaimsArgs Empty => new GetAuthServerClaimsArgs();
    }

    public sealed class GetAuthServerClaimsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Auth server ID
        /// </summary>
        [Input("authServerId", required: true)]
        public Input<string> AuthServerId { get; set; } = null!;

        public GetAuthServerClaimsInvokeArgs()
        {
        }
        public static new GetAuthServerClaimsInvokeArgs Empty => new GetAuthServerClaimsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuthServerClaimsResult
    {
        /// <summary>
        /// Auth server ID
        /// </summary>
        public readonly string AuthServerId;
        /// <summary>
        /// Collection of authorization server claims retrieved from Okta with the following properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAuthServerClaimsClaimResult> Claims;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetAuthServerClaimsResult(
            string authServerId,

            ImmutableArray<Outputs.GetAuthServerClaimsClaimResult> claims,

            string id)
        {
            AuthServerId = authServerId;
            Claims = claims;
            Id = id;
        }
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// This resource allows you to create and configure an Okta
    /// [Brand](https://developer.okta.com/docs/reference/api/brands/#brand-object).
    /// 
    /// ## Import
    /// 
    /// An Okta Brand can be imported via the ID.
    /// 
    /// ```sh
    /// $ pulumi import okta:index/brand:Brand example &amp;#60;brand id&amp;#62;
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/brand:Brand")]
    public partial class Brand : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Is a required input flag with when changing custom_privacy_url, shouldn't be considered as a readable property
        /// </summary>
        [Output("agreeToCustomPrivacyPolicy")]
        public Output<bool> AgreeToCustomPrivacyPolicy { get; private set; } = null!;

        /// <summary>
        /// (Read-only) Brand ID, used for read (faux-create). Setting `brand_id` to `default` is equivalent to importing the default brand by its ID.
        /// - `DEPRECATED`: Please stop using this field as it has become noop.
        /// </summary>
        [Output("brandId")]
        public Output<string> BrandId { get; private set; } = null!;

        /// <summary>
        /// Custom privacy policy URL
        /// </summary>
        [Output("customPrivacyPolicyUrl")]
        public Output<string?> CustomPrivacyPolicyUrl { get; private set; } = null!;

        /// <summary>
        /// Default app app instance id
        /// </summary>
        [Output("defaultAppAppInstanceId")]
        public Output<string?> DefaultAppAppInstanceId { get; private set; } = null!;

        /// <summary>
        /// Default app app link name
        /// </summary>
        [Output("defaultAppAppLinkName")]
        public Output<string?> DefaultAppAppLinkName { get; private set; } = null!;

        /// <summary>
        /// Default app classic application uri
        /// </summary>
        [Output("defaultAppClassicApplicationUri")]
        public Output<string?> DefaultAppClassicApplicationUri { get; private set; } = null!;

        /// <summary>
        /// (Read-only) Email Domain ID tied to this brand
        /// </summary>
        [Output("emailDomainId")]
        public Output<string> EmailDomainId { get; private set; } = null!;

        /// <summary>
        /// (Read-only) Is this the default brand
        /// </summary>
        [Output("isDefault")]
        public Output<bool> IsDefault { get; private set; } = null!;

        /// <summary>
        /// (Read-only) Link relations for this object - JSON HAL - Discoverable resources related to the brand
        /// </summary>
        [Output("links")]
        public Output<string> Links { get; private set; } = null!;

        /// <summary>
        /// The language specified as an IETF BCP 47 language tag
        /// </summary>
        [Output("locale")]
        public Output<string?> Locale { get; private set; } = null!;

        /// <summary>
        /// Name of the brand
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Removes "Powered by Okta" from the Okta-hosted sign-in page, and "© 2021 Okta, Inc." from the Okta End-User Dashboard
        /// </summary>
        [Output("removePoweredByOkta")]
        public Output<bool> RemovePoweredByOkta { get; private set; } = null!;


        /// <summary>
        /// Create a Brand resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Brand(string name, BrandArgs? args = null, CustomResourceOptions? options = null)
            : base("okta:index/brand:Brand", name, args ?? new BrandArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Brand(string name, Input<string> id, BrandState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/brand:Brand", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Brand resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Brand Get(string name, Input<string> id, BrandState? state = null, CustomResourceOptions? options = null)
        {
            return new Brand(name, id, state, options);
        }
    }

    public sealed class BrandArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is a required input flag with when changing custom_privacy_url, shouldn't be considered as a readable property
        /// </summary>
        [Input("agreeToCustomPrivacyPolicy")]
        public Input<bool>? AgreeToCustomPrivacyPolicy { get; set; }

        /// <summary>
        /// (Read-only) Brand ID, used for read (faux-create). Setting `brand_id` to `default` is equivalent to importing the default brand by its ID.
        /// - `DEPRECATED`: Please stop using this field as it has become noop.
        /// </summary>
        [Input("brandId")]
        public Input<string>? BrandId { get; set; }

        /// <summary>
        /// Custom privacy policy URL
        /// </summary>
        [Input("customPrivacyPolicyUrl")]
        public Input<string>? CustomPrivacyPolicyUrl { get; set; }

        /// <summary>
        /// Default app app instance id
        /// </summary>
        [Input("defaultAppAppInstanceId")]
        public Input<string>? DefaultAppAppInstanceId { get; set; }

        /// <summary>
        /// Default app app link name
        /// </summary>
        [Input("defaultAppAppLinkName")]
        public Input<string>? DefaultAppAppLinkName { get; set; }

        /// <summary>
        /// Default app classic application uri
        /// </summary>
        [Input("defaultAppClassicApplicationUri")]
        public Input<string>? DefaultAppClassicApplicationUri { get; set; }

        /// <summary>
        /// The language specified as an IETF BCP 47 language tag
        /// </summary>
        [Input("locale")]
        public Input<string>? Locale { get; set; }

        /// <summary>
        /// Name of the brand
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Removes "Powered by Okta" from the Okta-hosted sign-in page, and "© 2021 Okta, Inc." from the Okta End-User Dashboard
        /// </summary>
        [Input("removePoweredByOkta")]
        public Input<bool>? RemovePoweredByOkta { get; set; }

        public BrandArgs()
        {
        }
        public static new BrandArgs Empty => new BrandArgs();
    }

    public sealed class BrandState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is a required input flag with when changing custom_privacy_url, shouldn't be considered as a readable property
        /// </summary>
        [Input("agreeToCustomPrivacyPolicy")]
        public Input<bool>? AgreeToCustomPrivacyPolicy { get; set; }

        /// <summary>
        /// (Read-only) Brand ID, used for read (faux-create). Setting `brand_id` to `default` is equivalent to importing the default brand by its ID.
        /// - `DEPRECATED`: Please stop using this field as it has become noop.
        /// </summary>
        [Input("brandId")]
        public Input<string>? BrandId { get; set; }

        /// <summary>
        /// Custom privacy policy URL
        /// </summary>
        [Input("customPrivacyPolicyUrl")]
        public Input<string>? CustomPrivacyPolicyUrl { get; set; }

        /// <summary>
        /// Default app app instance id
        /// </summary>
        [Input("defaultAppAppInstanceId")]
        public Input<string>? DefaultAppAppInstanceId { get; set; }

        /// <summary>
        /// Default app app link name
        /// </summary>
        [Input("defaultAppAppLinkName")]
        public Input<string>? DefaultAppAppLinkName { get; set; }

        /// <summary>
        /// Default app classic application uri
        /// </summary>
        [Input("defaultAppClassicApplicationUri")]
        public Input<string>? DefaultAppClassicApplicationUri { get; set; }

        /// <summary>
        /// (Read-only) Email Domain ID tied to this brand
        /// </summary>
        [Input("emailDomainId")]
        public Input<string>? EmailDomainId { get; set; }

        /// <summary>
        /// (Read-only) Is this the default brand
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// (Read-only) Link relations for this object - JSON HAL - Discoverable resources related to the brand
        /// </summary>
        [Input("links")]
        public Input<string>? Links { get; set; }

        /// <summary>
        /// The language specified as an IETF BCP 47 language tag
        /// </summary>
        [Input("locale")]
        public Input<string>? Locale { get; set; }

        /// <summary>
        /// Name of the brand
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Removes "Powered by Okta" from the Okta-hosted sign-in page, and "© 2021 Okta, Inc." from the Okta End-User Dashboard
        /// </summary>
        [Input("removePoweredByOkta")]
        public Input<bool>? RemovePoweredByOkta { get; set; }

        public BrandState()
        {
        }
        public static new BrandState Empty => new BrandState();
    }
}

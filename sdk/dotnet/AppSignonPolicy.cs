// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myAppPolicy = new Okta.AppSignonPolicy("myAppPolicy", new()
    ///     {
    ///         Description = "Authentication Policy to be used on my app.",
    ///     });
    /// 
    ///     var myApp = new Okta.App.OAuth("myApp", new()
    ///     {
    ///         Label = "My App",
    ///         Type = "web",
    ///         GrantTypes = new[]
    ///         {
    ///             "authorization_code",
    ///         },
    ///         RedirectUris = new[]
    ///         {
    ///             "http://localhost:3000",
    ///         },
    ///         PostLogoutRedirectUris = new[]
    ///         {
    ///             "http://localhost:3000",
    ///         },
    ///         ResponseTypes = new[]
    ///         {
    ///             "code",
    ///         },
    ///         AuthenticationPolicy = myAppPolicy.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// The created policy can be extended using `app_signon_policy_rules`.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myAppPolicy = new Okta.AppSignonPolicy("myAppPolicy", new()
    ///     {
    ///         Description = "Authentication Policy to be used on my app.",
    ///     });
    /// 
    ///     var someRule = new Okta.AppSignonPolicyRule("someRule", new()
    ///     {
    ///         PolicyId = resource.Okta_app_signon_policy.My_app_policy.Id,
    ///         FactorMode = "1FA",
    ///         ReAuthenticationFrequency = "PT43800H",
    ///         Constraints = new[]
    ///         {
    ///             JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 ["knowledge"] = new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["types"] = new[]
    ///                     {
    ///                         "password",
    ///                     },
    ///                 },
    ///             }),
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/appSignonPolicy:AppSignonPolicy")]
    public partial class AppSignonPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description of the policy.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Name of the policy.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a AppSignonPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppSignonPolicy(string name, AppSignonPolicyArgs args, CustomResourceOptions? options = null)
            : base("okta:index/appSignonPolicy:AppSignonPolicy", name, args ?? new AppSignonPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppSignonPolicy(string name, Input<string> id, AppSignonPolicyState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/appSignonPolicy:AppSignonPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppSignonPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppSignonPolicy Get(string name, Input<string> id, AppSignonPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new AppSignonPolicy(name, id, state, options);
        }
    }

    public sealed class AppSignonPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the policy.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// Name of the policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public AppSignonPolicyArgs()
        {
        }
        public static new AppSignonPolicyArgs Empty => new AppSignonPolicyArgs();
    }

    public sealed class AppSignonPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public AppSignonPolicyState()
        {
        }
        public static new AppSignonPolicyState Empty => new AppSignonPolicyState();
    }
}

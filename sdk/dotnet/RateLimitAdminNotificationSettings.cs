// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// Manages principal rate limits.
    /// Principal Rate Limits provides operations to manage Principal Rate Limits for your organization.
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Okta.RateLimitAdminNotificationSettings("example", new()
    ///     {
    ///         NotificationsEnabled = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import okta:index/rateLimitAdminNotificationSettings:RateLimitAdminNotificationSettings example .
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/rateLimitAdminNotificationSettings:RateLimitAdminNotificationSettings")]
    public partial class RateLimitAdminNotificationSettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enables or disables admin notifications for rate limiting events.
        /// </summary>
        [Output("notificationsEnabled")]
        public Output<bool> NotificationsEnabled { get; private set; } = null!;


        /// <summary>
        /// Create a RateLimitAdminNotificationSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RateLimitAdminNotificationSettings(string name, RateLimitAdminNotificationSettingsArgs args, CustomResourceOptions? options = null)
            : base("okta:index/rateLimitAdminNotificationSettings:RateLimitAdminNotificationSettings", name, args ?? new RateLimitAdminNotificationSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RateLimitAdminNotificationSettings(string name, Input<string> id, RateLimitAdminNotificationSettingsState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/rateLimitAdminNotificationSettings:RateLimitAdminNotificationSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RateLimitAdminNotificationSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RateLimitAdminNotificationSettings Get(string name, Input<string> id, RateLimitAdminNotificationSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new RateLimitAdminNotificationSettings(name, id, state, options);
        }
    }

    public sealed class RateLimitAdminNotificationSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enables or disables admin notifications for rate limiting events.
        /// </summary>
        [Input("notificationsEnabled", required: true)]
        public Input<bool> NotificationsEnabled { get; set; } = null!;

        public RateLimitAdminNotificationSettingsArgs()
        {
        }
        public static new RateLimitAdminNotificationSettingsArgs Empty => new RateLimitAdminNotificationSettingsArgs();
    }

    public sealed class RateLimitAdminNotificationSettingsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enables or disables admin notifications for rate limiting events.
        /// </summary>
        [Input("notificationsEnabled")]
        public Input<bool>? NotificationsEnabled { get; set; }

        public RateLimitAdminNotificationSettingsState()
        {
        }
        public static new RateLimitAdminNotificationSettingsState Empty => new RateLimitAdminNotificationSettingsState();
    }
}

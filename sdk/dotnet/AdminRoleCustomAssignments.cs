// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// Resource to manage the assignment and unassignment of Custom Roles
    /// These operations allow the creation and manipulation of custom roles as custom collections of permissions.
    /// 
    /// &gt; **NOTE:** This an Early Access feature.
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import okta:index/adminRoleCustomAssignments:AdminRoleCustomAssignments example &lt;resource_set_id&gt;/&lt;custom_role_id&gt;
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/adminRoleCustomAssignments:AdminRoleCustomAssignments")]
    public partial class AdminRoleCustomAssignments : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of the Custom Role
        /// </summary>
        [Output("customRoleId")]
        public Output<string> CustomRoleId { get; private set; } = null!;

        /// <summary>
        /// The hrefs that point to User(s) and/or Group(s) that receive the Role
        /// </summary>
        [Output("members")]
        public Output<ImmutableArray<string>> Members { get; private set; } = null!;

        /// <summary>
        /// ID of the target Resource Set
        /// </summary>
        [Output("resourceSetId")]
        public Output<string> ResourceSetId { get; private set; } = null!;


        /// <summary>
        /// Create a AdminRoleCustomAssignments resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AdminRoleCustomAssignments(string name, AdminRoleCustomAssignmentsArgs args, CustomResourceOptions? options = null)
            : base("okta:index/adminRoleCustomAssignments:AdminRoleCustomAssignments", name, args ?? new AdminRoleCustomAssignmentsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AdminRoleCustomAssignments(string name, Input<string> id, AdminRoleCustomAssignmentsState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/adminRoleCustomAssignments:AdminRoleCustomAssignments", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AdminRoleCustomAssignments resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AdminRoleCustomAssignments Get(string name, Input<string> id, AdminRoleCustomAssignmentsState? state = null, CustomResourceOptions? options = null)
        {
            return new AdminRoleCustomAssignments(name, id, state, options);
        }
    }

    public sealed class AdminRoleCustomAssignmentsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the Custom Role
        /// </summary>
        [Input("customRoleId", required: true)]
        public Input<string> CustomRoleId { get; set; } = null!;

        [Input("members")]
        private InputList<string>? _members;

        /// <summary>
        /// The hrefs that point to User(s) and/or Group(s) that receive the Role
        /// </summary>
        public InputList<string> Members
        {
            get => _members ?? (_members = new InputList<string>());
            set => _members = value;
        }

        /// <summary>
        /// ID of the target Resource Set
        /// </summary>
        [Input("resourceSetId", required: true)]
        public Input<string> ResourceSetId { get; set; } = null!;

        public AdminRoleCustomAssignmentsArgs()
        {
        }
        public static new AdminRoleCustomAssignmentsArgs Empty => new AdminRoleCustomAssignmentsArgs();
    }

    public sealed class AdminRoleCustomAssignmentsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the Custom Role
        /// </summary>
        [Input("customRoleId")]
        public Input<string>? CustomRoleId { get; set; }

        [Input("members")]
        private InputList<string>? _members;

        /// <summary>
        /// The hrefs that point to User(s) and/or Group(s) that receive the Role
        /// </summary>
        public InputList<string> Members
        {
            get => _members ?? (_members = new InputList<string>());
            set => _members = value;
        }

        /// <summary>
        /// ID of the target Resource Set
        /// </summary>
        [Input("resourceSetId")]
        public Input<string>? ResourceSetId { get; set; }

        public AdminRoleCustomAssignmentsState()
        {
        }
        public static new AdminRoleCustomAssignmentsState Empty => new AdminRoleCustomAssignmentsState();
    }
}

// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// Manages request sequence. This resource allows you to read and delete an Okta [request-sequence](https://developer.okta.com/docs/api/iga/openapi/governance.requests.admin.v2/tag/Request-Sequences/#tag/Request-Sequences).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Okta.RequestSequence("test", new()
    ///     {
    ///         IdProperty = "&lt;sequence_id&gt;",
    ///         ResourceId = "&lt;resource_id&gt;",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import okta:index/requestSequence:RequestSequence example &lt;resource_id&gt;/&lt;id&gt;
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/requestSequence:RequestSequence")]
    public partial class RequestSequence : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enum: `APP`, `GROUP`.
        /// </summary>
        [Output("compatibleResourceTypes")]
        public Output<ImmutableArray<string>> CompatibleResourceTypes { get; private set; } = null!;

        /// <summary>
        /// The description of the request condition.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The id of the sequence.Must be of 24 characters length.
        /// </summary>
        [Output("idProperty")]
        public Output<string> IdProperty { get; private set; } = null!;

        /// <summary>
        /// Link to edit the request sequence.
        /// </summary>
        [Output("link")]
        public Output<string> Link { get; private set; } = null!;

        /// <summary>
        /// The access duration settings for the request condition
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The id of the resource in Okta ID format.
        /// </summary>
        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;


        /// <summary>
        /// Create a RequestSequence resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RequestSequence(string name, RequestSequenceArgs args, CustomResourceOptions? options = null)
            : base("okta:index/requestSequence:RequestSequence", name, args ?? new RequestSequenceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RequestSequence(string name, Input<string> id, RequestSequenceState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/requestSequence:RequestSequence", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RequestSequence resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RequestSequence Get(string name, Input<string> id, RequestSequenceState? state = null, CustomResourceOptions? options = null)
        {
            return new RequestSequence(name, id, state, options);
        }
    }

    public sealed class RequestSequenceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of the sequence.Must be of 24 characters length.
        /// </summary>
        [Input("idProperty", required: true)]
        public Input<string> IdProperty { get; set; } = null!;

        /// <summary>
        /// The id of the resource in Okta ID format.
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        public RequestSequenceArgs()
        {
        }
        public static new RequestSequenceArgs Empty => new RequestSequenceArgs();
    }

    public sealed class RequestSequenceState : global::Pulumi.ResourceArgs
    {
        [Input("compatibleResourceTypes")]
        private InputList<string>? _compatibleResourceTypes;

        /// <summary>
        /// Enum: `APP`, `GROUP`.
        /// </summary>
        public InputList<string> CompatibleResourceTypes
        {
            get => _compatibleResourceTypes ?? (_compatibleResourceTypes = new InputList<string>());
            set => _compatibleResourceTypes = value;
        }

        /// <summary>
        /// The description of the request condition.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The id of the sequence.Must be of 24 characters length.
        /// </summary>
        [Input("idProperty")]
        public Input<string>? IdProperty { get; set; }

        /// <summary>
        /// Link to edit the request sequence.
        /// </summary>
        [Input("link")]
        public Input<string>? Link { get; set; }

        /// <summary>
        /// The access duration settings for the request condition
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The id of the resource in Okta ID format.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        public RequestSequenceState()
        {
        }
        public static new RequestSequenceState Empty => new RequestSequenceState();
    }
}

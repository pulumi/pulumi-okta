// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// This resource allows you to configure subscriptions of a Role with a specific type.
    /// Check [configure email notifications](https://help.okta.com/oie/en-us/Content/Topics/Security/custom-admin-role/administrator-email-settings.htm)
    /// page regarding what notifications are available for specific admin roles.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var test = new Okta.RoleSubscription("test", new Okta.RoleSubscriptionArgs
    ///         {
    ///             NotificationType = "APP_IMPORT",
    ///             RoleType = "SUPER_ADMIN",
    ///             Status = "unsubscribed",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// A role subscription can be imported via the Okta ID.
    /// 
    /// ```sh
    ///  $ pulumi import okta:index/roleSubscription:RoleSubscription example &amp;#60;role_type&amp;#62;/&amp;#60;notification_type&amp;#62;
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/roleSubscription:RoleSubscription")]
    public partial class RoleSubscription : Pulumi.CustomResource
    {
        /// <summary>
        /// Type of the notification. Valid values:
        /// </summary>
        [Output("notificationType")]
        public Output<string> NotificationType { get; private set; } = null!;

        /// <summary>
        /// Type of the role. Valid values: `"SUPER_ADMIN"`, `"ORG_ADMIN"`, `"API_ACCESS_MANAGEMENT_ADMIN"`,
        /// `"APP_ADMIN"`, `"USER_ADMIN"`, `"MOBILE_ADMIN"`, `"READ_ONLY_ADMIN"`, `"HELP_DESK_ADMIN"`, `"API_ADMIN"`.
        /// </summary>
        [Output("roleType")]
        public Output<string> RoleType { get; private set; } = null!;

        /// <summary>
        /// Subscription status. Valid values: `"subscribed"`, `"unsubscribed"`.
        /// </summary>
        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;


        /// <summary>
        /// Create a RoleSubscription resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RoleSubscription(string name, RoleSubscriptionArgs args, CustomResourceOptions? options = null)
            : base("okta:index/roleSubscription:RoleSubscription", name, args ?? new RoleSubscriptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RoleSubscription(string name, Input<string> id, RoleSubscriptionState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/roleSubscription:RoleSubscription", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RoleSubscription resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RoleSubscription Get(string name, Input<string> id, RoleSubscriptionState? state = null, CustomResourceOptions? options = null)
        {
            return new RoleSubscription(name, id, state, options);
        }
    }

    public sealed class RoleSubscriptionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Type of the notification. Valid values:
        /// </summary>
        [Input("notificationType", required: true)]
        public Input<string> NotificationType { get; set; } = null!;

        /// <summary>
        /// Type of the role. Valid values: `"SUPER_ADMIN"`, `"ORG_ADMIN"`, `"API_ACCESS_MANAGEMENT_ADMIN"`,
        /// `"APP_ADMIN"`, `"USER_ADMIN"`, `"MOBILE_ADMIN"`, `"READ_ONLY_ADMIN"`, `"HELP_DESK_ADMIN"`, `"API_ADMIN"`.
        /// </summary>
        [Input("roleType", required: true)]
        public Input<string> RoleType { get; set; } = null!;

        /// <summary>
        /// Subscription status. Valid values: `"subscribed"`, `"unsubscribed"`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public RoleSubscriptionArgs()
        {
        }
    }

    public sealed class RoleSubscriptionState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Type of the notification. Valid values:
        /// </summary>
        [Input("notificationType")]
        public Input<string>? NotificationType { get; set; }

        /// <summary>
        /// Type of the role. Valid values: `"SUPER_ADMIN"`, `"ORG_ADMIN"`, `"API_ACCESS_MANAGEMENT_ADMIN"`,
        /// `"APP_ADMIN"`, `"USER_ADMIN"`, `"MOBILE_ADMIN"`, `"READ_ONLY_ADMIN"`, `"HELP_DESK_ADMIN"`, `"API_ADMIN"`.
        /// </summary>
        [Input("roleType")]
        public Input<string>? RoleType { get; set; }

        /// <summary>
        /// Subscription status. Valid values: `"subscribed"`, `"unsubscribed"`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public RoleSubscriptionState()
        {
        }
    }
}

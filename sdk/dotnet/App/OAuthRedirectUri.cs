// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta.App
{
    /// <summary>
    /// This resource allows you to manage redirection URI for use in redirect-based flows.
    /// 
    /// &gt; `okta.app.OAuthRedirectUri` has been marked deprecated and will be removed
    /// in the v5 release of the provider. Operators should manage the redirect URIs for
    /// an oauth app directly on that resource.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Okta.App.OAuth("test", new()
    ///     {
    ///         Label = "testAcc_replace_with_uuid",
    ///         Type = "web",
    ///         GrantTypes = new[]
    ///         {
    ///             "authorization_code",
    ///         },
    ///         ResponseTypes = new[]
    ///         {
    ///             "code",
    ///         },
    ///         RedirectUris = new[]
    ///         {
    ///             "myapp://callback",
    ///         },
    ///     });
    /// 
    ///     var testOAuthRedirectUri = new Okta.App.OAuthRedirectUri("test", new()
    ///     {
    ///         AppId = test.Id,
    ///         Uri = "http://google.com",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// A redirect URI can be imported via the Okta ID.
    /// 
    /// ```sh
    /// $ pulumi import okta:app/oAuthRedirectUri:OAuthRedirectUri example &amp;#60;app id&amp;#62;/&amp;#60;uri&amp;#62;
    /// ```
    /// </summary>
    [OktaResourceType("okta:app/oAuthRedirectUri:OAuthRedirectUri")]
    public partial class OAuthRedirectUri : global::Pulumi.CustomResource
    {
        /// <summary>
        /// OAuth application ID. Note: `app_id` can not be changed once set.
        /// </summary>
        [Output("appId")]
        public Output<string> AppId { get; private set; } = null!;

        /// <summary>
        /// Redirect URI to append to Okta OIDC application.
        /// </summary>
        [Output("uri")]
        public Output<string> Uri { get; private set; } = null!;


        /// <summary>
        /// Create a OAuthRedirectUri resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OAuthRedirectUri(string name, OAuthRedirectUriArgs args, CustomResourceOptions? options = null)
            : base("okta:app/oAuthRedirectUri:OAuthRedirectUri", name, args ?? new OAuthRedirectUriArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OAuthRedirectUri(string name, Input<string> id, OAuthRedirectUriState? state = null, CustomResourceOptions? options = null)
            : base("okta:app/oAuthRedirectUri:OAuthRedirectUri", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OAuthRedirectUri resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OAuthRedirectUri Get(string name, Input<string> id, OAuthRedirectUriState? state = null, CustomResourceOptions? options = null)
        {
            return new OAuthRedirectUri(name, id, state, options);
        }
    }

    public sealed class OAuthRedirectUriArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// OAuth application ID. Note: `app_id` can not be changed once set.
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        /// <summary>
        /// Redirect URI to append to Okta OIDC application.
        /// </summary>
        [Input("uri", required: true)]
        public Input<string> Uri { get; set; } = null!;

        public OAuthRedirectUriArgs()
        {
        }
        public static new OAuthRedirectUriArgs Empty => new OAuthRedirectUriArgs();
    }

    public sealed class OAuthRedirectUriState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// OAuth application ID. Note: `app_id` can not be changed once set.
        /// </summary>
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        /// <summary>
        /// Redirect URI to append to Okta OIDC application.
        /// </summary>
        [Input("uri")]
        public Input<string>? Uri { get; set; }

        public OAuthRedirectUriState()
        {
        }
        public static new OAuthRedirectUriState Empty => new OAuthRedirectUriState();
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta.App
{
    /// <summary>
    /// Assigns an access policy (colloquially known as a sign-on policy and/or an
    /// authentication policy) to an application. This resource does not perform true
    /// delete as it will not delete an application and the app's access policy can't be
    /// removed; it can only be changed to a different access policy. This resource is
    /// only logical within the context of an application therefore `app_id` is
    /// immutable once set. Use this resource to manage assigning an access policy to an
    /// application. It will assign the given `policy_id` to the application at creation
    /// and during update.
    /// 
    /// &gt; Inside the product a sign-on policy is referenced as an _authentication
    /// policy_, in the public API the policy is of type
    /// [`ACCESS_POLICY`](https://developer.okta.com/docs/reference/api/policy/#policy-object).
    /// 
    /// ## Import
    /// 
    /// An Okta App's Access Policy Assignment can be imported via its associated Application ID.
    /// 
    /// ```sh
    /// $ pulumi import okta:app/accessPolicyAssignment:AccessPolicyAssignment example &amp;#60;app id&amp;#62;
    /// ```
    /// </summary>
    [OktaResourceType("okta:app/accessPolicyAssignment:AccessPolicyAssignment")]
    public partial class AccessPolicyAssignment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The application ID; this value is immutable and can not be updated.
        /// </summary>
        [Output("appId")]
        public Output<string> AppId { get; private set; } = null!;

        /// <summary>
        /// The access policy ID.
        /// </summary>
        [Output("policyId")]
        public Output<string> PolicyId { get; private set; } = null!;


        /// <summary>
        /// Create a AccessPolicyAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccessPolicyAssignment(string name, AccessPolicyAssignmentArgs args, CustomResourceOptions? options = null)
            : base("okta:app/accessPolicyAssignment:AccessPolicyAssignment", name, args ?? new AccessPolicyAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccessPolicyAssignment(string name, Input<string> id, AccessPolicyAssignmentState? state = null, CustomResourceOptions? options = null)
            : base("okta:app/accessPolicyAssignment:AccessPolicyAssignment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccessPolicyAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccessPolicyAssignment Get(string name, Input<string> id, AccessPolicyAssignmentState? state = null, CustomResourceOptions? options = null)
        {
            return new AccessPolicyAssignment(name, id, state, options);
        }
    }

    public sealed class AccessPolicyAssignmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The application ID; this value is immutable and can not be updated.
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        /// <summary>
        /// The access policy ID.
        /// </summary>
        [Input("policyId", required: true)]
        public Input<string> PolicyId { get; set; } = null!;

        public AccessPolicyAssignmentArgs()
        {
        }
        public static new AccessPolicyAssignmentArgs Empty => new AccessPolicyAssignmentArgs();
    }

    public sealed class AccessPolicyAssignmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The application ID; this value is immutable and can not be updated.
        /// </summary>
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        /// <summary>
        /// The access policy ID.
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        public AccessPolicyAssignmentState()
        {
        }
        public static new AccessPolicyAssignmentState Empty => new AccessPolicyAssignmentState();
    }
}

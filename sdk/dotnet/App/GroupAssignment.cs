// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta.App
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Okta.App.GroupAssignment("example", new()
    ///     {
    ///         AppId = "&lt;app id&gt;",
    ///         GroupId = "&lt;group id&gt;",
    ///         Profile = @"{
    ///   ""&lt;app_profile_field&gt;"": ""&lt;value&gt;""
    /// }
    /// ",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import okta:app/groupAssignment:GroupAssignment example &amp;#60;app_id&amp;#62;/&amp;#60;group_id&amp;#62
    /// ```
    /// </summary>
    [OktaResourceType("okta:app/groupAssignment:GroupAssignment")]
    public partial class GroupAssignment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// App to associate group with
        /// </summary>
        [Output("appId")]
        public Output<string> AppId { get; private set; } = null!;

        /// <summary>
        /// Group associated with the application
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// Priority of group assignment.
        /// </summary>
        [Output("priority")]
        public Output<int?> Priority { get; private set; } = null!;

        /// <summary>
        /// JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)
        /// </summary>
        [Output("profile")]
        public Output<string?> Profile { get; private set; } = null!;

        /// <summary>
        /// Retain the group assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.
        /// </summary>
        [Output("retainAssignment")]
        public Output<bool?> RetainAssignment { get; private set; } = null!;


        /// <summary>
        /// Create a GroupAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GroupAssignment(string name, GroupAssignmentArgs args, CustomResourceOptions? options = null)
            : base("okta:app/groupAssignment:GroupAssignment", name, args ?? new GroupAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GroupAssignment(string name, Input<string> id, GroupAssignmentState? state = null, CustomResourceOptions? options = null)
            : base("okta:app/groupAssignment:GroupAssignment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GroupAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GroupAssignment Get(string name, Input<string> id, GroupAssignmentState? state = null, CustomResourceOptions? options = null)
        {
            return new GroupAssignment(name, id, state, options);
        }
    }

    public sealed class GroupAssignmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// App to associate group with
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        /// <summary>
        /// Group associated with the application
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// Priority of group assignment.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)
        /// </summary>
        [Input("profile")]
        public Input<string>? Profile { get; set; }

        /// <summary>
        /// Retain the group assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.
        /// </summary>
        [Input("retainAssignment")]
        public Input<bool>? RetainAssignment { get; set; }

        public GroupAssignmentArgs()
        {
        }
        public static new GroupAssignmentArgs Empty => new GroupAssignmentArgs();
    }

    public sealed class GroupAssignmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// App to associate group with
        /// </summary>
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        /// <summary>
        /// Group associated with the application
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// Priority of group assignment.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)
        /// </summary>
        [Input("profile")]
        public Input<string>? Profile { get; set; }

        /// <summary>
        /// Retain the group assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.
        /// </summary>
        [Input("retainAssignment")]
        public Input<bool>? RetainAssignment { get; set; }

        public GroupAssignmentState()
        {
        }
        public static new GroupAssignmentState Empty => new GroupAssignmentState();
    }
}

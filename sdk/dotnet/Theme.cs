// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// ## Import
    /// 
    /// An Okta Brand can be imported via the ID.
    /// 
    /// ```sh
    ///  $ pulumi import okta:index/theme:Theme example &amp;#60;brand id&amp;#62;/&amp;#60;theme id&amp;#62;
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/theme:Theme")]
    public partial class Theme : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Optional) Local path to background image file. Setting the value to the blank string `""` will delete the favicon on the theme at Okta but will not delete the local file.
        /// </summary>
        [Output("backgroundImage")]
        public Output<string?> BackgroundImage { get; private set; } = null!;

        /// <summary>
        /// (Read-Only) Background image URL
        /// </summary>
        [Output("backgroundImageUrl")]
        public Output<string> BackgroundImageUrl { get; private set; } = null!;

        /// <summary>
        /// Brand ID
        /// </summary>
        [Output("brandId")]
        public Output<string> BrandId { get; private set; } = null!;

        /// <summary>
        /// (Required) Variant for email templates. Valid values: (`OKTA_DEFAULT`, `FULL_THEME`)
        /// </summary>
        [Output("emailTemplateTouchPointVariant")]
        public Output<string?> EmailTemplateTouchPointVariant { get; private set; } = null!;

        /// <summary>
        /// (Required) Variant for the Okta End-User Dashboard. Valid values: (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)
        /// </summary>
        [Output("endUserDashboardTouchPointVariant")]
        public Output<string?> EndUserDashboardTouchPointVariant { get; private set; } = null!;

        /// <summary>
        /// (Required) Variant for the error page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
        /// </summary>
        [Output("errorPageTouchPointVariant")]
        public Output<string?> ErrorPageTouchPointVariant { get; private set; } = null!;

        /// <summary>
        /// (Optional) Local path to favicon file. Setting the value to the blank string `""` will delete the favicon on the theme at Okta but will not delete the local file.
        /// </summary>
        [Output("favicon")]
        public Output<string?> Favicon { get; private set; } = null!;

        /// <summary>
        /// (Read-Only) Favicon URL
        /// </summary>
        [Output("faviconUrl")]
        public Output<string> FaviconUrl { get; private set; } = null!;

        /// <summary>
        /// Link relations for this object - JSON HAL - (Read-Only) Discoverable resources related to the brand
        /// </summary>
        [Output("links")]
        public Output<string> Links { get; private set; } = null!;

        /// <summary>
        /// (Optional) Local path to logo file. Setting the value to the blank string `""` will delete the logo on the theme at Okta but will not delete the local file.
        /// </summary>
        [Output("logo")]
        public Output<string?> Logo { get; private set; } = null!;

        /// <summary>
        /// (Read-Only) Logo URL
        /// </summary>
        [Output("logoUrl")]
        public Output<string> LogoUrl { get; private set; } = null!;

        /// <summary>
        /// (Optional) Primary color contrast hex code
        /// </summary>
        [Output("primaryColorContrastHex")]
        public Output<string?> PrimaryColorContrastHex { get; private set; } = null!;

        /// <summary>
        /// (Required) Primary color hex code
        /// </summary>
        [Output("primaryColorHex")]
        public Output<string?> PrimaryColorHex { get; private set; } = null!;

        /// <summary>
        /// Secondary color contrast hex code
        /// </summary>
        [Output("secondaryColorContrastHex")]
        public Output<string?> SecondaryColorContrastHex { get; private set; } = null!;

        /// <summary>
        /// (Required) Secondary color hex code
        /// - `secondary_color_contrast_hex` (Optional) Secondary color contrast hex code
        /// </summary>
        [Output("secondaryColorHex")]
        public Output<string?> SecondaryColorHex { get; private set; } = null!;

        /// <summary>
        /// (Required) Variant for the Okta Sign-In Page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
        /// </summary>
        [Output("signInPageTouchPointVariant")]
        public Output<string?> SignInPageTouchPointVariant { get; private set; } = null!;

        /// <summary>
        /// Theme ID, used for read (faux-create)
        /// </summary>
        [Output("themeId")]
        public Output<string?> ThemeId { get; private set; } = null!;


        /// <summary>
        /// Create a Theme resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Theme(string name, ThemeArgs args, CustomResourceOptions? options = null)
            : base("okta:index/theme:Theme", name, args ?? new ThemeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Theme(string name, Input<string> id, ThemeState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/theme:Theme", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Theme resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Theme Get(string name, Input<string> id, ThemeState? state = null, CustomResourceOptions? options = null)
        {
            return new Theme(name, id, state, options);
        }
    }

    public sealed class ThemeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Optional) Local path to background image file. Setting the value to the blank string `""` will delete the favicon on the theme at Okta but will not delete the local file.
        /// </summary>
        [Input("backgroundImage")]
        public Input<string>? BackgroundImage { get; set; }

        /// <summary>
        /// Brand ID
        /// </summary>
        [Input("brandId", required: true)]
        public Input<string> BrandId { get; set; } = null!;

        /// <summary>
        /// (Required) Variant for email templates. Valid values: (`OKTA_DEFAULT`, `FULL_THEME`)
        /// </summary>
        [Input("emailTemplateTouchPointVariant")]
        public Input<string>? EmailTemplateTouchPointVariant { get; set; }

        /// <summary>
        /// (Required) Variant for the Okta End-User Dashboard. Valid values: (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)
        /// </summary>
        [Input("endUserDashboardTouchPointVariant")]
        public Input<string>? EndUserDashboardTouchPointVariant { get; set; }

        /// <summary>
        /// (Required) Variant for the error page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
        /// </summary>
        [Input("errorPageTouchPointVariant")]
        public Input<string>? ErrorPageTouchPointVariant { get; set; }

        /// <summary>
        /// (Optional) Local path to favicon file. Setting the value to the blank string `""` will delete the favicon on the theme at Okta but will not delete the local file.
        /// </summary>
        [Input("favicon")]
        public Input<string>? Favicon { get; set; }

        /// <summary>
        /// (Optional) Local path to logo file. Setting the value to the blank string `""` will delete the logo on the theme at Okta but will not delete the local file.
        /// </summary>
        [Input("logo")]
        public Input<string>? Logo { get; set; }

        /// <summary>
        /// (Optional) Primary color contrast hex code
        /// </summary>
        [Input("primaryColorContrastHex")]
        public Input<string>? PrimaryColorContrastHex { get; set; }

        /// <summary>
        /// (Required) Primary color hex code
        /// </summary>
        [Input("primaryColorHex")]
        public Input<string>? PrimaryColorHex { get; set; }

        /// <summary>
        /// Secondary color contrast hex code
        /// </summary>
        [Input("secondaryColorContrastHex")]
        public Input<string>? SecondaryColorContrastHex { get; set; }

        /// <summary>
        /// (Required) Secondary color hex code
        /// - `secondary_color_contrast_hex` (Optional) Secondary color contrast hex code
        /// </summary>
        [Input("secondaryColorHex")]
        public Input<string>? SecondaryColorHex { get; set; }

        /// <summary>
        /// (Required) Variant for the Okta Sign-In Page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
        /// </summary>
        [Input("signInPageTouchPointVariant")]
        public Input<string>? SignInPageTouchPointVariant { get; set; }

        /// <summary>
        /// Theme ID, used for read (faux-create)
        /// </summary>
        [Input("themeId")]
        public Input<string>? ThemeId { get; set; }

        public ThemeArgs()
        {
        }
        public static new ThemeArgs Empty => new ThemeArgs();
    }

    public sealed class ThemeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Optional) Local path to background image file. Setting the value to the blank string `""` will delete the favicon on the theme at Okta but will not delete the local file.
        /// </summary>
        [Input("backgroundImage")]
        public Input<string>? BackgroundImage { get; set; }

        /// <summary>
        /// (Read-Only) Background image URL
        /// </summary>
        [Input("backgroundImageUrl")]
        public Input<string>? BackgroundImageUrl { get; set; }

        /// <summary>
        /// Brand ID
        /// </summary>
        [Input("brandId")]
        public Input<string>? BrandId { get; set; }

        /// <summary>
        /// (Required) Variant for email templates. Valid values: (`OKTA_DEFAULT`, `FULL_THEME`)
        /// </summary>
        [Input("emailTemplateTouchPointVariant")]
        public Input<string>? EmailTemplateTouchPointVariant { get; set; }

        /// <summary>
        /// (Required) Variant for the Okta End-User Dashboard. Valid values: (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)
        /// </summary>
        [Input("endUserDashboardTouchPointVariant")]
        public Input<string>? EndUserDashboardTouchPointVariant { get; set; }

        /// <summary>
        /// (Required) Variant for the error page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
        /// </summary>
        [Input("errorPageTouchPointVariant")]
        public Input<string>? ErrorPageTouchPointVariant { get; set; }

        /// <summary>
        /// (Optional) Local path to favicon file. Setting the value to the blank string `""` will delete the favicon on the theme at Okta but will not delete the local file.
        /// </summary>
        [Input("favicon")]
        public Input<string>? Favicon { get; set; }

        /// <summary>
        /// (Read-Only) Favicon URL
        /// </summary>
        [Input("faviconUrl")]
        public Input<string>? FaviconUrl { get; set; }

        /// <summary>
        /// Link relations for this object - JSON HAL - (Read-Only) Discoverable resources related to the brand
        /// </summary>
        [Input("links")]
        public Input<string>? Links { get; set; }

        /// <summary>
        /// (Optional) Local path to logo file. Setting the value to the blank string `""` will delete the logo on the theme at Okta but will not delete the local file.
        /// </summary>
        [Input("logo")]
        public Input<string>? Logo { get; set; }

        /// <summary>
        /// (Read-Only) Logo URL
        /// </summary>
        [Input("logoUrl")]
        public Input<string>? LogoUrl { get; set; }

        /// <summary>
        /// (Optional) Primary color contrast hex code
        /// </summary>
        [Input("primaryColorContrastHex")]
        public Input<string>? PrimaryColorContrastHex { get; set; }

        /// <summary>
        /// (Required) Primary color hex code
        /// </summary>
        [Input("primaryColorHex")]
        public Input<string>? PrimaryColorHex { get; set; }

        /// <summary>
        /// Secondary color contrast hex code
        /// </summary>
        [Input("secondaryColorContrastHex")]
        public Input<string>? SecondaryColorContrastHex { get; set; }

        /// <summary>
        /// (Required) Secondary color hex code
        /// - `secondary_color_contrast_hex` (Optional) Secondary color contrast hex code
        /// </summary>
        [Input("secondaryColorHex")]
        public Input<string>? SecondaryColorHex { get; set; }

        /// <summary>
        /// (Required) Variant for the Okta Sign-In Page. Valid values: (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
        /// </summary>
        [Input("signInPageTouchPointVariant")]
        public Input<string>? SignInPageTouchPointVariant { get; set; }

        /// <summary>
        /// Theme ID, used for read (faux-create)
        /// </summary>
        [Input("themeId")]
        public Input<string>? ThemeId { get; set; }

        public ThemeState()
        {
        }
        public static new ThemeState Empty => new ThemeState();
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta.Inputs
{

    public sealed class LogStreamSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS account ID.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Edition of the Splunk Cloud instance. Could be one of: 'aws', 'aws_govcloud', 'gcp'.
        /// </summary>
        [Input("edition")]
        public Input<string>? Edition { get; set; }

        /// <summary>
        /// An alphanumeric name (no spaces) to identify this event source in AWS EventBridge.`.
        /// </summary>
        [Input("eventSourceName")]
        public Input<string>? EventSourceName { get; set; }

        /// <summary>
        /// The domain name for Splunk Cloud instance. Don't include http or https in the string. For example: 'acme.splunkcloud.com'.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// The destination AWS region where event source is located.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("token")]
        private Input<string>? _token;

        /// <summary>
        /// The HEC token for your Splunk Cloud HTTP Event Collector.
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public LogStreamSettingsArgs()
        {
        }
        public static new LogStreamSettingsArgs Empty => new LogStreamSettingsArgs();
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta
{
    /// <summary>
    /// Assigns groups to an application.
    /// 
    /// This resource allows you to create multiple App Group assignments.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Okta.AppGroupAssignments("example", new Okta.AppGroupAssignmentsArgs
    ///         {
    ///             AppId = "&lt;app id&gt;",
    ///             Groups = 
    ///             {
    ///                 new Okta.Inputs.AppGroupAssignmentsGroupArgs
    ///                 {
    ///                     Id = "&lt;group id&gt;",
    ///                     Priority = 1,
    ///                 },
    ///                 new Okta.Inputs.AppGroupAssignmentsGroupArgs
    ///                 {
    ///                     Id = "&lt;another group id&gt;",
    ///                     Priority = 2,
    ///                     Profile = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///                     {
    ///                         { "application profile field", "application profile value" },
    ///                     }),
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// !&gt; **NOTE** When using this resource in conjunction with other application resources (e.g. `okta.app.OAuth`) it is advisable to add the following `lifecycle` argument to the associated `app_*` resources to prevent the groups being unassigned on subsequent runs:
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var app = new Okta.App.OAuth("app", new Okta.App.OAuthArgs
    ///         {
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// &gt; **IMPORTANT:** When using `okta.AppGroupAssignments` it is expected to manage ALL group assignments for the target application.
    /// 
    /// ## Import
    /// 
    /// An application's group assignments can be imported via `app_id`.
    /// 
    /// ```sh
    ///  $ pulumi import okta:index/appGroupAssignments:AppGroupAssignments example &amp;#60;app_id&amp;#62;
    /// ```
    /// </summary>
    [OktaResourceType("okta:index/appGroupAssignments:AppGroupAssignments")]
    public partial class AppGroupAssignments : Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the application to assign a group to.
        /// </summary>
        [Output("appId")]
        public Output<string> AppId { get; private set; } = null!;

        /// <summary>
        /// A group to assign the app to.
        /// </summary>
        [Output("groups")]
        public Output<ImmutableArray<Outputs.AppGroupAssignmentsGroup>> Groups { get; private set; } = null!;


        /// <summary>
        /// Create a AppGroupAssignments resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppGroupAssignments(string name, AppGroupAssignmentsArgs args, CustomResourceOptions? options = null)
            : base("okta:index/appGroupAssignments:AppGroupAssignments", name, args ?? new AppGroupAssignmentsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppGroupAssignments(string name, Input<string> id, AppGroupAssignmentsState? state = null, CustomResourceOptions? options = null)
            : base("okta:index/appGroupAssignments:AppGroupAssignments", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppGroupAssignments resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppGroupAssignments Get(string name, Input<string> id, AppGroupAssignmentsState? state = null, CustomResourceOptions? options = null)
        {
            return new AppGroupAssignments(name, id, state, options);
        }
    }

    public sealed class AppGroupAssignmentsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the application to assign a group to.
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        [Input("groups", required: true)]
        private InputList<Inputs.AppGroupAssignmentsGroupArgs>? _groups;

        /// <summary>
        /// A group to assign the app to.
        /// </summary>
        public InputList<Inputs.AppGroupAssignmentsGroupArgs> Groups
        {
            get => _groups ?? (_groups = new InputList<Inputs.AppGroupAssignmentsGroupArgs>());
            set => _groups = value;
        }

        public AppGroupAssignmentsArgs()
        {
        }
    }

    public sealed class AppGroupAssignmentsState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the application to assign a group to.
        /// </summary>
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        [Input("groups")]
        private InputList<Inputs.AppGroupAssignmentsGroupGetArgs>? _groups;

        /// <summary>
        /// A group to assign the app to.
        /// </summary>
        public InputList<Inputs.AppGroupAssignmentsGroupGetArgs> Groups
        {
            get => _groups ?? (_groups = new InputList<Inputs.AppGroupAssignmentsGroupGetArgs>());
            set => _groups = value;
        }

        public AppGroupAssignmentsState()
        {
        }
    }
}

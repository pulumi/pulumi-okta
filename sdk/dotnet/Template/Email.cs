// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta.Template
{
    /// <summary>
    /// Creates an Okta Email Template.
    /// 
    /// This resource allows you to create and configure an Okta Email Template.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Okta = Pulumi.Okta;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Okta.Template.Email("example", new Okta.Template.EmailArgs
    ///         {
    ///             Translations = 
    ///             {
    ///                 new Okta.Template.Inputs.EmailTranslationArgs
    ///                 {
    ///                     Language = "en",
    ///                     Subject = "Stuff",
    ///                     Template = $"Hi {user.FirstName},&lt;br/&gt;&lt;br/&gt;Blah blah {resetPasswordLink}",
    ///                 },
    ///                 new Okta.Template.Inputs.EmailTranslationArgs
    ///                 {
    ///                     Language = "es",
    ///                     Subject = "Cosas",
    ///                     Template = $"Hola {user.FirstName},&lt;br/&gt;&lt;br/&gt;Puedo ir al bano {resetPasswordLink}",
    ///                 },
    ///             },
    ///             Type = "email.forgotPassword",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    public partial class Email : Pulumi.CustomResource
    {
        /// <summary>
        /// The default language, by default is set to `"en"`.
        /// </summary>
        [Output("defaultLanguage")]
        public Output<string?> DefaultLanguage { get; private set; } = null!;

        /// <summary>
        /// Set of translations for particular template.
        /// </summary>
        [Output("translations")]
        public Output<ImmutableArray<Outputs.EmailTranslation>> Translations { get; private set; } = null!;

        /// <summary>
        /// Email template type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Email resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Email(string name, EmailArgs args, CustomResourceOptions? options = null)
            : base("okta:template/email:Email", name, args ?? new EmailArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Email(string name, Input<string> id, EmailState? state = null, CustomResourceOptions? options = null)
            : base("okta:template/email:Email", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Email resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Email Get(string name, Input<string> id, EmailState? state = null, CustomResourceOptions? options = null)
        {
            return new Email(name, id, state, options);
        }
    }

    public sealed class EmailArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default language, by default is set to `"en"`.
        /// </summary>
        [Input("defaultLanguage")]
        public Input<string>? DefaultLanguage { get; set; }

        [Input("translations", required: true)]
        private InputList<Inputs.EmailTranslationArgs>? _translations;

        /// <summary>
        /// Set of translations for particular template.
        /// </summary>
        public InputList<Inputs.EmailTranslationArgs> Translations
        {
            get => _translations ?? (_translations = new InputList<Inputs.EmailTranslationArgs>());
            set => _translations = value;
        }

        /// <summary>
        /// Email template type
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public EmailArgs()
        {
        }
    }

    public sealed class EmailState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default language, by default is set to `"en"`.
        /// </summary>
        [Input("defaultLanguage")]
        public Input<string>? DefaultLanguage { get; set; }

        [Input("translations")]
        private InputList<Inputs.EmailTranslationGetArgs>? _translations;

        /// <summary>
        /// Set of translations for particular template.
        /// </summary>
        public InputList<Inputs.EmailTranslationGetArgs> Translations
        {
            get => _translations ?? (_translations = new InputList<Inputs.EmailTranslationGetArgs>());
            set => _translations = value;
        }

        /// <summary>
        /// Email template type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public EmailState()
        {
        }
    }
}

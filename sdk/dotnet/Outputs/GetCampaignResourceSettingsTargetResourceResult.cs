// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta.Outputs
{

    [OutputType]
    public sealed class GetCampaignResourceSettingsTargetResourceResult
    {
        /// <summary>
        /// An array of entitlement bundles associated with resourceId that should be chosen as target when creating reviews.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCampaignResourceSettingsTargetResourceEntitlementBundleResult> EntitlementBundles;
        public readonly ImmutableArray<Outputs.GetCampaignResourceSettingsTargetResourceEntitlementResult> Entitlements;
        /// <summary>
        /// Include all entitlements and entitlement bundles for this application.
        /// </summary>
        public readonly bool IncludeAllEntitlementsAndBundles;
        /// <summary>
        /// The resource ID that is being reviewed.
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// The type of Okta resource.
        /// </summary>
        public readonly string ResourceType;

        [OutputConstructor]
        private GetCampaignResourceSettingsTargetResourceResult(
            ImmutableArray<Outputs.GetCampaignResourceSettingsTargetResourceEntitlementBundleResult> entitlementBundles,

            ImmutableArray<Outputs.GetCampaignResourceSettingsTargetResourceEntitlementResult> entitlements,

            bool includeAllEntitlementsAndBundles,

            string resourceId,

            string resourceType)
        {
            EntitlementBundles = entitlementBundles;
            Entitlements = entitlements;
            IncludeAllEntitlementsAndBundles = includeAllEntitlementsAndBundles;
            ResourceId = resourceId;
            ResourceType = resourceType;
        }
    }
}

// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Okta.Outputs
{

    [OutputType]
    public sealed class GetCatalogEntryUserAccessRequestFieldsDataResult
    {
        /// <summary>
        /// Valid choices when type is SELECT or MULTISELECT.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCatalogEntryUserAccessRequestFieldsDataChoiceResult> Choices;
        public readonly string Id;
        /// <summary>
        /// Label of the requester field.
        /// </summary>
        public readonly string Label;
        /// <summary>
        /// The maximum value allowed for this field. Only applies to DURATION fields.
        /// </summary>
        public readonly string MaximumValue;
        /// <summary>
        /// Indicates this field is immutable.
        /// </summary>
        public readonly bool ReadOnly;
        /// <summary>
        /// Indicates whether a value to this field is required to advance the request.
        /// </summary>
        public readonly bool Required;
        /// <summary>
        /// Type of value for the requester field.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// An admin configured value for this field. Only applies to DURATION fields.
        /// </summary>
        public readonly string Value;

        [OutputConstructor]
        private GetCatalogEntryUserAccessRequestFieldsDataResult(
            ImmutableArray<Outputs.GetCatalogEntryUserAccessRequestFieldsDataChoiceResult> choices,

            string id,

            string label,

            string maximumValue,

            bool readOnly,

            bool required,

            string type,

            string value)
        {
            Choices = choices;
            Id = id;
            Label = label;
            MaximumValue = maximumValue;
            ReadOnly = readOnly;
            Required = required;
            Type = type;
            Value = value;
        }
    }
}

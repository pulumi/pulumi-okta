# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetRateLimitAdminNotificationSettingsResult',
    'AwaitableGetRateLimitAdminNotificationSettingsResult',
    'get_rate_limit_admin_notification_settings',
    'get_rate_limit_admin_notification_settings_output',
]

@pulumi.output_type
class GetRateLimitAdminNotificationSettingsResult:
    """
    A collection of values returned by getRateLimitAdminNotificationSettings.
    """
    def __init__(__self__, id=None, notifications_enabled=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if notifications_enabled and not isinstance(notifications_enabled, bool):
            raise TypeError("Expected argument 'notifications_enabled' to be a bool")
        pulumi.set(__self__, "notifications_enabled", notifications_enabled)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The unique identifier of the principal. This is the ID of the API token or OAuth 2.0 app.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="notificationsEnabled")
    def notifications_enabled(self) -> _builtins.bool:
        """
        Enables or disables admin notifications for rate limiting events.
        """
        return pulumi.get(self, "notifications_enabled")


class AwaitableGetRateLimitAdminNotificationSettingsResult(GetRateLimitAdminNotificationSettingsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRateLimitAdminNotificationSettingsResult(
            id=self.id,
            notifications_enabled=self.notifications_enabled)


def get_rate_limit_admin_notification_settings(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRateLimitAdminNotificationSettingsResult:
    """
    Retrieves the currently configured Rate Limit Admin Notification Settings

    ## Example Usage

    ```python
    import pulumi
    import pulumi_okta as okta

    example = okta.get_rate_limit_admin_notification_settings()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('okta:index/getRateLimitAdminNotificationSettings:getRateLimitAdminNotificationSettings', __args__, opts=opts, typ=GetRateLimitAdminNotificationSettingsResult).value

    return AwaitableGetRateLimitAdminNotificationSettingsResult(
        id=pulumi.get(__ret__, 'id'),
        notifications_enabled=pulumi.get(__ret__, 'notifications_enabled'))
def get_rate_limit_admin_notification_settings_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetRateLimitAdminNotificationSettingsResult]:
    """
    Retrieves the currently configured Rate Limit Admin Notification Settings

    ## Example Usage

    ```python
    import pulumi
    import pulumi_okta as okta

    example = okta.get_rate_limit_admin_notification_settings()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('okta:index/getRateLimitAdminNotificationSettings:getRateLimitAdminNotificationSettings', __args__, opts=opts, typ=GetRateLimitAdminNotificationSettingsResult)
    return __ret__.apply(lambda __response__: GetRateLimitAdminNotificationSettingsResult(
        id=pulumi.get(__response__, 'id'),
        notifications_enabled=pulumi.get(__response__, 'notifications_enabled')))

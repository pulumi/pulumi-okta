# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetServerScopesScopeResult',
]

@pulumi.output_type
class GetServerScopesScopeResult(dict):
    def __init__(__self__, *,
                 consent: builtins.str,
                 default: builtins.bool,
                 description: builtins.str,
                 display_name: builtins.str,
                 id: builtins.str,
                 metadata_publish: builtins.str,
                 name: builtins.str,
                 optional: builtins.bool,
                 system: builtins.bool):
        """
        :param builtins.str consent: Indicates whether a consent dialog is needed for the Scope
        :param builtins.bool default: Whether the Scope is a default Scope
        :param builtins.str description: Description of the Scope
        :param builtins.str display_name: Name of the end user displayed in a consent dialog box
        :param builtins.str id: ID of the Scope
        :param builtins.str metadata_publish: Whether the Scope should be included in the metadata
        :param builtins.str name: Name of the Scope
        :param builtins.bool optional: Whether the Scope is optional
        :param builtins.bool system: Whether Okta created the Scope
        """
        pulumi.set(__self__, "consent", consent)
        pulumi.set(__self__, "default", default)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "metadata_publish", metadata_publish)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "optional", optional)
        pulumi.set(__self__, "system", system)

    @property
    @pulumi.getter
    def consent(self) -> builtins.str:
        """
        Indicates whether a consent dialog is needed for the Scope
        """
        return pulumi.get(self, "consent")

    @property
    @pulumi.getter
    def default(self) -> builtins.bool:
        """
        Whether the Scope is a default Scope
        """
        return pulumi.get(self, "default")

    @property
    @pulumi.getter
    def description(self) -> builtins.str:
        """
        Description of the Scope
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> builtins.str:
        """
        Name of the end user displayed in a consent dialog box
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        ID of the Scope
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="metadataPublish")
    def metadata_publish(self) -> builtins.str:
        """
        Whether the Scope should be included in the metadata
        """
        return pulumi.get(self, "metadata_publish")

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        """
        Name of the Scope
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def optional(self) -> builtins.bool:
        """
        Whether the Scope is optional
        """
        return pulumi.get(self, "optional")

    @property
    @pulumi.getter
    def system(self) -> builtins.bool:
        """
        Whether Okta created the Scope
        """
        return pulumi.get(self, "system")



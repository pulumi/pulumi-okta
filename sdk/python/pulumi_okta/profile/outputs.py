# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'MappingMapping',
]

@pulumi.output_type
class MappingMapping(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "pushStatus":
            suggest = "push_status"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in MappingMapping. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        MappingMapping.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        MappingMapping.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 expression: _builtins.str,
                 id: _builtins.str,
                 push_status: Optional[_builtins.str] = None):
        """
        :param _builtins.str id: The mapping property key.
        """
        pulumi.set(__self__, "expression", expression)
        pulumi.set(__self__, "id", id)
        if push_status is not None:
            pulumi.set(__self__, "push_status", push_status)

    @_builtins.property
    @pulumi.getter
    def expression(self) -> _builtins.str:
        return pulumi.get(self, "expression")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The mapping property key.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="pushStatus")
    def push_status(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "push_status")



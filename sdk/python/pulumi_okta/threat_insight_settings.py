# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['ThreatInsightSettingsArgs', 'ThreatInsightSettings']

@pulumi.input_type
class ThreatInsightSettingsArgs:
    def __init__(__self__, *,
                 action: pulumi.Input[str],
                 network_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a ThreatInsightSettings resource.
        :param pulumi.Input[str] action: Specifies how Okta responds to authentication requests from suspicious IPs
        :param pulumi.Input[Sequence[pulumi.Input[str]]] network_excludes: List of Network Zone IDs to exclude to be not logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation
        """
        pulumi.set(__self__, "action", action)
        if network_excludes is not None:
            pulumi.set(__self__, "network_excludes", network_excludes)

    @property
    @pulumi.getter
    def action(self) -> pulumi.Input[str]:
        """
        Specifies how Okta responds to authentication requests from suspicious IPs
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: pulumi.Input[str]):
        pulumi.set(self, "action", value)

    @property
    @pulumi.getter(name="networkExcludes")
    def network_excludes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        List of Network Zone IDs to exclude to be not logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation
        """
        return pulumi.get(self, "network_excludes")

    @network_excludes.setter
    def network_excludes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "network_excludes", value)


@pulumi.input_type
class _ThreatInsightSettingsState:
    def __init__(__self__, *,
                 action: Optional[pulumi.Input[str]] = None,
                 network_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        Input properties used for looking up and filtering ThreatInsightSettings resources.
        :param pulumi.Input[str] action: Specifies how Okta responds to authentication requests from suspicious IPs
        :param pulumi.Input[Sequence[pulumi.Input[str]]] network_excludes: List of Network Zone IDs to exclude to be not logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation
        """
        if action is not None:
            pulumi.set(__self__, "action", action)
        if network_excludes is not None:
            pulumi.set(__self__, "network_excludes", network_excludes)

    @property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies how Okta responds to authentication requests from suspicious IPs
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "action", value)

    @property
    @pulumi.getter(name="networkExcludes")
    def network_excludes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        List of Network Zone IDs to exclude to be not logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation
        """
        return pulumi.get(self, "network_excludes")

    @network_excludes.setter
    def network_excludes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "network_excludes", value)


class ThreatInsightSettings(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[str]] = None,
                 network_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        Create a ThreatInsightSettings resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] action: Specifies how Okta responds to authentication requests from suspicious IPs
        :param pulumi.Input[Sequence[pulumi.Input[str]]] network_excludes: List of Network Zone IDs to exclude to be not logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ThreatInsightSettingsArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a ThreatInsightSettings resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param ThreatInsightSettingsArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ThreatInsightSettingsArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[str]] = None,
                 network_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ThreatInsightSettingsArgs.__new__(ThreatInsightSettingsArgs)

            if action is None and not opts.urn:
                raise TypeError("Missing required property 'action'")
            __props__.__dict__["action"] = action
            __props__.__dict__["network_excludes"] = network_excludes
        super(ThreatInsightSettings, __self__).__init__(
            'okta:index/threatInsightSettings:ThreatInsightSettings',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            action: Optional[pulumi.Input[str]] = None,
            network_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None) -> 'ThreatInsightSettings':
        """
        Get an existing ThreatInsightSettings resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] action: Specifies how Okta responds to authentication requests from suspicious IPs
        :param pulumi.Input[Sequence[pulumi.Input[str]]] network_excludes: List of Network Zone IDs to exclude to be not logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ThreatInsightSettingsState.__new__(_ThreatInsightSettingsState)

        __props__.__dict__["action"] = action
        __props__.__dict__["network_excludes"] = network_excludes
        return ThreatInsightSettings(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def action(self) -> pulumi.Output[str]:
        """
        Specifies how Okta responds to authentication requests from suspicious IPs
        """
        return pulumi.get(self, "action")

    @property
    @pulumi.getter(name="networkExcludes")
    def network_excludes(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        List of Network Zone IDs to exclude to be not logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation
        """
        return pulumi.get(self, "network_excludes")


# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['ThreatInsightSettingsArgs', 'ThreatInsightSettings']

@pulumi.input_type
class ThreatInsightSettingsArgs:
    def __init__(__self__, *,
                 action: pulumi.Input[str],
                 network_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a ThreatInsightSettings resource.
        :param pulumi.Input[str] action: Specifies how Okta responds to authentication requests from suspicious IPs. Valid values 
               are `"none"`, `"audit"`, or `"block"`. A value of `"none"` indicates that ThreatInsight is disabled. A value of `"audit"`
               indicates that Okta logs suspicious requests in the System Log. A value of `"block"` indicates that Okta logs suspicious
               requests in the System Log and blocks the requests.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] network_excludes: Accepts a list of Network Zone IDs. Can only accept zones of `"IP"` type. 
               IPs in the excluded Network Zones aren't logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation.
               This ensures that traffic from known, trusted IPs isn't accidentally logged or blocked. The ordering of the network zone
               is not guarantee from the API sides
        """
        ThreatInsightSettingsArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            action=action,
            network_excludes=network_excludes,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             action: pulumi.Input[str],
             network_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("action", action)
        if network_excludes is not None:
            _setter("network_excludes", network_excludes)

    @property
    @pulumi.getter
    def action(self) -> pulumi.Input[str]:
        """
        Specifies how Okta responds to authentication requests from suspicious IPs. Valid values 
        are `"none"`, `"audit"`, or `"block"`. A value of `"none"` indicates that ThreatInsight is disabled. A value of `"audit"`
        indicates that Okta logs suspicious requests in the System Log. A value of `"block"` indicates that Okta logs suspicious
        requests in the System Log and blocks the requests.
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: pulumi.Input[str]):
        pulumi.set(self, "action", value)

    @property
    @pulumi.getter(name="networkExcludes")
    def network_excludes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Accepts a list of Network Zone IDs. Can only accept zones of `"IP"` type. 
        IPs in the excluded Network Zones aren't logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation.
        This ensures that traffic from known, trusted IPs isn't accidentally logged or blocked. The ordering of the network zone
        is not guarantee from the API sides
        """
        return pulumi.get(self, "network_excludes")

    @network_excludes.setter
    def network_excludes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "network_excludes", value)


@pulumi.input_type
class _ThreatInsightSettingsState:
    def __init__(__self__, *,
                 action: Optional[pulumi.Input[str]] = None,
                 network_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        Input properties used for looking up and filtering ThreatInsightSettings resources.
        :param pulumi.Input[str] action: Specifies how Okta responds to authentication requests from suspicious IPs. Valid values 
               are `"none"`, `"audit"`, or `"block"`. A value of `"none"` indicates that ThreatInsight is disabled. A value of `"audit"`
               indicates that Okta logs suspicious requests in the System Log. A value of `"block"` indicates that Okta logs suspicious
               requests in the System Log and blocks the requests.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] network_excludes: Accepts a list of Network Zone IDs. Can only accept zones of `"IP"` type. 
               IPs in the excluded Network Zones aren't logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation.
               This ensures that traffic from known, trusted IPs isn't accidentally logged or blocked. The ordering of the network zone
               is not guarantee from the API sides
        """
        _ThreatInsightSettingsState._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            action=action,
            network_excludes=network_excludes,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             action: Optional[pulumi.Input[str]] = None,
             network_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if action is not None:
            _setter("action", action)
        if network_excludes is not None:
            _setter("network_excludes", network_excludes)

    @property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies how Okta responds to authentication requests from suspicious IPs. Valid values 
        are `"none"`, `"audit"`, or `"block"`. A value of `"none"` indicates that ThreatInsight is disabled. A value of `"audit"`
        indicates that Okta logs suspicious requests in the System Log. A value of `"block"` indicates that Okta logs suspicious
        requests in the System Log and blocks the requests.
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "action", value)

    @property
    @pulumi.getter(name="networkExcludes")
    def network_excludes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Accepts a list of Network Zone IDs. Can only accept zones of `"IP"` type. 
        IPs in the excluded Network Zones aren't logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation.
        This ensures that traffic from known, trusted IPs isn't accidentally logged or blocked. The ordering of the network zone
        is not guarantee from the API sides
        """
        return pulumi.get(self, "network_excludes")

    @network_excludes.setter
    def network_excludes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "network_excludes", value)


class ThreatInsightSettings(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[str]] = None,
                 network_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        This resource allows you to configure Threat Insight Settings.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_okta as okta

        ip_network_zone_example = okta.network.Zone("ipNetworkZoneExample",
            type="IP",
            gateways=[
                "1.2.3.4/24",
                "2.3.4.5-2.3.4.15",
            ],
            proxies=[
                "2.2.3.4/24",
                "3.3.4.5-3.3.4.15",
            ])
        example = okta.ThreatInsightSettings("example",
            action="block",
            network_excludes=[ip_network_zone_example.id])
        ```

        ## Import

        Threat Insight Settings can be imported without any parameters.

        ```sh
         $ pulumi import okta:index/threatInsightSettings:ThreatInsightSettings example _
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] action: Specifies how Okta responds to authentication requests from suspicious IPs. Valid values 
               are `"none"`, `"audit"`, or `"block"`. A value of `"none"` indicates that ThreatInsight is disabled. A value of `"audit"`
               indicates that Okta logs suspicious requests in the System Log. A value of `"block"` indicates that Okta logs suspicious
               requests in the System Log and blocks the requests.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] network_excludes: Accepts a list of Network Zone IDs. Can only accept zones of `"IP"` type. 
               IPs in the excluded Network Zones aren't logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation.
               This ensures that traffic from known, trusted IPs isn't accidentally logged or blocked. The ordering of the network zone
               is not guarantee from the API sides
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ThreatInsightSettingsArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource allows you to configure Threat Insight Settings.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_okta as okta

        ip_network_zone_example = okta.network.Zone("ipNetworkZoneExample",
            type="IP",
            gateways=[
                "1.2.3.4/24",
                "2.3.4.5-2.3.4.15",
            ],
            proxies=[
                "2.2.3.4/24",
                "3.3.4.5-3.3.4.15",
            ])
        example = okta.ThreatInsightSettings("example",
            action="block",
            network_excludes=[ip_network_zone_example.id])
        ```

        ## Import

        Threat Insight Settings can be imported without any parameters.

        ```sh
         $ pulumi import okta:index/threatInsightSettings:ThreatInsightSettings example _
        ```

        :param str resource_name: The name of the resource.
        :param ThreatInsightSettingsArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ThreatInsightSettingsArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            kwargs = kwargs or {}
            def _setter(key, value):
                kwargs[key] = value
            ThreatInsightSettingsArgs._configure(_setter, **kwargs)
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[str]] = None,
                 network_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ThreatInsightSettingsArgs.__new__(ThreatInsightSettingsArgs)

            if action is None and not opts.urn:
                raise TypeError("Missing required property 'action'")
            __props__.__dict__["action"] = action
            __props__.__dict__["network_excludes"] = network_excludes
        super(ThreatInsightSettings, __self__).__init__(
            'okta:index/threatInsightSettings:ThreatInsightSettings',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            action: Optional[pulumi.Input[str]] = None,
            network_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None) -> 'ThreatInsightSettings':
        """
        Get an existing ThreatInsightSettings resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] action: Specifies how Okta responds to authentication requests from suspicious IPs. Valid values 
               are `"none"`, `"audit"`, or `"block"`. A value of `"none"` indicates that ThreatInsight is disabled. A value of `"audit"`
               indicates that Okta logs suspicious requests in the System Log. A value of `"block"` indicates that Okta logs suspicious
               requests in the System Log and blocks the requests.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] network_excludes: Accepts a list of Network Zone IDs. Can only accept zones of `"IP"` type. 
               IPs in the excluded Network Zones aren't logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation.
               This ensures that traffic from known, trusted IPs isn't accidentally logged or blocked. The ordering of the network zone
               is not guarantee from the API sides
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ThreatInsightSettingsState.__new__(_ThreatInsightSettingsState)

        __props__.__dict__["action"] = action
        __props__.__dict__["network_excludes"] = network_excludes
        return ThreatInsightSettings(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def action(self) -> pulumi.Output[str]:
        """
        Specifies how Okta responds to authentication requests from suspicious IPs. Valid values 
        are `"none"`, `"audit"`, or `"block"`. A value of `"none"` indicates that ThreatInsight is disabled. A value of `"audit"`
        indicates that Okta logs suspicious requests in the System Log. A value of `"block"` indicates that Okta logs suspicious
        requests in the System Log and blocks the requests.
        """
        return pulumi.get(self, "action")

    @property
    @pulumi.getter(name="networkExcludes")
    def network_excludes(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        Accepts a list of Network Zone IDs. Can only accept zones of `"IP"` type. 
        IPs in the excluded Network Zones aren't logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation.
        This ensures that traffic from known, trusted IPs isn't accidentally logged or blocked. The ordering of the network zone
        is not guarantee from the API sides
        """
        return pulumi.get(self, "network_excludes")


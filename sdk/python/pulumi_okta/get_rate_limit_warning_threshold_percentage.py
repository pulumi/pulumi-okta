# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetRateLimitWarningThresholdPercentageResult',
    'AwaitableGetRateLimitWarningThresholdPercentageResult',
    'get_rate_limit_warning_threshold_percentage',
    'get_rate_limit_warning_threshold_percentage_output',
]

@pulumi.output_type
class GetRateLimitWarningThresholdPercentageResult:
    """
    A collection of values returned by getRateLimitWarningThresholdPercentage.
    """
    def __init__(__self__, id=None, warning_threshold=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if warning_threshold and not isinstance(warning_threshold, int):
            raise TypeError("Expected argument 'warning_threshold' to be a int")
        pulumi.set(__self__, "warning_threshold", warning_threshold)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The unique identifier of the warning threshold percentage entity.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="warningThreshold")
    def warning_threshold(self) -> _builtins.int:
        """
        The threshold value (percentage) of a rate limit that, when exceeded, triggers a warning notification. By default, this value is 90 for Workforce orgs and 60 for CIAM orgs.
        """
        return pulumi.get(self, "warning_threshold")


class AwaitableGetRateLimitWarningThresholdPercentageResult(GetRateLimitWarningThresholdPercentageResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRateLimitWarningThresholdPercentageResult(
            id=self.id,
            warning_threshold=self.warning_threshold)


def get_rate_limit_warning_threshold_percentage(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRateLimitWarningThresholdPercentageResult:
    """
    Manages principal rate limits.
    Principal Rate Limits provides operations to manage Principal Rate Limits for your organization.
    ## Example Usage

    ```python
    import pulumi
    import pulumi_okta as okta

    example = okta.get_rate_limit_warning_threshold_percentage()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('okta:index/getRateLimitWarningThresholdPercentage:getRateLimitWarningThresholdPercentage', __args__, opts=opts, typ=GetRateLimitWarningThresholdPercentageResult).value

    return AwaitableGetRateLimitWarningThresholdPercentageResult(
        id=pulumi.get(__ret__, 'id'),
        warning_threshold=pulumi.get(__ret__, 'warning_threshold'))
def get_rate_limit_warning_threshold_percentage_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetRateLimitWarningThresholdPercentageResult]:
    """
    Manages principal rate limits.
    Principal Rate Limits provides operations to manage Principal Rate Limits for your organization.
    ## Example Usage

    ```python
    import pulumi
    import pulumi_okta as okta

    example = okta.get_rate_limit_warning_threshold_percentage()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('okta:index/getRateLimitWarningThresholdPercentage:getRateLimitWarningThresholdPercentage', __args__, opts=opts, typ=GetRateLimitWarningThresholdPercentageResult)
    return __ret__.apply(lambda __response__: GetRateLimitWarningThresholdPercentageResult(
        id=pulumi.get(__response__, 'id'),
        warning_threshold=pulumi.get(__response__, 'warning_threshold')))

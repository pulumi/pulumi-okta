# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['DeviceAssuranceChromeosArgs', 'DeviceAssuranceChromeos']

@pulumi.input_type
class DeviceAssuranceChromeosArgs:
    def __init__(__self__, *,
                 name: Optional[pulumi.Input[str]] = None,
                 tpsp_allow_screen_lock: Optional[pulumi.Input[bool]] = None,
                 tpsp_browser_version: Optional[pulumi.Input[str]] = None,
                 tpsp_builtin_dns_client_enabled: Optional[pulumi.Input[bool]] = None,
                 tpsp_chrome_remote_desktop_app_blocked: Optional[pulumi.Input[bool]] = None,
                 tpsp_device_enrollment_domain: Optional[pulumi.Input[str]] = None,
                 tpsp_disk_encrypted: Optional[pulumi.Input[bool]] = None,
                 tpsp_key_trust_level: Optional[pulumi.Input[str]] = None,
                 tpsp_os_firewall: Optional[pulumi.Input[bool]] = None,
                 tpsp_os_version: Optional[pulumi.Input[str]] = None,
                 tpsp_password_proctection_warning_trigger: Optional[pulumi.Input[str]] = None,
                 tpsp_realtime_url_check_mode: Optional[pulumi.Input[bool]] = None,
                 tpsp_safe_browsing_protection_level: Optional[pulumi.Input[str]] = None,
                 tpsp_screen_lock_secured: Optional[pulumi.Input[bool]] = None,
                 tpsp_site_isolation_enabled: Optional[pulumi.Input[bool]] = None):
        """
        The set of arguments for constructing a DeviceAssuranceChromeos resource.
        :param pulumi.Input[str] name: Policy device assurance name
        :param pulumi.Input[bool] tpsp_allow_screen_lock: Third party signal provider allow screen lock
        :param pulumi.Input[str] tpsp_browser_version: Third party signal provider minimum browser version
        :param pulumi.Input[bool] tpsp_builtin_dns_client_enabled: Third party signal provider builtin dns client enabled
        :param pulumi.Input[bool] tpsp_chrome_remote_desktop_app_blocked: Third party signal provider chrome remote desktop app blocked
        :param pulumi.Input[str] tpsp_device_enrollment_domain: Third party signal provider device enrollment domain
        :param pulumi.Input[bool] tpsp_disk_encrypted: Third party signal provider disk encrypted
        :param pulumi.Input[str] tpsp_key_trust_level: Third party signal provider key trust level
        :param pulumi.Input[bool] tpsp_os_firewall: Third party signal provider os firewall
        :param pulumi.Input[str] tpsp_os_version: Third party signal provider minimum os version
        :param pulumi.Input[str] tpsp_password_proctection_warning_trigger: Third party signal provider password protection warning trigger
        :param pulumi.Input[bool] tpsp_realtime_url_check_mode: Third party signal provider realtime url check mode
        :param pulumi.Input[str] tpsp_safe_browsing_protection_level: Third party signal provider safe browsing protection level
        :param pulumi.Input[bool] tpsp_screen_lock_secured: Third party signal provider screen lock secure
        :param pulumi.Input[bool] tpsp_site_isolation_enabled: Third party signal provider site isolation enabled
        """
        DeviceAssuranceChromeosArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            tpsp_allow_screen_lock=tpsp_allow_screen_lock,
            tpsp_browser_version=tpsp_browser_version,
            tpsp_builtin_dns_client_enabled=tpsp_builtin_dns_client_enabled,
            tpsp_chrome_remote_desktop_app_blocked=tpsp_chrome_remote_desktop_app_blocked,
            tpsp_device_enrollment_domain=tpsp_device_enrollment_domain,
            tpsp_disk_encrypted=tpsp_disk_encrypted,
            tpsp_key_trust_level=tpsp_key_trust_level,
            tpsp_os_firewall=tpsp_os_firewall,
            tpsp_os_version=tpsp_os_version,
            tpsp_password_proctection_warning_trigger=tpsp_password_proctection_warning_trigger,
            tpsp_realtime_url_check_mode=tpsp_realtime_url_check_mode,
            tpsp_safe_browsing_protection_level=tpsp_safe_browsing_protection_level,
            tpsp_screen_lock_secured=tpsp_screen_lock_secured,
            tpsp_site_isolation_enabled=tpsp_site_isolation_enabled,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: Optional[pulumi.Input[str]] = None,
             tpsp_allow_screen_lock: Optional[pulumi.Input[bool]] = None,
             tpsp_browser_version: Optional[pulumi.Input[str]] = None,
             tpsp_builtin_dns_client_enabled: Optional[pulumi.Input[bool]] = None,
             tpsp_chrome_remote_desktop_app_blocked: Optional[pulumi.Input[bool]] = None,
             tpsp_device_enrollment_domain: Optional[pulumi.Input[str]] = None,
             tpsp_disk_encrypted: Optional[pulumi.Input[bool]] = None,
             tpsp_key_trust_level: Optional[pulumi.Input[str]] = None,
             tpsp_os_firewall: Optional[pulumi.Input[bool]] = None,
             tpsp_os_version: Optional[pulumi.Input[str]] = None,
             tpsp_password_proctection_warning_trigger: Optional[pulumi.Input[str]] = None,
             tpsp_realtime_url_check_mode: Optional[pulumi.Input[bool]] = None,
             tpsp_safe_browsing_protection_level: Optional[pulumi.Input[str]] = None,
             tpsp_screen_lock_secured: Optional[pulumi.Input[bool]] = None,
             tpsp_site_isolation_enabled: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if name is not None:
            _setter("name", name)
        if tpsp_allow_screen_lock is not None:
            _setter("tpsp_allow_screen_lock", tpsp_allow_screen_lock)
        if tpsp_browser_version is not None:
            _setter("tpsp_browser_version", tpsp_browser_version)
        if tpsp_builtin_dns_client_enabled is not None:
            _setter("tpsp_builtin_dns_client_enabled", tpsp_builtin_dns_client_enabled)
        if tpsp_chrome_remote_desktop_app_blocked is not None:
            _setter("tpsp_chrome_remote_desktop_app_blocked", tpsp_chrome_remote_desktop_app_blocked)
        if tpsp_device_enrollment_domain is not None:
            _setter("tpsp_device_enrollment_domain", tpsp_device_enrollment_domain)
        if tpsp_disk_encrypted is not None:
            _setter("tpsp_disk_encrypted", tpsp_disk_encrypted)
        if tpsp_key_trust_level is not None:
            _setter("tpsp_key_trust_level", tpsp_key_trust_level)
        if tpsp_os_firewall is not None:
            _setter("tpsp_os_firewall", tpsp_os_firewall)
        if tpsp_os_version is not None:
            _setter("tpsp_os_version", tpsp_os_version)
        if tpsp_password_proctection_warning_trigger is not None:
            _setter("tpsp_password_proctection_warning_trigger", tpsp_password_proctection_warning_trigger)
        if tpsp_realtime_url_check_mode is not None:
            _setter("tpsp_realtime_url_check_mode", tpsp_realtime_url_check_mode)
        if tpsp_safe_browsing_protection_level is not None:
            _setter("tpsp_safe_browsing_protection_level", tpsp_safe_browsing_protection_level)
        if tpsp_screen_lock_secured is not None:
            _setter("tpsp_screen_lock_secured", tpsp_screen_lock_secured)
        if tpsp_site_isolation_enabled is not None:
            _setter("tpsp_site_isolation_enabled", tpsp_site_isolation_enabled)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Policy device assurance name
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="tpspAllowScreenLock")
    def tpsp_allow_screen_lock(self) -> Optional[pulumi.Input[bool]]:
        """
        Third party signal provider allow screen lock
        """
        return pulumi.get(self, "tpsp_allow_screen_lock")

    @tpsp_allow_screen_lock.setter
    def tpsp_allow_screen_lock(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "tpsp_allow_screen_lock", value)

    @property
    @pulumi.getter(name="tpspBrowserVersion")
    def tpsp_browser_version(self) -> Optional[pulumi.Input[str]]:
        """
        Third party signal provider minimum browser version
        """
        return pulumi.get(self, "tpsp_browser_version")

    @tpsp_browser_version.setter
    def tpsp_browser_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tpsp_browser_version", value)

    @property
    @pulumi.getter(name="tpspBuiltinDnsClientEnabled")
    def tpsp_builtin_dns_client_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        Third party signal provider builtin dns client enabled
        """
        return pulumi.get(self, "tpsp_builtin_dns_client_enabled")

    @tpsp_builtin_dns_client_enabled.setter
    def tpsp_builtin_dns_client_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "tpsp_builtin_dns_client_enabled", value)

    @property
    @pulumi.getter(name="tpspChromeRemoteDesktopAppBlocked")
    def tpsp_chrome_remote_desktop_app_blocked(self) -> Optional[pulumi.Input[bool]]:
        """
        Third party signal provider chrome remote desktop app blocked
        """
        return pulumi.get(self, "tpsp_chrome_remote_desktop_app_blocked")

    @tpsp_chrome_remote_desktop_app_blocked.setter
    def tpsp_chrome_remote_desktop_app_blocked(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "tpsp_chrome_remote_desktop_app_blocked", value)

    @property
    @pulumi.getter(name="tpspDeviceEnrollmentDomain")
    def tpsp_device_enrollment_domain(self) -> Optional[pulumi.Input[str]]:
        """
        Third party signal provider device enrollment domain
        """
        return pulumi.get(self, "tpsp_device_enrollment_domain")

    @tpsp_device_enrollment_domain.setter
    def tpsp_device_enrollment_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tpsp_device_enrollment_domain", value)

    @property
    @pulumi.getter(name="tpspDiskEncrypted")
    def tpsp_disk_encrypted(self) -> Optional[pulumi.Input[bool]]:
        """
        Third party signal provider disk encrypted
        """
        return pulumi.get(self, "tpsp_disk_encrypted")

    @tpsp_disk_encrypted.setter
    def tpsp_disk_encrypted(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "tpsp_disk_encrypted", value)

    @property
    @pulumi.getter(name="tpspKeyTrustLevel")
    def tpsp_key_trust_level(self) -> Optional[pulumi.Input[str]]:
        """
        Third party signal provider key trust level
        """
        return pulumi.get(self, "tpsp_key_trust_level")

    @tpsp_key_trust_level.setter
    def tpsp_key_trust_level(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tpsp_key_trust_level", value)

    @property
    @pulumi.getter(name="tpspOsFirewall")
    def tpsp_os_firewall(self) -> Optional[pulumi.Input[bool]]:
        """
        Third party signal provider os firewall
        """
        return pulumi.get(self, "tpsp_os_firewall")

    @tpsp_os_firewall.setter
    def tpsp_os_firewall(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "tpsp_os_firewall", value)

    @property
    @pulumi.getter(name="tpspOsVersion")
    def tpsp_os_version(self) -> Optional[pulumi.Input[str]]:
        """
        Third party signal provider minimum os version
        """
        return pulumi.get(self, "tpsp_os_version")

    @tpsp_os_version.setter
    def tpsp_os_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tpsp_os_version", value)

    @property
    @pulumi.getter(name="tpspPasswordProctectionWarningTrigger")
    def tpsp_password_proctection_warning_trigger(self) -> Optional[pulumi.Input[str]]:
        """
        Third party signal provider password protection warning trigger
        """
        return pulumi.get(self, "tpsp_password_proctection_warning_trigger")

    @tpsp_password_proctection_warning_trigger.setter
    def tpsp_password_proctection_warning_trigger(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tpsp_password_proctection_warning_trigger", value)

    @property
    @pulumi.getter(name="tpspRealtimeUrlCheckMode")
    def tpsp_realtime_url_check_mode(self) -> Optional[pulumi.Input[bool]]:
        """
        Third party signal provider realtime url check mode
        """
        return pulumi.get(self, "tpsp_realtime_url_check_mode")

    @tpsp_realtime_url_check_mode.setter
    def tpsp_realtime_url_check_mode(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "tpsp_realtime_url_check_mode", value)

    @property
    @pulumi.getter(name="tpspSafeBrowsingProtectionLevel")
    def tpsp_safe_browsing_protection_level(self) -> Optional[pulumi.Input[str]]:
        """
        Third party signal provider safe browsing protection level
        """
        return pulumi.get(self, "tpsp_safe_browsing_protection_level")

    @tpsp_safe_browsing_protection_level.setter
    def tpsp_safe_browsing_protection_level(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tpsp_safe_browsing_protection_level", value)

    @property
    @pulumi.getter(name="tpspScreenLockSecured")
    def tpsp_screen_lock_secured(self) -> Optional[pulumi.Input[bool]]:
        """
        Third party signal provider screen lock secure
        """
        return pulumi.get(self, "tpsp_screen_lock_secured")

    @tpsp_screen_lock_secured.setter
    def tpsp_screen_lock_secured(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "tpsp_screen_lock_secured", value)

    @property
    @pulumi.getter(name="tpspSiteIsolationEnabled")
    def tpsp_site_isolation_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        Third party signal provider site isolation enabled
        """
        return pulumi.get(self, "tpsp_site_isolation_enabled")

    @tpsp_site_isolation_enabled.setter
    def tpsp_site_isolation_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "tpsp_site_isolation_enabled", value)


@pulumi.input_type
class _DeviceAssuranceChromeosState:
    def __init__(__self__, *,
                 created_by: Optional[pulumi.Input[str]] = None,
                 created_date: Optional[pulumi.Input[str]] = None,
                 last_update: Optional[pulumi.Input[str]] = None,
                 last_updated_by: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 platform: Optional[pulumi.Input[str]] = None,
                 tpsp_allow_screen_lock: Optional[pulumi.Input[bool]] = None,
                 tpsp_browser_version: Optional[pulumi.Input[str]] = None,
                 tpsp_builtin_dns_client_enabled: Optional[pulumi.Input[bool]] = None,
                 tpsp_chrome_remote_desktop_app_blocked: Optional[pulumi.Input[bool]] = None,
                 tpsp_device_enrollment_domain: Optional[pulumi.Input[str]] = None,
                 tpsp_disk_encrypted: Optional[pulumi.Input[bool]] = None,
                 tpsp_key_trust_level: Optional[pulumi.Input[str]] = None,
                 tpsp_os_firewall: Optional[pulumi.Input[bool]] = None,
                 tpsp_os_version: Optional[pulumi.Input[str]] = None,
                 tpsp_password_proctection_warning_trigger: Optional[pulumi.Input[str]] = None,
                 tpsp_realtime_url_check_mode: Optional[pulumi.Input[bool]] = None,
                 tpsp_safe_browsing_protection_level: Optional[pulumi.Input[str]] = None,
                 tpsp_screen_lock_secured: Optional[pulumi.Input[bool]] = None,
                 tpsp_site_isolation_enabled: Optional[pulumi.Input[bool]] = None):
        """
        Input properties used for looking up and filtering DeviceAssuranceChromeos resources.
        :param pulumi.Input[str] created_by: Created by
        :param pulumi.Input[str] created_date: Created date
        :param pulumi.Input[str] last_update: Last update
        :param pulumi.Input[str] last_updated_by: Last updated by
        :param pulumi.Input[str] name: Policy device assurance name
        :param pulumi.Input[str] platform: Policy device assurance platform
        :param pulumi.Input[bool] tpsp_allow_screen_lock: Third party signal provider allow screen lock
        :param pulumi.Input[str] tpsp_browser_version: Third party signal provider minimum browser version
        :param pulumi.Input[bool] tpsp_builtin_dns_client_enabled: Third party signal provider builtin dns client enabled
        :param pulumi.Input[bool] tpsp_chrome_remote_desktop_app_blocked: Third party signal provider chrome remote desktop app blocked
        :param pulumi.Input[str] tpsp_device_enrollment_domain: Third party signal provider device enrollment domain
        :param pulumi.Input[bool] tpsp_disk_encrypted: Third party signal provider disk encrypted
        :param pulumi.Input[str] tpsp_key_trust_level: Third party signal provider key trust level
        :param pulumi.Input[bool] tpsp_os_firewall: Third party signal provider os firewall
        :param pulumi.Input[str] tpsp_os_version: Third party signal provider minimum os version
        :param pulumi.Input[str] tpsp_password_proctection_warning_trigger: Third party signal provider password protection warning trigger
        :param pulumi.Input[bool] tpsp_realtime_url_check_mode: Third party signal provider realtime url check mode
        :param pulumi.Input[str] tpsp_safe_browsing_protection_level: Third party signal provider safe browsing protection level
        :param pulumi.Input[bool] tpsp_screen_lock_secured: Third party signal provider screen lock secure
        :param pulumi.Input[bool] tpsp_site_isolation_enabled: Third party signal provider site isolation enabled
        """
        _DeviceAssuranceChromeosState._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created_by=created_by,
            created_date=created_date,
            last_update=last_update,
            last_updated_by=last_updated_by,
            name=name,
            platform=platform,
            tpsp_allow_screen_lock=tpsp_allow_screen_lock,
            tpsp_browser_version=tpsp_browser_version,
            tpsp_builtin_dns_client_enabled=tpsp_builtin_dns_client_enabled,
            tpsp_chrome_remote_desktop_app_blocked=tpsp_chrome_remote_desktop_app_blocked,
            tpsp_device_enrollment_domain=tpsp_device_enrollment_domain,
            tpsp_disk_encrypted=tpsp_disk_encrypted,
            tpsp_key_trust_level=tpsp_key_trust_level,
            tpsp_os_firewall=tpsp_os_firewall,
            tpsp_os_version=tpsp_os_version,
            tpsp_password_proctection_warning_trigger=tpsp_password_proctection_warning_trigger,
            tpsp_realtime_url_check_mode=tpsp_realtime_url_check_mode,
            tpsp_safe_browsing_protection_level=tpsp_safe_browsing_protection_level,
            tpsp_screen_lock_secured=tpsp_screen_lock_secured,
            tpsp_site_isolation_enabled=tpsp_site_isolation_enabled,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created_by: Optional[pulumi.Input[str]] = None,
             created_date: Optional[pulumi.Input[str]] = None,
             last_update: Optional[pulumi.Input[str]] = None,
             last_updated_by: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             platform: Optional[pulumi.Input[str]] = None,
             tpsp_allow_screen_lock: Optional[pulumi.Input[bool]] = None,
             tpsp_browser_version: Optional[pulumi.Input[str]] = None,
             tpsp_builtin_dns_client_enabled: Optional[pulumi.Input[bool]] = None,
             tpsp_chrome_remote_desktop_app_blocked: Optional[pulumi.Input[bool]] = None,
             tpsp_device_enrollment_domain: Optional[pulumi.Input[str]] = None,
             tpsp_disk_encrypted: Optional[pulumi.Input[bool]] = None,
             tpsp_key_trust_level: Optional[pulumi.Input[str]] = None,
             tpsp_os_firewall: Optional[pulumi.Input[bool]] = None,
             tpsp_os_version: Optional[pulumi.Input[str]] = None,
             tpsp_password_proctection_warning_trigger: Optional[pulumi.Input[str]] = None,
             tpsp_realtime_url_check_mode: Optional[pulumi.Input[bool]] = None,
             tpsp_safe_browsing_protection_level: Optional[pulumi.Input[str]] = None,
             tpsp_screen_lock_secured: Optional[pulumi.Input[bool]] = None,
             tpsp_site_isolation_enabled: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if created_by is not None:
            _setter("created_by", created_by)
        if created_date is not None:
            _setter("created_date", created_date)
        if last_update is not None:
            _setter("last_update", last_update)
        if last_updated_by is not None:
            _setter("last_updated_by", last_updated_by)
        if name is not None:
            _setter("name", name)
        if platform is not None:
            _setter("platform", platform)
        if tpsp_allow_screen_lock is not None:
            _setter("tpsp_allow_screen_lock", tpsp_allow_screen_lock)
        if tpsp_browser_version is not None:
            _setter("tpsp_browser_version", tpsp_browser_version)
        if tpsp_builtin_dns_client_enabled is not None:
            _setter("tpsp_builtin_dns_client_enabled", tpsp_builtin_dns_client_enabled)
        if tpsp_chrome_remote_desktop_app_blocked is not None:
            _setter("tpsp_chrome_remote_desktop_app_blocked", tpsp_chrome_remote_desktop_app_blocked)
        if tpsp_device_enrollment_domain is not None:
            _setter("tpsp_device_enrollment_domain", tpsp_device_enrollment_domain)
        if tpsp_disk_encrypted is not None:
            _setter("tpsp_disk_encrypted", tpsp_disk_encrypted)
        if tpsp_key_trust_level is not None:
            _setter("tpsp_key_trust_level", tpsp_key_trust_level)
        if tpsp_os_firewall is not None:
            _setter("tpsp_os_firewall", tpsp_os_firewall)
        if tpsp_os_version is not None:
            _setter("tpsp_os_version", tpsp_os_version)
        if tpsp_password_proctection_warning_trigger is not None:
            _setter("tpsp_password_proctection_warning_trigger", tpsp_password_proctection_warning_trigger)
        if tpsp_realtime_url_check_mode is not None:
            _setter("tpsp_realtime_url_check_mode", tpsp_realtime_url_check_mode)
        if tpsp_safe_browsing_protection_level is not None:
            _setter("tpsp_safe_browsing_protection_level", tpsp_safe_browsing_protection_level)
        if tpsp_screen_lock_secured is not None:
            _setter("tpsp_screen_lock_secured", tpsp_screen_lock_secured)
        if tpsp_site_isolation_enabled is not None:
            _setter("tpsp_site_isolation_enabled", tpsp_site_isolation_enabled)

    @property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[pulumi.Input[str]]:
        """
        Created by
        """
        return pulumi.get(self, "created_by")

    @created_by.setter
    def created_by(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created_by", value)

    @property
    @pulumi.getter(name="createdDate")
    def created_date(self) -> Optional[pulumi.Input[str]]:
        """
        Created date
        """
        return pulumi.get(self, "created_date")

    @created_date.setter
    def created_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created_date", value)

    @property
    @pulumi.getter(name="lastUpdate")
    def last_update(self) -> Optional[pulumi.Input[str]]:
        """
        Last update
        """
        return pulumi.get(self, "last_update")

    @last_update.setter
    def last_update(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_update", value)

    @property
    @pulumi.getter(name="lastUpdatedBy")
    def last_updated_by(self) -> Optional[pulumi.Input[str]]:
        """
        Last updated by
        """
        return pulumi.get(self, "last_updated_by")

    @last_updated_by.setter
    def last_updated_by(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_updated_by", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Policy device assurance name
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def platform(self) -> Optional[pulumi.Input[str]]:
        """
        Policy device assurance platform
        """
        return pulumi.get(self, "platform")

    @platform.setter
    def platform(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "platform", value)

    @property
    @pulumi.getter(name="tpspAllowScreenLock")
    def tpsp_allow_screen_lock(self) -> Optional[pulumi.Input[bool]]:
        """
        Third party signal provider allow screen lock
        """
        return pulumi.get(self, "tpsp_allow_screen_lock")

    @tpsp_allow_screen_lock.setter
    def tpsp_allow_screen_lock(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "tpsp_allow_screen_lock", value)

    @property
    @pulumi.getter(name="tpspBrowserVersion")
    def tpsp_browser_version(self) -> Optional[pulumi.Input[str]]:
        """
        Third party signal provider minimum browser version
        """
        return pulumi.get(self, "tpsp_browser_version")

    @tpsp_browser_version.setter
    def tpsp_browser_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tpsp_browser_version", value)

    @property
    @pulumi.getter(name="tpspBuiltinDnsClientEnabled")
    def tpsp_builtin_dns_client_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        Third party signal provider builtin dns client enabled
        """
        return pulumi.get(self, "tpsp_builtin_dns_client_enabled")

    @tpsp_builtin_dns_client_enabled.setter
    def tpsp_builtin_dns_client_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "tpsp_builtin_dns_client_enabled", value)

    @property
    @pulumi.getter(name="tpspChromeRemoteDesktopAppBlocked")
    def tpsp_chrome_remote_desktop_app_blocked(self) -> Optional[pulumi.Input[bool]]:
        """
        Third party signal provider chrome remote desktop app blocked
        """
        return pulumi.get(self, "tpsp_chrome_remote_desktop_app_blocked")

    @tpsp_chrome_remote_desktop_app_blocked.setter
    def tpsp_chrome_remote_desktop_app_blocked(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "tpsp_chrome_remote_desktop_app_blocked", value)

    @property
    @pulumi.getter(name="tpspDeviceEnrollmentDomain")
    def tpsp_device_enrollment_domain(self) -> Optional[pulumi.Input[str]]:
        """
        Third party signal provider device enrollment domain
        """
        return pulumi.get(self, "tpsp_device_enrollment_domain")

    @tpsp_device_enrollment_domain.setter
    def tpsp_device_enrollment_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tpsp_device_enrollment_domain", value)

    @property
    @pulumi.getter(name="tpspDiskEncrypted")
    def tpsp_disk_encrypted(self) -> Optional[pulumi.Input[bool]]:
        """
        Third party signal provider disk encrypted
        """
        return pulumi.get(self, "tpsp_disk_encrypted")

    @tpsp_disk_encrypted.setter
    def tpsp_disk_encrypted(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "tpsp_disk_encrypted", value)

    @property
    @pulumi.getter(name="tpspKeyTrustLevel")
    def tpsp_key_trust_level(self) -> Optional[pulumi.Input[str]]:
        """
        Third party signal provider key trust level
        """
        return pulumi.get(self, "tpsp_key_trust_level")

    @tpsp_key_trust_level.setter
    def tpsp_key_trust_level(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tpsp_key_trust_level", value)

    @property
    @pulumi.getter(name="tpspOsFirewall")
    def tpsp_os_firewall(self) -> Optional[pulumi.Input[bool]]:
        """
        Third party signal provider os firewall
        """
        return pulumi.get(self, "tpsp_os_firewall")

    @tpsp_os_firewall.setter
    def tpsp_os_firewall(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "tpsp_os_firewall", value)

    @property
    @pulumi.getter(name="tpspOsVersion")
    def tpsp_os_version(self) -> Optional[pulumi.Input[str]]:
        """
        Third party signal provider minimum os version
        """
        return pulumi.get(self, "tpsp_os_version")

    @tpsp_os_version.setter
    def tpsp_os_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tpsp_os_version", value)

    @property
    @pulumi.getter(name="tpspPasswordProctectionWarningTrigger")
    def tpsp_password_proctection_warning_trigger(self) -> Optional[pulumi.Input[str]]:
        """
        Third party signal provider password protection warning trigger
        """
        return pulumi.get(self, "tpsp_password_proctection_warning_trigger")

    @tpsp_password_proctection_warning_trigger.setter
    def tpsp_password_proctection_warning_trigger(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tpsp_password_proctection_warning_trigger", value)

    @property
    @pulumi.getter(name="tpspRealtimeUrlCheckMode")
    def tpsp_realtime_url_check_mode(self) -> Optional[pulumi.Input[bool]]:
        """
        Third party signal provider realtime url check mode
        """
        return pulumi.get(self, "tpsp_realtime_url_check_mode")

    @tpsp_realtime_url_check_mode.setter
    def tpsp_realtime_url_check_mode(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "tpsp_realtime_url_check_mode", value)

    @property
    @pulumi.getter(name="tpspSafeBrowsingProtectionLevel")
    def tpsp_safe_browsing_protection_level(self) -> Optional[pulumi.Input[str]]:
        """
        Third party signal provider safe browsing protection level
        """
        return pulumi.get(self, "tpsp_safe_browsing_protection_level")

    @tpsp_safe_browsing_protection_level.setter
    def tpsp_safe_browsing_protection_level(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tpsp_safe_browsing_protection_level", value)

    @property
    @pulumi.getter(name="tpspScreenLockSecured")
    def tpsp_screen_lock_secured(self) -> Optional[pulumi.Input[bool]]:
        """
        Third party signal provider screen lock secure
        """
        return pulumi.get(self, "tpsp_screen_lock_secured")

    @tpsp_screen_lock_secured.setter
    def tpsp_screen_lock_secured(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "tpsp_screen_lock_secured", value)

    @property
    @pulumi.getter(name="tpspSiteIsolationEnabled")
    def tpsp_site_isolation_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        Third party signal provider site isolation enabled
        """
        return pulumi.get(self, "tpsp_site_isolation_enabled")

    @tpsp_site_isolation_enabled.setter
    def tpsp_site_isolation_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "tpsp_site_isolation_enabled", value)


class DeviceAssuranceChromeos(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 tpsp_allow_screen_lock: Optional[pulumi.Input[bool]] = None,
                 tpsp_browser_version: Optional[pulumi.Input[str]] = None,
                 tpsp_builtin_dns_client_enabled: Optional[pulumi.Input[bool]] = None,
                 tpsp_chrome_remote_desktop_app_blocked: Optional[pulumi.Input[bool]] = None,
                 tpsp_device_enrollment_domain: Optional[pulumi.Input[str]] = None,
                 tpsp_disk_encrypted: Optional[pulumi.Input[bool]] = None,
                 tpsp_key_trust_level: Optional[pulumi.Input[str]] = None,
                 tpsp_os_firewall: Optional[pulumi.Input[bool]] = None,
                 tpsp_os_version: Optional[pulumi.Input[str]] = None,
                 tpsp_password_proctection_warning_trigger: Optional[pulumi.Input[str]] = None,
                 tpsp_realtime_url_check_mode: Optional[pulumi.Input[bool]] = None,
                 tpsp_safe_browsing_protection_level: Optional[pulumi.Input[str]] = None,
                 tpsp_screen_lock_secured: Optional[pulumi.Input[bool]] = None,
                 tpsp_site_isolation_enabled: Optional[pulumi.Input[bool]] = None,
                 __props__=None):
        """
        Create a DeviceAssuranceChromeos resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] name: Policy device assurance name
        :param pulumi.Input[bool] tpsp_allow_screen_lock: Third party signal provider allow screen lock
        :param pulumi.Input[str] tpsp_browser_version: Third party signal provider minimum browser version
        :param pulumi.Input[bool] tpsp_builtin_dns_client_enabled: Third party signal provider builtin dns client enabled
        :param pulumi.Input[bool] tpsp_chrome_remote_desktop_app_blocked: Third party signal provider chrome remote desktop app blocked
        :param pulumi.Input[str] tpsp_device_enrollment_domain: Third party signal provider device enrollment domain
        :param pulumi.Input[bool] tpsp_disk_encrypted: Third party signal provider disk encrypted
        :param pulumi.Input[str] tpsp_key_trust_level: Third party signal provider key trust level
        :param pulumi.Input[bool] tpsp_os_firewall: Third party signal provider os firewall
        :param pulumi.Input[str] tpsp_os_version: Third party signal provider minimum os version
        :param pulumi.Input[str] tpsp_password_proctection_warning_trigger: Third party signal provider password protection warning trigger
        :param pulumi.Input[bool] tpsp_realtime_url_check_mode: Third party signal provider realtime url check mode
        :param pulumi.Input[str] tpsp_safe_browsing_protection_level: Third party signal provider safe browsing protection level
        :param pulumi.Input[bool] tpsp_screen_lock_secured: Third party signal provider screen lock secure
        :param pulumi.Input[bool] tpsp_site_isolation_enabled: Third party signal provider site isolation enabled
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[DeviceAssuranceChromeosArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a DeviceAssuranceChromeos resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param DeviceAssuranceChromeosArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(DeviceAssuranceChromeosArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            kwargs = kwargs or {}
            def _setter(key, value):
                kwargs[key] = value
            DeviceAssuranceChromeosArgs._configure(_setter, **kwargs)
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 tpsp_allow_screen_lock: Optional[pulumi.Input[bool]] = None,
                 tpsp_browser_version: Optional[pulumi.Input[str]] = None,
                 tpsp_builtin_dns_client_enabled: Optional[pulumi.Input[bool]] = None,
                 tpsp_chrome_remote_desktop_app_blocked: Optional[pulumi.Input[bool]] = None,
                 tpsp_device_enrollment_domain: Optional[pulumi.Input[str]] = None,
                 tpsp_disk_encrypted: Optional[pulumi.Input[bool]] = None,
                 tpsp_key_trust_level: Optional[pulumi.Input[str]] = None,
                 tpsp_os_firewall: Optional[pulumi.Input[bool]] = None,
                 tpsp_os_version: Optional[pulumi.Input[str]] = None,
                 tpsp_password_proctection_warning_trigger: Optional[pulumi.Input[str]] = None,
                 tpsp_realtime_url_check_mode: Optional[pulumi.Input[bool]] = None,
                 tpsp_safe_browsing_protection_level: Optional[pulumi.Input[str]] = None,
                 tpsp_screen_lock_secured: Optional[pulumi.Input[bool]] = None,
                 tpsp_site_isolation_enabled: Optional[pulumi.Input[bool]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = DeviceAssuranceChromeosArgs.__new__(DeviceAssuranceChromeosArgs)

            __props__.__dict__["name"] = name
            __props__.__dict__["tpsp_allow_screen_lock"] = tpsp_allow_screen_lock
            __props__.__dict__["tpsp_browser_version"] = tpsp_browser_version
            __props__.__dict__["tpsp_builtin_dns_client_enabled"] = tpsp_builtin_dns_client_enabled
            __props__.__dict__["tpsp_chrome_remote_desktop_app_blocked"] = tpsp_chrome_remote_desktop_app_blocked
            __props__.__dict__["tpsp_device_enrollment_domain"] = tpsp_device_enrollment_domain
            __props__.__dict__["tpsp_disk_encrypted"] = tpsp_disk_encrypted
            __props__.__dict__["tpsp_key_trust_level"] = tpsp_key_trust_level
            __props__.__dict__["tpsp_os_firewall"] = tpsp_os_firewall
            __props__.__dict__["tpsp_os_version"] = tpsp_os_version
            __props__.__dict__["tpsp_password_proctection_warning_trigger"] = tpsp_password_proctection_warning_trigger
            __props__.__dict__["tpsp_realtime_url_check_mode"] = tpsp_realtime_url_check_mode
            __props__.__dict__["tpsp_safe_browsing_protection_level"] = tpsp_safe_browsing_protection_level
            __props__.__dict__["tpsp_screen_lock_secured"] = tpsp_screen_lock_secured
            __props__.__dict__["tpsp_site_isolation_enabled"] = tpsp_site_isolation_enabled
            __props__.__dict__["created_by"] = None
            __props__.__dict__["created_date"] = None
            __props__.__dict__["last_update"] = None
            __props__.__dict__["last_updated_by"] = None
            __props__.__dict__["platform"] = None
        super(DeviceAssuranceChromeos, __self__).__init__(
            'okta:policy/deviceAssuranceChromeos:DeviceAssuranceChromeos',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_by: Optional[pulumi.Input[str]] = None,
            created_date: Optional[pulumi.Input[str]] = None,
            last_update: Optional[pulumi.Input[str]] = None,
            last_updated_by: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            platform: Optional[pulumi.Input[str]] = None,
            tpsp_allow_screen_lock: Optional[pulumi.Input[bool]] = None,
            tpsp_browser_version: Optional[pulumi.Input[str]] = None,
            tpsp_builtin_dns_client_enabled: Optional[pulumi.Input[bool]] = None,
            tpsp_chrome_remote_desktop_app_blocked: Optional[pulumi.Input[bool]] = None,
            tpsp_device_enrollment_domain: Optional[pulumi.Input[str]] = None,
            tpsp_disk_encrypted: Optional[pulumi.Input[bool]] = None,
            tpsp_key_trust_level: Optional[pulumi.Input[str]] = None,
            tpsp_os_firewall: Optional[pulumi.Input[bool]] = None,
            tpsp_os_version: Optional[pulumi.Input[str]] = None,
            tpsp_password_proctection_warning_trigger: Optional[pulumi.Input[str]] = None,
            tpsp_realtime_url_check_mode: Optional[pulumi.Input[bool]] = None,
            tpsp_safe_browsing_protection_level: Optional[pulumi.Input[str]] = None,
            tpsp_screen_lock_secured: Optional[pulumi.Input[bool]] = None,
            tpsp_site_isolation_enabled: Optional[pulumi.Input[bool]] = None) -> 'DeviceAssuranceChromeos':
        """
        Get an existing DeviceAssuranceChromeos resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] created_by: Created by
        :param pulumi.Input[str] created_date: Created date
        :param pulumi.Input[str] last_update: Last update
        :param pulumi.Input[str] last_updated_by: Last updated by
        :param pulumi.Input[str] name: Policy device assurance name
        :param pulumi.Input[str] platform: Policy device assurance platform
        :param pulumi.Input[bool] tpsp_allow_screen_lock: Third party signal provider allow screen lock
        :param pulumi.Input[str] tpsp_browser_version: Third party signal provider minimum browser version
        :param pulumi.Input[bool] tpsp_builtin_dns_client_enabled: Third party signal provider builtin dns client enabled
        :param pulumi.Input[bool] tpsp_chrome_remote_desktop_app_blocked: Third party signal provider chrome remote desktop app blocked
        :param pulumi.Input[str] tpsp_device_enrollment_domain: Third party signal provider device enrollment domain
        :param pulumi.Input[bool] tpsp_disk_encrypted: Third party signal provider disk encrypted
        :param pulumi.Input[str] tpsp_key_trust_level: Third party signal provider key trust level
        :param pulumi.Input[bool] tpsp_os_firewall: Third party signal provider os firewall
        :param pulumi.Input[str] tpsp_os_version: Third party signal provider minimum os version
        :param pulumi.Input[str] tpsp_password_proctection_warning_trigger: Third party signal provider password protection warning trigger
        :param pulumi.Input[bool] tpsp_realtime_url_check_mode: Third party signal provider realtime url check mode
        :param pulumi.Input[str] tpsp_safe_browsing_protection_level: Third party signal provider safe browsing protection level
        :param pulumi.Input[bool] tpsp_screen_lock_secured: Third party signal provider screen lock secure
        :param pulumi.Input[bool] tpsp_site_isolation_enabled: Third party signal provider site isolation enabled
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _DeviceAssuranceChromeosState.__new__(_DeviceAssuranceChromeosState)

        __props__.__dict__["created_by"] = created_by
        __props__.__dict__["created_date"] = created_date
        __props__.__dict__["last_update"] = last_update
        __props__.__dict__["last_updated_by"] = last_updated_by
        __props__.__dict__["name"] = name
        __props__.__dict__["platform"] = platform
        __props__.__dict__["tpsp_allow_screen_lock"] = tpsp_allow_screen_lock
        __props__.__dict__["tpsp_browser_version"] = tpsp_browser_version
        __props__.__dict__["tpsp_builtin_dns_client_enabled"] = tpsp_builtin_dns_client_enabled
        __props__.__dict__["tpsp_chrome_remote_desktop_app_blocked"] = tpsp_chrome_remote_desktop_app_blocked
        __props__.__dict__["tpsp_device_enrollment_domain"] = tpsp_device_enrollment_domain
        __props__.__dict__["tpsp_disk_encrypted"] = tpsp_disk_encrypted
        __props__.__dict__["tpsp_key_trust_level"] = tpsp_key_trust_level
        __props__.__dict__["tpsp_os_firewall"] = tpsp_os_firewall
        __props__.__dict__["tpsp_os_version"] = tpsp_os_version
        __props__.__dict__["tpsp_password_proctection_warning_trigger"] = tpsp_password_proctection_warning_trigger
        __props__.__dict__["tpsp_realtime_url_check_mode"] = tpsp_realtime_url_check_mode
        __props__.__dict__["tpsp_safe_browsing_protection_level"] = tpsp_safe_browsing_protection_level
        __props__.__dict__["tpsp_screen_lock_secured"] = tpsp_screen_lock_secured
        __props__.__dict__["tpsp_site_isolation_enabled"] = tpsp_site_isolation_enabled
        return DeviceAssuranceChromeos(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> pulumi.Output[str]:
        """
        Created by
        """
        return pulumi.get(self, "created_by")

    @property
    @pulumi.getter(name="createdDate")
    def created_date(self) -> pulumi.Output[str]:
        """
        Created date
        """
        return pulumi.get(self, "created_date")

    @property
    @pulumi.getter(name="lastUpdate")
    def last_update(self) -> pulumi.Output[str]:
        """
        Last update
        """
        return pulumi.get(self, "last_update")

    @property
    @pulumi.getter(name="lastUpdatedBy")
    def last_updated_by(self) -> pulumi.Output[str]:
        """
        Last updated by
        """
        return pulumi.get(self, "last_updated_by")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Policy device assurance name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def platform(self) -> pulumi.Output[str]:
        """
        Policy device assurance platform
        """
        return pulumi.get(self, "platform")

    @property
    @pulumi.getter(name="tpspAllowScreenLock")
    def tpsp_allow_screen_lock(self) -> pulumi.Output[Optional[bool]]:
        """
        Third party signal provider allow screen lock
        """
        return pulumi.get(self, "tpsp_allow_screen_lock")

    @property
    @pulumi.getter(name="tpspBrowserVersion")
    def tpsp_browser_version(self) -> pulumi.Output[Optional[str]]:
        """
        Third party signal provider minimum browser version
        """
        return pulumi.get(self, "tpsp_browser_version")

    @property
    @pulumi.getter(name="tpspBuiltinDnsClientEnabled")
    def tpsp_builtin_dns_client_enabled(self) -> pulumi.Output[Optional[bool]]:
        """
        Third party signal provider builtin dns client enabled
        """
        return pulumi.get(self, "tpsp_builtin_dns_client_enabled")

    @property
    @pulumi.getter(name="tpspChromeRemoteDesktopAppBlocked")
    def tpsp_chrome_remote_desktop_app_blocked(self) -> pulumi.Output[Optional[bool]]:
        """
        Third party signal provider chrome remote desktop app blocked
        """
        return pulumi.get(self, "tpsp_chrome_remote_desktop_app_blocked")

    @property
    @pulumi.getter(name="tpspDeviceEnrollmentDomain")
    def tpsp_device_enrollment_domain(self) -> pulumi.Output[Optional[str]]:
        """
        Third party signal provider device enrollment domain
        """
        return pulumi.get(self, "tpsp_device_enrollment_domain")

    @property
    @pulumi.getter(name="tpspDiskEncrypted")
    def tpsp_disk_encrypted(self) -> pulumi.Output[Optional[bool]]:
        """
        Third party signal provider disk encrypted
        """
        return pulumi.get(self, "tpsp_disk_encrypted")

    @property
    @pulumi.getter(name="tpspKeyTrustLevel")
    def tpsp_key_trust_level(self) -> pulumi.Output[Optional[str]]:
        """
        Third party signal provider key trust level
        """
        return pulumi.get(self, "tpsp_key_trust_level")

    @property
    @pulumi.getter(name="tpspOsFirewall")
    def tpsp_os_firewall(self) -> pulumi.Output[Optional[bool]]:
        """
        Third party signal provider os firewall
        """
        return pulumi.get(self, "tpsp_os_firewall")

    @property
    @pulumi.getter(name="tpspOsVersion")
    def tpsp_os_version(self) -> pulumi.Output[Optional[str]]:
        """
        Third party signal provider minimum os version
        """
        return pulumi.get(self, "tpsp_os_version")

    @property
    @pulumi.getter(name="tpspPasswordProctectionWarningTrigger")
    def tpsp_password_proctection_warning_trigger(self) -> pulumi.Output[Optional[str]]:
        """
        Third party signal provider password protection warning trigger
        """
        return pulumi.get(self, "tpsp_password_proctection_warning_trigger")

    @property
    @pulumi.getter(name="tpspRealtimeUrlCheckMode")
    def tpsp_realtime_url_check_mode(self) -> pulumi.Output[Optional[bool]]:
        """
        Third party signal provider realtime url check mode
        """
        return pulumi.get(self, "tpsp_realtime_url_check_mode")

    @property
    @pulumi.getter(name="tpspSafeBrowsingProtectionLevel")
    def tpsp_safe_browsing_protection_level(self) -> pulumi.Output[Optional[str]]:
        """
        Third party signal provider safe browsing protection level
        """
        return pulumi.get(self, "tpsp_safe_browsing_protection_level")

    @property
    @pulumi.getter(name="tpspScreenLockSecured")
    def tpsp_screen_lock_secured(self) -> pulumi.Output[Optional[bool]]:
        """
        Third party signal provider screen lock secure
        """
        return pulumi.get(self, "tpsp_screen_lock_secured")

    @property
    @pulumi.getter(name="tpspSiteIsolationEnabled")
    def tpsp_site_isolation_enabled(self) -> pulumi.Output[Optional[bool]]:
        """
        Third party signal provider site isolation enabled
        """
        return pulumi.get(self, "tpsp_site_isolation_enabled")


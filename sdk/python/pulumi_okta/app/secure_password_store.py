# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables


class SecurePasswordStore(pulumi.CustomResource):
    accessibility_error_redirect_url: pulumi.Output[str]
    """
    Custom error page URL.
    """
    accessibility_self_service: pulumi.Output[bool]
    """
    Enable self service. By default it is `false`.
    """
    auto_submit_toolbar: pulumi.Output[bool]
    """
    Display auto submit toolbar.
    """
    credentials_scheme: pulumi.Output[str]
    """
    Application credentials scheme. Can be set to `"EDIT_USERNAME_AND_PASSWORD"`, `"ADMIN_SETS_CREDENTIALS"`, `"EDIT_PASSWORD_ONLY"`, `"EXTERNAL_PASSWORD_SYNC"`, or `"SHARED_USERNAME_AND_PASSWORD"`.
    """
    groups: pulumi.Output[list]
    """
    Groups associated with the application. See `app.GroupAssignment` for a more flexible approach.
    """
    hide_ios: pulumi.Output[bool]
    """
    Do not display application icon on mobile app.
    """
    hide_web: pulumi.Output[bool]
    """
    Do not display application icon to users.
    """
    label: pulumi.Output[str]
    """
    The display name of the Application.
    """
    name: pulumi.Output[str]
    """
    Name assigned to the application by Okta.
    """
    optional_field1: pulumi.Output[str]
    """
    Name of optional param in the login form.
    """
    optional_field1_value: pulumi.Output[str]
    """
    Name of optional value in the login form.
    """
    optional_field2: pulumi.Output[str]
    """
    Name of optional param in the login form.
    """
    optional_field2_value: pulumi.Output[str]
    """
    Name of optional value in the login form.
    """
    optional_field3: pulumi.Output[str]
    """
    Name of optional param in the login form.
    """
    optional_field3_value: pulumi.Output[str]
    """
    Name of optional value in the login form.
    """
    password_field: pulumi.Output[str]
    """
    Login password field.
    """
    reveal_password: pulumi.Output[bool]
    """
    Allow user to reveal password.
    """
    shared_password: pulumi.Output[str]
    """
    Shared password, required for certain schemes.
    """
    shared_username: pulumi.Output[str]
    """
    Shared username, required for certain schemes.
    """
    sign_on_mode: pulumi.Output[str]
    """
    Sign on mode of application.
    """
    status: pulumi.Output[str]
    """
    Status of application. By default it is `"ACTIVE"`.
    """
    url: pulumi.Output[str]
    """
    Login URL.
    """
    user_name_template: pulumi.Output[str]
    """
    The default username assigned to each user.
    """
    user_name_template_type: pulumi.Output[str]
    """
    The Username template type.
    """
    username_field: pulumi.Output[str]
    """
    Login username field.
    """
    users: pulumi.Output[list]
    """
    The users assigned to the application. See `app.User` for a more flexible approach.

      * `id` (`str`)
      * `password` (`str`)
      * `scope` (`str`)
      * `username` (`str`)
    """
    def __init__(__self__, resource_name, opts=None, accessibility_error_redirect_url=None, accessibility_self_service=None, auto_submit_toolbar=None, credentials_scheme=None, groups=None, hide_ios=None, hide_web=None, label=None, optional_field1=None, optional_field1_value=None, optional_field2=None, optional_field2_value=None, optional_field3=None, optional_field3_value=None, password_field=None, reveal_password=None, shared_password=None, shared_username=None, status=None, url=None, username_field=None, users=None, __props__=None, __name__=None, __opts__=None):
        """
        Creates a Secure Password Store Application.

        This resource allows you to create and configure a Secure Password Store Application.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_okta as okta

        example = okta.app.SecurePasswordStore("example",
            credentials_scheme="ADMIN_SETS_CREDENTIALS",
            label="example",
            password_field="pass",
            url="http://test.com",
            username_field="user")
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] accessibility_error_redirect_url: Custom error page URL.
        :param pulumi.Input[bool] accessibility_self_service: Enable self service. By default it is `false`.
        :param pulumi.Input[bool] auto_submit_toolbar: Display auto submit toolbar.
        :param pulumi.Input[str] credentials_scheme: Application credentials scheme. Can be set to `"EDIT_USERNAME_AND_PASSWORD"`, `"ADMIN_SETS_CREDENTIALS"`, `"EDIT_PASSWORD_ONLY"`, `"EXTERNAL_PASSWORD_SYNC"`, or `"SHARED_USERNAME_AND_PASSWORD"`.
        :param pulumi.Input[list] groups: Groups associated with the application. See `app.GroupAssignment` for a more flexible approach.
        :param pulumi.Input[bool] hide_ios: Do not display application icon on mobile app.
        :param pulumi.Input[bool] hide_web: Do not display application icon to users.
        :param pulumi.Input[str] label: The display name of the Application.
        :param pulumi.Input[str] optional_field1: Name of optional param in the login form.
        :param pulumi.Input[str] optional_field1_value: Name of optional value in the login form.
        :param pulumi.Input[str] optional_field2: Name of optional param in the login form.
        :param pulumi.Input[str] optional_field2_value: Name of optional value in the login form.
        :param pulumi.Input[str] optional_field3: Name of optional param in the login form.
        :param pulumi.Input[str] optional_field3_value: Name of optional value in the login form.
        :param pulumi.Input[str] password_field: Login password field.
        :param pulumi.Input[bool] reveal_password: Allow user to reveal password.
        :param pulumi.Input[str] shared_password: Shared password, required for certain schemes.
        :param pulumi.Input[str] shared_username: Shared username, required for certain schemes.
        :param pulumi.Input[str] status: Status of application. By default it is `"ACTIVE"`.
        :param pulumi.Input[str] url: Login URL.
        :param pulumi.Input[str] username_field: Login username field.
        :param pulumi.Input[list] users: The users assigned to the application. See `app.User` for a more flexible approach.

        The **users** object supports the following:

          * `id` (`pulumi.Input[str]`)
          * `password` (`pulumi.Input[str]`)
          * `scope` (`pulumi.Input[str]`)
          * `username` (`pulumi.Input[str]`)
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['accessibility_error_redirect_url'] = accessibility_error_redirect_url
            __props__['accessibility_self_service'] = accessibility_self_service
            __props__['auto_submit_toolbar'] = auto_submit_toolbar
            __props__['credentials_scheme'] = credentials_scheme
            __props__['groups'] = groups
            __props__['hide_ios'] = hide_ios
            __props__['hide_web'] = hide_web
            if label is None:
                raise TypeError("Missing required property 'label'")
            __props__['label'] = label
            __props__['optional_field1'] = optional_field1
            __props__['optional_field1_value'] = optional_field1_value
            __props__['optional_field2'] = optional_field2
            __props__['optional_field2_value'] = optional_field2_value
            __props__['optional_field3'] = optional_field3
            __props__['optional_field3_value'] = optional_field3_value
            if password_field is None:
                raise TypeError("Missing required property 'password_field'")
            __props__['password_field'] = password_field
            __props__['reveal_password'] = reveal_password
            __props__['shared_password'] = shared_password
            __props__['shared_username'] = shared_username
            __props__['status'] = status
            if url is None:
                raise TypeError("Missing required property 'url'")
            __props__['url'] = url
            if username_field is None:
                raise TypeError("Missing required property 'username_field'")
            __props__['username_field'] = username_field
            __props__['users'] = users
            __props__['name'] = None
            __props__['sign_on_mode'] = None
            __props__['user_name_template'] = None
            __props__['user_name_template_type'] = None
        super(SecurePasswordStore, __self__).__init__(
            'okta:app/securePasswordStore:SecurePasswordStore',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, accessibility_error_redirect_url=None, accessibility_self_service=None, auto_submit_toolbar=None, credentials_scheme=None, groups=None, hide_ios=None, hide_web=None, label=None, name=None, optional_field1=None, optional_field1_value=None, optional_field2=None, optional_field2_value=None, optional_field3=None, optional_field3_value=None, password_field=None, reveal_password=None, shared_password=None, shared_username=None, sign_on_mode=None, status=None, url=None, user_name_template=None, user_name_template_type=None, username_field=None, users=None):
        """
        Get an existing SecurePasswordStore resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] accessibility_error_redirect_url: Custom error page URL.
        :param pulumi.Input[bool] accessibility_self_service: Enable self service. By default it is `false`.
        :param pulumi.Input[bool] auto_submit_toolbar: Display auto submit toolbar.
        :param pulumi.Input[str] credentials_scheme: Application credentials scheme. Can be set to `"EDIT_USERNAME_AND_PASSWORD"`, `"ADMIN_SETS_CREDENTIALS"`, `"EDIT_PASSWORD_ONLY"`, `"EXTERNAL_PASSWORD_SYNC"`, or `"SHARED_USERNAME_AND_PASSWORD"`.
        :param pulumi.Input[list] groups: Groups associated with the application. See `app.GroupAssignment` for a more flexible approach.
        :param pulumi.Input[bool] hide_ios: Do not display application icon on mobile app.
        :param pulumi.Input[bool] hide_web: Do not display application icon to users.
        :param pulumi.Input[str] label: The display name of the Application.
        :param pulumi.Input[str] name: Name assigned to the application by Okta.
        :param pulumi.Input[str] optional_field1: Name of optional param in the login form.
        :param pulumi.Input[str] optional_field1_value: Name of optional value in the login form.
        :param pulumi.Input[str] optional_field2: Name of optional param in the login form.
        :param pulumi.Input[str] optional_field2_value: Name of optional value in the login form.
        :param pulumi.Input[str] optional_field3: Name of optional param in the login form.
        :param pulumi.Input[str] optional_field3_value: Name of optional value in the login form.
        :param pulumi.Input[str] password_field: Login password field.
        :param pulumi.Input[bool] reveal_password: Allow user to reveal password.
        :param pulumi.Input[str] shared_password: Shared password, required for certain schemes.
        :param pulumi.Input[str] shared_username: Shared username, required for certain schemes.
        :param pulumi.Input[str] sign_on_mode: Sign on mode of application.
        :param pulumi.Input[str] status: Status of application. By default it is `"ACTIVE"`.
        :param pulumi.Input[str] url: Login URL.
        :param pulumi.Input[str] user_name_template: The default username assigned to each user.
        :param pulumi.Input[str] user_name_template_type: The Username template type.
        :param pulumi.Input[str] username_field: Login username field.
        :param pulumi.Input[list] users: The users assigned to the application. See `app.User` for a more flexible approach.

        The **users** object supports the following:

          * `id` (`pulumi.Input[str]`)
          * `password` (`pulumi.Input[str]`)
          * `scope` (`pulumi.Input[str]`)
          * `username` (`pulumi.Input[str]`)
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["accessibility_error_redirect_url"] = accessibility_error_redirect_url
        __props__["accessibility_self_service"] = accessibility_self_service
        __props__["auto_submit_toolbar"] = auto_submit_toolbar
        __props__["credentials_scheme"] = credentials_scheme
        __props__["groups"] = groups
        __props__["hide_ios"] = hide_ios
        __props__["hide_web"] = hide_web
        __props__["label"] = label
        __props__["name"] = name
        __props__["optional_field1"] = optional_field1
        __props__["optional_field1_value"] = optional_field1_value
        __props__["optional_field2"] = optional_field2
        __props__["optional_field2_value"] = optional_field2_value
        __props__["optional_field3"] = optional_field3
        __props__["optional_field3_value"] = optional_field3_value
        __props__["password_field"] = password_field
        __props__["reveal_password"] = reveal_password
        __props__["shared_password"] = shared_password
        __props__["shared_username"] = shared_username
        __props__["sign_on_mode"] = sign_on_mode
        __props__["status"] = status
        __props__["url"] = url
        __props__["user_name_template"] = user_name_template
        __props__["user_name_template_type"] = user_name_template_type
        __props__["username_field"] = username_field
        __props__["users"] = users
        return SecurePasswordStore(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .auto_login import *
from .basic_auth import *
from .bookmark import *
from .get_app import *
from .get_metadata_saml import *
from .get_saml import *
from .group_assignment import *
from .o_auth import *
from .o_auth_redirect_uri import *
from .saml import *
from .secure_password_store import *
from .swa import *
from .three_field import *
from .user import *
from .user_base_schema import *
from .user_schema import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "okta:app/autoLogin:AutoLogin":
                return AutoLogin(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "okta:app/basicAuth:BasicAuth":
                return BasicAuth(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "okta:app/bookmark:Bookmark":
                return Bookmark(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "okta:app/groupAssignment:GroupAssignment":
                return GroupAssignment(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "okta:app/oAuth:OAuth":
                return OAuth(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "okta:app/oAuthRedirectUri:OAuthRedirectUri":
                return OAuthRedirectUri(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "okta:app/saml:Saml":
                return Saml(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "okta:app/securePasswordStore:SecurePasswordStore":
                return SecurePasswordStore(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "okta:app/swa:Swa":
                return Swa(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "okta:app/threeField:ThreeField":
                return ThreeField(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "okta:app/user:User":
                return User(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "okta:app/userBaseSchema:UserBaseSchema":
                return UserBaseSchema(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "okta:app/userSchema:UserSchema":
                return UserSchema(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("okta", "app/autoLogin", _module_instance)
    pulumi.runtime.register_resource_module("okta", "app/basicAuth", _module_instance)
    pulumi.runtime.register_resource_module("okta", "app/bookmark", _module_instance)
    pulumi.runtime.register_resource_module("okta", "app/groupAssignment", _module_instance)
    pulumi.runtime.register_resource_module("okta", "app/oAuth", _module_instance)
    pulumi.runtime.register_resource_module("okta", "app/oAuthRedirectUri", _module_instance)
    pulumi.runtime.register_resource_module("okta", "app/saml", _module_instance)
    pulumi.runtime.register_resource_module("okta", "app/securePasswordStore", _module_instance)
    pulumi.runtime.register_resource_module("okta", "app/swa", _module_instance)
    pulumi.runtime.register_resource_module("okta", "app/threeField", _module_instance)
    pulumi.runtime.register_resource_module("okta", "app/user", _module_instance)
    pulumi.runtime.register_resource_module("okta", "app/userBaseSchema", _module_instance)
    pulumi.runtime.register_resource_module("okta", "app/userSchema", _module_instance)

_register_module()

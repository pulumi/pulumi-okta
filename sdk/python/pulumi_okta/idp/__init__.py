# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .get_metadata_saml import *
from .get_oidc import *
from .get_saml import *
from .oidc import *
from .saml import *
from .saml_key import *
from .social import *

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "okta:idp/oidc:Oidc":
                return Oidc(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "okta:idp/saml:Saml":
                return Saml(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "okta:idp/samlKey:SamlKey":
                return SamlKey(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "okta:idp/social:Social":
                return Social(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("okta", "idp/oidc", _module_instance)
    pulumi.runtime.register_resource_module("okta", "idp/saml", _module_instance)
    pulumi.runtime.register_resource_module("okta", "idp/samlKey", _module_instance)
    pulumi.runtime.register_resource_module("okta", "idp/social", _module_instance)

_register_module()

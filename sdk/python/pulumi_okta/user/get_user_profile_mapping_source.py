# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetUserProfileMappingSourceResult',
    'AwaitableGetUserProfileMappingSourceResult',
    'get_user_profile_mapping_source',
    'get_user_profile_mapping_source_output',
]

@pulumi.output_type
class GetUserProfileMappingSourceResult:
    """
    A collection of values returned by getUserProfileMappingSource.
    """
    def __init__(__self__, id=None, name=None, type=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        ID of the source
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name of source.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Type of source.
        """
        return pulumi.get(self, "type")


class AwaitableGetUserProfileMappingSourceResult(GetUserProfileMappingSourceResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetUserProfileMappingSourceResult(
            id=self.id,
            name=self.name,
            type=self.type)


def get_user_profile_mapping_source(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetUserProfileMappingSourceResult:
    """
    Get the base user Profile Mapping source or target from Okta.

    > **NOTE:** If using this resource with OAuth2 scopes, this resource
    requires `okta.profileMappings.read` scope.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_okta as okta

    example = okta.user.get_user_profile_mapping_source()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('okta:user/getUserProfileMappingSource:getUserProfileMappingSource', __args__, opts=opts, typ=GetUserProfileMappingSourceResult).value

    return AwaitableGetUserProfileMappingSourceResult(
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        type=pulumi.get(__ret__, 'type'))


@_utilities.lift_output_func(get_user_profile_mapping_source)
def get_user_profile_mapping_source_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetUserProfileMappingSourceResult]:
    """
    Get the base user Profile Mapping source or target from Okta.

    > **NOTE:** If using this resource with OAuth2 scopes, this resource
    requires `okta.profileMappings.read` scope.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_okta as okta

    example = okta.user.get_user_profile_mapping_source()
    ```
    """
    ...

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'EmailDomainDnsValidationRecordArgs',
]

@pulumi.input_type
class EmailDomainDnsValidationRecordArgs:
    def __init__(__self__, *,
                 expiration: Optional[pulumi.Input[str]] = None,
                 fqdn: Optional[pulumi.Input[str]] = None,
                 record_type: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] fqdn: DNS record name.
        :param pulumi.Input[str] record_type: Record type can be TXT or cname.
        :param pulumi.Input[str] value: DNS record value
               - `expiration ` - (Deprecated) This field has been removed in the newest go sdk version and has become noop
        """
        EmailDomainDnsValidationRecordArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            expiration=expiration,
            fqdn=fqdn,
            record_type=record_type,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             expiration: Optional[pulumi.Input[str]] = None,
             fqdn: Optional[pulumi.Input[str]] = None,
             record_type: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if expiration is not None:
            warnings.warn("""This field has been removed in the newest go sdk version and has become noop""", DeprecationWarning)
            pulumi.log.warn("""expiration is deprecated: This field has been removed in the newest go sdk version and has become noop""")
        if expiration is not None:
            _setter("expiration", expiration)
        if fqdn is not None:
            _setter("fqdn", fqdn)
        if record_type is not None:
            _setter("record_type", record_type)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def expiration(self) -> Optional[pulumi.Input[str]]:
        warnings.warn("""This field has been removed in the newest go sdk version and has become noop""", DeprecationWarning)
        pulumi.log.warn("""expiration is deprecated: This field has been removed in the newest go sdk version and has become noop""")

        return pulumi.get(self, "expiration")

    @expiration.setter
    def expiration(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "expiration", value)

    @property
    @pulumi.getter
    def fqdn(self) -> Optional[pulumi.Input[str]]:
        """
        DNS record name.
        """
        return pulumi.get(self, "fqdn")

    @fqdn.setter
    def fqdn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fqdn", value)

    @property
    @pulumi.getter(name="recordType")
    def record_type(self) -> Optional[pulumi.Input[str]]:
        """
        Record type can be TXT or cname.
        """
        return pulumi.get(self, "record_type")

    @record_type.setter
    def record_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "record_type", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        DNS record value
        - `expiration ` - (Deprecated) This field has been removed in the newest go sdk version and has become noop
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)



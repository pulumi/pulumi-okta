# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'EmailDomainDnsValidationRecord',
    'GetDomainDnsRecordResult',
]

@pulumi.output_type
class EmailDomainDnsValidationRecord(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "recordType":
            suggest = "record_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in EmailDomainDnsValidationRecord. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        EmailDomainDnsValidationRecord.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        EmailDomainDnsValidationRecord.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 expiration: Optional[str] = None,
                 fqdn: Optional[str] = None,
                 record_type: Optional[str] = None,
                 value: Optional[str] = None):
        """
        :param str fqdn: DNS record name.
        :param str record_type: Record type can be TXT or cname.
        :param str value: DNS record value
               - `expiration ` - DNS TXT record expiration
        """
        if expiration is not None:
            pulumi.set(__self__, "expiration", expiration)
        if fqdn is not None:
            pulumi.set(__self__, "fqdn", fqdn)
        if record_type is not None:
            pulumi.set(__self__, "record_type", record_type)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def expiration(self) -> Optional[str]:
        return pulumi.get(self, "expiration")

    @property
    @pulumi.getter
    def fqdn(self) -> Optional[str]:
        """
        DNS record name.
        """
        return pulumi.get(self, "fqdn")

    @property
    @pulumi.getter(name="recordType")
    def record_type(self) -> Optional[str]:
        """
        Record type can be TXT or cname.
        """
        return pulumi.get(self, "record_type")

    @property
    @pulumi.getter
    def value(self) -> Optional[str]:
        """
        DNS record value
        - `expiration ` - DNS TXT record expiration
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetDomainDnsRecordResult(dict):
    def __init__(__self__, *,
                 expiration: str,
                 fqdn: str,
                 record_type: str,
                 values: Sequence[str]):
        """
        :param str expiration: TXT record expiration.
        :param str fqdn: DNS record name.
        :param str record_type: Record type can be TXT or CNAME.
        :param Sequence[str] values: DNS verification value
        """
        pulumi.set(__self__, "expiration", expiration)
        pulumi.set(__self__, "fqdn", fqdn)
        pulumi.set(__self__, "record_type", record_type)
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter
    def expiration(self) -> str:
        """
        TXT record expiration.
        """
        return pulumi.get(self, "expiration")

    @property
    @pulumi.getter
    def fqdn(self) -> str:
        """
        DNS record name.
        """
        return pulumi.get(self, "fqdn")

    @property
    @pulumi.getter(name="recordType")
    def record_type(self) -> str:
        """
        Record type can be TXT or CNAME.
        """
        return pulumi.get(self, "record_type")

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        """
        DNS verification value
        """
        return pulumi.get(self, "values")



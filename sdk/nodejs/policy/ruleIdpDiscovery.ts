// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Creates an IdP Discovery Policy Rule.
 *
 * This resource allows you to create and configure an IdP Discovery Policy Rule.
 * > If you receive the error 'You do not have permission to access the feature
 * you are requesting' contact support and
 * request feature flag 'ADVANCED_SSO' be applied to your org.
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import okta:policy/ruleIdpDiscovery:RuleIdpDiscovery example <policy_id>/<rule_id>
 * ```
 */
export class RuleIdpDiscovery extends pulumi.CustomResource {
    /**
     * Get an existing RuleIdpDiscovery resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RuleIdpDiscoveryState, opts?: pulumi.CustomResourceOptions): RuleIdpDiscovery {
        return new RuleIdpDiscovery(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:policy/ruleIdpDiscovery:RuleIdpDiscovery';

    /**
     * Returns true if the given object is an instance of RuleIdpDiscovery.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RuleIdpDiscovery {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RuleIdpDiscovery.__pulumiType;
    }

    /**
     * Applications to exclude in discovery. See `appInclude` for details.
     */
    declare public readonly appExcludes: pulumi.Output<outputs.policy.RuleIdpDiscoveryAppExclude[] | undefined>;
    /**
     * Applications to include in discovery rule.
     * - 'id' - (Optional) Use if 'type' is 'APP' to indicate the application id to include.
     * - 'name' - (Optional) Use if the 'type' is 'APP_TYPE' to indicate the type of application(s) to include in instances where an entire group (i.e. 'yahoo_mail') of applications should be included.
     * - 'type' - (Required) One of: 'APP', 'APP_TYPE'
     */
    declare public readonly appIncludes: pulumi.Output<outputs.policy.RuleIdpDiscoveryAppInclude[] | undefined>;
    declare public readonly idpProviders: pulumi.Output<outputs.policy.RuleIdpDiscoveryIdpProvider[]>;
    /**
     * Policy Rule Name
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`
     */
    declare public readonly networkConnection: pulumi.Output<string | undefined>;
    /**
     * Required if `networkConnection` = `ZONE`. Indicates the network zones to exclude.
     */
    declare public readonly networkExcludes: pulumi.Output<string[] | undefined>;
    /**
     * Required if `networkConnection` = `ZONE`. Indicates the network zones to include.
     */
    declare public readonly networkIncludes: pulumi.Output<string[] | undefined>;
    /**
     * Platform to include in discovery rule.
     * - 'type' - (Optional) One of: 'ANY', 'MOBILE', 'DESKTOP'
     * - 'os_expression - (Optional) Only available when using osType = 'OTHER'
     * - 'os_type' - (Optional) One of: 'ANY', 'IOS', 'WINDOWS', 'ANDROID', 'OTHER', 'OSX'
     */
    declare public readonly platformIncludes: pulumi.Output<outputs.policy.RuleIdpDiscoveryPlatformInclude[] | undefined>;
    /**
     * Policy ID of the Rule
     */
    declare public readonly policyId: pulumi.Output<string | undefined>;
    /**
     * Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if an invalid property is provided. The Okta API defaults to the last (lowest) if not provided.
     */
    declare public readonly priority: pulumi.Output<number | undefined>;
    /**
     * Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`
     */
    declare public readonly status: pulumi.Output<string | undefined>;
    /**
     * Profile attribute matching can only have a single value that describes the type indicated in `userIdentifierType`. This is the attribute or identifier that the `userIdentifierPatterns` are checked against.
     */
    declare public readonly userIdentifierAttribute: pulumi.Output<string | undefined>;
    /**
     * Specifies a User Identifier pattern condition to match against. If 'match_type' of 'EXPRESSION' is used, only a *single* element can be set, otherwise multiple elements of matching patterns may be provided.
     * - 'match_type' - (Optional) The kind of pattern. For regex, use 'EXPRESSION'. For simple string matches, use one of the following: 'SUFFIX', 'EQUALS', 'STARTS_WITH', 'CONTAINS'
     * - 'value' - (Optional) The regex or simple match string to match against.
     */
    declare public readonly userIdentifierPatterns: pulumi.Output<outputs.policy.RuleIdpDiscoveryUserIdentifierPattern[] | undefined>;
    /**
     * One of: `IDENTIFIER`, `ATTRIBUTE`
     */
    declare public readonly userIdentifierType: pulumi.Output<string | undefined>;

    /**
     * Create a RuleIdpDiscovery resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RuleIdpDiscoveryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RuleIdpDiscoveryArgs | RuleIdpDiscoveryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RuleIdpDiscoveryState | undefined;
            resourceInputs["appExcludes"] = state?.appExcludes;
            resourceInputs["appIncludes"] = state?.appIncludes;
            resourceInputs["idpProviders"] = state?.idpProviders;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkConnection"] = state?.networkConnection;
            resourceInputs["networkExcludes"] = state?.networkExcludes;
            resourceInputs["networkIncludes"] = state?.networkIncludes;
            resourceInputs["platformIncludes"] = state?.platformIncludes;
            resourceInputs["policyId"] = state?.policyId;
            resourceInputs["priority"] = state?.priority;
            resourceInputs["status"] = state?.status;
            resourceInputs["userIdentifierAttribute"] = state?.userIdentifierAttribute;
            resourceInputs["userIdentifierPatterns"] = state?.userIdentifierPatterns;
            resourceInputs["userIdentifierType"] = state?.userIdentifierType;
        } else {
            const args = argsOrState as RuleIdpDiscoveryArgs | undefined;
            resourceInputs["appExcludes"] = args?.appExcludes;
            resourceInputs["appIncludes"] = args?.appIncludes;
            resourceInputs["idpProviders"] = args?.idpProviders;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkConnection"] = args?.networkConnection;
            resourceInputs["networkExcludes"] = args?.networkExcludes;
            resourceInputs["networkIncludes"] = args?.networkIncludes;
            resourceInputs["platformIncludes"] = args?.platformIncludes;
            resourceInputs["policyId"] = args?.policyId;
            resourceInputs["priority"] = args?.priority;
            resourceInputs["status"] = args?.status;
            resourceInputs["userIdentifierAttribute"] = args?.userIdentifierAttribute;
            resourceInputs["userIdentifierPatterns"] = args?.userIdentifierPatterns;
            resourceInputs["userIdentifierType"] = args?.userIdentifierType;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RuleIdpDiscovery.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RuleIdpDiscovery resources.
 */
export interface RuleIdpDiscoveryState {
    /**
     * Applications to exclude in discovery. See `appInclude` for details.
     */
    appExcludes?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryAppExclude>[]>;
    /**
     * Applications to include in discovery rule.
     * - 'id' - (Optional) Use if 'type' is 'APP' to indicate the application id to include.
     * - 'name' - (Optional) Use if the 'type' is 'APP_TYPE' to indicate the type of application(s) to include in instances where an entire group (i.e. 'yahoo_mail') of applications should be included.
     * - 'type' - (Required) One of: 'APP', 'APP_TYPE'
     */
    appIncludes?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryAppInclude>[]>;
    idpProviders?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryIdpProvider>[]>;
    /**
     * Policy Rule Name
     */
    name?: pulumi.Input<string>;
    /**
     * Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`
     */
    networkConnection?: pulumi.Input<string>;
    /**
     * Required if `networkConnection` = `ZONE`. Indicates the network zones to exclude.
     */
    networkExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required if `networkConnection` = `ZONE`. Indicates the network zones to include.
     */
    networkIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Platform to include in discovery rule.
     * - 'type' - (Optional) One of: 'ANY', 'MOBILE', 'DESKTOP'
     * - 'os_expression - (Optional) Only available when using osType = 'OTHER'
     * - 'os_type' - (Optional) One of: 'ANY', 'IOS', 'WINDOWS', 'ANDROID', 'OTHER', 'OSX'
     */
    platformIncludes?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryPlatformInclude>[]>;
    /**
     * Policy ID of the Rule
     */
    policyId?: pulumi.Input<string>;
    /**
     * Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if an invalid property is provided. The Okta API defaults to the last (lowest) if not provided.
     */
    priority?: pulumi.Input<number>;
    /**
     * Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`
     */
    status?: pulumi.Input<string>;
    /**
     * Profile attribute matching can only have a single value that describes the type indicated in `userIdentifierType`. This is the attribute or identifier that the `userIdentifierPatterns` are checked against.
     */
    userIdentifierAttribute?: pulumi.Input<string>;
    /**
     * Specifies a User Identifier pattern condition to match against. If 'match_type' of 'EXPRESSION' is used, only a *single* element can be set, otherwise multiple elements of matching patterns may be provided.
     * - 'match_type' - (Optional) The kind of pattern. For regex, use 'EXPRESSION'. For simple string matches, use one of the following: 'SUFFIX', 'EQUALS', 'STARTS_WITH', 'CONTAINS'
     * - 'value' - (Optional) The regex or simple match string to match against.
     */
    userIdentifierPatterns?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryUserIdentifierPattern>[]>;
    /**
     * One of: `IDENTIFIER`, `ATTRIBUTE`
     */
    userIdentifierType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RuleIdpDiscovery resource.
 */
export interface RuleIdpDiscoveryArgs {
    /**
     * Applications to exclude in discovery. See `appInclude` for details.
     */
    appExcludes?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryAppExclude>[]>;
    /**
     * Applications to include in discovery rule.
     * - 'id' - (Optional) Use if 'type' is 'APP' to indicate the application id to include.
     * - 'name' - (Optional) Use if the 'type' is 'APP_TYPE' to indicate the type of application(s) to include in instances where an entire group (i.e. 'yahoo_mail') of applications should be included.
     * - 'type' - (Required) One of: 'APP', 'APP_TYPE'
     */
    appIncludes?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryAppInclude>[]>;
    idpProviders?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryIdpProvider>[]>;
    /**
     * Policy Rule Name
     */
    name?: pulumi.Input<string>;
    /**
     * Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`
     */
    networkConnection?: pulumi.Input<string>;
    /**
     * Required if `networkConnection` = `ZONE`. Indicates the network zones to exclude.
     */
    networkExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required if `networkConnection` = `ZONE`. Indicates the network zones to include.
     */
    networkIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Platform to include in discovery rule.
     * - 'type' - (Optional) One of: 'ANY', 'MOBILE', 'DESKTOP'
     * - 'os_expression - (Optional) Only available when using osType = 'OTHER'
     * - 'os_type' - (Optional) One of: 'ANY', 'IOS', 'WINDOWS', 'ANDROID', 'OTHER', 'OSX'
     */
    platformIncludes?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryPlatformInclude>[]>;
    /**
     * Policy ID of the Rule
     */
    policyId?: pulumi.Input<string>;
    /**
     * Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if an invalid property is provided. The Okta API defaults to the last (lowest) if not provided.
     */
    priority?: pulumi.Input<number>;
    /**
     * Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`
     */
    status?: pulumi.Input<string>;
    /**
     * Profile attribute matching can only have a single value that describes the type indicated in `userIdentifierType`. This is the attribute or identifier that the `userIdentifierPatterns` are checked against.
     */
    userIdentifierAttribute?: pulumi.Input<string>;
    /**
     * Specifies a User Identifier pattern condition to match against. If 'match_type' of 'EXPRESSION' is used, only a *single* element can be set, otherwise multiple elements of matching patterns may be provided.
     * - 'match_type' - (Optional) The kind of pattern. For regex, use 'EXPRESSION'. For simple string matches, use one of the following: 'SUFFIX', 'EQUALS', 'STARTS_WITH', 'CONTAINS'
     * - 'value' - (Optional) The regex or simple match string to match against.
     */
    userIdentifierPatterns?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryUserIdentifierPattern>[]>;
    /**
     * One of: `IDENTIFIER`, `ATTRIBUTE`
     */
    userIdentifierType?: pulumi.Input<string>;
}

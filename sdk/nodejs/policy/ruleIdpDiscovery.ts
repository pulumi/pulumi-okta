// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class RuleIdpDiscovery extends pulumi.CustomResource {
    /**
     * Get an existing RuleIdpDiscovery resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RuleIdpDiscoveryState, opts?: pulumi.CustomResourceOptions): RuleIdpDiscovery {
        return new RuleIdpDiscovery(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:policy/ruleIdpDiscovery:RuleIdpDiscovery';

    /**
     * Returns true if the given object is an instance of RuleIdpDiscovery.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RuleIdpDiscovery {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RuleIdpDiscovery.__pulumiType;
    }

    /**
     * Applications to exclude in discovery rule
     */
    public readonly appExcludes!: pulumi.Output<outputs.policy.RuleIdpDiscoveryAppExclude[] | undefined>;
    /**
     * Applications to include in discovery rule
     */
    public readonly appIncludes!: pulumi.Output<outputs.policy.RuleIdpDiscoveryAppInclude[] | undefined>;
    public readonly idpId!: pulumi.Output<string | undefined>;
    public readonly idpType!: pulumi.Output<string | undefined>;
    /**
     * Policy Rule Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Network selection mode: ANYWHERE, ZONE, ON*NETWORK, or OFF*NETWORK.
     */
    public readonly networkConnection!: pulumi.Output<string | undefined>;
    /**
     * The zones to exclude
     */
    public readonly networkExcludes!: pulumi.Output<string[] | undefined>;
    /**
     * The zones to include
     */
    public readonly networkIncludes!: pulumi.Output<string[] | undefined>;
    public readonly platformIncludes!: pulumi.Output<outputs.policy.RuleIdpDiscoveryPlatformInclude[] | undefined>;
    /**
     * Policy ID of the Rule
     */
    public readonly policyId!: pulumi.Output<string | undefined>;
    /**
     * Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    /**
     * Policy Rule Status: ACTIVE or INACTIVE.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    public readonly userIdentifierAttribute!: pulumi.Output<string | undefined>;
    public readonly userIdentifierPatterns!: pulumi.Output<outputs.policy.RuleIdpDiscoveryUserIdentifierPattern[] | undefined>;
    public readonly userIdentifierType!: pulumi.Output<string | undefined>;

    /**
     * Create a RuleIdpDiscovery resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RuleIdpDiscoveryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RuleIdpDiscoveryArgs | RuleIdpDiscoveryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RuleIdpDiscoveryState | undefined;
            resourceInputs["appExcludes"] = state ? state.appExcludes : undefined;
            resourceInputs["appIncludes"] = state ? state.appIncludes : undefined;
            resourceInputs["idpId"] = state ? state.idpId : undefined;
            resourceInputs["idpType"] = state ? state.idpType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkConnection"] = state ? state.networkConnection : undefined;
            resourceInputs["networkExcludes"] = state ? state.networkExcludes : undefined;
            resourceInputs["networkIncludes"] = state ? state.networkIncludes : undefined;
            resourceInputs["platformIncludes"] = state ? state.platformIncludes : undefined;
            resourceInputs["policyId"] = state ? state.policyId : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["userIdentifierAttribute"] = state ? state.userIdentifierAttribute : undefined;
            resourceInputs["userIdentifierPatterns"] = state ? state.userIdentifierPatterns : undefined;
            resourceInputs["userIdentifierType"] = state ? state.userIdentifierType : undefined;
        } else {
            const args = argsOrState as RuleIdpDiscoveryArgs | undefined;
            resourceInputs["appExcludes"] = args ? args.appExcludes : undefined;
            resourceInputs["appIncludes"] = args ? args.appIncludes : undefined;
            resourceInputs["idpId"] = args ? args.idpId : undefined;
            resourceInputs["idpType"] = args ? args.idpType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkConnection"] = args ? args.networkConnection : undefined;
            resourceInputs["networkExcludes"] = args ? args.networkExcludes : undefined;
            resourceInputs["networkIncludes"] = args ? args.networkIncludes : undefined;
            resourceInputs["platformIncludes"] = args ? args.platformIncludes : undefined;
            resourceInputs["policyId"] = args ? args.policyId : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["userIdentifierAttribute"] = args ? args.userIdentifierAttribute : undefined;
            resourceInputs["userIdentifierPatterns"] = args ? args.userIdentifierPatterns : undefined;
            resourceInputs["userIdentifierType"] = args ? args.userIdentifierType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RuleIdpDiscovery.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RuleIdpDiscovery resources.
 */
export interface RuleIdpDiscoveryState {
    /**
     * Applications to exclude in discovery rule
     */
    appExcludes?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryAppExclude>[]>;
    /**
     * Applications to include in discovery rule
     */
    appIncludes?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryAppInclude>[]>;
    idpId?: pulumi.Input<string>;
    idpType?: pulumi.Input<string>;
    /**
     * Policy Rule Name
     */
    name?: pulumi.Input<string>;
    /**
     * Network selection mode: ANYWHERE, ZONE, ON*NETWORK, or OFF*NETWORK.
     */
    networkConnection?: pulumi.Input<string>;
    /**
     * The zones to exclude
     */
    networkExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The zones to include
     */
    networkIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    platformIncludes?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryPlatformInclude>[]>;
    /**
     * Policy ID of the Rule
     */
    policyId?: pulumi.Input<string>;
    /**
     * Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.
     */
    priority?: pulumi.Input<number>;
    /**
     * Policy Rule Status: ACTIVE or INACTIVE.
     */
    status?: pulumi.Input<string>;
    userIdentifierAttribute?: pulumi.Input<string>;
    userIdentifierPatterns?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryUserIdentifierPattern>[]>;
    userIdentifierType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RuleIdpDiscovery resource.
 */
export interface RuleIdpDiscoveryArgs {
    /**
     * Applications to exclude in discovery rule
     */
    appExcludes?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryAppExclude>[]>;
    /**
     * Applications to include in discovery rule
     */
    appIncludes?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryAppInclude>[]>;
    idpId?: pulumi.Input<string>;
    idpType?: pulumi.Input<string>;
    /**
     * Policy Rule Name
     */
    name?: pulumi.Input<string>;
    /**
     * Network selection mode: ANYWHERE, ZONE, ON*NETWORK, or OFF*NETWORK.
     */
    networkConnection?: pulumi.Input<string>;
    /**
     * The zones to exclude
     */
    networkExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The zones to include
     */
    networkIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    platformIncludes?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryPlatformInclude>[]>;
    /**
     * Policy ID of the Rule
     */
    policyId?: pulumi.Input<string>;
    /**
     * Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.
     */
    priority?: pulumi.Input<number>;
    /**
     * Policy Rule Status: ACTIVE or INACTIVE.
     */
    status?: pulumi.Input<string>;
    userIdentifierAttribute?: pulumi.Input<string>;
    userIdentifierPatterns?: pulumi.Input<pulumi.Input<inputs.policy.RuleIdpDiscoveryUserIdentifierPattern>[]>;
    userIdentifierType?: pulumi.Input<string>;
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Creates an MFA Policy.
 *
 * This resource allows you to create and configure an MFA Policy.
 *
 * > Requires Org Feature Flag `OKTA_MFA_POLICY`. Contact support to have this feature flag ***enabled***.
 *
 * > Unless Org Feature Flag `ENG_ENABLE_OPTIONAL_PASSWORD_ENROLLMENT` is ***disabled*** `oktaPassword` or `oktaEmail` must be present and its `enroll` value set to `REQUIRED`. Contact support to have this feature flag ***disabled***.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const classicExample = new okta.policy.Mfa("classic_example", {
 *     description: "Example MFA policy using Okta Classic engine with factors.",
 *     groupsIncludeds: [okta_group_everyone.id],
 *     isOie: false,
 *     oktaOtp: {
 *         enroll: "REQUIRED",
 *     },
 *     oktaPassword: {
 *         enroll: "REQUIRED",
 *     },
 *     status: "ACTIVE",
 * });
 * const oieExample = new okta.policy.Mfa("oie_example", {
 *     description: "Example MFA policy that uses Okta Identity Engine (OIE) with authenticators",
 *     groupsIncludeds: [okta_group_everyone.id],
 *     isOie: true,
 *     oktaPassword: {
 *         enroll: "REQUIRED",
 *     },
 *     // The following authenticator can only be used when `is_oie` is set to true
 *     oktaVerify: {
 *         enroll: "REQUIRED",
 *     },
 *     status: "ACTIVE",
 * });
 * ```
 *
 * ## Import
 *
 * An MFA Policy can be imported via the Okta ID.
 *
 * ```sh
 *  $ pulumi import okta:policy/mfa:Mfa example &#60;policy id&#62;
 * ```
 */
export class Mfa extends pulumi.CustomResource {
    /**
     * Get an existing Mfa resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MfaState, opts?: pulumi.CustomResourceOptions): Mfa {
        return new Mfa(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:policy/mfa:Mfa';

    /**
     * Returns true if the given object is an instance of Mfa.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Mfa {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Mfa.__pulumiType;
    }

    /**
     * Policy Description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * DUO MFA policy settings (✓ Classic, ✓ OIE).
     */
    public readonly duo!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * External IDP MFA policy settings (✓ OIE).
     */
    public readonly externalIdp!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Fido U2F MFA policy settings (✓ Classic).
     */
    public readonly fidoU2f!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Fido Web Authn MFA policy settings (✓ Classic).
     */
    public readonly fidoWebauthn!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Google OTP MFA policy settings (✓ Classic, ✓ OIE).
     */
    public readonly googleOtp!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * List of Group IDs to Include.
     */
    public readonly groupsIncludeds!: pulumi.Output<string[] | undefined>;
    /**
     * HMAC-based One-Time Password MFA policy settings (✓ Classic).
     */
    public readonly hotp!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Boolean that specifies whether to use the newer Okta Identity Engine (OIE) with policy authenticators instead of the classic engine with Factors. This value determines which of the following policy factor settings can be configured. (Default = `false`)
     * > **WARNING:** Tenant must have the Okta Identity Engine enabled in order to use this feature.
     */
    public readonly isOie!: pulumi.Output<boolean | undefined>;
    /**
     * Policy Name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Okta Call MFA policy settings (✓ Classic).
     */
    public readonly oktaCall!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Okta Email MFA policy settings (✓ Classic, ✓ OIE).
     */
    public readonly oktaEmail!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Okta OTP (via the Okta Verify app) MFA policy settings (✓ Classic).
     */
    public readonly oktaOtp!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Okta Password MFA policy settings (✓ Classic, ✓ OIE).
     */
    public readonly oktaPassword!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Okta Push MFA policy settings (✓ Classic).
     */
    public readonly oktaPush!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Okta Question MFA policy settings (✓ Classic).
     */
    public readonly oktaQuestion!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Okta SMS MFA policy settings (✓ Classic).
     */
    public readonly oktaSms!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Okta Verify MFA policy settings (✓ OIE).
     */
    public readonly oktaVerify!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * On-Prem MFA MFA policy settings (✓ OIE).
     */
    public readonly onpremMfa!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Phone Number MFA policy settings (✓ OIE).
     */
    public readonly phoneNumber!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Priority of the policy.
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    /**
     * RSA Token MFA policy settings (✓ Classic, ✓ OIE).
     */
    public readonly rsaToken!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Security Question MFA policy settings (✓ OIE).
     */
    public readonly securityQuestion!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Policy Status: `"ACTIVE"` or `"INACTIVE"`.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    /**
     * Symantec VIP MFA policy settings (✓ Classic).
     */
    public readonly symantecVip!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * FIDO2 (WebAuthn) MFA policy settings (✓ OIE).
     */
    public readonly webauthn!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Yubikey Token MFA policy settings (✓ Classic, ✓ OIE).
     */
    public readonly yubikeyToken!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Mfa resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: MfaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MfaArgs | MfaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MfaState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["duo"] = state ? state.duo : undefined;
            resourceInputs["externalIdp"] = state ? state.externalIdp : undefined;
            resourceInputs["fidoU2f"] = state ? state.fidoU2f : undefined;
            resourceInputs["fidoWebauthn"] = state ? state.fidoWebauthn : undefined;
            resourceInputs["googleOtp"] = state ? state.googleOtp : undefined;
            resourceInputs["groupsIncludeds"] = state ? state.groupsIncludeds : undefined;
            resourceInputs["hotp"] = state ? state.hotp : undefined;
            resourceInputs["isOie"] = state ? state.isOie : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oktaCall"] = state ? state.oktaCall : undefined;
            resourceInputs["oktaEmail"] = state ? state.oktaEmail : undefined;
            resourceInputs["oktaOtp"] = state ? state.oktaOtp : undefined;
            resourceInputs["oktaPassword"] = state ? state.oktaPassword : undefined;
            resourceInputs["oktaPush"] = state ? state.oktaPush : undefined;
            resourceInputs["oktaQuestion"] = state ? state.oktaQuestion : undefined;
            resourceInputs["oktaSms"] = state ? state.oktaSms : undefined;
            resourceInputs["oktaVerify"] = state ? state.oktaVerify : undefined;
            resourceInputs["onpremMfa"] = state ? state.onpremMfa : undefined;
            resourceInputs["phoneNumber"] = state ? state.phoneNumber : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["rsaToken"] = state ? state.rsaToken : undefined;
            resourceInputs["securityQuestion"] = state ? state.securityQuestion : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["symantecVip"] = state ? state.symantecVip : undefined;
            resourceInputs["webauthn"] = state ? state.webauthn : undefined;
            resourceInputs["yubikeyToken"] = state ? state.yubikeyToken : undefined;
        } else {
            const args = argsOrState as MfaArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["duo"] = args ? args.duo : undefined;
            resourceInputs["externalIdp"] = args ? args.externalIdp : undefined;
            resourceInputs["fidoU2f"] = args ? args.fidoU2f : undefined;
            resourceInputs["fidoWebauthn"] = args ? args.fidoWebauthn : undefined;
            resourceInputs["googleOtp"] = args ? args.googleOtp : undefined;
            resourceInputs["groupsIncludeds"] = args ? args.groupsIncludeds : undefined;
            resourceInputs["hotp"] = args ? args.hotp : undefined;
            resourceInputs["isOie"] = args ? args.isOie : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["oktaCall"] = args ? args.oktaCall : undefined;
            resourceInputs["oktaEmail"] = args ? args.oktaEmail : undefined;
            resourceInputs["oktaOtp"] = args ? args.oktaOtp : undefined;
            resourceInputs["oktaPassword"] = args ? args.oktaPassword : undefined;
            resourceInputs["oktaPush"] = args ? args.oktaPush : undefined;
            resourceInputs["oktaQuestion"] = args ? args.oktaQuestion : undefined;
            resourceInputs["oktaSms"] = args ? args.oktaSms : undefined;
            resourceInputs["oktaVerify"] = args ? args.oktaVerify : undefined;
            resourceInputs["onpremMfa"] = args ? args.onpremMfa : undefined;
            resourceInputs["phoneNumber"] = args ? args.phoneNumber : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["rsaToken"] = args ? args.rsaToken : undefined;
            resourceInputs["securityQuestion"] = args ? args.securityQuestion : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["symantecVip"] = args ? args.symantecVip : undefined;
            resourceInputs["webauthn"] = args ? args.webauthn : undefined;
            resourceInputs["yubikeyToken"] = args ? args.yubikeyToken : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Mfa.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Mfa resources.
 */
export interface MfaState {
    /**
     * Policy Description.
     */
    description?: pulumi.Input<string>;
    /**
     * DUO MFA policy settings (✓ Classic, ✓ OIE).
     */
    duo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * External IDP MFA policy settings (✓ OIE).
     */
    externalIdp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Fido U2F MFA policy settings (✓ Classic).
     */
    fidoU2f?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Fido Web Authn MFA policy settings (✓ Classic).
     */
    fidoWebauthn?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Google OTP MFA policy settings (✓ Classic, ✓ OIE).
     */
    googleOtp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of Group IDs to Include.
     */
    groupsIncludeds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * HMAC-based One-Time Password MFA policy settings (✓ Classic).
     */
    hotp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Boolean that specifies whether to use the newer Okta Identity Engine (OIE) with policy authenticators instead of the classic engine with Factors. This value determines which of the following policy factor settings can be configured. (Default = `false`)
     * > **WARNING:** Tenant must have the Okta Identity Engine enabled in order to use this feature.
     */
    isOie?: pulumi.Input<boolean>;
    /**
     * Policy Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Okta Call MFA policy settings (✓ Classic).
     */
    oktaCall?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Okta Email MFA policy settings (✓ Classic, ✓ OIE).
     */
    oktaEmail?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Okta OTP (via the Okta Verify app) MFA policy settings (✓ Classic).
     */
    oktaOtp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Okta Password MFA policy settings (✓ Classic, ✓ OIE).
     */
    oktaPassword?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Okta Push MFA policy settings (✓ Classic).
     */
    oktaPush?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Okta Question MFA policy settings (✓ Classic).
     */
    oktaQuestion?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Okta SMS MFA policy settings (✓ Classic).
     */
    oktaSms?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Okta Verify MFA policy settings (✓ OIE).
     */
    oktaVerify?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * On-Prem MFA MFA policy settings (✓ OIE).
     */
    onpremMfa?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Phone Number MFA policy settings (✓ OIE).
     */
    phoneNumber?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Priority of the policy.
     */
    priority?: pulumi.Input<number>;
    /**
     * RSA Token MFA policy settings (✓ Classic, ✓ OIE).
     */
    rsaToken?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Security Question MFA policy settings (✓ OIE).
     */
    securityQuestion?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Policy Status: `"ACTIVE"` or `"INACTIVE"`.
     */
    status?: pulumi.Input<string>;
    /**
     * Symantec VIP MFA policy settings (✓ Classic).
     */
    symantecVip?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * FIDO2 (WebAuthn) MFA policy settings (✓ OIE).
     */
    webauthn?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Yubikey Token MFA policy settings (✓ Classic, ✓ OIE).
     */
    yubikeyToken?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Mfa resource.
 */
export interface MfaArgs {
    /**
     * Policy Description.
     */
    description?: pulumi.Input<string>;
    /**
     * DUO MFA policy settings (✓ Classic, ✓ OIE).
     */
    duo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * External IDP MFA policy settings (✓ OIE).
     */
    externalIdp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Fido U2F MFA policy settings (✓ Classic).
     */
    fidoU2f?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Fido Web Authn MFA policy settings (✓ Classic).
     */
    fidoWebauthn?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Google OTP MFA policy settings (✓ Classic, ✓ OIE).
     */
    googleOtp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of Group IDs to Include.
     */
    groupsIncludeds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * HMAC-based One-Time Password MFA policy settings (✓ Classic).
     */
    hotp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Boolean that specifies whether to use the newer Okta Identity Engine (OIE) with policy authenticators instead of the classic engine with Factors. This value determines which of the following policy factor settings can be configured. (Default = `false`)
     * > **WARNING:** Tenant must have the Okta Identity Engine enabled in order to use this feature.
     */
    isOie?: pulumi.Input<boolean>;
    /**
     * Policy Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Okta Call MFA policy settings (✓ Classic).
     */
    oktaCall?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Okta Email MFA policy settings (✓ Classic, ✓ OIE).
     */
    oktaEmail?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Okta OTP (via the Okta Verify app) MFA policy settings (✓ Classic).
     */
    oktaOtp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Okta Password MFA policy settings (✓ Classic, ✓ OIE).
     */
    oktaPassword?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Okta Push MFA policy settings (✓ Classic).
     */
    oktaPush?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Okta Question MFA policy settings (✓ Classic).
     */
    oktaQuestion?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Okta SMS MFA policy settings (✓ Classic).
     */
    oktaSms?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Okta Verify MFA policy settings (✓ OIE).
     */
    oktaVerify?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * On-Prem MFA MFA policy settings (✓ OIE).
     */
    onpremMfa?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Phone Number MFA policy settings (✓ OIE).
     */
    phoneNumber?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Priority of the policy.
     */
    priority?: pulumi.Input<number>;
    /**
     * RSA Token MFA policy settings (✓ Classic, ✓ OIE).
     */
    rsaToken?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Security Question MFA policy settings (✓ OIE).
     */
    securityQuestion?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Policy Status: `"ACTIVE"` or `"INACTIVE"`.
     */
    status?: pulumi.Input<string>;
    /**
     * Symantec VIP MFA policy settings (✓ Classic).
     */
    symantecVip?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * FIDO2 (WebAuthn) MFA policy settings (✓ OIE).
     */
    webauthn?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Yubikey Token MFA policy settings (✓ Classic, ✓ OIE).
     */
    yubikeyToken?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Creates an MFA Policy Rule. This resource allows you to create and configure an MFA Policy Rule.
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import okta:policy/ruleMfa:RuleMfa example &#60;policy id&#62;/&#60;rule id&#62;
 * ```
 */
export class RuleMfa extends pulumi.CustomResource {
    /**
     * Get an existing RuleMfa resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RuleMfaState, opts?: pulumi.CustomResourceOptions): RuleMfa {
        return new RuleMfa(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:policy/ruleMfa:RuleMfa';

    /**
     * Returns true if the given object is an instance of RuleMfa.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RuleMfa {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RuleMfa.__pulumiType;
    }

    /**
     * Applications to exclude in discovery rule. **IMPORTANT**: this field is only available in Classic Organizations. - 'id'
     * - (Optional) Use if 'type' is 'APP' to indicate the application id to include. - 'name' - (Optional) Use if the 'type'
     * is 'APP_TYPE' to indicate the type of application(s) to include in instances where an entire group (i.e. 'yahoo_mail')
     * of applications should be included. - 'type' - (Required) One of: 'APP', 'APP_TYPE'
     */
    public readonly appExcludes!: pulumi.Output<outputs.policy.RuleMfaAppExclude[] | undefined>;
    /**
     * Applications to include in discovery rule. **IMPORTANT**: this field is only available in Classic Organizations. - 'id'
     * - (Optional) Use if 'type' is 'APP' to indicate the application id to include. - 'name' - (Optional) Use if the 'type'
     * is 'APP_TYPE' to indicate the type of application(s) to include in instances where an entire group (i.e. 'yahoo_mail')
     * of applications should be included. - 'type' - (Required) One of: 'APP', 'APP_TYPE'
     */
    public readonly appIncludes!: pulumi.Output<outputs.policy.RuleMfaAppInclude[] | undefined>;
    /**
     * When a user should be prompted for MFA. It can be `CHALLENGE`, `LOGIN`, or `NEVER`.
     */
    public readonly enroll!: pulumi.Output<string | undefined>;
    /**
     * Policy Rule Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`
     */
    public readonly networkConnection!: pulumi.Output<string | undefined>;
    /**
     * Required if `networkConnection` = `ZONE`. Indicates the network zones to exclude.
     */
    public readonly networkExcludes!: pulumi.Output<string[] | undefined>;
    /**
     * Required if `networkConnection` = `ZONE`. Indicates the network zones to include.
     */
    public readonly networkIncludes!: pulumi.Output<string[] | undefined>;
    /**
     * Policy ID of the Rule
     */
    public readonly policyId!: pulumi.Output<string | undefined>;
    /**
     * Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if
     * an invalid property is provided. The Okta API defaults to the last (lowest) if not provided.
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    /**
     * Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`
     */
    public readonly status!: pulumi.Output<string | undefined>;
    /**
     * Set of User IDs to Exclude
     */
    public readonly usersExcludeds!: pulumi.Output<string[] | undefined>;

    /**
     * Create a RuleMfa resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RuleMfaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RuleMfaArgs | RuleMfaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RuleMfaState | undefined;
            resourceInputs["appExcludes"] = state ? state.appExcludes : undefined;
            resourceInputs["appIncludes"] = state ? state.appIncludes : undefined;
            resourceInputs["enroll"] = state ? state.enroll : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkConnection"] = state ? state.networkConnection : undefined;
            resourceInputs["networkExcludes"] = state ? state.networkExcludes : undefined;
            resourceInputs["networkIncludes"] = state ? state.networkIncludes : undefined;
            resourceInputs["policyId"] = state ? state.policyId : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["usersExcludeds"] = state ? state.usersExcludeds : undefined;
        } else {
            const args = argsOrState as RuleMfaArgs | undefined;
            resourceInputs["appExcludes"] = args ? args.appExcludes : undefined;
            resourceInputs["appIncludes"] = args ? args.appIncludes : undefined;
            resourceInputs["enroll"] = args ? args.enroll : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkConnection"] = args ? args.networkConnection : undefined;
            resourceInputs["networkExcludes"] = args ? args.networkExcludes : undefined;
            resourceInputs["networkIncludes"] = args ? args.networkIncludes : undefined;
            resourceInputs["policyId"] = args ? args.policyId : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["usersExcludeds"] = args ? args.usersExcludeds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RuleMfa.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RuleMfa resources.
 */
export interface RuleMfaState {
    /**
     * Applications to exclude in discovery rule. **IMPORTANT**: this field is only available in Classic Organizations. - 'id'
     * - (Optional) Use if 'type' is 'APP' to indicate the application id to include. - 'name' - (Optional) Use if the 'type'
     * is 'APP_TYPE' to indicate the type of application(s) to include in instances where an entire group (i.e. 'yahoo_mail')
     * of applications should be included. - 'type' - (Required) One of: 'APP', 'APP_TYPE'
     */
    appExcludes?: pulumi.Input<pulumi.Input<inputs.policy.RuleMfaAppExclude>[]>;
    /**
     * Applications to include in discovery rule. **IMPORTANT**: this field is only available in Classic Organizations. - 'id'
     * - (Optional) Use if 'type' is 'APP' to indicate the application id to include. - 'name' - (Optional) Use if the 'type'
     * is 'APP_TYPE' to indicate the type of application(s) to include in instances where an entire group (i.e. 'yahoo_mail')
     * of applications should be included. - 'type' - (Required) One of: 'APP', 'APP_TYPE'
     */
    appIncludes?: pulumi.Input<pulumi.Input<inputs.policy.RuleMfaAppInclude>[]>;
    /**
     * When a user should be prompted for MFA. It can be `CHALLENGE`, `LOGIN`, or `NEVER`.
     */
    enroll?: pulumi.Input<string>;
    /**
     * Policy Rule Name
     */
    name?: pulumi.Input<string>;
    /**
     * Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`
     */
    networkConnection?: pulumi.Input<string>;
    /**
     * Required if `networkConnection` = `ZONE`. Indicates the network zones to exclude.
     */
    networkExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required if `networkConnection` = `ZONE`. Indicates the network zones to include.
     */
    networkIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Policy ID of the Rule
     */
    policyId?: pulumi.Input<string>;
    /**
     * Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if
     * an invalid property is provided. The Okta API defaults to the last (lowest) if not provided.
     */
    priority?: pulumi.Input<number>;
    /**
     * Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`
     */
    status?: pulumi.Input<string>;
    /**
     * Set of User IDs to Exclude
     */
    usersExcludeds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a RuleMfa resource.
 */
export interface RuleMfaArgs {
    /**
     * Applications to exclude in discovery rule. **IMPORTANT**: this field is only available in Classic Organizations. - 'id'
     * - (Optional) Use if 'type' is 'APP' to indicate the application id to include. - 'name' - (Optional) Use if the 'type'
     * is 'APP_TYPE' to indicate the type of application(s) to include in instances where an entire group (i.e. 'yahoo_mail')
     * of applications should be included. - 'type' - (Required) One of: 'APP', 'APP_TYPE'
     */
    appExcludes?: pulumi.Input<pulumi.Input<inputs.policy.RuleMfaAppExclude>[]>;
    /**
     * Applications to include in discovery rule. **IMPORTANT**: this field is only available in Classic Organizations. - 'id'
     * - (Optional) Use if 'type' is 'APP' to indicate the application id to include. - 'name' - (Optional) Use if the 'type'
     * is 'APP_TYPE' to indicate the type of application(s) to include in instances where an entire group (i.e. 'yahoo_mail')
     * of applications should be included. - 'type' - (Required) One of: 'APP', 'APP_TYPE'
     */
    appIncludes?: pulumi.Input<pulumi.Input<inputs.policy.RuleMfaAppInclude>[]>;
    /**
     * When a user should be prompted for MFA. It can be `CHALLENGE`, `LOGIN`, or `NEVER`.
     */
    enroll?: pulumi.Input<string>;
    /**
     * Policy Rule Name
     */
    name?: pulumi.Input<string>;
    /**
     * Network selection mode: `ANYWHERE`, `ZONE`, `ON_NETWORK`, or `OFF_NETWORK`. Default: `ANYWHERE`
     */
    networkConnection?: pulumi.Input<string>;
    /**
     * Required if `networkConnection` = `ZONE`. Indicates the network zones to exclude.
     */
    networkExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required if `networkConnection` = `ZONE`. Indicates the network zones to include.
     */
    networkIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Policy ID of the Rule
     */
    policyId?: pulumi.Input<string>;
    /**
     * Rule priority. This attribute can be set to a valid priority. To avoid an endless diff situation an error is thrown if
     * an invalid property is provided. The Okta API defaults to the last (lowest) if not provided.
     */
    priority?: pulumi.Input<number>;
    /**
     * Policy Rule Status: `ACTIVE` or `INACTIVE`. Default: `ACTIVE`
     */
    status?: pulumi.Input<string>;
    /**
     * Set of User IDs to Exclude
     */
    usersExcludeds?: pulumi.Input<pulumi.Input<string>[]>;
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Get a policy from Okta.
 */
export function getPolicy(args: GetPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:policy/getPolicy:getPolicy", {
        "name": args.name,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getPolicy.
 */
export interface GetPolicyArgs {
    /**
     * Name of the policy
     */
    name: string;
    /**
     * Policy type, see https://developer.okta.com/docs/reference/api/policy/#policy-object
     */
    type: string;
}

/**
 * A collection of values returned by getPolicy.
 */
export interface GetPolicyResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of the policy
     */
    readonly name: string;
    /**
     * Status of the policy
     */
    readonly status: string;
    /**
     * Policy type, see https://developer.okta.com/docs/reference/api/policy/#policy-object
     */
    readonly type: string;
}
/**
 * Get a policy from Okta.
 */
export function getPolicyOutput(args: GetPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyResult> {
    return pulumi.output(args).apply((a: any) => getPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getPolicy.
 */
export interface GetPolicyOutputArgs {
    /**
     * Name of the policy
     */
    name: pulumi.Input<string>;
    /**
     * Policy type, see https://developer.okta.com/docs/reference/api/policy/#policy-object
     */
    type: pulumi.Input<string>;
}

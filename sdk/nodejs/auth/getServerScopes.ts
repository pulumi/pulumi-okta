// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to retrieve a list of authorization server scopes from Okta.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const test = pulumi.output(okta.auth.getServerScopes({
 *     authServerId: "default",
 * }, { async: true }));
 * ```
 */
export function getServerScopes(args: GetServerScopesArgs, opts?: pulumi.InvokeOptions): Promise<GetServerScopesResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("okta:auth/getServerScopes:getServerScopes", {
        "authServerId": args.authServerId,
    }, opts);
}

/**
 * A collection of arguments for invoking getServerScopes.
 */
export interface GetServerScopesArgs {
    /**
     * Auth server ID.
     */
    readonly authServerId: string;
}

/**
 * A collection of values returned by getServerScopes.
 */
export interface GetServerScopesResult {
    readonly authServerId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * collection of authorization server scopes retrieved from Okta with the following properties.
     */
    readonly scopes: outputs.auth.GetServerScopesScope[];
}

// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Get an auth server from Okta.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = okta.auth.getServer({
 *     name: "Example Auth",
 * });
 * ```
 */
export function getServer(args: GetServerArgs, opts?: pulumi.InvokeOptions): Promise<GetServerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:auth/getServer:getServer", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getServer.
 */
export interface GetServerArgs {
    /**
     * The name of the auth server to retrieve.
     */
    name: string;
}

/**
 * A collection of values returned by getServer.
 */
export interface GetServerResult {
    /**
     * Description of Authorization server.
     */
    readonly audiences: string[];
    /**
     * Last time credentials were rotated.
     */
    readonly credentialsLastRotated: string;
    /**
     * Next time credentials will be rotated
     */
    readonly credentialsNextRotation: string;
    /**
     * Mode of credential rotation, auto or manual.
     */
    readonly credentialsRotationMode: string;
    /**
     * Description of Authorization server.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The complete URL of the authorization server. This becomes the `iss` claim in an access token.
     */
    readonly issuer: string;
    /**
     * Can be set to `CUSTOM_URL` or `ORG_URL`
     */
    readonly issuerMode: string;
    /**
     * Auth server key id.
     */
    readonly kid: string;
    /**
     * The name of the auth server to retrieve.
     */
    readonly name: string;
    /**
     * The activation status of the authorization server.
     */
    readonly status: string;
}
/**
 * Get an auth server from Okta.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = okta.auth.getServer({
 *     name: "Example Auth",
 * });
 * ```
 */
export function getServerOutput(args: GetServerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetServerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("okta:auth/getServer:getServer", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getServer.
 */
export interface GetServerOutputArgs {
    /**
     * The name of the auth server to retrieve.
     */
    name: pulumi.Input<string>;
}

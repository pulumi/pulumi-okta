// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example1 = new okta.idp.SamlKey("example_1", {x5cs: [example.certificate]});
 * const example2 = new okta.idp.SamlKey("example_2", {x5cs: [`MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5p
 * YTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMM
 * B2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCB
 * jzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9r
 * dGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29t
 * MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTf
 * n6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4
 * wWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8s
 * DQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/
 * DwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/I
 * YR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93s
 * Dt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo
 * 1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9`]});
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import okta:idp/samlKey:SamlKey example &#60;key id&#62;
 * ```
 */
export class SamlKey extends pulumi.CustomResource {
    /**
     * Get an existing SamlKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SamlKeyState, opts?: pulumi.CustomResourceOptions): SamlKey {
        return new SamlKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:idp/samlKey:SamlKey';

    /**
     * Returns true if the given object is an instance of SamlKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SamlKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SamlKey.__pulumiType;
    }

    /**
     * Date created.
     */
    public /*out*/ readonly created!: pulumi.Output<string>;
    /**
     * Date the cert expires.
     */
    public /*out*/ readonly expiresAt!: pulumi.Output<string>;
    /**
     * Key ID.
     */
    public /*out*/ readonly kid!: pulumi.Output<string>;
    /**
     * Identifies the cryptographic algorithm family used with the key.
     */
    public /*out*/ readonly kty!: pulumi.Output<string>;
    /**
     * Intended use of the public key.
     */
    public /*out*/ readonly use!: pulumi.Output<string>;
    /**
     * base64-encoded X.509 certificate chain with DER encoding
     */
    public readonly x5cs!: pulumi.Output<string[]>;
    /**
     * base64url-encoded SHA-256 thumbprint of the DER encoding of an X.509 certificate.
     */
    public /*out*/ readonly x5tS256!: pulumi.Output<string>;

    /**
     * Create a SamlKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SamlKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SamlKeyArgs | SamlKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SamlKeyState | undefined;
            resourceInputs["created"] = state ? state.created : undefined;
            resourceInputs["expiresAt"] = state ? state.expiresAt : undefined;
            resourceInputs["kid"] = state ? state.kid : undefined;
            resourceInputs["kty"] = state ? state.kty : undefined;
            resourceInputs["use"] = state ? state.use : undefined;
            resourceInputs["x5cs"] = state ? state.x5cs : undefined;
            resourceInputs["x5tS256"] = state ? state.x5tS256 : undefined;
        } else {
            const args = argsOrState as SamlKeyArgs | undefined;
            if ((!args || args.x5cs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'x5cs'");
            }
            resourceInputs["x5cs"] = args ? args.x5cs : undefined;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["expiresAt"] = undefined /*out*/;
            resourceInputs["kid"] = undefined /*out*/;
            resourceInputs["kty"] = undefined /*out*/;
            resourceInputs["use"] = undefined /*out*/;
            resourceInputs["x5tS256"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SamlKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SamlKey resources.
 */
export interface SamlKeyState {
    /**
     * Date created.
     */
    created?: pulumi.Input<string>;
    /**
     * Date the cert expires.
     */
    expiresAt?: pulumi.Input<string>;
    /**
     * Key ID.
     */
    kid?: pulumi.Input<string>;
    /**
     * Identifies the cryptographic algorithm family used with the key.
     */
    kty?: pulumi.Input<string>;
    /**
     * Intended use of the public key.
     */
    use?: pulumi.Input<string>;
    /**
     * base64-encoded X.509 certificate chain with DER encoding
     */
    x5cs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * base64url-encoded SHA-256 thumbprint of the DER encoding of an X.509 certificate.
     */
    x5tS256?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SamlKey resource.
 */
export interface SamlKeyArgs {
    /**
     * base64-encoded X.509 certificate chain with DER encoding
     */
    x5cs: pulumi.Input<pulumi.Input<string>[]>;
}

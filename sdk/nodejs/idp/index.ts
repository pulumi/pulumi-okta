// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetMetadataSamlArgs, GetMetadataSamlResult, GetMetadataSamlOutputArgs } from "./getMetadataSaml";
export const getMetadataSaml: typeof import("./getMetadataSaml").getMetadataSaml = null as any;
export const getMetadataSamlOutput: typeof import("./getMetadataSaml").getMetadataSamlOutput = null as any;
utilities.lazyLoad(exports, ["getMetadataSaml","getMetadataSamlOutput"], () => require("./getMetadataSaml"));

export { GetOidcArgs, GetOidcResult, GetOidcOutputArgs } from "./getOidc";
export const getOidc: typeof import("./getOidc").getOidc = null as any;
export const getOidcOutput: typeof import("./getOidc").getOidcOutput = null as any;
utilities.lazyLoad(exports, ["getOidc","getOidcOutput"], () => require("./getOidc"));

export { GetSamlArgs, GetSamlResult, GetSamlOutputArgs } from "./getSaml";
export const getSaml: typeof import("./getSaml").getSaml = null as any;
export const getSamlOutput: typeof import("./getSaml").getSamlOutput = null as any;
utilities.lazyLoad(exports, ["getSaml","getSamlOutput"], () => require("./getSaml"));

export { GetSocialArgs, GetSocialResult, GetSocialOutputArgs } from "./getSocial";
export const getSocial: typeof import("./getSocial").getSocial = null as any;
export const getSocialOutput: typeof import("./getSocial").getSocialOutput = null as any;
utilities.lazyLoad(exports, ["getSocial","getSocialOutput"], () => require("./getSocial"));

export { OidcArgs, OidcState } from "./oidc";
export type Oidc = import("./oidc").Oidc;
export const Oidc: typeof import("./oidc").Oidc = null as any;
utilities.lazyLoad(exports, ["Oidc"], () => require("./oidc"));

export { SamlArgs, SamlState } from "./saml";
export type Saml = import("./saml").Saml;
export const Saml: typeof import("./saml").Saml = null as any;
utilities.lazyLoad(exports, ["Saml"], () => require("./saml"));

export { SamlKeyArgs, SamlKeyState } from "./samlKey";
export type SamlKey = import("./samlKey").SamlKey;
export const SamlKey: typeof import("./samlKey").SamlKey = null as any;
utilities.lazyLoad(exports, ["SamlKey"], () => require("./samlKey"));

export { SocialArgs, SocialState } from "./social";
export type Social = import("./social").Social;
export const Social: typeof import("./social").Social = null as any;
utilities.lazyLoad(exports, ["Social"], () => require("./social"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "okta:idp/oidc:Oidc":
                return new Oidc(name, <any>undefined, { urn })
            case "okta:idp/saml:Saml":
                return new Saml(name, <any>undefined, { urn })
            case "okta:idp/samlKey:SamlKey":
                return new SamlKey(name, <any>undefined, { urn })
            case "okta:idp/social:Social":
                return new Social(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("okta", "idp/oidc", _module)
pulumi.runtime.registerResourceModule("okta", "idp/saml", _module)
pulumi.runtime.registerResourceModule("okta", "idp/samlKey", _module)
pulumi.runtime.registerResourceModule("okta", "idp/social", _module)

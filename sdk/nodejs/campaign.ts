// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages Campaign. This resource allows you to create and configure an Okta [Campaign](https://developer.okta.com/docs/api/iga/openapi/governance.api/tag/Campaigns/).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = new okta.Campaign("example", {name: "example"});
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import okta:index/campaign:Campaign example <campaign_id>
 * ```
 */
export class Campaign extends pulumi.CustomResource {
    /**
     * Get an existing Campaign resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CampaignState, opts?: pulumi.CustomResourceOptions): Campaign {
        return new Campaign(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:index/campaign:Campaign';

    /**
     * Returns true if the given object is an instance of Campaign.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Campaign {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Campaign.__pulumiType;
    }

    /**
     * Indicates the minimum required SKU to manage the campaign. Enum: "BASIC", "PREMIUM".
     */
    declare public readonly campaignTier: pulumi.Output<string | undefined>;
    /**
     * Identifies if it is a resource campaign or a user campaign. By default, it is "RESOURCE". Enum: "RESOURCE", "USER".
     */
    declare public readonly campaignType: pulumi.Output<string>;
    /**
     * Human readable description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Name of the campaign
     */
    declare public readonly name: pulumi.Output<string>;
    declare public readonly notificationSettings: pulumi.Output<outputs.CampaignNotificationSettings | undefined>;
    /**
     * User scope specific settings
     */
    declare public readonly principalScopeSettings: pulumi.Output<outputs.CampaignPrincipalScopeSettings | undefined>;
    /**
     * Specify the action to be taken after a reviewer makes a decision to APPROVE or REVOKE the access, or if the campaign was CLOSED and there was no response from the reviewer.
     */
    declare public readonly remediationSettings: pulumi.Output<outputs.CampaignRemediationSettings | undefined>;
    /**
     * Resource specific properties.
     */
    declare public readonly resourceSettings: pulumi.Output<outputs.CampaignResourceSettings | undefined>;
    /**
     * Identifies the kind of reviewer for Access Certification.
     */
    declare public readonly reviewerSettings: pulumi.Output<outputs.CampaignReviewerSettings | undefined>;
    /**
     * Scheduler specific settings.
     */
    declare public readonly scheduleSettings: pulumi.Output<outputs.CampaignScheduleSettings | undefined>;
    /**
     * If true, skip remediation when ending the campaign (only applicable if remediationSetting.noResponse=DENY).
     */
    declare public readonly skipRemediation: pulumi.Output<boolean | undefined>;

    /**
     * Create a Campaign resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CampaignArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CampaignArgs | CampaignState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CampaignState | undefined;
            resourceInputs["campaignTier"] = state?.campaignTier;
            resourceInputs["campaignType"] = state?.campaignType;
            resourceInputs["description"] = state?.description;
            resourceInputs["name"] = state?.name;
            resourceInputs["notificationSettings"] = state?.notificationSettings;
            resourceInputs["principalScopeSettings"] = state?.principalScopeSettings;
            resourceInputs["remediationSettings"] = state?.remediationSettings;
            resourceInputs["resourceSettings"] = state?.resourceSettings;
            resourceInputs["reviewerSettings"] = state?.reviewerSettings;
            resourceInputs["scheduleSettings"] = state?.scheduleSettings;
            resourceInputs["skipRemediation"] = state?.skipRemediation;
        } else {
            const args = argsOrState as CampaignArgs | undefined;
            resourceInputs["campaignTier"] = args?.campaignTier;
            resourceInputs["campaignType"] = args?.campaignType;
            resourceInputs["description"] = args?.description;
            resourceInputs["name"] = args?.name;
            resourceInputs["notificationSettings"] = args?.notificationSettings;
            resourceInputs["principalScopeSettings"] = args?.principalScopeSettings;
            resourceInputs["remediationSettings"] = args?.remediationSettings;
            resourceInputs["resourceSettings"] = args?.resourceSettings;
            resourceInputs["reviewerSettings"] = args?.reviewerSettings;
            resourceInputs["scheduleSettings"] = args?.scheduleSettings;
            resourceInputs["skipRemediation"] = args?.skipRemediation;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Campaign.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Campaign resources.
 */
export interface CampaignState {
    /**
     * Indicates the minimum required SKU to manage the campaign. Enum: "BASIC", "PREMIUM".
     */
    campaignTier?: pulumi.Input<string>;
    /**
     * Identifies if it is a resource campaign or a user campaign. By default, it is "RESOURCE". Enum: "RESOURCE", "USER".
     */
    campaignType?: pulumi.Input<string>;
    /**
     * Human readable description.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the campaign
     */
    name?: pulumi.Input<string>;
    notificationSettings?: pulumi.Input<inputs.CampaignNotificationSettings>;
    /**
     * User scope specific settings
     */
    principalScopeSettings?: pulumi.Input<inputs.CampaignPrincipalScopeSettings>;
    /**
     * Specify the action to be taken after a reviewer makes a decision to APPROVE or REVOKE the access, or if the campaign was CLOSED and there was no response from the reviewer.
     */
    remediationSettings?: pulumi.Input<inputs.CampaignRemediationSettings>;
    /**
     * Resource specific properties.
     */
    resourceSettings?: pulumi.Input<inputs.CampaignResourceSettings>;
    /**
     * Identifies the kind of reviewer for Access Certification.
     */
    reviewerSettings?: pulumi.Input<inputs.CampaignReviewerSettings>;
    /**
     * Scheduler specific settings.
     */
    scheduleSettings?: pulumi.Input<inputs.CampaignScheduleSettings>;
    /**
     * If true, skip remediation when ending the campaign (only applicable if remediationSetting.noResponse=DENY).
     */
    skipRemediation?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Campaign resource.
 */
export interface CampaignArgs {
    /**
     * Indicates the minimum required SKU to manage the campaign. Enum: "BASIC", "PREMIUM".
     */
    campaignTier?: pulumi.Input<string>;
    /**
     * Identifies if it is a resource campaign or a user campaign. By default, it is "RESOURCE". Enum: "RESOURCE", "USER".
     */
    campaignType?: pulumi.Input<string>;
    /**
     * Human readable description.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the campaign
     */
    name?: pulumi.Input<string>;
    notificationSettings?: pulumi.Input<inputs.CampaignNotificationSettings>;
    /**
     * User scope specific settings
     */
    principalScopeSettings?: pulumi.Input<inputs.CampaignPrincipalScopeSettings>;
    /**
     * Specify the action to be taken after a reviewer makes a decision to APPROVE or REVOKE the access, or if the campaign was CLOSED and there was no response from the reviewer.
     */
    remediationSettings?: pulumi.Input<inputs.CampaignRemediationSettings>;
    /**
     * Resource specific properties.
     */
    resourceSettings?: pulumi.Input<inputs.CampaignResourceSettings>;
    /**
     * Identifies the kind of reviewer for Access Certification.
     */
    reviewerSettings?: pulumi.Input<inputs.CampaignReviewerSettings>;
    /**
     * Scheduler specific settings.
     */
    scheduleSettings?: pulumi.Input<inputs.CampaignScheduleSettings>;
    /**
     * If true, skip remediation when ending the campaign (only applicable if remediationSetting.noResponse=DENY).
     */
    skipRemediation?: pulumi.Input<boolean>;
}

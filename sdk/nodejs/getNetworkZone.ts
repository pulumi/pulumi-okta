// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve a network zone from Okta.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = pulumi.output(okta.getNetworkZone({
 *     name: "Block Antarctica",
 * }));
 * ```
 */
export function getNetworkZone(args?: GetNetworkZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkZoneResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("okta:index/getNetworkZone:getNetworkZone", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkZone.
 */
export interface GetNetworkZoneArgs {
    /**
     * ID of the network zone to retrieve, conflicts with `name`.
     */
    id?: string;
    /**
     * Name of the network zone to retrieve, conflicts with `id`.
     */
    name?: string;
}

/**
 * A collection of values returned by getNetworkZone.
 */
export interface GetNetworkZoneResult {
    /**
     * Array of Autonomous System Numbers.
     */
    readonly asns: string[];
    /**
     * Array of locations.
     */
    readonly dynamicLocations: string[];
    /**
     * Type of proxy being controlled by this dynamic network zone.
     */
    readonly dynamicProxyType: string;
    /**
     * Array of values in CIDR/range form.
     */
    readonly gateways: string[];
    /**
     * ID of the network zone.
     */
    readonly id?: string;
    /**
     * Name of the network zone.
     */
    readonly name?: string;
    /**
     * Array of values in CIDR/range form.
     */
    readonly proxies: string[];
    /**
     * Type of the Network Zone.
     */
    readonly type: string;
    /**
     * Usage of the Network Zone.
     */
    readonly usage: string;
}

export function getNetworkZoneOutput(args?: GetNetworkZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkZoneResult> {
    return pulumi.output(args).apply(a => getNetworkZone(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkZone.
 */
export interface GetNetworkZoneOutputArgs {
    /**
     * ID of the network zone to retrieve, conflicts with `name`.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the network zone to retrieve, conflicts with `id`.
     */
    name?: pulumi.Input<string>;
}

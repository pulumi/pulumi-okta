// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages principal rate limits.
 * Principal Rate Limits provides operations to manage Principal Rate Limits for your organization.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = okta.getRateLimitWarningThresholdPercentage({});
 * ```
 */
export function getRateLimitWarningThresholdPercentage(opts?: pulumi.InvokeOptions): Promise<GetRateLimitWarningThresholdPercentageResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getRateLimitWarningThresholdPercentage:getRateLimitWarningThresholdPercentage", {
    }, opts);
}

/**
 * A collection of values returned by getRateLimitWarningThresholdPercentage.
 */
export interface GetRateLimitWarningThresholdPercentageResult {
    /**
     * The unique identifier of the warning threshold percentage entity.
     */
    readonly id: string;
    /**
     * The threshold value (percentage) of a rate limit that, when exceeded, triggers a warning notification. By default, this value is 90 for Workforce orgs and 60 for CIAM orgs.
     */
    readonly warningThreshold: number;
}
/**
 * Manages principal rate limits.
 * Principal Rate Limits provides operations to manage Principal Rate Limits for your organization.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = okta.getRateLimitWarningThresholdPercentage({});
 * ```
 */
export function getRateLimitWarningThresholdPercentageOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRateLimitWarningThresholdPercentageResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("okta:index/getRateLimitWarningThresholdPercentage:getRateLimitWarningThresholdPercentage", {
    }, opts);
}

// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRealmAssignment(args?: GetRealmAssignmentArgs, opts?: pulumi.InvokeOptions): Promise<GetRealmAssignmentResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getRealmAssignment:getRealmAssignment", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getRealmAssignment.
 */
export interface GetRealmAssignmentArgs {
    name?: string;
}

/**
 * A collection of values returned by getRealmAssignment.
 */
export interface GetRealmAssignmentResult {
    readonly conditionExpression: string;
    readonly id: string;
    readonly isDefault: boolean;
    readonly name?: string;
    readonly priority: number;
    readonly profileSourceId: string;
    readonly realmId: string;
    readonly status: string;
}
export function getRealmAssignmentOutput(args?: GetRealmAssignmentOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRealmAssignmentResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("okta:index/getRealmAssignment:getRealmAssignment", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getRealmAssignment.
 */
export interface GetRealmAssignmentOutputArgs {
    name?: pulumi.Input<string>;
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Creates a Trusted Origin.
 *
 * This resource allows you to create and configure an Trusted Origin.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = new okta.trustedorigin.Origin("example", {
 *     origin: "https://example.com",
 *     scopes: ["CORS"],
 * });
 * ```
 */
export class Origin extends pulumi.CustomResource {
    /**
     * Get an existing Origin resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OriginState, opts?: pulumi.CustomResourceOptions): Origin {
        return new Origin(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:trustedorigin/origin:Origin';

    /**
     * Returns true if the given object is an instance of Origin.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Origin {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Origin.__pulumiType;
    }

    /**
     * Whether the Trusted Origin is active or not - can only be issued post-creation.
     */
    public readonly active!: pulumi.Output<boolean | undefined>;
    /**
     * Name of the Trusted Origin Resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The origin to trust.
     */
    public readonly origin!: pulumi.Output<string>;
    /**
     * Scopes of the Trusted Origin - can be `"CORS"` and/or `"REDIRECT"`.
     */
    public readonly scopes!: pulumi.Output<string[]>;

    /**
     * Create a Origin resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OriginArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OriginArgs | OriginState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as OriginState | undefined;
            inputs["active"] = state ? state.active : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["origin"] = state ? state.origin : undefined;
            inputs["scopes"] = state ? state.scopes : undefined;
        } else {
            const args = argsOrState as OriginArgs | undefined;
            if (!args || args.origin === undefined) {
                throw new Error("Missing required property 'origin'");
            }
            if (!args || args.scopes === undefined) {
                throw new Error("Missing required property 'scopes'");
            }
            inputs["active"] = args ? args.active : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["origin"] = args ? args.origin : undefined;
            inputs["scopes"] = args ? args.scopes : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Origin.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Origin resources.
 */
export interface OriginState {
    /**
     * Whether the Trusted Origin is active or not - can only be issued post-creation.
     */
    readonly active?: pulumi.Input<boolean>;
    /**
     * Name of the Trusted Origin Resource.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The origin to trust.
     */
    readonly origin?: pulumi.Input<string>;
    /**
     * Scopes of the Trusted Origin - can be `"CORS"` and/or `"REDIRECT"`.
     */
    readonly scopes?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Origin resource.
 */
export interface OriginArgs {
    /**
     * Whether the Trusted Origin is active or not - can only be issued post-creation.
     */
    readonly active?: pulumi.Input<boolean>;
    /**
     * Name of the Trusted Origin Resource.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The origin to trust.
     */
    readonly origin: pulumi.Input<string>;
    /**
     * Scopes of the Trusted Origin - can be `"CORS"` and/or `"REDIRECT"`.
     */
    readonly scopes: pulumi.Input<pulumi.Input<string>[]>;
}

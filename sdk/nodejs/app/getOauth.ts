// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to retrieve an OIDC application from Okta.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const test = okta.app.getOauth({
 *     label: "Example App",
 * });
 * ```
 */
export function getOauth(args?: GetOauthArgs, opts?: pulumi.InvokeOptions): Promise<GetOauthResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:app/getOauth:getOauth", {
        "activeOnly": args.activeOnly,
        "id": args.id,
        "label": args.label,
        "labelPrefix": args.labelPrefix,
        "skipGroups": args.skipGroups,
        "skipUsers": args.skipUsers,
    }, opts);
}

/**
 * A collection of arguments for invoking getOauth.
 */
export interface GetOauthArgs {
    /**
     * tells the provider to query for only `ACTIVE` applications.
     */
    activeOnly?: boolean;
    /**
     * `id` of application to retrieve, conflicts with `label` and `labelPrefix`.
     */
    id?: string;
    /**
     * The label of the app to retrieve, conflicts with
     * `labelPrefix` and `id`. Label uses the `?q=<label>` query parameter exposed by
     * Okta's List Apps API. The API will search both `name` and `label` using that
     * query. Therefore similarily named and labeled apps may be returned in the query
     * and have the unitended result of associating the wrong app with this data
     * source. See:
     * https://developer.okta.com/docs/reference/api/apps/#list-applications
     */
    label?: string;
    /**
     * Label prefix of the app to retrieve, conflicts with `label` and `id`. This will tell the
     * provider to do a `starts with` query as opposed to an `equals` query.
     */
    labelPrefix?: string;
    /**
     * @deprecated Because groups has been removed, this attribute is a no op and will be removed
     */
    skipGroups?: boolean;
    /**
     * @deprecated Because users has been removed, this attribute is a no op and will be removed
     */
    skipUsers?: boolean;
}

/**
 * A collection of values returned by getOauth.
 */
export interface GetOauthResult {
    readonly activeOnly?: boolean;
    /**
     * Display auto submit toolbar.
     */
    readonly autoSubmitToolbar: boolean;
    /**
     * OAuth client ID. If set during creation, app is created with this id.
     */
    readonly clientId: string;
    /**
     * The latest active client secret of the application. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object
     */
    readonly clientSecret: string;
    /**
     * URI to a web page providing information about the client.
     */
    readonly clientUri: string;
    /**
     * List of OAuth 2.0 grant types.
     */
    readonly grantTypes: string[];
    /**
     * Do not display application icon on mobile app.
     */
    readonly hideIos: boolean;
    /**
     * Do not display application icon to users.
     */
    readonly hideWeb: boolean;
    /**
     * ID of application.
     */
    readonly id?: string;
    /**
     * Label of application.
     */
    readonly label?: string;
    readonly labelPrefix?: string;
    /**
     * generic JSON containing discoverable resources related to the app
     */
    readonly links: string;
    /**
     * The type of Idp-Initiated login that the client supports, if any.
     */
    readonly loginMode: string;
    /**
     * List of scopes to use for the request.
     */
    readonly loginScopes: string[];
    /**
     * URI that initiates login.
     */
    readonly loginUri: string;
    /**
     * URI that references a logo for the client.
     */
    readonly logoUri: string;
    /**
     * Name of application.
     */
    readonly name: string;
    /**
     * URI to web page providing client policy document.
     */
    readonly policyUri: string;
    /**
     * List of URIs for redirection after logout.
     */
    readonly postLogoutRedirectUris: string[];
    /**
     * List of URIs for use in the redirect-based flow.
     */
    readonly redirectUris: string[];
    /**
     * List of OAuth 2.0 response type strings.
     */
    readonly responseTypes: string[];
    /**
     * @deprecated Because groups has been removed, this attribute is a no op and will be removed
     */
    readonly skipGroups?: boolean;
    /**
     * @deprecated Because users has been removed, this attribute is a no op and will be removed
     */
    readonly skipUsers?: boolean;
    /**
     * Status of application.
     */
    readonly status: string;
    /**
     * The type of OAuth application.
     */
    readonly type: string;
    readonly wildcardRedirect: string;
}
/**
 * Use this data source to retrieve an OIDC application from Okta.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const test = okta.app.getOauth({
 *     label: "Example App",
 * });
 * ```
 */
export function getOauthOutput(args?: GetOauthOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOauthResult> {
    return pulumi.output(args).apply((a: any) => getOauth(a, opts))
}

/**
 * A collection of arguments for invoking getOauth.
 */
export interface GetOauthOutputArgs {
    /**
     * tells the provider to query for only `ACTIVE` applications.
     */
    activeOnly?: pulumi.Input<boolean>;
    /**
     * `id` of application to retrieve, conflicts with `label` and `labelPrefix`.
     */
    id?: pulumi.Input<string>;
    /**
     * The label of the app to retrieve, conflicts with
     * `labelPrefix` and `id`. Label uses the `?q=<label>` query parameter exposed by
     * Okta's List Apps API. The API will search both `name` and `label` using that
     * query. Therefore similarily named and labeled apps may be returned in the query
     * and have the unitended result of associating the wrong app with this data
     * source. See:
     * https://developer.okta.com/docs/reference/api/apps/#list-applications
     */
    label?: pulumi.Input<string>;
    /**
     * Label prefix of the app to retrieve, conflicts with `label` and `id`. This will tell the
     * provider to do a `starts with` query as opposed to an `equals` query.
     */
    labelPrefix?: pulumi.Input<string>;
    /**
     * @deprecated Because groups has been removed, this attribute is a no op and will be removed
     */
    skipGroups?: pulumi.Input<boolean>;
    /**
     * @deprecated Because users has been removed, this attribute is a no op and will be removed
     */
    skipUsers?: pulumi.Input<boolean>;
}

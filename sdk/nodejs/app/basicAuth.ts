// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Creates a Bsaic Auth Application.
 *
 * This resource allows you to create and configure a Basic Auth Application.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = new okta.app.BasicAuth("example", {
 *     authUrl: "https://example.com/auth.html",
 *     label: "Example",
 *     url: "https://example.com/login.html",
 * });
 * ```
 */
export class BasicAuth extends pulumi.CustomResource {
    /**
     * Get an existing BasicAuth resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BasicAuthState, opts?: pulumi.CustomResourceOptions): BasicAuth {
        return new BasicAuth(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:app/basicAuth:BasicAuth';

    /**
     * Returns true if the given object is an instance of BasicAuth.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BasicAuth {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BasicAuth.__pulumiType;
    }

    /**
     * The URL of the authenticating site for this app.
     */
    public readonly authUrl!: pulumi.Output<string | undefined>;
    /**
     * Display auto submit toolbar
     */
    public readonly autoSubmitToolbar!: pulumi.Output<boolean | undefined>;
    /**
     * Groups associated with the application
     */
    public readonly groups!: pulumi.Output<string[] | undefined>;
    /**
     * Do not display application icon on mobile app
     */
    public readonly hideIos!: pulumi.Output<boolean | undefined>;
    /**
     * Do not display application icon to users
     */
    public readonly hideWeb!: pulumi.Output<boolean | undefined>;
    /**
     * The Application's display name.
     */
    public readonly label!: pulumi.Output<string>;
    /**
     * name of app.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Sign on mode of application.
     */
    public /*out*/ readonly signOnMode!: pulumi.Output<string>;
    /**
     * Status of application.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    /**
     * The URL of the sign-in page for this app.
     */
    public readonly url!: pulumi.Output<string | undefined>;
    /**
     * Users associated with the application
     */
    public readonly users!: pulumi.Output<outputs.app.BasicAuthUser[] | undefined>;

    /**
     * Create a BasicAuth resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BasicAuthArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BasicAuthArgs | BasicAuthState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as BasicAuthState | undefined;
            inputs["authUrl"] = state ? state.authUrl : undefined;
            inputs["autoSubmitToolbar"] = state ? state.autoSubmitToolbar : undefined;
            inputs["groups"] = state ? state.groups : undefined;
            inputs["hideIos"] = state ? state.hideIos : undefined;
            inputs["hideWeb"] = state ? state.hideWeb : undefined;
            inputs["label"] = state ? state.label : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["signOnMode"] = state ? state.signOnMode : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["url"] = state ? state.url : undefined;
            inputs["users"] = state ? state.users : undefined;
        } else {
            const args = argsOrState as BasicAuthArgs | undefined;
            if (!args || args.label === undefined) {
                throw new Error("Missing required property 'label'");
            }
            inputs["authUrl"] = args ? args.authUrl : undefined;
            inputs["autoSubmitToolbar"] = args ? args.autoSubmitToolbar : undefined;
            inputs["groups"] = args ? args.groups : undefined;
            inputs["hideIos"] = args ? args.hideIos : undefined;
            inputs["hideWeb"] = args ? args.hideWeb : undefined;
            inputs["label"] = args ? args.label : undefined;
            inputs["status"] = args ? args.status : undefined;
            inputs["url"] = args ? args.url : undefined;
            inputs["users"] = args ? args.users : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["signOnMode"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(BasicAuth.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BasicAuth resources.
 */
export interface BasicAuthState {
    /**
     * The URL of the authenticating site for this app.
     */
    readonly authUrl?: pulumi.Input<string>;
    /**
     * Display auto submit toolbar
     */
    readonly autoSubmitToolbar?: pulumi.Input<boolean>;
    /**
     * Groups associated with the application
     */
    readonly groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Do not display application icon on mobile app
     */
    readonly hideIos?: pulumi.Input<boolean>;
    /**
     * Do not display application icon to users
     */
    readonly hideWeb?: pulumi.Input<boolean>;
    /**
     * The Application's display name.
     */
    readonly label?: pulumi.Input<string>;
    /**
     * name of app.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Sign on mode of application.
     */
    readonly signOnMode?: pulumi.Input<string>;
    /**
     * Status of application.
     */
    readonly status?: pulumi.Input<string>;
    /**
     * The URL of the sign-in page for this app.
     */
    readonly url?: pulumi.Input<string>;
    /**
     * Users associated with the application
     */
    readonly users?: pulumi.Input<pulumi.Input<inputs.app.BasicAuthUser>[]>;
}

/**
 * The set of arguments for constructing a BasicAuth resource.
 */
export interface BasicAuthArgs {
    /**
     * The URL of the authenticating site for this app.
     */
    readonly authUrl?: pulumi.Input<string>;
    /**
     * Display auto submit toolbar
     */
    readonly autoSubmitToolbar?: pulumi.Input<boolean>;
    /**
     * Groups associated with the application
     */
    readonly groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Do not display application icon on mobile app
     */
    readonly hideIos?: pulumi.Input<boolean>;
    /**
     * Do not display application icon to users
     */
    readonly hideWeb?: pulumi.Input<boolean>;
    /**
     * The Application's display name.
     */
    readonly label: pulumi.Input<string>;
    /**
     * Status of application.
     */
    readonly status?: pulumi.Input<string>;
    /**
     * The URL of the sign-in page for this app.
     */
    readonly url?: pulumi.Input<string>;
    /**
     * Users associated with the application
     */
    readonly users?: pulumi.Input<pulumi.Input<inputs.app.BasicAuthUser>[]>;
}

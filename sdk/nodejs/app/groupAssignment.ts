// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = new okta.app.GroupAssignment("example", {
 *     appId: "<app id>",
 *     groupId: "<group id>",
 *     profile: `{
 *   "<app_profile_field>": "<value>"
 * }
 * `,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import okta:app/groupAssignment:GroupAssignment example <app_id>/<group_id>
 * ```
 */
export class GroupAssignment extends pulumi.CustomResource {
    /**
     * Get an existing GroupAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GroupAssignmentState, opts?: pulumi.CustomResourceOptions): GroupAssignment {
        return new GroupAssignment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:app/groupAssignment:GroupAssignment';

    /**
     * Returns true if the given object is an instance of GroupAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GroupAssignment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GroupAssignment.__pulumiType;
    }

    /**
     * App to associate group with
     */
    public readonly appId!: pulumi.Output<string>;
    /**
     * Group associated with the application
     */
    public readonly groupId!: pulumi.Output<string>;
    /**
     * Priority of group assignment.
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    /**
     * JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)
     */
    public readonly profile!: pulumi.Output<string | undefined>;
    /**
     * Retain the group assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.
     */
    public readonly retainAssignment!: pulumi.Output<boolean | undefined>;

    /**
     * Create a GroupAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GroupAssignmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GroupAssignmentArgs | GroupAssignmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GroupAssignmentState | undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["profile"] = state ? state.profile : undefined;
            resourceInputs["retainAssignment"] = state ? state.retainAssignment : undefined;
        } else {
            const args = argsOrState as GroupAssignmentArgs | undefined;
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["profile"] = args ? args.profile : undefined;
            resourceInputs["retainAssignment"] = args ? args.retainAssignment : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GroupAssignment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GroupAssignment resources.
 */
export interface GroupAssignmentState {
    /**
     * App to associate group with
     */
    appId?: pulumi.Input<string>;
    /**
     * Group associated with the application
     */
    groupId?: pulumi.Input<string>;
    /**
     * Priority of group assignment.
     */
    priority?: pulumi.Input<number>;
    /**
     * JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)
     */
    profile?: pulumi.Input<string>;
    /**
     * Retain the group assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.
     */
    retainAssignment?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a GroupAssignment resource.
 */
export interface GroupAssignmentArgs {
    /**
     * App to associate group with
     */
    appId: pulumi.Input<string>;
    /**
     * Group associated with the application
     */
    groupId: pulumi.Input<string>;
    /**
     * Priority of group assignment.
     */
    priority?: pulumi.Input<number>;
    /**
     * JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)
     */
    profile?: pulumi.Input<string>;
    /**
     * Retain the group assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.
     */
    retainAssignment?: pulumi.Input<boolean>;
}

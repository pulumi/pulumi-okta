// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./autoLogin";
export * from "./basicAuth";
export * from "./bookmark";
export * from "./getApp";
export * from "./getMetadataSaml";
export * from "./getOauth";
export * from "./getSaml";
export * from "./groupAssignment";
export * from "./oauth";
export * from "./oauthRedirectUri";
export * from "./saml";
export * from "./securePasswordStore";
export * from "./swa";
export * from "./threeField";
export * from "./user";
export * from "./userBaseSchema";
export * from "./userSchema";

// Import resources to register:
import { AutoLogin } from "./autoLogin";
import { BasicAuth } from "./basicAuth";
import { Bookmark } from "./bookmark";
import { GroupAssignment } from "./groupAssignment";
import { OAuth } from "./oauth";
import { OAuthRedirectUri } from "./oauthRedirectUri";
import { Saml } from "./saml";
import { SecurePasswordStore } from "./securePasswordStore";
import { Swa } from "./swa";
import { ThreeField } from "./threeField";
import { User } from "./user";
import { UserBaseSchema } from "./userBaseSchema";
import { UserSchema } from "./userSchema";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "okta:app/autoLogin:AutoLogin":
                return new AutoLogin(name, <any>undefined, { urn })
            case "okta:app/basicAuth:BasicAuth":
                return new BasicAuth(name, <any>undefined, { urn })
            case "okta:app/bookmark:Bookmark":
                return new Bookmark(name, <any>undefined, { urn })
            case "okta:app/groupAssignment:GroupAssignment":
                return new GroupAssignment(name, <any>undefined, { urn })
            case "okta:app/oAuth:OAuth":
                return new OAuth(name, <any>undefined, { urn })
            case "okta:app/oAuthRedirectUri:OAuthRedirectUri":
                return new OAuthRedirectUri(name, <any>undefined, { urn })
            case "okta:app/saml:Saml":
                return new Saml(name, <any>undefined, { urn })
            case "okta:app/securePasswordStore:SecurePasswordStore":
                return new SecurePasswordStore(name, <any>undefined, { urn })
            case "okta:app/swa:Swa":
                return new Swa(name, <any>undefined, { urn })
            case "okta:app/threeField:ThreeField":
                return new ThreeField(name, <any>undefined, { urn })
            case "okta:app/user:User":
                return new User(name, <any>undefined, { urn })
            case "okta:app/userBaseSchema:UserBaseSchema":
                return new UserBaseSchema(name, <any>undefined, { urn })
            case "okta:app/userSchema:UserSchema":
                return new UserSchema(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("okta", "app/autoLogin", _module)
pulumi.runtime.registerResourceModule("okta", "app/basicAuth", _module)
pulumi.runtime.registerResourceModule("okta", "app/bookmark", _module)
pulumi.runtime.registerResourceModule("okta", "app/groupAssignment", _module)
pulumi.runtime.registerResourceModule("okta", "app/oAuth", _module)
pulumi.runtime.registerResourceModule("okta", "app/oAuthRedirectUri", _module)
pulumi.runtime.registerResourceModule("okta", "app/saml", _module)
pulumi.runtime.registerResourceModule("okta", "app/securePasswordStore", _module)
pulumi.runtime.registerResourceModule("okta", "app/swa", _module)
pulumi.runtime.registerResourceModule("okta", "app/threeField", _module)
pulumi.runtime.registerResourceModule("okta", "app/user", _module)
pulumi.runtime.registerResourceModule("okta", "app/userBaseSchema", _module)
pulumi.runtime.registerResourceModule("okta", "app/userSchema", _module)

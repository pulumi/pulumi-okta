// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Creates an SWA Application.
 *
 * This resource allows you to create and configure an SWA Application.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = new okta.app.Swa("example", {
 *     buttonField: "btn-login",
 *     label: "example",
 *     passwordField: "txtbox-password",
 *     url: "https://example.com/login.html",
 *     usernameField: "txtbox-username",
 * });
 * ```
 *
 * ## Import
 *
 * Okta SWA App can be imported via the Okta ID.
 *
 * ```sh
 *  $ pulumi import okta:app/swa:Swa example <app id>
 * ```
 *
 *  It's also possible to import app without groups or/and users. In this case ID may look like this
 *
 * ```sh
 *  $ pulumi import okta:app/swa:Swa example <app id>/skip_users
 * ```
 *
 * ```sh
 *  $ pulumi import okta:app/swa:Swa example <app id>/skip_users/skip_groups
 * ```
 *
 * ```sh
 *  $ pulumi import okta:app/swa:Swa example <app id>/skip_groups
 * ```
 */
export class Swa extends pulumi.CustomResource {
    /**
     * Get an existing Swa resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwaState, opts?: pulumi.CustomResourceOptions): Swa {
        return new Swa(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:app/swa:Swa';

    /**
     * Returns true if the given object is an instance of Swa.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Swa {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Swa.__pulumiType;
    }

    /**
     * Custom error page URL.
     */
    public readonly accessibilityErrorRedirectUrl!: pulumi.Output<string | undefined>;
    /**
     * Custom login page for this application.
     */
    public readonly accessibilityLoginRedirectUrl!: pulumi.Output<string | undefined>;
    /**
     * Enable self-service. By default, it is `false`.
     */
    public readonly accessibilitySelfService!: pulumi.Output<boolean | undefined>;
    /**
     * Application notes for admins.
     */
    public readonly adminNote!: pulumi.Output<string | undefined>;
    /**
     * Displays specific appLinks for the app
     */
    public readonly appLinksJson!: pulumi.Output<string | undefined>;
    /**
     * Display auto submit toolbar.
     */
    public readonly autoSubmitToolbar!: pulumi.Output<boolean | undefined>;
    /**
     * Login button field.
     */
    public readonly buttonField!: pulumi.Output<string | undefined>;
    /**
     * Application notes for end users.
     */
    public readonly enduserNote!: pulumi.Output<string | undefined>;
    /**
     * Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.
     * - `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.
     *
     * @deprecated The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
     */
    public readonly groups!: pulumi.Output<string[] | undefined>;
    /**
     * Do not display application icon on mobile app.
     */
    public readonly hideIos!: pulumi.Output<boolean | undefined>;
    /**
     * Do not display application icon to users.
     */
    public readonly hideWeb!: pulumi.Output<boolean | undefined>;
    /**
     * The display name of the Application.
     */
    public readonly label!: pulumi.Output<string>;
    /**
     * Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     */
    public readonly logo!: pulumi.Output<string | undefined>;
    /**
     * Direct link of application logo.
     */
    public /*out*/ readonly logoUrl!: pulumi.Output<string>;
    /**
     * Name assigned to the application by Okta.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Login password field.
     */
    public readonly passwordField!: pulumi.Output<string | undefined>;
    /**
     * name of application from the Okta Integration Network, if not included a custom app will be created.
     */
    public readonly preconfiguredApp!: pulumi.Output<string | undefined>;
    /**
     * Sign-on mode of application.
     */
    public /*out*/ readonly signOnMode!: pulumi.Output<string>;
    /**
     * Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
     */
    public readonly skipGroups!: pulumi.Output<boolean | undefined>;
    /**
     * Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
     */
    public readonly skipUsers!: pulumi.Output<boolean | undefined>;
    /**
     * Status of application. By default, it is `"ACTIVE"`.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    /**
     * Login URL.
     */
    public readonly url!: pulumi.Output<string | undefined>;
    /**
     * A regex that further restricts URL to the specified regex.
     */
    public readonly urlRegex!: pulumi.Output<string | undefined>;
    /**
     * The default username assigned to each user.
     */
    public readonly userNameTemplate!: pulumi.Output<string | undefined>;
    /**
     * Username template suffix
     */
    public readonly userNameTemplateSuffix!: pulumi.Output<string | undefined>;
    /**
     * The Username template type.
     */
    public readonly userNameTemplateType!: pulumi.Output<string | undefined>;
    /**
     * Login username field.
     */
    public readonly usernameField!: pulumi.Output<string | undefined>;
    /**
     * The users assigned to the application. See `okta.app.User` for a more flexible approach.
     * - `DEPRECATED`: Please replace usage with the `okta.app.User` resource.
     *
     * @deprecated The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
     */
    public readonly users!: pulumi.Output<outputs.app.SwaUser[] | undefined>;

    /**
     * Create a Swa resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SwaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwaArgs | SwaState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwaState | undefined;
            inputs["accessibilityErrorRedirectUrl"] = state ? state.accessibilityErrorRedirectUrl : undefined;
            inputs["accessibilityLoginRedirectUrl"] = state ? state.accessibilityLoginRedirectUrl : undefined;
            inputs["accessibilitySelfService"] = state ? state.accessibilitySelfService : undefined;
            inputs["adminNote"] = state ? state.adminNote : undefined;
            inputs["appLinksJson"] = state ? state.appLinksJson : undefined;
            inputs["autoSubmitToolbar"] = state ? state.autoSubmitToolbar : undefined;
            inputs["buttonField"] = state ? state.buttonField : undefined;
            inputs["enduserNote"] = state ? state.enduserNote : undefined;
            inputs["groups"] = state ? state.groups : undefined;
            inputs["hideIos"] = state ? state.hideIos : undefined;
            inputs["hideWeb"] = state ? state.hideWeb : undefined;
            inputs["label"] = state ? state.label : undefined;
            inputs["logo"] = state ? state.logo : undefined;
            inputs["logoUrl"] = state ? state.logoUrl : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["passwordField"] = state ? state.passwordField : undefined;
            inputs["preconfiguredApp"] = state ? state.preconfiguredApp : undefined;
            inputs["signOnMode"] = state ? state.signOnMode : undefined;
            inputs["skipGroups"] = state ? state.skipGroups : undefined;
            inputs["skipUsers"] = state ? state.skipUsers : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["url"] = state ? state.url : undefined;
            inputs["urlRegex"] = state ? state.urlRegex : undefined;
            inputs["userNameTemplate"] = state ? state.userNameTemplate : undefined;
            inputs["userNameTemplateSuffix"] = state ? state.userNameTemplateSuffix : undefined;
            inputs["userNameTemplateType"] = state ? state.userNameTemplateType : undefined;
            inputs["usernameField"] = state ? state.usernameField : undefined;
            inputs["users"] = state ? state.users : undefined;
        } else {
            const args = argsOrState as SwaArgs | undefined;
            if ((!args || args.label === undefined) && !opts.urn) {
                throw new Error("Missing required property 'label'");
            }
            inputs["accessibilityErrorRedirectUrl"] = args ? args.accessibilityErrorRedirectUrl : undefined;
            inputs["accessibilityLoginRedirectUrl"] = args ? args.accessibilityLoginRedirectUrl : undefined;
            inputs["accessibilitySelfService"] = args ? args.accessibilitySelfService : undefined;
            inputs["adminNote"] = args ? args.adminNote : undefined;
            inputs["appLinksJson"] = args ? args.appLinksJson : undefined;
            inputs["autoSubmitToolbar"] = args ? args.autoSubmitToolbar : undefined;
            inputs["buttonField"] = args ? args.buttonField : undefined;
            inputs["enduserNote"] = args ? args.enduserNote : undefined;
            inputs["groups"] = args ? args.groups : undefined;
            inputs["hideIos"] = args ? args.hideIos : undefined;
            inputs["hideWeb"] = args ? args.hideWeb : undefined;
            inputs["label"] = args ? args.label : undefined;
            inputs["logo"] = args ? args.logo : undefined;
            inputs["passwordField"] = args ? args.passwordField : undefined;
            inputs["preconfiguredApp"] = args ? args.preconfiguredApp : undefined;
            inputs["skipGroups"] = args ? args.skipGroups : undefined;
            inputs["skipUsers"] = args ? args.skipUsers : undefined;
            inputs["status"] = args ? args.status : undefined;
            inputs["url"] = args ? args.url : undefined;
            inputs["urlRegex"] = args ? args.urlRegex : undefined;
            inputs["userNameTemplate"] = args ? args.userNameTemplate : undefined;
            inputs["userNameTemplateSuffix"] = args ? args.userNameTemplateSuffix : undefined;
            inputs["userNameTemplateType"] = args ? args.userNameTemplateType : undefined;
            inputs["usernameField"] = args ? args.usernameField : undefined;
            inputs["users"] = args ? args.users : undefined;
            inputs["logoUrl"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["signOnMode"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Swa.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Swa resources.
 */
export interface SwaState {
    /**
     * Custom error page URL.
     */
    accessibilityErrorRedirectUrl?: pulumi.Input<string>;
    /**
     * Custom login page for this application.
     */
    accessibilityLoginRedirectUrl?: pulumi.Input<string>;
    /**
     * Enable self-service. By default, it is `false`.
     */
    accessibilitySelfService?: pulumi.Input<boolean>;
    /**
     * Application notes for admins.
     */
    adminNote?: pulumi.Input<string>;
    /**
     * Displays specific appLinks for the app
     */
    appLinksJson?: pulumi.Input<string>;
    /**
     * Display auto submit toolbar.
     */
    autoSubmitToolbar?: pulumi.Input<boolean>;
    /**
     * Login button field.
     */
    buttonField?: pulumi.Input<string>;
    /**
     * Application notes for end users.
     */
    enduserNote?: pulumi.Input<string>;
    /**
     * Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.
     * - `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.
     *
     * @deprecated The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Do not display application icon on mobile app.
     */
    hideIos?: pulumi.Input<boolean>;
    /**
     * Do not display application icon to users.
     */
    hideWeb?: pulumi.Input<boolean>;
    /**
     * The display name of the Application.
     */
    label?: pulumi.Input<string>;
    /**
     * Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     */
    logo?: pulumi.Input<string>;
    /**
     * Direct link of application logo.
     */
    logoUrl?: pulumi.Input<string>;
    /**
     * Name assigned to the application by Okta.
     */
    name?: pulumi.Input<string>;
    /**
     * Login password field.
     */
    passwordField?: pulumi.Input<string>;
    /**
     * name of application from the Okta Integration Network, if not included a custom app will be created.
     */
    preconfiguredApp?: pulumi.Input<string>;
    /**
     * Sign-on mode of application.
     */
    signOnMode?: pulumi.Input<string>;
    /**
     * Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
     */
    skipGroups?: pulumi.Input<boolean>;
    /**
     * Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
     */
    skipUsers?: pulumi.Input<boolean>;
    /**
     * Status of application. By default, it is `"ACTIVE"`.
     */
    status?: pulumi.Input<string>;
    /**
     * Login URL.
     */
    url?: pulumi.Input<string>;
    /**
     * A regex that further restricts URL to the specified regex.
     */
    urlRegex?: pulumi.Input<string>;
    /**
     * The default username assigned to each user.
     */
    userNameTemplate?: pulumi.Input<string>;
    /**
     * Username template suffix
     */
    userNameTemplateSuffix?: pulumi.Input<string>;
    /**
     * The Username template type.
     */
    userNameTemplateType?: pulumi.Input<string>;
    /**
     * Login username field.
     */
    usernameField?: pulumi.Input<string>;
    /**
     * The users assigned to the application. See `okta.app.User` for a more flexible approach.
     * - `DEPRECATED`: Please replace usage with the `okta.app.User` resource.
     *
     * @deprecated The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
     */
    users?: pulumi.Input<pulumi.Input<inputs.app.SwaUser>[]>;
}

/**
 * The set of arguments for constructing a Swa resource.
 */
export interface SwaArgs {
    /**
     * Custom error page URL.
     */
    accessibilityErrorRedirectUrl?: pulumi.Input<string>;
    /**
     * Custom login page for this application.
     */
    accessibilityLoginRedirectUrl?: pulumi.Input<string>;
    /**
     * Enable self-service. By default, it is `false`.
     */
    accessibilitySelfService?: pulumi.Input<boolean>;
    /**
     * Application notes for admins.
     */
    adminNote?: pulumi.Input<string>;
    /**
     * Displays specific appLinks for the app
     */
    appLinksJson?: pulumi.Input<string>;
    /**
     * Display auto submit toolbar.
     */
    autoSubmitToolbar?: pulumi.Input<boolean>;
    /**
     * Login button field.
     */
    buttonField?: pulumi.Input<string>;
    /**
     * Application notes for end users.
     */
    enduserNote?: pulumi.Input<string>;
    /**
     * Groups associated with the application. See `okta.app.GroupAssignment` for a more flexible approach.
     * - `DEPRECATED`: Please replace usage with the `okta.AppGroupAssignments` (or `okta.app.GroupAssignment`) resource.
     *
     * @deprecated The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Do not display application icon on mobile app.
     */
    hideIos?: pulumi.Input<boolean>;
    /**
     * Do not display application icon to users.
     */
    hideWeb?: pulumi.Input<boolean>;
    /**
     * The display name of the Application.
     */
    label: pulumi.Input<string>;
    /**
     * Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
     */
    logo?: pulumi.Input<string>;
    /**
     * Login password field.
     */
    passwordField?: pulumi.Input<string>;
    /**
     * name of application from the Okta Integration Network, if not included a custom app will be created.
     */
    preconfiguredApp?: pulumi.Input<string>;
    /**
     * Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
     */
    skipGroups?: pulumi.Input<boolean>;
    /**
     * Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
     */
    skipUsers?: pulumi.Input<boolean>;
    /**
     * Status of application. By default, it is `"ACTIVE"`.
     */
    status?: pulumi.Input<string>;
    /**
     * Login URL.
     */
    url?: pulumi.Input<string>;
    /**
     * A regex that further restricts URL to the specified regex.
     */
    urlRegex?: pulumi.Input<string>;
    /**
     * The default username assigned to each user.
     */
    userNameTemplate?: pulumi.Input<string>;
    /**
     * Username template suffix
     */
    userNameTemplateSuffix?: pulumi.Input<string>;
    /**
     * The Username template type.
     */
    userNameTemplateType?: pulumi.Input<string>;
    /**
     * Login username field.
     */
    usernameField?: pulumi.Input<string>;
    /**
     * The users assigned to the application. See `okta.app.User` for a more flexible approach.
     * - `DEPRECATED`: Please replace usage with the `okta.app.User` resource.
     *
     * @deprecated The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
     */
    users?: pulumi.Input<pulumi.Input<inputs.app.SwaUser>[]>;
}

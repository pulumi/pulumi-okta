// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class SecurePasswordStore extends pulumi.CustomResource {
    /**
     * Get an existing SecurePasswordStore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurePasswordStoreState, opts?: pulumi.CustomResourceOptions): SecurePasswordStore {
        return new SecurePasswordStore(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:app/securePasswordStore:SecurePasswordStore';

    /**
     * Returns true if the given object is an instance of SecurePasswordStore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurePasswordStore {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurePasswordStore.__pulumiType;
    }

    /**
     * Custom error page URL
     */
    public readonly accessibilityErrorRedirectUrl!: pulumi.Output<string | undefined>;
    /**
     * Custom login page URL
     */
    public readonly accessibilityLoginRedirectUrl!: pulumi.Output<string | undefined>;
    /**
     * Enable self service
     */
    public readonly accessibilitySelfService!: pulumi.Output<boolean | undefined>;
    /**
     * Application notes for admins.
     */
    public readonly adminNote!: pulumi.Output<string | undefined>;
    /**
     * Displays specific appLinks for the app
     */
    public readonly appLinksJson!: pulumi.Output<string | undefined>;
    /**
     * Display auto submit toolbar
     */
    public readonly autoSubmitToolbar!: pulumi.Output<boolean | undefined>;
    /**
     * Application credentials scheme
     */
    public readonly credentialsScheme!: pulumi.Output<string | undefined>;
    /**
     * Application notes for end users.
     */
    public readonly enduserNote!: pulumi.Output<string | undefined>;
    /**
     * Do not display application icon on mobile app
     */
    public readonly hideIos!: pulumi.Output<boolean | undefined>;
    /**
     * Do not display application icon to users
     */
    public readonly hideWeb!: pulumi.Output<boolean | undefined>;
    /**
     * Pretty name of app.
     */
    public readonly label!: pulumi.Output<string>;
    /**
     * Local path to logo of the application.
     */
    public readonly logo!: pulumi.Output<string | undefined>;
    /**
     * URL of the application's logo
     */
    public /*out*/ readonly logoUrl!: pulumi.Output<string>;
    /**
     * Name of the app.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Name of optional param in the login form
     */
    public readonly optionalField1!: pulumi.Output<string | undefined>;
    /**
     * Name of optional value in login form
     */
    public readonly optionalField1Value!: pulumi.Output<string | undefined>;
    /**
     * Name of optional param in the login form
     */
    public readonly optionalField2!: pulumi.Output<string | undefined>;
    /**
     * Name of optional value in login form
     */
    public readonly optionalField2Value!: pulumi.Output<string | undefined>;
    /**
     * Name of optional param in the login form
     */
    public readonly optionalField3!: pulumi.Output<string | undefined>;
    /**
     * Name of optional value in login form
     */
    public readonly optionalField3Value!: pulumi.Output<string | undefined>;
    /**
     * Login password field
     */
    public readonly passwordField!: pulumi.Output<string>;
    /**
     * Allow user to reveal password
     */
    public readonly revealPassword!: pulumi.Output<boolean | undefined>;
    /**
     * Shared password, required for certain schemes.
     */
    public readonly sharedPassword!: pulumi.Output<string | undefined>;
    /**
     * Shared username, required for certain schemes.
     */
    public readonly sharedUsername!: pulumi.Output<string | undefined>;
    /**
     * Sign on mode of application.
     */
    public /*out*/ readonly signOnMode!: pulumi.Output<string>;
    /**
     * Status of application.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    /**
     * Login URL
     */
    public readonly url!: pulumi.Output<string>;
    /**
     * Username template
     */
    public readonly userNameTemplate!: pulumi.Output<string | undefined>;
    /**
     * Push username on update
     */
    public readonly userNameTemplatePushStatus!: pulumi.Output<string | undefined>;
    /**
     * Username template suffix
     */
    public readonly userNameTemplateSuffix!: pulumi.Output<string | undefined>;
    /**
     * Username template type
     */
    public readonly userNameTemplateType!: pulumi.Output<string | undefined>;
    /**
     * Login username field
     */
    public readonly usernameField!: pulumi.Output<string>;

    /**
     * Create a SecurePasswordStore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurePasswordStoreArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecurePasswordStoreArgs | SecurePasswordStoreState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecurePasswordStoreState | undefined;
            resourceInputs["accessibilityErrorRedirectUrl"] = state ? state.accessibilityErrorRedirectUrl : undefined;
            resourceInputs["accessibilityLoginRedirectUrl"] = state ? state.accessibilityLoginRedirectUrl : undefined;
            resourceInputs["accessibilitySelfService"] = state ? state.accessibilitySelfService : undefined;
            resourceInputs["adminNote"] = state ? state.adminNote : undefined;
            resourceInputs["appLinksJson"] = state ? state.appLinksJson : undefined;
            resourceInputs["autoSubmitToolbar"] = state ? state.autoSubmitToolbar : undefined;
            resourceInputs["credentialsScheme"] = state ? state.credentialsScheme : undefined;
            resourceInputs["enduserNote"] = state ? state.enduserNote : undefined;
            resourceInputs["hideIos"] = state ? state.hideIos : undefined;
            resourceInputs["hideWeb"] = state ? state.hideWeb : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["logo"] = state ? state.logo : undefined;
            resourceInputs["logoUrl"] = state ? state.logoUrl : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["optionalField1"] = state ? state.optionalField1 : undefined;
            resourceInputs["optionalField1Value"] = state ? state.optionalField1Value : undefined;
            resourceInputs["optionalField2"] = state ? state.optionalField2 : undefined;
            resourceInputs["optionalField2Value"] = state ? state.optionalField2Value : undefined;
            resourceInputs["optionalField3"] = state ? state.optionalField3 : undefined;
            resourceInputs["optionalField3Value"] = state ? state.optionalField3Value : undefined;
            resourceInputs["passwordField"] = state ? state.passwordField : undefined;
            resourceInputs["revealPassword"] = state ? state.revealPassword : undefined;
            resourceInputs["sharedPassword"] = state ? state.sharedPassword : undefined;
            resourceInputs["sharedUsername"] = state ? state.sharedUsername : undefined;
            resourceInputs["signOnMode"] = state ? state.signOnMode : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["userNameTemplate"] = state ? state.userNameTemplate : undefined;
            resourceInputs["userNameTemplatePushStatus"] = state ? state.userNameTemplatePushStatus : undefined;
            resourceInputs["userNameTemplateSuffix"] = state ? state.userNameTemplateSuffix : undefined;
            resourceInputs["userNameTemplateType"] = state ? state.userNameTemplateType : undefined;
            resourceInputs["usernameField"] = state ? state.usernameField : undefined;
        } else {
            const args = argsOrState as SecurePasswordStoreArgs | undefined;
            if ((!args || args.label === undefined) && !opts.urn) {
                throw new Error("Missing required property 'label'");
            }
            if ((!args || args.passwordField === undefined) && !opts.urn) {
                throw new Error("Missing required property 'passwordField'");
            }
            if ((!args || args.url === undefined) && !opts.urn) {
                throw new Error("Missing required property 'url'");
            }
            if ((!args || args.usernameField === undefined) && !opts.urn) {
                throw new Error("Missing required property 'usernameField'");
            }
            resourceInputs["accessibilityErrorRedirectUrl"] = args ? args.accessibilityErrorRedirectUrl : undefined;
            resourceInputs["accessibilityLoginRedirectUrl"] = args ? args.accessibilityLoginRedirectUrl : undefined;
            resourceInputs["accessibilitySelfService"] = args ? args.accessibilitySelfService : undefined;
            resourceInputs["adminNote"] = args ? args.adminNote : undefined;
            resourceInputs["appLinksJson"] = args ? args.appLinksJson : undefined;
            resourceInputs["autoSubmitToolbar"] = args ? args.autoSubmitToolbar : undefined;
            resourceInputs["credentialsScheme"] = args ? args.credentialsScheme : undefined;
            resourceInputs["enduserNote"] = args ? args.enduserNote : undefined;
            resourceInputs["hideIos"] = args ? args.hideIos : undefined;
            resourceInputs["hideWeb"] = args ? args.hideWeb : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["logo"] = args ? args.logo : undefined;
            resourceInputs["optionalField1"] = args ? args.optionalField1 : undefined;
            resourceInputs["optionalField1Value"] = args ? args.optionalField1Value : undefined;
            resourceInputs["optionalField2"] = args ? args.optionalField2 : undefined;
            resourceInputs["optionalField2Value"] = args ? args.optionalField2Value : undefined;
            resourceInputs["optionalField3"] = args ? args.optionalField3 : undefined;
            resourceInputs["optionalField3Value"] = args ? args.optionalField3Value : undefined;
            resourceInputs["passwordField"] = args ? args.passwordField : undefined;
            resourceInputs["revealPassword"] = args ? args.revealPassword : undefined;
            resourceInputs["sharedPassword"] = args ? args.sharedPassword : undefined;
            resourceInputs["sharedUsername"] = args ? args.sharedUsername : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["userNameTemplate"] = args ? args.userNameTemplate : undefined;
            resourceInputs["userNameTemplatePushStatus"] = args ? args.userNameTemplatePushStatus : undefined;
            resourceInputs["userNameTemplateSuffix"] = args ? args.userNameTemplateSuffix : undefined;
            resourceInputs["userNameTemplateType"] = args ? args.userNameTemplateType : undefined;
            resourceInputs["usernameField"] = args ? args.usernameField : undefined;
            resourceInputs["logoUrl"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["signOnMode"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurePasswordStore.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SecurePasswordStore resources.
 */
export interface SecurePasswordStoreState {
    /**
     * Custom error page URL
     */
    accessibilityErrorRedirectUrl?: pulumi.Input<string>;
    /**
     * Custom login page URL
     */
    accessibilityLoginRedirectUrl?: pulumi.Input<string>;
    /**
     * Enable self service
     */
    accessibilitySelfService?: pulumi.Input<boolean>;
    /**
     * Application notes for admins.
     */
    adminNote?: pulumi.Input<string>;
    /**
     * Displays specific appLinks for the app
     */
    appLinksJson?: pulumi.Input<string>;
    /**
     * Display auto submit toolbar
     */
    autoSubmitToolbar?: pulumi.Input<boolean>;
    /**
     * Application credentials scheme
     */
    credentialsScheme?: pulumi.Input<string>;
    /**
     * Application notes for end users.
     */
    enduserNote?: pulumi.Input<string>;
    /**
     * Do not display application icon on mobile app
     */
    hideIos?: pulumi.Input<boolean>;
    /**
     * Do not display application icon to users
     */
    hideWeb?: pulumi.Input<boolean>;
    /**
     * Pretty name of app.
     */
    label?: pulumi.Input<string>;
    /**
     * Local path to logo of the application.
     */
    logo?: pulumi.Input<string>;
    /**
     * URL of the application's logo
     */
    logoUrl?: pulumi.Input<string>;
    /**
     * Name of the app.
     */
    name?: pulumi.Input<string>;
    /**
     * Name of optional param in the login form
     */
    optionalField1?: pulumi.Input<string>;
    /**
     * Name of optional value in login form
     */
    optionalField1Value?: pulumi.Input<string>;
    /**
     * Name of optional param in the login form
     */
    optionalField2?: pulumi.Input<string>;
    /**
     * Name of optional value in login form
     */
    optionalField2Value?: pulumi.Input<string>;
    /**
     * Name of optional param in the login form
     */
    optionalField3?: pulumi.Input<string>;
    /**
     * Name of optional value in login form
     */
    optionalField3Value?: pulumi.Input<string>;
    /**
     * Login password field
     */
    passwordField?: pulumi.Input<string>;
    /**
     * Allow user to reveal password
     */
    revealPassword?: pulumi.Input<boolean>;
    /**
     * Shared password, required for certain schemes.
     */
    sharedPassword?: pulumi.Input<string>;
    /**
     * Shared username, required for certain schemes.
     */
    sharedUsername?: pulumi.Input<string>;
    /**
     * Sign on mode of application.
     */
    signOnMode?: pulumi.Input<string>;
    /**
     * Status of application.
     */
    status?: pulumi.Input<string>;
    /**
     * Login URL
     */
    url?: pulumi.Input<string>;
    /**
     * Username template
     */
    userNameTemplate?: pulumi.Input<string>;
    /**
     * Push username on update
     */
    userNameTemplatePushStatus?: pulumi.Input<string>;
    /**
     * Username template suffix
     */
    userNameTemplateSuffix?: pulumi.Input<string>;
    /**
     * Username template type
     */
    userNameTemplateType?: pulumi.Input<string>;
    /**
     * Login username field
     */
    usernameField?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SecurePasswordStore resource.
 */
export interface SecurePasswordStoreArgs {
    /**
     * Custom error page URL
     */
    accessibilityErrorRedirectUrl?: pulumi.Input<string>;
    /**
     * Custom login page URL
     */
    accessibilityLoginRedirectUrl?: pulumi.Input<string>;
    /**
     * Enable self service
     */
    accessibilitySelfService?: pulumi.Input<boolean>;
    /**
     * Application notes for admins.
     */
    adminNote?: pulumi.Input<string>;
    /**
     * Displays specific appLinks for the app
     */
    appLinksJson?: pulumi.Input<string>;
    /**
     * Display auto submit toolbar
     */
    autoSubmitToolbar?: pulumi.Input<boolean>;
    /**
     * Application credentials scheme
     */
    credentialsScheme?: pulumi.Input<string>;
    /**
     * Application notes for end users.
     */
    enduserNote?: pulumi.Input<string>;
    /**
     * Do not display application icon on mobile app
     */
    hideIos?: pulumi.Input<boolean>;
    /**
     * Do not display application icon to users
     */
    hideWeb?: pulumi.Input<boolean>;
    /**
     * Pretty name of app.
     */
    label: pulumi.Input<string>;
    /**
     * Local path to logo of the application.
     */
    logo?: pulumi.Input<string>;
    /**
     * Name of optional param in the login form
     */
    optionalField1?: pulumi.Input<string>;
    /**
     * Name of optional value in login form
     */
    optionalField1Value?: pulumi.Input<string>;
    /**
     * Name of optional param in the login form
     */
    optionalField2?: pulumi.Input<string>;
    /**
     * Name of optional value in login form
     */
    optionalField2Value?: pulumi.Input<string>;
    /**
     * Name of optional param in the login form
     */
    optionalField3?: pulumi.Input<string>;
    /**
     * Name of optional value in login form
     */
    optionalField3Value?: pulumi.Input<string>;
    /**
     * Login password field
     */
    passwordField: pulumi.Input<string>;
    /**
     * Allow user to reveal password
     */
    revealPassword?: pulumi.Input<boolean>;
    /**
     * Shared password, required for certain schemes.
     */
    sharedPassword?: pulumi.Input<string>;
    /**
     * Shared username, required for certain schemes.
     */
    sharedUsername?: pulumi.Input<string>;
    /**
     * Status of application.
     */
    status?: pulumi.Input<string>;
    /**
     * Login URL
     */
    url: pulumi.Input<string>;
    /**
     * Username template
     */
    userNameTemplate?: pulumi.Input<string>;
    /**
     * Push username on update
     */
    userNameTemplatePushStatus?: pulumi.Input<string>;
    /**
     * Username template suffix
     */
    userNameTemplateSuffix?: pulumi.Input<string>;
    /**
     * Username template type
     */
    userNameTemplateType?: pulumi.Input<string>;
    /**
     * Login username field
     */
    usernameField: pulumi.Input<string>;
}

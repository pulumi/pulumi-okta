// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource allows you to manage post logout redirection URI for use in redirect-based flows.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const testOAuth = new okta.app.OAuth("testOAuth", {
 *     label: "testAcc_replace_with_uuid",
 *     type: "web",
 *     grantTypes: ["authorization_code"],
 *     responseTypes: ["code"],
 *     redirectUris: ["myapp://callback"],
 *     postLogoutRedirectUris: ["https://www.example.com"],
 * });
 * const testOAuthPostLogoutRedirectUri = new okta.app.OAuthPostLogoutRedirectUri("testOAuthPostLogoutRedirectUri", {
 *     appId: testOAuth.id,
 *     uri: "https://www.example.com",
 * });
 * ```
 *
 * ## Import
 *
 * A post logout redirect URI can be imported via the Okta ID.
 *
 * ```sh
 *  $ pulumi import okta:app/oAuthPostLogoutRedirectUri:OAuthPostLogoutRedirectUri example <app id>/<uri>
 * ```
 */
export class OAuthPostLogoutRedirectUri extends pulumi.CustomResource {
    /**
     * Get an existing OAuthPostLogoutRedirectUri resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OAuthPostLogoutRedirectUriState, opts?: pulumi.CustomResourceOptions): OAuthPostLogoutRedirectUri {
        return new OAuthPostLogoutRedirectUri(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:app/oAuthPostLogoutRedirectUri:OAuthPostLogoutRedirectUri';

    /**
     * Returns true if the given object is an instance of OAuthPostLogoutRedirectUri.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OAuthPostLogoutRedirectUri {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OAuthPostLogoutRedirectUri.__pulumiType;
    }

    /**
     * OAuth application ID.
     */
    public readonly appId!: pulumi.Output<string>;
    /**
     * Post Logout Redirect URI to append to Okta OIDC application.
     */
    public readonly uri!: pulumi.Output<string>;

    /**
     * Create a OAuthPostLogoutRedirectUri resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OAuthPostLogoutRedirectUriArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OAuthPostLogoutRedirectUriArgs | OAuthPostLogoutRedirectUriState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OAuthPostLogoutRedirectUriState | undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["uri"] = state ? state.uri : undefined;
        } else {
            const args = argsOrState as OAuthPostLogoutRedirectUriArgs | undefined;
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if ((!args || args.uri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'uri'");
            }
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["uri"] = args ? args.uri : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OAuthPostLogoutRedirectUri.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OAuthPostLogoutRedirectUri resources.
 */
export interface OAuthPostLogoutRedirectUriState {
    /**
     * OAuth application ID.
     */
    appId?: pulumi.Input<string>;
    /**
     * Post Logout Redirect URI to append to Okta OIDC application.
     */
    uri?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OAuthPostLogoutRedirectUri resource.
 */
export interface OAuthPostLogoutRedirectUriArgs {
    /**
     * OAuth application ID.
     */
    appId: pulumi.Input<string>;
    /**
     * Post Logout Redirect URI to append to Okta OIDC application.
     */
    uri: pulumi.Input<string>;
}

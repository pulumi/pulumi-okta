// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Zone extends pulumi.CustomResource {
    /**
     * Get an existing Zone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZoneState, opts?: pulumi.CustomResourceOptions): Zone {
        return new Zone(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:network/zone:Zone';

    /**
     * Returns true if the given object is an instance of Zone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Zone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Zone.__pulumiType;
    }

    /**
     * Format of each array value: a string representation of an ASN numeric value
     */
    public readonly asns!: pulumi.Output<string[] | undefined>;
    /**
     * Array of locations ISO-3166-1(2). Format code: countryCode OR countryCode-regionCode
     */
    public readonly dynamicLocations!: pulumi.Output<string[] | undefined>;
    /**
     * Type of proxy being controlled by this network zone
     */
    public readonly dynamicProxyType!: pulumi.Output<string | undefined>;
    /**
     * Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples
     */
    public readonly gateways!: pulumi.Output<string[] | undefined>;
    /**
     * Name of the Network Zone Resource
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples
     */
    public readonly proxies!: pulumi.Output<string[] | undefined>;
    /**
     * Network Status - can either be ACTIVE or INACTIVE only
     */
    public readonly status!: pulumi.Output<string | undefined>;
    /**
     * Type of the Network Zone - can either be IP or DYNAMIC only
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Zone's purpose: POLICY or BLOCKLIST
     */
    public readonly usage!: pulumi.Output<string | undefined>;

    /**
     * Create a Zone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZoneArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZoneArgs | ZoneState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZoneState | undefined;
            resourceInputs["asns"] = state ? state.asns : undefined;
            resourceInputs["dynamicLocations"] = state ? state.dynamicLocations : undefined;
            resourceInputs["dynamicProxyType"] = state ? state.dynamicProxyType : undefined;
            resourceInputs["gateways"] = state ? state.gateways : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["proxies"] = state ? state.proxies : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["usage"] = state ? state.usage : undefined;
        } else {
            const args = argsOrState as ZoneArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["asns"] = args ? args.asns : undefined;
            resourceInputs["dynamicLocations"] = args ? args.dynamicLocations : undefined;
            resourceInputs["dynamicProxyType"] = args ? args.dynamicProxyType : undefined;
            resourceInputs["gateways"] = args ? args.gateways : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["proxies"] = args ? args.proxies : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["usage"] = args ? args.usage : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Zone.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Zone resources.
 */
export interface ZoneState {
    /**
     * Format of each array value: a string representation of an ASN numeric value
     */
    asns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Array of locations ISO-3166-1(2). Format code: countryCode OR countryCode-regionCode
     */
    dynamicLocations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of proxy being controlled by this network zone
     */
    dynamicProxyType?: pulumi.Input<string>;
    /**
     * Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples
     */
    gateways?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the Network Zone Resource
     */
    name?: pulumi.Input<string>;
    /**
     * Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples
     */
    proxies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network Status - can either be ACTIVE or INACTIVE only
     */
    status?: pulumi.Input<string>;
    /**
     * Type of the Network Zone - can either be IP or DYNAMIC only
     */
    type?: pulumi.Input<string>;
    /**
     * Zone's purpose: POLICY or BLOCKLIST
     */
    usage?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Zone resource.
 */
export interface ZoneArgs {
    /**
     * Format of each array value: a string representation of an ASN numeric value
     */
    asns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Array of locations ISO-3166-1(2). Format code: countryCode OR countryCode-regionCode
     */
    dynamicLocations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of proxy being controlled by this network zone
     */
    dynamicProxyType?: pulumi.Input<string>;
    /**
     * Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples
     */
    gateways?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the Network Zone Resource
     */
    name?: pulumi.Input<string>;
    /**
     * Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples
     */
    proxies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network Status - can either be ACTIVE or INACTIVE only
     */
    status?: pulumi.Input<string>;
    /**
     * Type of the Network Zone - can either be IP or DYNAMIC only
     */
    type: pulumi.Input<string>;
    /**
     * Zone's purpose: POLICY or BLOCKLIST
     */
    usage?: pulumi.Input<string>;
}

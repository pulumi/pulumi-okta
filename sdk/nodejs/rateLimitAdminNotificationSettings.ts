// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages principal rate limits.
 * Principal Rate Limits provides operations to manage Principal Rate Limits for your organization.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = new okta.RateLimitAdminNotificationSettings("example", {notificationsEnabled: true});
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import okta:index/rateLimitAdminNotificationSettings:RateLimitAdminNotificationSettings example .
 * ```
 */
export class RateLimitAdminNotificationSettings extends pulumi.CustomResource {
    /**
     * Get an existing RateLimitAdminNotificationSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RateLimitAdminNotificationSettingsState, opts?: pulumi.CustomResourceOptions): RateLimitAdminNotificationSettings {
        return new RateLimitAdminNotificationSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:index/rateLimitAdminNotificationSettings:RateLimitAdminNotificationSettings';

    /**
     * Returns true if the given object is an instance of RateLimitAdminNotificationSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RateLimitAdminNotificationSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RateLimitAdminNotificationSettings.__pulumiType;
    }

    /**
     * Enables or disables admin notifications for rate limiting events.
     */
    declare public readonly notificationsEnabled: pulumi.Output<boolean>;

    /**
     * Create a RateLimitAdminNotificationSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RateLimitAdminNotificationSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RateLimitAdminNotificationSettingsArgs | RateLimitAdminNotificationSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RateLimitAdminNotificationSettingsState | undefined;
            resourceInputs["notificationsEnabled"] = state?.notificationsEnabled;
        } else {
            const args = argsOrState as RateLimitAdminNotificationSettingsArgs | undefined;
            if (args?.notificationsEnabled === undefined && !opts.urn) {
                throw new Error("Missing required property 'notificationsEnabled'");
            }
            resourceInputs["notificationsEnabled"] = args?.notificationsEnabled;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RateLimitAdminNotificationSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RateLimitAdminNotificationSettings resources.
 */
export interface RateLimitAdminNotificationSettingsState {
    /**
     * Enables or disables admin notifications for rate limiting events.
     */
    notificationsEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a RateLimitAdminNotificationSettings resource.
 */
export interface RateLimitAdminNotificationSettingsArgs {
    /**
     * Enables or disables admin notifications for rate limiting events.
     */
    notificationsEnabled: pulumi.Input<boolean>;
}

// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages request settings. This resource allows you to read and configure an Okta [request-setting](https://developer.okta.com/docs/api/iga/openapi/governance.requests.admin.v2/tag/Request-Settings/#tag/Request-Settings/operation/updateOrgRequestSettingsV2).
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import okta:index/requestSettingOrganization:RequestSettingOrganization example "default"
 * ```
 */
export class RequestSettingOrganization extends pulumi.CustomResource {
    /**
     * Get an existing RequestSettingOrganization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RequestSettingOrganizationState, opts?: pulumi.CustomResourceOptions): RequestSettingOrganization {
        return new RequestSettingOrganization(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:index/requestSettingOrganization:RequestSettingOrganization';

    /**
     * Returns true if the given object is an instance of RequestSettingOrganization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RequestSettingOrganization {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RequestSettingOrganization.__pulumiType;
    }

    /**
     * Request condition id.
     */
    declare public readonly idProperty: pulumi.Output<string>;
    /**
     * Whether a customer has acknowledged Access Requests subprocessors.
     */
    declare public readonly subprocessorsAcknowledged: pulumi.Output<boolean>;

    /**
     * Create a RequestSettingOrganization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RequestSettingOrganizationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RequestSettingOrganizationArgs | RequestSettingOrganizationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RequestSettingOrganizationState | undefined;
            resourceInputs["idProperty"] = state?.idProperty;
            resourceInputs["subprocessorsAcknowledged"] = state?.subprocessorsAcknowledged;
        } else {
            const args = argsOrState as RequestSettingOrganizationArgs | undefined;
            if (args?.idProperty === undefined && !opts.urn) {
                throw new Error("Missing required property 'idProperty'");
            }
            resourceInputs["idProperty"] = args?.idProperty;
            resourceInputs["subprocessorsAcknowledged"] = args?.subprocessorsAcknowledged;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RequestSettingOrganization.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RequestSettingOrganization resources.
 */
export interface RequestSettingOrganizationState {
    /**
     * Request condition id.
     */
    idProperty?: pulumi.Input<string>;
    /**
     * Whether a customer has acknowledged Access Requests subprocessors.
     */
    subprocessorsAcknowledged?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a RequestSettingOrganization resource.
 */
export interface RequestSettingOrganizationArgs {
    /**
     * Request condition id.
     */
    idProperty: pulumi.Input<string>;
    /**
     * Whether a customer has acknowledged Access Requests subprocessors.
     */
    subprocessorsAcknowledged?: pulumi.Input<boolean>;
}

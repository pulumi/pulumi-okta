// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * > **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.
 *
 * This resource allows you to create and configure a Profile Enrollment Policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = new okta.PolicyProfileEnrollment("example", {
 *     status: "ACTIVE",
 * });
 * ```
 *
 * ## Import
 *
 * A Profile Enrollment Policy can be imported via the Okta ID.
 *
 * ```sh
 *  $ pulumi import okta:index/policyProfileEnrollment:PolicyProfileEnrollment example <policy id>
 * ```
 */
export class PolicyProfileEnrollment extends pulumi.CustomResource {
    /**
     * Get an existing PolicyProfileEnrollment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyProfileEnrollmentState, opts?: pulumi.CustomResourceOptions): PolicyProfileEnrollment {
        return new PolicyProfileEnrollment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:index/policyProfileEnrollment:PolicyProfileEnrollment';

    /**
     * Returns true if the given object is an instance of PolicyProfileEnrollment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyProfileEnrollment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyProfileEnrollment.__pulumiType;
    }

    /**
     * Policy Name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Status of the policy.
     */
    public readonly status!: pulumi.Output<string | undefined>;

    /**
     * Create a PolicyProfileEnrollment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PolicyProfileEnrollmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyProfileEnrollmentArgs | PolicyProfileEnrollmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyProfileEnrollmentState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as PolicyProfileEnrollmentArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyProfileEnrollment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PolicyProfileEnrollment resources.
 */
export interface PolicyProfileEnrollmentState {
    /**
     * Policy Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Status of the policy.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PolicyProfileEnrollment resource.
 */
export interface PolicyProfileEnrollmentArgs {
    /**
     * Policy Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Status of the policy.
     */
    status?: pulumi.Input<string>;
}

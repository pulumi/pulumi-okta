// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CustomizedSigninPageArgs, CustomizedSigninPageState } from "./customizedSigninPage";
export type CustomizedSigninPage = import("./customizedSigninPage").CustomizedSigninPage;
export const CustomizedSigninPage: typeof import("./customizedSigninPage").CustomizedSigninPage = null as any;
utilities.lazyLoad(exports, ["CustomizedSigninPage"], () => require("./customizedSigninPage"));

export { EmailDomainArgs, EmailDomainState } from "./emailDomain";
export type EmailDomain = import("./emailDomain").EmailDomain;
export const EmailDomain: typeof import("./emailDomain").EmailDomain = null as any;
utilities.lazyLoad(exports, ["EmailDomain"], () => require("./emailDomain"));

export { EmailDomainVerificationArgs, EmailDomainVerificationState } from "./emailDomainVerification";
export type EmailDomainVerification = import("./emailDomainVerification").EmailDomainVerification;
export const EmailDomainVerification: typeof import("./emailDomainVerification").EmailDomainVerification = null as any;
utilities.lazyLoad(exports, ["EmailDomainVerification"], () => require("./emailDomainVerification"));

export { GetDefaultSigninPageArgs, GetDefaultSigninPageResult, GetDefaultSigninPageOutputArgs } from "./getDefaultSigninPage";
export const getDefaultSigninPage: typeof import("./getDefaultSigninPage").getDefaultSigninPage = null as any;
export const getDefaultSigninPageOutput: typeof import("./getDefaultSigninPage").getDefaultSigninPageOutput = null as any;
utilities.lazyLoad(exports, ["getDefaultSigninPage","getDefaultSigninPageOutput"], () => require("./getDefaultSigninPage"));

export { GetDomainArgs, GetDomainResult, GetDomainOutputArgs } from "./getDomain";
export const getDomain: typeof import("./getDomain").getDomain = null as any;
export const getDomainOutput: typeof import("./getDomain").getDomainOutput = null as any;
utilities.lazyLoad(exports, ["getDomain","getDomainOutput"], () => require("./getDomain"));

export { GetLogStreamArgs, GetLogStreamResult, GetLogStreamOutputArgs } from "./getLogStream";
export const getLogStream: typeof import("./getLogStream").getLogStream = null as any;
export const getLogStreamOutput: typeof import("./getLogStream").getLogStreamOutput = null as any;
utilities.lazyLoad(exports, ["getLogStream","getLogStreamOutput"], () => require("./getLogStream"));

export { GetOrgMetadataArgs, GetOrgMetadataResult, GetOrgMetadataOutputArgs } from "./getOrgMetadata";
export const getOrgMetadata: typeof import("./getOrgMetadata").getOrgMetadata = null as any;
export const getOrgMetadataOutput: typeof import("./getOrgMetadata").getOrgMetadataOutput = null as any;
utilities.lazyLoad(exports, ["getOrgMetadata","getOrgMetadataOutput"], () => require("./getOrgMetadata"));

export { LogStreamArgs, LogStreamState } from "./logStream";
export type LogStream = import("./logStream").LogStream;
export const LogStream: typeof import("./logStream").LogStream = null as any;
utilities.lazyLoad(exports, ["LogStream"], () => require("./logStream"));

export { PreviewSigninPageArgs, PreviewSigninPageState } from "./previewSigninPage";
export type PreviewSigninPage = import("./previewSigninPage").PreviewSigninPage;
export const PreviewSigninPage: typeof import("./previewSigninPage").PreviewSigninPage = null as any;
utilities.lazyLoad(exports, ["PreviewSigninPage"], () => require("./previewSigninPage"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "okta:Index/customizedSigninPage:CustomizedSigninPage":
                return new CustomizedSigninPage(name, <any>undefined, { urn })
            case "okta:Index/emailDomain:EmailDomain":
                return new EmailDomain(name, <any>undefined, { urn })
            case "okta:Index/emailDomainVerification:EmailDomainVerification":
                return new EmailDomainVerification(name, <any>undefined, { urn })
            case "okta:Index/logStream:LogStream":
                return new LogStream(name, <any>undefined, { urn })
            case "okta:Index/previewSigninPage:PreviewSigninPage":
                return new PreviewSigninPage(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("okta", "Index/customizedSigninPage", _module)
pulumi.runtime.registerResourceModule("okta", "Index/emailDomain", _module)
pulumi.runtime.registerResourceModule("okta", "Index/emailDomainVerification", _module)
pulumi.runtime.registerResourceModule("okta", "Index/logStream", _module)
pulumi.runtime.registerResourceModule("okta", "Index/previewSigninPage", _module)

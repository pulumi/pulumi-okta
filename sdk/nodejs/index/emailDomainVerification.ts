// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Verifies the email domain. The resource won't be created if the email domain could not be verified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const exampleEmailDomain = new okta.index.EmailDomain("exampleEmailDomain", {
 *     brandId: "abc123",
 *     domain: "example.com",
 *     displayName: "test",
 *     userName: "paul_atreides",
 * });
 * const exampleEmailDomainVerification = new okta.index.EmailDomainVerification("exampleEmailDomainVerification", {emailDomainId: okta_email_domain.valid.id});
 * ```
 *
 * ## Import
 *
 * This resource does not support importing.
 */
export class EmailDomainVerification extends pulumi.CustomResource {
    /**
     * Get an existing EmailDomainVerification resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EmailDomainVerificationState, opts?: pulumi.CustomResourceOptions): EmailDomainVerification {
        return new EmailDomainVerification(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:Index/emailDomainVerification:EmailDomainVerification';

    /**
     * Returns true if the given object is an instance of EmailDomainVerification.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EmailDomainVerification {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EmailDomainVerification.__pulumiType;
    }

    /**
     * Email domain ID.
     */
    public readonly emailDomainId!: pulumi.Output<string>;

    /**
     * Create a EmailDomainVerification resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EmailDomainVerificationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EmailDomainVerificationArgs | EmailDomainVerificationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EmailDomainVerificationState | undefined;
            resourceInputs["emailDomainId"] = state ? state.emailDomainId : undefined;
        } else {
            const args = argsOrState as EmailDomainVerificationArgs | undefined;
            if ((!args || args.emailDomainId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'emailDomainId'");
            }
            resourceInputs["emailDomainId"] = args ? args.emailDomainId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EmailDomainVerification.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EmailDomainVerification resources.
 */
export interface EmailDomainVerificationState {
    /**
     * Email domain ID.
     */
    emailDomainId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EmailDomainVerification resource.
 */
export interface EmailDomainVerificationArgs {
    /**
     * Email domain ID.
     */
    emailDomainId: pulumi.Input<string>;
}

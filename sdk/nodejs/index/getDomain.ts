// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to retrieve a domain from Okta.
 *
 * - https://developer.okta.com/docs/reference/api/domains/#get-domain
 * - https://developer.okta.com/docs/reference/api/domains/#domainresponse-object
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = new okta.Domain("example", {});
 * const by-name = okta.Index.getDomain({
 *     domainIdOrName: "www.example.com",
 * });
 * const by-id = okta.Index.getDomainOutput({
 *     domainIdOrName: example.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getDomain(args: GetDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:Index/getDomain:getDomain", {
        "domainIdOrName": args.domainIdOrName,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainArgs {
    /**
     * The Okta ID of the domain or the domain name itself.
     */
    domainIdOrName: string;
}

/**
 * A collection of values returned by getDomain.
 */
export interface GetDomainResult {
    /**
     * Certificate source type that indicates whether the certificate is provided by the user or Okta. Values: MANUAL, OKTA_MANAGED"
     */
    readonly certificateSourceType: string;
    /**
     * TXT and CNAME records to be registered for the Domain.
     */
    readonly dnsRecords: outputs.Index.GetDomainDnsRecord[];
    /**
     * Domain name
     */
    readonly domain: string;
    readonly domainIdOrName: string;
    /**
     * Domain ID
     */
    readonly id: string;
    /**
     * Certificate metadata for the Domain
     */
    readonly publicCertificate: {[key: string]: string};
    /**
     * Status of the domain. Values: `NOT_STARTED`, `IN_PROGRESS`, `VERIFIED`, `COMPLETED`
     */
    readonly validationStatus: string;
}
/**
 * Use this data source to retrieve a domain from Okta.
 *
 * - https://developer.okta.com/docs/reference/api/domains/#get-domain
 * - https://developer.okta.com/docs/reference/api/domains/#domainresponse-object
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = new okta.Domain("example", {});
 * const by-name = okta.Index.getDomain({
 *     domainIdOrName: "www.example.com",
 * });
 * const by-id = okta.Index.getDomainOutput({
 *     domainIdOrName: example.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getDomainOutput(args: GetDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainResult> {
    return pulumi.output(args).apply((a: any) => getDomain(a, opts))
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainOutputArgs {
    /**
     * The Okta ID of the domain or the domain name itself.
     */
    domainIdOrName: pulumi.Input<string>;
}

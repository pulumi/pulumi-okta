// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get the email templates belonging to a brand in an Okta organization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const test = okta.getBrands({});
 * const testGetTemplates = test.then(test => okta.getTemplates({
 *     brandId: test.brands?.[0]?.id,
 * }));
 * ```
 */
export function getTemplates(args: GetTemplatesArgs, opts?: pulumi.InvokeOptions): Promise<GetTemplatesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getTemplates:getTemplates", {
        "brandId": args.brandId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTemplates.
 */
export interface GetTemplatesArgs {
    /**
     * Brand ID
     */
    brandId: string;
}

/**
 * A collection of values returned by getTemplates.
 */
export interface GetTemplatesResult {
    /**
     * Brand ID
     */
    readonly brandId: string;
    /**
     * List of `okta.getTemplate` belonging to a brand in the organization
     */
    readonly emailTemplates: outputs.GetTemplatesEmailTemplate[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
/**
 * Get the email templates belonging to a brand in an Okta organization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const test = okta.getBrands({});
 * const testGetTemplates = test.then(test => okta.getTemplates({
 *     brandId: test.brands?.[0]?.id,
 * }));
 * ```
 */
export function getTemplatesOutput(args: GetTemplatesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTemplatesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("okta:index/getTemplates:getTemplates", {
        "brandId": args.brandId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTemplates.
 */
export interface GetTemplatesOutputArgs {
    /**
     * Brand ID
     */
    brandId: pulumi.Input<string>;
}

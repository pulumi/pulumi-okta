// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve the [email
 * templates](https://developer.okta.com/docs/reference/api/brands/#email-template)
 * of a brand in an Okta organization.
 */
export function getTemplates(args: GetTemplatesArgs, opts?: pulumi.InvokeOptions): Promise<GetTemplatesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("okta:index/getTemplates:getTemplates", {
        "brandId": args.brandId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTemplates.
 */
export interface GetTemplatesArgs {
    /**
     * Brand ID
     */
    brandId: string;
}

/**
 * A collection of values returned by getTemplates.
 */
export interface GetTemplatesResult {
    readonly brandId: string;
    /**
     * List of `okta.getTemplate` belonging to the brand
     */
    readonly emailTemplates: outputs.GetTemplatesEmailTemplate[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}

export function getTemplatesOutput(args: GetTemplatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTemplatesResult> {
    return pulumi.output(args).apply(a => getTemplates(a, opts))
}

/**
 * A collection of arguments for invoking getTemplates.
 */
export interface GetTemplatesOutputArgs {
    /**
     * Brand ID
     */
    brandId: pulumi.Input<string>;
}

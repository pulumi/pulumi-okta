// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RequestV2 extends pulumi.CustomResource {
    /**
     * Get an existing RequestV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RequestV2State, opts?: pulumi.CustomResourceOptions): RequestV2 {
        return new RequestV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:index/requestV2:RequestV2';

    /**
     * Returns true if the given object is an instance of RequestV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RequestV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RequestV2.__pulumiType;
    }

    /**
     * How long the requester retains access after their request is approved and fulfilled.
     */
    declare public /*out*/ readonly accessDuration: pulumi.Output<string>;
    /**
     * The ISO 8601 formatted date and time when the resource was created.
     */
    declare public /*out*/ readonly created: pulumi.Output<string>;
    /**
     * The user who created the resource.
     */
    declare public /*out*/ readonly createdBy: pulumi.Output<string>;
    /**
     * The status of the granted access request.
     */
    declare public /*out*/ readonly grantStatus: pulumi.Output<string>;
    /**
     * The date the approved access was granted. Only set if request.status is APPROVED.
     */
    declare public /*out*/ readonly granted: pulumi.Output<string>;
    /**
     * The ISO 8601 formatted date and time when the resource was last updated.
     */
    declare public /*out*/ readonly lastUpdated: pulumi.Output<string>;
    /**
     * The user who last updated the resource.
     */
    declare public /*out*/ readonly lastUpdatedBy: pulumi.Output<string>;
    /**
     * A representation of a resource that can be requested for access.
     */
    declare public readonly requested: pulumi.Output<outputs.RequestV2Requested | undefined>;
    /**
     * A representation of a principal.
     */
    declare public readonly requestedFor: pulumi.Output<outputs.RequestV2RequestedFor | undefined>;
    /**
     * The requester input fields required by the approval system.
     */
    declare public readonly requesterFieldValues: pulumi.Output<outputs.RequestV2RequesterFieldValue[] | undefined>;
    /**
     * The date the request was resolved.
     */
    declare public /*out*/ readonly resolved: pulumi.Output<string>;
    /**
     * The date the granted access is scheduled for revocation.
     */
    declare public /*out*/ readonly revocationScheduled: pulumi.Output<string>;
    /**
     * The revocation status of the request.
     */
    declare public /*out*/ readonly revocationStatus: pulumi.Output<string>;
    /**
     * The date the granted access was revoked.
     */
    declare public /*out*/ readonly revoked: pulumi.Output<string>;
    /**
     * The status of the request.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;

    /**
     * Create a RequestV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RequestV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RequestV2Args | RequestV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RequestV2State | undefined;
            resourceInputs["accessDuration"] = state?.accessDuration;
            resourceInputs["created"] = state?.created;
            resourceInputs["createdBy"] = state?.createdBy;
            resourceInputs["grantStatus"] = state?.grantStatus;
            resourceInputs["granted"] = state?.granted;
            resourceInputs["lastUpdated"] = state?.lastUpdated;
            resourceInputs["lastUpdatedBy"] = state?.lastUpdatedBy;
            resourceInputs["requested"] = state?.requested;
            resourceInputs["requestedFor"] = state?.requestedFor;
            resourceInputs["requesterFieldValues"] = state?.requesterFieldValues;
            resourceInputs["resolved"] = state?.resolved;
            resourceInputs["revocationScheduled"] = state?.revocationScheduled;
            resourceInputs["revocationStatus"] = state?.revocationStatus;
            resourceInputs["revoked"] = state?.revoked;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as RequestV2Args | undefined;
            resourceInputs["requested"] = args?.requested;
            resourceInputs["requestedFor"] = args?.requestedFor;
            resourceInputs["requesterFieldValues"] = args?.requesterFieldValues;
            resourceInputs["accessDuration"] = undefined /*out*/;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["grantStatus"] = undefined /*out*/;
            resourceInputs["granted"] = undefined /*out*/;
            resourceInputs["lastUpdated"] = undefined /*out*/;
            resourceInputs["lastUpdatedBy"] = undefined /*out*/;
            resourceInputs["resolved"] = undefined /*out*/;
            resourceInputs["revocationScheduled"] = undefined /*out*/;
            resourceInputs["revocationStatus"] = undefined /*out*/;
            resourceInputs["revoked"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RequestV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RequestV2 resources.
 */
export interface RequestV2State {
    /**
     * How long the requester retains access after their request is approved and fulfilled.
     */
    accessDuration?: pulumi.Input<string>;
    /**
     * The ISO 8601 formatted date and time when the resource was created.
     */
    created?: pulumi.Input<string>;
    /**
     * The user who created the resource.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The status of the granted access request.
     */
    grantStatus?: pulumi.Input<string>;
    /**
     * The date the approved access was granted. Only set if request.status is APPROVED.
     */
    granted?: pulumi.Input<string>;
    /**
     * The ISO 8601 formatted date and time when the resource was last updated.
     */
    lastUpdated?: pulumi.Input<string>;
    /**
     * The user who last updated the resource.
     */
    lastUpdatedBy?: pulumi.Input<string>;
    /**
     * A representation of a resource that can be requested for access.
     */
    requested?: pulumi.Input<inputs.RequestV2Requested>;
    /**
     * A representation of a principal.
     */
    requestedFor?: pulumi.Input<inputs.RequestV2RequestedFor>;
    /**
     * The requester input fields required by the approval system.
     */
    requesterFieldValues?: pulumi.Input<pulumi.Input<inputs.RequestV2RequesterFieldValue>[]>;
    /**
     * The date the request was resolved.
     */
    resolved?: pulumi.Input<string>;
    /**
     * The date the granted access is scheduled for revocation.
     */
    revocationScheduled?: pulumi.Input<string>;
    /**
     * The revocation status of the request.
     */
    revocationStatus?: pulumi.Input<string>;
    /**
     * The date the granted access was revoked.
     */
    revoked?: pulumi.Input<string>;
    /**
     * The status of the request.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RequestV2 resource.
 */
export interface RequestV2Args {
    /**
     * A representation of a resource that can be requested for access.
     */
    requested?: pulumi.Input<inputs.RequestV2Requested>;
    /**
     * A representation of a principal.
     */
    requestedFor?: pulumi.Input<inputs.RequestV2RequestedFor>;
    /**
     * The requester input fields required by the approval system.
     */
    requesterFieldValues?: pulumi.Input<pulumi.Input<inputs.RequestV2RequesterFieldValue>[]>;
}

// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configures default MFA Policy.
 * This resource allows you to configure default MFA Policy.
 * > Requires Org Feature Flag 'OKTA_MFA_POLICY'. Contact support to have this feature flag ***enabled***.
 * Unless Org Feature Flag 'ENG_ENABLE_OPTIONAL_PASSWORD_ENROLLMENT' is ***disabled*** 'okta_password' or 'okta_email' must be present and its 'enroll' value set to 'REQUIRED'. Contact support to have this feature flag ***disabled***.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const classicExample = new okta.PolicyMfaDefault("classic_example", {
 *     isOie: false,
 *     oktaPassword: {
 *         enroll: "REQUIRED",
 *     },
 *     oktaOtp: {
 *         enroll: "REQUIRED",
 *     },
 * });
 * const oieExample = new okta.PolicyMfaDefault("oie_example", {
 *     isOie: true,
 *     oktaPassword: {
 *         enroll: "REQUIRED",
 *     },
 *     oktaVerify: {
 *         enroll: "REQUIRED",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import okta:index/policyMfaDefault:PolicyMfaDefault example .
 * ```
 */
export class PolicyMfaDefault extends pulumi.CustomResource {
    /**
     * Get an existing PolicyMfaDefault resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyMfaDefaultState, opts?: pulumi.CustomResourceOptions): PolicyMfaDefault {
        return new PolicyMfaDefault(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:index/policyMfaDefault:PolicyMfaDefault';

    /**
     * Returns true if the given object is an instance of PolicyMfaDefault.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyMfaDefault {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyMfaDefault.__pulumiType;
    }

    /**
     * Default group ID (always included)
     */
    public /*out*/ readonly defaultIncludedGroupId!: pulumi.Output<string>;
    /**
     * Default policy description
     */
    public /*out*/ readonly description!: pulumi.Output<string>;
    public readonly duo!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * @deprecated Since okta now support multiple external_idps, this will be deprecated. Please use `externalIdps` instead
     */
    public readonly externalIdp!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly externalIdps!: pulumi.Output<{[key: string]: string}[] | undefined>;
    public readonly fidoU2f!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly fidoWebauthn!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly googleOtp!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly hotp!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Is the policy using Okta Identity Engine (OIE) with authenticators instead of factors?
     */
    public readonly isOie!: pulumi.Output<boolean | undefined>;
    /**
     * Default policy name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly oktaCall!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly oktaEmail!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly oktaOtp!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly oktaPassword!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly oktaPush!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly oktaQuestion!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly oktaSms!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly oktaVerify!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly onpremMfa!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly phoneNumber!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Default policy priority
     */
    public /*out*/ readonly priority!: pulumi.Output<number>;
    public readonly rsaToken!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly securityQuestion!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly smartCardIdp!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Default policy status
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly symantecVip!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly webauthn!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly yubikeyToken!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a PolicyMfaDefault resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PolicyMfaDefaultArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyMfaDefaultArgs | PolicyMfaDefaultState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyMfaDefaultState | undefined;
            resourceInputs["defaultIncludedGroupId"] = state ? state.defaultIncludedGroupId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["duo"] = state ? state.duo : undefined;
            resourceInputs["externalIdp"] = state ? state.externalIdp : undefined;
            resourceInputs["externalIdps"] = state ? state.externalIdps : undefined;
            resourceInputs["fidoU2f"] = state ? state.fidoU2f : undefined;
            resourceInputs["fidoWebauthn"] = state ? state.fidoWebauthn : undefined;
            resourceInputs["googleOtp"] = state ? state.googleOtp : undefined;
            resourceInputs["hotp"] = state ? state.hotp : undefined;
            resourceInputs["isOie"] = state ? state.isOie : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oktaCall"] = state ? state.oktaCall : undefined;
            resourceInputs["oktaEmail"] = state ? state.oktaEmail : undefined;
            resourceInputs["oktaOtp"] = state ? state.oktaOtp : undefined;
            resourceInputs["oktaPassword"] = state ? state.oktaPassword : undefined;
            resourceInputs["oktaPush"] = state ? state.oktaPush : undefined;
            resourceInputs["oktaQuestion"] = state ? state.oktaQuestion : undefined;
            resourceInputs["oktaSms"] = state ? state.oktaSms : undefined;
            resourceInputs["oktaVerify"] = state ? state.oktaVerify : undefined;
            resourceInputs["onpremMfa"] = state ? state.onpremMfa : undefined;
            resourceInputs["phoneNumber"] = state ? state.phoneNumber : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["rsaToken"] = state ? state.rsaToken : undefined;
            resourceInputs["securityQuestion"] = state ? state.securityQuestion : undefined;
            resourceInputs["smartCardIdp"] = state ? state.smartCardIdp : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["symantecVip"] = state ? state.symantecVip : undefined;
            resourceInputs["webauthn"] = state ? state.webauthn : undefined;
            resourceInputs["yubikeyToken"] = state ? state.yubikeyToken : undefined;
        } else {
            const args = argsOrState as PolicyMfaDefaultArgs | undefined;
            resourceInputs["duo"] = args ? args.duo : undefined;
            resourceInputs["externalIdp"] = args ? args.externalIdp : undefined;
            resourceInputs["externalIdps"] = args ? args.externalIdps : undefined;
            resourceInputs["fidoU2f"] = args ? args.fidoU2f : undefined;
            resourceInputs["fidoWebauthn"] = args ? args.fidoWebauthn : undefined;
            resourceInputs["googleOtp"] = args ? args.googleOtp : undefined;
            resourceInputs["hotp"] = args ? args.hotp : undefined;
            resourceInputs["isOie"] = args ? args.isOie : undefined;
            resourceInputs["oktaCall"] = args ? args.oktaCall : undefined;
            resourceInputs["oktaEmail"] = args ? args.oktaEmail : undefined;
            resourceInputs["oktaOtp"] = args ? args.oktaOtp : undefined;
            resourceInputs["oktaPassword"] = args ? args.oktaPassword : undefined;
            resourceInputs["oktaPush"] = args ? args.oktaPush : undefined;
            resourceInputs["oktaQuestion"] = args ? args.oktaQuestion : undefined;
            resourceInputs["oktaSms"] = args ? args.oktaSms : undefined;
            resourceInputs["oktaVerify"] = args ? args.oktaVerify : undefined;
            resourceInputs["onpremMfa"] = args ? args.onpremMfa : undefined;
            resourceInputs["phoneNumber"] = args ? args.phoneNumber : undefined;
            resourceInputs["rsaToken"] = args ? args.rsaToken : undefined;
            resourceInputs["securityQuestion"] = args ? args.securityQuestion : undefined;
            resourceInputs["smartCardIdp"] = args ? args.smartCardIdp : undefined;
            resourceInputs["symantecVip"] = args ? args.symantecVip : undefined;
            resourceInputs["webauthn"] = args ? args.webauthn : undefined;
            resourceInputs["yubikeyToken"] = args ? args.yubikeyToken : undefined;
            resourceInputs["defaultIncludedGroupId"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["priority"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyMfaDefault.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PolicyMfaDefault resources.
 */
export interface PolicyMfaDefaultState {
    /**
     * Default group ID (always included)
     */
    defaultIncludedGroupId?: pulumi.Input<string>;
    /**
     * Default policy description
     */
    description?: pulumi.Input<string>;
    duo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Since okta now support multiple external_idps, this will be deprecated. Please use `externalIdps` instead
     */
    externalIdp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    externalIdps?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
    fidoU2f?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    fidoWebauthn?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    googleOtp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hotp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Is the policy using Okta Identity Engine (OIE) with authenticators instead of factors?
     */
    isOie?: pulumi.Input<boolean>;
    /**
     * Default policy name
     */
    name?: pulumi.Input<string>;
    oktaCall?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaEmail?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaOtp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaPassword?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaPush?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaQuestion?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaSms?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaVerify?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    onpremMfa?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    phoneNumber?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Default policy priority
     */
    priority?: pulumi.Input<number>;
    rsaToken?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    securityQuestion?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    smartCardIdp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Default policy status
     */
    status?: pulumi.Input<string>;
    symantecVip?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    webauthn?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    yubikeyToken?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a PolicyMfaDefault resource.
 */
export interface PolicyMfaDefaultArgs {
    duo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Since okta now support multiple external_idps, this will be deprecated. Please use `externalIdps` instead
     */
    externalIdp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    externalIdps?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
    fidoU2f?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    fidoWebauthn?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    googleOtp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hotp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Is the policy using Okta Identity Engine (OIE) with authenticators instead of factors?
     */
    isOie?: pulumi.Input<boolean>;
    oktaCall?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaEmail?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaOtp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaPassword?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaPush?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaQuestion?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaSms?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaVerify?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    onpremMfa?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    phoneNumber?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    rsaToken?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    securityQuestion?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    smartCardIdp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    symantecVip?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    webauthn?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    yubikeyToken?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

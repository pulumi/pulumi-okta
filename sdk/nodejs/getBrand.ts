// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get a single Brand from Okta.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const test = okta.getBrands({});
 * const testGetBrand = test.then(test => okta.getBrand({
 *     brandId: test.brands?.[0]?.id,
 * }));
 * const _default = okta.getBrand({
 *     brandId: "default",
 * });
 * ```
 */
export function getBrand(args: GetBrandArgs, opts?: pulumi.InvokeOptions): Promise<GetBrandResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getBrand:getBrand", {
        "brandId": args.brandId,
    }, opts);
}

/**
 * A collection of arguments for invoking getBrand.
 */
export interface GetBrandArgs {
    /**
     * Brand ID
     */
    brandId: string;
}

/**
 * A collection of values returned by getBrand.
 */
export interface GetBrandResult {
    /**
     * Brand ID
     */
    readonly brandId: string;
    /**
     * Custom privacy policy URL
     */
    readonly customPrivacyPolicyUrl: string;
    /**
     * The ID of the Brand
     */
    readonly id: string;
    /**
     * Link relations for this object - JSON HAL - Discoverable resources related to the brand
     */
    readonly links: string;
    /**
     * Brand name
     */
    readonly name: string;
    /**
     * Removes "Powered by Okta" from the Okta-hosted sign-in page and "Â© 2021 Okta, Inc." from the Okta End-User Dashboard
     */
    readonly removePoweredByOkta: boolean;
}
/**
 * Get a single Brand from Okta.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const test = okta.getBrands({});
 * const testGetBrand = test.then(test => okta.getBrand({
 *     brandId: test.brands?.[0]?.id,
 * }));
 * const _default = okta.getBrand({
 *     brandId: "default",
 * });
 * ```
 */
export function getBrandOutput(args: GetBrandOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBrandResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("okta:index/getBrand:getBrand", {
        "brandId": args.brandId,
    }, opts);
}

/**
 * A collection of arguments for invoking getBrand.
 */
export interface GetBrandOutputArgs {
    /**
     * Brand ID
     */
    brandId: pulumi.Input<string>;
}

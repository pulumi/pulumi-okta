// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class LinkDefinition extends pulumi.CustomResource {
    /**
     * Get an existing LinkDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LinkDefinitionState, opts?: pulumi.CustomResourceOptions): LinkDefinition {
        return new LinkDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:index/linkDefinition:LinkDefinition';

    /**
     * Returns true if the given object is an instance of LinkDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LinkDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LinkDefinition.__pulumiType;
    }

    /**
     * Description of the associated relationship.
     */
    public readonly associatedDescription!: pulumi.Output<string>;
    /**
     * API name of the associated link.
     */
    public readonly associatedName!: pulumi.Output<string>;
    /**
     * Display name of the associated link.
     */
    public readonly associatedTitle!: pulumi.Output<string>;
    /**
     * Description of the primary relationship.
     */
    public readonly primaryDescription!: pulumi.Output<string>;
    /**
     * API name of the primary link.
     */
    public readonly primaryName!: pulumi.Output<string>;
    /**
     * Display name of the primary link.
     */
    public readonly primaryTitle!: pulumi.Output<string>;

    /**
     * Create a LinkDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LinkDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LinkDefinitionArgs | LinkDefinitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LinkDefinitionState | undefined;
            resourceInputs["associatedDescription"] = state ? state.associatedDescription : undefined;
            resourceInputs["associatedName"] = state ? state.associatedName : undefined;
            resourceInputs["associatedTitle"] = state ? state.associatedTitle : undefined;
            resourceInputs["primaryDescription"] = state ? state.primaryDescription : undefined;
            resourceInputs["primaryName"] = state ? state.primaryName : undefined;
            resourceInputs["primaryTitle"] = state ? state.primaryTitle : undefined;
        } else {
            const args = argsOrState as LinkDefinitionArgs | undefined;
            if ((!args || args.associatedDescription === undefined) && !opts.urn) {
                throw new Error("Missing required property 'associatedDescription'");
            }
            if ((!args || args.associatedName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'associatedName'");
            }
            if ((!args || args.associatedTitle === undefined) && !opts.urn) {
                throw new Error("Missing required property 'associatedTitle'");
            }
            if ((!args || args.primaryDescription === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primaryDescription'");
            }
            if ((!args || args.primaryName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primaryName'");
            }
            if ((!args || args.primaryTitle === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primaryTitle'");
            }
            resourceInputs["associatedDescription"] = args ? args.associatedDescription : undefined;
            resourceInputs["associatedName"] = args ? args.associatedName : undefined;
            resourceInputs["associatedTitle"] = args ? args.associatedTitle : undefined;
            resourceInputs["primaryDescription"] = args ? args.primaryDescription : undefined;
            resourceInputs["primaryName"] = args ? args.primaryName : undefined;
            resourceInputs["primaryTitle"] = args ? args.primaryTitle : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LinkDefinition.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LinkDefinition resources.
 */
export interface LinkDefinitionState {
    /**
     * Description of the associated relationship.
     */
    associatedDescription?: pulumi.Input<string>;
    /**
     * API name of the associated link.
     */
    associatedName?: pulumi.Input<string>;
    /**
     * Display name of the associated link.
     */
    associatedTitle?: pulumi.Input<string>;
    /**
     * Description of the primary relationship.
     */
    primaryDescription?: pulumi.Input<string>;
    /**
     * API name of the primary link.
     */
    primaryName?: pulumi.Input<string>;
    /**
     * Display name of the primary link.
     */
    primaryTitle?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LinkDefinition resource.
 */
export interface LinkDefinitionArgs {
    /**
     * Description of the associated relationship.
     */
    associatedDescription: pulumi.Input<string>;
    /**
     * API name of the associated link.
     */
    associatedName: pulumi.Input<string>;
    /**
     * Display name of the associated link.
     */
    associatedTitle: pulumi.Input<string>;
    /**
     * Description of the primary relationship.
     */
    primaryDescription: pulumi.Input<string>;
    /**
     * API name of the primary link.
     */
    primaryName: pulumi.Input<string>;
    /**
     * Display name of the primary link.
     */
    primaryTitle: pulumi.Input<string>;
}

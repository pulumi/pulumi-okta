// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve a log stream from Okta.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = okta.getLogStream({
 *     name: "Example Stream",
 * });
 * ```
 */
export function getLogStream(args?: GetLogStreamArgs, opts?: pulumi.InvokeOptions): Promise<GetLogStreamResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getLogStream:getLogStream", {
        "id": args.id,
        "name": args.name,
        "settings": args.settings,
    }, opts);
}

/**
 * A collection of arguments for invoking getLogStream.
 */
export interface GetLogStreamArgs {
    /**
     * ID of the log stream to retrieve, conflicts with `name`.
     */
    id?: string;
    /**
     * Name of the log stream to retrieve, conflicts with `id`.
     */
    name?: string;
    /**
     * Provider specific configuration.
     */
    settings?: inputs.GetLogStreamSettings;
}

/**
 * A collection of values returned by getLogStream.
 */
export interface GetLogStreamResult {
    /**
     * ID of the log stream.
     */
    readonly id?: string;
    /**
     * Name of the log stream.
     */
    readonly name?: string;
    /**
     * Provider specific configuration.
     */
    readonly settings?: outputs.GetLogStreamSettings;
    /**
     * Log Stream Status - can either be ACTIVE or INACTIVE only.
     */
    readonly status: string;
    /**
     * Type of the Log Stream.
     */
    readonly type: string;
}
/**
 * Use this data source to retrieve a log stream from Okta.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = okta.getLogStream({
 *     name: "Example Stream",
 * });
 * ```
 */
export function getLogStreamOutput(args?: GetLogStreamOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogStreamResult> {
    return pulumi.output(args).apply((a: any) => getLogStream(a, opts))
}

/**
 * A collection of arguments for invoking getLogStream.
 */
export interface GetLogStreamOutputArgs {
    /**
     * ID of the log stream to retrieve, conflicts with `name`.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the log stream to retrieve, conflicts with `id`.
     */
    name?: pulumi.Input<string>;
    /**
     * Provider specific configuration.
     */
    settings?: pulumi.Input<inputs.GetLogStreamSettingsArgs>;
}

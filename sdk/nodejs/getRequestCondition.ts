// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieves a resource request condition
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const test = okta.getRequestCondition({
 *     id: "<request_condition_id>",
 *     resourceId: "<resource_id>",
 * });
 * ```
 */
export function getRequestCondition(args: GetRequestConditionArgs, opts?: pulumi.InvokeOptions): Promise<GetRequestConditionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getRequestCondition:getRequestCondition", {
        "accessScopeSettings": args.accessScopeSettings,
        "id": args.id,
        "requesterSettings": args.requesterSettings,
        "resourceId": args.resourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRequestCondition.
 */
export interface GetRequestConditionArgs {
    accessScopeSettings?: inputs.GetRequestConditionAccessScopeSettings;
    /**
     * Request condition id.
     */
    id: string;
    requesterSettings?: inputs.GetRequestConditionRequesterSettings;
    /**
     * The id of the resource in Okta ID format.
     */
    resourceId: string;
}

/**
 * A collection of values returned by getRequestCondition.
 */
export interface GetRequestConditionResult {
    readonly accessScopeSettings?: outputs.GetRequestConditionAccessScopeSettings;
    /**
     * The date and time when the request condition was created.
     */
    readonly created: string;
    /**
     * The id of the user who created the request condition.
     */
    readonly createdBy: string;
    /**
     * Request condition id.
     */
    readonly id: string;
    /**
     * The date and time when the request condition was last updated.
     */
    readonly lastUpdated: string;
    /**
     * The id of the user who last updated the request condition.
     */
    readonly lastUpdatedBy: string;
    /**
     * The name of the request condition.
     */
    readonly name: string;
    /**
     * The priority of the request condition. Lower numbers indicate higher priority.
     */
    readonly priority: number;
    readonly requesterSettings?: outputs.GetRequestConditionRequesterSettings;
    /**
     * The id of the resource in Okta ID format.
     */
    readonly resourceId: string;
    /**
     * Status indicates if this condition is active or not. Default status is INACTIVE. Enum: `ACTIVE`, `INACTIVE`, `DELETED`, `INVALID`.
     */
    readonly status: string;
}
/**
 * Retrieves a resource request condition
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const test = okta.getRequestCondition({
 *     id: "<request_condition_id>",
 *     resourceId: "<resource_id>",
 * });
 * ```
 */
export function getRequestConditionOutput(args: GetRequestConditionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRequestConditionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("okta:index/getRequestCondition:getRequestCondition", {
        "accessScopeSettings": args.accessScopeSettings,
        "id": args.id,
        "requesterSettings": args.requesterSettings,
        "resourceId": args.resourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRequestCondition.
 */
export interface GetRequestConditionOutputArgs {
    accessScopeSettings?: pulumi.Input<inputs.GetRequestConditionAccessScopeSettingsArgs>;
    /**
     * Request condition id.
     */
    id: pulumi.Input<string>;
    requesterSettings?: pulumi.Input<inputs.GetRequestConditionRequesterSettingsArgs>;
    /**
     * The id of the resource in Okta ID format.
     */
    resourceId: pulumi.Input<string>;
}

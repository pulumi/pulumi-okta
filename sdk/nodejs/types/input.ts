// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AppGroupAssignmentsGroup {
    /**
     * A group to associate with the application
     */
    id: pulumi.Input<string>;
    /**
     * Priority of group assignment
     */
    priority?: pulumi.Input<number>;
    /**
     * JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)
     */
    profile: pulumi.Input<string>;
}

export interface AppSignonPolicyRulePlatformInclude {
    /**
     * Only available with OTHER OS type
     */
    osExpression?: pulumi.Input<string>;
    osType?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface AppUserSchemaPropertyArrayOneOf {
    /**
     * Value mapping to member of `arrayEnum`
     */
    const: pulumi.Input<string>;
    /**
     * Display name for the enum value.
     */
    title: pulumi.Input<string>;
}

export interface AppUserSchemaPropertyOneOf {
    /**
     * Enum value
     */
    const: pulumi.Input<string>;
    /**
     * Enum title
     */
    title: pulumi.Input<string>;
}

export interface CampaignNotificationSettings {
    /**
     * To indicate whether a notification should be sent to the reviewer when a given reviewer level period is about to end.
     */
    notifyReviewPeriodEnd: pulumi.Input<boolean>;
    /**
     * To indicate whether a notification should be sent to the reviewers when campaign has come to an end.
     */
    notifyReviewerAtCampaignEnd: pulumi.Input<boolean>;
    /**
     * To indicate whether a notification should be sent to the reviewer during the midpoint of the review process.
     */
    notifyReviewerDuringMidpointOfReview: pulumi.Input<boolean>;
    /**
     * To indicate whether a notification should be sent to the reviewer when the review is overdue.
     */
    notifyReviewerWhenOverdue: pulumi.Input<boolean>;
    /**
     * To indicate whether a notification should be sent to the reviewer when actionable reviews are assigned.
     */
    notifyReviewerWhenReviewAssigned: pulumi.Input<boolean>;
    /**
     * Specifies times (in seconds) to send reminders to reviewers before the campaign closes. Max 3 values. Example: [86400, 172800, 604800]
     */
    remindersReviewerBeforeCampaignCloseInSecs?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface CampaignPrincipalScopeSettings {
    /**
     * An array of Okta user IDs excluded from access certification or the campaign. This field is optional. A maximum of 50 users can be specified in the array.
     */
    excludedUserIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An array of Okta group IDs included from access certification or the campaign. userIds, groupIds or userScopeExpression is required if campaign type is USER. A maximum of 5 groups can be specified in the array.
     */
    groupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If set to true, only active Okta users are included in the campaign.
     */
    includeOnlyActiveUsers?: pulumi.Input<boolean>;
    /**
     * If set to true, only includes users that have at least one SOD conflict that was caused due to entitlement(s) within Campaign scope.
     */
    onlyIncludeUsersWithSodConflicts?: pulumi.Input<boolean>;
    predefinedInactiveUsersScopes?: pulumi.Input<pulumi.Input<inputs.CampaignPrincipalScopeSettingsPredefinedInactiveUsersScope>[]>;
    /**
     * Specifies the type for principal_scope_settings.
     */
    type: pulumi.Input<string>;
    /**
     * An array of Okta user IDs included from access certification or the campaign. userIds, groupIds or userScopeExpression is required if campaign type is USER. A maximum of 100 users can be specified in the array.
     */
    userIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Okta expression language user expression on the resourceSettings to include users in the campaign.
     */
    userScopeExpression?: pulumi.Input<string>;
}

export interface CampaignPrincipalScopeSettingsPredefinedInactiveUsersScope {
    /**
     * The duration the users have not used single sign on (SSO) to access their account within the specific time frame. Minimum 30 days and maximum 365 days are supported.
     */
    inactiveDays?: pulumi.Input<number>;
}

export interface CampaignRemediationSettings {
    /**
     * Specifies the action by default if the reviewer approves access. NO_ACTION indicates there is no remediation action and the user retains access.
     */
    accessApproved: pulumi.Input<string>;
    /**
     * Specifies the action if the reviewer revokes access. NO_ACTION indicates the user retains the same access. DENY indicates the user will have their access revoked as long as they are not assigned to a group through Group Rules.
     */
    accessRevoked: pulumi.Input<string>;
    autoRemediationSettings?: pulumi.Input<inputs.CampaignRemediationSettingsAutoRemediationSettings>;
    /**
     * Specifies the action if the reviewer doesn't respond to the request or if the campaign is closed before an action is taken.
     */
    noResponse: pulumi.Input<string>;
}

export interface CampaignRemediationSettingsAutoRemediationSettings {
    /**
     * If true, all indirect assignments will be included in the campaign. If false, only direct assignments will be included.
     */
    includeAllIndirectAssignments?: pulumi.Input<boolean>;
    includeOnlies?: pulumi.Input<pulumi.Input<inputs.CampaignRemediationSettingsAutoRemediationSettingsIncludeOnly>[]>;
}

export interface CampaignRemediationSettingsAutoRemediationSettingsIncludeOnly {
    /**
     * The ID of the resource to include in the campaign.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The type of the resource to include in the campaign. Valid values are 'APPLICATION', 'GROUP', 'ENTITLEMENT', 'ENTITLEMENT_BUNDLE'.
     */
    resourceType?: pulumi.Input<string>;
}

export interface CampaignResourceSettings {
    /**
     * An array of resources that are excluded from the review.
     */
    excludedResources?: pulumi.Input<pulumi.Input<inputs.CampaignResourceSettingsExcludedResource>[]>;
    /**
     * Include admin roles.
     */
    includeAdminRoles?: pulumi.Input<boolean>;
    /**
     * Include entitlements for this application. This property is only applicable if resourceType = APPLICATION and Entitlement Management is enabled.
     */
    includeEntitlements?: pulumi.Input<boolean>;
    /**
     * Only include individually assigned apps. This is only applicable if campaign type is USER.
     */
    individuallyAssignedAppsOnly?: pulumi.Input<boolean>;
    /**
     * Only include individually assigned groups. This is only applicable if campaign type is USER.
     */
    individuallyAssignedGroupsOnly?: pulumi.Input<boolean>;
    /**
     * Only include out-of-policy entitlements. Only applicable if resourceType = APPLICATION and Entitlement Management is enabled.
     */
    onlyIncludeOutOfPolicyEntitlements?: pulumi.Input<boolean>;
    /**
     * Represents a resource that will be part of Access certifications. If the app is enabled for Access Certifications, it's possible to review entitlements and entitlement bundles.
     */
    targetResources?: pulumi.Input<pulumi.Input<inputs.CampaignResourceSettingsTargetResource>[]>;
    /**
     * The type of Okta resource.
     */
    type: pulumi.Input<string>;
}

export interface CampaignResourceSettingsExcludedResource {
    /**
     * The ID of the resource to exclude in the campaign.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The type of resource to exclude in the campaign.
     */
    resourceType?: pulumi.Input<string>;
}

export interface CampaignResourceSettingsTargetResource {
    /**
     * An array of entitlement bundles for this application.
     */
    entitlementBundles?: pulumi.Input<pulumi.Input<inputs.CampaignResourceSettingsTargetResourceEntitlementBundle>[]>;
    /**
     * An array of entitlements associated with resourceId that should be chosen as target when creating reviews
     */
    entitlements?: pulumi.Input<pulumi.Input<inputs.CampaignResourceSettingsTargetResourceEntitlement>[]>;
    /**
     * Include all entitlements and entitlement bundles for this application. Only applicable if the resourcetype = APPLICATION and Entitlement Management is enabled.
     */
    includeAllEntitlementsAndBundles?: pulumi.Input<boolean>;
    /**
     * The resource ID that is being reviewed.
     */
    resourceId: pulumi.Input<string>;
    /**
     * The type of Okta resource.
     */
    resourceType: pulumi.Input<string>;
}

export interface CampaignResourceSettingsTargetResourceEntitlement {
    /**
     * Campaign id
     */
    id: pulumi.Input<string>;
    /**
     * Whether to include all entitlement values. If false we must provide the values property.
     */
    includeAllValues?: pulumi.Input<boolean>;
    values?: pulumi.Input<pulumi.Input<inputs.CampaignResourceSettingsTargetResourceEntitlementValue>[]>;
}

export interface CampaignResourceSettingsTargetResourceEntitlementBundle {
    /**
     * Campaign id
     */
    id: pulumi.Input<string>;
}

export interface CampaignResourceSettingsTargetResourceEntitlementValue {
    /**
     * Campaign id
     */
    id: pulumi.Input<string>;
}

export interface CampaignReviewerSettings {
    /**
     * When approving or revoking review items, bulk actions are disabled if true.
     */
    bulkDecisionDisabled?: pulumi.Input<boolean>;
    /**
     * The ID of the fallback reviewer. Required when the type=`REVIEWER_EXPRESSION` or type=`RESOURCE_OWNER`
     */
    fallbackReviewerId?: pulumi.Input<string>;
    /**
     * When approving or revoking review items, a justification is required if true.
     */
    justificationRequired?: pulumi.Input<boolean>;
    /**
     * Reassignment is disabled for reviewers if true.
     */
    reassignmentDisabled?: pulumi.Input<boolean>;
    /**
     * The ID of the reviewer group to which the reviewer is assigned.
     */
    reviewerGroupId?: pulumi.Input<string>;
    reviewerId?: pulumi.Input<string>;
    /**
     * Definition of reviewer level for a given campaign. Each reviewer level defines the kind of reviewer who is going to review.
     */
    reviewerLevels?: pulumi.Input<pulumi.Input<inputs.CampaignReviewerSettingsReviewerLevel>[]>;
    /**
     * This property is required when type=`USER`
     */
    reviewerScopeExpression?: pulumi.Input<string>;
    /**
     * This property is required to be true for resource-centric campaigns when the Okta Admin Console is one of the resources.
     */
    selfReviewDisabled?: pulumi.Input<boolean>;
    /**
     * Identifies the kind of reviewer for Access Certification.
     */
    type: pulumi.Input<string>;
}

export interface CampaignReviewerSettingsReviewerLevel {
    /**
     * Required when the type=`REVIEWER_EXPRESSION` or type=`RESOURCE_OWNER`
     */
    fallbackReviewerId?: pulumi.Input<string>;
    /**
     * The ID of the reviewer group to which the reviewer is assigned.This property is required when type=`GROUP`
     */
    reviewerGroupId?: pulumi.Input<string>;
    /**
     * The ID of the reviewer to which the reviewer is assigned.This property is required when type=`USER`.
     */
    reviewerId?: pulumi.Input<string>;
    /**
     * This property is required when type=`REVIEWER_EXPRESSION`
     */
    reviewerScopeExpression?: pulumi.Input<string>;
    /**
     * This property is used to prevent self review.
     */
    selfReviewDisabled?: pulumi.Input<boolean>;
    /**
     * The rules for which the reviews can move to that level.
     */
    startReviews?: pulumi.Input<pulumi.Input<inputs.CampaignReviewerSettingsReviewerLevelStartReview>[]>;
    /**
     * Identifies the kind of reviewer.
     */
    type: pulumi.Input<string>;
}

export interface CampaignReviewerSettingsReviewerLevelStartReview {
    /**
     * The day of the campaign when the review starts. 0 means the first day of the campaign.
     */
    onDay?: pulumi.Input<number>;
    /**
     * The condition for which, the lower level reviews will move to that level for further review.
     */
    when?: pulumi.Input<string>;
}

export interface CampaignScheduleSettings {
    /**
     * The duration (in days) that the campaign is active.
     */
    durationInDays: pulumi.Input<number>;
    endDate?: pulumi.Input<string>;
    recurrences?: pulumi.Input<pulumi.Input<inputs.CampaignScheduleSettingsRecurrence>[]>;
    /**
     * The date on which the campaign is supposed to start. Accepts date in ISO 8601 format.
     */
    startDate: pulumi.Input<string>;
    /**
     * The time zone in which the campaign is active.
     */
    timeZone: pulumi.Input<string>;
    /**
     * The type of campaign being scheduled.
     */
    type: pulumi.Input<string>;
}

export interface CampaignScheduleSettingsRecurrence {
    /**
     * Specifies when the recurring schedule can have an end.
     */
    ends?: pulumi.Input<string>;
    /**
     * Recurrence interval specified according to ISO8061 notation for durations.
     */
    interval: pulumi.Input<string>;
    /**
     * Specifies when the recurring schedule can have an end.
     */
    repeatOnType?: pulumi.Input<string>;
}

export interface CustomizedSigninPageContentSecurityPolicySetting {
    /**
     * enforced or report_only
     */
    mode?: pulumi.Input<string>;
    reportUri?: pulumi.Input<string>;
    srcLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CustomizedSigninPageWidgetCustomizations {
    authenticatorPageCustomLinkLabel?: pulumi.Input<string>;
    authenticatorPageCustomLinkUrl?: pulumi.Input<string>;
    classicRecoveryFlowEmailOrUsernameLabel?: pulumi.Input<string>;
    customLink1Label?: pulumi.Input<string>;
    customLink1Url?: pulumi.Input<string>;
    customLink2Label?: pulumi.Input<string>;
    customLink2Url?: pulumi.Input<string>;
    forgotPasswordLabel?: pulumi.Input<string>;
    forgotPasswordUrl?: pulumi.Input<string>;
    helpLabel?: pulumi.Input<string>;
    helpUrl?: pulumi.Input<string>;
    passwordInfoTip?: pulumi.Input<string>;
    passwordLabel?: pulumi.Input<string>;
    showPasswordVisibilityToggle?: pulumi.Input<boolean>;
    showUserIdentifier?: pulumi.Input<boolean>;
    signInLabel?: pulumi.Input<string>;
    unlockAccountLabel?: pulumi.Input<string>;
    unlockAccountUrl?: pulumi.Input<string>;
    usernameInfoTip?: pulumi.Input<string>;
    usernameLabel?: pulumi.Input<string>;
    widgetGeneration: pulumi.Input<string>;
}

export interface DomainDnsRecord {
    /**
     * TXT record expiration
     */
    expiration?: pulumi.Input<string>;
    /**
     * DNS record name
     */
    fqdn?: pulumi.Input<string>;
    /**
     * Record type can be TXT or CNAME
     */
    recordType?: pulumi.Input<string>;
    /**
     * DNS verification value
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EmailDomainDnsValidationRecord {
    /**
     * DNS TXT record expiration
     *
     * @deprecated This field has been removed in the newest go sdk version and has become noop
     */
    expiration?: pulumi.Input<string>;
    /**
     * DNS record name
     */
    fqdn?: pulumi.Input<string>;
    /**
     * Record type can be TXT or cname
     */
    recordType?: pulumi.Input<string>;
    /**
     * DNS record value
     */
    value?: pulumi.Input<string>;
}

export interface EmailSenderDnsRecord {
    /**
     * DNS record name
     */
    fqdn?: pulumi.Input<string>;
    /**
     * Record type can be TXT or CNAME
     */
    recordType?: pulumi.Input<string>;
    /**
     * DNS verification value
     */
    value?: pulumi.Input<string>;
}

export interface EndUserMyRequestsRequesterFieldValue {
    /**
     * The ID of a requesterField. This identifies the specific field in the approval system.
     */
    id: pulumi.Input<string>;
    /**
     * A human-readable description of requesterField. It's used for display purposes and is optional.
     */
    label?: pulumi.Input<string>;
    /**
     * Type of value for the requester field. Valid values: `DURATION`, `ISO_DATE`, `MULTISELECT`, `OKTA_USER_ID`, `SELECT`, `TEXT`.
     */
    type?: pulumi.Input<string>;
    /**
     * The value of requesterField, which depends on the type of the field. Used for single-value fields.
     */
    value?: pulumi.Input<string>;
    /**
     * The values of requesterField with the type MULTISELECT. If the field type is MULTISELECT, this property is required instead of `value`.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EntitlementBundleEntitlement {
    /**
     * The ID of the entitlement.
     */
    id: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.EntitlementBundleEntitlementValue>[]>;
}

export interface EntitlementBundleEntitlementValue {
    /**
     * The ID of the entitlement value.
     */
    id: pulumi.Input<string>;
}

export interface EntitlementBundleTarget {
    /**
     * The Okta app ID of the resource.
     */
    externalId: pulumi.Input<string>;
    /**
     * The type of resource.
     */
    type: pulumi.Input<string>;
}

export interface EntitlementParent {
    /**
     * The Okta app ID of the resource.
     */
    externalId: pulumi.Input<string>;
    /**
     * The type of resource.
     */
    type: pulumi.Input<string>;
}

export interface EntitlementValue {
    /**
     * The description of an entitlement value.
     */
    description?: pulumi.Input<string>;
    /**
     * The value of an entitlement property value.
     */
    externalValue?: pulumi.Input<string>;
    /**
     * Collection of entitlement values.
     */
    id?: pulumi.Input<string>;
    /**
     * The display name for an entitlement value.
     */
    name?: pulumi.Input<string>;
}

export interface EventHookHeader {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface FeatureStage {
    state: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetCampaignNotificationSettings {
    notifyReviewPeriodEnd?: boolean;
    notifyReviewerAtCampaignEnd?: boolean;
    notifyReviewerDuringMidpointOfReview?: boolean;
    notifyReviewerWhenOverdue?: boolean;
    notifyReviewerWhenReviewAssigned?: boolean;
    remindersReviewerBeforeCampaignCloseInSecs?: number[];
}

export interface GetCampaignNotificationSettingsArgs {
    notifyReviewPeriodEnd?: pulumi.Input<boolean>;
    notifyReviewerAtCampaignEnd?: pulumi.Input<boolean>;
    notifyReviewerDuringMidpointOfReview?: pulumi.Input<boolean>;
    notifyReviewerWhenOverdue?: pulumi.Input<boolean>;
    notifyReviewerWhenReviewAssigned?: pulumi.Input<boolean>;
    remindersReviewerBeforeCampaignCloseInSecs?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface GetCampaignPrincipalScopeSettings {
    excludedUserIds?: string[];
    groupIds?: string[];
    includeOnlyActiveUsers?: boolean;
    onlyIncludeUsersWithSodConflicts?: boolean;
    predefinedInactiveUsersScopes?: inputs.GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScope[];
    type?: string;
    userIds?: string[];
    userScopeExpression?: string;
}

export interface GetCampaignPrincipalScopeSettingsArgs {
    excludedUserIds?: pulumi.Input<pulumi.Input<string>[]>;
    groupIds?: pulumi.Input<pulumi.Input<string>[]>;
    includeOnlyActiveUsers?: pulumi.Input<boolean>;
    onlyIncludeUsersWithSodConflicts?: pulumi.Input<boolean>;
    predefinedInactiveUsersScopes?: pulumi.Input<pulumi.Input<inputs.GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScopeArgs>[]>;
    type?: pulumi.Input<string>;
    userIds?: pulumi.Input<pulumi.Input<string>[]>;
    userScopeExpression?: pulumi.Input<string>;
}

export interface GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScope {
    inactiveDays?: number;
}

export interface GetCampaignPrincipalScopeSettingsPredefinedInactiveUsersScopeArgs {
    inactiveDays?: pulumi.Input<number>;
}

export interface GetCampaignRemediationSettings {
    /**
     * Specifies the action by default if the reviewer approves access. NO_ACTION indicates there is no remediation action and the user retains access.
     */
    accessApproved?: string;
    /**
     * Specifies the action if the reviewer revokes access. NO_ACTION indicates the user retains the same access. DENY indicates the user will have their access revoked as long as they are not assigned to a group through Group Rules.
     */
    accessRevoked?: string;
    autoRemediationSettings?: inputs.GetCampaignRemediationSettingsAutoRemediationSettings;
    /**
     * Specifies the action if the reviewer doesn't respond to the request.
     */
    noResponse?: string;
}

export interface GetCampaignRemediationSettingsArgs {
    /**
     * Specifies the action by default if the reviewer approves access. NO_ACTION indicates there is no remediation action and the user retains access.
     */
    accessApproved?: pulumi.Input<string>;
    /**
     * Specifies the action if the reviewer revokes access. NO_ACTION indicates the user retains the same access. DENY indicates the user will have their access revoked as long as they are not assigned to a group through Group Rules.
     */
    accessRevoked?: pulumi.Input<string>;
    autoRemediationSettings?: pulumi.Input<inputs.GetCampaignRemediationSettingsAutoRemediationSettingsArgs>;
    /**
     * Specifies the action if the reviewer doesn't respond to the request.
     */
    noResponse?: pulumi.Input<string>;
}

export interface GetCampaignRemediationSettingsAutoRemediationSettings {
    /**
     * When a group is selected to be automatically remediated.
     */
    includeAllIndirectAssignments?: boolean;
    /**
     * An array of resources to be automatically remediated.
     */
    includeOnlies?: inputs.GetCampaignRemediationSettingsAutoRemediationSettingsIncludeOnly[];
}

export interface GetCampaignRemediationSettingsAutoRemediationSettingsArgs {
    /**
     * When a group is selected to be automatically remediated.
     */
    includeAllIndirectAssignments?: pulumi.Input<boolean>;
    /**
     * An array of resources to be automatically remediated.
     */
    includeOnlies?: pulumi.Input<pulumi.Input<inputs.GetCampaignRemediationSettingsAutoRemediationSettingsIncludeOnlyArgs>[]>;
}

export interface GetCampaignRemediationSettingsAutoRemediationSettingsIncludeOnly {
    /**
     * The resource ID of the target resource When type = GROUP, it will point to the group ID.
     */
    resourceId: string;
    /**
     * The type of the resource to be automatically remediated. Only GROUP is supported.
     */
    resourceType: string;
}

export interface GetCampaignRemediationSettingsAutoRemediationSettingsIncludeOnlyArgs {
    /**
     * The resource ID of the target resource When type = GROUP, it will point to the group ID.
     */
    resourceId: pulumi.Input<string>;
    /**
     * The type of the resource to be automatically remediated. Only GROUP is supported.
     */
    resourceType: pulumi.Input<string>;
}

export interface GetCampaignResourceSettings {
    /**
     * An array of resources that are excluded from the review.
     */
    excludedResources?: inputs.GetCampaignResourceSettingsExcludedResource[];
    /**
     * Include admin roles.
     */
    includeAdminRoles?: boolean;
    /**
     * Include entitlements for this application.
     */
    includeEntitlements?: boolean;
    /**
     * Only include individually assigned groups.
     */
    individuallyAssignedAppsOnly?: boolean;
    /**
     * Only include individually assigned groups.
     */
    individuallyAssignedGroupsOnly?: boolean;
    /**
     * Only include out-of-policy entitlements.
     */
    onlyIncludeOutOfPolicyEntitlements?: boolean;
    /**
     * Represents a resource that will be part of Access certifications.
     */
    targetResources?: inputs.GetCampaignResourceSettingsTargetResource[];
    /**
     * The type of Okta resource.
     */
    type?: string;
}

export interface GetCampaignResourceSettingsArgs {
    /**
     * An array of resources that are excluded from the review.
     */
    excludedResources?: pulumi.Input<pulumi.Input<inputs.GetCampaignResourceSettingsExcludedResourceArgs>[]>;
    /**
     * Include admin roles.
     */
    includeAdminRoles?: pulumi.Input<boolean>;
    /**
     * Include entitlements for this application.
     */
    includeEntitlements?: pulumi.Input<boolean>;
    /**
     * Only include individually assigned groups.
     */
    individuallyAssignedAppsOnly?: pulumi.Input<boolean>;
    /**
     * Only include individually assigned groups.
     */
    individuallyAssignedGroupsOnly?: pulumi.Input<boolean>;
    /**
     * Only include out-of-policy entitlements.
     */
    onlyIncludeOutOfPolicyEntitlements?: pulumi.Input<boolean>;
    /**
     * Represents a resource that will be part of Access certifications.
     */
    targetResources?: pulumi.Input<pulumi.Input<inputs.GetCampaignResourceSettingsTargetResourceArgs>[]>;
    /**
     * The type of Okta resource.
     */
    type?: pulumi.Input<string>;
}

export interface GetCampaignResourceSettingsExcludedResource {
    /**
     * Okta specific resource ID.
     */
    resourceId?: string;
    /**
     * The type of Okta resource.
     */
    resourceType?: string;
}

export interface GetCampaignResourceSettingsExcludedResourceArgs {
    /**
     * Okta specific resource ID.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The type of Okta resource.
     */
    resourceType?: pulumi.Input<string>;
}

export interface GetCampaignResourceSettingsTargetResource {
    /**
     * An array of entitlement bundles associated with resourceId that should be chosen as target when creating reviews.
     */
    entitlementBundles?: inputs.GetCampaignResourceSettingsTargetResourceEntitlementBundle[];
    entitlements?: inputs.GetCampaignResourceSettingsTargetResourceEntitlement[];
    /**
     * Include all entitlements and entitlement bundles for this application.
     */
    includeAllEntitlementsAndBundles?: boolean;
    /**
     * The resource ID that is being reviewed.
     */
    resourceId: string;
    /**
     * The type of Okta resource.
     */
    resourceType?: string;
}

export interface GetCampaignResourceSettingsTargetResourceArgs {
    /**
     * An array of entitlement bundles associated with resourceId that should be chosen as target when creating reviews.
     */
    entitlementBundles?: pulumi.Input<pulumi.Input<inputs.GetCampaignResourceSettingsTargetResourceEntitlementBundleArgs>[]>;
    entitlements?: pulumi.Input<pulumi.Input<inputs.GetCampaignResourceSettingsTargetResourceEntitlementArgs>[]>;
    /**
     * Include all entitlements and entitlement bundles for this application.
     */
    includeAllEntitlementsAndBundles?: pulumi.Input<boolean>;
    /**
     * The resource ID that is being reviewed.
     */
    resourceId: pulumi.Input<string>;
    /**
     * The type of Okta resource.
     */
    resourceType?: pulumi.Input<string>;
}

export interface GetCampaignResourceSettingsTargetResourceEntitlement {
    /**
     * The ID of this resource.
     */
    id: string;
    /**
     * Whether to include all values for this entitlement.
     */
    includeAllValues?: boolean;
    /**
     * Entitlement value ids
     */
    values?: inputs.GetCampaignResourceSettingsTargetResourceEntitlementValue[];
}

export interface GetCampaignResourceSettingsTargetResourceEntitlementArgs {
    /**
     * The ID of this resource.
     */
    id: pulumi.Input<string>;
    /**
     * Whether to include all values for this entitlement.
     */
    includeAllValues?: pulumi.Input<boolean>;
    /**
     * Entitlement value ids
     */
    values?: pulumi.Input<pulumi.Input<inputs.GetCampaignResourceSettingsTargetResourceEntitlementValueArgs>[]>;
}

export interface GetCampaignResourceSettingsTargetResourceEntitlementBundle {
    /**
     * The ID of this resource.
     */
    id: string;
}

export interface GetCampaignResourceSettingsTargetResourceEntitlementBundleArgs {
    /**
     * The ID of this resource.
     */
    id: pulumi.Input<string>;
}

export interface GetCampaignResourceSettingsTargetResourceEntitlementValue {
    /**
     * The ID of this resource.
     */
    id: string;
}

export interface GetCampaignResourceSettingsTargetResourceEntitlementValueArgs {
    /**
     * The ID of this resource.
     */
    id: pulumi.Input<string>;
}

export interface GetCampaignReviewerSettings {
    bulkDecisionDisabled?: boolean;
    fallbackReviewerId?: string;
    justificationRequired?: boolean;
    reassignmentDisabled?: boolean;
    reviewerGroupId?: string;
    reviewerId?: string;
    reviewerLevels?: inputs.GetCampaignReviewerSettingsReviewerLevel[];
    reviewerScopeExpression?: string;
    selfReviewDisabled?: boolean;
    type?: string;
}

export interface GetCampaignReviewerSettingsArgs {
    bulkDecisionDisabled?: pulumi.Input<boolean>;
    fallbackReviewerId?: pulumi.Input<string>;
    justificationRequired?: pulumi.Input<boolean>;
    reassignmentDisabled?: pulumi.Input<boolean>;
    reviewerGroupId?: pulumi.Input<string>;
    reviewerId?: pulumi.Input<string>;
    reviewerLevels?: pulumi.Input<pulumi.Input<inputs.GetCampaignReviewerSettingsReviewerLevelArgs>[]>;
    reviewerScopeExpression?: pulumi.Input<string>;
    selfReviewDisabled?: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
}

export interface GetCampaignReviewerSettingsReviewerLevel {
    fallbackReviewerId?: string;
    reviewerGroupId?: string;
    reviewerId?: string;
    reviewerScopeExpression?: string;
    selfReviewDisabled?: boolean;
    startReviews?: inputs.GetCampaignReviewerSettingsReviewerLevelStartReview[];
    type?: string;
}

export interface GetCampaignReviewerSettingsReviewerLevelArgs {
    fallbackReviewerId?: pulumi.Input<string>;
    reviewerGroupId?: pulumi.Input<string>;
    reviewerId?: pulumi.Input<string>;
    reviewerScopeExpression?: pulumi.Input<string>;
    selfReviewDisabled?: pulumi.Input<boolean>;
    startReviews?: pulumi.Input<pulumi.Input<inputs.GetCampaignReviewerSettingsReviewerLevelStartReviewArgs>[]>;
    type?: pulumi.Input<string>;
}

export interface GetCampaignReviewerSettingsReviewerLevelStartReview {
    onDay?: number;
    when?: string;
}

export interface GetCampaignReviewerSettingsReviewerLevelStartReviewArgs {
    onDay?: pulumi.Input<number>;
    when?: pulumi.Input<string>;
}

export interface GetCampaignScheduleSettings {
    durationInDays?: number;
    endDate?: string;
    recurrences?: inputs.GetCampaignScheduleSettingsRecurrence[];
    startDate?: string;
    timeZone?: string;
    type?: string;
}

export interface GetCampaignScheduleSettingsArgs {
    durationInDays?: pulumi.Input<number>;
    endDate?: pulumi.Input<string>;
    recurrences?: pulumi.Input<pulumi.Input<inputs.GetCampaignScheduleSettingsRecurrenceArgs>[]>;
    startDate?: pulumi.Input<string>;
    timeZone?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface GetCampaignScheduleSettingsRecurrence {
    ends?: string;
    interval?: string;
    repeatOnType?: string;
}

export interface GetCampaignScheduleSettingsRecurrenceArgs {
    ends?: pulumi.Input<string>;
    interval?: pulumi.Input<string>;
    repeatOnType?: pulumi.Input<string>;
}

export interface GetCatalogEntryDefaultCounts {
    /**
     * Collection resource counts.
     */
    resourceCounts?: inputs.GetCatalogEntryDefaultCountsResourceCounts;
}

export interface GetCatalogEntryDefaultCountsArgs {
    /**
     * Collection resource counts.
     */
    resourceCounts?: pulumi.Input<inputs.GetCatalogEntryDefaultCountsResourceCountsArgs>;
}

export interface GetCatalogEntryDefaultCountsResourceCounts {
    /**
     * Number of app resources in a collection.
     */
    applications?: number;
}

export interface GetCatalogEntryDefaultCountsResourceCountsArgs {
    /**
     * Number of app resources in a collection.
     */
    applications?: pulumi.Input<number>;
}

export interface GetCatalogEntryDefaultLinks {
    /**
     * A link to the catalog entry itself.
     */
    self?: inputs.GetCatalogEntryDefaultLinksSelf;
}

export interface GetCatalogEntryDefaultLinksArgs {
    /**
     * A link to the catalog entry itself.
     */
    self?: pulumi.Input<inputs.GetCatalogEntryDefaultLinksSelfArgs>;
}

export interface GetCatalogEntryDefaultLinksSelf {
    /**
     * Contains the absolute API URL for retrieving this catalog entry resource.
     */
    href?: string;
}

export interface GetCatalogEntryDefaultLinksSelfArgs {
    /**
     * Contains the absolute API URL for retrieving this catalog entry resource.
     */
    href?: pulumi.Input<string>;
}

export interface GetCatalogEntryUserAccessRequestFieldsData {
    /**
     * Valid choices when type is SELECT or MULTISELECT.
     */
    choices?: inputs.GetCatalogEntryUserAccessRequestFieldsDataChoice[];
    id?: string;
    /**
     * Label of the requester field.
     */
    label?: string;
    /**
     * The maximum value allowed for this field. Only applies to DURATION fields.
     */
    maximumValue?: string;
    /**
     * Indicates this field is immutable.
     */
    readOnly?: boolean;
    /**
     * Indicates whether a value to this field is required to advance the request.
     */
    required?: boolean;
    /**
     * Type of value for the requester field.
     */
    type?: string;
    /**
     * An admin configured value for this field. Only applies to DURATION fields.
     */
    value?: string;
}

export interface GetCatalogEntryUserAccessRequestFieldsDataArgs {
    /**
     * Valid choices when type is SELECT or MULTISELECT.
     */
    choices?: pulumi.Input<pulumi.Input<inputs.GetCatalogEntryUserAccessRequestFieldsDataChoiceArgs>[]>;
    id?: pulumi.Input<string>;
    /**
     * Label of the requester field.
     */
    label?: pulumi.Input<string>;
    /**
     * The maximum value allowed for this field. Only applies to DURATION fields.
     */
    maximumValue?: pulumi.Input<string>;
    /**
     * Indicates this field is immutable.
     */
    readOnly?: pulumi.Input<boolean>;
    /**
     * Indicates whether a value to this field is required to advance the request.
     */
    required?: pulumi.Input<boolean>;
    /**
     * Type of value for the requester field.
     */
    type?: pulumi.Input<string>;
    /**
     * An admin configured value for this field. Only applies to DURATION fields.
     */
    value?: pulumi.Input<string>;
}

export interface GetCatalogEntryUserAccessRequestFieldsDataChoice {
    /**
     * Valid choice.
     */
    choice?: string;
}

export interface GetCatalogEntryUserAccessRequestFieldsDataChoiceArgs {
    /**
     * Valid choice.
     */
    choice?: pulumi.Input<string>;
}

export interface GetDefaultSigninPageContentSecurityPolicySetting {
    /**
     * enforced or report_only
     */
    mode?: string;
    reportUri?: string;
    srcLists?: string[];
}

export interface GetDefaultSigninPageContentSecurityPolicySettingArgs {
    /**
     * enforced or report_only
     */
    mode?: pulumi.Input<string>;
    reportUri?: pulumi.Input<string>;
    srcLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDefaultSigninPageWidgetCustomizations {
    authenticatorPageCustomLinkLabel?: string;
    authenticatorPageCustomLinkUrl?: string;
    classicRecoveryFlowEmailOrUsernameLabel?: string;
    customLink1Label?: string;
    customLink1Url?: string;
    customLink2Label?: string;
    customLink2Url?: string;
    forgotPasswordLabel?: string;
    forgotPasswordUrl?: string;
    helpLabel?: string;
    helpUrl?: string;
    passwordInfoTip?: string;
    passwordLabel?: string;
    showPasswordVisibilityToggle?: boolean;
    showUserIdentifier?: boolean;
    signInLabel?: string;
    unlockAccountLabel?: string;
    unlockAccountUrl?: string;
    usernameInfoTip?: string;
    usernameLabel?: string;
    widgetGeneration?: string;
}

export interface GetDefaultSigninPageWidgetCustomizationsArgs {
    authenticatorPageCustomLinkLabel?: pulumi.Input<string>;
    authenticatorPageCustomLinkUrl?: pulumi.Input<string>;
    classicRecoveryFlowEmailOrUsernameLabel?: pulumi.Input<string>;
    customLink1Label?: pulumi.Input<string>;
    customLink1Url?: pulumi.Input<string>;
    customLink2Label?: pulumi.Input<string>;
    customLink2Url?: pulumi.Input<string>;
    forgotPasswordLabel?: pulumi.Input<string>;
    forgotPasswordUrl?: pulumi.Input<string>;
    helpLabel?: pulumi.Input<string>;
    helpUrl?: pulumi.Input<string>;
    passwordInfoTip?: pulumi.Input<string>;
    passwordLabel?: pulumi.Input<string>;
    showPasswordVisibilityToggle?: pulumi.Input<boolean>;
    showUserIdentifier?: pulumi.Input<boolean>;
    signInLabel?: pulumi.Input<string>;
    unlockAccountLabel?: pulumi.Input<string>;
    unlockAccountUrl?: pulumi.Input<string>;
    usernameInfoTip?: pulumi.Input<string>;
    usernameLabel?: pulumi.Input<string>;
    widgetGeneration?: pulumi.Input<string>;
}

export interface GetDeviceAssurancePolicyThirdPartySignalProvider {
    dtc: inputs.GetDeviceAssurancePolicyThirdPartySignalProviderDtc;
}

export interface GetDeviceAssurancePolicyThirdPartySignalProviderArgs {
    dtc: pulumi.Input<inputs.GetDeviceAssurancePolicyThirdPartySignalProviderDtcArgs>;
}

export interface GetDeviceAssurancePolicyThirdPartySignalProviderDtc {
    allowScreenLock: boolean;
    browserVersion: inputs.GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion;
    builtInDnsClientEnabled: boolean;
    chromeRemoteDesktopAppBlocked: boolean;
    crowdStrikeAgentId: string;
    crowdStrikeCustomerId: string;
    deviceEnrollmentDomain: string;
    diskEncrypted: boolean;
    keyTrustLevel: string;
    managedDevice: boolean;
    osFirewall: boolean;
    osVersion: inputs.GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersion;
    passwordProtectionWarningTrigger: string;
    realtimeUrlCheckMode: boolean;
    safeBrowsingProtectionLevel: string;
    screenLockSecured: boolean;
    siteIsolationEnabled: boolean;
    thirdPartyBlockingEnabled: boolean;
    windowsMachineDomain: string;
    windowsUserDomain: string;
}

export interface GetDeviceAssurancePolicyThirdPartySignalProviderDtcArgs {
    allowScreenLock: pulumi.Input<boolean>;
    browserVersion: pulumi.Input<inputs.GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs>;
    builtInDnsClientEnabled: pulumi.Input<boolean>;
    chromeRemoteDesktopAppBlocked: pulumi.Input<boolean>;
    crowdStrikeAgentId: pulumi.Input<string>;
    crowdStrikeCustomerId: pulumi.Input<string>;
    deviceEnrollmentDomain: pulumi.Input<string>;
    diskEncrypted: pulumi.Input<boolean>;
    keyTrustLevel: pulumi.Input<string>;
    managedDevice: pulumi.Input<boolean>;
    osFirewall: pulumi.Input<boolean>;
    osVersion: pulumi.Input<inputs.GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs>;
    passwordProtectionWarningTrigger: pulumi.Input<string>;
    realtimeUrlCheckMode: pulumi.Input<boolean>;
    safeBrowsingProtectionLevel: pulumi.Input<string>;
    screenLockSecured: pulumi.Input<boolean>;
    siteIsolationEnabled: pulumi.Input<boolean>;
    thirdPartyBlockingEnabled: pulumi.Input<boolean>;
    windowsMachineDomain: pulumi.Input<string>;
    windowsUserDomain: pulumi.Input<string>;
}

export interface GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion {
    minimum: string;
}

export interface GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs {
    minimum: pulumi.Input<string>;
}

export interface GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersion {
    minimum: string;
}

export interface GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs {
    minimum: pulumi.Input<string>;
}

export interface GetEndUserMyRequestsRequested {
    /**
     * ID of the access scope
     */
    accessScopeId?: string;
    /**
     * The access scope type
     */
    accessScopeType?: string;
    /**
     * The ID of the catalog entry for which the request was made.
     */
    entryId?: string;
    /**
     * The requested resource ID
     */
    resourceId?: string;
    /**
     * The requested resource type.
     */
    resourceType?: string;
}

export interface GetEndUserMyRequestsRequestedArgs {
    /**
     * ID of the access scope
     */
    accessScopeId?: pulumi.Input<string>;
    /**
     * The access scope type
     */
    accessScopeType?: pulumi.Input<string>;
    /**
     * The ID of the catalog entry for which the request was made.
     */
    entryId?: pulumi.Input<string>;
    /**
     * The requested resource ID
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The requested resource type.
     */
    resourceType?: pulumi.Input<string>;
}

export interface GetEndUserMyRequestsRequestedBy {
    /**
     * The Okta user id
     */
    externalId?: string;
    /**
     * The type of principal
     */
    type?: string;
}

export interface GetEndUserMyRequestsRequestedByArgs {
    /**
     * The Okta user id
     */
    externalId?: pulumi.Input<string>;
    /**
     * The type of principal
     */
    type?: pulumi.Input<string>;
}

export interface GetEndUserMyRequestsRequestedFor {
    /**
     * The Okta user id
     */
    externalId?: string;
    /**
     * The type of principal
     */
    type?: string;
}

export interface GetEndUserMyRequestsRequestedForArgs {
    /**
     * The Okta user id
     */
    externalId?: pulumi.Input<string>;
    /**
     * The type of principal
     */
    type?: pulumi.Input<string>;
}

export interface GetEndUserMyRequestsRequesterFieldValue {
    /**
     * The ID of the requester field.
     */
    id: string;
    /**
     * A human-readable description of the requester field.
     */
    label?: string;
    /**
     * Type of value for the requester field. Valid values: `DURATION`, `ISO_DATE`, `MULTISELECT`, `OKTA_USER_ID`, `SELECT`, `TEXT`.
     */
    type?: string;
    /**
     * The value of the requester field (for single-value fields).
     */
    value?: string;
    /**
     * The values of the requester field (for MULTISELECT type fields).
     */
    values?: string[];
}

export interface GetEndUserMyRequestsRequesterFieldValueArgs {
    /**
     * The ID of the requester field.
     */
    id: pulumi.Input<string>;
    /**
     * A human-readable description of the requester field.
     */
    label?: pulumi.Input<string>;
    /**
     * Type of value for the requester field. Valid values: `DURATION`, `ISO_DATE`, `MULTISELECT`, `OKTA_USER_ID`, `SELECT`, `TEXT`.
     */
    type?: pulumi.Input<string>;
    /**
     * The value of the requester field (for single-value fields).
     */
    value?: pulumi.Input<string>;
    /**
     * The values of the requester field (for MULTISELECT type fields).
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetEndUserMyRequestsRiskAssessment {
    /**
     * Whether request submission is allowed or restricted in the risk settings.
     */
    requestSubmissionType?: string;
    /**
     * An array of resources that are excluded from the review.
     */
    riskRules?: inputs.GetEndUserMyRequestsRiskAssessmentRiskRule[];
}

export interface GetEndUserMyRequestsRiskAssessmentArgs {
    /**
     * Whether request submission is allowed or restricted in the risk settings.
     */
    requestSubmissionType?: pulumi.Input<string>;
    /**
     * An array of resources that are excluded from the review.
     */
    riskRules?: pulumi.Input<pulumi.Input<inputs.GetEndUserMyRequestsRiskAssessmentRiskRuleArgs>[]>;
}

export interface GetEndUserMyRequestsRiskAssessmentRiskRule {
    /**
     * The human readable description.
     */
    description?: string;
    /**
     * The name of a resource rule causing a conflict.
     */
    name?: string;
    /**
     * Human readable name of the resource.
     */
    resourceName?: string;
}

export interface GetEndUserMyRequestsRiskAssessmentRiskRuleArgs {
    /**
     * The human readable description.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of a resource rule causing a conflict.
     */
    name?: pulumi.Input<string>;
    /**
     * Human readable name of the resource.
     */
    resourceName?: pulumi.Input<string>;
}

export interface GetEntitlementBundleEntitlement {
    /**
     * The data type of the entitlement property.
     */
    dataType?: string;
    /**
     * The description of an entitlement property.
     */
    description?: string;
    /**
     * The value of an entitlement property.
     */
    externalValue?: string;
    /**
     * The ID of this resource.
     */
    id?: string;
    /**
     * The property that determines if the entitlement property can hold multiple values.
     */
    multiValue?: boolean;
    /**
     * The display name for an entitlement bundle.
     */
    name?: string;
    /**
     * The property that determines if the entitlement property is a required attribute.
     */
    required?: boolean;
    values?: inputs.GetEntitlementBundleEntitlementValue[];
}

export interface GetEntitlementBundleEntitlementArgs {
    /**
     * The data type of the entitlement property.
     */
    dataType?: pulumi.Input<string>;
    /**
     * The description of an entitlement property.
     */
    description?: pulumi.Input<string>;
    /**
     * The value of an entitlement property.
     */
    externalValue?: pulumi.Input<string>;
    /**
     * The ID of this resource.
     */
    id?: pulumi.Input<string>;
    /**
     * The property that determines if the entitlement property can hold multiple values.
     */
    multiValue?: pulumi.Input<boolean>;
    /**
     * The display name for an entitlement bundle.
     */
    name?: pulumi.Input<string>;
    /**
     * The property that determines if the entitlement property is a required attribute.
     */
    required?: pulumi.Input<boolean>;
    values?: pulumi.Input<pulumi.Input<inputs.GetEntitlementBundleEntitlementValueArgs>[]>;
}

export interface GetEntitlementBundleEntitlementValue {
    /**
     * The description of an entitlement property.
     */
    description?: string;
    /**
     * The read-only id of an entitlement property value in the downstream application.
     */
    externalId?: string;
    /**
     * The value of an entitlement property value.
     */
    externalValue?: string;
    /**
     * The ID of this resource.
     */
    id?: string;
    /**
     * The display name for an entitlement bundle.
     */
    name?: string;
}

export interface GetEntitlementBundleEntitlementValueArgs {
    /**
     * The description of an entitlement property.
     */
    description?: pulumi.Input<string>;
    /**
     * The read-only id of an entitlement property value in the downstream application.
     */
    externalId?: pulumi.Input<string>;
    /**
     * The value of an entitlement property value.
     */
    externalValue?: pulumi.Input<string>;
    /**
     * The ID of this resource.
     */
    id?: pulumi.Input<string>;
    /**
     * The display name for an entitlement bundle.
     */
    name?: pulumi.Input<string>;
}

export interface GetEntitlementBundleTarget {
    /**
     * The Okta app.id of the resource.
     */
    externalId?: string;
    /**
     * The type of the resource.
     */
    type?: string;
}

export interface GetEntitlementBundleTargetArgs {
    /**
     * The Okta app.id of the resource.
     */
    externalId?: pulumi.Input<string>;
    /**
     * The type of the resource.
     */
    type?: pulumi.Input<string>;
}

export interface GetEntitlementParent {
    /**
     * The Okta app.id of the resource.
     */
    externalId?: string;
    /**
     * The type of resource.
     */
    type?: string;
}

export interface GetEntitlementParentArgs {
    /**
     * The Okta app.id of the resource.
     */
    externalId?: pulumi.Input<string>;
    /**
     * The type of resource.
     */
    type?: pulumi.Input<string>;
}

export interface GetEntitlementValue {
    /**
     * The description of an entitlement value.
     */
    description?: string;
    /**
     * The id of the entitlement value.
     */
    externalId?: string;
    /**
     * The value of an entitlement property value.
     */
    externalValue?: string;
    /**
     * The ID of this resource.
     */
    id?: string;
    /**
     * The name of the entitlement value.
     */
    name?: string;
}

export interface GetEntitlementValueArgs {
    /**
     * The description of an entitlement value.
     */
    description?: pulumi.Input<string>;
    /**
     * The id of the entitlement value.
     */
    externalId?: pulumi.Input<string>;
    /**
     * The value of an entitlement property value.
     */
    externalValue?: pulumi.Input<string>;
    /**
     * The ID of this resource.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the entitlement value.
     */
    name?: pulumi.Input<string>;
}

export interface GetLogStreamSettings {
    /**
     * AWS account ID. Required only for 'aws_eventbridge' type
     */
    accountId?: string;
    /**
     * Edition of the Splunk Cloud instance. Could be one of: 'aws', 'aws*govcloud', 'gcp'. Required only for 'splunk*cloud_logstreaming' type
     */
    edition?: string;
    /**
     * An alphanumeric name (no spaces) to identify this event source in AWS EventBridge. Required only for 'aws_eventbridge' type
     */
    eventSourceName?: string;
    /**
     * The domain name for Splunk Cloud instance. Don't include http or https in the string. For example: 'acme.splunkcloud.com'. Required only for 'splunk*cloud*logstreaming' type
     */
    host?: string;
    /**
     * The destination AWS region where event source is located. Required only for 'aws_eventbridge' type
     */
    region?: string;
    /**
     * The HEC token for your Splunk Cloud HTTP Event Collector. Required only for 'splunk*cloud*logstreaming' type
     */
    token?: string;
}

export interface GetLogStreamSettingsArgs {
    /**
     * AWS account ID. Required only for 'aws_eventbridge' type
     */
    accountId?: pulumi.Input<string>;
    /**
     * Edition of the Splunk Cloud instance. Could be one of: 'aws', 'aws*govcloud', 'gcp'. Required only for 'splunk*cloud_logstreaming' type
     */
    edition?: pulumi.Input<string>;
    /**
     * An alphanumeric name (no spaces) to identify this event source in AWS EventBridge. Required only for 'aws_eventbridge' type
     */
    eventSourceName?: pulumi.Input<string>;
    /**
     * The domain name for Splunk Cloud instance. Don't include http or https in the string. For example: 'acme.splunkcloud.com'. Required only for 'splunk*cloud*logstreaming' type
     */
    host?: pulumi.Input<string>;
    /**
     * The destination AWS region where event source is located. Required only for 'aws_eventbridge' type
     */
    region?: pulumi.Input<string>;
    /**
     * The HEC token for your Splunk Cloud HTTP Event Collector. Required only for 'splunk*cloud*logstreaming' type
     */
    token?: pulumi.Input<string>;
}

export interface GetOrgMetadataDomains {
    /**
     * Custom Domain Org URI
     */
    alternate?: string;
    /**
     * Standard Org URI
     */
    organization?: string;
}

export interface GetOrgMetadataDomainsArgs {
    /**
     * Custom Domain Org URI
     */
    alternate?: pulumi.Input<string>;
    /**
     * Standard Org URI
     */
    organization?: pulumi.Input<string>;
}

export interface GetOrgMetadataSettings {
    analyticsCollectionEnabled?: boolean;
    bugReportingEnabled?: boolean;
    /**
     * Whether the legacy Okta Mobile application is enabled for the org
     */
    omEnabled?: boolean;
}

export interface GetOrgMetadataSettingsArgs {
    analyticsCollectionEnabled?: pulumi.Input<boolean>;
    bugReportingEnabled?: pulumi.Input<boolean>;
    /**
     * Whether the legacy Okta Mobile application is enabled for the org
     */
    omEnabled?: pulumi.Input<boolean>;
}

export interface GetPrincipalEntitlementsData {
    /**
     * The data type of the entitlement property.
     */
    dataType?: string;
    /**
     * The description of an entitlement property.
     */
    description?: string;
    /**
     * The value of an entitlement property.
     */
    externalValue?: string;
    /**
     * The id property of an entitlement.
     */
    id?: string;
    /**
     * The property that determines if the entitlement property can hold multiple values.
     */
    multiValue?: boolean;
    /**
     * The display name for an entitlement property.
     */
    name?: string;
    /**
     * Representation of a resource.
     */
    parent?: inputs.GetPrincipalEntitlementsDataParent;
    /**
     * The Okta app instance, in ORN format.
     */
    parentResourceOrn?: string;
    /**
     * The property that determines if the entitlement property is a required attribute
     */
    required?: boolean;
    /**
     * Representation of a principal.
     */
    targetPrincipal?: inputs.GetPrincipalEntitlementsDataTargetPrincipal;
    /**
     * The Okta user id in ORN format.
     */
    targetPrincipalOrn?: string;
    /**
     * Collection of entitlement values.
     */
    values?: inputs.GetPrincipalEntitlementsDataValue[];
}

export interface GetPrincipalEntitlementsDataArgs {
    /**
     * The data type of the entitlement property.
     */
    dataType?: pulumi.Input<string>;
    /**
     * The description of an entitlement property.
     */
    description?: pulumi.Input<string>;
    /**
     * The value of an entitlement property.
     */
    externalValue?: pulumi.Input<string>;
    /**
     * The id property of an entitlement.
     */
    id?: pulumi.Input<string>;
    /**
     * The property that determines if the entitlement property can hold multiple values.
     */
    multiValue?: pulumi.Input<boolean>;
    /**
     * The display name for an entitlement property.
     */
    name?: pulumi.Input<string>;
    /**
     * Representation of a resource.
     */
    parent?: pulumi.Input<inputs.GetPrincipalEntitlementsDataParentArgs>;
    /**
     * The Okta app instance, in ORN format.
     */
    parentResourceOrn?: pulumi.Input<string>;
    /**
     * The property that determines if the entitlement property is a required attribute
     */
    required?: pulumi.Input<boolean>;
    /**
     * Representation of a principal.
     */
    targetPrincipal?: pulumi.Input<inputs.GetPrincipalEntitlementsDataTargetPrincipalArgs>;
    /**
     * The Okta user id in ORN format.
     */
    targetPrincipalOrn?: pulumi.Input<string>;
    /**
     * Collection of entitlement values.
     */
    values?: pulumi.Input<pulumi.Input<inputs.GetPrincipalEntitlementsDataValueArgs>[]>;
}

export interface GetPrincipalEntitlementsDataParent {
    /**
     * The Okta id of the resource.
     */
    externalId?: string;
    /**
     * The type of the resource.
     */
    type?: string;
}

export interface GetPrincipalEntitlementsDataParentArgs {
    /**
     * The Okta id of the resource.
     */
    externalId?: pulumi.Input<string>;
    /**
     * The type of the resource.
     */
    type?: pulumi.Input<string>;
}

export interface GetPrincipalEntitlementsDataTargetPrincipal {
    /**
     * The Okta user id.
     */
    externalId?: string;
    /**
     * The type of principal.
     */
    type?: string;
}

export interface GetPrincipalEntitlementsDataTargetPrincipalArgs {
    /**
     * The Okta user id.
     */
    externalId?: pulumi.Input<string>;
    /**
     * The type of principal.
     */
    type?: pulumi.Input<string>;
}

export interface GetPrincipalEntitlementsDataValue {
    /**
     * The description of an entitlement property.
     */
    description?: string;
    /**
     * The value of an entitlement property value.
     */
    externalValue?: string;
    /**
     * The id of an entitlement value.
     */
    id?: string;
    /**
     * The name of an entitlement value.
     */
    name?: string;
}

export interface GetPrincipalEntitlementsDataValueArgs {
    /**
     * The description of an entitlement property.
     */
    description?: pulumi.Input<string>;
    /**
     * The value of an entitlement property value.
     */
    externalValue?: pulumi.Input<string>;
    /**
     * The id of an entitlement value.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of an entitlement value.
     */
    name?: pulumi.Input<string>;
}

export interface GetPrincipalEntitlementsParent {
    externalId: string;
    type: string;
}

export interface GetPrincipalEntitlementsParentArgs {
    externalId: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GetPrincipalEntitlementsTargetPrincipal {
    externalId: string;
    type: string;
}

export interface GetPrincipalEntitlementsTargetPrincipalArgs {
    externalId: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GetRequestConditionAccessScopeSettings {
    /**
     * List of groups/entitlement bundles.
     */
    ids?: inputs.GetRequestConditionAccessScopeSettingsId[];
    type?: string;
}

export interface GetRequestConditionAccessScopeSettingsArgs {
    /**
     * List of groups/entitlement bundles.
     */
    ids?: pulumi.Input<pulumi.Input<inputs.GetRequestConditionAccessScopeSettingsIdArgs>[]>;
    type?: pulumi.Input<string>;
}

export interface GetRequestConditionAccessScopeSettingsId {
    /**
     * Request condition id.
     */
    id?: string;
}

export interface GetRequestConditionAccessScopeSettingsIdArgs {
    /**
     * Request condition id.
     */
    id?: pulumi.Input<string>;
}

export interface GetRequestConditionRequesterSettings {
    /**
     * List of teams/groups ids.
     */
    ids?: inputs.GetRequestConditionRequesterSettingsId[];
    type?: string;
}

export interface GetRequestConditionRequesterSettingsArgs {
    /**
     * List of teams/groups ids.
     */
    ids?: pulumi.Input<pulumi.Input<inputs.GetRequestConditionRequesterSettingsIdArgs>[]>;
    type?: pulumi.Input<string>;
}

export interface GetRequestConditionRequesterSettingsId {
    /**
     * Request condition id.
     */
    id?: string;
}

export interface GetRequestConditionRequesterSettingsIdArgs {
    /**
     * Request condition id.
     */
    id?: pulumi.Input<string>;
}

export interface GetRequestSettingOrganizationRequestExperience {
    experienceType?: string;
}

export interface GetRequestSettingOrganizationRequestExperienceArgs {
    experienceType?: pulumi.Input<string>;
}

export interface GetRequestSettingResourceRequestOnBehalfOfSettings {
    allowed?: boolean;
    onlyFors?: inputs.GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor[];
}

export interface GetRequestSettingResourceRequestOnBehalfOfSettingsArgs {
    allowed?: pulumi.Input<boolean>;
    onlyFors?: pulumi.Input<pulumi.Input<inputs.GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs>[]>;
}

export interface GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyFor {
    type?: string;
}

export interface GetRequestSettingResourceRequestOnBehalfOfSettingsOnlyForArgs {
    type?: pulumi.Input<string>;
}

export interface GetRequestSettingResourceRiskSettings {
    /**
     * Default risk settings that are valid for an access request when a risk has been detected for the resource and requesting user.
     */
    defaultSetting?: inputs.GetRequestSettingResourceRiskSettingsDefaultSetting;
}

export interface GetRequestSettingResourceRiskSettingsArgs {
    /**
     * Default risk settings that are valid for an access request when a risk has been detected for the resource and requesting user.
     */
    defaultSetting?: pulumi.Input<inputs.GetRequestSettingResourceRiskSettingsDefaultSettingArgs>;
}

export interface GetRequestSettingResourceRiskSettingsDefaultSetting {
    accessDurationSettings?: inputs.GetRequestSettingResourceRiskSettingsDefaultSettingAccessDurationSettings;
    approvalSequenceId?: string;
    errors?: string[];
    requestSubmissionType?: string;
}

export interface GetRequestSettingResourceRiskSettingsDefaultSettingArgs {
    accessDurationSettings?: pulumi.Input<inputs.GetRequestSettingResourceRiskSettingsDefaultSettingAccessDurationSettingsArgs>;
    approvalSequenceId?: pulumi.Input<string>;
    errors?: pulumi.Input<pulumi.Input<string>[]>;
    requestSubmissionType?: pulumi.Input<string>;
}

export interface GetRequestSettingResourceRiskSettingsDefaultSettingAccessDurationSettings {
    duration?: string;
    type?: string;
}

export interface GetRequestSettingResourceRiskSettingsDefaultSettingAccessDurationSettingsArgs {
    duration?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface GetRequestSettingResourceValidAccessDurationSettings {
    /**
     * The maximum value allowed for a request condition or risk setting.
     */
    maximumDays?: number;
    /**
     * The maximum value allowed for a request condition or risk setting.
     */
    maximumHours?: number;
    /**
     * The maximum value allowed for a request condition or risk setting.
     */
    maximumWeeks?: number;
    /**
     * Whether accessDurationSetting must be included in the request conditions or risk settings for the specified resource.
     */
    required?: boolean;
    /**
     * Access duration settings that are eligible to be added to a request condition or risk settings for the specified resource.
     */
    supportedTypes?: inputs.GetRequestSettingResourceValidAccessDurationSettingsSupportedType[];
}

export interface GetRequestSettingResourceValidAccessDurationSettingsArgs {
    /**
     * The maximum value allowed for a request condition or risk setting.
     */
    maximumDays?: pulumi.Input<number>;
    /**
     * The maximum value allowed for a request condition or risk setting.
     */
    maximumHours?: pulumi.Input<number>;
    /**
     * The maximum value allowed for a request condition or risk setting.
     */
    maximumWeeks?: pulumi.Input<number>;
    /**
     * Whether accessDurationSetting must be included in the request conditions or risk settings for the specified resource.
     */
    required?: pulumi.Input<boolean>;
    /**
     * Access duration settings that are eligible to be added to a request condition or risk settings for the specified resource.
     */
    supportedTypes?: pulumi.Input<pulumi.Input<inputs.GetRequestSettingResourceValidAccessDurationSettingsSupportedTypeArgs>[]>;
}

export interface GetRequestSettingResourceValidAccessDurationSettingsSupportedType {
    type?: string;
}

export interface GetRequestSettingResourceValidAccessDurationSettingsSupportedTypeArgs {
    type?: pulumi.Input<string>;
}

export interface GetRequestSettingResourceValidAccessScopeSetting {
    type?: string;
}

export interface GetRequestSettingResourceValidAccessScopeSettingArgs {
    type?: pulumi.Input<string>;
}

export interface GetRequestSettingResourceValidRequesterSetting {
    type?: string;
}

export interface GetRequestSettingResourceValidRequesterSettingArgs {
    type?: pulumi.Input<string>;
}

export interface GetRequestV2Requested {
    /**
     * The ID of the access scope associated with the resource.
     */
    accessScopeId?: string;
    /**
     * The access scope type.
     */
    accessScopeType?: string;
    /**
     * The ID of the resource catalog entry.
     */
    entryId?: string;
    /**
     * The ID of the requested resource.
     */
    resourceId?: string;
    /**
     * The requested resource type.
     */
    resourceType?: string;
    /**
     * The type of the resource.
     */
    type?: string;
}

export interface GetRequestV2RequestedArgs {
    /**
     * The ID of the access scope associated with the resource.
     */
    accessScopeId?: pulumi.Input<string>;
    /**
     * The access scope type.
     */
    accessScopeType?: pulumi.Input<string>;
    /**
     * The ID of the resource catalog entry.
     */
    entryId?: pulumi.Input<string>;
    /**
     * The ID of the requested resource.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The requested resource type.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * The type of the resource.
     */
    type?: pulumi.Input<string>;
}

export interface GetRequestV2RequestedBy {
    /**
     * The Okta user id.
     */
    externalId?: string;
    /**
     * The type of principal.
     */
    type?: string;
}

export interface GetRequestV2RequestedByArgs {
    /**
     * The Okta user id.
     */
    externalId?: pulumi.Input<string>;
    /**
     * The type of principal.
     */
    type?: pulumi.Input<string>;
}

export interface GetRequestV2RequestedFor {
    /**
     * The ID of the Okta user.
     */
    externalId?: string;
    /**
     * The type of principal.
     */
    type?: string;
}

export interface GetRequestV2RequestedForArgs {
    /**
     * The ID of the Okta user.
     */
    externalId?: pulumi.Input<string>;
    /**
     * The type of principal.
     */
    type?: pulumi.Input<string>;
}

export interface GetReviewAllReviewerLevel {
    /**
     * The ISO 8601 formatted date and time when the resource was created.
     */
    created?: string;
    /**
     * The id of user who created the resource.
     */
    createdBy?: string;
    /**
     * The decision taken by the reviewer. Will be `UNASSIGNED` if no decision is made.
     */
    decision?: string;
    /**
     * The ID of  review.
     */
    id?: string;
    /**
     * The ISO 8601 formatted date and time when the object was last updated.
     */
    lastUpdated?: string;
    /**
     * The id of user who last updated the object.
     */
    lastUpdatedBy?: string;
    reviewerGroupProfile?: inputs.GetReviewAllReviewerLevelReviewerGroupProfile;
    reviewerLevel?: string;
    reviewerProfile?: inputs.GetReviewAllReviewerLevelReviewerProfile;
    /**
     * The type of reviewer to which the review is assigned.
     */
    reviewerType?: string;
}

export interface GetReviewAllReviewerLevelArgs {
    /**
     * The ISO 8601 formatted date and time when the resource was created.
     */
    created?: pulumi.Input<string>;
    /**
     * The id of user who created the resource.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The decision taken by the reviewer. Will be `UNASSIGNED` if no decision is made.
     */
    decision?: pulumi.Input<string>;
    /**
     * The ID of  review.
     */
    id?: pulumi.Input<string>;
    /**
     * The ISO 8601 formatted date and time when the object was last updated.
     */
    lastUpdated?: pulumi.Input<string>;
    /**
     * The id of user who last updated the object.
     */
    lastUpdatedBy?: pulumi.Input<string>;
    reviewerGroupProfile?: pulumi.Input<inputs.GetReviewAllReviewerLevelReviewerGroupProfileArgs>;
    reviewerLevel?: pulumi.Input<string>;
    reviewerProfile?: pulumi.Input<inputs.GetReviewAllReviewerLevelReviewerProfileArgs>;
    /**
     * The type of reviewer to which the review is assigned.
     */
    reviewerType?: pulumi.Input<string>;
}

export interface GetReviewAllReviewerLevelReviewerGroupProfile {
    globalName?: string;
    groupId?: string;
    groupType?: string;
    name?: string;
}

export interface GetReviewAllReviewerLevelReviewerGroupProfileArgs {
    globalName?: pulumi.Input<string>;
    groupId?: pulumi.Input<string>;
    groupType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface GetReviewAllReviewerLevelReviewerProfile {
    email?: string;
    firstName?: string;
    /**
     * The ID of  review.
     */
    id?: string;
    lastName?: string;
    status?: string;
}

export interface GetReviewAllReviewerLevelReviewerProfileArgs {
    email?: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    /**
     * The ID of  review.
     */
    id?: pulumi.Input<string>;
    lastName?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

export interface GetReviewEntitlementBundle {
    /**
     * The ID of  review.
     */
    id?: string;
    name?: string;
}

export interface GetReviewEntitlementBundleArgs {
    /**
     * The ID of  review.
     */
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface GetReviewEntitlementValue {
    /**
     * The ID of  review.
     */
    id?: string;
    name?: string;
}

export interface GetReviewEntitlementValueArgs {
    /**
     * The ID of  review.
     */
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface GetReviewLinks {
    reassignReviewHref?: string;
    selfHref?: string;
}

export interface GetReviewLinksArgs {
    reassignReviewHref?: pulumi.Input<string>;
    selfHref?: pulumi.Input<string>;
}

export interface GetReviewNote {
    /**
     * The ID of  review.
     */
    id?: string;
    note?: string;
}

export interface GetReviewNoteArgs {
    /**
     * The ID of  review.
     */
    id?: pulumi.Input<string>;
    note?: pulumi.Input<string>;
}

export interface GetReviewPrincipalProfile {
    email?: string;
    firstName?: string;
    /**
     * The ID of  review.
     */
    id?: string;
    lastName?: string;
    login?: string;
    status?: string;
}

export interface GetReviewPrincipalProfileArgs {
    email?: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    /**
     * The ID of  review.
     */
    id?: pulumi.Input<string>;
    lastName?: pulumi.Input<string>;
    login?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

export interface GetReviewReviewerProfile {
    email?: string;
    firstName?: string;
    /**
     * The ID of  review.
     */
    id?: string;
    lastName?: string;
    login?: string;
    status?: string;
}

export interface GetReviewReviewerProfileArgs {
    email?: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    /**
     * The ID of  review.
     */
    id?: pulumi.Input<string>;
    lastName?: pulumi.Input<string>;
    login?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

export interface GroupSchemaPropertyArrayOneOf {
    /**
     * Value mapping to member of `arrayEnum`
     */
    const: pulumi.Input<string>;
    /**
     * Display name for the enum value.
     */
    title: pulumi.Input<string>;
}

export interface GroupSchemaPropertyMasterOverridePriority {
    type?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GroupSchemaPropertyOneOf {
    /**
     * Enum value
     */
    const: pulumi.Input<string>;
    /**
     * Enum title
     */
    title: pulumi.Input<string>;
}

export interface LogStreamSettings {
    /**
     * AWS account ID. Required only for 'aws_eventbridge' type
     */
    accountId?: pulumi.Input<string>;
    /**
     * Edition of the Splunk Cloud instance. Could be one of: 'aws', 'aws*govcloud', 'gcp'. Required only for 'splunk*cloud_logstreaming' type
     */
    edition?: pulumi.Input<string>;
    /**
     * An alphanumeric name (no spaces) to identify this event source in AWS EventBridge. Required only for 'aws_eventbridge' type
     */
    eventSourceName?: pulumi.Input<string>;
    /**
     * The domain name for Splunk Cloud instance. Don't include http or https in the string. For example: 'acme.splunkcloud.com'. Required only for 'splunk*cloud*logstreaming' type
     */
    host?: pulumi.Input<string>;
    /**
     * The destination AWS region where event source is located. Required only for 'aws_eventbridge' type
     */
    region?: pulumi.Input<string>;
    /**
     * The HEC token for your Splunk Cloud HTTP Event Collector. Required only for 'splunk*cloud*logstreaming' type
     */
    token?: pulumi.Input<string>;
}

export interface PolicyRuleProfileEnrollmentProfileAttribute {
    /**
     * A display-friendly label for this property
     */
    label: pulumi.Input<string>;
    /**
     * The name of a User Profile property
     */
    name: pulumi.Input<string>;
    /**
     * Indicates if this property is required for enrollment
     */
    required?: pulumi.Input<boolean>;
}

export interface PreviewSigninPageContentSecurityPolicySetting {
    /**
     * enforced or report_only
     */
    mode?: pulumi.Input<string>;
    reportUri?: pulumi.Input<string>;
    srcLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PreviewSigninPageWidgetCustomizations {
    authenticatorPageCustomLinkLabel?: pulumi.Input<string>;
    authenticatorPageCustomLinkUrl?: pulumi.Input<string>;
    classicRecoveryFlowEmailOrUsernameLabel?: pulumi.Input<string>;
    customLink1Label?: pulumi.Input<string>;
    customLink1Url?: pulumi.Input<string>;
    customLink2Label?: pulumi.Input<string>;
    customLink2Url?: pulumi.Input<string>;
    forgotPasswordLabel?: pulumi.Input<string>;
    forgotPasswordUrl?: pulumi.Input<string>;
    helpLabel?: pulumi.Input<string>;
    helpUrl?: pulumi.Input<string>;
    passwordInfoTip?: pulumi.Input<string>;
    passwordLabel?: pulumi.Input<string>;
    showPasswordVisibilityToggle?: pulumi.Input<boolean>;
    showUserIdentifier?: pulumi.Input<boolean>;
    signInLabel?: pulumi.Input<string>;
    unlockAccountLabel?: pulumi.Input<string>;
    unlockAccountUrl?: pulumi.Input<string>;
    usernameInfoTip?: pulumi.Input<string>;
    usernameLabel?: pulumi.Input<string>;
    widgetGeneration: pulumi.Input<string>;
}

export interface RateLimitingUseCaseModeOverrides {
    loginPage?: pulumi.Input<string>;
    oauth2Authorize?: pulumi.Input<string>;
    oieAppIntent?: pulumi.Input<string>;
}

export interface RequestConditionAccessDurationSettings {
    /**
     * The duration set by the admin for access durations. Use ISO8061 notation for duration values.
     */
    duration?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface RequestConditionAccessScopeSettings {
    /**
     * List of groups/entitlement bundles.
     */
    ids?: pulumi.Input<pulumi.Input<inputs.RequestConditionAccessScopeSettingsId>[]>;
    type: pulumi.Input<string>;
}

export interface RequestConditionAccessScopeSettingsId {
    /**
     * Request condition id.
     */
    id?: pulumi.Input<string>;
}

export interface RequestConditionRequesterSettings {
    /**
     * List of teams/groups ids.
     */
    ids?: pulumi.Input<pulumi.Input<inputs.RequestConditionRequesterSettingsId>[]>;
    type: pulumi.Input<string>;
}

export interface RequestConditionRequesterSettingsId {
    /**
     * Request condition id.
     */
    id?: pulumi.Input<string>;
}

export interface RequestSettingResourceRequestOnBehalfOfSettings {
    /**
     * Indicates that users who can request this resource could also request for another requester of the same resource. This property can only be true.
     */
    allowed?: pulumi.Input<boolean>;
    /**
     * Which requesters the resource requester can request on behalf of. Enum: `DIRECT_REPORT`.
     */
    onlyFors?: pulumi.Input<pulumi.Input<inputs.RequestSettingResourceRequestOnBehalfOfSettingsOnlyFor>[]>;
}

export interface RequestSettingResourceRequestOnBehalfOfSettingsOnlyFor {
    /**
     * Which requesters the resource requester can request on behalf of. If onlyFor is not specified then any requester may request a resource on the behalf of any other user
     */
    type?: pulumi.Input<string>;
}

export interface RequestSettingResourceRiskSettings {
    /**
     * Default risk settings that are valid for an access request when a risk has been detected for the resource and requesting user.
     */
    defaultSetting?: pulumi.Input<inputs.RequestSettingResourceRiskSettingsDefaultSetting>;
}

export interface RequestSettingResourceRiskSettingsDefaultSetting {
    /**
     * Settings that control who may specify the access duration allowed by this request condition or risk settings, as well as what duration may be requested.
     */
    accessDurationSettings?: pulumi.Input<inputs.RequestSettingResourceRiskSettingsDefaultSettingAccessDurationSettings>;
    /**
     * The ID of the approval sequence.
     */
    approvalSequenceId?: pulumi.Input<string>;
    errors?: pulumi.Input<pulumi.Input<string>[]>;
    requestSubmissionType?: pulumi.Input<string>;
}

export interface RequestSettingResourceRiskSettingsDefaultSettingAccessDurationSettings {
    /**
     * The duration set by the admin for access durations. Use ISO8061 notation for duration values.
     */
    duration?: pulumi.Input<string>;
    /**
     * Enum: `ADMIN_FIXED_DURATION`, `REQUESTER_SPECIFIED_DURATION`.
     */
    type?: pulumi.Input<string>;
}

export interface RequestV2Requested {
    /**
     * The ID of the access scope associated with the resource.
     */
    accessScopeId?: pulumi.Input<string>;
    /**
     * The access scope type.
     */
    accessScopeType?: pulumi.Input<string>;
    /**
     * The ID of the resource catalog entry.
     */
    entryId: pulumi.Input<string>;
    /**
     * The ID of the requested resource.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The requested resource type.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * The type of the resource.
     */
    type: pulumi.Input<string>;
}

export interface RequestV2RequestedFor {
    /**
     * The ID of the Okta user.
     */
    externalId: pulumi.Input<string>;
    /**
     * The type of principal.
     */
    type: pulumi.Input<string>;
}

export interface RequestV2RequesterFieldValue {
    /**
     * The ID of a requester field.
     */
    id?: pulumi.Input<string>;
    /**
     * A human-readable description of requester field.
     */
    label?: pulumi.Input<string>;
    /**
     * Type of value for the requester field.
     */
    type?: pulumi.Input<string>;
    /**
     * The value of requester field, which depends on the type of the field.
     */
    value?: pulumi.Input<string>;
    /**
     * The values of requester field with the type MULTISELECT. If the field type is MULTISELECT, this property is required.
     */
    values?: pulumi.Input<pulumi.Input<inputs.RequestV2RequesterFieldValueValue>[]>;
}

export interface RequestV2RequesterFieldValueValue {
    value?: pulumi.Input<string>;
}

export interface TemplateSmsTranslation {
    /**
     * The language to map the template to.
     */
    language: pulumi.Input<string>;
    /**
     * The SMS message.
     */
    template: pulumi.Input<string>;
}

export interface UserSchemaPropertyArrayOneOf {
    /**
     * Value mapping to member of `arrayEnum`
     */
    const: pulumi.Input<string>;
    /**
     * Display name for the enum value.
     */
    title: pulumi.Input<string>;
}

export interface UserSchemaPropertyMasterOverridePriority {
    type?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface UserSchemaPropertyOneOf {
    /**
     * Enum value
     */
    const: pulumi.Input<string>;
    /**
     * Enum title
     */
    title: pulumi.Input<string>;
}
export namespace app {
    export interface OAuthGroupsClaim {
        /**
         * Groups claim filter. Can only be set if type is FILTER.
         */
        filterType?: pulumi.Input<string>;
        /**
         * Issuer mode inherited from OAuth App
         */
        issuerMode?: pulumi.Input<string>;
        /**
         * Name of the claim that will be used in the token.
         */
        name: pulumi.Input<string>;
        /**
         * Groups claim type.
         */
        type: pulumi.Input<string>;
        /**
         * Value of the claim. Can be an Okta Expression Language statement that evaluates at the time the token is minted.
         */
        value: pulumi.Input<string>;
    }

    export interface OAuthJwk {
        /**
         * RSA Exponent
         */
        e?: pulumi.Input<string>;
        /**
         * Key ID
         */
        kid: pulumi.Input<string>;
        /**
         * Key type
         */
        kty: pulumi.Input<string>;
        /**
         * RSA Modulus
         */
        n?: pulumi.Input<string>;
        /**
         * X coordinate of the elliptic curve point
         */
        x?: pulumi.Input<string>;
        /**
         * Y coordinate of the elliptic curve point
         */
        y?: pulumi.Input<string>;
    }

    export interface SamlAcsEndpointsIndex {
        index: pulumi.Input<number>;
        url: pulumi.Input<string>;
    }

    export interface SamlAttributeStatement {
        /**
         * Type of group attribute filter. Valid values are: `STARTS_WITH`, `EQUALS`, `CONTAINS`, or `REGEX`
         */
        filterType?: pulumi.Input<string>;
        /**
         * Filter value to use
         */
        filterValue?: pulumi.Input<string>;
        /**
         * The reference name of the attribute statement
         */
        name: pulumi.Input<string>;
        /**
         * The attribute namespace. It can be set to `urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified`, `urn:oasis:names:tc:SAML:2.0:attrname-format:uri`, or `urn:oasis:names:tc:SAML:2.0:attrname-format:basic`
         */
        namespace?: pulumi.Input<string>;
        /**
         * The type of attribute statements object
         */
        type?: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface SamlKey {
        /**
         * Created date
         */
        created?: pulumi.Input<string>;
        /**
         * RSA exponent
         */
        e?: pulumi.Input<string>;
        /**
         * Expiration date
         */
        expiresAt?: pulumi.Input<string>;
        /**
         * Key ID
         */
        kid?: pulumi.Input<string>;
        /**
         * Key type. Identifies the cryptographic algorithm family used with the key.
         */
        kty?: pulumi.Input<string>;
        /**
         * Last updated date
         */
        lastUpdated?: pulumi.Input<string>;
        /**
         * RSA modulus
         */
        n?: pulumi.Input<string>;
        /**
         * Intended use of the public key.
         */
        use?: pulumi.Input<string>;
        /**
         * X.509 Certificate Chain
         */
        x5cs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * X.509 certificate SHA-256 thumbprint
         */
        x5tS256?: pulumi.Input<string>;
    }
}

export namespace auth {
}

export namespace inline {
    export interface HookHeader {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }
}

export namespace policy {
    export interface RuleIdpDiscoveryAppExclude {
        id?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface RuleIdpDiscoveryAppInclude {
        id?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface RuleIdpDiscoveryIdpProvider {
        /**
         * The identifier for the Idp the rule should route to if all conditions are met.
         */
        id?: pulumi.Input<string>;
        /**
         * Type of IdP. One of: `AMAZON`, `APPLE`, `DISCORD`, `FACEBOOK`, `GITHUB`, `GITLAB`, `GOOGLE`, `IDV_CLEAR`, `IDV_INCODE`, `IDV_PERSONA`, `LINKEDIN`, `LOGINGOV`, `LOGINGOV_SANDBOX`, `MICROSOFT`, `OIDC`, `PAYPAL`, `PAYPAL_SANDBOX`, `SALESFORCE`, `SAML2`, `SPOTIFY`, `X509`, `XERO`, `YAHOO`, `YAHOOJP`, Default: `OKTA`
         */
        type?: pulumi.Input<string>;
    }

    export interface RuleIdpDiscoveryPlatformInclude {
        /**
         * Only available with OTHER OS type
         */
        osExpression?: pulumi.Input<string>;
        osType?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface RuleIdpDiscoveryUserIdentifierPattern {
        matchType?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface RuleMfaAppExclude {
        id?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface RuleMfaAppInclude {
        id?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface RuleSignonFactorSequence {
        /**
         * Type of a Factor
         */
        primaryCriteriaFactorType: pulumi.Input<string>;
        /**
         * Factor provider
         */
        primaryCriteriaProvider: pulumi.Input<string>;
        secondaryCriterias?: pulumi.Input<pulumi.Input<inputs.policy.RuleSignonFactorSequenceSecondaryCriteria>[]>;
    }

    export interface RuleSignonFactorSequenceSecondaryCriteria {
        /**
         * Type of a Factor
         */
        factorType: pulumi.Input<string>;
        /**
         * Factor provider
         */
        provider: pulumi.Input<string>;
    }
}

export namespace profile {
    export interface MappingMapping {
        expression: pulumi.Input<string>;
        /**
         * The mapping property key.
         */
        id: pulumi.Input<string>;
        pushStatus?: pulumi.Input<string>;
    }
}

export namespace user {
    export interface GetUserSearch {
        comparison?: string;
        /**
         * A raw search expression string. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search
         */
        expression?: string;
        /**
         * Property name to search for. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search
         */
        name?: string;
        value?: string;
    }

    export interface GetUserSearchArgs {
        comparison?: pulumi.Input<string>;
        /**
         * A raw search expression string. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search
         */
        expression?: pulumi.Input<string>;
        /**
         * Property name to search for. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search
         */
        name?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface GetUsersSearch {
        comparison?: string;
        /**
         * A raw search expression string. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search
         */
        expression?: string;
        /**
         * Property name to search for. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search
         */
        name?: string;
        value?: string;
    }

    export interface GetUsersSearchArgs {
        comparison?: pulumi.Input<string>;
        /**
         * A raw search expression string. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search
         */
        expression?: pulumi.Input<string>;
        /**
         * Property name to search for. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search
         */
        name?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface UserPasswordHash {
        /**
         * The algorithm used to generate the hash using the password
         */
        algorithm: pulumi.Input<string>;
        /**
         * Only required for salted hashes
         */
        salt?: pulumi.Input<string>;
        /**
         * Specifies whether salt was pre- or postfixed to the password before hashing
         */
        saltOrder?: pulumi.Input<string>;
        /**
         * For SHA-512, SHA-256, SHA-1, MD5, This is the actual base64-encoded hash of the password (and salt, if used). This is the Base64 encoded value of the SHA-512/SHA-256/SHA-1/MD5 digest that was computed by either pre-fixing or post-fixing the salt to the password, depending on the saltOrder. If a salt was not used in the source system, then this should just be the the Base64 encoded value of the password's SHA-512/SHA-256/SHA-1/MD5 digest. For BCRYPT, This is the actual radix64-encoded hashed password.
         */
        value: pulumi.Input<string>;
        /**
         * Governs the strength of the hash and the time required to compute it. Only required for BCRYPT algorithm
         */
        workFactor?: pulumi.Input<number>;
    }
}

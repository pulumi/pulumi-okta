// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AppGroupAssignmentsGroup {
    /**
     * A group to associate with the application
     */
    id: pulumi.Input<string>;
    /**
     * Priority of group assignment
     */
    priority?: pulumi.Input<number>;
    /**
     * JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)
     */
    profile: pulumi.Input<string>;
}

export interface AppSignonPolicyRulePlatformInclude {
    /**
     * Only available with OTHER OS type
     */
    osExpression?: pulumi.Input<string>;
    osType?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface AppUserSchemaPropertyArrayOneOf {
    /**
     * Value mapping to member of `arrayEnum`
     */
    const: pulumi.Input<string>;
    /**
     * Display name for the enum value.
     */
    title: pulumi.Input<string>;
}

export interface AppUserSchemaPropertyOneOf {
    /**
     * Enum value
     */
    const: pulumi.Input<string>;
    /**
     * Enum title
     */
    title: pulumi.Input<string>;
}

export interface CustomizedSigninPageContentSecurityPolicySetting {
    /**
     * enforced or report_only
     */
    mode?: pulumi.Input<string>;
    reportUri?: pulumi.Input<string>;
    srcLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CustomizedSigninPageWidgetCustomizations {
    authenticatorPageCustomLinkLabel?: pulumi.Input<string>;
    authenticatorPageCustomLinkUrl?: pulumi.Input<string>;
    classicRecoveryFlowEmailOrUsernameLabel?: pulumi.Input<string>;
    customLink1Label?: pulumi.Input<string>;
    customLink1Url?: pulumi.Input<string>;
    customLink2Label?: pulumi.Input<string>;
    customLink2Url?: pulumi.Input<string>;
    forgotPasswordLabel?: pulumi.Input<string>;
    forgotPasswordUrl?: pulumi.Input<string>;
    helpLabel?: pulumi.Input<string>;
    helpUrl?: pulumi.Input<string>;
    passwordInfoTip?: pulumi.Input<string>;
    passwordLabel?: pulumi.Input<string>;
    showPasswordVisibilityToggle?: pulumi.Input<boolean>;
    showUserIdentifier?: pulumi.Input<boolean>;
    signInLabel?: pulumi.Input<string>;
    unlockAccountLabel?: pulumi.Input<string>;
    unlockAccountUrl?: pulumi.Input<string>;
    usernameInfoTip?: pulumi.Input<string>;
    usernameLabel?: pulumi.Input<string>;
    widgetGeneration: pulumi.Input<string>;
}

export interface DomainDnsRecord {
    /**
     * TXT record expiration
     */
    expiration?: pulumi.Input<string>;
    /**
     * DNS record name
     */
    fqdn?: pulumi.Input<string>;
    /**
     * Record type can be TXT or CNAME
     */
    recordType?: pulumi.Input<string>;
    /**
     * DNS verification value
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EmailDomainDnsValidationRecord {
    /**
     * DNS TXT record expiration
     *
     * @deprecated This field has been removed in the newest go sdk version and has become noop
     */
    expiration?: pulumi.Input<string>;
    /**
     * DNS record name
     */
    fqdn?: pulumi.Input<string>;
    /**
     * Record type can be TXT or cname
     */
    recordType?: pulumi.Input<string>;
    /**
     * DNS record value
     */
    value?: pulumi.Input<string>;
}

export interface EmailSenderDnsRecord {
    /**
     * DNS record name
     */
    fqdn?: pulumi.Input<string>;
    /**
     * Record type can be TXT or CNAME
     */
    recordType?: pulumi.Input<string>;
    /**
     * DNS verification value
     */
    value?: pulumi.Input<string>;
}

export interface EventHookHeader {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetDefaultSigninPageContentSecurityPolicySetting {
    /**
     * enforced or report_only
     */
    mode?: string;
    reportUri?: string;
    srcLists?: string[];
}

export interface GetDefaultSigninPageContentSecurityPolicySettingArgs {
    /**
     * enforced or report_only
     */
    mode?: pulumi.Input<string>;
    reportUri?: pulumi.Input<string>;
    srcLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDefaultSigninPageWidgetCustomizations {
    authenticatorPageCustomLinkLabel?: string;
    authenticatorPageCustomLinkUrl?: string;
    classicRecoveryFlowEmailOrUsernameLabel?: string;
    customLink1Label?: string;
    customLink1Url?: string;
    customLink2Label?: string;
    customLink2Url?: string;
    forgotPasswordLabel?: string;
    forgotPasswordUrl?: string;
    helpLabel?: string;
    helpUrl?: string;
    passwordInfoTip?: string;
    passwordLabel?: string;
    showPasswordVisibilityToggle?: boolean;
    showUserIdentifier?: boolean;
    signInLabel?: string;
    unlockAccountLabel?: string;
    unlockAccountUrl?: string;
    usernameInfoTip?: string;
    usernameLabel?: string;
    widgetGeneration?: string;
}

export interface GetDefaultSigninPageWidgetCustomizationsArgs {
    authenticatorPageCustomLinkLabel?: pulumi.Input<string>;
    authenticatorPageCustomLinkUrl?: pulumi.Input<string>;
    classicRecoveryFlowEmailOrUsernameLabel?: pulumi.Input<string>;
    customLink1Label?: pulumi.Input<string>;
    customLink1Url?: pulumi.Input<string>;
    customLink2Label?: pulumi.Input<string>;
    customLink2Url?: pulumi.Input<string>;
    forgotPasswordLabel?: pulumi.Input<string>;
    forgotPasswordUrl?: pulumi.Input<string>;
    helpLabel?: pulumi.Input<string>;
    helpUrl?: pulumi.Input<string>;
    passwordInfoTip?: pulumi.Input<string>;
    passwordLabel?: pulumi.Input<string>;
    showPasswordVisibilityToggle?: pulumi.Input<boolean>;
    showUserIdentifier?: pulumi.Input<boolean>;
    signInLabel?: pulumi.Input<string>;
    unlockAccountLabel?: pulumi.Input<string>;
    unlockAccountUrl?: pulumi.Input<string>;
    usernameInfoTip?: pulumi.Input<string>;
    usernameLabel?: pulumi.Input<string>;
    widgetGeneration?: pulumi.Input<string>;
}

export interface GetDeviceAssurancePolicyThirdPartySignalProvider {
    dtc: inputs.GetDeviceAssurancePolicyThirdPartySignalProviderDtc;
}

export interface GetDeviceAssurancePolicyThirdPartySignalProviderArgs {
    dtc: pulumi.Input<inputs.GetDeviceAssurancePolicyThirdPartySignalProviderDtcArgs>;
}

export interface GetDeviceAssurancePolicyThirdPartySignalProviderDtc {
    allowScreenLock: boolean;
    browserVersion: inputs.GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion;
    builtInDnsClientEnabled: boolean;
    chromeRemoteDesktopAppBlocked: boolean;
    crowdStrikeAgentId: string;
    crowdStrikeCustomerId: string;
    deviceEnrollmentDomain: string;
    diskEncrypted: boolean;
    keyTrustLevel: string;
    managedDevice: boolean;
    osFirewall: boolean;
    osVersion: inputs.GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersion;
    passwordProtectionWarningTrigger: string;
    realtimeUrlCheckMode: boolean;
    safeBrowsingProtectionLevel: string;
    screenLockSecured: boolean;
    siteIsolationEnabled: boolean;
    thirdPartyBlockingEnabled: boolean;
    windowsMachineDomain: string;
    windowsUserDomain: string;
}

export interface GetDeviceAssurancePolicyThirdPartySignalProviderDtcArgs {
    allowScreenLock: pulumi.Input<boolean>;
    browserVersion: pulumi.Input<inputs.GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs>;
    builtInDnsClientEnabled: pulumi.Input<boolean>;
    chromeRemoteDesktopAppBlocked: pulumi.Input<boolean>;
    crowdStrikeAgentId: pulumi.Input<string>;
    crowdStrikeCustomerId: pulumi.Input<string>;
    deviceEnrollmentDomain: pulumi.Input<string>;
    diskEncrypted: pulumi.Input<boolean>;
    keyTrustLevel: pulumi.Input<string>;
    managedDevice: pulumi.Input<boolean>;
    osFirewall: pulumi.Input<boolean>;
    osVersion: pulumi.Input<inputs.GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs>;
    passwordProtectionWarningTrigger: pulumi.Input<string>;
    realtimeUrlCheckMode: pulumi.Input<boolean>;
    safeBrowsingProtectionLevel: pulumi.Input<string>;
    screenLockSecured: pulumi.Input<boolean>;
    siteIsolationEnabled: pulumi.Input<boolean>;
    thirdPartyBlockingEnabled: pulumi.Input<boolean>;
    windowsMachineDomain: pulumi.Input<string>;
    windowsUserDomain: pulumi.Input<string>;
}

export interface GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersion {
    minimum: string;
}

export interface GetDeviceAssurancePolicyThirdPartySignalProviderDtcBrowserVersionArgs {
    minimum: pulumi.Input<string>;
}

export interface GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersion {
    minimum: string;
}

export interface GetDeviceAssurancePolicyThirdPartySignalProviderDtcOsVersionArgs {
    minimum: pulumi.Input<string>;
}

export interface GetLogStreamSettings {
    /**
     * AWS account ID. Required only for 'aws_eventbridge' type
     */
    accountId?: string;
    /**
     * Edition of the Splunk Cloud instance. Could be one of: 'aws', 'aws*govcloud', 'gcp'. Required only for 'splunk*cloud_logstreaming' type
     */
    edition?: string;
    /**
     * An alphanumeric name (no spaces) to identify this event source in AWS EventBridge. Required only for 'aws_eventbridge' type
     */
    eventSourceName?: string;
    /**
     * The domain name for Splunk Cloud instance. Don't include http or https in the string. For example: 'acme.splunkcloud.com'. Required only for 'splunk*cloud*logstreaming' type
     */
    host?: string;
    /**
     * The destination AWS region where event source is located. Required only for 'aws_eventbridge' type
     */
    region?: string;
    /**
     * The HEC token for your Splunk Cloud HTTP Event Collector. Required only for 'splunk*cloud*logstreaming' type
     */
    token?: string;
}

export interface GetLogStreamSettingsArgs {
    /**
     * AWS account ID. Required only for 'aws_eventbridge' type
     */
    accountId?: pulumi.Input<string>;
    /**
     * Edition of the Splunk Cloud instance. Could be one of: 'aws', 'aws*govcloud', 'gcp'. Required only for 'splunk*cloud_logstreaming' type
     */
    edition?: pulumi.Input<string>;
    /**
     * An alphanumeric name (no spaces) to identify this event source in AWS EventBridge. Required only for 'aws_eventbridge' type
     */
    eventSourceName?: pulumi.Input<string>;
    /**
     * The domain name for Splunk Cloud instance. Don't include http or https in the string. For example: 'acme.splunkcloud.com'. Required only for 'splunk*cloud*logstreaming' type
     */
    host?: pulumi.Input<string>;
    /**
     * The destination AWS region where event source is located. Required only for 'aws_eventbridge' type
     */
    region?: pulumi.Input<string>;
    /**
     * The HEC token for your Splunk Cloud HTTP Event Collector. Required only for 'splunk*cloud*logstreaming' type
     */
    token?: pulumi.Input<string>;
}

export interface GetOrgMetadataDomains {
    /**
     * Custom Domain Org URI
     */
    alternate?: string;
    /**
     * Standard Org URI
     */
    organization?: string;
}

export interface GetOrgMetadataDomainsArgs {
    /**
     * Custom Domain Org URI
     */
    alternate?: pulumi.Input<string>;
    /**
     * Standard Org URI
     */
    organization?: pulumi.Input<string>;
}

export interface GetOrgMetadataSettings {
    analyticsCollectionEnabled?: boolean;
    bugReportingEnabled?: boolean;
    /**
     * Whether the legacy Okta Mobile application is enabled for the org
     */
    omEnabled?: boolean;
}

export interface GetOrgMetadataSettingsArgs {
    analyticsCollectionEnabled?: pulumi.Input<boolean>;
    bugReportingEnabled?: pulumi.Input<boolean>;
    /**
     * Whether the legacy Okta Mobile application is enabled for the org
     */
    omEnabled?: pulumi.Input<boolean>;
}

export interface GroupSchemaPropertyArrayOneOf {
    /**
     * Value mapping to member of `arrayEnum`
     */
    const: pulumi.Input<string>;
    /**
     * Display name for the enum value.
     */
    title: pulumi.Input<string>;
}

export interface GroupSchemaPropertyMasterOverridePriority {
    type?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GroupSchemaPropertyOneOf {
    /**
     * Enum value
     */
    const: pulumi.Input<string>;
    /**
     * Enum title
     */
    title: pulumi.Input<string>;
}

export interface LogStreamSettings {
    /**
     * AWS account ID. Required only for 'aws_eventbridge' type
     */
    accountId?: pulumi.Input<string>;
    /**
     * Edition of the Splunk Cloud instance. Could be one of: 'aws', 'aws*govcloud', 'gcp'. Required only for 'splunk*cloud_logstreaming' type
     */
    edition?: pulumi.Input<string>;
    /**
     * An alphanumeric name (no spaces) to identify this event source in AWS EventBridge. Required only for 'aws_eventbridge' type
     */
    eventSourceName?: pulumi.Input<string>;
    /**
     * The domain name for Splunk Cloud instance. Don't include http or https in the string. For example: 'acme.splunkcloud.com'. Required only for 'splunk*cloud*logstreaming' type
     */
    host?: pulumi.Input<string>;
    /**
     * The destination AWS region where event source is located. Required only for 'aws_eventbridge' type
     */
    region?: pulumi.Input<string>;
    /**
     * The HEC token for your Splunk Cloud HTTP Event Collector. Required only for 'splunk*cloud*logstreaming' type
     */
    token?: pulumi.Input<string>;
}

export interface PolicyRuleProfileEnrollmentProfileAttribute {
    /**
     * A display-friendly label for this property
     */
    label: pulumi.Input<string>;
    /**
     * The name of a User Profile property
     */
    name: pulumi.Input<string>;
    /**
     * Indicates if this property is required for enrollment
     */
    required?: pulumi.Input<boolean>;
}

export interface PreviewSigninPageContentSecurityPolicySetting {
    /**
     * enforced or report_only
     */
    mode?: pulumi.Input<string>;
    reportUri?: pulumi.Input<string>;
    srcLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PreviewSigninPageWidgetCustomizations {
    authenticatorPageCustomLinkLabel?: pulumi.Input<string>;
    authenticatorPageCustomLinkUrl?: pulumi.Input<string>;
    classicRecoveryFlowEmailOrUsernameLabel?: pulumi.Input<string>;
    customLink1Label?: pulumi.Input<string>;
    customLink1Url?: pulumi.Input<string>;
    customLink2Label?: pulumi.Input<string>;
    customLink2Url?: pulumi.Input<string>;
    forgotPasswordLabel?: pulumi.Input<string>;
    forgotPasswordUrl?: pulumi.Input<string>;
    helpLabel?: pulumi.Input<string>;
    helpUrl?: pulumi.Input<string>;
    passwordInfoTip?: pulumi.Input<string>;
    passwordLabel?: pulumi.Input<string>;
    showPasswordVisibilityToggle?: pulumi.Input<boolean>;
    showUserIdentifier?: pulumi.Input<boolean>;
    signInLabel?: pulumi.Input<string>;
    unlockAccountLabel?: pulumi.Input<string>;
    unlockAccountUrl?: pulumi.Input<string>;
    usernameInfoTip?: pulumi.Input<string>;
    usernameLabel?: pulumi.Input<string>;
    widgetGeneration: pulumi.Input<string>;
}

export interface TemplateSmsTranslation {
    /**
     * The language to map the template to.
     */
    language: pulumi.Input<string>;
    /**
     * The SMS message.
     */
    template: pulumi.Input<string>;
}

export interface UserSchemaPropertyArrayOneOf {
    /**
     * Value mapping to member of `arrayEnum`
     */
    const: pulumi.Input<string>;
    /**
     * Display name for the enum value.
     */
    title: pulumi.Input<string>;
}

export interface UserSchemaPropertyMasterOverridePriority {
    type?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface UserSchemaPropertyOneOf {
    /**
     * Enum value
     */
    const: pulumi.Input<string>;
    /**
     * Enum title
     */
    title: pulumi.Input<string>;
}
export namespace app {
    export interface OAuthGroupsClaim {
        /**
         * Groups claim filter. Can only be set if type is FILTER.
         */
        filterType?: pulumi.Input<string>;
        /**
         * Issuer mode inherited from OAuth App
         */
        issuerMode?: pulumi.Input<string>;
        /**
         * Name of the claim that will be used in the token.
         */
        name: pulumi.Input<string>;
        /**
         * Groups claim type.
         */
        type: pulumi.Input<string>;
        /**
         * Value of the claim. Can be an Okta Expression Language statement that evaluates at the time the token is minted.
         */
        value: pulumi.Input<string>;
    }

    export interface OAuthJwk {
        /**
         * RSA Exponent
         */
        e?: pulumi.Input<string>;
        /**
         * Key ID
         */
        kid: pulumi.Input<string>;
        /**
         * Key type
         */
        kty: pulumi.Input<string>;
        /**
         * RSA Modulus
         */
        n?: pulumi.Input<string>;
        /**
         * X coordinate of the elliptic curve point
         */
        x?: pulumi.Input<string>;
        /**
         * Y coordinate of the elliptic curve point
         */
        y?: pulumi.Input<string>;
    }

    export interface SamlAcsEndpointsIndex {
        index: pulumi.Input<number>;
        url: pulumi.Input<string>;
    }

    export interface SamlAttributeStatement {
        /**
         * Type of group attribute filter. Valid values are: `STARTS_WITH`, `EQUALS`, `CONTAINS`, or `REGEX`
         */
        filterType?: pulumi.Input<string>;
        /**
         * Filter value to use
         */
        filterValue?: pulumi.Input<string>;
        /**
         * The reference name of the attribute statement
         */
        name: pulumi.Input<string>;
        /**
         * The attribute namespace. It can be set to `urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified`, `urn:oasis:names:tc:SAML:2.0:attrname-format:uri`, or `urn:oasis:names:tc:SAML:2.0:attrname-format:basic`
         */
        namespace?: pulumi.Input<string>;
        /**
         * The type of attribute statements object
         */
        type?: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface SamlKey {
        /**
         * Created date
         */
        created?: pulumi.Input<string>;
        /**
         * RSA exponent
         */
        e?: pulumi.Input<string>;
        /**
         * Expiration date
         */
        expiresAt?: pulumi.Input<string>;
        /**
         * Key ID
         */
        kid?: pulumi.Input<string>;
        /**
         * Key type. Identifies the cryptographic algorithm family used with the key.
         */
        kty?: pulumi.Input<string>;
        /**
         * Last updated date
         */
        lastUpdated?: pulumi.Input<string>;
        /**
         * RSA modulus
         */
        n?: pulumi.Input<string>;
        /**
         * Intended use of the public key.
         */
        use?: pulumi.Input<string>;
        /**
         * X.509 Certificate Chain
         */
        x5cs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * X.509 certificate SHA-256 thumbprint
         */
        x5tS256?: pulumi.Input<string>;
    }
}

export namespace auth {
}

export namespace inline {
    export interface HookHeader {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }
}

export namespace policy {
    export interface RuleIdpDiscoveryAppExclude {
        id?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface RuleIdpDiscoveryAppInclude {
        id?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface RuleIdpDiscoveryIdpProvider {
        /**
         * The identifier for the Idp the rule should route to if all conditions are met.
         */
        id?: pulumi.Input<string>;
        /**
         * Type of IdP. One of: `AMAZON`, `APPLE`, `DISCORD`, `FACEBOOK`, `GITHUB`, `GITLAB`, `GOOGLE`, `IDV_CLEAR`, `IDV_INCODE`, `IDV_PERSONA`, `LINKEDIN`, `LOGINGOV`, `LOGINGOV_SANDBOX`, `MICROSOFT`, `OIDC`, `PAYPAL`, `PAYPAL_SANDBOX`, `SALESFORCE`, `SAML2`, `SPOTIFY`, `X509`, `XERO`, `YAHOO`, `YAHOOJP`, Default: `OKTA`
         */
        type?: pulumi.Input<string>;
    }

    export interface RuleIdpDiscoveryPlatformInclude {
        /**
         * Only available with OTHER OS type
         */
        osExpression?: pulumi.Input<string>;
        osType?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface RuleIdpDiscoveryUserIdentifierPattern {
        matchType?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface RuleMfaAppExclude {
        id?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface RuleMfaAppInclude {
        id?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface RuleSignonFactorSequence {
        /**
         * Type of a Factor
         */
        primaryCriteriaFactorType: pulumi.Input<string>;
        /**
         * Factor provider
         */
        primaryCriteriaProvider: pulumi.Input<string>;
        secondaryCriterias?: pulumi.Input<pulumi.Input<inputs.policy.RuleSignonFactorSequenceSecondaryCriteria>[]>;
    }

    export interface RuleSignonFactorSequenceSecondaryCriteria {
        /**
         * Type of a Factor
         */
        factorType: pulumi.Input<string>;
        /**
         * Factor provider
         */
        provider: pulumi.Input<string>;
    }
}

export namespace profile {
    export interface MappingMapping {
        expression: pulumi.Input<string>;
        /**
         * The mapping property key.
         */
        id: pulumi.Input<string>;
        pushStatus?: pulumi.Input<string>;
    }
}

export namespace user {
    export interface GetUserSearch {
        comparison?: string;
        /**
         * A raw search expression string. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search
         */
        expression?: string;
        /**
         * Property name to search for. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search
         */
        name?: string;
        value?: string;
    }

    export interface GetUserSearchArgs {
        comparison?: pulumi.Input<string>;
        /**
         * A raw search expression string. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search
         */
        expression?: pulumi.Input<string>;
        /**
         * Property name to search for. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search
         */
        name?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface GetUsersSearch {
        comparison?: string;
        /**
         * A raw search expression string. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search
         */
        expression?: string;
        /**
         * Property name to search for. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search
         */
        name?: string;
        value?: string;
    }

    export interface GetUsersSearchArgs {
        comparison?: pulumi.Input<string>;
        /**
         * A raw search expression string. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search
         */
        expression?: pulumi.Input<string>;
        /**
         * Property name to search for. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search
         */
        name?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface UserPasswordHash {
        /**
         * The algorithm used to generate the hash using the password
         */
        algorithm: pulumi.Input<string>;
        /**
         * Only required for salted hashes
         */
        salt?: pulumi.Input<string>;
        /**
         * Specifies whether salt was pre- or postfixed to the password before hashing
         */
        saltOrder?: pulumi.Input<string>;
        /**
         * For SHA-512, SHA-256, SHA-1, MD5, This is the actual base64-encoded hash of the password (and salt, if used). This is the Base64 encoded value of the SHA-512/SHA-256/SHA-1/MD5 digest that was computed by either pre-fixing or post-fixing the salt to the password, depending on the saltOrder. If a salt was not used in the source system, then this should just be the the Base64 encoded value of the password's SHA-512/SHA-256/SHA-1/MD5 digest. For BCRYPT, This is the actual radix64-encoded hashed password.
         */
        value: pulumi.Input<string>;
        /**
         * Governs the strength of the hash and the time required to compute it. Only required for BCRYPT algorithm
         */
        workFactor?: pulumi.Input<number>;
    }
}

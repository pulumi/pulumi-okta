// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetEveryoneGroupArgs, GetEveryoneGroupResult, GetEveryoneGroupOutputArgs } from "./getEveryoneGroup";
export const getEveryoneGroup: typeof import("./getEveryoneGroup").getEveryoneGroup = null as any;
export const getEveryoneGroupOutput: typeof import("./getEveryoneGroup").getEveryoneGroupOutput = null as any;
utilities.lazyLoad(exports, ["getEveryoneGroup","getEveryoneGroupOutput"], () => require("./getEveryoneGroup"));

export { GetGroupArgs, GetGroupResult, GetGroupOutputArgs } from "./getGroup";
export const getGroup: typeof import("./getGroup").getGroup = null as any;
export const getGroupOutput: typeof import("./getGroup").getGroupOutput = null as any;
utilities.lazyLoad(exports, ["getGroup","getGroupOutput"], () => require("./getGroup"));

export { GroupArgs, GroupState } from "./group";
export type Group = import("./group").Group;
export const Group: typeof import("./group").Group = null as any;
utilities.lazyLoad(exports, ["Group"], () => require("./group"));

export { RoleArgs, RoleState } from "./role";
export type Role = import("./role").Role;
export const Role: typeof import("./role").Role = null as any;
utilities.lazyLoad(exports, ["Role"], () => require("./role"));

export { RuleArgs, RuleState } from "./rule";
export type Rule = import("./rule").Rule;
export const Rule: typeof import("./rule").Rule = null as any;
utilities.lazyLoad(exports, ["Rule"], () => require("./rule"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "okta:group/group:Group":
                return new Group(name, <any>undefined, { urn })
            case "okta:group/role:Role":
                return new Role(name, <any>undefined, { urn })
            case "okta:group/rule:Rule":
                return new Rule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("okta", "group/group", _module)
pulumi.runtime.registerResourceModule("okta", "group/role", _module)
pulumi.runtime.registerResourceModule("okta", "group/rule", _module)

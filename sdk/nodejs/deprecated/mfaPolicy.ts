// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class MfaPolicy extends pulumi.CustomResource {
    /**
     * Get an existing MfaPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MfaPolicyState, opts?: pulumi.CustomResourceOptions): MfaPolicy {
        return new MfaPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:deprecated/mfaPolicy:MfaPolicy';

    /**
     * Returns true if the given object is an instance of MfaPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MfaPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MfaPolicy.__pulumiType;
    }

    /**
     * Policy Description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly duo!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly fidoU2f!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly fidoWebauthn!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly googleOtp!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * List of Group IDs to Include
     */
    public readonly groupsIncludeds!: pulumi.Output<string[] | undefined>;
    public readonly hotp!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Policy Name
     */
    public readonly name!: pulumi.Output<string>;
    public readonly oktaCall!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly oktaEmail!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly oktaOtp!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly oktaPassword!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly oktaPush!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly oktaQuestion!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly oktaSms!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid
     * priority is provided. API defaults it to the last (lowest) if not there.
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    public readonly rsaToken!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Policy Status: ACTIVE or INACTIVE.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    public readonly symantecVip!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly yubikeyToken!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a MfaPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: MfaPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MfaPolicyArgs | MfaPolicyState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MfaPolicyState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["duo"] = state ? state.duo : undefined;
            inputs["fidoU2f"] = state ? state.fidoU2f : undefined;
            inputs["fidoWebauthn"] = state ? state.fidoWebauthn : undefined;
            inputs["googleOtp"] = state ? state.googleOtp : undefined;
            inputs["groupsIncludeds"] = state ? state.groupsIncludeds : undefined;
            inputs["hotp"] = state ? state.hotp : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["oktaCall"] = state ? state.oktaCall : undefined;
            inputs["oktaEmail"] = state ? state.oktaEmail : undefined;
            inputs["oktaOtp"] = state ? state.oktaOtp : undefined;
            inputs["oktaPassword"] = state ? state.oktaPassword : undefined;
            inputs["oktaPush"] = state ? state.oktaPush : undefined;
            inputs["oktaQuestion"] = state ? state.oktaQuestion : undefined;
            inputs["oktaSms"] = state ? state.oktaSms : undefined;
            inputs["priority"] = state ? state.priority : undefined;
            inputs["rsaToken"] = state ? state.rsaToken : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["symantecVip"] = state ? state.symantecVip : undefined;
            inputs["yubikeyToken"] = state ? state.yubikeyToken : undefined;
        } else {
            const args = argsOrState as MfaPolicyArgs | undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["duo"] = args ? args.duo : undefined;
            inputs["fidoU2f"] = args ? args.fidoU2f : undefined;
            inputs["fidoWebauthn"] = args ? args.fidoWebauthn : undefined;
            inputs["googleOtp"] = args ? args.googleOtp : undefined;
            inputs["groupsIncludeds"] = args ? args.groupsIncludeds : undefined;
            inputs["hotp"] = args ? args.hotp : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["oktaCall"] = args ? args.oktaCall : undefined;
            inputs["oktaEmail"] = args ? args.oktaEmail : undefined;
            inputs["oktaOtp"] = args ? args.oktaOtp : undefined;
            inputs["oktaPassword"] = args ? args.oktaPassword : undefined;
            inputs["oktaPush"] = args ? args.oktaPush : undefined;
            inputs["oktaQuestion"] = args ? args.oktaQuestion : undefined;
            inputs["oktaSms"] = args ? args.oktaSms : undefined;
            inputs["priority"] = args ? args.priority : undefined;
            inputs["rsaToken"] = args ? args.rsaToken : undefined;
            inputs["status"] = args ? args.status : undefined;
            inputs["symantecVip"] = args ? args.symantecVip : undefined;
            inputs["yubikeyToken"] = args ? args.yubikeyToken : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(MfaPolicy.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MfaPolicy resources.
 */
export interface MfaPolicyState {
    /**
     * Policy Description
     */
    description?: pulumi.Input<string>;
    duo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    fidoU2f?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    fidoWebauthn?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    googleOtp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of Group IDs to Include
     */
    groupsIncludeds?: pulumi.Input<pulumi.Input<string>[]>;
    hotp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Policy Name
     */
    name?: pulumi.Input<string>;
    oktaCall?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaEmail?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaOtp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaPassword?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaPush?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaQuestion?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaSms?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid
     * priority is provided. API defaults it to the last (lowest) if not there.
     */
    priority?: pulumi.Input<number>;
    rsaToken?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Policy Status: ACTIVE or INACTIVE.
     */
    status?: pulumi.Input<string>;
    symantecVip?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    yubikeyToken?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a MfaPolicy resource.
 */
export interface MfaPolicyArgs {
    /**
     * Policy Description
     */
    description?: pulumi.Input<string>;
    duo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    fidoU2f?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    fidoWebauthn?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    googleOtp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of Group IDs to Include
     */
    groupsIncludeds?: pulumi.Input<pulumi.Input<string>[]>;
    hotp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Policy Name
     */
    name?: pulumi.Input<string>;
    oktaCall?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaEmail?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaOtp?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaPassword?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaPush?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaQuestion?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    oktaSms?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid
     * priority is provided. API defaults it to the last (lowest) if not there.
     */
    priority?: pulumi.Input<number>;
    rsaToken?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Policy Status: ACTIVE or INACTIVE.
     */
    status?: pulumi.Input<string>;
    symantecVip?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    yubikeyToken?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

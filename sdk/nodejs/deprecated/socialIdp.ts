// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class SocialIdp extends pulumi.CustomResource {
    /**
     * Get an existing SocialIdp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SocialIdpState, opts?: pulumi.CustomResourceOptions): SocialIdp {
        return new SocialIdp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:deprecated/socialIdp:SocialIdp';

    /**
     * Returns true if the given object is an instance of SocialIdp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SocialIdp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SocialIdp.__pulumiType;
    }

    public readonly accountLinkAction!: pulumi.Output<string | undefined>;
    public readonly accountLinkGroupIncludes!: pulumi.Output<string[] | undefined>;
    /**
     * The Key ID that you obtained from Apple when you created the private key for the client
     */
    public readonly appleKid!: pulumi.Output<string | undefined>;
    /**
     * The PKCS #8 encoded private key that you created for the client and downloaded from Apple
     */
    public readonly applePrivateKey!: pulumi.Output<string | undefined>;
    /**
     * The Team ID associated with your Apple developer account
     */
    public readonly appleTeamId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly authorizationBinding!: pulumi.Output<string>;
    public /*out*/ readonly authorizationUrl!: pulumi.Output<string>;
    public readonly clientId!: pulumi.Output<string | undefined>;
    public readonly clientSecret!: pulumi.Output<string | undefined>;
    public readonly deprovisionedAction!: pulumi.Output<string | undefined>;
    public readonly groupsAction!: pulumi.Output<string | undefined>;
    public readonly groupsAssignments!: pulumi.Output<string[] | undefined>;
    public readonly groupsAttribute!: pulumi.Output<string | undefined>;
    public readonly groupsFilters!: pulumi.Output<string[] | undefined>;
    /**
     * Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL
     */
    public readonly issuerMode!: pulumi.Output<string | undefined>;
    /**
     * @deprecated This property was incorrectly added to this resource, you should use "subject_match_attribute"
     */
    public readonly matchAttribute!: pulumi.Output<string | undefined>;
    /**
     * @deprecated This property was incorrectly added to this resource, you should use "subject_match_type"
     */
    public readonly matchType!: pulumi.Output<string | undefined>;
    public readonly maxClockSkew!: pulumi.Output<number | undefined>;
    /**
     * Name of the IdP
     */
    public readonly name!: pulumi.Output<string>;
    public readonly profileMaster!: pulumi.Output<boolean | undefined>;
    public readonly protocolType!: pulumi.Output<string | undefined>;
    public readonly provisioningAction!: pulumi.Output<string | undefined>;
    /**
     * algorithm to use to sign requests
     */
    public readonly requestSignatureAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * algorithm to use to sign response
     */
    public readonly requestSignatureScope!: pulumi.Output<string | undefined>;
    /**
     * algorithm to use to sign requests
     */
    public readonly responseSignatureAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * algorithm to use to sign response
     */
    public readonly responseSignatureScope!: pulumi.Output<string | undefined>;
    public readonly scopes!: pulumi.Output<string[]>;
    public readonly status!: pulumi.Output<string | undefined>;
    public readonly subjectMatchAttribute!: pulumi.Output<string | undefined>;
    public readonly subjectMatchType!: pulumi.Output<string | undefined>;
    public readonly suspendedAction!: pulumi.Output<string | undefined>;
    public /*out*/ readonly tokenBinding!: pulumi.Output<string>;
    public /*out*/ readonly tokenUrl!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly usernameTemplate!: pulumi.Output<string | undefined>;

    /**
     * Create a SocialIdp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SocialIdpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SocialIdpArgs | SocialIdpState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SocialIdpState | undefined;
            inputs["accountLinkAction"] = state ? state.accountLinkAction : undefined;
            inputs["accountLinkGroupIncludes"] = state ? state.accountLinkGroupIncludes : undefined;
            inputs["appleKid"] = state ? state.appleKid : undefined;
            inputs["applePrivateKey"] = state ? state.applePrivateKey : undefined;
            inputs["appleTeamId"] = state ? state.appleTeamId : undefined;
            inputs["authorizationBinding"] = state ? state.authorizationBinding : undefined;
            inputs["authorizationUrl"] = state ? state.authorizationUrl : undefined;
            inputs["clientId"] = state ? state.clientId : undefined;
            inputs["clientSecret"] = state ? state.clientSecret : undefined;
            inputs["deprovisionedAction"] = state ? state.deprovisionedAction : undefined;
            inputs["groupsAction"] = state ? state.groupsAction : undefined;
            inputs["groupsAssignments"] = state ? state.groupsAssignments : undefined;
            inputs["groupsAttribute"] = state ? state.groupsAttribute : undefined;
            inputs["groupsFilters"] = state ? state.groupsFilters : undefined;
            inputs["issuerMode"] = state ? state.issuerMode : undefined;
            inputs["matchAttribute"] = state ? state.matchAttribute : undefined;
            inputs["matchType"] = state ? state.matchType : undefined;
            inputs["maxClockSkew"] = state ? state.maxClockSkew : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["profileMaster"] = state ? state.profileMaster : undefined;
            inputs["protocolType"] = state ? state.protocolType : undefined;
            inputs["provisioningAction"] = state ? state.provisioningAction : undefined;
            inputs["requestSignatureAlgorithm"] = state ? state.requestSignatureAlgorithm : undefined;
            inputs["requestSignatureScope"] = state ? state.requestSignatureScope : undefined;
            inputs["responseSignatureAlgorithm"] = state ? state.responseSignatureAlgorithm : undefined;
            inputs["responseSignatureScope"] = state ? state.responseSignatureScope : undefined;
            inputs["scopes"] = state ? state.scopes : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["subjectMatchAttribute"] = state ? state.subjectMatchAttribute : undefined;
            inputs["subjectMatchType"] = state ? state.subjectMatchType : undefined;
            inputs["suspendedAction"] = state ? state.suspendedAction : undefined;
            inputs["tokenBinding"] = state ? state.tokenBinding : undefined;
            inputs["tokenUrl"] = state ? state.tokenUrl : undefined;
            inputs["type"] = state ? state.type : undefined;
            inputs["usernameTemplate"] = state ? state.usernameTemplate : undefined;
        } else {
            const args = argsOrState as SocialIdpArgs | undefined;
            if ((!args || args.scopes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scopes'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            inputs["accountLinkAction"] = args ? args.accountLinkAction : undefined;
            inputs["accountLinkGroupIncludes"] = args ? args.accountLinkGroupIncludes : undefined;
            inputs["appleKid"] = args ? args.appleKid : undefined;
            inputs["applePrivateKey"] = args ? args.applePrivateKey : undefined;
            inputs["appleTeamId"] = args ? args.appleTeamId : undefined;
            inputs["clientId"] = args ? args.clientId : undefined;
            inputs["clientSecret"] = args ? args.clientSecret : undefined;
            inputs["deprovisionedAction"] = args ? args.deprovisionedAction : undefined;
            inputs["groupsAction"] = args ? args.groupsAction : undefined;
            inputs["groupsAssignments"] = args ? args.groupsAssignments : undefined;
            inputs["groupsAttribute"] = args ? args.groupsAttribute : undefined;
            inputs["groupsFilters"] = args ? args.groupsFilters : undefined;
            inputs["issuerMode"] = args ? args.issuerMode : undefined;
            inputs["matchAttribute"] = args ? args.matchAttribute : undefined;
            inputs["matchType"] = args ? args.matchType : undefined;
            inputs["maxClockSkew"] = args ? args.maxClockSkew : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["profileMaster"] = args ? args.profileMaster : undefined;
            inputs["protocolType"] = args ? args.protocolType : undefined;
            inputs["provisioningAction"] = args ? args.provisioningAction : undefined;
            inputs["requestSignatureAlgorithm"] = args ? args.requestSignatureAlgorithm : undefined;
            inputs["requestSignatureScope"] = args ? args.requestSignatureScope : undefined;
            inputs["responseSignatureAlgorithm"] = args ? args.responseSignatureAlgorithm : undefined;
            inputs["responseSignatureScope"] = args ? args.responseSignatureScope : undefined;
            inputs["scopes"] = args ? args.scopes : undefined;
            inputs["status"] = args ? args.status : undefined;
            inputs["subjectMatchAttribute"] = args ? args.subjectMatchAttribute : undefined;
            inputs["subjectMatchType"] = args ? args.subjectMatchType : undefined;
            inputs["suspendedAction"] = args ? args.suspendedAction : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["usernameTemplate"] = args ? args.usernameTemplate : undefined;
            inputs["authorizationBinding"] = undefined /*out*/;
            inputs["authorizationUrl"] = undefined /*out*/;
            inputs["tokenBinding"] = undefined /*out*/;
            inputs["tokenUrl"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(SocialIdp.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SocialIdp resources.
 */
export interface SocialIdpState {
    accountLinkAction?: pulumi.Input<string>;
    accountLinkGroupIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Key ID that you obtained from Apple when you created the private key for the client
     */
    appleKid?: pulumi.Input<string>;
    /**
     * The PKCS #8 encoded private key that you created for the client and downloaded from Apple
     */
    applePrivateKey?: pulumi.Input<string>;
    /**
     * The Team ID associated with your Apple developer account
     */
    appleTeamId?: pulumi.Input<string>;
    authorizationBinding?: pulumi.Input<string>;
    authorizationUrl?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    deprovisionedAction?: pulumi.Input<string>;
    groupsAction?: pulumi.Input<string>;
    groupsAssignments?: pulumi.Input<pulumi.Input<string>[]>;
    groupsAttribute?: pulumi.Input<string>;
    groupsFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL
     */
    issuerMode?: pulumi.Input<string>;
    /**
     * @deprecated This property was incorrectly added to this resource, you should use "subject_match_attribute"
     */
    matchAttribute?: pulumi.Input<string>;
    /**
     * @deprecated This property was incorrectly added to this resource, you should use "subject_match_type"
     */
    matchType?: pulumi.Input<string>;
    maxClockSkew?: pulumi.Input<number>;
    /**
     * Name of the IdP
     */
    name?: pulumi.Input<string>;
    profileMaster?: pulumi.Input<boolean>;
    protocolType?: pulumi.Input<string>;
    provisioningAction?: pulumi.Input<string>;
    /**
     * algorithm to use to sign requests
     */
    requestSignatureAlgorithm?: pulumi.Input<string>;
    /**
     * algorithm to use to sign response
     */
    requestSignatureScope?: pulumi.Input<string>;
    /**
     * algorithm to use to sign requests
     */
    responseSignatureAlgorithm?: pulumi.Input<string>;
    /**
     * algorithm to use to sign response
     */
    responseSignatureScope?: pulumi.Input<string>;
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
    subjectMatchAttribute?: pulumi.Input<string>;
    subjectMatchType?: pulumi.Input<string>;
    suspendedAction?: pulumi.Input<string>;
    tokenBinding?: pulumi.Input<string>;
    tokenUrl?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    usernameTemplate?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SocialIdp resource.
 */
export interface SocialIdpArgs {
    accountLinkAction?: pulumi.Input<string>;
    accountLinkGroupIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Key ID that you obtained from Apple when you created the private key for the client
     */
    appleKid?: pulumi.Input<string>;
    /**
     * The PKCS #8 encoded private key that you created for the client and downloaded from Apple
     */
    applePrivateKey?: pulumi.Input<string>;
    /**
     * The Team ID associated with your Apple developer account
     */
    appleTeamId?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    deprovisionedAction?: pulumi.Input<string>;
    groupsAction?: pulumi.Input<string>;
    groupsAssignments?: pulumi.Input<pulumi.Input<string>[]>;
    groupsAttribute?: pulumi.Input<string>;
    groupsFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL
     */
    issuerMode?: pulumi.Input<string>;
    /**
     * @deprecated This property was incorrectly added to this resource, you should use "subject_match_attribute"
     */
    matchAttribute?: pulumi.Input<string>;
    /**
     * @deprecated This property was incorrectly added to this resource, you should use "subject_match_type"
     */
    matchType?: pulumi.Input<string>;
    maxClockSkew?: pulumi.Input<number>;
    /**
     * Name of the IdP
     */
    name?: pulumi.Input<string>;
    profileMaster?: pulumi.Input<boolean>;
    protocolType?: pulumi.Input<string>;
    provisioningAction?: pulumi.Input<string>;
    /**
     * algorithm to use to sign requests
     */
    requestSignatureAlgorithm?: pulumi.Input<string>;
    /**
     * algorithm to use to sign response
     */
    requestSignatureScope?: pulumi.Input<string>;
    /**
     * algorithm to use to sign requests
     */
    responseSignatureAlgorithm?: pulumi.Input<string>;
    /**
     * algorithm to use to sign response
     */
    responseSignatureScope?: pulumi.Input<string>;
    scopes: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
    subjectMatchAttribute?: pulumi.Input<string>;
    subjectMatchType?: pulumi.Input<string>;
    suspendedAction?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    usernameTemplate?: pulumi.Input<string>;
}

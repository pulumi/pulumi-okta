// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AuthLoginAppArgs, AuthLoginAppState } from "./authLoginApp";
export type AuthLoginApp = import("./authLoginApp").AuthLoginApp;
export const AuthLoginApp: typeof import("./authLoginApp").AuthLoginApp = null as any;
utilities.lazyLoad(exports, ["AuthLoginApp"], () => require("./authLoginApp"));

export { BookmarkAppArgs, BookmarkAppState } from "./bookmarkApp";
export type BookmarkApp = import("./bookmarkApp").BookmarkApp;
export const BookmarkApp: typeof import("./bookmarkApp").BookmarkApp = null as any;
utilities.lazyLoad(exports, ["BookmarkApp"], () => require("./bookmarkApp"));

export { GetDefaultPoliciesArgs, GetDefaultPoliciesResult, GetDefaultPoliciesOutputArgs } from "./getDefaultPolicies";
export const getDefaultPolicies: typeof import("./getDefaultPolicies").getDefaultPolicies = null as any;
export const getDefaultPoliciesOutput: typeof import("./getDefaultPolicies").getDefaultPoliciesOutput = null as any;
utilities.lazyLoad(exports, ["getDefaultPolicies","getDefaultPoliciesOutput"], () => require("./getDefaultPolicies"));

export { IdpArgs, IdpState } from "./idp";
export type Idp = import("./idp").Idp;
export const Idp: typeof import("./idp").Idp = null as any;
utilities.lazyLoad(exports, ["Idp"], () => require("./idp"));

export { MfaPolicyArgs, MfaPolicyState } from "./mfaPolicy";
export type MfaPolicy = import("./mfaPolicy").MfaPolicy;
export const MfaPolicy: typeof import("./mfaPolicy").MfaPolicy = null as any;
utilities.lazyLoad(exports, ["MfaPolicy"], () => require("./mfaPolicy"));

export { MfaPolicyRuleArgs, MfaPolicyRuleState } from "./mfaPolicyRule";
export type MfaPolicyRule = import("./mfaPolicyRule").MfaPolicyRule;
export const MfaPolicyRule: typeof import("./mfaPolicyRule").MfaPolicyRule = null as any;
utilities.lazyLoad(exports, ["MfaPolicyRule"], () => require("./mfaPolicyRule"));

export { OauthAppArgs, OauthAppState } from "./oauthApp";
export type OauthApp = import("./oauthApp").OauthApp;
export const OauthApp: typeof import("./oauthApp").OauthApp = null as any;
utilities.lazyLoad(exports, ["OauthApp"], () => require("./oauthApp"));

export { OauthAppRedirectUriArgs, OauthAppRedirectUriState } from "./oauthAppRedirectUri";
export type OauthAppRedirectUri = import("./oauthAppRedirectUri").OauthAppRedirectUri;
export const OauthAppRedirectUri: typeof import("./oauthAppRedirectUri").OauthAppRedirectUri = null as any;
utilities.lazyLoad(exports, ["OauthAppRedirectUri"], () => require("./oauthAppRedirectUri"));

export { PasswordPolicyArgs, PasswordPolicyState } from "./passwordPolicy";
export type PasswordPolicy = import("./passwordPolicy").PasswordPolicy;
export const PasswordPolicy: typeof import("./passwordPolicy").PasswordPolicy = null as any;
utilities.lazyLoad(exports, ["PasswordPolicy"], () => require("./passwordPolicy"));

export { PasswordPolicyRuleArgs, PasswordPolicyRuleState } from "./passwordPolicyRule";
export type PasswordPolicyRule = import("./passwordPolicyRule").PasswordPolicyRule;
export const PasswordPolicyRule: typeof import("./passwordPolicyRule").PasswordPolicyRule = null as any;
utilities.lazyLoad(exports, ["PasswordPolicyRule"], () => require("./passwordPolicyRule"));

export { SamlAppArgs, SamlAppState } from "./samlApp";
export type SamlApp = import("./samlApp").SamlApp;
export const SamlApp: typeof import("./samlApp").SamlApp = null as any;
utilities.lazyLoad(exports, ["SamlApp"], () => require("./samlApp"));

export { SamlIdpArgs, SamlIdpState } from "./samlIdp";
export type SamlIdp = import("./samlIdp").SamlIdp;
export const SamlIdp: typeof import("./samlIdp").SamlIdp = null as any;
utilities.lazyLoad(exports, ["SamlIdp"], () => require("./samlIdp"));

export { SamlIdpSigningKeyArgs, SamlIdpSigningKeyState } from "./samlIdpSigningKey";
export type SamlIdpSigningKey = import("./samlIdpSigningKey").SamlIdpSigningKey;
export const SamlIdpSigningKey: typeof import("./samlIdpSigningKey").SamlIdpSigningKey = null as any;
utilities.lazyLoad(exports, ["SamlIdpSigningKey"], () => require("./samlIdpSigningKey"));

export { SecurePasswordStoreAppArgs, SecurePasswordStoreAppState } from "./securePasswordStoreApp";
export type SecurePasswordStoreApp = import("./securePasswordStoreApp").SecurePasswordStoreApp;
export const SecurePasswordStoreApp: typeof import("./securePasswordStoreApp").SecurePasswordStoreApp = null as any;
utilities.lazyLoad(exports, ["SecurePasswordStoreApp"], () => require("./securePasswordStoreApp"));

export { SignonPolicyArgs, SignonPolicyState } from "./signonPolicy";
export type SignonPolicy = import("./signonPolicy").SignonPolicy;
export const SignonPolicy: typeof import("./signonPolicy").SignonPolicy = null as any;
utilities.lazyLoad(exports, ["SignonPolicy"], () => require("./signonPolicy"));

export { SignonPolicyRuleArgs, SignonPolicyRuleState } from "./signonPolicyRule";
export type SignonPolicyRule = import("./signonPolicyRule").SignonPolicyRule;
export const SignonPolicyRule: typeof import("./signonPolicyRule").SignonPolicyRule = null as any;
utilities.lazyLoad(exports, ["SignonPolicyRule"], () => require("./signonPolicyRule"));

export { SocialIdpArgs, SocialIdpState } from "./socialIdp";
export type SocialIdp = import("./socialIdp").SocialIdp;
export const SocialIdp: typeof import("./socialIdp").SocialIdp = null as any;
utilities.lazyLoad(exports, ["SocialIdp"], () => require("./socialIdp"));

export { SwaAppArgs, SwaAppState } from "./swaApp";
export type SwaApp = import("./swaApp").SwaApp;
export const SwaApp: typeof import("./swaApp").SwaApp = null as any;
utilities.lazyLoad(exports, ["SwaApp"], () => require("./swaApp"));

export { ThreeFieldAppArgs, ThreeFieldAppState } from "./threeFieldApp";
export type ThreeFieldApp = import("./threeFieldApp").ThreeFieldApp;
export const ThreeFieldApp: typeof import("./threeFieldApp").ThreeFieldApp = null as any;
utilities.lazyLoad(exports, ["ThreeFieldApp"], () => require("./threeFieldApp"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "okta:deprecated/authLoginApp:AuthLoginApp":
                return new AuthLoginApp(name, <any>undefined, { urn })
            case "okta:deprecated/bookmarkApp:BookmarkApp":
                return new BookmarkApp(name, <any>undefined, { urn })
            case "okta:deprecated/idp:Idp":
                return new Idp(name, <any>undefined, { urn })
            case "okta:deprecated/mfaPolicy:MfaPolicy":
                return new MfaPolicy(name, <any>undefined, { urn })
            case "okta:deprecated/mfaPolicyRule:MfaPolicyRule":
                return new MfaPolicyRule(name, <any>undefined, { urn })
            case "okta:deprecated/oauthApp:OauthApp":
                return new OauthApp(name, <any>undefined, { urn })
            case "okta:deprecated/oauthAppRedirectUri:OauthAppRedirectUri":
                return new OauthAppRedirectUri(name, <any>undefined, { urn })
            case "okta:deprecated/passwordPolicy:PasswordPolicy":
                return new PasswordPolicy(name, <any>undefined, { urn })
            case "okta:deprecated/passwordPolicyRule:PasswordPolicyRule":
                return new PasswordPolicyRule(name, <any>undefined, { urn })
            case "okta:deprecated/samlApp:SamlApp":
                return new SamlApp(name, <any>undefined, { urn })
            case "okta:deprecated/samlIdp:SamlIdp":
                return new SamlIdp(name, <any>undefined, { urn })
            case "okta:deprecated/samlIdpSigningKey:SamlIdpSigningKey":
                return new SamlIdpSigningKey(name, <any>undefined, { urn })
            case "okta:deprecated/securePasswordStoreApp:SecurePasswordStoreApp":
                return new SecurePasswordStoreApp(name, <any>undefined, { urn })
            case "okta:deprecated/signonPolicy:SignonPolicy":
                return new SignonPolicy(name, <any>undefined, { urn })
            case "okta:deprecated/signonPolicyRule:SignonPolicyRule":
                return new SignonPolicyRule(name, <any>undefined, { urn })
            case "okta:deprecated/socialIdp:SocialIdp":
                return new SocialIdp(name, <any>undefined, { urn })
            case "okta:deprecated/swaApp:SwaApp":
                return new SwaApp(name, <any>undefined, { urn })
            case "okta:deprecated/threeFieldApp:ThreeFieldApp":
                return new ThreeFieldApp(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("okta", "deprecated/authLoginApp", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/bookmarkApp", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/idp", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/mfaPolicy", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/mfaPolicyRule", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/oauthApp", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/oauthAppRedirectUri", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/passwordPolicy", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/passwordPolicyRule", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/samlApp", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/samlIdp", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/samlIdpSigningKey", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/securePasswordStoreApp", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/signonPolicy", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/signonPolicyRule", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/socialIdp", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/swaApp", _module)
pulumi.runtime.registerResourceModule("okta", "deprecated/threeFieldApp", _module)

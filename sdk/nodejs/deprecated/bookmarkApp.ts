// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * @deprecated Deprecated. Use app.Bookmark instead. This resource will be removed in version 4.0 of this provider.
 */
export class BookmarkApp extends pulumi.CustomResource {
    /**
     * Get an existing BookmarkApp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BookmarkAppState, opts?: pulumi.CustomResourceOptions): BookmarkApp {
        pulumi.log.warn("BookmarkApp is deprecated: Deprecated. Use app.Bookmark instead. This resource will be removed in version 4.0 of this provider.")
        return new BookmarkApp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:deprecated/bookmarkApp:BookmarkApp';

    /**
     * Returns true if the given object is an instance of BookmarkApp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BookmarkApp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BookmarkApp.__pulumiType;
    }

    /**
     * Custom error page URL
     */
    public readonly accessibilityErrorRedirectUrl!: pulumi.Output<string | undefined>;
    /**
     * Custom login page URL
     */
    public readonly accessibilityLoginRedirectUrl!: pulumi.Output<string | undefined>;
    /**
     * Enable self service
     */
    public readonly accessibilitySelfService!: pulumi.Output<boolean | undefined>;
    /**
     * Application notes for admins.
     */
    public readonly adminNote!: pulumi.Output<string | undefined>;
    /**
     * Displays specific appLinks for the app
     */
    public readonly appLinksJson!: pulumi.Output<string | undefined>;
    /**
     * Id of this apps authentication policy
     */
    public readonly authenticationPolicy!: pulumi.Output<string | undefined>;
    /**
     * Display auto submit toolbar
     */
    public readonly autoSubmitToolbar!: pulumi.Output<boolean | undefined>;
    /**
     * Application notes for end users.
     */
    public readonly enduserNote!: pulumi.Output<string | undefined>;
    /**
     * Groups associated with the application
     *
     * @deprecated The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
     */
    public readonly groups!: pulumi.Output<string[] | undefined>;
    /**
     * Do not display application icon on mobile app
     */
    public readonly hideIos!: pulumi.Output<boolean | undefined>;
    /**
     * Do not display application icon to users
     */
    public readonly hideWeb!: pulumi.Output<boolean | undefined>;
    /**
     * Pretty name of app.
     */
    public readonly label!: pulumi.Output<string>;
    /**
     * Local path to logo of the application.
     */
    public readonly logo!: pulumi.Output<string | undefined>;
    /**
     * URL of the application's logo
     */
    public /*out*/ readonly logoUrl!: pulumi.Output<string>;
    /**
     * Name of the app.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly requestIntegration!: pulumi.Output<boolean | undefined>;
    /**
     * Sign on mode of application.
     */
    public /*out*/ readonly signOnMode!: pulumi.Output<string>;
    /**
     * Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources
     */
    public readonly skipGroups!: pulumi.Output<boolean | undefined>;
    /**
     * Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources
     */
    public readonly skipUsers!: pulumi.Output<boolean | undefined>;
    /**
     * Status of application.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    public readonly url!: pulumi.Output<string>;
    /**
     * Users associated with the application
     *
     * @deprecated The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
     */
    public readonly users!: pulumi.Output<outputs.deprecated.BookmarkAppUser[] | undefined>;

    /**
     * Create a BookmarkApp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Deprecated. Use app.Bookmark instead. This resource will be removed in version 4.0 of this provider. */
    constructor(name: string, args: BookmarkAppArgs, opts?: pulumi.CustomResourceOptions)
    /** @deprecated Deprecated. Use app.Bookmark instead. This resource will be removed in version 4.0 of this provider. */
    constructor(name: string, argsOrState?: BookmarkAppArgs | BookmarkAppState, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("BookmarkApp is deprecated: Deprecated. Use app.Bookmark instead. This resource will be removed in version 4.0 of this provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BookmarkAppState | undefined;
            resourceInputs["accessibilityErrorRedirectUrl"] = state ? state.accessibilityErrorRedirectUrl : undefined;
            resourceInputs["accessibilityLoginRedirectUrl"] = state ? state.accessibilityLoginRedirectUrl : undefined;
            resourceInputs["accessibilitySelfService"] = state ? state.accessibilitySelfService : undefined;
            resourceInputs["adminNote"] = state ? state.adminNote : undefined;
            resourceInputs["appLinksJson"] = state ? state.appLinksJson : undefined;
            resourceInputs["authenticationPolicy"] = state ? state.authenticationPolicy : undefined;
            resourceInputs["autoSubmitToolbar"] = state ? state.autoSubmitToolbar : undefined;
            resourceInputs["enduserNote"] = state ? state.enduserNote : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["hideIos"] = state ? state.hideIos : undefined;
            resourceInputs["hideWeb"] = state ? state.hideWeb : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["logo"] = state ? state.logo : undefined;
            resourceInputs["logoUrl"] = state ? state.logoUrl : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["requestIntegration"] = state ? state.requestIntegration : undefined;
            resourceInputs["signOnMode"] = state ? state.signOnMode : undefined;
            resourceInputs["skipGroups"] = state ? state.skipGroups : undefined;
            resourceInputs["skipUsers"] = state ? state.skipUsers : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
        } else {
            const args = argsOrState as BookmarkAppArgs | undefined;
            if ((!args || args.label === undefined) && !opts.urn) {
                throw new Error("Missing required property 'label'");
            }
            if ((!args || args.url === undefined) && !opts.urn) {
                throw new Error("Missing required property 'url'");
            }
            resourceInputs["accessibilityErrorRedirectUrl"] = args ? args.accessibilityErrorRedirectUrl : undefined;
            resourceInputs["accessibilityLoginRedirectUrl"] = args ? args.accessibilityLoginRedirectUrl : undefined;
            resourceInputs["accessibilitySelfService"] = args ? args.accessibilitySelfService : undefined;
            resourceInputs["adminNote"] = args ? args.adminNote : undefined;
            resourceInputs["appLinksJson"] = args ? args.appLinksJson : undefined;
            resourceInputs["authenticationPolicy"] = args ? args.authenticationPolicy : undefined;
            resourceInputs["autoSubmitToolbar"] = args ? args.autoSubmitToolbar : undefined;
            resourceInputs["enduserNote"] = args ? args.enduserNote : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["hideIos"] = args ? args.hideIos : undefined;
            resourceInputs["hideWeb"] = args ? args.hideWeb : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["logo"] = args ? args.logo : undefined;
            resourceInputs["requestIntegration"] = args ? args.requestIntegration : undefined;
            resourceInputs["skipGroups"] = args ? args.skipGroups : undefined;
            resourceInputs["skipUsers"] = args ? args.skipUsers : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["logoUrl"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["signOnMode"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BookmarkApp.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BookmarkApp resources.
 */
export interface BookmarkAppState {
    /**
     * Custom error page URL
     */
    accessibilityErrorRedirectUrl?: pulumi.Input<string>;
    /**
     * Custom login page URL
     */
    accessibilityLoginRedirectUrl?: pulumi.Input<string>;
    /**
     * Enable self service
     */
    accessibilitySelfService?: pulumi.Input<boolean>;
    /**
     * Application notes for admins.
     */
    adminNote?: pulumi.Input<string>;
    /**
     * Displays specific appLinks for the app
     */
    appLinksJson?: pulumi.Input<string>;
    /**
     * Id of this apps authentication policy
     */
    authenticationPolicy?: pulumi.Input<string>;
    /**
     * Display auto submit toolbar
     */
    autoSubmitToolbar?: pulumi.Input<boolean>;
    /**
     * Application notes for end users.
     */
    enduserNote?: pulumi.Input<string>;
    /**
     * Groups associated with the application
     *
     * @deprecated The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Do not display application icon on mobile app
     */
    hideIos?: pulumi.Input<boolean>;
    /**
     * Do not display application icon to users
     */
    hideWeb?: pulumi.Input<boolean>;
    /**
     * Pretty name of app.
     */
    label?: pulumi.Input<string>;
    /**
     * Local path to logo of the application.
     */
    logo?: pulumi.Input<string>;
    /**
     * URL of the application's logo
     */
    logoUrl?: pulumi.Input<string>;
    /**
     * Name of the app.
     */
    name?: pulumi.Input<string>;
    requestIntegration?: pulumi.Input<boolean>;
    /**
     * Sign on mode of application.
     */
    signOnMode?: pulumi.Input<string>;
    /**
     * Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources
     */
    skipGroups?: pulumi.Input<boolean>;
    /**
     * Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources
     */
    skipUsers?: pulumi.Input<boolean>;
    /**
     * Status of application.
     */
    status?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
    /**
     * Users associated with the application
     *
     * @deprecated The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
     */
    users?: pulumi.Input<pulumi.Input<inputs.deprecated.BookmarkAppUser>[]>;
}

/**
 * The set of arguments for constructing a BookmarkApp resource.
 */
export interface BookmarkAppArgs {
    /**
     * Custom error page URL
     */
    accessibilityErrorRedirectUrl?: pulumi.Input<string>;
    /**
     * Custom login page URL
     */
    accessibilityLoginRedirectUrl?: pulumi.Input<string>;
    /**
     * Enable self service
     */
    accessibilitySelfService?: pulumi.Input<boolean>;
    /**
     * Application notes for admins.
     */
    adminNote?: pulumi.Input<string>;
    /**
     * Displays specific appLinks for the app
     */
    appLinksJson?: pulumi.Input<string>;
    /**
     * Id of this apps authentication policy
     */
    authenticationPolicy?: pulumi.Input<string>;
    /**
     * Display auto submit toolbar
     */
    autoSubmitToolbar?: pulumi.Input<boolean>;
    /**
     * Application notes for end users.
     */
    enduserNote?: pulumi.Input<string>;
    /**
     * Groups associated with the application
     *
     * @deprecated The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Do not display application icon on mobile app
     */
    hideIos?: pulumi.Input<boolean>;
    /**
     * Do not display application icon to users
     */
    hideWeb?: pulumi.Input<boolean>;
    /**
     * Pretty name of app.
     */
    label: pulumi.Input<string>;
    /**
     * Local path to logo of the application.
     */
    logo?: pulumi.Input<string>;
    requestIntegration?: pulumi.Input<boolean>;
    /**
     * Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources
     */
    skipGroups?: pulumi.Input<boolean>;
    /**
     * Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources
     */
    skipUsers?: pulumi.Input<boolean>;
    /**
     * Status of application.
     */
    status?: pulumi.Input<string>;
    url: pulumi.Input<string>;
    /**
     * Users associated with the application
     *
     * @deprecated The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
     */
    users?: pulumi.Input<pulumi.Input<inputs.deprecated.BookmarkAppUser>[]>;
}

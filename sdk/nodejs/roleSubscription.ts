// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages group subscription.
 *
 * This resource allows you to configure subscriptions of a Role with a specific type.
 * Check [configure email notifications](https://help.okta.com/oie/en-us/Content/Topics/Security/custom-admin-role/administrator-email-settings.htm)
 * page regarding what notifications are available for specific admin roles.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const test = new okta.RoleSubscription("test", {
 *     roleType: "SUPER_ADMIN",
 *     notificationType: "APP_IMPORT",
 *     status: "unsubscribed",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import okta:index/roleSubscription:RoleSubscription example <role_type>/<notification_type>
 * ```
 */
export class RoleSubscription extends pulumi.CustomResource {
    /**
     * Get an existing RoleSubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoleSubscriptionState, opts?: pulumi.CustomResourceOptions): RoleSubscription {
        return new RoleSubscription(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:index/roleSubscription:RoleSubscription';

    /**
     * Returns true if the given object is an instance of RoleSubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoleSubscription {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoleSubscription.__pulumiType;
    }

    /**
     * Type of the notification. Valid values: 
     * 	- 'CONNECTOR_AGENT' -  Disconnects and reconnects: On-prem provisioning, on-prem MFA agents, and RADIUS server agent.
     * 	- 'USER_LOCKED_OUT' - User lockouts.
     * 	- 'APP_IMPORT' - App user import status.
     * 	- 'LDAP_AGENT' - Disconnects and reconnects: LDAP agent.
     * 	- 'AD_AGENT' - Disconnects and reconnects: AD agent.
     * 	- 'OKTA_ANNOUNCEMENT' - Okta release notes and announcements.
     * 	- 'OKTA_UPDATE' - Scheduled system updates.
     * 	- 'IWA_AGENT' - Disconnects and reconnects: IWA agent.
     * 	- 'USER_DEPROVISION' - User deprovisions.
     * 	- 'REPORT_SUSPICIOUS_ACTIVITY' - User reporting of suspicious activity.
     * 	- 'RATELIMIT_NOTIFICATION' - Rate limit warning and violation.
     * 	- 'AGENT_AUTO_UPDATE_NOTIFICATION' - Agent auto-update notifications: AD Agent.
     */
    declare public readonly notificationType: pulumi.Output<string>;
    /**
     * Type of the role. Valid values:
     * 	'API_ADMIN',
     * 	'APP_ADMIN',
     * 	'CUSTOM',
     * 	'GROUP_MEMBERSHIP_ADMIN',
     * 	'HELP_DESK_ADMIN',
     * 	'MOBILE_ADMIN',
     * 	'ORG_ADMIN',
     * 	'READ_ONLY_ADMIN',
     * 	'REPORT_ADMIN',
     * 	'SUPER_ADMIN',
     * 	'USER_ADMIN'
     * 	. See [API docs](https://developer.okta.com/docs/reference/api/admin-notifications/#role-types).
     */
    declare public readonly roleType: pulumi.Output<string>;
    /**
     * Subscription status. Valid values: `subscribed`, `unsubscribed`.
     */
    declare public readonly status: pulumi.Output<string | undefined>;

    /**
     * Create a RoleSubscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoleSubscriptionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoleSubscriptionArgs | RoleSubscriptionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoleSubscriptionState | undefined;
            resourceInputs["notificationType"] = state?.notificationType;
            resourceInputs["roleType"] = state?.roleType;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as RoleSubscriptionArgs | undefined;
            if (args?.notificationType === undefined && !opts.urn) {
                throw new Error("Missing required property 'notificationType'");
            }
            if (args?.roleType === undefined && !opts.urn) {
                throw new Error("Missing required property 'roleType'");
            }
            resourceInputs["notificationType"] = args?.notificationType;
            resourceInputs["roleType"] = args?.roleType;
            resourceInputs["status"] = args?.status;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RoleSubscription.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RoleSubscription resources.
 */
export interface RoleSubscriptionState {
    /**
     * Type of the notification. Valid values: 
     * 	- 'CONNECTOR_AGENT' -  Disconnects and reconnects: On-prem provisioning, on-prem MFA agents, and RADIUS server agent.
     * 	- 'USER_LOCKED_OUT' - User lockouts.
     * 	- 'APP_IMPORT' - App user import status.
     * 	- 'LDAP_AGENT' - Disconnects and reconnects: LDAP agent.
     * 	- 'AD_AGENT' - Disconnects and reconnects: AD agent.
     * 	- 'OKTA_ANNOUNCEMENT' - Okta release notes and announcements.
     * 	- 'OKTA_UPDATE' - Scheduled system updates.
     * 	- 'IWA_AGENT' - Disconnects and reconnects: IWA agent.
     * 	- 'USER_DEPROVISION' - User deprovisions.
     * 	- 'REPORT_SUSPICIOUS_ACTIVITY' - User reporting of suspicious activity.
     * 	- 'RATELIMIT_NOTIFICATION' - Rate limit warning and violation.
     * 	- 'AGENT_AUTO_UPDATE_NOTIFICATION' - Agent auto-update notifications: AD Agent.
     */
    notificationType?: pulumi.Input<string>;
    /**
     * Type of the role. Valid values:
     * 	'API_ADMIN',
     * 	'APP_ADMIN',
     * 	'CUSTOM',
     * 	'GROUP_MEMBERSHIP_ADMIN',
     * 	'HELP_DESK_ADMIN',
     * 	'MOBILE_ADMIN',
     * 	'ORG_ADMIN',
     * 	'READ_ONLY_ADMIN',
     * 	'REPORT_ADMIN',
     * 	'SUPER_ADMIN',
     * 	'USER_ADMIN'
     * 	. See [API docs](https://developer.okta.com/docs/reference/api/admin-notifications/#role-types).
     */
    roleType?: pulumi.Input<string>;
    /**
     * Subscription status. Valid values: `subscribed`, `unsubscribed`.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RoleSubscription resource.
 */
export interface RoleSubscriptionArgs {
    /**
     * Type of the notification. Valid values: 
     * 	- 'CONNECTOR_AGENT' -  Disconnects and reconnects: On-prem provisioning, on-prem MFA agents, and RADIUS server agent.
     * 	- 'USER_LOCKED_OUT' - User lockouts.
     * 	- 'APP_IMPORT' - App user import status.
     * 	- 'LDAP_AGENT' - Disconnects and reconnects: LDAP agent.
     * 	- 'AD_AGENT' - Disconnects and reconnects: AD agent.
     * 	- 'OKTA_ANNOUNCEMENT' - Okta release notes and announcements.
     * 	- 'OKTA_UPDATE' - Scheduled system updates.
     * 	- 'IWA_AGENT' - Disconnects and reconnects: IWA agent.
     * 	- 'USER_DEPROVISION' - User deprovisions.
     * 	- 'REPORT_SUSPICIOUS_ACTIVITY' - User reporting of suspicious activity.
     * 	- 'RATELIMIT_NOTIFICATION' - Rate limit warning and violation.
     * 	- 'AGENT_AUTO_UPDATE_NOTIFICATION' - Agent auto-update notifications: AD Agent.
     */
    notificationType: pulumi.Input<string>;
    /**
     * Type of the role. Valid values:
     * 	'API_ADMIN',
     * 	'APP_ADMIN',
     * 	'CUSTOM',
     * 	'GROUP_MEMBERSHIP_ADMIN',
     * 	'HELP_DESK_ADMIN',
     * 	'MOBILE_ADMIN',
     * 	'ORG_ADMIN',
     * 	'READ_ONLY_ADMIN',
     * 	'REPORT_ADMIN',
     * 	'SUPER_ADMIN',
     * 	'USER_ADMIN'
     * 	. See [API docs](https://developer.okta.com/docs/reference/api/admin-notifications/#role-types).
     */
    roleType: pulumi.Input<string>;
    /**
     * Subscription status. Valid values: `subscribed`, `unsubscribed`.
     */
    status?: pulumi.Input<string>;
}

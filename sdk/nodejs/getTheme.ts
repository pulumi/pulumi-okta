// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve a
 * [Theme](https://developer.okta.com/docs/reference/api/brands/#theme-response-object)
 * of a brand for an Okta orgnanization.
 */
export function getTheme(args: GetThemeArgs, opts?: pulumi.InvokeOptions): Promise<GetThemeResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("okta:index/getTheme:getTheme", {
        "brandId": args.brandId,
        "themeId": args.themeId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTheme.
 */
export interface GetThemeArgs {
    /**
     * Brand ID
     */
    brandId: string;
    /**
     * Theme ID
     */
    themeId: string;
}

/**
 * A collection of values returned by getTheme.
 */
export interface GetThemeResult {
    /**
     * Background image URL
     */
    readonly backgroundImageUrl: string;
    readonly brandId: string;
    /**
     * (Enum) Variant for email templates (`OKTA_DEFAULT`, `FULL_THEME`)
     */
    readonly emailTemplateTouchPointVariant: string;
    /**
     * (Enum) Variant for the Okta End-User Dashboard (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)
     */
    readonly endUserDashboardTouchPointVariant: string;
    /**
     * (Enum) Variant for the error page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
     */
    readonly errorPageTouchPointVariant: string;
    /**
     * Favicon URL
     */
    readonly faviconUrl: string;
    /**
     * Theme URL
     */
    readonly id: string;
    /**
     * Link relations for this object - JSON HAL - Discoverable resources related to the brand
     */
    readonly links: string;
    /**
     * Logo URL
     */
    readonly logoUrl: string;
    /**
     * Primary color contrast hex code
     */
    readonly primaryColorContrastHex: string;
    /**
     * Primary color hex code
     */
    readonly primaryColorHex: string;
    readonly secondaryColorContrastHex: string;
    /**
     * Secondary color hex code
     * - `secondaryColorContrastHex` Secondary color contrast hex code
     */
    readonly secondaryColorHex: string;
    /**
     * (Enum) Variant for the Okta Sign-In Page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
     */
    readonly signInPageTouchPointVariant: string;
    readonly themeId: string;
}

export function getThemeOutput(args: GetThemeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetThemeResult> {
    return pulumi.output(args).apply(a => getTheme(a, opts))
}

/**
 * A collection of arguments for invoking getTheme.
 */
export interface GetThemeOutputArgs {
    /**
     * Brand ID
     */
    brandId: pulumi.Input<string>;
    /**
     * Theme ID
     */
    themeId: pulumi.Input<string>;
}

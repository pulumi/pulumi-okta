// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages rate limiting.
 * This resource allows you to configure the client-based rate limit and rate limiting communications settings.
 * > **WARNING:** This resource is deprecated and will be removed in a future release. A new resource to manage rate limiting settings will be implemented in the future.
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import okta:index/rateLimiting:RateLimiting example .
 * ```
 */
export class RateLimiting extends pulumi.CustomResource {
    /**
     * Get an existing RateLimiting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RateLimitingState, opts?: pulumi.CustomResourceOptions): RateLimiting {
        return new RateLimiting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:index/rateLimiting:RateLimiting';

    /**
     * Returns true if the given object is an instance of RateLimiting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RateLimiting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RateLimiting.__pulumiType;
    }

    declare public readonly defaultMode: pulumi.Output<string>;
    /**
     * A map of Per-Client Rate Limit Use Case to the applicable PerClientRateLimitMode.Overrides the defaultMode property for the specified use cases.
     */
    declare public readonly useCaseModeOverrides: pulumi.Output<outputs.RateLimitingUseCaseModeOverrides | undefined>;

    /**
     * Create a RateLimiting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RateLimitingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RateLimitingArgs | RateLimitingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RateLimitingState | undefined;
            resourceInputs["defaultMode"] = state?.defaultMode;
            resourceInputs["useCaseModeOverrides"] = state?.useCaseModeOverrides;
        } else {
            const args = argsOrState as RateLimitingArgs | undefined;
            if (args?.defaultMode === undefined && !opts.urn) {
                throw new Error("Missing required property 'defaultMode'");
            }
            resourceInputs["defaultMode"] = args?.defaultMode;
            resourceInputs["useCaseModeOverrides"] = args?.useCaseModeOverrides;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RateLimiting.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RateLimiting resources.
 */
export interface RateLimitingState {
    defaultMode?: pulumi.Input<string>;
    /**
     * A map of Per-Client Rate Limit Use Case to the applicable PerClientRateLimitMode.Overrides the defaultMode property for the specified use cases.
     */
    useCaseModeOverrides?: pulumi.Input<inputs.RateLimitingUseCaseModeOverrides>;
}

/**
 * The set of arguments for constructing a RateLimiting resource.
 */
export interface RateLimitingArgs {
    defaultMode: pulumi.Input<string>;
    /**
     * A map of Per-Client Rate Limit Use Case to the applicable PerClientRateLimitMode.Overrides the defaultMode property for the specified use cases.
     */
    useCaseModeOverrides?: pulumi.Input<inputs.RateLimitingUseCaseModeOverrides>;
}

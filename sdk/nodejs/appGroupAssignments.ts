// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Assigns groups to an application.
 *
 * This resource allows you to create multiple App Group assignments.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = new okta.AppGroupAssignments("example", {
 *     appId: "<app id>",
 *     groups: [
 *         {
 *             id: "<group id>",
 *             priority: 1,
 *         },
 *         {
 *             id: "<another group id>",
 *             priority: 2,
 *             profile: JSON.stringify({
 *                 "application profile field": "application profile value",
 *             }),
 *         },
 *     ],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * An application's group assignments can be imported via `app_id`.
 *
 * ```sh
 * $ pulumi import okta:index/appGroupAssignments:AppGroupAssignments example &#60;app_id&#62;
 * ```
 */
export class AppGroupAssignments extends pulumi.CustomResource {
    /**
     * Get an existing AppGroupAssignments resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppGroupAssignmentsState, opts?: pulumi.CustomResourceOptions): AppGroupAssignments {
        return new AppGroupAssignments(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:index/appGroupAssignments:AppGroupAssignments';

    /**
     * Returns true if the given object is an instance of AppGroupAssignments.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppGroupAssignments {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppGroupAssignments.__pulumiType;
    }

    /**
     * The ID of the application to assign a group to.
     */
    public readonly appId!: pulumi.Output<string>;
    /**
     * A group to assign the app to.
     */
    public readonly groups!: pulumi.Output<outputs.AppGroupAssignmentsGroup[]>;

    /**
     * Create a AppGroupAssignments resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppGroupAssignmentsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppGroupAssignmentsArgs | AppGroupAssignmentsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppGroupAssignmentsState | undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
        } else {
            const args = argsOrState as AppGroupAssignmentsArgs | undefined;
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if ((!args || args.groups === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groups'");
            }
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppGroupAssignments.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppGroupAssignments resources.
 */
export interface AppGroupAssignmentsState {
    /**
     * The ID of the application to assign a group to.
     */
    appId?: pulumi.Input<string>;
    /**
     * A group to assign the app to.
     */
    groups?: pulumi.Input<pulumi.Input<inputs.AppGroupAssignmentsGroup>[]>;
}

/**
 * The set of arguments for constructing a AppGroupAssignments resource.
 */
export interface AppGroupAssignmentsArgs {
    /**
     * The ID of the application to assign a group to.
     */
    appId: pulumi.Input<string>;
    /**
     * A group to assign the app to.
     */
    groups: pulumi.Input<pulumi.Input<inputs.AppGroupAssignmentsGroup>[]>;
}

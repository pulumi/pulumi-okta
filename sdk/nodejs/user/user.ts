// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Creates an Okta User.
 *
 * This resource allows you to create and configure an Okta User.
 *
 * ## Example Usage
 *
 * Full profile:
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = new okta.user.User("example", {
 *     firstName: "John",
 *     lastName: "Smith",
 *     login: "john.smith@example.com",
 *     email: "john.smith@example.com",
 *     city: "New York",
 *     costCenter: "10",
 *     countryCode: "US",
 *     department: "IT",
 *     displayName: "Dr. John Smith",
 *     division: "Acquisitions",
 *     employeeNumber: "111111",
 *     honorificPrefix: "Dr.",
 *     honorificSuffix: "Jr.",
 *     locale: "en_US",
 *     manager: "Jimbo",
 *     managerId: "222222",
 *     middleName: "John",
 *     mobilePhone: "1112223333",
 *     nickName: "Johnny",
 *     organization: "Testing Inc.",
 *     postalAddress: "1234 Testing St.",
 *     preferredLanguage: "en-us",
 *     primaryPhone: "4445556666",
 *     profileUrl: "https://www.example.com/profile",
 *     secondEmail: "john.smith.fun@example.com",
 *     state: "NY",
 *     streetAddress: "5678 Testing Ave.",
 *     timezone: "America/New_York",
 *     title: "Director",
 *     userType: "Employee",
 *     zipCode: "11111",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * With Password Inline Hook:
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const test2 = new okta.user.User("test2", {
 *     firstName: "John",
 *     lastName: "Smith",
 *     login: "example@example.com",
 *     email: "example@example.com",
 *     passwordInlineHook: "default",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * An Okta User can be imported via the ID.
 *
 * ```sh
 * $ pulumi import okta:user/user:User example &#60;user id&#62;
 * ```
 */
export class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserState, opts?: pulumi.CustomResourceOptions): User {
        return new User(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:user/user:User';

    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is User {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }

    /**
     * User profile property.
     */
    public readonly city!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly costCenter!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly countryCode!: pulumi.Output<string | undefined>;
    /**
     * raw JSON containing all custom profile attributes.
     */
    public readonly customProfileAttributes!: pulumi.Output<string>;
    /**
     * List of custom_profile_attribute keys that should be excluded from being managed by Terraform. This is useful in
     * situations where specific custom fields may contain sensitive information and should be managed outside of Terraform.
     */
    public readonly customProfileAttributesToIgnores!: pulumi.Output<string[] | undefined>;
    /**
     * User profile property.
     */
    public readonly department!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly division!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly email!: pulumi.Output<string>;
    /**
     * User profile property.
     */
    public readonly employeeNumber!: pulumi.Output<string | undefined>;
    /**
     * If set to `true`, the user will have to change the password at the next login. This property will be used
     * when user is being created and works only when `password` field is set. Default is `false`.
     */
    public readonly expirePasswordOnCreate!: pulumi.Output<boolean | undefined>;
    /**
     * User's First Name, required by default.
     */
    public readonly firstName!: pulumi.Output<string>;
    /**
     * User profile property.
     */
    public readonly honorificPrefix!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly honorificSuffix!: pulumi.Output<string | undefined>;
    /**
     * User's Last Name, required by default.
     */
    public readonly lastName!: pulumi.Output<string>;
    /**
     * User profile property.
     */
    public readonly locale!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly login!: pulumi.Output<string>;
    /**
     * User profile property.
     */
    public readonly manager!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly managerId!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly middleName!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly mobilePhone!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly nickName!: pulumi.Output<string | undefined>;
    /**
     * Old user password. **IMPORTANT**: Should be ONLY set in case the password was changed
     * outside the provider. After successful password change this field should be removed and `password` field should be used
     * for further changes.
     */
    public readonly oldPassword!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly organization!: pulumi.Output<string | undefined>;
    /**
     * User password.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Specifies a hashed password to import into Okta.
     */
    public readonly passwordHash!: pulumi.Output<outputs.user.UserPasswordHash | undefined>;
    /**
     * Specifies that a Password Import Inline Hook should be triggered to handle verification
     * of the user's password the first time the user logs in. This allows an existing password to be imported into Okta directly
     * from some other store. When updating a user with a password hook the user must be in the `STAGED` status. The `password`
     * field should not be specified when using Password Import Inline Hook.
     */
    public readonly passwordInlineHook!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly postalAddress!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly preferredLanguage!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly primaryPhone!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly profileUrl!: pulumi.Output<string | undefined>;
    /**
     * The raw status of the User in Okta - (status is mapped)
     */
    public /*out*/ readonly rawStatus!: pulumi.Output<string>;
    /**
     * User password recovery answer.
     *
     * - `password hash` - (Optional) Specifies a hashed password to import into Okta. When updating a user with a hashed password the user must be in the `STAGED` status.
     * - `algorithm"` - (Required) The algorithm used to generate the hash using the password (and salt, when applicable). Must be set to BCRYPT, SHA-512, SHA-256, SHA-1 or MD5.
     */
    public readonly recoveryAnswer!: pulumi.Output<string | undefined>;
    /**
     * User password recovery question.
     */
    public readonly recoveryQuestion!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly secondEmail!: pulumi.Output<string | undefined>;
    /**
     * Do not populate user roles information (prevents additional API call)
     *
     * @deprecated Because adminRoles has been removed, this attribute is a no op and will be removed
     */
    public readonly skipRoles!: pulumi.Output<boolean | undefined>;
    /**
     * User profile property.
     */
    public readonly state!: pulumi.Output<string | undefined>;
    /**
     * User profile property. Valid values are "ACTIVE", "DEPROVISIONED", "STAGED", "SUSPENDED"
     */
    public readonly status!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly streetAddress!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly timezone!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly title!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly userType!: pulumi.Output<string | undefined>;
    /**
     * User profile property.
     */
    public readonly zipCode!: pulumi.Output<string | undefined>;

    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserArgs | UserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserState | undefined;
            resourceInputs["city"] = state ? state.city : undefined;
            resourceInputs["costCenter"] = state ? state.costCenter : undefined;
            resourceInputs["countryCode"] = state ? state.countryCode : undefined;
            resourceInputs["customProfileAttributes"] = state ? state.customProfileAttributes : undefined;
            resourceInputs["customProfileAttributesToIgnores"] = state ? state.customProfileAttributesToIgnores : undefined;
            resourceInputs["department"] = state ? state.department : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["division"] = state ? state.division : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["employeeNumber"] = state ? state.employeeNumber : undefined;
            resourceInputs["expirePasswordOnCreate"] = state ? state.expirePasswordOnCreate : undefined;
            resourceInputs["firstName"] = state ? state.firstName : undefined;
            resourceInputs["honorificPrefix"] = state ? state.honorificPrefix : undefined;
            resourceInputs["honorificSuffix"] = state ? state.honorificSuffix : undefined;
            resourceInputs["lastName"] = state ? state.lastName : undefined;
            resourceInputs["locale"] = state ? state.locale : undefined;
            resourceInputs["login"] = state ? state.login : undefined;
            resourceInputs["manager"] = state ? state.manager : undefined;
            resourceInputs["managerId"] = state ? state.managerId : undefined;
            resourceInputs["middleName"] = state ? state.middleName : undefined;
            resourceInputs["mobilePhone"] = state ? state.mobilePhone : undefined;
            resourceInputs["nickName"] = state ? state.nickName : undefined;
            resourceInputs["oldPassword"] = state ? state.oldPassword : undefined;
            resourceInputs["organization"] = state ? state.organization : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["passwordHash"] = state ? state.passwordHash : undefined;
            resourceInputs["passwordInlineHook"] = state ? state.passwordInlineHook : undefined;
            resourceInputs["postalAddress"] = state ? state.postalAddress : undefined;
            resourceInputs["preferredLanguage"] = state ? state.preferredLanguage : undefined;
            resourceInputs["primaryPhone"] = state ? state.primaryPhone : undefined;
            resourceInputs["profileUrl"] = state ? state.profileUrl : undefined;
            resourceInputs["rawStatus"] = state ? state.rawStatus : undefined;
            resourceInputs["recoveryAnswer"] = state ? state.recoveryAnswer : undefined;
            resourceInputs["recoveryQuestion"] = state ? state.recoveryQuestion : undefined;
            resourceInputs["secondEmail"] = state ? state.secondEmail : undefined;
            resourceInputs["skipRoles"] = state ? state.skipRoles : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["streetAddress"] = state ? state.streetAddress : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
            resourceInputs["userType"] = state ? state.userType : undefined;
            resourceInputs["zipCode"] = state ? state.zipCode : undefined;
        } else {
            const args = argsOrState as UserArgs | undefined;
            if ((!args || args.email === undefined) && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            if ((!args || args.firstName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firstName'");
            }
            if ((!args || args.lastName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lastName'");
            }
            if ((!args || args.login === undefined) && !opts.urn) {
                throw new Error("Missing required property 'login'");
            }
            resourceInputs["city"] = args ? args.city : undefined;
            resourceInputs["costCenter"] = args ? args.costCenter : undefined;
            resourceInputs["countryCode"] = args ? args.countryCode : undefined;
            resourceInputs["customProfileAttributes"] = args ? args.customProfileAttributes : undefined;
            resourceInputs["customProfileAttributesToIgnores"] = args ? args.customProfileAttributesToIgnores : undefined;
            resourceInputs["department"] = args ? args.department : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["division"] = args ? args.division : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["employeeNumber"] = args ? args.employeeNumber : undefined;
            resourceInputs["expirePasswordOnCreate"] = args ? args.expirePasswordOnCreate : undefined;
            resourceInputs["firstName"] = args ? args.firstName : undefined;
            resourceInputs["honorificPrefix"] = args ? args.honorificPrefix : undefined;
            resourceInputs["honorificSuffix"] = args ? args.honorificSuffix : undefined;
            resourceInputs["lastName"] = args ? args.lastName : undefined;
            resourceInputs["locale"] = args ? args.locale : undefined;
            resourceInputs["login"] = args ? args.login : undefined;
            resourceInputs["manager"] = args ? args.manager : undefined;
            resourceInputs["managerId"] = args ? args.managerId : undefined;
            resourceInputs["middleName"] = args ? args.middleName : undefined;
            resourceInputs["mobilePhone"] = args ? args.mobilePhone : undefined;
            resourceInputs["nickName"] = args ? args.nickName : undefined;
            resourceInputs["oldPassword"] = args?.oldPassword ? pulumi.secret(args.oldPassword) : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["passwordHash"] = args ? args.passwordHash : undefined;
            resourceInputs["passwordInlineHook"] = args ? args.passwordInlineHook : undefined;
            resourceInputs["postalAddress"] = args ? args.postalAddress : undefined;
            resourceInputs["preferredLanguage"] = args ? args.preferredLanguage : undefined;
            resourceInputs["primaryPhone"] = args ? args.primaryPhone : undefined;
            resourceInputs["profileUrl"] = args ? args.profileUrl : undefined;
            resourceInputs["recoveryAnswer"] = args?.recoveryAnswer ? pulumi.secret(args.recoveryAnswer) : undefined;
            resourceInputs["recoveryQuestion"] = args ? args.recoveryQuestion : undefined;
            resourceInputs["secondEmail"] = args ? args.secondEmail : undefined;
            resourceInputs["skipRoles"] = args ? args.skipRoles : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["streetAddress"] = args ? args.streetAddress : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["userType"] = args ? args.userType : undefined;
            resourceInputs["zipCode"] = args ? args.zipCode : undefined;
            resourceInputs["rawStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["oldPassword", "password", "recoveryAnswer"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(User.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering User resources.
 */
export interface UserState {
    /**
     * User profile property.
     */
    city?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    costCenter?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    countryCode?: pulumi.Input<string>;
    /**
     * raw JSON containing all custom profile attributes.
     */
    customProfileAttributes?: pulumi.Input<string>;
    /**
     * List of custom_profile_attribute keys that should be excluded from being managed by Terraform. This is useful in
     * situations where specific custom fields may contain sensitive information and should be managed outside of Terraform.
     */
    customProfileAttributesToIgnores?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User profile property.
     */
    department?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    displayName?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    division?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    email?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    employeeNumber?: pulumi.Input<string>;
    /**
     * If set to `true`, the user will have to change the password at the next login. This property will be used
     * when user is being created and works only when `password` field is set. Default is `false`.
     */
    expirePasswordOnCreate?: pulumi.Input<boolean>;
    /**
     * User's First Name, required by default.
     */
    firstName?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    honorificPrefix?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    honorificSuffix?: pulumi.Input<string>;
    /**
     * User's Last Name, required by default.
     */
    lastName?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    locale?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    login?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    manager?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    managerId?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    middleName?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    mobilePhone?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    nickName?: pulumi.Input<string>;
    /**
     * Old user password. **IMPORTANT**: Should be ONLY set in case the password was changed
     * outside the provider. After successful password change this field should be removed and `password` field should be used
     * for further changes.
     */
    oldPassword?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    organization?: pulumi.Input<string>;
    /**
     * User password.
     */
    password?: pulumi.Input<string>;
    /**
     * Specifies a hashed password to import into Okta.
     */
    passwordHash?: pulumi.Input<inputs.user.UserPasswordHash>;
    /**
     * Specifies that a Password Import Inline Hook should be triggered to handle verification
     * of the user's password the first time the user logs in. This allows an existing password to be imported into Okta directly
     * from some other store. When updating a user with a password hook the user must be in the `STAGED` status. The `password`
     * field should not be specified when using Password Import Inline Hook.
     */
    passwordInlineHook?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    postalAddress?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    preferredLanguage?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    primaryPhone?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    profileUrl?: pulumi.Input<string>;
    /**
     * The raw status of the User in Okta - (status is mapped)
     */
    rawStatus?: pulumi.Input<string>;
    /**
     * User password recovery answer.
     *
     * - `password hash` - (Optional) Specifies a hashed password to import into Okta. When updating a user with a hashed password the user must be in the `STAGED` status.
     * - `algorithm"` - (Required) The algorithm used to generate the hash using the password (and salt, when applicable). Must be set to BCRYPT, SHA-512, SHA-256, SHA-1 or MD5.
     */
    recoveryAnswer?: pulumi.Input<string>;
    /**
     * User password recovery question.
     */
    recoveryQuestion?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    secondEmail?: pulumi.Input<string>;
    /**
     * Do not populate user roles information (prevents additional API call)
     *
     * @deprecated Because adminRoles has been removed, this attribute is a no op and will be removed
     */
    skipRoles?: pulumi.Input<boolean>;
    /**
     * User profile property.
     */
    state?: pulumi.Input<string>;
    /**
     * User profile property. Valid values are "ACTIVE", "DEPROVISIONED", "STAGED", "SUSPENDED"
     */
    status?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    streetAddress?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    timezone?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    title?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    userType?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    zipCode?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * User profile property.
     */
    city?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    costCenter?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    countryCode?: pulumi.Input<string>;
    /**
     * raw JSON containing all custom profile attributes.
     */
    customProfileAttributes?: pulumi.Input<string>;
    /**
     * List of custom_profile_attribute keys that should be excluded from being managed by Terraform. This is useful in
     * situations where specific custom fields may contain sensitive information and should be managed outside of Terraform.
     */
    customProfileAttributesToIgnores?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User profile property.
     */
    department?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    displayName?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    division?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    email: pulumi.Input<string>;
    /**
     * User profile property.
     */
    employeeNumber?: pulumi.Input<string>;
    /**
     * If set to `true`, the user will have to change the password at the next login. This property will be used
     * when user is being created and works only when `password` field is set. Default is `false`.
     */
    expirePasswordOnCreate?: pulumi.Input<boolean>;
    /**
     * User's First Name, required by default.
     */
    firstName: pulumi.Input<string>;
    /**
     * User profile property.
     */
    honorificPrefix?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    honorificSuffix?: pulumi.Input<string>;
    /**
     * User's Last Name, required by default.
     */
    lastName: pulumi.Input<string>;
    /**
     * User profile property.
     */
    locale?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    login: pulumi.Input<string>;
    /**
     * User profile property.
     */
    manager?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    managerId?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    middleName?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    mobilePhone?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    nickName?: pulumi.Input<string>;
    /**
     * Old user password. **IMPORTANT**: Should be ONLY set in case the password was changed
     * outside the provider. After successful password change this field should be removed and `password` field should be used
     * for further changes.
     */
    oldPassword?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    organization?: pulumi.Input<string>;
    /**
     * User password.
     */
    password?: pulumi.Input<string>;
    /**
     * Specifies a hashed password to import into Okta.
     */
    passwordHash?: pulumi.Input<inputs.user.UserPasswordHash>;
    /**
     * Specifies that a Password Import Inline Hook should be triggered to handle verification
     * of the user's password the first time the user logs in. This allows an existing password to be imported into Okta directly
     * from some other store. When updating a user with a password hook the user must be in the `STAGED` status. The `password`
     * field should not be specified when using Password Import Inline Hook.
     */
    passwordInlineHook?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    postalAddress?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    preferredLanguage?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    primaryPhone?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    profileUrl?: pulumi.Input<string>;
    /**
     * User password recovery answer.
     *
     * - `password hash` - (Optional) Specifies a hashed password to import into Okta. When updating a user with a hashed password the user must be in the `STAGED` status.
     * - `algorithm"` - (Required) The algorithm used to generate the hash using the password (and salt, when applicable). Must be set to BCRYPT, SHA-512, SHA-256, SHA-1 or MD5.
     */
    recoveryAnswer?: pulumi.Input<string>;
    /**
     * User password recovery question.
     */
    recoveryQuestion?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    secondEmail?: pulumi.Input<string>;
    /**
     * Do not populate user roles information (prevents additional API call)
     *
     * @deprecated Because adminRoles has been removed, this attribute is a no op and will be removed
     */
    skipRoles?: pulumi.Input<boolean>;
    /**
     * User profile property.
     */
    state?: pulumi.Input<string>;
    /**
     * User profile property. Valid values are "ACTIVE", "DEPROVISIONED", "STAGED", "SUSPENDED"
     */
    status?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    streetAddress?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    timezone?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    title?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    userType?: pulumi.Input<string>;
    /**
     * User profile property.
     */
    zipCode?: pulumi.Input<string>;
}

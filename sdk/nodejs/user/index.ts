// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetUserArgs, GetUserResult, GetUserOutputArgs } from "./getUser";
export const getUser: typeof import("./getUser").getUser = null as any;
export const getUserOutput: typeof import("./getUser").getUserOutput = null as any;
utilities.lazyLoad(exports, ["getUser","getUserOutput"], () => require("./getUser"));

export { GetUserProfileMappingSourceResult } from "./getUserProfileMappingSource";
export const getUserProfileMappingSource: typeof import("./getUserProfileMappingSource").getUserProfileMappingSource = null as any;
export const getUserProfileMappingSourceOutput: typeof import("./getUserProfileMappingSource").getUserProfileMappingSourceOutput = null as any;
utilities.lazyLoad(exports, ["getUserProfileMappingSource","getUserProfileMappingSourceOutput"], () => require("./getUserProfileMappingSource"));

export { GetUserTypeArgs, GetUserTypeResult, GetUserTypeOutputArgs } from "./getUserType";
export const getUserType: typeof import("./getUserType").getUserType = null as any;
export const getUserTypeOutput: typeof import("./getUserType").getUserTypeOutput = null as any;
utilities.lazyLoad(exports, ["getUserType","getUserTypeOutput"], () => require("./getUserType"));

export { GetUsersArgs, GetUsersResult, GetUsersOutputArgs } from "./getUsers";
export const getUsers: typeof import("./getUsers").getUsers = null as any;
export const getUsersOutput: typeof import("./getUsers").getUsersOutput = null as any;
utilities.lazyLoad(exports, ["getUsers","getUsersOutput"], () => require("./getUsers"));

export { UserArgs, UserState } from "./user";
export type User = import("./user").User;
export const User: typeof import("./user").User = null as any;
utilities.lazyLoad(exports, ["User"], () => require("./user"));

export { UserTypeArgs, UserTypeState } from "./userType";
export type UserType = import("./userType").UserType;
export const UserType: typeof import("./userType").UserType = null as any;
utilities.lazyLoad(exports, ["UserType"], () => require("./userType"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "okta:user/user:User":
                return new User(name, <any>undefined, { urn })
            case "okta:user/userType:UserType":
                return new UserType(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("okta", "user/user", _module)
pulumi.runtime.registerResourceModule("okta", "user/userType", _module)

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to retrieve a user type from Okta.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = pulumi.output(okta.user.getUserType({
 *     name: "example",
 * }));
 * ```
 */
export function getUserType(args: GetUserTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetUserTypeResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("okta:user/getUserType:getUserType", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserType.
 */
export interface GetUserTypeArgs {
    /**
     * name of user type to retrieve.
     */
    name: string;
}

/**
 * A collection of values returned by getUserType.
 */
export interface GetUserTypeResult {
    /**
     * description of user type.
     */
    readonly description: string;
    /**
     * display name of user type.
     */
    readonly displayName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * name of user type.
     */
    readonly name: string;
}

export function getUserTypeOutput(args: GetUserTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserTypeResult> {
    return pulumi.output(args).apply(a => getUserType(a, opts))
}

/**
 * A collection of arguments for invoking getUserType.
 */
export interface GetUserTypeOutputArgs {
    /**
     * name of user type to retrieve.
     */
    name: pulumi.Input<string>;
}

// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Creates an inline hook. This resource allows you to create and configure an inline hook.
 *
 * ## Example Usage
 *
 * ### HTTP Auth
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = new okta.inline.Hook("example", {
 *     name: "example",
 *     version: "1.0.0",
 *     type: "com.okta.oauth2.tokens.transform",
 *     channel: {
 *         version: "1.0.0",
 *         uri: "https://example.com/test",
 *         method: "POST",
 *     },
 *     auth: {
 *         key: "Authorization",
 *         type: "HEADER",
 *         value: "secret",
 *     },
 * });
 * ```
 *
 * ### OAuth2.0 Auth
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const example = new okta.inline.Hook("example", {
 *     name: "example",
 *     version: "1.0.0",
 *     type: "com.okta.saml.tokens.transform",
 *     status: "ACTIVE",
 *     channelJson: `{
 *         "type": "OAUTH",
 *         "version": "1.0.0",
 *         "config": {
 *             "headers": [
 *                 {
 *                     "key": "Field 1",
 *                     "value": "Value 1"
 *                 },
 *                 {
 *                     "key": "Field 2",
 *                     "value": "Value 2"
 *                 }
 *             ],
 *             "method": "POST",
 *             "authType": "client_secret_post",
 *             "uri": "https://example.com/service",
 *             "clientId": "abc123",
 *             "clientSecret": "fake-secret",
 *             "tokenUrl": "https://example.com/token",
 *             "scope": "api"
 *         }
 * }
 * `,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import okta:inline/hook:Hook example <hook_id>
 * ```
 */
export class Hook extends pulumi.CustomResource {
    /**
     * Get an existing Hook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HookState, opts?: pulumi.CustomResourceOptions): Hook {
        return new Hook(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:inline/hook:Hook';

    /**
     * Returns true if the given object is an instance of Hook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Hook {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Hook.__pulumiType;
    }

    declare public readonly auth: pulumi.Output<{[key: string]: string} | undefined>;
    declare public readonly channel: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * true channel object for the inline hook API contract
     */
    declare public readonly channelJson: pulumi.Output<string | undefined>;
    /**
     * Map of headers to send along in inline hook request.
     */
    declare public readonly headers: pulumi.Output<outputs.inline.HookHeader[] | undefined>;
    /**
     * The inline hook display name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Default to `ACTIVE`
     */
    declare public readonly status: pulumi.Output<string | undefined>;
    /**
     * The type of hook to create. [See here for supported types](https://developer.okta.com/docs/reference/api/inline-hooks/#supported-inline-hook-types).
     */
    declare public readonly type: pulumi.Output<string>;
    /**
     * The version of the hook. The currently-supported version is `1.0.0`.
     */
    declare public readonly version: pulumi.Output<string>;

    /**
     * Create a Hook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HookArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HookArgs | HookState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HookState | undefined;
            resourceInputs["auth"] = state?.auth;
            resourceInputs["channel"] = state?.channel;
            resourceInputs["channelJson"] = state?.channelJson;
            resourceInputs["headers"] = state?.headers;
            resourceInputs["name"] = state?.name;
            resourceInputs["status"] = state?.status;
            resourceInputs["type"] = state?.type;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as HookArgs | undefined;
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            if (args?.version === undefined && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["auth"] = args?.auth;
            resourceInputs["channel"] = args?.channel;
            resourceInputs["channelJson"] = args?.channelJson;
            resourceInputs["headers"] = args?.headers;
            resourceInputs["name"] = args?.name;
            resourceInputs["status"] = args?.status;
            resourceInputs["type"] = args?.type;
            resourceInputs["version"] = args?.version;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Hook.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Hook resources.
 */
export interface HookState {
    auth?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    channel?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * true channel object for the inline hook API contract
     */
    channelJson?: pulumi.Input<string>;
    /**
     * Map of headers to send along in inline hook request.
     */
    headers?: pulumi.Input<pulumi.Input<inputs.inline.HookHeader>[]>;
    /**
     * The inline hook display name.
     */
    name?: pulumi.Input<string>;
    /**
     * Default to `ACTIVE`
     */
    status?: pulumi.Input<string>;
    /**
     * The type of hook to create. [See here for supported types](https://developer.okta.com/docs/reference/api/inline-hooks/#supported-inline-hook-types).
     */
    type?: pulumi.Input<string>;
    /**
     * The version of the hook. The currently-supported version is `1.0.0`.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Hook resource.
 */
export interface HookArgs {
    auth?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    channel?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * true channel object for the inline hook API contract
     */
    channelJson?: pulumi.Input<string>;
    /**
     * Map of headers to send along in inline hook request.
     */
    headers?: pulumi.Input<pulumi.Input<inputs.inline.HookHeader>[]>;
    /**
     * The inline hook display name.
     */
    name?: pulumi.Input<string>;
    /**
     * Default to `ACTIVE`
     */
    status?: pulumi.Input<string>;
    /**
     * The type of hook to create. [See here for supported types](https://developer.okta.com/docs/reference/api/inline-hooks/#supported-inline-hook-types).
     */
    type: pulumi.Input<string>;
    /**
     * The version of the hook. The currently-supported version is `1.0.0`.
     */
    version: pulumi.Input<string>;
}

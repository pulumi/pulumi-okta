// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manage the customized signin page of a brand
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as okta from "@pulumi/okta";
 *
 * const test = new okta.Brand("test", {
 *     name: "testBrand",
 *     locale: "en",
 * });
 * const testCustomizedSigninPage = new okta.CustomizedSigninPage("test", {
 *     brandId: oktaBrand.test.id,
 *     pageContent: `<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 * <html>
 * <head>
 *     <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
 *     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
 *     <meta name="robots" content="noindex,nofollow" />
 *     <!-- Styles generated from theme -->
 *     <link href="{{themedStylesUrl}}" rel="stylesheet" type="text/css">
 *     <!-- Favicon from theme -->
 *     <link rel="shortcut icon" href="{{faviconUrl}}" type="image/x-icon"/>
 *
 *     <title>{{pageTitle}}</title>
 *     {{{SignInWidgetResources}}}
 *
 *     <style nonce="{{nonceValue}}">
 *         #login-bg-image-id {
 *             background-image: {{bgImageUrl}}
 *         }
 *     </style>
 * </head>
 * <body>
 *     <div id="login-bg-image-id" class="login-bg-image tb--background"></div>
 *     <div id="okta-login-container"></div>
 *
 *     <!--
 *         "OktaUtil" defines a global OktaUtil object
 *         that contains methods used to complete the Okta login flow.
 *      -->
 *     {{{OktaUtil}}}
 *
 *     <script type="text/javascript" nonce="{{nonceValue}}">
 *         // "config" object contains default widget configuration
 *         // with any custom overrides defined in your admin settings.
 *         var config = OktaUtil.getSignInWidgetConfig();
 *
 *         // Render the Okta Sign-In Widget
 *         var oktaSignIn = new OktaSignIn(config);
 *         oktaSignIn.renderEl({ el: '#okta-login-container' },
 *             OktaUtil.completeLogin,
 *             function(error) {
 *                 // Logs errors that occur when configuring the widget.
 *                 // Remove or replace this with your own custom error handler.
 *                 console.log(error.message, error);
 *             }
 *         );
 *     </script>
 * </body>
 * </html>
 * `,
 *     widgetVersion: "^6",
 *     widgetCustomizations: {
 *         widgetGeneration: "G3",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import okta:index/customizedSigninPage:CustomizedSigninPage example <brand_id>
 * ```
 */
export class CustomizedSigninPage extends pulumi.CustomResource {
    /**
     * Get an existing CustomizedSigninPage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomizedSigninPageState, opts?: pulumi.CustomResourceOptions): CustomizedSigninPage {
        return new CustomizedSigninPage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:index/customizedSigninPage:CustomizedSigninPage';

    /**
     * Returns true if the given object is an instance of CustomizedSigninPage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomizedSigninPage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomizedSigninPage.__pulumiType;
    }

    /**
     * brand id of the preview signin page
     */
    declare public readonly brandId: pulumi.Output<string>;
    declare public readonly contentSecurityPolicySetting: pulumi.Output<outputs.CustomizedSigninPageContentSecurityPolicySetting | undefined>;
    /**
     * page content of the preview signin page
     */
    declare public readonly pageContent: pulumi.Output<string>;
    declare public readonly widgetCustomizations: pulumi.Output<outputs.CustomizedSigninPageWidgetCustomizations | undefined>;
    /**
     * widget version specified as a Semver. The following are currently supported
     * 		*, ^1, ^2, ^3, ^4, ^5, ^6, ^7, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11, 1.12, 1.13, 2.1, 2.2, 2.3, 2.4,
     * 		2.5, 2.6, 2.7, 2.8, 2.9, 2.10, 2.11, 2.12, 2.13, 2.14, 2.15, 2.16, 2.17, 2.18, 2.19, 2.20, 2.21,
     * 		3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 5.0, 5.1, 5.2, 5.3,
     * 		5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 5.10, 5.11, 5.12, 5.13, 5.14, 5.15, 5.16, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5,
     * 		6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 7.10, 7.11, 7.12, 7.13.
     */
    declare public readonly widgetVersion: pulumi.Output<string>;

    /**
     * Create a CustomizedSigninPage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomizedSigninPageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomizedSigninPageArgs | CustomizedSigninPageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomizedSigninPageState | undefined;
            resourceInputs["brandId"] = state?.brandId;
            resourceInputs["contentSecurityPolicySetting"] = state?.contentSecurityPolicySetting;
            resourceInputs["pageContent"] = state?.pageContent;
            resourceInputs["widgetCustomizations"] = state?.widgetCustomizations;
            resourceInputs["widgetVersion"] = state?.widgetVersion;
        } else {
            const args = argsOrState as CustomizedSigninPageArgs | undefined;
            if (args?.brandId === undefined && !opts.urn) {
                throw new Error("Missing required property 'brandId'");
            }
            if (args?.pageContent === undefined && !opts.urn) {
                throw new Error("Missing required property 'pageContent'");
            }
            if (args?.widgetVersion === undefined && !opts.urn) {
                throw new Error("Missing required property 'widgetVersion'");
            }
            resourceInputs["brandId"] = args?.brandId;
            resourceInputs["contentSecurityPolicySetting"] = args?.contentSecurityPolicySetting;
            resourceInputs["pageContent"] = args?.pageContent;
            resourceInputs["widgetCustomizations"] = args?.widgetCustomizations;
            resourceInputs["widgetVersion"] = args?.widgetVersion;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomizedSigninPage.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomizedSigninPage resources.
 */
export interface CustomizedSigninPageState {
    /**
     * brand id of the preview signin page
     */
    brandId?: pulumi.Input<string>;
    contentSecurityPolicySetting?: pulumi.Input<inputs.CustomizedSigninPageContentSecurityPolicySetting>;
    /**
     * page content of the preview signin page
     */
    pageContent?: pulumi.Input<string>;
    widgetCustomizations?: pulumi.Input<inputs.CustomizedSigninPageWidgetCustomizations>;
    /**
     * widget version specified as a Semver. The following are currently supported
     * 		*, ^1, ^2, ^3, ^4, ^5, ^6, ^7, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11, 1.12, 1.13, 2.1, 2.2, 2.3, 2.4,
     * 		2.5, 2.6, 2.7, 2.8, 2.9, 2.10, 2.11, 2.12, 2.13, 2.14, 2.15, 2.16, 2.17, 2.18, 2.19, 2.20, 2.21,
     * 		3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 5.0, 5.1, 5.2, 5.3,
     * 		5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 5.10, 5.11, 5.12, 5.13, 5.14, 5.15, 5.16, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5,
     * 		6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 7.10, 7.11, 7.12, 7.13.
     */
    widgetVersion?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomizedSigninPage resource.
 */
export interface CustomizedSigninPageArgs {
    /**
     * brand id of the preview signin page
     */
    brandId: pulumi.Input<string>;
    contentSecurityPolicySetting?: pulumi.Input<inputs.CustomizedSigninPageContentSecurityPolicySetting>;
    /**
     * page content of the preview signin page
     */
    pageContent: pulumi.Input<string>;
    widgetCustomizations?: pulumi.Input<inputs.CustomizedSigninPageWidgetCustomizations>;
    /**
     * widget version specified as a Semver. The following are currently supported
     * 		*, ^1, ^2, ^3, ^4, ^5, ^6, ^7, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11, 1.12, 1.13, 2.1, 2.2, 2.3, 2.4,
     * 		2.5, 2.6, 2.7, 2.8, 2.9, 2.10, 2.11, 2.12, 2.13, 2.14, 2.15, 2.16, 2.17, 2.18, 2.19, 2.20, 2.21,
     * 		3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 5.0, 5.1, 5.2, 5.3,
     * 		5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 5.10, 5.11, 5.12, 5.13, 5.14, 5.15, 5.16, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5,
     * 		6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 7.10, 7.11, 7.12, 7.13.
     */
    widgetVersion: pulumi.Input<string>;
}

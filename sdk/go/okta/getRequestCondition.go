// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a resource request condition
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.LookupRequestCondition(ctx, &okta.LookupRequestConditionArgs{
//				Id:         "<request_condition_id>",
//				ResourceId: "<resource_id>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRequestCondition(ctx *pulumi.Context, args *LookupRequestConditionArgs, opts ...pulumi.InvokeOption) (*LookupRequestConditionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRequestConditionResult
	err := ctx.Invoke("okta:index/getRequestCondition:getRequestCondition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRequestCondition.
type LookupRequestConditionArgs struct {
	AccessScopeSettings *GetRequestConditionAccessScopeSettings `pulumi:"accessScopeSettings"`
	// Request condition id.
	Id                string                                `pulumi:"id"`
	RequesterSettings *GetRequestConditionRequesterSettings `pulumi:"requesterSettings"`
	// The id of the resource in Okta ID format.
	ResourceId string `pulumi:"resourceId"`
}

// A collection of values returned by getRequestCondition.
type LookupRequestConditionResult struct {
	AccessScopeSettings *GetRequestConditionAccessScopeSettings `pulumi:"accessScopeSettings"`
	// The date and time when the request condition was created.
	Created string `pulumi:"created"`
	// The id of the user who created the request condition.
	CreatedBy string `pulumi:"createdBy"`
	// Request condition id.
	Id string `pulumi:"id"`
	// The date and time when the request condition was last updated.
	LastUpdated string `pulumi:"lastUpdated"`
	// The id of the user who last updated the request condition.
	LastUpdatedBy string `pulumi:"lastUpdatedBy"`
	// The name of the request condition.
	Name string `pulumi:"name"`
	// The priority of the request condition. Lower numbers indicate higher priority.
	Priority          int                                   `pulumi:"priority"`
	RequesterSettings *GetRequestConditionRequesterSettings `pulumi:"requesterSettings"`
	// The id of the resource in Okta ID format.
	ResourceId string `pulumi:"resourceId"`
	// Status indicates if this condition is active or not. Default status is INACTIVE. Enum: `ACTIVE`, `INACTIVE`, `DELETED`, `INVALID`.
	Status string `pulumi:"status"`
}

func LookupRequestConditionOutput(ctx *pulumi.Context, args LookupRequestConditionOutputArgs, opts ...pulumi.InvokeOption) LookupRequestConditionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRequestConditionResultOutput, error) {
			args := v.(LookupRequestConditionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("okta:index/getRequestCondition:getRequestCondition", args, LookupRequestConditionResultOutput{}, options).(LookupRequestConditionResultOutput), nil
		}).(LookupRequestConditionResultOutput)
}

// A collection of arguments for invoking getRequestCondition.
type LookupRequestConditionOutputArgs struct {
	AccessScopeSettings GetRequestConditionAccessScopeSettingsPtrInput `pulumi:"accessScopeSettings"`
	// Request condition id.
	Id                pulumi.StringInput                           `pulumi:"id"`
	RequesterSettings GetRequestConditionRequesterSettingsPtrInput `pulumi:"requesterSettings"`
	// The id of the resource in Okta ID format.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (LookupRequestConditionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRequestConditionArgs)(nil)).Elem()
}

// A collection of values returned by getRequestCondition.
type LookupRequestConditionResultOutput struct{ *pulumi.OutputState }

func (LookupRequestConditionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRequestConditionResult)(nil)).Elem()
}

func (o LookupRequestConditionResultOutput) ToLookupRequestConditionResultOutput() LookupRequestConditionResultOutput {
	return o
}

func (o LookupRequestConditionResultOutput) ToLookupRequestConditionResultOutputWithContext(ctx context.Context) LookupRequestConditionResultOutput {
	return o
}

func (o LookupRequestConditionResultOutput) AccessScopeSettings() GetRequestConditionAccessScopeSettingsPtrOutput {
	return o.ApplyT(func(v LookupRequestConditionResult) *GetRequestConditionAccessScopeSettings {
		return v.AccessScopeSettings
	}).(GetRequestConditionAccessScopeSettingsPtrOutput)
}

// The date and time when the request condition was created.
func (o LookupRequestConditionResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRequestConditionResult) string { return v.Created }).(pulumi.StringOutput)
}

// The id of the user who created the request condition.
func (o LookupRequestConditionResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRequestConditionResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// Request condition id.
func (o LookupRequestConditionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRequestConditionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The date and time when the request condition was last updated.
func (o LookupRequestConditionResultOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRequestConditionResult) string { return v.LastUpdated }).(pulumi.StringOutput)
}

// The id of the user who last updated the request condition.
func (o LookupRequestConditionResultOutput) LastUpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRequestConditionResult) string { return v.LastUpdatedBy }).(pulumi.StringOutput)
}

// The name of the request condition.
func (o LookupRequestConditionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRequestConditionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The priority of the request condition. Lower numbers indicate higher priority.
func (o LookupRequestConditionResultOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRequestConditionResult) int { return v.Priority }).(pulumi.IntOutput)
}

func (o LookupRequestConditionResultOutput) RequesterSettings() GetRequestConditionRequesterSettingsPtrOutput {
	return o.ApplyT(func(v LookupRequestConditionResult) *GetRequestConditionRequesterSettings { return v.RequesterSettings }).(GetRequestConditionRequesterSettingsPtrOutput)
}

// The id of the resource in Okta ID format.
func (o LookupRequestConditionResultOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRequestConditionResult) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Status indicates if this condition is active or not. Default status is INACTIVE. Enum: `ACTIVE`, `INACTIVE`, `DELETED`, `INVALID`.
func (o LookupRequestConditionResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRequestConditionResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRequestConditionResultOutput{})
}

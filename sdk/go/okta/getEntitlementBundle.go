// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the entitlement bundle for the given id.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.LookupEntitlementBundle(ctx, &okta.LookupEntitlementBundleArgs{
//				Id: "<entitlement_bundle id>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupEntitlementBundle(ctx *pulumi.Context, args *LookupEntitlementBundleArgs, opts ...pulumi.InvokeOption) (*LookupEntitlementBundleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEntitlementBundleResult
	err := ctx.Invoke("okta:index/getEntitlementBundle:getEntitlementBundle", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEntitlementBundle.
type LookupEntitlementBundleArgs struct {
	// List of entitlements in the bundle
	Entitlements []GetEntitlementBundleEntitlement `pulumi:"entitlements"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// Representation of a resource
	Target *GetEntitlementBundleTarget `pulumi:"target"`
}

// A collection of values returned by getEntitlementBundle.
type LookupEntitlementBundleResult struct {
	// The created timestamp of this resource.
	Created string `pulumi:"created"`
	// The ID of the user that created this resource.
	CreatedBy string `pulumi:"createdBy"`
	// The description of an entitlement property.
	Description string `pulumi:"description"`
	// List of entitlements in the bundle
	Entitlements []GetEntitlementBundleEntitlement `pulumi:"entitlements"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// The last updated timestamp of this resource.
	LastUpdated string `pulumi:"lastUpdated"`
	// The ID of the user that last updated this resource.
	LastUpdatedBy string `pulumi:"lastUpdatedBy"`
	// The display name for an entitlement bundle.
	Name string `pulumi:"name"`
	// The status of the entitlement bundle.
	Status string `pulumi:"status"`
	// Representation of a resource
	Target *GetEntitlementBundleTarget `pulumi:"target"`
	// The ORN of the target resource. Required when updating the entitlement bundle.
	TargetResourceOrn string `pulumi:"targetResourceOrn"`
}

func LookupEntitlementBundleOutput(ctx *pulumi.Context, args LookupEntitlementBundleOutputArgs, opts ...pulumi.InvokeOption) LookupEntitlementBundleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEntitlementBundleResultOutput, error) {
			args := v.(LookupEntitlementBundleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("okta:index/getEntitlementBundle:getEntitlementBundle", args, LookupEntitlementBundleResultOutput{}, options).(LookupEntitlementBundleResultOutput), nil
		}).(LookupEntitlementBundleResultOutput)
}

// A collection of arguments for invoking getEntitlementBundle.
type LookupEntitlementBundleOutputArgs struct {
	// List of entitlements in the bundle
	Entitlements GetEntitlementBundleEntitlementArrayInput `pulumi:"entitlements"`
	// The ID of this resource.
	Id pulumi.StringInput `pulumi:"id"`
	// Representation of a resource
	Target GetEntitlementBundleTargetPtrInput `pulumi:"target"`
}

func (LookupEntitlementBundleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEntitlementBundleArgs)(nil)).Elem()
}

// A collection of values returned by getEntitlementBundle.
type LookupEntitlementBundleResultOutput struct{ *pulumi.OutputState }

func (LookupEntitlementBundleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEntitlementBundleResult)(nil)).Elem()
}

func (o LookupEntitlementBundleResultOutput) ToLookupEntitlementBundleResultOutput() LookupEntitlementBundleResultOutput {
	return o
}

func (o LookupEntitlementBundleResultOutput) ToLookupEntitlementBundleResultOutputWithContext(ctx context.Context) LookupEntitlementBundleResultOutput {
	return o
}

// The created timestamp of this resource.
func (o LookupEntitlementBundleResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntitlementBundleResult) string { return v.Created }).(pulumi.StringOutput)
}

// The ID of the user that created this resource.
func (o LookupEntitlementBundleResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntitlementBundleResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The description of an entitlement property.
func (o LookupEntitlementBundleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntitlementBundleResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of entitlements in the bundle
func (o LookupEntitlementBundleResultOutput) Entitlements() GetEntitlementBundleEntitlementArrayOutput {
	return o.ApplyT(func(v LookupEntitlementBundleResult) []GetEntitlementBundleEntitlement { return v.Entitlements }).(GetEntitlementBundleEntitlementArrayOutput)
}

// The ID of this resource.
func (o LookupEntitlementBundleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntitlementBundleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The last updated timestamp of this resource.
func (o LookupEntitlementBundleResultOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntitlementBundleResult) string { return v.LastUpdated }).(pulumi.StringOutput)
}

// The ID of the user that last updated this resource.
func (o LookupEntitlementBundleResultOutput) LastUpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntitlementBundleResult) string { return v.LastUpdatedBy }).(pulumi.StringOutput)
}

// The display name for an entitlement bundle.
func (o LookupEntitlementBundleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntitlementBundleResult) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the entitlement bundle.
func (o LookupEntitlementBundleResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntitlementBundleResult) string { return v.Status }).(pulumi.StringOutput)
}

// Representation of a resource
func (o LookupEntitlementBundleResultOutput) Target() GetEntitlementBundleTargetPtrOutput {
	return o.ApplyT(func(v LookupEntitlementBundleResult) *GetEntitlementBundleTarget { return v.Target }).(GetEntitlementBundleTargetPtrOutput)
}

// The ORN of the target resource. Required when updating the entitlement bundle.
func (o LookupEntitlementBundleResultOutput) TargetResourceOrn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntitlementBundleResult) string { return v.TargetResourceOrn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEntitlementBundleResultOutput{})
}

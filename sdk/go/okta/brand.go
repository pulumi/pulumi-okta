// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages brand
type Brand struct {
	pulumi.CustomResourceState

	// Consent for updating the custom privacy policy URL.
	AgreeToCustomPrivacyPolicy pulumi.BoolOutput `pulumi:"agreeToCustomPrivacyPolicy"`
	// Brand ID - Note: Okta API for brands only reads and updates therefore the okta*brand resource needs to act as a quasi data source. Do this by setting brand*id.
	//
	// Deprecated: Okta has fully support brand creation, this attribute is a no op and will be removed
	BrandId pulumi.StringOutput `pulumi:"brandId"`
	// Custom privacy policy URL
	CustomPrivacyPolicyUrl pulumi.StringPtrOutput `pulumi:"customPrivacyPolicyUrl"`
	// Default app app instance id
	DefaultAppAppInstanceId pulumi.StringPtrOutput `pulumi:"defaultAppAppInstanceId"`
	// Default app app link name
	DefaultAppAppLinkName pulumi.StringPtrOutput `pulumi:"defaultAppAppLinkName"`
	// Default app classic application uri
	DefaultAppClassicApplicationUri pulumi.StringPtrOutput `pulumi:"defaultAppClassicApplicationUri"`
	// Email Domain ID tied to this brand
	EmailDomainId pulumi.StringPtrOutput `pulumi:"emailDomainId"`
	// Is this the default brand
	IsDefault pulumi.BoolOutput `pulumi:"isDefault"`
	// Link relations for this object - JSON HAL - Discoverable resources related to the brand
	Links pulumi.StringOutput `pulumi:"links"`
	// The language specified as an IETF BCP 47 language tag
	Locale pulumi.StringPtrOutput `pulumi:"locale"`
	// Brand name
	Name pulumi.StringOutput `pulumi:"name"`
	// Removes "Powered by Okta" from the Okta-hosted sign-in page and "© 2021 Okta, Inc." from the Okta End-User Dashboard
	RemovePoweredByOkta pulumi.BoolOutput `pulumi:"removePoweredByOkta"`
}

// NewBrand registers a new resource with the given unique name, arguments, and options.
func NewBrand(ctx *pulumi.Context,
	name string, args *BrandArgs, opts ...pulumi.ResourceOption) (*Brand, error) {
	if args == nil {
		args = &BrandArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Brand
	err := ctx.RegisterResource("okta:index/brand:Brand", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBrand gets an existing Brand resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBrand(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BrandState, opts ...pulumi.ResourceOption) (*Brand, error) {
	var resource Brand
	err := ctx.ReadResource("okta:index/brand:Brand", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Brand resources.
type brandState struct {
	// Consent for updating the custom privacy policy URL.
	AgreeToCustomPrivacyPolicy *bool `pulumi:"agreeToCustomPrivacyPolicy"`
	// Brand ID - Note: Okta API for brands only reads and updates therefore the okta*brand resource needs to act as a quasi data source. Do this by setting brand*id.
	//
	// Deprecated: Okta has fully support brand creation, this attribute is a no op and will be removed
	BrandId *string `pulumi:"brandId"`
	// Custom privacy policy URL
	CustomPrivacyPolicyUrl *string `pulumi:"customPrivacyPolicyUrl"`
	// Default app app instance id
	DefaultAppAppInstanceId *string `pulumi:"defaultAppAppInstanceId"`
	// Default app app link name
	DefaultAppAppLinkName *string `pulumi:"defaultAppAppLinkName"`
	// Default app classic application uri
	DefaultAppClassicApplicationUri *string `pulumi:"defaultAppClassicApplicationUri"`
	// Email Domain ID tied to this brand
	EmailDomainId *string `pulumi:"emailDomainId"`
	// Is this the default brand
	IsDefault *bool `pulumi:"isDefault"`
	// Link relations for this object - JSON HAL - Discoverable resources related to the brand
	Links *string `pulumi:"links"`
	// The language specified as an IETF BCP 47 language tag
	Locale *string `pulumi:"locale"`
	// Brand name
	Name *string `pulumi:"name"`
	// Removes "Powered by Okta" from the Okta-hosted sign-in page and "© 2021 Okta, Inc." from the Okta End-User Dashboard
	RemovePoweredByOkta *bool `pulumi:"removePoweredByOkta"`
}

type BrandState struct {
	// Consent for updating the custom privacy policy URL.
	AgreeToCustomPrivacyPolicy pulumi.BoolPtrInput
	// Brand ID - Note: Okta API for brands only reads and updates therefore the okta*brand resource needs to act as a quasi data source. Do this by setting brand*id.
	//
	// Deprecated: Okta has fully support brand creation, this attribute is a no op and will be removed
	BrandId pulumi.StringPtrInput
	// Custom privacy policy URL
	CustomPrivacyPolicyUrl pulumi.StringPtrInput
	// Default app app instance id
	DefaultAppAppInstanceId pulumi.StringPtrInput
	// Default app app link name
	DefaultAppAppLinkName pulumi.StringPtrInput
	// Default app classic application uri
	DefaultAppClassicApplicationUri pulumi.StringPtrInput
	// Email Domain ID tied to this brand
	EmailDomainId pulumi.StringPtrInput
	// Is this the default brand
	IsDefault pulumi.BoolPtrInput
	// Link relations for this object - JSON HAL - Discoverable resources related to the brand
	Links pulumi.StringPtrInput
	// The language specified as an IETF BCP 47 language tag
	Locale pulumi.StringPtrInput
	// Brand name
	Name pulumi.StringPtrInput
	// Removes "Powered by Okta" from the Okta-hosted sign-in page and "© 2021 Okta, Inc." from the Okta End-User Dashboard
	RemovePoweredByOkta pulumi.BoolPtrInput
}

func (BrandState) ElementType() reflect.Type {
	return reflect.TypeOf((*brandState)(nil)).Elem()
}

type brandArgs struct {
	// Consent for updating the custom privacy policy URL.
	AgreeToCustomPrivacyPolicy *bool `pulumi:"agreeToCustomPrivacyPolicy"`
	// Brand ID - Note: Okta API for brands only reads and updates therefore the okta*brand resource needs to act as a quasi data source. Do this by setting brand*id.
	//
	// Deprecated: Okta has fully support brand creation, this attribute is a no op and will be removed
	BrandId *string `pulumi:"brandId"`
	// Custom privacy policy URL
	CustomPrivacyPolicyUrl *string `pulumi:"customPrivacyPolicyUrl"`
	// Default app app instance id
	DefaultAppAppInstanceId *string `pulumi:"defaultAppAppInstanceId"`
	// Default app app link name
	DefaultAppAppLinkName *string `pulumi:"defaultAppAppLinkName"`
	// Default app classic application uri
	DefaultAppClassicApplicationUri *string `pulumi:"defaultAppClassicApplicationUri"`
	// Email Domain ID tied to this brand
	EmailDomainId *string `pulumi:"emailDomainId"`
	// The language specified as an IETF BCP 47 language tag
	Locale *string `pulumi:"locale"`
	// Brand name
	Name *string `pulumi:"name"`
	// Removes "Powered by Okta" from the Okta-hosted sign-in page and "© 2021 Okta, Inc." from the Okta End-User Dashboard
	RemovePoweredByOkta *bool `pulumi:"removePoweredByOkta"`
}

// The set of arguments for constructing a Brand resource.
type BrandArgs struct {
	// Consent for updating the custom privacy policy URL.
	AgreeToCustomPrivacyPolicy pulumi.BoolPtrInput
	// Brand ID - Note: Okta API for brands only reads and updates therefore the okta*brand resource needs to act as a quasi data source. Do this by setting brand*id.
	//
	// Deprecated: Okta has fully support brand creation, this attribute is a no op and will be removed
	BrandId pulumi.StringPtrInput
	// Custom privacy policy URL
	CustomPrivacyPolicyUrl pulumi.StringPtrInput
	// Default app app instance id
	DefaultAppAppInstanceId pulumi.StringPtrInput
	// Default app app link name
	DefaultAppAppLinkName pulumi.StringPtrInput
	// Default app classic application uri
	DefaultAppClassicApplicationUri pulumi.StringPtrInput
	// Email Domain ID tied to this brand
	EmailDomainId pulumi.StringPtrInput
	// The language specified as an IETF BCP 47 language tag
	Locale pulumi.StringPtrInput
	// Brand name
	Name pulumi.StringPtrInput
	// Removes "Powered by Okta" from the Okta-hosted sign-in page and "© 2021 Okta, Inc." from the Okta End-User Dashboard
	RemovePoweredByOkta pulumi.BoolPtrInput
}

func (BrandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*brandArgs)(nil)).Elem()
}

type BrandInput interface {
	pulumi.Input

	ToBrandOutput() BrandOutput
	ToBrandOutputWithContext(ctx context.Context) BrandOutput
}

func (*Brand) ElementType() reflect.Type {
	return reflect.TypeOf((**Brand)(nil)).Elem()
}

func (i *Brand) ToBrandOutput() BrandOutput {
	return i.ToBrandOutputWithContext(context.Background())
}

func (i *Brand) ToBrandOutputWithContext(ctx context.Context) BrandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandOutput)
}

func (i *Brand) ToOutput(ctx context.Context) pulumix.Output[*Brand] {
	return pulumix.Output[*Brand]{
		OutputState: i.ToBrandOutputWithContext(ctx).OutputState,
	}
}

// BrandArrayInput is an input type that accepts BrandArray and BrandArrayOutput values.
// You can construct a concrete instance of `BrandArrayInput` via:
//
//	BrandArray{ BrandArgs{...} }
type BrandArrayInput interface {
	pulumi.Input

	ToBrandArrayOutput() BrandArrayOutput
	ToBrandArrayOutputWithContext(context.Context) BrandArrayOutput
}

type BrandArray []BrandInput

func (BrandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Brand)(nil)).Elem()
}

func (i BrandArray) ToBrandArrayOutput() BrandArrayOutput {
	return i.ToBrandArrayOutputWithContext(context.Background())
}

func (i BrandArray) ToBrandArrayOutputWithContext(ctx context.Context) BrandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandArrayOutput)
}

func (i BrandArray) ToOutput(ctx context.Context) pulumix.Output[[]*Brand] {
	return pulumix.Output[[]*Brand]{
		OutputState: i.ToBrandArrayOutputWithContext(ctx).OutputState,
	}
}

// BrandMapInput is an input type that accepts BrandMap and BrandMapOutput values.
// You can construct a concrete instance of `BrandMapInput` via:
//
//	BrandMap{ "key": BrandArgs{...} }
type BrandMapInput interface {
	pulumi.Input

	ToBrandMapOutput() BrandMapOutput
	ToBrandMapOutputWithContext(context.Context) BrandMapOutput
}

type BrandMap map[string]BrandInput

func (BrandMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Brand)(nil)).Elem()
}

func (i BrandMap) ToBrandMapOutput() BrandMapOutput {
	return i.ToBrandMapOutputWithContext(context.Background())
}

func (i BrandMap) ToBrandMapOutputWithContext(ctx context.Context) BrandMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandMapOutput)
}

func (i BrandMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*Brand] {
	return pulumix.Output[map[string]*Brand]{
		OutputState: i.ToBrandMapOutputWithContext(ctx).OutputState,
	}
}

type BrandOutput struct{ *pulumi.OutputState }

func (BrandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Brand)(nil)).Elem()
}

func (o BrandOutput) ToBrandOutput() BrandOutput {
	return o
}

func (o BrandOutput) ToBrandOutputWithContext(ctx context.Context) BrandOutput {
	return o
}

func (o BrandOutput) ToOutput(ctx context.Context) pulumix.Output[*Brand] {
	return pulumix.Output[*Brand]{
		OutputState: o.OutputState,
	}
}

// Consent for updating the custom privacy policy URL.
func (o BrandOutput) AgreeToCustomPrivacyPolicy() pulumi.BoolOutput {
	return o.ApplyT(func(v *Brand) pulumi.BoolOutput { return v.AgreeToCustomPrivacyPolicy }).(pulumi.BoolOutput)
}

// Brand ID - Note: Okta API for brands only reads and updates therefore the okta*brand resource needs to act as a quasi data source. Do this by setting brand*id.
//
// Deprecated: Okta has fully support brand creation, this attribute is a no op and will be removed
func (o BrandOutput) BrandId() pulumi.StringOutput {
	return o.ApplyT(func(v *Brand) pulumi.StringOutput { return v.BrandId }).(pulumi.StringOutput)
}

// Custom privacy policy URL
func (o BrandOutput) CustomPrivacyPolicyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Brand) pulumi.StringPtrOutput { return v.CustomPrivacyPolicyUrl }).(pulumi.StringPtrOutput)
}

// Default app app instance id
func (o BrandOutput) DefaultAppAppInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Brand) pulumi.StringPtrOutput { return v.DefaultAppAppInstanceId }).(pulumi.StringPtrOutput)
}

// Default app app link name
func (o BrandOutput) DefaultAppAppLinkName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Brand) pulumi.StringPtrOutput { return v.DefaultAppAppLinkName }).(pulumi.StringPtrOutput)
}

// Default app classic application uri
func (o BrandOutput) DefaultAppClassicApplicationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Brand) pulumi.StringPtrOutput { return v.DefaultAppClassicApplicationUri }).(pulumi.StringPtrOutput)
}

// Email Domain ID tied to this brand
func (o BrandOutput) EmailDomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Brand) pulumi.StringPtrOutput { return v.EmailDomainId }).(pulumi.StringPtrOutput)
}

// Is this the default brand
func (o BrandOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v *Brand) pulumi.BoolOutput { return v.IsDefault }).(pulumi.BoolOutput)
}

// Link relations for this object - JSON HAL - Discoverable resources related to the brand
func (o BrandOutput) Links() pulumi.StringOutput {
	return o.ApplyT(func(v *Brand) pulumi.StringOutput { return v.Links }).(pulumi.StringOutput)
}

// The language specified as an IETF BCP 47 language tag
func (o BrandOutput) Locale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Brand) pulumi.StringPtrOutput { return v.Locale }).(pulumi.StringPtrOutput)
}

// Brand name
func (o BrandOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Brand) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Removes "Powered by Okta" from the Okta-hosted sign-in page and "© 2021 Okta, Inc." from the Okta End-User Dashboard
func (o BrandOutput) RemovePoweredByOkta() pulumi.BoolOutput {
	return o.ApplyT(func(v *Brand) pulumi.BoolOutput { return v.RemovePoweredByOkta }).(pulumi.BoolOutput)
}

type BrandArrayOutput struct{ *pulumi.OutputState }

func (BrandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Brand)(nil)).Elem()
}

func (o BrandArrayOutput) ToBrandArrayOutput() BrandArrayOutput {
	return o
}

func (o BrandArrayOutput) ToBrandArrayOutputWithContext(ctx context.Context) BrandArrayOutput {
	return o
}

func (o BrandArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*Brand] {
	return pulumix.Output[[]*Brand]{
		OutputState: o.OutputState,
	}
}

func (o BrandArrayOutput) Index(i pulumi.IntInput) BrandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Brand {
		return vs[0].([]*Brand)[vs[1].(int)]
	}).(BrandOutput)
}

type BrandMapOutput struct{ *pulumi.OutputState }

func (BrandMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Brand)(nil)).Elem()
}

func (o BrandMapOutput) ToBrandMapOutput() BrandMapOutput {
	return o
}

func (o BrandMapOutput) ToBrandMapOutputWithContext(ctx context.Context) BrandMapOutput {
	return o
}

func (o BrandMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*Brand] {
	return pulumix.Output[map[string]*Brand]{
		OutputState: o.OutputState,
	}
}

func (o BrandMapOutput) MapIndex(k pulumi.StringInput) BrandOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Brand {
		return vs[0].(map[string]*Brand)[vs[1].(string)]
	}).(BrandOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BrandInput)(nil)).Elem(), &Brand{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandArrayInput)(nil)).Elem(), BrandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandMapInput)(nil)).Elem(), BrandMap{})
	pulumi.RegisterOutputType(BrandOutput{})
	pulumi.RegisterOutputType(BrandArrayOutput{})
	pulumi.RegisterOutputType(BrandMapOutput{})
}

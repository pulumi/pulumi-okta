// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates an Okta SMS Template.
//
// This resource allows you to create and configure an Okta SMS Template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-okta/sdk/v2/go/okta"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := okta.NewTemplateSms(ctx, "example", &okta.TemplateSmsArgs{
// 			Template: pulumi.String(fmt.Sprintf("%v%v%v%v", "Your ", org.Name, " code is: ", code)),
// 			Translations: okta.TemplateSmsTranslationArray{
// 				&okta.TemplateSmsTranslationArgs{
// 					Language: pulumi.String("en"),
// 					Template: pulumi.String(fmt.Sprintf("%v%v%v%v", "Your ", org.Name, " code is: ", code)),
// 				},
// 				&okta.TemplateSmsTranslationArgs{
// 					Language: pulumi.String("es"),
// 					Template: pulumi.String(fmt.Sprintf("%v%v%v%v%v", "Tu c√≥digo de ", org.Name, " es: ", code, ".")),
// 				},
// 			},
// 			Type: pulumi.String("SMS_VERIFY_CODE"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type TemplateSms struct {
	pulumi.CustomResourceState

	// The SMS message.
	Template pulumi.StringOutput `pulumi:"template"`
	// Set of translations for particular template.
	Translations TemplateSmsTranslationArrayOutput `pulumi:"translations"`
	// SMS template type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewTemplateSms registers a new resource with the given unique name, arguments, and options.
func NewTemplateSms(ctx *pulumi.Context,
	name string, args *TemplateSmsArgs, opts ...pulumi.ResourceOption) (*TemplateSms, error) {
	if args == nil || args.Template == nil {
		return nil, errors.New("missing required argument 'Template'")
	}
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil {
		args = &TemplateSmsArgs{}
	}
	var resource TemplateSms
	err := ctx.RegisterResource("okta:index/templateSms:TemplateSms", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTemplateSms gets an existing TemplateSms resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTemplateSms(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TemplateSmsState, opts ...pulumi.ResourceOption) (*TemplateSms, error) {
	var resource TemplateSms
	err := ctx.ReadResource("okta:index/templateSms:TemplateSms", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TemplateSms resources.
type templateSmsState struct {
	// The SMS message.
	Template *string `pulumi:"template"`
	// Set of translations for particular template.
	Translations []TemplateSmsTranslation `pulumi:"translations"`
	// SMS template type
	Type *string `pulumi:"type"`
}

type TemplateSmsState struct {
	// The SMS message.
	Template pulumi.StringPtrInput
	// Set of translations for particular template.
	Translations TemplateSmsTranslationArrayInput
	// SMS template type
	Type pulumi.StringPtrInput
}

func (TemplateSmsState) ElementType() reflect.Type {
	return reflect.TypeOf((*templateSmsState)(nil)).Elem()
}

type templateSmsArgs struct {
	// The SMS message.
	Template string `pulumi:"template"`
	// Set of translations for particular template.
	Translations []TemplateSmsTranslation `pulumi:"translations"`
	// SMS template type
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a TemplateSms resource.
type TemplateSmsArgs struct {
	// The SMS message.
	Template pulumi.StringInput
	// Set of translations for particular template.
	Translations TemplateSmsTranslationArrayInput
	// SMS template type
	Type pulumi.StringInput
}

func (TemplateSmsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*templateSmsArgs)(nil)).Elem()
}

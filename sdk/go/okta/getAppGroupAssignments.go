// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a set of groups assigned to an Okta application.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.LookupAppGroupAssignments(ctx, &okta.LookupAppGroupAssignmentsArgs{
//				Id: testOktaAppOauth.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAppGroupAssignments(ctx *pulumi.Context, args *LookupAppGroupAssignmentsArgs, opts ...pulumi.InvokeOption) (*LookupAppGroupAssignmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAppGroupAssignmentsResult
	err := ctx.Invoke("okta:index/getAppGroupAssignments:getAppGroupAssignments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppGroupAssignments.
type LookupAppGroupAssignmentsArgs struct {
	// ID of the Okta App being queried for groups
	Id string `pulumi:"id"`
}

// A collection of values returned by getAppGroupAssignments.
type LookupAppGroupAssignmentsResult struct {
	// List of groups IDs assigned to the app
	Groups []string `pulumi:"groups"`
	// ID of the Okta App being queried for groups
	Id string `pulumi:"id"`
}

func LookupAppGroupAssignmentsOutput(ctx *pulumi.Context, args LookupAppGroupAssignmentsOutputArgs, opts ...pulumi.InvokeOption) LookupAppGroupAssignmentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAppGroupAssignmentsResultOutput, error) {
			args := v.(LookupAppGroupAssignmentsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupAppGroupAssignmentsResult
			secret, err := ctx.InvokePackageRaw("okta:index/getAppGroupAssignments:getAppGroupAssignments", args, &rv, "", opts...)
			if err != nil {
				return LookupAppGroupAssignmentsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupAppGroupAssignmentsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupAppGroupAssignmentsResultOutput), nil
			}
			return output, nil
		}).(LookupAppGroupAssignmentsResultOutput)
}

// A collection of arguments for invoking getAppGroupAssignments.
type LookupAppGroupAssignmentsOutputArgs struct {
	// ID of the Okta App being queried for groups
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupAppGroupAssignmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppGroupAssignmentsArgs)(nil)).Elem()
}

// A collection of values returned by getAppGroupAssignments.
type LookupAppGroupAssignmentsResultOutput struct{ *pulumi.OutputState }

func (LookupAppGroupAssignmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppGroupAssignmentsResult)(nil)).Elem()
}

func (o LookupAppGroupAssignmentsResultOutput) ToLookupAppGroupAssignmentsResultOutput() LookupAppGroupAssignmentsResultOutput {
	return o
}

func (o LookupAppGroupAssignmentsResultOutput) ToLookupAppGroupAssignmentsResultOutputWithContext(ctx context.Context) LookupAppGroupAssignmentsResultOutput {
	return o
}

// List of groups IDs assigned to the app
func (o LookupAppGroupAssignmentsResultOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAppGroupAssignmentsResult) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// ID of the Okta App being queried for groups
func (o LookupAppGroupAssignmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppGroupAssignmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAppGroupAssignmentsResultOutput{})
}

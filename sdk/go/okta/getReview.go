// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the reviews belonging to a campaign
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.LookupReview(ctx, &okta.LookupReviewArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Required:
//
// - `email` (String) The Okta user's email address.
// - `id` (String) The Okta user id.
// - `status` (String) The status of the principal's profile. Enum: `INACTIVE`, `ACTIVE`.
//
// ## Optional:
//
// - `firstName` (String) The Okta user's first name.
// - `lastName` (String) The Okta user's last name
// - `login` (String) The Okta user's login
func LookupReview(ctx *pulumi.Context, args *LookupReviewArgs, opts ...pulumi.InvokeOption) (*LookupReviewResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupReviewResult
	err := ctx.Invoke("okta:index/getReview:getReview", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReview.
type LookupReviewArgs struct {
	AllReviewerLevels []GetReviewAllReviewerLevel `pulumi:"allReviewerLevels"`
	EntitlementBundle *GetReviewEntitlementBundle `pulumi:"entitlementBundle"`
	EntitlementValue  *GetReviewEntitlementValue  `pulumi:"entitlementValue"`
	// The ID of  review.
	Id    string          `pulumi:"id"`
	Links *GetReviewLinks `pulumi:"links"`
	Note  *GetReviewNote  `pulumi:"note"`
	// A limited set of properties from the user profile who created the review.
	PrincipalProfile *GetReviewPrincipalProfile `pulumi:"principalProfile"`
	ReviewerProfile  *GetReviewReviewerProfile  `pulumi:"reviewerProfile"`
}

// A collection of values returned by getReview.
type LookupReviewResult struct {
	AllReviewerLevels []GetReviewAllReviewerLevel `pulumi:"allReviewerLevels"`
	// ID of the Campaign.
	CampaignId string `pulumi:"campaignId"`
	// The ISO 8601 formatted date and time when the resource was created.
	Created string `pulumi:"created"`
	// The id of user who created the resource.
	CreatedBy string `pulumi:"createdBy"`
	// Identifies the reviewer level of each reviews during access certification.
	CurrentReviewerLevel string `pulumi:"currentReviewerLevel"`
	// The ISO 8601 formatted date and time when the object status was decided.
	Decided string `pulumi:"decided"`
	// The decision taken by the reviewer. Will be `UNASSIGNED` if no decision is made.
	Decision          string                      `pulumi:"decision"`
	EntitlementBundle *GetReviewEntitlementBundle `pulumi:"entitlementBundle"`
	EntitlementValue  *GetReviewEntitlementValue  `pulumi:"entitlementValue"`
	// The ID of  review.
	Id string `pulumi:"id"`
	// The ISO 8601 formatted date and time when the object was last updated.
	LastUpdated string `pulumi:"lastUpdated"`
	// The id of user who last updated the object.
	LastUpdatedBy string          `pulumi:"lastUpdatedBy"`
	Links         *GetReviewLinks `pulumi:"links"`
	Note          *GetReviewNote  `pulumi:"note"`
	// A limited set of properties from the user profile who created the review.
	PrincipalProfile *GetReviewPrincipalProfile `pulumi:"principalProfile"`
	// Enum: `ERROR`, `MANUAL`, `NONE`, `OPEN`, `SUCCESS`.
	RemediationStatus string `pulumi:"remediationStatus"`
	// Resource ID for the Review.
	ResourceId      string                    `pulumi:"resourceId"`
	ReviewerProfile *GetReviewReviewerProfile `pulumi:"reviewerProfile"`
	// The type of reviewer to which the review is assigned.
	ReviewerType string `pulumi:"reviewerType"`
}

func LookupReviewOutput(ctx *pulumi.Context, args LookupReviewOutputArgs, opts ...pulumi.InvokeOption) LookupReviewResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupReviewResultOutput, error) {
			args := v.(LookupReviewArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("okta:index/getReview:getReview", args, LookupReviewResultOutput{}, options).(LookupReviewResultOutput), nil
		}).(LookupReviewResultOutput)
}

// A collection of arguments for invoking getReview.
type LookupReviewOutputArgs struct {
	AllReviewerLevels GetReviewAllReviewerLevelArrayInput `pulumi:"allReviewerLevels"`
	EntitlementBundle GetReviewEntitlementBundlePtrInput  `pulumi:"entitlementBundle"`
	EntitlementValue  GetReviewEntitlementValuePtrInput   `pulumi:"entitlementValue"`
	// The ID of  review.
	Id    pulumi.StringInput     `pulumi:"id"`
	Links GetReviewLinksPtrInput `pulumi:"links"`
	Note  GetReviewNotePtrInput  `pulumi:"note"`
	// A limited set of properties from the user profile who created the review.
	PrincipalProfile GetReviewPrincipalProfilePtrInput `pulumi:"principalProfile"`
	ReviewerProfile  GetReviewReviewerProfilePtrInput  `pulumi:"reviewerProfile"`
}

func (LookupReviewOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReviewArgs)(nil)).Elem()
}

// A collection of values returned by getReview.
type LookupReviewResultOutput struct{ *pulumi.OutputState }

func (LookupReviewResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReviewResult)(nil)).Elem()
}

func (o LookupReviewResultOutput) ToLookupReviewResultOutput() LookupReviewResultOutput {
	return o
}

func (o LookupReviewResultOutput) ToLookupReviewResultOutputWithContext(ctx context.Context) LookupReviewResultOutput {
	return o
}

func (o LookupReviewResultOutput) AllReviewerLevels() GetReviewAllReviewerLevelArrayOutput {
	return o.ApplyT(func(v LookupReviewResult) []GetReviewAllReviewerLevel { return v.AllReviewerLevels }).(GetReviewAllReviewerLevelArrayOutput)
}

// ID of the Campaign.
func (o LookupReviewResultOutput) CampaignId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReviewResult) string { return v.CampaignId }).(pulumi.StringOutput)
}

// The ISO 8601 formatted date and time when the resource was created.
func (o LookupReviewResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReviewResult) string { return v.Created }).(pulumi.StringOutput)
}

// The id of user who created the resource.
func (o LookupReviewResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReviewResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// Identifies the reviewer level of each reviews during access certification.
func (o LookupReviewResultOutput) CurrentReviewerLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReviewResult) string { return v.CurrentReviewerLevel }).(pulumi.StringOutput)
}

// The ISO 8601 formatted date and time when the object status was decided.
func (o LookupReviewResultOutput) Decided() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReviewResult) string { return v.Decided }).(pulumi.StringOutput)
}

// The decision taken by the reviewer. Will be `UNASSIGNED` if no decision is made.
func (o LookupReviewResultOutput) Decision() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReviewResult) string { return v.Decision }).(pulumi.StringOutput)
}

func (o LookupReviewResultOutput) EntitlementBundle() GetReviewEntitlementBundlePtrOutput {
	return o.ApplyT(func(v LookupReviewResult) *GetReviewEntitlementBundle { return v.EntitlementBundle }).(GetReviewEntitlementBundlePtrOutput)
}

func (o LookupReviewResultOutput) EntitlementValue() GetReviewEntitlementValuePtrOutput {
	return o.ApplyT(func(v LookupReviewResult) *GetReviewEntitlementValue { return v.EntitlementValue }).(GetReviewEntitlementValuePtrOutput)
}

// The ID of  review.
func (o LookupReviewResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReviewResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ISO 8601 formatted date and time when the object was last updated.
func (o LookupReviewResultOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReviewResult) string { return v.LastUpdated }).(pulumi.StringOutput)
}

// The id of user who last updated the object.
func (o LookupReviewResultOutput) LastUpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReviewResult) string { return v.LastUpdatedBy }).(pulumi.StringOutput)
}

func (o LookupReviewResultOutput) Links() GetReviewLinksPtrOutput {
	return o.ApplyT(func(v LookupReviewResult) *GetReviewLinks { return v.Links }).(GetReviewLinksPtrOutput)
}

func (o LookupReviewResultOutput) Note() GetReviewNotePtrOutput {
	return o.ApplyT(func(v LookupReviewResult) *GetReviewNote { return v.Note }).(GetReviewNotePtrOutput)
}

// A limited set of properties from the user profile who created the review.
func (o LookupReviewResultOutput) PrincipalProfile() GetReviewPrincipalProfilePtrOutput {
	return o.ApplyT(func(v LookupReviewResult) *GetReviewPrincipalProfile { return v.PrincipalProfile }).(GetReviewPrincipalProfilePtrOutput)
}

// Enum: `ERROR`, `MANUAL`, `NONE`, `OPEN`, `SUCCESS`.
func (o LookupReviewResultOutput) RemediationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReviewResult) string { return v.RemediationStatus }).(pulumi.StringOutput)
}

// Resource ID for the Review.
func (o LookupReviewResultOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReviewResult) string { return v.ResourceId }).(pulumi.StringOutput)
}

func (o LookupReviewResultOutput) ReviewerProfile() GetReviewReviewerProfilePtrOutput {
	return o.ApplyT(func(v LookupReviewResult) *GetReviewReviewerProfile { return v.ReviewerProfile }).(GetReviewReviewerProfilePtrOutput)
}

// The type of reviewer to which the review is assigned.
func (o LookupReviewResultOutput) ReviewerType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReviewResult) string { return v.ReviewerType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReviewResultOutput{})
}

// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a single Theme of a Brand of an Okta Organization.
func LookupTheme(ctx *pulumi.Context, args *LookupThemeArgs, opts ...pulumi.InvokeOption) (*LookupThemeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupThemeResult
	err := ctx.Invoke("okta:index/getTheme:getTheme", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTheme.
type LookupThemeArgs struct {
	// Brand ID
	BrandId string `pulumi:"brandId"`
	// Theme ID
	ThemeId string `pulumi:"themeId"`
}

// A collection of values returned by getTheme.
type LookupThemeResult struct {
	// Background image URL
	BackgroundImageUrl string `pulumi:"backgroundImageUrl"`
	// Brand ID
	BrandId string `pulumi:"brandId"`
	// Variant for email templates (`OKTA_DEFAULT`, `FULL_THEME`)
	EmailTemplateTouchPointVariant string `pulumi:"emailTemplateTouchPointVariant"`
	// Variant for the Okta End-User Dashboard (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)
	EndUserDashboardTouchPointVariant string `pulumi:"endUserDashboardTouchPointVariant"`
	// Variant for the error page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
	ErrorPageTouchPointVariant string `pulumi:"errorPageTouchPointVariant"`
	// Favicon URL
	FaviconUrl string `pulumi:"faviconUrl"`
	// The ID of the theme
	Id string `pulumi:"id"`
	// Link relations for this object - JSON HAL - Discoverable resources related to the email template
	Links string `pulumi:"links"`
	// Logo URL
	LogoUrl string `pulumi:"logoUrl"`
	// Primary color contrast hex code
	PrimaryColorContrastHex string `pulumi:"primaryColorContrastHex"`
	// Primary color hex code
	PrimaryColorHex string `pulumi:"primaryColorHex"`
	// Secondary color contrast hex code
	SecondaryColorContrastHex string `pulumi:"secondaryColorContrastHex"`
	// Secondary color hex code
	SecondaryColorHex string `pulumi:"secondaryColorHex"`
	// Variant for the Okta Sign-In Page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
	SignInPageTouchPointVariant string `pulumi:"signInPageTouchPointVariant"`
	// Theme ID
	ThemeId string `pulumi:"themeId"`
}

func LookupThemeOutput(ctx *pulumi.Context, args LookupThemeOutputArgs, opts ...pulumi.InvokeOption) LookupThemeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupThemeResultOutput, error) {
			args := v.(LookupThemeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("okta:index/getTheme:getTheme", args, LookupThemeResultOutput{}, options).(LookupThemeResultOutput), nil
		}).(LookupThemeResultOutput)
}

// A collection of arguments for invoking getTheme.
type LookupThemeOutputArgs struct {
	// Brand ID
	BrandId pulumi.StringInput `pulumi:"brandId"`
	// Theme ID
	ThemeId pulumi.StringInput `pulumi:"themeId"`
}

func (LookupThemeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupThemeArgs)(nil)).Elem()
}

// A collection of values returned by getTheme.
type LookupThemeResultOutput struct{ *pulumi.OutputState }

func (LookupThemeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupThemeResult)(nil)).Elem()
}

func (o LookupThemeResultOutput) ToLookupThemeResultOutput() LookupThemeResultOutput {
	return o
}

func (o LookupThemeResultOutput) ToLookupThemeResultOutputWithContext(ctx context.Context) LookupThemeResultOutput {
	return o
}

// Background image URL
func (o LookupThemeResultOutput) BackgroundImageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.BackgroundImageUrl }).(pulumi.StringOutput)
}

// Brand ID
func (o LookupThemeResultOutput) BrandId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.BrandId }).(pulumi.StringOutput)
}

// Variant for email templates (`OKTA_DEFAULT`, `FULL_THEME`)
func (o LookupThemeResultOutput) EmailTemplateTouchPointVariant() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.EmailTemplateTouchPointVariant }).(pulumi.StringOutput)
}

// Variant for the Okta End-User Dashboard (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)
func (o LookupThemeResultOutput) EndUserDashboardTouchPointVariant() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.EndUserDashboardTouchPointVariant }).(pulumi.StringOutput)
}

// Variant for the error page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
func (o LookupThemeResultOutput) ErrorPageTouchPointVariant() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.ErrorPageTouchPointVariant }).(pulumi.StringOutput)
}

// Favicon URL
func (o LookupThemeResultOutput) FaviconUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.FaviconUrl }).(pulumi.StringOutput)
}

// The ID of the theme
func (o LookupThemeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.Id }).(pulumi.StringOutput)
}

// Link relations for this object - JSON HAL - Discoverable resources related to the email template
func (o LookupThemeResultOutput) Links() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.Links }).(pulumi.StringOutput)
}

// Logo URL
func (o LookupThemeResultOutput) LogoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.LogoUrl }).(pulumi.StringOutput)
}

// Primary color contrast hex code
func (o LookupThemeResultOutput) PrimaryColorContrastHex() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.PrimaryColorContrastHex }).(pulumi.StringOutput)
}

// Primary color hex code
func (o LookupThemeResultOutput) PrimaryColorHex() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.PrimaryColorHex }).(pulumi.StringOutput)
}

// Secondary color contrast hex code
func (o LookupThemeResultOutput) SecondaryColorContrastHex() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.SecondaryColorContrastHex }).(pulumi.StringOutput)
}

// Secondary color hex code
func (o LookupThemeResultOutput) SecondaryColorHex() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.SecondaryColorHex }).(pulumi.StringOutput)
}

// Variant for the Okta Sign-In Page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)
func (o LookupThemeResultOutput) SignInPageTouchPointVariant() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.SignInPageTouchPointVariant }).(pulumi.StringOutput)
}

// Theme ID
func (o LookupThemeResultOutput) ThemeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.ThemeId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupThemeResultOutput{})
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get a set of users assigned to an Okta application.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.GetAppUserAssignments(ctx, &okta.GetAppUserAssignmentsArgs{
//				Id: okta_app_oauth.Test.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAppUserAssignments(ctx *pulumi.Context, args *GetAppUserAssignmentsArgs, opts ...pulumi.InvokeOption) (*GetAppUserAssignmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAppUserAssignmentsResult
	err := ctx.Invoke("okta:index/getAppUserAssignments:getAppUserAssignments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppUserAssignments.
type GetAppUserAssignmentsArgs struct {
	// ID of the Okta App being queried for groups
	Id string `pulumi:"id"`
}

// A collection of values returned by getAppUserAssignments.
type GetAppUserAssignmentsResult struct {
	// ID of the Okta App being queried for groups
	Id string `pulumi:"id"`
	// List of user IDs assigned to the app
	Users []string `pulumi:"users"`
}

func GetAppUserAssignmentsOutput(ctx *pulumi.Context, args GetAppUserAssignmentsOutputArgs, opts ...pulumi.InvokeOption) GetAppUserAssignmentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAppUserAssignmentsResult, error) {
			args := v.(GetAppUserAssignmentsArgs)
			r, err := GetAppUserAssignments(ctx, &args, opts...)
			var s GetAppUserAssignmentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAppUserAssignmentsResultOutput)
}

// A collection of arguments for invoking getAppUserAssignments.
type GetAppUserAssignmentsOutputArgs struct {
	// ID of the Okta App being queried for groups
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAppUserAssignmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppUserAssignmentsArgs)(nil)).Elem()
}

// A collection of values returned by getAppUserAssignments.
type GetAppUserAssignmentsResultOutput struct{ *pulumi.OutputState }

func (GetAppUserAssignmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppUserAssignmentsResult)(nil)).Elem()
}

func (o GetAppUserAssignmentsResultOutput) ToGetAppUserAssignmentsResultOutput() GetAppUserAssignmentsResultOutput {
	return o
}

func (o GetAppUserAssignmentsResultOutput) ToGetAppUserAssignmentsResultOutputWithContext(ctx context.Context) GetAppUserAssignmentsResultOutput {
	return o
}

func (o GetAppUserAssignmentsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetAppUserAssignmentsResult] {
	return pulumix.Output[GetAppUserAssignmentsResult]{
		OutputState: o.OutputState,
	}
}

// ID of the Okta App being queried for groups
func (o GetAppUserAssignmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppUserAssignmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of user IDs assigned to the app
func (o GetAppUserAssignmentsResultOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAppUserAssignmentsResult) []string { return v.Users }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAppUserAssignmentsResultOutput{})
}

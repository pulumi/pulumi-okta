// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve the list of users assigned to the given Okta application (by ID).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-okta/sdk/v3/go/okta"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := okta.GetAppUserAssignments(ctx, &okta.GetAppUserAssignmentsArgs{
// 			Id: okta_app_oauth.Test.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetAppUserAssignments(ctx *pulumi.Context, args *GetAppUserAssignmentsArgs, opts ...pulumi.InvokeOption) (*GetAppUserAssignmentsResult, error) {
	var rv GetAppUserAssignmentsResult
	err := ctx.Invoke("okta:index/getAppUserAssignments:getAppUserAssignments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppUserAssignments.
type GetAppUserAssignmentsArgs struct {
	// The ID of the Okta application you want to retrieve the groups for.
	Id string `pulumi:"id"`
}

// A collection of values returned by getAppUserAssignments.
type GetAppUserAssignmentsResult struct {
	// ID of application.
	Id string `pulumi:"id"`
	// List of user IDs assigned to the application.
	Users []string `pulumi:"users"`
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// > **WARNING:** This feature is only available as a part of the Identity Engine. Contact support for further information.
//
// This resource allows you to create and configure a Profile Enrollment Policy.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.NewPolicyProfileEnrollment(ctx, "example", &okta.PolicyProfileEnrollmentArgs{
//				Status: pulumi.String("ACTIVE"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// A Profile Enrollment Policy can be imported via the Okta ID.
//
// ```sh
// $ pulumi import okta:index/policyProfileEnrollment:PolicyProfileEnrollment example &#60;policy id&#62;
// ```
type PolicyProfileEnrollment struct {
	pulumi.CustomResourceState

	// Policy Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Status of the policy.
	Status pulumi.StringPtrOutput `pulumi:"status"`
}

// NewPolicyProfileEnrollment registers a new resource with the given unique name, arguments, and options.
func NewPolicyProfileEnrollment(ctx *pulumi.Context,
	name string, args *PolicyProfileEnrollmentArgs, opts ...pulumi.ResourceOption) (*PolicyProfileEnrollment, error) {
	if args == nil {
		args = &PolicyProfileEnrollmentArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyProfileEnrollment
	err := ctx.RegisterResource("okta:index/policyProfileEnrollment:PolicyProfileEnrollment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyProfileEnrollment gets an existing PolicyProfileEnrollment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyProfileEnrollment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyProfileEnrollmentState, opts ...pulumi.ResourceOption) (*PolicyProfileEnrollment, error) {
	var resource PolicyProfileEnrollment
	err := ctx.ReadResource("okta:index/policyProfileEnrollment:PolicyProfileEnrollment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyProfileEnrollment resources.
type policyProfileEnrollmentState struct {
	// Policy Name.
	Name *string `pulumi:"name"`
	// Status of the policy.
	Status *string `pulumi:"status"`
}

type PolicyProfileEnrollmentState struct {
	// Policy Name.
	Name pulumi.StringPtrInput
	// Status of the policy.
	Status pulumi.StringPtrInput
}

func (PolicyProfileEnrollmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyProfileEnrollmentState)(nil)).Elem()
}

type policyProfileEnrollmentArgs struct {
	// Policy Name.
	Name *string `pulumi:"name"`
	// Status of the policy.
	Status *string `pulumi:"status"`
}

// The set of arguments for constructing a PolicyProfileEnrollment resource.
type PolicyProfileEnrollmentArgs struct {
	// Policy Name.
	Name pulumi.StringPtrInput
	// Status of the policy.
	Status pulumi.StringPtrInput
}

func (PolicyProfileEnrollmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyProfileEnrollmentArgs)(nil)).Elem()
}

type PolicyProfileEnrollmentInput interface {
	pulumi.Input

	ToPolicyProfileEnrollmentOutput() PolicyProfileEnrollmentOutput
	ToPolicyProfileEnrollmentOutputWithContext(ctx context.Context) PolicyProfileEnrollmentOutput
}

func (*PolicyProfileEnrollment) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyProfileEnrollment)(nil)).Elem()
}

func (i *PolicyProfileEnrollment) ToPolicyProfileEnrollmentOutput() PolicyProfileEnrollmentOutput {
	return i.ToPolicyProfileEnrollmentOutputWithContext(context.Background())
}

func (i *PolicyProfileEnrollment) ToPolicyProfileEnrollmentOutputWithContext(ctx context.Context) PolicyProfileEnrollmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyProfileEnrollmentOutput)
}

// PolicyProfileEnrollmentArrayInput is an input type that accepts PolicyProfileEnrollmentArray and PolicyProfileEnrollmentArrayOutput values.
// You can construct a concrete instance of `PolicyProfileEnrollmentArrayInput` via:
//
//	PolicyProfileEnrollmentArray{ PolicyProfileEnrollmentArgs{...} }
type PolicyProfileEnrollmentArrayInput interface {
	pulumi.Input

	ToPolicyProfileEnrollmentArrayOutput() PolicyProfileEnrollmentArrayOutput
	ToPolicyProfileEnrollmentArrayOutputWithContext(context.Context) PolicyProfileEnrollmentArrayOutput
}

type PolicyProfileEnrollmentArray []PolicyProfileEnrollmentInput

func (PolicyProfileEnrollmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyProfileEnrollment)(nil)).Elem()
}

func (i PolicyProfileEnrollmentArray) ToPolicyProfileEnrollmentArrayOutput() PolicyProfileEnrollmentArrayOutput {
	return i.ToPolicyProfileEnrollmentArrayOutputWithContext(context.Background())
}

func (i PolicyProfileEnrollmentArray) ToPolicyProfileEnrollmentArrayOutputWithContext(ctx context.Context) PolicyProfileEnrollmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyProfileEnrollmentArrayOutput)
}

// PolicyProfileEnrollmentMapInput is an input type that accepts PolicyProfileEnrollmentMap and PolicyProfileEnrollmentMapOutput values.
// You can construct a concrete instance of `PolicyProfileEnrollmentMapInput` via:
//
//	PolicyProfileEnrollmentMap{ "key": PolicyProfileEnrollmentArgs{...} }
type PolicyProfileEnrollmentMapInput interface {
	pulumi.Input

	ToPolicyProfileEnrollmentMapOutput() PolicyProfileEnrollmentMapOutput
	ToPolicyProfileEnrollmentMapOutputWithContext(context.Context) PolicyProfileEnrollmentMapOutput
}

type PolicyProfileEnrollmentMap map[string]PolicyProfileEnrollmentInput

func (PolicyProfileEnrollmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyProfileEnrollment)(nil)).Elem()
}

func (i PolicyProfileEnrollmentMap) ToPolicyProfileEnrollmentMapOutput() PolicyProfileEnrollmentMapOutput {
	return i.ToPolicyProfileEnrollmentMapOutputWithContext(context.Background())
}

func (i PolicyProfileEnrollmentMap) ToPolicyProfileEnrollmentMapOutputWithContext(ctx context.Context) PolicyProfileEnrollmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyProfileEnrollmentMapOutput)
}

type PolicyProfileEnrollmentOutput struct{ *pulumi.OutputState }

func (PolicyProfileEnrollmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyProfileEnrollment)(nil)).Elem()
}

func (o PolicyProfileEnrollmentOutput) ToPolicyProfileEnrollmentOutput() PolicyProfileEnrollmentOutput {
	return o
}

func (o PolicyProfileEnrollmentOutput) ToPolicyProfileEnrollmentOutputWithContext(ctx context.Context) PolicyProfileEnrollmentOutput {
	return o
}

// Policy Name.
func (o PolicyProfileEnrollmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyProfileEnrollment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Status of the policy.
func (o PolicyProfileEnrollmentOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyProfileEnrollment) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

type PolicyProfileEnrollmentArrayOutput struct{ *pulumi.OutputState }

func (PolicyProfileEnrollmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyProfileEnrollment)(nil)).Elem()
}

func (o PolicyProfileEnrollmentArrayOutput) ToPolicyProfileEnrollmentArrayOutput() PolicyProfileEnrollmentArrayOutput {
	return o
}

func (o PolicyProfileEnrollmentArrayOutput) ToPolicyProfileEnrollmentArrayOutputWithContext(ctx context.Context) PolicyProfileEnrollmentArrayOutput {
	return o
}

func (o PolicyProfileEnrollmentArrayOutput) Index(i pulumi.IntInput) PolicyProfileEnrollmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyProfileEnrollment {
		return vs[0].([]*PolicyProfileEnrollment)[vs[1].(int)]
	}).(PolicyProfileEnrollmentOutput)
}

type PolicyProfileEnrollmentMapOutput struct{ *pulumi.OutputState }

func (PolicyProfileEnrollmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyProfileEnrollment)(nil)).Elem()
}

func (o PolicyProfileEnrollmentMapOutput) ToPolicyProfileEnrollmentMapOutput() PolicyProfileEnrollmentMapOutput {
	return o
}

func (o PolicyProfileEnrollmentMapOutput) ToPolicyProfileEnrollmentMapOutputWithContext(ctx context.Context) PolicyProfileEnrollmentMapOutput {
	return o
}

func (o PolicyProfileEnrollmentMapOutput) MapIndex(k pulumi.StringInput) PolicyProfileEnrollmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyProfileEnrollment {
		return vs[0].(map[string]*PolicyProfileEnrollment)[vs[1].(string)]
	}).(PolicyProfileEnrollmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyProfileEnrollmentInput)(nil)).Elem(), &PolicyProfileEnrollment{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyProfileEnrollmentArrayInput)(nil)).Elem(), PolicyProfileEnrollmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyProfileEnrollmentMapInput)(nil)).Elem(), PolicyProfileEnrollmentMap{})
	pulumi.RegisterOutputType(PolicyProfileEnrollmentOutput{})
	pulumi.RegisterOutputType(PolicyProfileEnrollmentArrayOutput{})
	pulumi.RegisterOutputType(PolicyProfileEnrollmentMapOutput{})
}

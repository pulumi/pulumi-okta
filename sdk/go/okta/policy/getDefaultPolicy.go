// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package policy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to retrieve a default policy from Okta. This
// same thing can be achieved using the `policy.getPolicy` with default
// names, this is simply a shortcut.
func GetDefaultPolicy(ctx *pulumi.Context, args *GetDefaultPolicyArgs, opts ...pulumi.InvokeOption) (*GetDefaultPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDefaultPolicyResult
	err := ctx.Invoke("okta:policy/getDefaultPolicy:getDefaultPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDefaultPolicy.
type GetDefaultPolicyArgs struct {
	// Policy type: OKTA*SIGN*ON, PASSWORD, MFA*ENROLL, or IDP*DISCOVERY
	Type string `pulumi:"type"`
}

// A collection of values returned by getDefaultPolicy.
type GetDefaultPolicyResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Policy type: OKTA*SIGN*ON, PASSWORD, MFA*ENROLL, or IDP*DISCOVERY
	Type string `pulumi:"type"`
}

func GetDefaultPolicyOutput(ctx *pulumi.Context, args GetDefaultPolicyOutputArgs, opts ...pulumi.InvokeOption) GetDefaultPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDefaultPolicyResult, error) {
			args := v.(GetDefaultPolicyArgs)
			r, err := GetDefaultPolicy(ctx, &args, opts...)
			var s GetDefaultPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDefaultPolicyResultOutput)
}

// A collection of arguments for invoking getDefaultPolicy.
type GetDefaultPolicyOutputArgs struct {
	// Policy type: OKTA*SIGN*ON, PASSWORD, MFA*ENROLL, or IDP*DISCOVERY
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDefaultPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDefaultPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getDefaultPolicy.
type GetDefaultPolicyResultOutput struct{ *pulumi.OutputState }

func (GetDefaultPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDefaultPolicyResult)(nil)).Elem()
}

func (o GetDefaultPolicyResultOutput) ToGetDefaultPolicyResultOutput() GetDefaultPolicyResultOutput {
	return o
}

func (o GetDefaultPolicyResultOutput) ToGetDefaultPolicyResultOutputWithContext(ctx context.Context) GetDefaultPolicyResultOutput {
	return o
}

func (o GetDefaultPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDefaultPolicyResult] {
	return pulumix.Output[GetDefaultPolicyResult]{
		OutputState: o.OutputState,
	}
}

// The provider-assigned unique ID for this managed resource.
func (o GetDefaultPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// Policy type: OKTA*SIGN*ON, PASSWORD, MFA*ENROLL, or IDP*DISCOVERY
func (o GetDefaultPolicyResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultPolicyResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDefaultPolicyResultOutput{})
}

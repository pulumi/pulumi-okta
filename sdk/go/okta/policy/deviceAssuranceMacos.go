// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package policy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a device assurance policy for macos.
//
// ## Import
//
// ```sh
// $ pulumi import okta:policy/deviceAssuranceMacos:DeviceAssuranceMacos example <device_assurance_id>
// ```
type DeviceAssuranceMacos struct {
	pulumi.CustomResourceState

	// Created by
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// Created date
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`
	// List of disk encryption type, can be `ALL_INTERNAL_VOLUMES`
	DiskEncryptionTypes pulumi.StringArrayOutput `pulumi:"diskEncryptionTypes"`
	// Last update
	LastUpdate pulumi.StringOutput `pulumi:"lastUpdate"`
	// Last updated by
	LastUpdatedBy pulumi.StringOutput `pulumi:"lastUpdatedBy"`
	// Name of the device assurance policy.
	Name pulumi.StringOutput `pulumi:"name"`
	// Minimum os version of the device in the device assurance policy.
	OsVersion pulumi.StringPtrOutput `pulumi:"osVersion"`
	// Policy device assurance platform
	Platform pulumi.StringOutput `pulumi:"platform"`
	// List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`
	ScreenlockTypes pulumi.StringArrayOutput `pulumi:"screenlockTypes"`
	// Is the device secure with hardware in the device assurance policy.
	SecureHardwarePresent pulumi.BoolPtrOutput `pulumi:"secureHardwarePresent"`
	// Check to include third party signal provider
	ThirdPartySignalProviders pulumi.BoolPtrOutput `pulumi:"thirdPartySignalProviders"`
	// Third party signal provider minimum browser version
	TpspBrowserVersion pulumi.StringPtrOutput `pulumi:"tpspBrowserVersion"`
	// Third party signal provider builtin dns client enable
	TpspBuiltinDnsClientEnabled pulumi.BoolPtrOutput `pulumi:"tpspBuiltinDnsClientEnabled"`
	// Third party signal provider chrome remote desktop app blocked
	TpspChromeRemoteDesktopAppBlocked pulumi.BoolPtrOutput `pulumi:"tpspChromeRemoteDesktopAppBlocked"`
	// Third party signal provider device enrollment domain
	TpspDeviceEnrollmentDomain pulumi.StringPtrOutput `pulumi:"tpspDeviceEnrollmentDomain"`
	// Third party signal provider disk encrypted
	TpspDiskEncrypted pulumi.BoolPtrOutput `pulumi:"tpspDiskEncrypted"`
	// Third party signal provider key trust level
	TpspKeyTrustLevel pulumi.StringPtrOutput `pulumi:"tpspKeyTrustLevel"`
	// Third party signal provider os firewall
	TpspOsFirewall pulumi.BoolPtrOutput `pulumi:"tpspOsFirewall"`
	// Third party signal provider minimum os version
	TpspOsVersion pulumi.StringPtrOutput `pulumi:"tpspOsVersion"`
	// Third party signal provider password protection warning trigger
	TpspPasswordProctectionWarningTrigger pulumi.StringPtrOutput `pulumi:"tpspPasswordProctectionWarningTrigger"`
	// Third party signal provider realtime url check mode
	TpspRealtimeUrlCheckMode pulumi.BoolPtrOutput `pulumi:"tpspRealtimeUrlCheckMode"`
	// Third party signal provider safe browsing protection level
	TpspSafeBrowsingProtectionLevel pulumi.StringPtrOutput `pulumi:"tpspSafeBrowsingProtectionLevel"`
	// Third party signal provider screen lock secure
	TpspScreenLockSecured pulumi.BoolPtrOutput `pulumi:"tpspScreenLockSecured"`
	// Third party signal provider site isolation enabled
	TpspSiteIsolationEnabled pulumi.BoolPtrOutput `pulumi:"tpspSiteIsolationEnabled"`
}

// NewDeviceAssuranceMacos registers a new resource with the given unique name, arguments, and options.
func NewDeviceAssuranceMacos(ctx *pulumi.Context,
	name string, args *DeviceAssuranceMacosArgs, opts ...pulumi.ResourceOption) (*DeviceAssuranceMacos, error) {
	if args == nil {
		args = &DeviceAssuranceMacosArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DeviceAssuranceMacos
	err := ctx.RegisterResource("okta:policy/deviceAssuranceMacos:DeviceAssuranceMacos", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeviceAssuranceMacos gets an existing DeviceAssuranceMacos resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeviceAssuranceMacos(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeviceAssuranceMacosState, opts ...pulumi.ResourceOption) (*DeviceAssuranceMacos, error) {
	var resource DeviceAssuranceMacos
	err := ctx.ReadResource("okta:policy/deviceAssuranceMacos:DeviceAssuranceMacos", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeviceAssuranceMacos resources.
type deviceAssuranceMacosState struct {
	// Created by
	CreatedBy *string `pulumi:"createdBy"`
	// Created date
	CreatedDate *string `pulumi:"createdDate"`
	// List of disk encryption type, can be `ALL_INTERNAL_VOLUMES`
	DiskEncryptionTypes []string `pulumi:"diskEncryptionTypes"`
	// Last update
	LastUpdate *string `pulumi:"lastUpdate"`
	// Last updated by
	LastUpdatedBy *string `pulumi:"lastUpdatedBy"`
	// Name of the device assurance policy.
	Name *string `pulumi:"name"`
	// Minimum os version of the device in the device assurance policy.
	OsVersion *string `pulumi:"osVersion"`
	// Policy device assurance platform
	Platform *string `pulumi:"platform"`
	// List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`
	ScreenlockTypes []string `pulumi:"screenlockTypes"`
	// Is the device secure with hardware in the device assurance policy.
	SecureHardwarePresent *bool `pulumi:"secureHardwarePresent"`
	// Check to include third party signal provider
	ThirdPartySignalProviders *bool `pulumi:"thirdPartySignalProviders"`
	// Third party signal provider minimum browser version
	TpspBrowserVersion *string `pulumi:"tpspBrowserVersion"`
	// Third party signal provider builtin dns client enable
	TpspBuiltinDnsClientEnabled *bool `pulumi:"tpspBuiltinDnsClientEnabled"`
	// Third party signal provider chrome remote desktop app blocked
	TpspChromeRemoteDesktopAppBlocked *bool `pulumi:"tpspChromeRemoteDesktopAppBlocked"`
	// Third party signal provider device enrollment domain
	TpspDeviceEnrollmentDomain *string `pulumi:"tpspDeviceEnrollmentDomain"`
	// Third party signal provider disk encrypted
	TpspDiskEncrypted *bool `pulumi:"tpspDiskEncrypted"`
	// Third party signal provider key trust level
	TpspKeyTrustLevel *string `pulumi:"tpspKeyTrustLevel"`
	// Third party signal provider os firewall
	TpspOsFirewall *bool `pulumi:"tpspOsFirewall"`
	// Third party signal provider minimum os version
	TpspOsVersion *string `pulumi:"tpspOsVersion"`
	// Third party signal provider password protection warning trigger
	TpspPasswordProctectionWarningTrigger *string `pulumi:"tpspPasswordProctectionWarningTrigger"`
	// Third party signal provider realtime url check mode
	TpspRealtimeUrlCheckMode *bool `pulumi:"tpspRealtimeUrlCheckMode"`
	// Third party signal provider safe browsing protection level
	TpspSafeBrowsingProtectionLevel *string `pulumi:"tpspSafeBrowsingProtectionLevel"`
	// Third party signal provider screen lock secure
	TpspScreenLockSecured *bool `pulumi:"tpspScreenLockSecured"`
	// Third party signal provider site isolation enabled
	TpspSiteIsolationEnabled *bool `pulumi:"tpspSiteIsolationEnabled"`
}

type DeviceAssuranceMacosState struct {
	// Created by
	CreatedBy pulumi.StringPtrInput
	// Created date
	CreatedDate pulumi.StringPtrInput
	// List of disk encryption type, can be `ALL_INTERNAL_VOLUMES`
	DiskEncryptionTypes pulumi.StringArrayInput
	// Last update
	LastUpdate pulumi.StringPtrInput
	// Last updated by
	LastUpdatedBy pulumi.StringPtrInput
	// Name of the device assurance policy.
	Name pulumi.StringPtrInput
	// Minimum os version of the device in the device assurance policy.
	OsVersion pulumi.StringPtrInput
	// Policy device assurance platform
	Platform pulumi.StringPtrInput
	// List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`
	ScreenlockTypes pulumi.StringArrayInput
	// Is the device secure with hardware in the device assurance policy.
	SecureHardwarePresent pulumi.BoolPtrInput
	// Check to include third party signal provider
	ThirdPartySignalProviders pulumi.BoolPtrInput
	// Third party signal provider minimum browser version
	TpspBrowserVersion pulumi.StringPtrInput
	// Third party signal provider builtin dns client enable
	TpspBuiltinDnsClientEnabled pulumi.BoolPtrInput
	// Third party signal provider chrome remote desktop app blocked
	TpspChromeRemoteDesktopAppBlocked pulumi.BoolPtrInput
	// Third party signal provider device enrollment domain
	TpspDeviceEnrollmentDomain pulumi.StringPtrInput
	// Third party signal provider disk encrypted
	TpspDiskEncrypted pulumi.BoolPtrInput
	// Third party signal provider key trust level
	TpspKeyTrustLevel pulumi.StringPtrInput
	// Third party signal provider os firewall
	TpspOsFirewall pulumi.BoolPtrInput
	// Third party signal provider minimum os version
	TpspOsVersion pulumi.StringPtrInput
	// Third party signal provider password protection warning trigger
	TpspPasswordProctectionWarningTrigger pulumi.StringPtrInput
	// Third party signal provider realtime url check mode
	TpspRealtimeUrlCheckMode pulumi.BoolPtrInput
	// Third party signal provider safe browsing protection level
	TpspSafeBrowsingProtectionLevel pulumi.StringPtrInput
	// Third party signal provider screen lock secure
	TpspScreenLockSecured pulumi.BoolPtrInput
	// Third party signal provider site isolation enabled
	TpspSiteIsolationEnabled pulumi.BoolPtrInput
}

func (DeviceAssuranceMacosState) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceAssuranceMacosState)(nil)).Elem()
}

type deviceAssuranceMacosArgs struct {
	// List of disk encryption type, can be `ALL_INTERNAL_VOLUMES`
	DiskEncryptionTypes []string `pulumi:"diskEncryptionTypes"`
	// Name of the device assurance policy.
	Name *string `pulumi:"name"`
	// Minimum os version of the device in the device assurance policy.
	OsVersion *string `pulumi:"osVersion"`
	// List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`
	ScreenlockTypes []string `pulumi:"screenlockTypes"`
	// Is the device secure with hardware in the device assurance policy.
	SecureHardwarePresent *bool `pulumi:"secureHardwarePresent"`
	// Check to include third party signal provider
	ThirdPartySignalProviders *bool `pulumi:"thirdPartySignalProviders"`
	// Third party signal provider minimum browser version
	TpspBrowserVersion *string `pulumi:"tpspBrowserVersion"`
	// Third party signal provider builtin dns client enable
	TpspBuiltinDnsClientEnabled *bool `pulumi:"tpspBuiltinDnsClientEnabled"`
	// Third party signal provider chrome remote desktop app blocked
	TpspChromeRemoteDesktopAppBlocked *bool `pulumi:"tpspChromeRemoteDesktopAppBlocked"`
	// Third party signal provider device enrollment domain
	TpspDeviceEnrollmentDomain *string `pulumi:"tpspDeviceEnrollmentDomain"`
	// Third party signal provider disk encrypted
	TpspDiskEncrypted *bool `pulumi:"tpspDiskEncrypted"`
	// Third party signal provider key trust level
	TpspKeyTrustLevel *string `pulumi:"tpspKeyTrustLevel"`
	// Third party signal provider os firewall
	TpspOsFirewall *bool `pulumi:"tpspOsFirewall"`
	// Third party signal provider minimum os version
	TpspOsVersion *string `pulumi:"tpspOsVersion"`
	// Third party signal provider password protection warning trigger
	TpspPasswordProctectionWarningTrigger *string `pulumi:"tpspPasswordProctectionWarningTrigger"`
	// Third party signal provider realtime url check mode
	TpspRealtimeUrlCheckMode *bool `pulumi:"tpspRealtimeUrlCheckMode"`
	// Third party signal provider safe browsing protection level
	TpspSafeBrowsingProtectionLevel *string `pulumi:"tpspSafeBrowsingProtectionLevel"`
	// Third party signal provider screen lock secure
	TpspScreenLockSecured *bool `pulumi:"tpspScreenLockSecured"`
	// Third party signal provider site isolation enabled
	TpspSiteIsolationEnabled *bool `pulumi:"tpspSiteIsolationEnabled"`
}

// The set of arguments for constructing a DeviceAssuranceMacos resource.
type DeviceAssuranceMacosArgs struct {
	// List of disk encryption type, can be `ALL_INTERNAL_VOLUMES`
	DiskEncryptionTypes pulumi.StringArrayInput
	// Name of the device assurance policy.
	Name pulumi.StringPtrInput
	// Minimum os version of the device in the device assurance policy.
	OsVersion pulumi.StringPtrInput
	// List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`
	ScreenlockTypes pulumi.StringArrayInput
	// Is the device secure with hardware in the device assurance policy.
	SecureHardwarePresent pulumi.BoolPtrInput
	// Check to include third party signal provider
	ThirdPartySignalProviders pulumi.BoolPtrInput
	// Third party signal provider minimum browser version
	TpspBrowserVersion pulumi.StringPtrInput
	// Third party signal provider builtin dns client enable
	TpspBuiltinDnsClientEnabled pulumi.BoolPtrInput
	// Third party signal provider chrome remote desktop app blocked
	TpspChromeRemoteDesktopAppBlocked pulumi.BoolPtrInput
	// Third party signal provider device enrollment domain
	TpspDeviceEnrollmentDomain pulumi.StringPtrInput
	// Third party signal provider disk encrypted
	TpspDiskEncrypted pulumi.BoolPtrInput
	// Third party signal provider key trust level
	TpspKeyTrustLevel pulumi.StringPtrInput
	// Third party signal provider os firewall
	TpspOsFirewall pulumi.BoolPtrInput
	// Third party signal provider minimum os version
	TpspOsVersion pulumi.StringPtrInput
	// Third party signal provider password protection warning trigger
	TpspPasswordProctectionWarningTrigger pulumi.StringPtrInput
	// Third party signal provider realtime url check mode
	TpspRealtimeUrlCheckMode pulumi.BoolPtrInput
	// Third party signal provider safe browsing protection level
	TpspSafeBrowsingProtectionLevel pulumi.StringPtrInput
	// Third party signal provider screen lock secure
	TpspScreenLockSecured pulumi.BoolPtrInput
	// Third party signal provider site isolation enabled
	TpspSiteIsolationEnabled pulumi.BoolPtrInput
}

func (DeviceAssuranceMacosArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceAssuranceMacosArgs)(nil)).Elem()
}

type DeviceAssuranceMacosInput interface {
	pulumi.Input

	ToDeviceAssuranceMacosOutput() DeviceAssuranceMacosOutput
	ToDeviceAssuranceMacosOutputWithContext(ctx context.Context) DeviceAssuranceMacosOutput
}

func (*DeviceAssuranceMacos) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceAssuranceMacos)(nil)).Elem()
}

func (i *DeviceAssuranceMacos) ToDeviceAssuranceMacosOutput() DeviceAssuranceMacosOutput {
	return i.ToDeviceAssuranceMacosOutputWithContext(context.Background())
}

func (i *DeviceAssuranceMacos) ToDeviceAssuranceMacosOutputWithContext(ctx context.Context) DeviceAssuranceMacosOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceAssuranceMacosOutput)
}

// DeviceAssuranceMacosArrayInput is an input type that accepts DeviceAssuranceMacosArray and DeviceAssuranceMacosArrayOutput values.
// You can construct a concrete instance of `DeviceAssuranceMacosArrayInput` via:
//
//	DeviceAssuranceMacosArray{ DeviceAssuranceMacosArgs{...} }
type DeviceAssuranceMacosArrayInput interface {
	pulumi.Input

	ToDeviceAssuranceMacosArrayOutput() DeviceAssuranceMacosArrayOutput
	ToDeviceAssuranceMacosArrayOutputWithContext(context.Context) DeviceAssuranceMacosArrayOutput
}

type DeviceAssuranceMacosArray []DeviceAssuranceMacosInput

func (DeviceAssuranceMacosArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeviceAssuranceMacos)(nil)).Elem()
}

func (i DeviceAssuranceMacosArray) ToDeviceAssuranceMacosArrayOutput() DeviceAssuranceMacosArrayOutput {
	return i.ToDeviceAssuranceMacosArrayOutputWithContext(context.Background())
}

func (i DeviceAssuranceMacosArray) ToDeviceAssuranceMacosArrayOutputWithContext(ctx context.Context) DeviceAssuranceMacosArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceAssuranceMacosArrayOutput)
}

// DeviceAssuranceMacosMapInput is an input type that accepts DeviceAssuranceMacosMap and DeviceAssuranceMacosMapOutput values.
// You can construct a concrete instance of `DeviceAssuranceMacosMapInput` via:
//
//	DeviceAssuranceMacosMap{ "key": DeviceAssuranceMacosArgs{...} }
type DeviceAssuranceMacosMapInput interface {
	pulumi.Input

	ToDeviceAssuranceMacosMapOutput() DeviceAssuranceMacosMapOutput
	ToDeviceAssuranceMacosMapOutputWithContext(context.Context) DeviceAssuranceMacosMapOutput
}

type DeviceAssuranceMacosMap map[string]DeviceAssuranceMacosInput

func (DeviceAssuranceMacosMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeviceAssuranceMacos)(nil)).Elem()
}

func (i DeviceAssuranceMacosMap) ToDeviceAssuranceMacosMapOutput() DeviceAssuranceMacosMapOutput {
	return i.ToDeviceAssuranceMacosMapOutputWithContext(context.Background())
}

func (i DeviceAssuranceMacosMap) ToDeviceAssuranceMacosMapOutputWithContext(ctx context.Context) DeviceAssuranceMacosMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceAssuranceMacosMapOutput)
}

type DeviceAssuranceMacosOutput struct{ *pulumi.OutputState }

func (DeviceAssuranceMacosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceAssuranceMacos)(nil)).Elem()
}

func (o DeviceAssuranceMacosOutput) ToDeviceAssuranceMacosOutput() DeviceAssuranceMacosOutput {
	return o
}

func (o DeviceAssuranceMacosOutput) ToDeviceAssuranceMacosOutputWithContext(ctx context.Context) DeviceAssuranceMacosOutput {
	return o
}

// Created by
func (o DeviceAssuranceMacosOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// Created date
func (o DeviceAssuranceMacosOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.StringOutput { return v.CreatedDate }).(pulumi.StringOutput)
}

// List of disk encryption type, can be `ALL_INTERNAL_VOLUMES`
func (o DeviceAssuranceMacosOutput) DiskEncryptionTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.StringArrayOutput { return v.DiskEncryptionTypes }).(pulumi.StringArrayOutput)
}

// Last update
func (o DeviceAssuranceMacosOutput) LastUpdate() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.StringOutput { return v.LastUpdate }).(pulumi.StringOutput)
}

// Last updated by
func (o DeviceAssuranceMacosOutput) LastUpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.StringOutput { return v.LastUpdatedBy }).(pulumi.StringOutput)
}

// Name of the device assurance policy.
func (o DeviceAssuranceMacosOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Minimum os version of the device in the device assurance policy.
func (o DeviceAssuranceMacosOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.StringPtrOutput { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// Policy device assurance platform
func (o DeviceAssuranceMacosOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.StringOutput { return v.Platform }).(pulumi.StringOutput)
}

// List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`
func (o DeviceAssuranceMacosOutput) ScreenlockTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.StringArrayOutput { return v.ScreenlockTypes }).(pulumi.StringArrayOutput)
}

// Is the device secure with hardware in the device assurance policy.
func (o DeviceAssuranceMacosOutput) SecureHardwarePresent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.BoolPtrOutput { return v.SecureHardwarePresent }).(pulumi.BoolPtrOutput)
}

// Check to include third party signal provider
func (o DeviceAssuranceMacosOutput) ThirdPartySignalProviders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.BoolPtrOutput { return v.ThirdPartySignalProviders }).(pulumi.BoolPtrOutput)
}

// Third party signal provider minimum browser version
func (o DeviceAssuranceMacosOutput) TpspBrowserVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.StringPtrOutput { return v.TpspBrowserVersion }).(pulumi.StringPtrOutput)
}

// Third party signal provider builtin dns client enable
func (o DeviceAssuranceMacosOutput) TpspBuiltinDnsClientEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.BoolPtrOutput { return v.TpspBuiltinDnsClientEnabled }).(pulumi.BoolPtrOutput)
}

// Third party signal provider chrome remote desktop app blocked
func (o DeviceAssuranceMacosOutput) TpspChromeRemoteDesktopAppBlocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.BoolPtrOutput { return v.TpspChromeRemoteDesktopAppBlocked }).(pulumi.BoolPtrOutput)
}

// Third party signal provider device enrollment domain
func (o DeviceAssuranceMacosOutput) TpspDeviceEnrollmentDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.StringPtrOutput { return v.TpspDeviceEnrollmentDomain }).(pulumi.StringPtrOutput)
}

// Third party signal provider disk encrypted
func (o DeviceAssuranceMacosOutput) TpspDiskEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.BoolPtrOutput { return v.TpspDiskEncrypted }).(pulumi.BoolPtrOutput)
}

// Third party signal provider key trust level
func (o DeviceAssuranceMacosOutput) TpspKeyTrustLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.StringPtrOutput { return v.TpspKeyTrustLevel }).(pulumi.StringPtrOutput)
}

// Third party signal provider os firewall
func (o DeviceAssuranceMacosOutput) TpspOsFirewall() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.BoolPtrOutput { return v.TpspOsFirewall }).(pulumi.BoolPtrOutput)
}

// Third party signal provider minimum os version
func (o DeviceAssuranceMacosOutput) TpspOsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.StringPtrOutput { return v.TpspOsVersion }).(pulumi.StringPtrOutput)
}

// Third party signal provider password protection warning trigger
func (o DeviceAssuranceMacosOutput) TpspPasswordProctectionWarningTrigger() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.StringPtrOutput { return v.TpspPasswordProctectionWarningTrigger }).(pulumi.StringPtrOutput)
}

// Third party signal provider realtime url check mode
func (o DeviceAssuranceMacosOutput) TpspRealtimeUrlCheckMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.BoolPtrOutput { return v.TpspRealtimeUrlCheckMode }).(pulumi.BoolPtrOutput)
}

// Third party signal provider safe browsing protection level
func (o DeviceAssuranceMacosOutput) TpspSafeBrowsingProtectionLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.StringPtrOutput { return v.TpspSafeBrowsingProtectionLevel }).(pulumi.StringPtrOutput)
}

// Third party signal provider screen lock secure
func (o DeviceAssuranceMacosOutput) TpspScreenLockSecured() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.BoolPtrOutput { return v.TpspScreenLockSecured }).(pulumi.BoolPtrOutput)
}

// Third party signal provider site isolation enabled
func (o DeviceAssuranceMacosOutput) TpspSiteIsolationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceMacos) pulumi.BoolPtrOutput { return v.TpspSiteIsolationEnabled }).(pulumi.BoolPtrOutput)
}

type DeviceAssuranceMacosArrayOutput struct{ *pulumi.OutputState }

func (DeviceAssuranceMacosArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeviceAssuranceMacos)(nil)).Elem()
}

func (o DeviceAssuranceMacosArrayOutput) ToDeviceAssuranceMacosArrayOutput() DeviceAssuranceMacosArrayOutput {
	return o
}

func (o DeviceAssuranceMacosArrayOutput) ToDeviceAssuranceMacosArrayOutputWithContext(ctx context.Context) DeviceAssuranceMacosArrayOutput {
	return o
}

func (o DeviceAssuranceMacosArrayOutput) Index(i pulumi.IntInput) DeviceAssuranceMacosOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeviceAssuranceMacos {
		return vs[0].([]*DeviceAssuranceMacos)[vs[1].(int)]
	}).(DeviceAssuranceMacosOutput)
}

type DeviceAssuranceMacosMapOutput struct{ *pulumi.OutputState }

func (DeviceAssuranceMacosMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeviceAssuranceMacos)(nil)).Elem()
}

func (o DeviceAssuranceMacosMapOutput) ToDeviceAssuranceMacosMapOutput() DeviceAssuranceMacosMapOutput {
	return o
}

func (o DeviceAssuranceMacosMapOutput) ToDeviceAssuranceMacosMapOutputWithContext(ctx context.Context) DeviceAssuranceMacosMapOutput {
	return o
}

func (o DeviceAssuranceMacosMapOutput) MapIndex(k pulumi.StringInput) DeviceAssuranceMacosOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeviceAssuranceMacos {
		return vs[0].(map[string]*DeviceAssuranceMacos)[vs[1].(string)]
	}).(DeviceAssuranceMacosOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceAssuranceMacosInput)(nil)).Elem(), &DeviceAssuranceMacos{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceAssuranceMacosArrayInput)(nil)).Elem(), DeviceAssuranceMacosArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceAssuranceMacosMapInput)(nil)).Elem(), DeviceAssuranceMacosMap{})
	pulumi.RegisterOutputType(DeviceAssuranceMacosOutput{})
	pulumi.RegisterOutputType(DeviceAssuranceMacosArrayOutput{})
	pulumi.RegisterOutputType(DeviceAssuranceMacosMapOutput{})
}

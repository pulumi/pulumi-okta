// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package policy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve a policy from Okta.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/policy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := policy.GetPolicy(ctx, &policy.GetPolicyArgs{
//				Name: "Password Policy Example",
//				Type: "PASSWORD",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPolicy(ctx *pulumi.Context, args *GetPolicyArgs, opts ...pulumi.InvokeOption) (*GetPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPolicyResult
	err := ctx.Invoke("okta:policy/getPolicy:getPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPolicy.
type GetPolicyArgs struct {
	// Name of policy to retrieve.
	Name string `pulumi:"name"`
	// Type of policy to retrieve. See https://developer.okta.com/docs/reference/api/policy/#policy-object for valid values. Currently:
	// - All:
	// - `OKTA_SIGN_ON`
	// - `PASSWORD`
	// - `MFA_ENROLL`
	// - `OAUTH_AUTHORIZATION_POLICY`
	// - `IDP_DISCOVERY`
	// - OIE Only:
	// - `ACCESS_POLICY`
	// - `PROFILE_ENROLLMENT`
	Type string `pulumi:"type"`
}

// A collection of values returned by getPolicy.
type GetPolicyResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// name of policy.
	Name   string `pulumi:"name"`
	Status string `pulumi:"status"`
	// type of policy.
	Type string `pulumi:"type"`
}

func GetPolicyOutput(ctx *pulumi.Context, args GetPolicyOutputArgs, opts ...pulumi.InvokeOption) GetPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPolicyResult, error) {
			args := v.(GetPolicyArgs)
			r, err := GetPolicy(ctx, &args, opts...)
			var s GetPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPolicyResultOutput)
}

// A collection of arguments for invoking getPolicy.
type GetPolicyOutputArgs struct {
	// Name of policy to retrieve.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of policy to retrieve. See https://developer.okta.com/docs/reference/api/policy/#policy-object for valid values. Currently:
	// - All:
	// - `OKTA_SIGN_ON`
	// - `PASSWORD`
	// - `MFA_ENROLL`
	// - `OAUTH_AUTHORIZATION_POLICY`
	// - `IDP_DISCOVERY`
	// - OIE Only:
	// - `ACCESS_POLICY`
	// - `PROFILE_ENROLLMENT`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getPolicy.
type GetPolicyResultOutput struct{ *pulumi.OutputState }

func (GetPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyResult)(nil)).Elem()
}

func (o GetPolicyResultOutput) ToGetPolicyResultOutput() GetPolicyResultOutput {
	return o
}

func (o GetPolicyResultOutput) ToGetPolicyResultOutputWithContext(ctx context.Context) GetPolicyResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// name of policy.
func (o GetPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPolicyResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyResult) string { return v.Status }).(pulumi.StringOutput)
}

// type of policy.
func (o GetPolicyResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPolicyResultOutput{})
}

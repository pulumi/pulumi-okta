// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package policy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeviceAssuranceAndroid struct {
	pulumi.CustomResourceState

	// Created by
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// Created date
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`
	// List of disk encryption type, can be `FULL`, `USER`
	DiskEncryptionTypes pulumi.StringArrayOutput `pulumi:"diskEncryptionTypes"`
	// Is the device jailbroken in the device assurance policy.
	Jailbreak pulumi.BoolPtrOutput `pulumi:"jailbreak"`
	// Last update
	LastUpdate pulumi.StringOutput `pulumi:"lastUpdate"`
	// Last updated by
	LastUpdatedBy pulumi.StringOutput `pulumi:"lastUpdatedBy"`
	// Policy device assurance name
	Name pulumi.StringOutput `pulumi:"name"`
	// Minimum os version of the device in the device assurance policy.
	OsVersion pulumi.StringPtrOutput `pulumi:"osVersion"`
	// Policy device assurance platform
	Platform pulumi.StringOutput `pulumi:"platform"`
	// List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`
	ScreenlockTypes pulumi.StringArrayOutput `pulumi:"screenlockTypes"`
	// Indicates if the device contains a secure hardware functionality
	SecureHardwarePresent pulumi.BoolPtrOutput `pulumi:"secureHardwarePresent"`
}

// NewDeviceAssuranceAndroid registers a new resource with the given unique name, arguments, and options.
func NewDeviceAssuranceAndroid(ctx *pulumi.Context,
	name string, args *DeviceAssuranceAndroidArgs, opts ...pulumi.ResourceOption) (*DeviceAssuranceAndroid, error) {
	if args == nil {
		args = &DeviceAssuranceAndroidArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DeviceAssuranceAndroid
	err := ctx.RegisterResource("okta:policy/deviceAssuranceAndroid:DeviceAssuranceAndroid", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeviceAssuranceAndroid gets an existing DeviceAssuranceAndroid resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeviceAssuranceAndroid(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeviceAssuranceAndroidState, opts ...pulumi.ResourceOption) (*DeviceAssuranceAndroid, error) {
	var resource DeviceAssuranceAndroid
	err := ctx.ReadResource("okta:policy/deviceAssuranceAndroid:DeviceAssuranceAndroid", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeviceAssuranceAndroid resources.
type deviceAssuranceAndroidState struct {
	// Created by
	CreatedBy *string `pulumi:"createdBy"`
	// Created date
	CreatedDate *string `pulumi:"createdDate"`
	// List of disk encryption type, can be `FULL`, `USER`
	DiskEncryptionTypes []string `pulumi:"diskEncryptionTypes"`
	// Is the device jailbroken in the device assurance policy.
	Jailbreak *bool `pulumi:"jailbreak"`
	// Last update
	LastUpdate *string `pulumi:"lastUpdate"`
	// Last updated by
	LastUpdatedBy *string `pulumi:"lastUpdatedBy"`
	// Policy device assurance name
	Name *string `pulumi:"name"`
	// Minimum os version of the device in the device assurance policy.
	OsVersion *string `pulumi:"osVersion"`
	// Policy device assurance platform
	Platform *string `pulumi:"platform"`
	// List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`
	ScreenlockTypes []string `pulumi:"screenlockTypes"`
	// Indicates if the device contains a secure hardware functionality
	SecureHardwarePresent *bool `pulumi:"secureHardwarePresent"`
}

type DeviceAssuranceAndroidState struct {
	// Created by
	CreatedBy pulumi.StringPtrInput
	// Created date
	CreatedDate pulumi.StringPtrInput
	// List of disk encryption type, can be `FULL`, `USER`
	DiskEncryptionTypes pulumi.StringArrayInput
	// Is the device jailbroken in the device assurance policy.
	Jailbreak pulumi.BoolPtrInput
	// Last update
	LastUpdate pulumi.StringPtrInput
	// Last updated by
	LastUpdatedBy pulumi.StringPtrInput
	// Policy device assurance name
	Name pulumi.StringPtrInput
	// Minimum os version of the device in the device assurance policy.
	OsVersion pulumi.StringPtrInput
	// Policy device assurance platform
	Platform pulumi.StringPtrInput
	// List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`
	ScreenlockTypes pulumi.StringArrayInput
	// Indicates if the device contains a secure hardware functionality
	SecureHardwarePresent pulumi.BoolPtrInput
}

func (DeviceAssuranceAndroidState) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceAssuranceAndroidState)(nil)).Elem()
}

type deviceAssuranceAndroidArgs struct {
	// List of disk encryption type, can be `FULL`, `USER`
	DiskEncryptionTypes []string `pulumi:"diskEncryptionTypes"`
	// Is the device jailbroken in the device assurance policy.
	Jailbreak *bool `pulumi:"jailbreak"`
	// Policy device assurance name
	Name *string `pulumi:"name"`
	// Minimum os version of the device in the device assurance policy.
	OsVersion *string `pulumi:"osVersion"`
	// List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`
	ScreenlockTypes []string `pulumi:"screenlockTypes"`
	// Indicates if the device contains a secure hardware functionality
	SecureHardwarePresent *bool `pulumi:"secureHardwarePresent"`
}

// The set of arguments for constructing a DeviceAssuranceAndroid resource.
type DeviceAssuranceAndroidArgs struct {
	// List of disk encryption type, can be `FULL`, `USER`
	DiskEncryptionTypes pulumi.StringArrayInput
	// Is the device jailbroken in the device assurance policy.
	Jailbreak pulumi.BoolPtrInput
	// Policy device assurance name
	Name pulumi.StringPtrInput
	// Minimum os version of the device in the device assurance policy.
	OsVersion pulumi.StringPtrInput
	// List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`
	ScreenlockTypes pulumi.StringArrayInput
	// Indicates if the device contains a secure hardware functionality
	SecureHardwarePresent pulumi.BoolPtrInput
}

func (DeviceAssuranceAndroidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceAssuranceAndroidArgs)(nil)).Elem()
}

type DeviceAssuranceAndroidInput interface {
	pulumi.Input

	ToDeviceAssuranceAndroidOutput() DeviceAssuranceAndroidOutput
	ToDeviceAssuranceAndroidOutputWithContext(ctx context.Context) DeviceAssuranceAndroidOutput
}

func (*DeviceAssuranceAndroid) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceAssuranceAndroid)(nil)).Elem()
}

func (i *DeviceAssuranceAndroid) ToDeviceAssuranceAndroidOutput() DeviceAssuranceAndroidOutput {
	return i.ToDeviceAssuranceAndroidOutputWithContext(context.Background())
}

func (i *DeviceAssuranceAndroid) ToDeviceAssuranceAndroidOutputWithContext(ctx context.Context) DeviceAssuranceAndroidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceAssuranceAndroidOutput)
}

// DeviceAssuranceAndroidArrayInput is an input type that accepts DeviceAssuranceAndroidArray and DeviceAssuranceAndroidArrayOutput values.
// You can construct a concrete instance of `DeviceAssuranceAndroidArrayInput` via:
//
//	DeviceAssuranceAndroidArray{ DeviceAssuranceAndroidArgs{...} }
type DeviceAssuranceAndroidArrayInput interface {
	pulumi.Input

	ToDeviceAssuranceAndroidArrayOutput() DeviceAssuranceAndroidArrayOutput
	ToDeviceAssuranceAndroidArrayOutputWithContext(context.Context) DeviceAssuranceAndroidArrayOutput
}

type DeviceAssuranceAndroidArray []DeviceAssuranceAndroidInput

func (DeviceAssuranceAndroidArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeviceAssuranceAndroid)(nil)).Elem()
}

func (i DeviceAssuranceAndroidArray) ToDeviceAssuranceAndroidArrayOutput() DeviceAssuranceAndroidArrayOutput {
	return i.ToDeviceAssuranceAndroidArrayOutputWithContext(context.Background())
}

func (i DeviceAssuranceAndroidArray) ToDeviceAssuranceAndroidArrayOutputWithContext(ctx context.Context) DeviceAssuranceAndroidArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceAssuranceAndroidArrayOutput)
}

// DeviceAssuranceAndroidMapInput is an input type that accepts DeviceAssuranceAndroidMap and DeviceAssuranceAndroidMapOutput values.
// You can construct a concrete instance of `DeviceAssuranceAndroidMapInput` via:
//
//	DeviceAssuranceAndroidMap{ "key": DeviceAssuranceAndroidArgs{...} }
type DeviceAssuranceAndroidMapInput interface {
	pulumi.Input

	ToDeviceAssuranceAndroidMapOutput() DeviceAssuranceAndroidMapOutput
	ToDeviceAssuranceAndroidMapOutputWithContext(context.Context) DeviceAssuranceAndroidMapOutput
}

type DeviceAssuranceAndroidMap map[string]DeviceAssuranceAndroidInput

func (DeviceAssuranceAndroidMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeviceAssuranceAndroid)(nil)).Elem()
}

func (i DeviceAssuranceAndroidMap) ToDeviceAssuranceAndroidMapOutput() DeviceAssuranceAndroidMapOutput {
	return i.ToDeviceAssuranceAndroidMapOutputWithContext(context.Background())
}

func (i DeviceAssuranceAndroidMap) ToDeviceAssuranceAndroidMapOutputWithContext(ctx context.Context) DeviceAssuranceAndroidMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceAssuranceAndroidMapOutput)
}

type DeviceAssuranceAndroidOutput struct{ *pulumi.OutputState }

func (DeviceAssuranceAndroidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceAssuranceAndroid)(nil)).Elem()
}

func (o DeviceAssuranceAndroidOutput) ToDeviceAssuranceAndroidOutput() DeviceAssuranceAndroidOutput {
	return o
}

func (o DeviceAssuranceAndroidOutput) ToDeviceAssuranceAndroidOutputWithContext(ctx context.Context) DeviceAssuranceAndroidOutput {
	return o
}

// Created by
func (o DeviceAssuranceAndroidOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceAndroid) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// Created date
func (o DeviceAssuranceAndroidOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceAndroid) pulumi.StringOutput { return v.CreatedDate }).(pulumi.StringOutput)
}

// List of disk encryption type, can be `FULL`, `USER`
func (o DeviceAssuranceAndroidOutput) DiskEncryptionTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeviceAssuranceAndroid) pulumi.StringArrayOutput { return v.DiskEncryptionTypes }).(pulumi.StringArrayOutput)
}

// Is the device jailbroken in the device assurance policy.
func (o DeviceAssuranceAndroidOutput) Jailbreak() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceAndroid) pulumi.BoolPtrOutput { return v.Jailbreak }).(pulumi.BoolPtrOutput)
}

// Last update
func (o DeviceAssuranceAndroidOutput) LastUpdate() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceAndroid) pulumi.StringOutput { return v.LastUpdate }).(pulumi.StringOutput)
}

// Last updated by
func (o DeviceAssuranceAndroidOutput) LastUpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceAndroid) pulumi.StringOutput { return v.LastUpdatedBy }).(pulumi.StringOutput)
}

// Policy device assurance name
func (o DeviceAssuranceAndroidOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceAndroid) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Minimum os version of the device in the device assurance policy.
func (o DeviceAssuranceAndroidOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceAndroid) pulumi.StringPtrOutput { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// Policy device assurance platform
func (o DeviceAssuranceAndroidOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceAndroid) pulumi.StringOutput { return v.Platform }).(pulumi.StringOutput)
}

// List of screenlock type, can be `BIOMETRIC` or `BIOMETRIC, PASSCODE`
func (o DeviceAssuranceAndroidOutput) ScreenlockTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeviceAssuranceAndroid) pulumi.StringArrayOutput { return v.ScreenlockTypes }).(pulumi.StringArrayOutput)
}

// Indicates if the device contains a secure hardware functionality
func (o DeviceAssuranceAndroidOutput) SecureHardwarePresent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceAndroid) pulumi.BoolPtrOutput { return v.SecureHardwarePresent }).(pulumi.BoolPtrOutput)
}

type DeviceAssuranceAndroidArrayOutput struct{ *pulumi.OutputState }

func (DeviceAssuranceAndroidArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeviceAssuranceAndroid)(nil)).Elem()
}

func (o DeviceAssuranceAndroidArrayOutput) ToDeviceAssuranceAndroidArrayOutput() DeviceAssuranceAndroidArrayOutput {
	return o
}

func (o DeviceAssuranceAndroidArrayOutput) ToDeviceAssuranceAndroidArrayOutputWithContext(ctx context.Context) DeviceAssuranceAndroidArrayOutput {
	return o
}

func (o DeviceAssuranceAndroidArrayOutput) Index(i pulumi.IntInput) DeviceAssuranceAndroidOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeviceAssuranceAndroid {
		return vs[0].([]*DeviceAssuranceAndroid)[vs[1].(int)]
	}).(DeviceAssuranceAndroidOutput)
}

type DeviceAssuranceAndroidMapOutput struct{ *pulumi.OutputState }

func (DeviceAssuranceAndroidMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeviceAssuranceAndroid)(nil)).Elem()
}

func (o DeviceAssuranceAndroidMapOutput) ToDeviceAssuranceAndroidMapOutput() DeviceAssuranceAndroidMapOutput {
	return o
}

func (o DeviceAssuranceAndroidMapOutput) ToDeviceAssuranceAndroidMapOutputWithContext(ctx context.Context) DeviceAssuranceAndroidMapOutput {
	return o
}

func (o DeviceAssuranceAndroidMapOutput) MapIndex(k pulumi.StringInput) DeviceAssuranceAndroidOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeviceAssuranceAndroid {
		return vs[0].(map[string]*DeviceAssuranceAndroid)[vs[1].(string)]
	}).(DeviceAssuranceAndroidOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceAssuranceAndroidInput)(nil)).Elem(), &DeviceAssuranceAndroid{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceAssuranceAndroidArrayInput)(nil)).Elem(), DeviceAssuranceAndroidArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceAssuranceAndroidMapInput)(nil)).Elem(), DeviceAssuranceAndroidMap{})
	pulumi.RegisterOutputType(DeviceAssuranceAndroidOutput{})
	pulumi.RegisterOutputType(DeviceAssuranceAndroidArrayOutput{})
	pulumi.RegisterOutputType(DeviceAssuranceAndroidMapOutput{})
}

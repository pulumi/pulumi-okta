// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package policy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type MfaDuo struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType *string `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll *string `pulumi:"enroll"`
}

// MfaDuoInput is an input type that accepts MfaDuoArgs and MfaDuoOutput values.
// You can construct a concrete instance of `MfaDuoInput` via:
//
//          MfaDuoArgs{...}
type MfaDuoInput interface {
	pulumi.Input

	ToMfaDuoOutput() MfaDuoOutput
	ToMfaDuoOutputWithContext(context.Context) MfaDuoOutput
}

type MfaDuoArgs struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType pulumi.StringPtrInput `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll pulumi.StringPtrInput `pulumi:"enroll"`
}

func (MfaDuoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaDuo)(nil)).Elem()
}

func (i MfaDuoArgs) ToMfaDuoOutput() MfaDuoOutput {
	return i.ToMfaDuoOutputWithContext(context.Background())
}

func (i MfaDuoArgs) ToMfaDuoOutputWithContext(ctx context.Context) MfaDuoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaDuoOutput)
}

func (i MfaDuoArgs) ToMfaDuoPtrOutput() MfaDuoPtrOutput {
	return i.ToMfaDuoPtrOutputWithContext(context.Background())
}

func (i MfaDuoArgs) ToMfaDuoPtrOutputWithContext(ctx context.Context) MfaDuoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaDuoOutput).ToMfaDuoPtrOutputWithContext(ctx)
}

// MfaDuoPtrInput is an input type that accepts MfaDuoArgs, MfaDuoPtr and MfaDuoPtrOutput values.
// You can construct a concrete instance of `MfaDuoPtrInput` via:
//
//          MfaDuoArgs{...}
//
//  or:
//
//          nil
type MfaDuoPtrInput interface {
	pulumi.Input

	ToMfaDuoPtrOutput() MfaDuoPtrOutput
	ToMfaDuoPtrOutputWithContext(context.Context) MfaDuoPtrOutput
}

type mfaDuoPtrType MfaDuoArgs

func MfaDuoPtr(v *MfaDuoArgs) MfaDuoPtrInput {
	return (*mfaDuoPtrType)(v)
}

func (*mfaDuoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaDuo)(nil)).Elem()
}

func (i *mfaDuoPtrType) ToMfaDuoPtrOutput() MfaDuoPtrOutput {
	return i.ToMfaDuoPtrOutputWithContext(context.Background())
}

func (i *mfaDuoPtrType) ToMfaDuoPtrOutputWithContext(ctx context.Context) MfaDuoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaDuoPtrOutput)
}

type MfaDuoOutput struct{ *pulumi.OutputState }

func (MfaDuoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaDuo)(nil)).Elem()
}

func (o MfaDuoOutput) ToMfaDuoOutput() MfaDuoOutput {
	return o
}

func (o MfaDuoOutput) ToMfaDuoOutputWithContext(ctx context.Context) MfaDuoOutput {
	return o
}

func (o MfaDuoOutput) ToMfaDuoPtrOutput() MfaDuoPtrOutput {
	return o.ToMfaDuoPtrOutputWithContext(context.Background())
}

func (o MfaDuoOutput) ToMfaDuoPtrOutputWithContext(ctx context.Context) MfaDuoPtrOutput {
	return o.ApplyT(func(v MfaDuo) *MfaDuo {
		return &v
	}).(MfaDuoPtrOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaDuoOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaDuo) *string { return v.ConsentType }).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaDuoOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaDuo) *string { return v.Enroll }).(pulumi.StringPtrOutput)
}

type MfaDuoPtrOutput struct{ *pulumi.OutputState }

func (MfaDuoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaDuo)(nil)).Elem()
}

func (o MfaDuoPtrOutput) ToMfaDuoPtrOutput() MfaDuoPtrOutput {
	return o
}

func (o MfaDuoPtrOutput) ToMfaDuoPtrOutputWithContext(ctx context.Context) MfaDuoPtrOutput {
	return o
}

func (o MfaDuoPtrOutput) Elem() MfaDuoOutput {
	return o.ApplyT(func(v *MfaDuo) MfaDuo { return *v }).(MfaDuoOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaDuoPtrOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaDuo) *string {
		if v == nil {
			return nil
		}
		return v.ConsentType
	}).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaDuoPtrOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaDuo) *string {
		if v == nil {
			return nil
		}
		return v.Enroll
	}).(pulumi.StringPtrOutput)
}

type MfaFidoU2f struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType *string `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll *string `pulumi:"enroll"`
}

// MfaFidoU2fInput is an input type that accepts MfaFidoU2fArgs and MfaFidoU2fOutput values.
// You can construct a concrete instance of `MfaFidoU2fInput` via:
//
//          MfaFidoU2fArgs{...}
type MfaFidoU2fInput interface {
	pulumi.Input

	ToMfaFidoU2fOutput() MfaFidoU2fOutput
	ToMfaFidoU2fOutputWithContext(context.Context) MfaFidoU2fOutput
}

type MfaFidoU2fArgs struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType pulumi.StringPtrInput `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll pulumi.StringPtrInput `pulumi:"enroll"`
}

func (MfaFidoU2fArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaFidoU2f)(nil)).Elem()
}

func (i MfaFidoU2fArgs) ToMfaFidoU2fOutput() MfaFidoU2fOutput {
	return i.ToMfaFidoU2fOutputWithContext(context.Background())
}

func (i MfaFidoU2fArgs) ToMfaFidoU2fOutputWithContext(ctx context.Context) MfaFidoU2fOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaFidoU2fOutput)
}

func (i MfaFidoU2fArgs) ToMfaFidoU2fPtrOutput() MfaFidoU2fPtrOutput {
	return i.ToMfaFidoU2fPtrOutputWithContext(context.Background())
}

func (i MfaFidoU2fArgs) ToMfaFidoU2fPtrOutputWithContext(ctx context.Context) MfaFidoU2fPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaFidoU2fOutput).ToMfaFidoU2fPtrOutputWithContext(ctx)
}

// MfaFidoU2fPtrInput is an input type that accepts MfaFidoU2fArgs, MfaFidoU2fPtr and MfaFidoU2fPtrOutput values.
// You can construct a concrete instance of `MfaFidoU2fPtrInput` via:
//
//          MfaFidoU2fArgs{...}
//
//  or:
//
//          nil
type MfaFidoU2fPtrInput interface {
	pulumi.Input

	ToMfaFidoU2fPtrOutput() MfaFidoU2fPtrOutput
	ToMfaFidoU2fPtrOutputWithContext(context.Context) MfaFidoU2fPtrOutput
}

type mfaFidoU2fPtrType MfaFidoU2fArgs

func MfaFidoU2fPtr(v *MfaFidoU2fArgs) MfaFidoU2fPtrInput {
	return (*mfaFidoU2fPtrType)(v)
}

func (*mfaFidoU2fPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaFidoU2f)(nil)).Elem()
}

func (i *mfaFidoU2fPtrType) ToMfaFidoU2fPtrOutput() MfaFidoU2fPtrOutput {
	return i.ToMfaFidoU2fPtrOutputWithContext(context.Background())
}

func (i *mfaFidoU2fPtrType) ToMfaFidoU2fPtrOutputWithContext(ctx context.Context) MfaFidoU2fPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaFidoU2fPtrOutput)
}

type MfaFidoU2fOutput struct{ *pulumi.OutputState }

func (MfaFidoU2fOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaFidoU2f)(nil)).Elem()
}

func (o MfaFidoU2fOutput) ToMfaFidoU2fOutput() MfaFidoU2fOutput {
	return o
}

func (o MfaFidoU2fOutput) ToMfaFidoU2fOutputWithContext(ctx context.Context) MfaFidoU2fOutput {
	return o
}

func (o MfaFidoU2fOutput) ToMfaFidoU2fPtrOutput() MfaFidoU2fPtrOutput {
	return o.ToMfaFidoU2fPtrOutputWithContext(context.Background())
}

func (o MfaFidoU2fOutput) ToMfaFidoU2fPtrOutputWithContext(ctx context.Context) MfaFidoU2fPtrOutput {
	return o.ApplyT(func(v MfaFidoU2f) *MfaFidoU2f {
		return &v
	}).(MfaFidoU2fPtrOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaFidoU2fOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaFidoU2f) *string { return v.ConsentType }).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaFidoU2fOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaFidoU2f) *string { return v.Enroll }).(pulumi.StringPtrOutput)
}

type MfaFidoU2fPtrOutput struct{ *pulumi.OutputState }

func (MfaFidoU2fPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaFidoU2f)(nil)).Elem()
}

func (o MfaFidoU2fPtrOutput) ToMfaFidoU2fPtrOutput() MfaFidoU2fPtrOutput {
	return o
}

func (o MfaFidoU2fPtrOutput) ToMfaFidoU2fPtrOutputWithContext(ctx context.Context) MfaFidoU2fPtrOutput {
	return o
}

func (o MfaFidoU2fPtrOutput) Elem() MfaFidoU2fOutput {
	return o.ApplyT(func(v *MfaFidoU2f) MfaFidoU2f { return *v }).(MfaFidoU2fOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaFidoU2fPtrOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaFidoU2f) *string {
		if v == nil {
			return nil
		}
		return v.ConsentType
	}).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaFidoU2fPtrOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaFidoU2f) *string {
		if v == nil {
			return nil
		}
		return v.Enroll
	}).(pulumi.StringPtrOutput)
}

type MfaFidoWebauthn struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType *string `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll *string `pulumi:"enroll"`
}

// MfaFidoWebauthnInput is an input type that accepts MfaFidoWebauthnArgs and MfaFidoWebauthnOutput values.
// You can construct a concrete instance of `MfaFidoWebauthnInput` via:
//
//          MfaFidoWebauthnArgs{...}
type MfaFidoWebauthnInput interface {
	pulumi.Input

	ToMfaFidoWebauthnOutput() MfaFidoWebauthnOutput
	ToMfaFidoWebauthnOutputWithContext(context.Context) MfaFidoWebauthnOutput
}

type MfaFidoWebauthnArgs struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType pulumi.StringPtrInput `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll pulumi.StringPtrInput `pulumi:"enroll"`
}

func (MfaFidoWebauthnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaFidoWebauthn)(nil)).Elem()
}

func (i MfaFidoWebauthnArgs) ToMfaFidoWebauthnOutput() MfaFidoWebauthnOutput {
	return i.ToMfaFidoWebauthnOutputWithContext(context.Background())
}

func (i MfaFidoWebauthnArgs) ToMfaFidoWebauthnOutputWithContext(ctx context.Context) MfaFidoWebauthnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaFidoWebauthnOutput)
}

func (i MfaFidoWebauthnArgs) ToMfaFidoWebauthnPtrOutput() MfaFidoWebauthnPtrOutput {
	return i.ToMfaFidoWebauthnPtrOutputWithContext(context.Background())
}

func (i MfaFidoWebauthnArgs) ToMfaFidoWebauthnPtrOutputWithContext(ctx context.Context) MfaFidoWebauthnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaFidoWebauthnOutput).ToMfaFidoWebauthnPtrOutputWithContext(ctx)
}

// MfaFidoWebauthnPtrInput is an input type that accepts MfaFidoWebauthnArgs, MfaFidoWebauthnPtr and MfaFidoWebauthnPtrOutput values.
// You can construct a concrete instance of `MfaFidoWebauthnPtrInput` via:
//
//          MfaFidoWebauthnArgs{...}
//
//  or:
//
//          nil
type MfaFidoWebauthnPtrInput interface {
	pulumi.Input

	ToMfaFidoWebauthnPtrOutput() MfaFidoWebauthnPtrOutput
	ToMfaFidoWebauthnPtrOutputWithContext(context.Context) MfaFidoWebauthnPtrOutput
}

type mfaFidoWebauthnPtrType MfaFidoWebauthnArgs

func MfaFidoWebauthnPtr(v *MfaFidoWebauthnArgs) MfaFidoWebauthnPtrInput {
	return (*mfaFidoWebauthnPtrType)(v)
}

func (*mfaFidoWebauthnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaFidoWebauthn)(nil)).Elem()
}

func (i *mfaFidoWebauthnPtrType) ToMfaFidoWebauthnPtrOutput() MfaFidoWebauthnPtrOutput {
	return i.ToMfaFidoWebauthnPtrOutputWithContext(context.Background())
}

func (i *mfaFidoWebauthnPtrType) ToMfaFidoWebauthnPtrOutputWithContext(ctx context.Context) MfaFidoWebauthnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaFidoWebauthnPtrOutput)
}

type MfaFidoWebauthnOutput struct{ *pulumi.OutputState }

func (MfaFidoWebauthnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaFidoWebauthn)(nil)).Elem()
}

func (o MfaFidoWebauthnOutput) ToMfaFidoWebauthnOutput() MfaFidoWebauthnOutput {
	return o
}

func (o MfaFidoWebauthnOutput) ToMfaFidoWebauthnOutputWithContext(ctx context.Context) MfaFidoWebauthnOutput {
	return o
}

func (o MfaFidoWebauthnOutput) ToMfaFidoWebauthnPtrOutput() MfaFidoWebauthnPtrOutput {
	return o.ToMfaFidoWebauthnPtrOutputWithContext(context.Background())
}

func (o MfaFidoWebauthnOutput) ToMfaFidoWebauthnPtrOutputWithContext(ctx context.Context) MfaFidoWebauthnPtrOutput {
	return o.ApplyT(func(v MfaFidoWebauthn) *MfaFidoWebauthn {
		return &v
	}).(MfaFidoWebauthnPtrOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaFidoWebauthnOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaFidoWebauthn) *string { return v.ConsentType }).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaFidoWebauthnOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaFidoWebauthn) *string { return v.Enroll }).(pulumi.StringPtrOutput)
}

type MfaFidoWebauthnPtrOutput struct{ *pulumi.OutputState }

func (MfaFidoWebauthnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaFidoWebauthn)(nil)).Elem()
}

func (o MfaFidoWebauthnPtrOutput) ToMfaFidoWebauthnPtrOutput() MfaFidoWebauthnPtrOutput {
	return o
}

func (o MfaFidoWebauthnPtrOutput) ToMfaFidoWebauthnPtrOutputWithContext(ctx context.Context) MfaFidoWebauthnPtrOutput {
	return o
}

func (o MfaFidoWebauthnPtrOutput) Elem() MfaFidoWebauthnOutput {
	return o.ApplyT(func(v *MfaFidoWebauthn) MfaFidoWebauthn { return *v }).(MfaFidoWebauthnOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaFidoWebauthnPtrOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaFidoWebauthn) *string {
		if v == nil {
			return nil
		}
		return v.ConsentType
	}).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaFidoWebauthnPtrOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaFidoWebauthn) *string {
		if v == nil {
			return nil
		}
		return v.Enroll
	}).(pulumi.StringPtrOutput)
}

type MfaGoogleOtp struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType *string `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll *string `pulumi:"enroll"`
}

// MfaGoogleOtpInput is an input type that accepts MfaGoogleOtpArgs and MfaGoogleOtpOutput values.
// You can construct a concrete instance of `MfaGoogleOtpInput` via:
//
//          MfaGoogleOtpArgs{...}
type MfaGoogleOtpInput interface {
	pulumi.Input

	ToMfaGoogleOtpOutput() MfaGoogleOtpOutput
	ToMfaGoogleOtpOutputWithContext(context.Context) MfaGoogleOtpOutput
}

type MfaGoogleOtpArgs struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType pulumi.StringPtrInput `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll pulumi.StringPtrInput `pulumi:"enroll"`
}

func (MfaGoogleOtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaGoogleOtp)(nil)).Elem()
}

func (i MfaGoogleOtpArgs) ToMfaGoogleOtpOutput() MfaGoogleOtpOutput {
	return i.ToMfaGoogleOtpOutputWithContext(context.Background())
}

func (i MfaGoogleOtpArgs) ToMfaGoogleOtpOutputWithContext(ctx context.Context) MfaGoogleOtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaGoogleOtpOutput)
}

func (i MfaGoogleOtpArgs) ToMfaGoogleOtpPtrOutput() MfaGoogleOtpPtrOutput {
	return i.ToMfaGoogleOtpPtrOutputWithContext(context.Background())
}

func (i MfaGoogleOtpArgs) ToMfaGoogleOtpPtrOutputWithContext(ctx context.Context) MfaGoogleOtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaGoogleOtpOutput).ToMfaGoogleOtpPtrOutputWithContext(ctx)
}

// MfaGoogleOtpPtrInput is an input type that accepts MfaGoogleOtpArgs, MfaGoogleOtpPtr and MfaGoogleOtpPtrOutput values.
// You can construct a concrete instance of `MfaGoogleOtpPtrInput` via:
//
//          MfaGoogleOtpArgs{...}
//
//  or:
//
//          nil
type MfaGoogleOtpPtrInput interface {
	pulumi.Input

	ToMfaGoogleOtpPtrOutput() MfaGoogleOtpPtrOutput
	ToMfaGoogleOtpPtrOutputWithContext(context.Context) MfaGoogleOtpPtrOutput
}

type mfaGoogleOtpPtrType MfaGoogleOtpArgs

func MfaGoogleOtpPtr(v *MfaGoogleOtpArgs) MfaGoogleOtpPtrInput {
	return (*mfaGoogleOtpPtrType)(v)
}

func (*mfaGoogleOtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaGoogleOtp)(nil)).Elem()
}

func (i *mfaGoogleOtpPtrType) ToMfaGoogleOtpPtrOutput() MfaGoogleOtpPtrOutput {
	return i.ToMfaGoogleOtpPtrOutputWithContext(context.Background())
}

func (i *mfaGoogleOtpPtrType) ToMfaGoogleOtpPtrOutputWithContext(ctx context.Context) MfaGoogleOtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaGoogleOtpPtrOutput)
}

type MfaGoogleOtpOutput struct{ *pulumi.OutputState }

func (MfaGoogleOtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaGoogleOtp)(nil)).Elem()
}

func (o MfaGoogleOtpOutput) ToMfaGoogleOtpOutput() MfaGoogleOtpOutput {
	return o
}

func (o MfaGoogleOtpOutput) ToMfaGoogleOtpOutputWithContext(ctx context.Context) MfaGoogleOtpOutput {
	return o
}

func (o MfaGoogleOtpOutput) ToMfaGoogleOtpPtrOutput() MfaGoogleOtpPtrOutput {
	return o.ToMfaGoogleOtpPtrOutputWithContext(context.Background())
}

func (o MfaGoogleOtpOutput) ToMfaGoogleOtpPtrOutputWithContext(ctx context.Context) MfaGoogleOtpPtrOutput {
	return o.ApplyT(func(v MfaGoogleOtp) *MfaGoogleOtp {
		return &v
	}).(MfaGoogleOtpPtrOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaGoogleOtpOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaGoogleOtp) *string { return v.ConsentType }).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaGoogleOtpOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaGoogleOtp) *string { return v.Enroll }).(pulumi.StringPtrOutput)
}

type MfaGoogleOtpPtrOutput struct{ *pulumi.OutputState }

func (MfaGoogleOtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaGoogleOtp)(nil)).Elem()
}

func (o MfaGoogleOtpPtrOutput) ToMfaGoogleOtpPtrOutput() MfaGoogleOtpPtrOutput {
	return o
}

func (o MfaGoogleOtpPtrOutput) ToMfaGoogleOtpPtrOutputWithContext(ctx context.Context) MfaGoogleOtpPtrOutput {
	return o
}

func (o MfaGoogleOtpPtrOutput) Elem() MfaGoogleOtpOutput {
	return o.ApplyT(func(v *MfaGoogleOtp) MfaGoogleOtp { return *v }).(MfaGoogleOtpOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaGoogleOtpPtrOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaGoogleOtp) *string {
		if v == nil {
			return nil
		}
		return v.ConsentType
	}).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaGoogleOtpPtrOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaGoogleOtp) *string {
		if v == nil {
			return nil
		}
		return v.Enroll
	}).(pulumi.StringPtrOutput)
}

type MfaOktaCall struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType *string `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll *string `pulumi:"enroll"`
}

// MfaOktaCallInput is an input type that accepts MfaOktaCallArgs and MfaOktaCallOutput values.
// You can construct a concrete instance of `MfaOktaCallInput` via:
//
//          MfaOktaCallArgs{...}
type MfaOktaCallInput interface {
	pulumi.Input

	ToMfaOktaCallOutput() MfaOktaCallOutput
	ToMfaOktaCallOutputWithContext(context.Context) MfaOktaCallOutput
}

type MfaOktaCallArgs struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType pulumi.StringPtrInput `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll pulumi.StringPtrInput `pulumi:"enroll"`
}

func (MfaOktaCallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaOktaCall)(nil)).Elem()
}

func (i MfaOktaCallArgs) ToMfaOktaCallOutput() MfaOktaCallOutput {
	return i.ToMfaOktaCallOutputWithContext(context.Background())
}

func (i MfaOktaCallArgs) ToMfaOktaCallOutputWithContext(ctx context.Context) MfaOktaCallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaCallOutput)
}

func (i MfaOktaCallArgs) ToMfaOktaCallPtrOutput() MfaOktaCallPtrOutput {
	return i.ToMfaOktaCallPtrOutputWithContext(context.Background())
}

func (i MfaOktaCallArgs) ToMfaOktaCallPtrOutputWithContext(ctx context.Context) MfaOktaCallPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaCallOutput).ToMfaOktaCallPtrOutputWithContext(ctx)
}

// MfaOktaCallPtrInput is an input type that accepts MfaOktaCallArgs, MfaOktaCallPtr and MfaOktaCallPtrOutput values.
// You can construct a concrete instance of `MfaOktaCallPtrInput` via:
//
//          MfaOktaCallArgs{...}
//
//  or:
//
//          nil
type MfaOktaCallPtrInput interface {
	pulumi.Input

	ToMfaOktaCallPtrOutput() MfaOktaCallPtrOutput
	ToMfaOktaCallPtrOutputWithContext(context.Context) MfaOktaCallPtrOutput
}

type mfaOktaCallPtrType MfaOktaCallArgs

func MfaOktaCallPtr(v *MfaOktaCallArgs) MfaOktaCallPtrInput {
	return (*mfaOktaCallPtrType)(v)
}

func (*mfaOktaCallPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaOktaCall)(nil)).Elem()
}

func (i *mfaOktaCallPtrType) ToMfaOktaCallPtrOutput() MfaOktaCallPtrOutput {
	return i.ToMfaOktaCallPtrOutputWithContext(context.Background())
}

func (i *mfaOktaCallPtrType) ToMfaOktaCallPtrOutputWithContext(ctx context.Context) MfaOktaCallPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaCallPtrOutput)
}

type MfaOktaCallOutput struct{ *pulumi.OutputState }

func (MfaOktaCallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaOktaCall)(nil)).Elem()
}

func (o MfaOktaCallOutput) ToMfaOktaCallOutput() MfaOktaCallOutput {
	return o
}

func (o MfaOktaCallOutput) ToMfaOktaCallOutputWithContext(ctx context.Context) MfaOktaCallOutput {
	return o
}

func (o MfaOktaCallOutput) ToMfaOktaCallPtrOutput() MfaOktaCallPtrOutput {
	return o.ToMfaOktaCallPtrOutputWithContext(context.Background())
}

func (o MfaOktaCallOutput) ToMfaOktaCallPtrOutputWithContext(ctx context.Context) MfaOktaCallPtrOutput {
	return o.ApplyT(func(v MfaOktaCall) *MfaOktaCall {
		return &v
	}).(MfaOktaCallPtrOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaOktaCallOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaOktaCall) *string { return v.ConsentType }).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaOktaCallOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaOktaCall) *string { return v.Enroll }).(pulumi.StringPtrOutput)
}

type MfaOktaCallPtrOutput struct{ *pulumi.OutputState }

func (MfaOktaCallPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaOktaCall)(nil)).Elem()
}

func (o MfaOktaCallPtrOutput) ToMfaOktaCallPtrOutput() MfaOktaCallPtrOutput {
	return o
}

func (o MfaOktaCallPtrOutput) ToMfaOktaCallPtrOutputWithContext(ctx context.Context) MfaOktaCallPtrOutput {
	return o
}

func (o MfaOktaCallPtrOutput) Elem() MfaOktaCallOutput {
	return o.ApplyT(func(v *MfaOktaCall) MfaOktaCall { return *v }).(MfaOktaCallOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaOktaCallPtrOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaOktaCall) *string {
		if v == nil {
			return nil
		}
		return v.ConsentType
	}).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaOktaCallPtrOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaOktaCall) *string {
		if v == nil {
			return nil
		}
		return v.Enroll
	}).(pulumi.StringPtrOutput)
}

type MfaOktaOtp struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType *string `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll *string `pulumi:"enroll"`
}

// MfaOktaOtpInput is an input type that accepts MfaOktaOtpArgs and MfaOktaOtpOutput values.
// You can construct a concrete instance of `MfaOktaOtpInput` via:
//
//          MfaOktaOtpArgs{...}
type MfaOktaOtpInput interface {
	pulumi.Input

	ToMfaOktaOtpOutput() MfaOktaOtpOutput
	ToMfaOktaOtpOutputWithContext(context.Context) MfaOktaOtpOutput
}

type MfaOktaOtpArgs struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType pulumi.StringPtrInput `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll pulumi.StringPtrInput `pulumi:"enroll"`
}

func (MfaOktaOtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaOktaOtp)(nil)).Elem()
}

func (i MfaOktaOtpArgs) ToMfaOktaOtpOutput() MfaOktaOtpOutput {
	return i.ToMfaOktaOtpOutputWithContext(context.Background())
}

func (i MfaOktaOtpArgs) ToMfaOktaOtpOutputWithContext(ctx context.Context) MfaOktaOtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaOtpOutput)
}

func (i MfaOktaOtpArgs) ToMfaOktaOtpPtrOutput() MfaOktaOtpPtrOutput {
	return i.ToMfaOktaOtpPtrOutputWithContext(context.Background())
}

func (i MfaOktaOtpArgs) ToMfaOktaOtpPtrOutputWithContext(ctx context.Context) MfaOktaOtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaOtpOutput).ToMfaOktaOtpPtrOutputWithContext(ctx)
}

// MfaOktaOtpPtrInput is an input type that accepts MfaOktaOtpArgs, MfaOktaOtpPtr and MfaOktaOtpPtrOutput values.
// You can construct a concrete instance of `MfaOktaOtpPtrInput` via:
//
//          MfaOktaOtpArgs{...}
//
//  or:
//
//          nil
type MfaOktaOtpPtrInput interface {
	pulumi.Input

	ToMfaOktaOtpPtrOutput() MfaOktaOtpPtrOutput
	ToMfaOktaOtpPtrOutputWithContext(context.Context) MfaOktaOtpPtrOutput
}

type mfaOktaOtpPtrType MfaOktaOtpArgs

func MfaOktaOtpPtr(v *MfaOktaOtpArgs) MfaOktaOtpPtrInput {
	return (*mfaOktaOtpPtrType)(v)
}

func (*mfaOktaOtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaOktaOtp)(nil)).Elem()
}

func (i *mfaOktaOtpPtrType) ToMfaOktaOtpPtrOutput() MfaOktaOtpPtrOutput {
	return i.ToMfaOktaOtpPtrOutputWithContext(context.Background())
}

func (i *mfaOktaOtpPtrType) ToMfaOktaOtpPtrOutputWithContext(ctx context.Context) MfaOktaOtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaOtpPtrOutput)
}

type MfaOktaOtpOutput struct{ *pulumi.OutputState }

func (MfaOktaOtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaOktaOtp)(nil)).Elem()
}

func (o MfaOktaOtpOutput) ToMfaOktaOtpOutput() MfaOktaOtpOutput {
	return o
}

func (o MfaOktaOtpOutput) ToMfaOktaOtpOutputWithContext(ctx context.Context) MfaOktaOtpOutput {
	return o
}

func (o MfaOktaOtpOutput) ToMfaOktaOtpPtrOutput() MfaOktaOtpPtrOutput {
	return o.ToMfaOktaOtpPtrOutputWithContext(context.Background())
}

func (o MfaOktaOtpOutput) ToMfaOktaOtpPtrOutputWithContext(ctx context.Context) MfaOktaOtpPtrOutput {
	return o.ApplyT(func(v MfaOktaOtp) *MfaOktaOtp {
		return &v
	}).(MfaOktaOtpPtrOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaOktaOtpOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaOktaOtp) *string { return v.ConsentType }).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaOktaOtpOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaOktaOtp) *string { return v.Enroll }).(pulumi.StringPtrOutput)
}

type MfaOktaOtpPtrOutput struct{ *pulumi.OutputState }

func (MfaOktaOtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaOktaOtp)(nil)).Elem()
}

func (o MfaOktaOtpPtrOutput) ToMfaOktaOtpPtrOutput() MfaOktaOtpPtrOutput {
	return o
}

func (o MfaOktaOtpPtrOutput) ToMfaOktaOtpPtrOutputWithContext(ctx context.Context) MfaOktaOtpPtrOutput {
	return o
}

func (o MfaOktaOtpPtrOutput) Elem() MfaOktaOtpOutput {
	return o.ApplyT(func(v *MfaOktaOtp) MfaOktaOtp { return *v }).(MfaOktaOtpOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaOktaOtpPtrOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaOktaOtp) *string {
		if v == nil {
			return nil
		}
		return v.ConsentType
	}).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaOktaOtpPtrOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaOktaOtp) *string {
		if v == nil {
			return nil
		}
		return v.Enroll
	}).(pulumi.StringPtrOutput)
}

type MfaOktaPassword struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType *string `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll *string `pulumi:"enroll"`
}

// MfaOktaPasswordInput is an input type that accepts MfaOktaPasswordArgs and MfaOktaPasswordOutput values.
// You can construct a concrete instance of `MfaOktaPasswordInput` via:
//
//          MfaOktaPasswordArgs{...}
type MfaOktaPasswordInput interface {
	pulumi.Input

	ToMfaOktaPasswordOutput() MfaOktaPasswordOutput
	ToMfaOktaPasswordOutputWithContext(context.Context) MfaOktaPasswordOutput
}

type MfaOktaPasswordArgs struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType pulumi.StringPtrInput `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll pulumi.StringPtrInput `pulumi:"enroll"`
}

func (MfaOktaPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaOktaPassword)(nil)).Elem()
}

func (i MfaOktaPasswordArgs) ToMfaOktaPasswordOutput() MfaOktaPasswordOutput {
	return i.ToMfaOktaPasswordOutputWithContext(context.Background())
}

func (i MfaOktaPasswordArgs) ToMfaOktaPasswordOutputWithContext(ctx context.Context) MfaOktaPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaPasswordOutput)
}

func (i MfaOktaPasswordArgs) ToMfaOktaPasswordPtrOutput() MfaOktaPasswordPtrOutput {
	return i.ToMfaOktaPasswordPtrOutputWithContext(context.Background())
}

func (i MfaOktaPasswordArgs) ToMfaOktaPasswordPtrOutputWithContext(ctx context.Context) MfaOktaPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaPasswordOutput).ToMfaOktaPasswordPtrOutputWithContext(ctx)
}

// MfaOktaPasswordPtrInput is an input type that accepts MfaOktaPasswordArgs, MfaOktaPasswordPtr and MfaOktaPasswordPtrOutput values.
// You can construct a concrete instance of `MfaOktaPasswordPtrInput` via:
//
//          MfaOktaPasswordArgs{...}
//
//  or:
//
//          nil
type MfaOktaPasswordPtrInput interface {
	pulumi.Input

	ToMfaOktaPasswordPtrOutput() MfaOktaPasswordPtrOutput
	ToMfaOktaPasswordPtrOutputWithContext(context.Context) MfaOktaPasswordPtrOutput
}

type mfaOktaPasswordPtrType MfaOktaPasswordArgs

func MfaOktaPasswordPtr(v *MfaOktaPasswordArgs) MfaOktaPasswordPtrInput {
	return (*mfaOktaPasswordPtrType)(v)
}

func (*mfaOktaPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaOktaPassword)(nil)).Elem()
}

func (i *mfaOktaPasswordPtrType) ToMfaOktaPasswordPtrOutput() MfaOktaPasswordPtrOutput {
	return i.ToMfaOktaPasswordPtrOutputWithContext(context.Background())
}

func (i *mfaOktaPasswordPtrType) ToMfaOktaPasswordPtrOutputWithContext(ctx context.Context) MfaOktaPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaPasswordPtrOutput)
}

type MfaOktaPasswordOutput struct{ *pulumi.OutputState }

func (MfaOktaPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaOktaPassword)(nil)).Elem()
}

func (o MfaOktaPasswordOutput) ToMfaOktaPasswordOutput() MfaOktaPasswordOutput {
	return o
}

func (o MfaOktaPasswordOutput) ToMfaOktaPasswordOutputWithContext(ctx context.Context) MfaOktaPasswordOutput {
	return o
}

func (o MfaOktaPasswordOutput) ToMfaOktaPasswordPtrOutput() MfaOktaPasswordPtrOutput {
	return o.ToMfaOktaPasswordPtrOutputWithContext(context.Background())
}

func (o MfaOktaPasswordOutput) ToMfaOktaPasswordPtrOutputWithContext(ctx context.Context) MfaOktaPasswordPtrOutput {
	return o.ApplyT(func(v MfaOktaPassword) *MfaOktaPassword {
		return &v
	}).(MfaOktaPasswordPtrOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaOktaPasswordOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaOktaPassword) *string { return v.ConsentType }).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaOktaPasswordOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaOktaPassword) *string { return v.Enroll }).(pulumi.StringPtrOutput)
}

type MfaOktaPasswordPtrOutput struct{ *pulumi.OutputState }

func (MfaOktaPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaOktaPassword)(nil)).Elem()
}

func (o MfaOktaPasswordPtrOutput) ToMfaOktaPasswordPtrOutput() MfaOktaPasswordPtrOutput {
	return o
}

func (o MfaOktaPasswordPtrOutput) ToMfaOktaPasswordPtrOutputWithContext(ctx context.Context) MfaOktaPasswordPtrOutput {
	return o
}

func (o MfaOktaPasswordPtrOutput) Elem() MfaOktaPasswordOutput {
	return o.ApplyT(func(v *MfaOktaPassword) MfaOktaPassword { return *v }).(MfaOktaPasswordOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaOktaPasswordPtrOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaOktaPassword) *string {
		if v == nil {
			return nil
		}
		return v.ConsentType
	}).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaOktaPasswordPtrOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaOktaPassword) *string {
		if v == nil {
			return nil
		}
		return v.Enroll
	}).(pulumi.StringPtrOutput)
}

type MfaOktaPush struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType *string `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll *string `pulumi:"enroll"`
}

// MfaOktaPushInput is an input type that accepts MfaOktaPushArgs and MfaOktaPushOutput values.
// You can construct a concrete instance of `MfaOktaPushInput` via:
//
//          MfaOktaPushArgs{...}
type MfaOktaPushInput interface {
	pulumi.Input

	ToMfaOktaPushOutput() MfaOktaPushOutput
	ToMfaOktaPushOutputWithContext(context.Context) MfaOktaPushOutput
}

type MfaOktaPushArgs struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType pulumi.StringPtrInput `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll pulumi.StringPtrInput `pulumi:"enroll"`
}

func (MfaOktaPushArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaOktaPush)(nil)).Elem()
}

func (i MfaOktaPushArgs) ToMfaOktaPushOutput() MfaOktaPushOutput {
	return i.ToMfaOktaPushOutputWithContext(context.Background())
}

func (i MfaOktaPushArgs) ToMfaOktaPushOutputWithContext(ctx context.Context) MfaOktaPushOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaPushOutput)
}

func (i MfaOktaPushArgs) ToMfaOktaPushPtrOutput() MfaOktaPushPtrOutput {
	return i.ToMfaOktaPushPtrOutputWithContext(context.Background())
}

func (i MfaOktaPushArgs) ToMfaOktaPushPtrOutputWithContext(ctx context.Context) MfaOktaPushPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaPushOutput).ToMfaOktaPushPtrOutputWithContext(ctx)
}

// MfaOktaPushPtrInput is an input type that accepts MfaOktaPushArgs, MfaOktaPushPtr and MfaOktaPushPtrOutput values.
// You can construct a concrete instance of `MfaOktaPushPtrInput` via:
//
//          MfaOktaPushArgs{...}
//
//  or:
//
//          nil
type MfaOktaPushPtrInput interface {
	pulumi.Input

	ToMfaOktaPushPtrOutput() MfaOktaPushPtrOutput
	ToMfaOktaPushPtrOutputWithContext(context.Context) MfaOktaPushPtrOutput
}

type mfaOktaPushPtrType MfaOktaPushArgs

func MfaOktaPushPtr(v *MfaOktaPushArgs) MfaOktaPushPtrInput {
	return (*mfaOktaPushPtrType)(v)
}

func (*mfaOktaPushPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaOktaPush)(nil)).Elem()
}

func (i *mfaOktaPushPtrType) ToMfaOktaPushPtrOutput() MfaOktaPushPtrOutput {
	return i.ToMfaOktaPushPtrOutputWithContext(context.Background())
}

func (i *mfaOktaPushPtrType) ToMfaOktaPushPtrOutputWithContext(ctx context.Context) MfaOktaPushPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaPushPtrOutput)
}

type MfaOktaPushOutput struct{ *pulumi.OutputState }

func (MfaOktaPushOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaOktaPush)(nil)).Elem()
}

func (o MfaOktaPushOutput) ToMfaOktaPushOutput() MfaOktaPushOutput {
	return o
}

func (o MfaOktaPushOutput) ToMfaOktaPushOutputWithContext(ctx context.Context) MfaOktaPushOutput {
	return o
}

func (o MfaOktaPushOutput) ToMfaOktaPushPtrOutput() MfaOktaPushPtrOutput {
	return o.ToMfaOktaPushPtrOutputWithContext(context.Background())
}

func (o MfaOktaPushOutput) ToMfaOktaPushPtrOutputWithContext(ctx context.Context) MfaOktaPushPtrOutput {
	return o.ApplyT(func(v MfaOktaPush) *MfaOktaPush {
		return &v
	}).(MfaOktaPushPtrOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaOktaPushOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaOktaPush) *string { return v.ConsentType }).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaOktaPushOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaOktaPush) *string { return v.Enroll }).(pulumi.StringPtrOutput)
}

type MfaOktaPushPtrOutput struct{ *pulumi.OutputState }

func (MfaOktaPushPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaOktaPush)(nil)).Elem()
}

func (o MfaOktaPushPtrOutput) ToMfaOktaPushPtrOutput() MfaOktaPushPtrOutput {
	return o
}

func (o MfaOktaPushPtrOutput) ToMfaOktaPushPtrOutputWithContext(ctx context.Context) MfaOktaPushPtrOutput {
	return o
}

func (o MfaOktaPushPtrOutput) Elem() MfaOktaPushOutput {
	return o.ApplyT(func(v *MfaOktaPush) MfaOktaPush { return *v }).(MfaOktaPushOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaOktaPushPtrOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaOktaPush) *string {
		if v == nil {
			return nil
		}
		return v.ConsentType
	}).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaOktaPushPtrOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaOktaPush) *string {
		if v == nil {
			return nil
		}
		return v.Enroll
	}).(pulumi.StringPtrOutput)
}

type MfaOktaQuestion struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType *string `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll *string `pulumi:"enroll"`
}

// MfaOktaQuestionInput is an input type that accepts MfaOktaQuestionArgs and MfaOktaQuestionOutput values.
// You can construct a concrete instance of `MfaOktaQuestionInput` via:
//
//          MfaOktaQuestionArgs{...}
type MfaOktaQuestionInput interface {
	pulumi.Input

	ToMfaOktaQuestionOutput() MfaOktaQuestionOutput
	ToMfaOktaQuestionOutputWithContext(context.Context) MfaOktaQuestionOutput
}

type MfaOktaQuestionArgs struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType pulumi.StringPtrInput `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll pulumi.StringPtrInput `pulumi:"enroll"`
}

func (MfaOktaQuestionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaOktaQuestion)(nil)).Elem()
}

func (i MfaOktaQuestionArgs) ToMfaOktaQuestionOutput() MfaOktaQuestionOutput {
	return i.ToMfaOktaQuestionOutputWithContext(context.Background())
}

func (i MfaOktaQuestionArgs) ToMfaOktaQuestionOutputWithContext(ctx context.Context) MfaOktaQuestionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaQuestionOutput)
}

func (i MfaOktaQuestionArgs) ToMfaOktaQuestionPtrOutput() MfaOktaQuestionPtrOutput {
	return i.ToMfaOktaQuestionPtrOutputWithContext(context.Background())
}

func (i MfaOktaQuestionArgs) ToMfaOktaQuestionPtrOutputWithContext(ctx context.Context) MfaOktaQuestionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaQuestionOutput).ToMfaOktaQuestionPtrOutputWithContext(ctx)
}

// MfaOktaQuestionPtrInput is an input type that accepts MfaOktaQuestionArgs, MfaOktaQuestionPtr and MfaOktaQuestionPtrOutput values.
// You can construct a concrete instance of `MfaOktaQuestionPtrInput` via:
//
//          MfaOktaQuestionArgs{...}
//
//  or:
//
//          nil
type MfaOktaQuestionPtrInput interface {
	pulumi.Input

	ToMfaOktaQuestionPtrOutput() MfaOktaQuestionPtrOutput
	ToMfaOktaQuestionPtrOutputWithContext(context.Context) MfaOktaQuestionPtrOutput
}

type mfaOktaQuestionPtrType MfaOktaQuestionArgs

func MfaOktaQuestionPtr(v *MfaOktaQuestionArgs) MfaOktaQuestionPtrInput {
	return (*mfaOktaQuestionPtrType)(v)
}

func (*mfaOktaQuestionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaOktaQuestion)(nil)).Elem()
}

func (i *mfaOktaQuestionPtrType) ToMfaOktaQuestionPtrOutput() MfaOktaQuestionPtrOutput {
	return i.ToMfaOktaQuestionPtrOutputWithContext(context.Background())
}

func (i *mfaOktaQuestionPtrType) ToMfaOktaQuestionPtrOutputWithContext(ctx context.Context) MfaOktaQuestionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaQuestionPtrOutput)
}

type MfaOktaQuestionOutput struct{ *pulumi.OutputState }

func (MfaOktaQuestionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaOktaQuestion)(nil)).Elem()
}

func (o MfaOktaQuestionOutput) ToMfaOktaQuestionOutput() MfaOktaQuestionOutput {
	return o
}

func (o MfaOktaQuestionOutput) ToMfaOktaQuestionOutputWithContext(ctx context.Context) MfaOktaQuestionOutput {
	return o
}

func (o MfaOktaQuestionOutput) ToMfaOktaQuestionPtrOutput() MfaOktaQuestionPtrOutput {
	return o.ToMfaOktaQuestionPtrOutputWithContext(context.Background())
}

func (o MfaOktaQuestionOutput) ToMfaOktaQuestionPtrOutputWithContext(ctx context.Context) MfaOktaQuestionPtrOutput {
	return o.ApplyT(func(v MfaOktaQuestion) *MfaOktaQuestion {
		return &v
	}).(MfaOktaQuestionPtrOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaOktaQuestionOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaOktaQuestion) *string { return v.ConsentType }).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaOktaQuestionOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaOktaQuestion) *string { return v.Enroll }).(pulumi.StringPtrOutput)
}

type MfaOktaQuestionPtrOutput struct{ *pulumi.OutputState }

func (MfaOktaQuestionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaOktaQuestion)(nil)).Elem()
}

func (o MfaOktaQuestionPtrOutput) ToMfaOktaQuestionPtrOutput() MfaOktaQuestionPtrOutput {
	return o
}

func (o MfaOktaQuestionPtrOutput) ToMfaOktaQuestionPtrOutputWithContext(ctx context.Context) MfaOktaQuestionPtrOutput {
	return o
}

func (o MfaOktaQuestionPtrOutput) Elem() MfaOktaQuestionOutput {
	return o.ApplyT(func(v *MfaOktaQuestion) MfaOktaQuestion { return *v }).(MfaOktaQuestionOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaOktaQuestionPtrOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaOktaQuestion) *string {
		if v == nil {
			return nil
		}
		return v.ConsentType
	}).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaOktaQuestionPtrOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaOktaQuestion) *string {
		if v == nil {
			return nil
		}
		return v.Enroll
	}).(pulumi.StringPtrOutput)
}

type MfaOktaSms struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType *string `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll *string `pulumi:"enroll"`
}

// MfaOktaSmsInput is an input type that accepts MfaOktaSmsArgs and MfaOktaSmsOutput values.
// You can construct a concrete instance of `MfaOktaSmsInput` via:
//
//          MfaOktaSmsArgs{...}
type MfaOktaSmsInput interface {
	pulumi.Input

	ToMfaOktaSmsOutput() MfaOktaSmsOutput
	ToMfaOktaSmsOutputWithContext(context.Context) MfaOktaSmsOutput
}

type MfaOktaSmsArgs struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType pulumi.StringPtrInput `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll pulumi.StringPtrInput `pulumi:"enroll"`
}

func (MfaOktaSmsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaOktaSms)(nil)).Elem()
}

func (i MfaOktaSmsArgs) ToMfaOktaSmsOutput() MfaOktaSmsOutput {
	return i.ToMfaOktaSmsOutputWithContext(context.Background())
}

func (i MfaOktaSmsArgs) ToMfaOktaSmsOutputWithContext(ctx context.Context) MfaOktaSmsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaSmsOutput)
}

func (i MfaOktaSmsArgs) ToMfaOktaSmsPtrOutput() MfaOktaSmsPtrOutput {
	return i.ToMfaOktaSmsPtrOutputWithContext(context.Background())
}

func (i MfaOktaSmsArgs) ToMfaOktaSmsPtrOutputWithContext(ctx context.Context) MfaOktaSmsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaSmsOutput).ToMfaOktaSmsPtrOutputWithContext(ctx)
}

// MfaOktaSmsPtrInput is an input type that accepts MfaOktaSmsArgs, MfaOktaSmsPtr and MfaOktaSmsPtrOutput values.
// You can construct a concrete instance of `MfaOktaSmsPtrInput` via:
//
//          MfaOktaSmsArgs{...}
//
//  or:
//
//          nil
type MfaOktaSmsPtrInput interface {
	pulumi.Input

	ToMfaOktaSmsPtrOutput() MfaOktaSmsPtrOutput
	ToMfaOktaSmsPtrOutputWithContext(context.Context) MfaOktaSmsPtrOutput
}

type mfaOktaSmsPtrType MfaOktaSmsArgs

func MfaOktaSmsPtr(v *MfaOktaSmsArgs) MfaOktaSmsPtrInput {
	return (*mfaOktaSmsPtrType)(v)
}

func (*mfaOktaSmsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaOktaSms)(nil)).Elem()
}

func (i *mfaOktaSmsPtrType) ToMfaOktaSmsPtrOutput() MfaOktaSmsPtrOutput {
	return i.ToMfaOktaSmsPtrOutputWithContext(context.Background())
}

func (i *mfaOktaSmsPtrType) ToMfaOktaSmsPtrOutputWithContext(ctx context.Context) MfaOktaSmsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaOktaSmsPtrOutput)
}

type MfaOktaSmsOutput struct{ *pulumi.OutputState }

func (MfaOktaSmsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaOktaSms)(nil)).Elem()
}

func (o MfaOktaSmsOutput) ToMfaOktaSmsOutput() MfaOktaSmsOutput {
	return o
}

func (o MfaOktaSmsOutput) ToMfaOktaSmsOutputWithContext(ctx context.Context) MfaOktaSmsOutput {
	return o
}

func (o MfaOktaSmsOutput) ToMfaOktaSmsPtrOutput() MfaOktaSmsPtrOutput {
	return o.ToMfaOktaSmsPtrOutputWithContext(context.Background())
}

func (o MfaOktaSmsOutput) ToMfaOktaSmsPtrOutputWithContext(ctx context.Context) MfaOktaSmsPtrOutput {
	return o.ApplyT(func(v MfaOktaSms) *MfaOktaSms {
		return &v
	}).(MfaOktaSmsPtrOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaOktaSmsOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaOktaSms) *string { return v.ConsentType }).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaOktaSmsOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaOktaSms) *string { return v.Enroll }).(pulumi.StringPtrOutput)
}

type MfaOktaSmsPtrOutput struct{ *pulumi.OutputState }

func (MfaOktaSmsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaOktaSms)(nil)).Elem()
}

func (o MfaOktaSmsPtrOutput) ToMfaOktaSmsPtrOutput() MfaOktaSmsPtrOutput {
	return o
}

func (o MfaOktaSmsPtrOutput) ToMfaOktaSmsPtrOutputWithContext(ctx context.Context) MfaOktaSmsPtrOutput {
	return o
}

func (o MfaOktaSmsPtrOutput) Elem() MfaOktaSmsOutput {
	return o.ApplyT(func(v *MfaOktaSms) MfaOktaSms { return *v }).(MfaOktaSmsOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaOktaSmsPtrOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaOktaSms) *string {
		if v == nil {
			return nil
		}
		return v.ConsentType
	}).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaOktaSmsPtrOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaOktaSms) *string {
		if v == nil {
			return nil
		}
		return v.Enroll
	}).(pulumi.StringPtrOutput)
}

type MfaRsaToken struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType *string `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll *string `pulumi:"enroll"`
}

// MfaRsaTokenInput is an input type that accepts MfaRsaTokenArgs and MfaRsaTokenOutput values.
// You can construct a concrete instance of `MfaRsaTokenInput` via:
//
//          MfaRsaTokenArgs{...}
type MfaRsaTokenInput interface {
	pulumi.Input

	ToMfaRsaTokenOutput() MfaRsaTokenOutput
	ToMfaRsaTokenOutputWithContext(context.Context) MfaRsaTokenOutput
}

type MfaRsaTokenArgs struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType pulumi.StringPtrInput `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll pulumi.StringPtrInput `pulumi:"enroll"`
}

func (MfaRsaTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaRsaToken)(nil)).Elem()
}

func (i MfaRsaTokenArgs) ToMfaRsaTokenOutput() MfaRsaTokenOutput {
	return i.ToMfaRsaTokenOutputWithContext(context.Background())
}

func (i MfaRsaTokenArgs) ToMfaRsaTokenOutputWithContext(ctx context.Context) MfaRsaTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaRsaTokenOutput)
}

func (i MfaRsaTokenArgs) ToMfaRsaTokenPtrOutput() MfaRsaTokenPtrOutput {
	return i.ToMfaRsaTokenPtrOutputWithContext(context.Background())
}

func (i MfaRsaTokenArgs) ToMfaRsaTokenPtrOutputWithContext(ctx context.Context) MfaRsaTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaRsaTokenOutput).ToMfaRsaTokenPtrOutputWithContext(ctx)
}

// MfaRsaTokenPtrInput is an input type that accepts MfaRsaTokenArgs, MfaRsaTokenPtr and MfaRsaTokenPtrOutput values.
// You can construct a concrete instance of `MfaRsaTokenPtrInput` via:
//
//          MfaRsaTokenArgs{...}
//
//  or:
//
//          nil
type MfaRsaTokenPtrInput interface {
	pulumi.Input

	ToMfaRsaTokenPtrOutput() MfaRsaTokenPtrOutput
	ToMfaRsaTokenPtrOutputWithContext(context.Context) MfaRsaTokenPtrOutput
}

type mfaRsaTokenPtrType MfaRsaTokenArgs

func MfaRsaTokenPtr(v *MfaRsaTokenArgs) MfaRsaTokenPtrInput {
	return (*mfaRsaTokenPtrType)(v)
}

func (*mfaRsaTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaRsaToken)(nil)).Elem()
}

func (i *mfaRsaTokenPtrType) ToMfaRsaTokenPtrOutput() MfaRsaTokenPtrOutput {
	return i.ToMfaRsaTokenPtrOutputWithContext(context.Background())
}

func (i *mfaRsaTokenPtrType) ToMfaRsaTokenPtrOutputWithContext(ctx context.Context) MfaRsaTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaRsaTokenPtrOutput)
}

type MfaRsaTokenOutput struct{ *pulumi.OutputState }

func (MfaRsaTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaRsaToken)(nil)).Elem()
}

func (o MfaRsaTokenOutput) ToMfaRsaTokenOutput() MfaRsaTokenOutput {
	return o
}

func (o MfaRsaTokenOutput) ToMfaRsaTokenOutputWithContext(ctx context.Context) MfaRsaTokenOutput {
	return o
}

func (o MfaRsaTokenOutput) ToMfaRsaTokenPtrOutput() MfaRsaTokenPtrOutput {
	return o.ToMfaRsaTokenPtrOutputWithContext(context.Background())
}

func (o MfaRsaTokenOutput) ToMfaRsaTokenPtrOutputWithContext(ctx context.Context) MfaRsaTokenPtrOutput {
	return o.ApplyT(func(v MfaRsaToken) *MfaRsaToken {
		return &v
	}).(MfaRsaTokenPtrOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaRsaTokenOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaRsaToken) *string { return v.ConsentType }).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaRsaTokenOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaRsaToken) *string { return v.Enroll }).(pulumi.StringPtrOutput)
}

type MfaRsaTokenPtrOutput struct{ *pulumi.OutputState }

func (MfaRsaTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaRsaToken)(nil)).Elem()
}

func (o MfaRsaTokenPtrOutput) ToMfaRsaTokenPtrOutput() MfaRsaTokenPtrOutput {
	return o
}

func (o MfaRsaTokenPtrOutput) ToMfaRsaTokenPtrOutputWithContext(ctx context.Context) MfaRsaTokenPtrOutput {
	return o
}

func (o MfaRsaTokenPtrOutput) Elem() MfaRsaTokenOutput {
	return o.ApplyT(func(v *MfaRsaToken) MfaRsaToken { return *v }).(MfaRsaTokenOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaRsaTokenPtrOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaRsaToken) *string {
		if v == nil {
			return nil
		}
		return v.ConsentType
	}).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaRsaTokenPtrOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaRsaToken) *string {
		if v == nil {
			return nil
		}
		return v.Enroll
	}).(pulumi.StringPtrOutput)
}

type MfaSymantecVip struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType *string `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll *string `pulumi:"enroll"`
}

// MfaSymantecVipInput is an input type that accepts MfaSymantecVipArgs and MfaSymantecVipOutput values.
// You can construct a concrete instance of `MfaSymantecVipInput` via:
//
//          MfaSymantecVipArgs{...}
type MfaSymantecVipInput interface {
	pulumi.Input

	ToMfaSymantecVipOutput() MfaSymantecVipOutput
	ToMfaSymantecVipOutputWithContext(context.Context) MfaSymantecVipOutput
}

type MfaSymantecVipArgs struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType pulumi.StringPtrInput `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll pulumi.StringPtrInput `pulumi:"enroll"`
}

func (MfaSymantecVipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaSymantecVip)(nil)).Elem()
}

func (i MfaSymantecVipArgs) ToMfaSymantecVipOutput() MfaSymantecVipOutput {
	return i.ToMfaSymantecVipOutputWithContext(context.Background())
}

func (i MfaSymantecVipArgs) ToMfaSymantecVipOutputWithContext(ctx context.Context) MfaSymantecVipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaSymantecVipOutput)
}

func (i MfaSymantecVipArgs) ToMfaSymantecVipPtrOutput() MfaSymantecVipPtrOutput {
	return i.ToMfaSymantecVipPtrOutputWithContext(context.Background())
}

func (i MfaSymantecVipArgs) ToMfaSymantecVipPtrOutputWithContext(ctx context.Context) MfaSymantecVipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaSymantecVipOutput).ToMfaSymantecVipPtrOutputWithContext(ctx)
}

// MfaSymantecVipPtrInput is an input type that accepts MfaSymantecVipArgs, MfaSymantecVipPtr and MfaSymantecVipPtrOutput values.
// You can construct a concrete instance of `MfaSymantecVipPtrInput` via:
//
//          MfaSymantecVipArgs{...}
//
//  or:
//
//          nil
type MfaSymantecVipPtrInput interface {
	pulumi.Input

	ToMfaSymantecVipPtrOutput() MfaSymantecVipPtrOutput
	ToMfaSymantecVipPtrOutputWithContext(context.Context) MfaSymantecVipPtrOutput
}

type mfaSymantecVipPtrType MfaSymantecVipArgs

func MfaSymantecVipPtr(v *MfaSymantecVipArgs) MfaSymantecVipPtrInput {
	return (*mfaSymantecVipPtrType)(v)
}

func (*mfaSymantecVipPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaSymantecVip)(nil)).Elem()
}

func (i *mfaSymantecVipPtrType) ToMfaSymantecVipPtrOutput() MfaSymantecVipPtrOutput {
	return i.ToMfaSymantecVipPtrOutputWithContext(context.Background())
}

func (i *mfaSymantecVipPtrType) ToMfaSymantecVipPtrOutputWithContext(ctx context.Context) MfaSymantecVipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaSymantecVipPtrOutput)
}

type MfaSymantecVipOutput struct{ *pulumi.OutputState }

func (MfaSymantecVipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaSymantecVip)(nil)).Elem()
}

func (o MfaSymantecVipOutput) ToMfaSymantecVipOutput() MfaSymantecVipOutput {
	return o
}

func (o MfaSymantecVipOutput) ToMfaSymantecVipOutputWithContext(ctx context.Context) MfaSymantecVipOutput {
	return o
}

func (o MfaSymantecVipOutput) ToMfaSymantecVipPtrOutput() MfaSymantecVipPtrOutput {
	return o.ToMfaSymantecVipPtrOutputWithContext(context.Background())
}

func (o MfaSymantecVipOutput) ToMfaSymantecVipPtrOutputWithContext(ctx context.Context) MfaSymantecVipPtrOutput {
	return o.ApplyT(func(v MfaSymantecVip) *MfaSymantecVip {
		return &v
	}).(MfaSymantecVipPtrOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaSymantecVipOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaSymantecVip) *string { return v.ConsentType }).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaSymantecVipOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaSymantecVip) *string { return v.Enroll }).(pulumi.StringPtrOutput)
}

type MfaSymantecVipPtrOutput struct{ *pulumi.OutputState }

func (MfaSymantecVipPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaSymantecVip)(nil)).Elem()
}

func (o MfaSymantecVipPtrOutput) ToMfaSymantecVipPtrOutput() MfaSymantecVipPtrOutput {
	return o
}

func (o MfaSymantecVipPtrOutput) ToMfaSymantecVipPtrOutputWithContext(ctx context.Context) MfaSymantecVipPtrOutput {
	return o
}

func (o MfaSymantecVipPtrOutput) Elem() MfaSymantecVipOutput {
	return o.ApplyT(func(v *MfaSymantecVip) MfaSymantecVip { return *v }).(MfaSymantecVipOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaSymantecVipPtrOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaSymantecVip) *string {
		if v == nil {
			return nil
		}
		return v.ConsentType
	}).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaSymantecVipPtrOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaSymantecVip) *string {
		if v == nil {
			return nil
		}
		return v.Enroll
	}).(pulumi.StringPtrOutput)
}

type MfaYubikeyToken struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType *string `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll *string `pulumi:"enroll"`
}

// MfaYubikeyTokenInput is an input type that accepts MfaYubikeyTokenArgs and MfaYubikeyTokenOutput values.
// You can construct a concrete instance of `MfaYubikeyTokenInput` via:
//
//          MfaYubikeyTokenArgs{...}
type MfaYubikeyTokenInput interface {
	pulumi.Input

	ToMfaYubikeyTokenOutput() MfaYubikeyTokenOutput
	ToMfaYubikeyTokenOutputWithContext(context.Context) MfaYubikeyTokenOutput
}

type MfaYubikeyTokenArgs struct {
	// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
	ConsentType pulumi.StringPtrInput `pulumi:"consentType"`
	// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
	Enroll pulumi.StringPtrInput `pulumi:"enroll"`
}

func (MfaYubikeyTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaYubikeyToken)(nil)).Elem()
}

func (i MfaYubikeyTokenArgs) ToMfaYubikeyTokenOutput() MfaYubikeyTokenOutput {
	return i.ToMfaYubikeyTokenOutputWithContext(context.Background())
}

func (i MfaYubikeyTokenArgs) ToMfaYubikeyTokenOutputWithContext(ctx context.Context) MfaYubikeyTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaYubikeyTokenOutput)
}

func (i MfaYubikeyTokenArgs) ToMfaYubikeyTokenPtrOutput() MfaYubikeyTokenPtrOutput {
	return i.ToMfaYubikeyTokenPtrOutputWithContext(context.Background())
}

func (i MfaYubikeyTokenArgs) ToMfaYubikeyTokenPtrOutputWithContext(ctx context.Context) MfaYubikeyTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaYubikeyTokenOutput).ToMfaYubikeyTokenPtrOutputWithContext(ctx)
}

// MfaYubikeyTokenPtrInput is an input type that accepts MfaYubikeyTokenArgs, MfaYubikeyTokenPtr and MfaYubikeyTokenPtrOutput values.
// You can construct a concrete instance of `MfaYubikeyTokenPtrInput` via:
//
//          MfaYubikeyTokenArgs{...}
//
//  or:
//
//          nil
type MfaYubikeyTokenPtrInput interface {
	pulumi.Input

	ToMfaYubikeyTokenPtrOutput() MfaYubikeyTokenPtrOutput
	ToMfaYubikeyTokenPtrOutputWithContext(context.Context) MfaYubikeyTokenPtrOutput
}

type mfaYubikeyTokenPtrType MfaYubikeyTokenArgs

func MfaYubikeyTokenPtr(v *MfaYubikeyTokenArgs) MfaYubikeyTokenPtrInput {
	return (*mfaYubikeyTokenPtrType)(v)
}

func (*mfaYubikeyTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaYubikeyToken)(nil)).Elem()
}

func (i *mfaYubikeyTokenPtrType) ToMfaYubikeyTokenPtrOutput() MfaYubikeyTokenPtrOutput {
	return i.ToMfaYubikeyTokenPtrOutputWithContext(context.Background())
}

func (i *mfaYubikeyTokenPtrType) ToMfaYubikeyTokenPtrOutputWithContext(ctx context.Context) MfaYubikeyTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaYubikeyTokenPtrOutput)
}

type MfaYubikeyTokenOutput struct{ *pulumi.OutputState }

func (MfaYubikeyTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaYubikeyToken)(nil)).Elem()
}

func (o MfaYubikeyTokenOutput) ToMfaYubikeyTokenOutput() MfaYubikeyTokenOutput {
	return o
}

func (o MfaYubikeyTokenOutput) ToMfaYubikeyTokenOutputWithContext(ctx context.Context) MfaYubikeyTokenOutput {
	return o
}

func (o MfaYubikeyTokenOutput) ToMfaYubikeyTokenPtrOutput() MfaYubikeyTokenPtrOutput {
	return o.ToMfaYubikeyTokenPtrOutputWithContext(context.Background())
}

func (o MfaYubikeyTokenOutput) ToMfaYubikeyTokenPtrOutputWithContext(ctx context.Context) MfaYubikeyTokenPtrOutput {
	return o.ApplyT(func(v MfaYubikeyToken) *MfaYubikeyToken {
		return &v
	}).(MfaYubikeyTokenPtrOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaYubikeyTokenOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaYubikeyToken) *string { return v.ConsentType }).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaYubikeyTokenOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaYubikeyToken) *string { return v.Enroll }).(pulumi.StringPtrOutput)
}

type MfaYubikeyTokenPtrOutput struct{ *pulumi.OutputState }

func (MfaYubikeyTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MfaYubikeyToken)(nil)).Elem()
}

func (o MfaYubikeyTokenPtrOutput) ToMfaYubikeyTokenPtrOutput() MfaYubikeyTokenPtrOutput {
	return o
}

func (o MfaYubikeyTokenPtrOutput) ToMfaYubikeyTokenPtrOutputWithContext(ctx context.Context) MfaYubikeyTokenPtrOutput {
	return o
}

func (o MfaYubikeyTokenPtrOutput) Elem() MfaYubikeyTokenOutput {
	return o.ApplyT(func(v *MfaYubikeyToken) MfaYubikeyToken { return *v }).(MfaYubikeyTokenOutput)
}

// User consent type required before enrolling in the factor: `"NONE"` or `"TERMS_OF_SERVICE"`. By default it is `"NONE"`.
func (o MfaYubikeyTokenPtrOutput) ConsentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaYubikeyToken) *string {
		if v == nil {
			return nil
		}
		return v.ConsentType
	}).(pulumi.StringPtrOutput)
}

// Requirements for user initiated enrollment. Can be `"NOT_ALLOWED"`, `"OPTIONAL"`, or `"REQUIRED"`. By default it is `"OPTIONAL"`.
func (o MfaYubikeyTokenPtrOutput) Enroll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MfaYubikeyToken) *string {
		if v == nil {
			return nil
		}
		return v.Enroll
	}).(pulumi.StringPtrOutput)
}

type RuleIdpDiscoveryAppExclude struct {
	// ID of the Rule.
	Id *string `pulumi:"id"`
	// Policy Rule Name.
	Name *string `pulumi:"name"`
	Type *string `pulumi:"type"`
}

// RuleIdpDiscoveryAppExcludeInput is an input type that accepts RuleIdpDiscoveryAppExcludeArgs and RuleIdpDiscoveryAppExcludeOutput values.
// You can construct a concrete instance of `RuleIdpDiscoveryAppExcludeInput` via:
//
//          RuleIdpDiscoveryAppExcludeArgs{...}
type RuleIdpDiscoveryAppExcludeInput interface {
	pulumi.Input

	ToRuleIdpDiscoveryAppExcludeOutput() RuleIdpDiscoveryAppExcludeOutput
	ToRuleIdpDiscoveryAppExcludeOutputWithContext(context.Context) RuleIdpDiscoveryAppExcludeOutput
}

type RuleIdpDiscoveryAppExcludeArgs struct {
	// ID of the Rule.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Policy Rule Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (RuleIdpDiscoveryAppExcludeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleIdpDiscoveryAppExclude)(nil)).Elem()
}

func (i RuleIdpDiscoveryAppExcludeArgs) ToRuleIdpDiscoveryAppExcludeOutput() RuleIdpDiscoveryAppExcludeOutput {
	return i.ToRuleIdpDiscoveryAppExcludeOutputWithContext(context.Background())
}

func (i RuleIdpDiscoveryAppExcludeArgs) ToRuleIdpDiscoveryAppExcludeOutputWithContext(ctx context.Context) RuleIdpDiscoveryAppExcludeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleIdpDiscoveryAppExcludeOutput)
}

// RuleIdpDiscoveryAppExcludeArrayInput is an input type that accepts RuleIdpDiscoveryAppExcludeArray and RuleIdpDiscoveryAppExcludeArrayOutput values.
// You can construct a concrete instance of `RuleIdpDiscoveryAppExcludeArrayInput` via:
//
//          RuleIdpDiscoveryAppExcludeArray{ RuleIdpDiscoveryAppExcludeArgs{...} }
type RuleIdpDiscoveryAppExcludeArrayInput interface {
	pulumi.Input

	ToRuleIdpDiscoveryAppExcludeArrayOutput() RuleIdpDiscoveryAppExcludeArrayOutput
	ToRuleIdpDiscoveryAppExcludeArrayOutputWithContext(context.Context) RuleIdpDiscoveryAppExcludeArrayOutput
}

type RuleIdpDiscoveryAppExcludeArray []RuleIdpDiscoveryAppExcludeInput

func (RuleIdpDiscoveryAppExcludeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleIdpDiscoveryAppExclude)(nil)).Elem()
}

func (i RuleIdpDiscoveryAppExcludeArray) ToRuleIdpDiscoveryAppExcludeArrayOutput() RuleIdpDiscoveryAppExcludeArrayOutput {
	return i.ToRuleIdpDiscoveryAppExcludeArrayOutputWithContext(context.Background())
}

func (i RuleIdpDiscoveryAppExcludeArray) ToRuleIdpDiscoveryAppExcludeArrayOutputWithContext(ctx context.Context) RuleIdpDiscoveryAppExcludeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleIdpDiscoveryAppExcludeArrayOutput)
}

type RuleIdpDiscoveryAppExcludeOutput struct{ *pulumi.OutputState }

func (RuleIdpDiscoveryAppExcludeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleIdpDiscoveryAppExclude)(nil)).Elem()
}

func (o RuleIdpDiscoveryAppExcludeOutput) ToRuleIdpDiscoveryAppExcludeOutput() RuleIdpDiscoveryAppExcludeOutput {
	return o
}

func (o RuleIdpDiscoveryAppExcludeOutput) ToRuleIdpDiscoveryAppExcludeOutputWithContext(ctx context.Context) RuleIdpDiscoveryAppExcludeOutput {
	return o
}

// ID of the Rule.
func (o RuleIdpDiscoveryAppExcludeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleIdpDiscoveryAppExclude) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Policy Rule Name.
func (o RuleIdpDiscoveryAppExcludeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleIdpDiscoveryAppExclude) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RuleIdpDiscoveryAppExcludeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleIdpDiscoveryAppExclude) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type RuleIdpDiscoveryAppExcludeArrayOutput struct{ *pulumi.OutputState }

func (RuleIdpDiscoveryAppExcludeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleIdpDiscoveryAppExclude)(nil)).Elem()
}

func (o RuleIdpDiscoveryAppExcludeArrayOutput) ToRuleIdpDiscoveryAppExcludeArrayOutput() RuleIdpDiscoveryAppExcludeArrayOutput {
	return o
}

func (o RuleIdpDiscoveryAppExcludeArrayOutput) ToRuleIdpDiscoveryAppExcludeArrayOutputWithContext(ctx context.Context) RuleIdpDiscoveryAppExcludeArrayOutput {
	return o
}

func (o RuleIdpDiscoveryAppExcludeArrayOutput) Index(i pulumi.IntInput) RuleIdpDiscoveryAppExcludeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleIdpDiscoveryAppExclude {
		return vs[0].([]RuleIdpDiscoveryAppExclude)[vs[1].(int)]
	}).(RuleIdpDiscoveryAppExcludeOutput)
}

type RuleIdpDiscoveryAppInclude struct {
	// ID of the Rule.
	Id *string `pulumi:"id"`
	// Policy Rule Name.
	Name *string `pulumi:"name"`
	Type *string `pulumi:"type"`
}

// RuleIdpDiscoveryAppIncludeInput is an input type that accepts RuleIdpDiscoveryAppIncludeArgs and RuleIdpDiscoveryAppIncludeOutput values.
// You can construct a concrete instance of `RuleIdpDiscoveryAppIncludeInput` via:
//
//          RuleIdpDiscoveryAppIncludeArgs{...}
type RuleIdpDiscoveryAppIncludeInput interface {
	pulumi.Input

	ToRuleIdpDiscoveryAppIncludeOutput() RuleIdpDiscoveryAppIncludeOutput
	ToRuleIdpDiscoveryAppIncludeOutputWithContext(context.Context) RuleIdpDiscoveryAppIncludeOutput
}

type RuleIdpDiscoveryAppIncludeArgs struct {
	// ID of the Rule.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Policy Rule Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (RuleIdpDiscoveryAppIncludeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleIdpDiscoveryAppInclude)(nil)).Elem()
}

func (i RuleIdpDiscoveryAppIncludeArgs) ToRuleIdpDiscoveryAppIncludeOutput() RuleIdpDiscoveryAppIncludeOutput {
	return i.ToRuleIdpDiscoveryAppIncludeOutputWithContext(context.Background())
}

func (i RuleIdpDiscoveryAppIncludeArgs) ToRuleIdpDiscoveryAppIncludeOutputWithContext(ctx context.Context) RuleIdpDiscoveryAppIncludeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleIdpDiscoveryAppIncludeOutput)
}

// RuleIdpDiscoveryAppIncludeArrayInput is an input type that accepts RuleIdpDiscoveryAppIncludeArray and RuleIdpDiscoveryAppIncludeArrayOutput values.
// You can construct a concrete instance of `RuleIdpDiscoveryAppIncludeArrayInput` via:
//
//          RuleIdpDiscoveryAppIncludeArray{ RuleIdpDiscoveryAppIncludeArgs{...} }
type RuleIdpDiscoveryAppIncludeArrayInput interface {
	pulumi.Input

	ToRuleIdpDiscoveryAppIncludeArrayOutput() RuleIdpDiscoveryAppIncludeArrayOutput
	ToRuleIdpDiscoveryAppIncludeArrayOutputWithContext(context.Context) RuleIdpDiscoveryAppIncludeArrayOutput
}

type RuleIdpDiscoveryAppIncludeArray []RuleIdpDiscoveryAppIncludeInput

func (RuleIdpDiscoveryAppIncludeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleIdpDiscoveryAppInclude)(nil)).Elem()
}

func (i RuleIdpDiscoveryAppIncludeArray) ToRuleIdpDiscoveryAppIncludeArrayOutput() RuleIdpDiscoveryAppIncludeArrayOutput {
	return i.ToRuleIdpDiscoveryAppIncludeArrayOutputWithContext(context.Background())
}

func (i RuleIdpDiscoveryAppIncludeArray) ToRuleIdpDiscoveryAppIncludeArrayOutputWithContext(ctx context.Context) RuleIdpDiscoveryAppIncludeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleIdpDiscoveryAppIncludeArrayOutput)
}

type RuleIdpDiscoveryAppIncludeOutput struct{ *pulumi.OutputState }

func (RuleIdpDiscoveryAppIncludeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleIdpDiscoveryAppInclude)(nil)).Elem()
}

func (o RuleIdpDiscoveryAppIncludeOutput) ToRuleIdpDiscoveryAppIncludeOutput() RuleIdpDiscoveryAppIncludeOutput {
	return o
}

func (o RuleIdpDiscoveryAppIncludeOutput) ToRuleIdpDiscoveryAppIncludeOutputWithContext(ctx context.Context) RuleIdpDiscoveryAppIncludeOutput {
	return o
}

// ID of the Rule.
func (o RuleIdpDiscoveryAppIncludeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleIdpDiscoveryAppInclude) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Policy Rule Name.
func (o RuleIdpDiscoveryAppIncludeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleIdpDiscoveryAppInclude) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RuleIdpDiscoveryAppIncludeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleIdpDiscoveryAppInclude) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type RuleIdpDiscoveryAppIncludeArrayOutput struct{ *pulumi.OutputState }

func (RuleIdpDiscoveryAppIncludeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleIdpDiscoveryAppInclude)(nil)).Elem()
}

func (o RuleIdpDiscoveryAppIncludeArrayOutput) ToRuleIdpDiscoveryAppIncludeArrayOutput() RuleIdpDiscoveryAppIncludeArrayOutput {
	return o
}

func (o RuleIdpDiscoveryAppIncludeArrayOutput) ToRuleIdpDiscoveryAppIncludeArrayOutputWithContext(ctx context.Context) RuleIdpDiscoveryAppIncludeArrayOutput {
	return o
}

func (o RuleIdpDiscoveryAppIncludeArrayOutput) Index(i pulumi.IntInput) RuleIdpDiscoveryAppIncludeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleIdpDiscoveryAppInclude {
		return vs[0].([]RuleIdpDiscoveryAppInclude)[vs[1].(int)]
	}).(RuleIdpDiscoveryAppIncludeOutput)
}

type RuleIdpDiscoveryPlatformInclude struct {
	OsExpression *string `pulumi:"osExpression"`
	OsType       *string `pulumi:"osType"`
	Type         *string `pulumi:"type"`
}

// RuleIdpDiscoveryPlatformIncludeInput is an input type that accepts RuleIdpDiscoveryPlatformIncludeArgs and RuleIdpDiscoveryPlatformIncludeOutput values.
// You can construct a concrete instance of `RuleIdpDiscoveryPlatformIncludeInput` via:
//
//          RuleIdpDiscoveryPlatformIncludeArgs{...}
type RuleIdpDiscoveryPlatformIncludeInput interface {
	pulumi.Input

	ToRuleIdpDiscoveryPlatformIncludeOutput() RuleIdpDiscoveryPlatformIncludeOutput
	ToRuleIdpDiscoveryPlatformIncludeOutputWithContext(context.Context) RuleIdpDiscoveryPlatformIncludeOutput
}

type RuleIdpDiscoveryPlatformIncludeArgs struct {
	OsExpression pulumi.StringPtrInput `pulumi:"osExpression"`
	OsType       pulumi.StringPtrInput `pulumi:"osType"`
	Type         pulumi.StringPtrInput `pulumi:"type"`
}

func (RuleIdpDiscoveryPlatformIncludeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleIdpDiscoveryPlatformInclude)(nil)).Elem()
}

func (i RuleIdpDiscoveryPlatformIncludeArgs) ToRuleIdpDiscoveryPlatformIncludeOutput() RuleIdpDiscoveryPlatformIncludeOutput {
	return i.ToRuleIdpDiscoveryPlatformIncludeOutputWithContext(context.Background())
}

func (i RuleIdpDiscoveryPlatformIncludeArgs) ToRuleIdpDiscoveryPlatformIncludeOutputWithContext(ctx context.Context) RuleIdpDiscoveryPlatformIncludeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleIdpDiscoveryPlatformIncludeOutput)
}

// RuleIdpDiscoveryPlatformIncludeArrayInput is an input type that accepts RuleIdpDiscoveryPlatformIncludeArray and RuleIdpDiscoveryPlatformIncludeArrayOutput values.
// You can construct a concrete instance of `RuleIdpDiscoveryPlatformIncludeArrayInput` via:
//
//          RuleIdpDiscoveryPlatformIncludeArray{ RuleIdpDiscoveryPlatformIncludeArgs{...} }
type RuleIdpDiscoveryPlatformIncludeArrayInput interface {
	pulumi.Input

	ToRuleIdpDiscoveryPlatformIncludeArrayOutput() RuleIdpDiscoveryPlatformIncludeArrayOutput
	ToRuleIdpDiscoveryPlatformIncludeArrayOutputWithContext(context.Context) RuleIdpDiscoveryPlatformIncludeArrayOutput
}

type RuleIdpDiscoveryPlatformIncludeArray []RuleIdpDiscoveryPlatformIncludeInput

func (RuleIdpDiscoveryPlatformIncludeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleIdpDiscoveryPlatformInclude)(nil)).Elem()
}

func (i RuleIdpDiscoveryPlatformIncludeArray) ToRuleIdpDiscoveryPlatformIncludeArrayOutput() RuleIdpDiscoveryPlatformIncludeArrayOutput {
	return i.ToRuleIdpDiscoveryPlatformIncludeArrayOutputWithContext(context.Background())
}

func (i RuleIdpDiscoveryPlatformIncludeArray) ToRuleIdpDiscoveryPlatformIncludeArrayOutputWithContext(ctx context.Context) RuleIdpDiscoveryPlatformIncludeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleIdpDiscoveryPlatformIncludeArrayOutput)
}

type RuleIdpDiscoveryPlatformIncludeOutput struct{ *pulumi.OutputState }

func (RuleIdpDiscoveryPlatformIncludeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleIdpDiscoveryPlatformInclude)(nil)).Elem()
}

func (o RuleIdpDiscoveryPlatformIncludeOutput) ToRuleIdpDiscoveryPlatformIncludeOutput() RuleIdpDiscoveryPlatformIncludeOutput {
	return o
}

func (o RuleIdpDiscoveryPlatformIncludeOutput) ToRuleIdpDiscoveryPlatformIncludeOutputWithContext(ctx context.Context) RuleIdpDiscoveryPlatformIncludeOutput {
	return o
}

func (o RuleIdpDiscoveryPlatformIncludeOutput) OsExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleIdpDiscoveryPlatformInclude) *string { return v.OsExpression }).(pulumi.StringPtrOutput)
}

func (o RuleIdpDiscoveryPlatformIncludeOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleIdpDiscoveryPlatformInclude) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

func (o RuleIdpDiscoveryPlatformIncludeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleIdpDiscoveryPlatformInclude) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type RuleIdpDiscoveryPlatformIncludeArrayOutput struct{ *pulumi.OutputState }

func (RuleIdpDiscoveryPlatformIncludeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleIdpDiscoveryPlatformInclude)(nil)).Elem()
}

func (o RuleIdpDiscoveryPlatformIncludeArrayOutput) ToRuleIdpDiscoveryPlatformIncludeArrayOutput() RuleIdpDiscoveryPlatformIncludeArrayOutput {
	return o
}

func (o RuleIdpDiscoveryPlatformIncludeArrayOutput) ToRuleIdpDiscoveryPlatformIncludeArrayOutputWithContext(ctx context.Context) RuleIdpDiscoveryPlatformIncludeArrayOutput {
	return o
}

func (o RuleIdpDiscoveryPlatformIncludeArrayOutput) Index(i pulumi.IntInput) RuleIdpDiscoveryPlatformIncludeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleIdpDiscoveryPlatformInclude {
		return vs[0].([]RuleIdpDiscoveryPlatformInclude)[vs[1].(int)]
	}).(RuleIdpDiscoveryPlatformIncludeOutput)
}

type RuleIdpDiscoveryUserIdentifierPattern struct {
	MatchType *string `pulumi:"matchType"`
	Value     *string `pulumi:"value"`
}

// RuleIdpDiscoveryUserIdentifierPatternInput is an input type that accepts RuleIdpDiscoveryUserIdentifierPatternArgs and RuleIdpDiscoveryUserIdentifierPatternOutput values.
// You can construct a concrete instance of `RuleIdpDiscoveryUserIdentifierPatternInput` via:
//
//          RuleIdpDiscoveryUserIdentifierPatternArgs{...}
type RuleIdpDiscoveryUserIdentifierPatternInput interface {
	pulumi.Input

	ToRuleIdpDiscoveryUserIdentifierPatternOutput() RuleIdpDiscoveryUserIdentifierPatternOutput
	ToRuleIdpDiscoveryUserIdentifierPatternOutputWithContext(context.Context) RuleIdpDiscoveryUserIdentifierPatternOutput
}

type RuleIdpDiscoveryUserIdentifierPatternArgs struct {
	MatchType pulumi.StringPtrInput `pulumi:"matchType"`
	Value     pulumi.StringPtrInput `pulumi:"value"`
}

func (RuleIdpDiscoveryUserIdentifierPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleIdpDiscoveryUserIdentifierPattern)(nil)).Elem()
}

func (i RuleIdpDiscoveryUserIdentifierPatternArgs) ToRuleIdpDiscoveryUserIdentifierPatternOutput() RuleIdpDiscoveryUserIdentifierPatternOutput {
	return i.ToRuleIdpDiscoveryUserIdentifierPatternOutputWithContext(context.Background())
}

func (i RuleIdpDiscoveryUserIdentifierPatternArgs) ToRuleIdpDiscoveryUserIdentifierPatternOutputWithContext(ctx context.Context) RuleIdpDiscoveryUserIdentifierPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleIdpDiscoveryUserIdentifierPatternOutput)
}

// RuleIdpDiscoveryUserIdentifierPatternArrayInput is an input type that accepts RuleIdpDiscoveryUserIdentifierPatternArray and RuleIdpDiscoveryUserIdentifierPatternArrayOutput values.
// You can construct a concrete instance of `RuleIdpDiscoveryUserIdentifierPatternArrayInput` via:
//
//          RuleIdpDiscoveryUserIdentifierPatternArray{ RuleIdpDiscoveryUserIdentifierPatternArgs{...} }
type RuleIdpDiscoveryUserIdentifierPatternArrayInput interface {
	pulumi.Input

	ToRuleIdpDiscoveryUserIdentifierPatternArrayOutput() RuleIdpDiscoveryUserIdentifierPatternArrayOutput
	ToRuleIdpDiscoveryUserIdentifierPatternArrayOutputWithContext(context.Context) RuleIdpDiscoveryUserIdentifierPatternArrayOutput
}

type RuleIdpDiscoveryUserIdentifierPatternArray []RuleIdpDiscoveryUserIdentifierPatternInput

func (RuleIdpDiscoveryUserIdentifierPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleIdpDiscoveryUserIdentifierPattern)(nil)).Elem()
}

func (i RuleIdpDiscoveryUserIdentifierPatternArray) ToRuleIdpDiscoveryUserIdentifierPatternArrayOutput() RuleIdpDiscoveryUserIdentifierPatternArrayOutput {
	return i.ToRuleIdpDiscoveryUserIdentifierPatternArrayOutputWithContext(context.Background())
}

func (i RuleIdpDiscoveryUserIdentifierPatternArray) ToRuleIdpDiscoveryUserIdentifierPatternArrayOutputWithContext(ctx context.Context) RuleIdpDiscoveryUserIdentifierPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleIdpDiscoveryUserIdentifierPatternArrayOutput)
}

type RuleIdpDiscoveryUserIdentifierPatternOutput struct{ *pulumi.OutputState }

func (RuleIdpDiscoveryUserIdentifierPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleIdpDiscoveryUserIdentifierPattern)(nil)).Elem()
}

func (o RuleIdpDiscoveryUserIdentifierPatternOutput) ToRuleIdpDiscoveryUserIdentifierPatternOutput() RuleIdpDiscoveryUserIdentifierPatternOutput {
	return o
}

func (o RuleIdpDiscoveryUserIdentifierPatternOutput) ToRuleIdpDiscoveryUserIdentifierPatternOutputWithContext(ctx context.Context) RuleIdpDiscoveryUserIdentifierPatternOutput {
	return o
}

func (o RuleIdpDiscoveryUserIdentifierPatternOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleIdpDiscoveryUserIdentifierPattern) *string { return v.MatchType }).(pulumi.StringPtrOutput)
}

func (o RuleIdpDiscoveryUserIdentifierPatternOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleIdpDiscoveryUserIdentifierPattern) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RuleIdpDiscoveryUserIdentifierPatternArrayOutput struct{ *pulumi.OutputState }

func (RuleIdpDiscoveryUserIdentifierPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleIdpDiscoveryUserIdentifierPattern)(nil)).Elem()
}

func (o RuleIdpDiscoveryUserIdentifierPatternArrayOutput) ToRuleIdpDiscoveryUserIdentifierPatternArrayOutput() RuleIdpDiscoveryUserIdentifierPatternArrayOutput {
	return o
}

func (o RuleIdpDiscoveryUserIdentifierPatternArrayOutput) ToRuleIdpDiscoveryUserIdentifierPatternArrayOutputWithContext(ctx context.Context) RuleIdpDiscoveryUserIdentifierPatternArrayOutput {
	return o
}

func (o RuleIdpDiscoveryUserIdentifierPatternArrayOutput) Index(i pulumi.IntInput) RuleIdpDiscoveryUserIdentifierPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleIdpDiscoveryUserIdentifierPattern {
		return vs[0].([]RuleIdpDiscoveryUserIdentifierPattern)[vs[1].(int)]
	}).(RuleIdpDiscoveryUserIdentifierPatternOutput)
}

func init() {
	pulumi.RegisterOutputType(MfaDuoOutput{})
	pulumi.RegisterOutputType(MfaDuoPtrOutput{})
	pulumi.RegisterOutputType(MfaFidoU2fOutput{})
	pulumi.RegisterOutputType(MfaFidoU2fPtrOutput{})
	pulumi.RegisterOutputType(MfaFidoWebauthnOutput{})
	pulumi.RegisterOutputType(MfaFidoWebauthnPtrOutput{})
	pulumi.RegisterOutputType(MfaGoogleOtpOutput{})
	pulumi.RegisterOutputType(MfaGoogleOtpPtrOutput{})
	pulumi.RegisterOutputType(MfaOktaCallOutput{})
	pulumi.RegisterOutputType(MfaOktaCallPtrOutput{})
	pulumi.RegisterOutputType(MfaOktaOtpOutput{})
	pulumi.RegisterOutputType(MfaOktaOtpPtrOutput{})
	pulumi.RegisterOutputType(MfaOktaPasswordOutput{})
	pulumi.RegisterOutputType(MfaOktaPasswordPtrOutput{})
	pulumi.RegisterOutputType(MfaOktaPushOutput{})
	pulumi.RegisterOutputType(MfaOktaPushPtrOutput{})
	pulumi.RegisterOutputType(MfaOktaQuestionOutput{})
	pulumi.RegisterOutputType(MfaOktaQuestionPtrOutput{})
	pulumi.RegisterOutputType(MfaOktaSmsOutput{})
	pulumi.RegisterOutputType(MfaOktaSmsPtrOutput{})
	pulumi.RegisterOutputType(MfaRsaTokenOutput{})
	pulumi.RegisterOutputType(MfaRsaTokenPtrOutput{})
	pulumi.RegisterOutputType(MfaSymantecVipOutput{})
	pulumi.RegisterOutputType(MfaSymantecVipPtrOutput{})
	pulumi.RegisterOutputType(MfaYubikeyTokenOutput{})
	pulumi.RegisterOutputType(MfaYubikeyTokenPtrOutput{})
	pulumi.RegisterOutputType(RuleIdpDiscoveryAppExcludeOutput{})
	pulumi.RegisterOutputType(RuleIdpDiscoveryAppExcludeArrayOutput{})
	pulumi.RegisterOutputType(RuleIdpDiscoveryAppIncludeOutput{})
	pulumi.RegisterOutputType(RuleIdpDiscoveryAppIncludeArrayOutput{})
	pulumi.RegisterOutputType(RuleIdpDiscoveryPlatformIncludeOutput{})
	pulumi.RegisterOutputType(RuleIdpDiscoveryPlatformIncludeArrayOutput{})
	pulumi.RegisterOutputType(RuleIdpDiscoveryUserIdentifierPatternOutput{})
	pulumi.RegisterOutputType(RuleIdpDiscoveryUserIdentifierPatternArrayOutput{})
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package policy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeviceAssuranceWindows struct {
	pulumi.CustomResourceState

	// Created by
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// Created date
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`
	// List of disk encryption type, can be ALL_INTERNAL_VOLUMES
	DiskEncryptionTypes pulumi.StringArrayOutput `pulumi:"diskEncryptionTypes"`
	// Last update
	LastUpdate pulumi.StringOutput `pulumi:"lastUpdate"`
	// Last updated by
	LastUpdatedBy pulumi.StringOutput `pulumi:"lastUpdatedBy"`
	// Policy device assurance name
	Name pulumi.StringOutput `pulumi:"name"`
	// The device os minimum version
	OsVersion pulumi.StringPtrOutput `pulumi:"osVersion"`
	// Policy device assurance platform
	Platform pulumi.StringOutput `pulumi:"platform"`
	// List of screenlock type, can be BIOMETRIC or BIOMETRIC, PASSCODE
	ScreenlockTypes pulumi.StringArrayOutput `pulumi:"screenlockTypes"`
	// Indicates if the device constains a secure hardware functionality
	SecureHardwarePresent pulumi.BoolPtrOutput `pulumi:"secureHardwarePresent"`
	// Check to include third party signal provider
	ThirdPartySignalProviders pulumi.BoolPtrOutput `pulumi:"thirdPartySignalProviders"`
	// Third party signal provider minimum browser version
	TpspBrowserVersion pulumi.StringPtrOutput `pulumi:"tpspBrowserVersion"`
	// Third party signal provider builtin dns client enable
	TpspBuiltinDnsClientEnabled pulumi.BoolPtrOutput `pulumi:"tpspBuiltinDnsClientEnabled"`
	// Third party signal provider chrome remote desktop app blocked
	TpspChromeRemoteDesktopAppBlocked pulumi.BoolPtrOutput `pulumi:"tpspChromeRemoteDesktopAppBlocked"`
	// Third party signal provider crowdstrike agent id
	TpspCrowdStrikeAgentId pulumi.StringPtrOutput `pulumi:"tpspCrowdStrikeAgentId"`
	// Third party signal provider crowdstrike user id
	TpspCrowdStrikeCustomerId pulumi.StringPtrOutput `pulumi:"tpspCrowdStrikeCustomerId"`
	// Third party signal provider device enrollment domain
	TpspDeviceEnrollmentDomain pulumi.StringPtrOutput `pulumi:"tpspDeviceEnrollmentDomain"`
	// Third party signal provider disk encrypted
	TpspDiskEncrypted pulumi.BoolPtrOutput `pulumi:"tpspDiskEncrypted"`
	// Third party signal provider key trust level
	TpspKeyTrustLevel pulumi.StringPtrOutput `pulumi:"tpspKeyTrustLevel"`
	// Third party signal provider os firewall
	TpspOsFirewall pulumi.BoolPtrOutput `pulumi:"tpspOsFirewall"`
	// Third party signal provider minimum os version
	TpspOsVersion pulumi.StringPtrOutput `pulumi:"tpspOsVersion"`
	// Third party signal provider password protection warning trigger
	TpspPasswordProctectionWarningTrigger pulumi.StringPtrOutput `pulumi:"tpspPasswordProctectionWarningTrigger"`
	// Third party signal provider realtime url check mode
	TpspRealtimeUrlCheckMode pulumi.BoolPtrOutput `pulumi:"tpspRealtimeUrlCheckMode"`
	// Third party signal provider safe browsing protection level
	TpspSafeBrowsingProtectionLevel pulumi.StringPtrOutput `pulumi:"tpspSafeBrowsingProtectionLevel"`
	// Third party signal provider screen lock secure
	TpspScreenLockSecured pulumi.BoolPtrOutput `pulumi:"tpspScreenLockSecured"`
	// Third party signal provider secure boot enabled
	TpspSecureBootEnabled pulumi.BoolPtrOutput `pulumi:"tpspSecureBootEnabled"`
	// Third party signal provider site isolation enabled
	TpspSiteIsolationEnabled pulumi.BoolPtrOutput `pulumi:"tpspSiteIsolationEnabled"`
	// Third party signal provider third party blocking enabled
	TpspThirdPartyBlockingEnabled pulumi.BoolPtrOutput `pulumi:"tpspThirdPartyBlockingEnabled"`
	// Third party signal provider windows machine domain
	TpspWindowsMachineDomain pulumi.StringPtrOutput `pulumi:"tpspWindowsMachineDomain"`
	// Third party signal provider windows user domain
	TpspWindowsUserDomain pulumi.StringPtrOutput `pulumi:"tpspWindowsUserDomain"`
}

// NewDeviceAssuranceWindows registers a new resource with the given unique name, arguments, and options.
func NewDeviceAssuranceWindows(ctx *pulumi.Context,
	name string, args *DeviceAssuranceWindowsArgs, opts ...pulumi.ResourceOption) (*DeviceAssuranceWindows, error) {
	if args == nil {
		args = &DeviceAssuranceWindowsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DeviceAssuranceWindows
	err := ctx.RegisterResource("okta:policy/deviceAssuranceWindows:DeviceAssuranceWindows", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeviceAssuranceWindows gets an existing DeviceAssuranceWindows resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeviceAssuranceWindows(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeviceAssuranceWindowsState, opts ...pulumi.ResourceOption) (*DeviceAssuranceWindows, error) {
	var resource DeviceAssuranceWindows
	err := ctx.ReadResource("okta:policy/deviceAssuranceWindows:DeviceAssuranceWindows", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeviceAssuranceWindows resources.
type deviceAssuranceWindowsState struct {
	// Created by
	CreatedBy *string `pulumi:"createdBy"`
	// Created date
	CreatedDate *string `pulumi:"createdDate"`
	// List of disk encryption type, can be ALL_INTERNAL_VOLUMES
	DiskEncryptionTypes []string `pulumi:"diskEncryptionTypes"`
	// Last update
	LastUpdate *string `pulumi:"lastUpdate"`
	// Last updated by
	LastUpdatedBy *string `pulumi:"lastUpdatedBy"`
	// Policy device assurance name
	Name *string `pulumi:"name"`
	// The device os minimum version
	OsVersion *string `pulumi:"osVersion"`
	// Policy device assurance platform
	Platform *string `pulumi:"platform"`
	// List of screenlock type, can be BIOMETRIC or BIOMETRIC, PASSCODE
	ScreenlockTypes []string `pulumi:"screenlockTypes"`
	// Indicates if the device constains a secure hardware functionality
	SecureHardwarePresent *bool `pulumi:"secureHardwarePresent"`
	// Check to include third party signal provider
	ThirdPartySignalProviders *bool `pulumi:"thirdPartySignalProviders"`
	// Third party signal provider minimum browser version
	TpspBrowserVersion *string `pulumi:"tpspBrowserVersion"`
	// Third party signal provider builtin dns client enable
	TpspBuiltinDnsClientEnabled *bool `pulumi:"tpspBuiltinDnsClientEnabled"`
	// Third party signal provider chrome remote desktop app blocked
	TpspChromeRemoteDesktopAppBlocked *bool `pulumi:"tpspChromeRemoteDesktopAppBlocked"`
	// Third party signal provider crowdstrike agent id
	TpspCrowdStrikeAgentId *string `pulumi:"tpspCrowdStrikeAgentId"`
	// Third party signal provider crowdstrike user id
	TpspCrowdStrikeCustomerId *string `pulumi:"tpspCrowdStrikeCustomerId"`
	// Third party signal provider device enrollment domain
	TpspDeviceEnrollmentDomain *string `pulumi:"tpspDeviceEnrollmentDomain"`
	// Third party signal provider disk encrypted
	TpspDiskEncrypted *bool `pulumi:"tpspDiskEncrypted"`
	// Third party signal provider key trust level
	TpspKeyTrustLevel *string `pulumi:"tpspKeyTrustLevel"`
	// Third party signal provider os firewall
	TpspOsFirewall *bool `pulumi:"tpspOsFirewall"`
	// Third party signal provider minimum os version
	TpspOsVersion *string `pulumi:"tpspOsVersion"`
	// Third party signal provider password protection warning trigger
	TpspPasswordProctectionWarningTrigger *string `pulumi:"tpspPasswordProctectionWarningTrigger"`
	// Third party signal provider realtime url check mode
	TpspRealtimeUrlCheckMode *bool `pulumi:"tpspRealtimeUrlCheckMode"`
	// Third party signal provider safe browsing protection level
	TpspSafeBrowsingProtectionLevel *string `pulumi:"tpspSafeBrowsingProtectionLevel"`
	// Third party signal provider screen lock secure
	TpspScreenLockSecured *bool `pulumi:"tpspScreenLockSecured"`
	// Third party signal provider secure boot enabled
	TpspSecureBootEnabled *bool `pulumi:"tpspSecureBootEnabled"`
	// Third party signal provider site isolation enabled
	TpspSiteIsolationEnabled *bool `pulumi:"tpspSiteIsolationEnabled"`
	// Third party signal provider third party blocking enabled
	TpspThirdPartyBlockingEnabled *bool `pulumi:"tpspThirdPartyBlockingEnabled"`
	// Third party signal provider windows machine domain
	TpspWindowsMachineDomain *string `pulumi:"tpspWindowsMachineDomain"`
	// Third party signal provider windows user domain
	TpspWindowsUserDomain *string `pulumi:"tpspWindowsUserDomain"`
}

type DeviceAssuranceWindowsState struct {
	// Created by
	CreatedBy pulumi.StringPtrInput
	// Created date
	CreatedDate pulumi.StringPtrInput
	// List of disk encryption type, can be ALL_INTERNAL_VOLUMES
	DiskEncryptionTypes pulumi.StringArrayInput
	// Last update
	LastUpdate pulumi.StringPtrInput
	// Last updated by
	LastUpdatedBy pulumi.StringPtrInput
	// Policy device assurance name
	Name pulumi.StringPtrInput
	// The device os minimum version
	OsVersion pulumi.StringPtrInput
	// Policy device assurance platform
	Platform pulumi.StringPtrInput
	// List of screenlock type, can be BIOMETRIC or BIOMETRIC, PASSCODE
	ScreenlockTypes pulumi.StringArrayInput
	// Indicates if the device constains a secure hardware functionality
	SecureHardwarePresent pulumi.BoolPtrInput
	// Check to include third party signal provider
	ThirdPartySignalProviders pulumi.BoolPtrInput
	// Third party signal provider minimum browser version
	TpspBrowserVersion pulumi.StringPtrInput
	// Third party signal provider builtin dns client enable
	TpspBuiltinDnsClientEnabled pulumi.BoolPtrInput
	// Third party signal provider chrome remote desktop app blocked
	TpspChromeRemoteDesktopAppBlocked pulumi.BoolPtrInput
	// Third party signal provider crowdstrike agent id
	TpspCrowdStrikeAgentId pulumi.StringPtrInput
	// Third party signal provider crowdstrike user id
	TpspCrowdStrikeCustomerId pulumi.StringPtrInput
	// Third party signal provider device enrollment domain
	TpspDeviceEnrollmentDomain pulumi.StringPtrInput
	// Third party signal provider disk encrypted
	TpspDiskEncrypted pulumi.BoolPtrInput
	// Third party signal provider key trust level
	TpspKeyTrustLevel pulumi.StringPtrInput
	// Third party signal provider os firewall
	TpspOsFirewall pulumi.BoolPtrInput
	// Third party signal provider minimum os version
	TpspOsVersion pulumi.StringPtrInput
	// Third party signal provider password protection warning trigger
	TpspPasswordProctectionWarningTrigger pulumi.StringPtrInput
	// Third party signal provider realtime url check mode
	TpspRealtimeUrlCheckMode pulumi.BoolPtrInput
	// Third party signal provider safe browsing protection level
	TpspSafeBrowsingProtectionLevel pulumi.StringPtrInput
	// Third party signal provider screen lock secure
	TpspScreenLockSecured pulumi.BoolPtrInput
	// Third party signal provider secure boot enabled
	TpspSecureBootEnabled pulumi.BoolPtrInput
	// Third party signal provider site isolation enabled
	TpspSiteIsolationEnabled pulumi.BoolPtrInput
	// Third party signal provider third party blocking enabled
	TpspThirdPartyBlockingEnabled pulumi.BoolPtrInput
	// Third party signal provider windows machine domain
	TpspWindowsMachineDomain pulumi.StringPtrInput
	// Third party signal provider windows user domain
	TpspWindowsUserDomain pulumi.StringPtrInput
}

func (DeviceAssuranceWindowsState) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceAssuranceWindowsState)(nil)).Elem()
}

type deviceAssuranceWindowsArgs struct {
	// List of disk encryption type, can be ALL_INTERNAL_VOLUMES
	DiskEncryptionTypes []string `pulumi:"diskEncryptionTypes"`
	// Policy device assurance name
	Name *string `pulumi:"name"`
	// The device os minimum version
	OsVersion *string `pulumi:"osVersion"`
	// List of screenlock type, can be BIOMETRIC or BIOMETRIC, PASSCODE
	ScreenlockTypes []string `pulumi:"screenlockTypes"`
	// Indicates if the device constains a secure hardware functionality
	SecureHardwarePresent *bool `pulumi:"secureHardwarePresent"`
	// Check to include third party signal provider
	ThirdPartySignalProviders *bool `pulumi:"thirdPartySignalProviders"`
	// Third party signal provider minimum browser version
	TpspBrowserVersion *string `pulumi:"tpspBrowserVersion"`
	// Third party signal provider builtin dns client enable
	TpspBuiltinDnsClientEnabled *bool `pulumi:"tpspBuiltinDnsClientEnabled"`
	// Third party signal provider chrome remote desktop app blocked
	TpspChromeRemoteDesktopAppBlocked *bool `pulumi:"tpspChromeRemoteDesktopAppBlocked"`
	// Third party signal provider crowdstrike agent id
	TpspCrowdStrikeAgentId *string `pulumi:"tpspCrowdStrikeAgentId"`
	// Third party signal provider crowdstrike user id
	TpspCrowdStrikeCustomerId *string `pulumi:"tpspCrowdStrikeCustomerId"`
	// Third party signal provider device enrollment domain
	TpspDeviceEnrollmentDomain *string `pulumi:"tpspDeviceEnrollmentDomain"`
	// Third party signal provider disk encrypted
	TpspDiskEncrypted *bool `pulumi:"tpspDiskEncrypted"`
	// Third party signal provider key trust level
	TpspKeyTrustLevel *string `pulumi:"tpspKeyTrustLevel"`
	// Third party signal provider os firewall
	TpspOsFirewall *bool `pulumi:"tpspOsFirewall"`
	// Third party signal provider minimum os version
	TpspOsVersion *string `pulumi:"tpspOsVersion"`
	// Third party signal provider password protection warning trigger
	TpspPasswordProctectionWarningTrigger *string `pulumi:"tpspPasswordProctectionWarningTrigger"`
	// Third party signal provider realtime url check mode
	TpspRealtimeUrlCheckMode *bool `pulumi:"tpspRealtimeUrlCheckMode"`
	// Third party signal provider safe browsing protection level
	TpspSafeBrowsingProtectionLevel *string `pulumi:"tpspSafeBrowsingProtectionLevel"`
	// Third party signal provider screen lock secure
	TpspScreenLockSecured *bool `pulumi:"tpspScreenLockSecured"`
	// Third party signal provider secure boot enabled
	TpspSecureBootEnabled *bool `pulumi:"tpspSecureBootEnabled"`
	// Third party signal provider site isolation enabled
	TpspSiteIsolationEnabled *bool `pulumi:"tpspSiteIsolationEnabled"`
	// Third party signal provider third party blocking enabled
	TpspThirdPartyBlockingEnabled *bool `pulumi:"tpspThirdPartyBlockingEnabled"`
	// Third party signal provider windows machine domain
	TpspWindowsMachineDomain *string `pulumi:"tpspWindowsMachineDomain"`
	// Third party signal provider windows user domain
	TpspWindowsUserDomain *string `pulumi:"tpspWindowsUserDomain"`
}

// The set of arguments for constructing a DeviceAssuranceWindows resource.
type DeviceAssuranceWindowsArgs struct {
	// List of disk encryption type, can be ALL_INTERNAL_VOLUMES
	DiskEncryptionTypes pulumi.StringArrayInput
	// Policy device assurance name
	Name pulumi.StringPtrInput
	// The device os minimum version
	OsVersion pulumi.StringPtrInput
	// List of screenlock type, can be BIOMETRIC or BIOMETRIC, PASSCODE
	ScreenlockTypes pulumi.StringArrayInput
	// Indicates if the device constains a secure hardware functionality
	SecureHardwarePresent pulumi.BoolPtrInput
	// Check to include third party signal provider
	ThirdPartySignalProviders pulumi.BoolPtrInput
	// Third party signal provider minimum browser version
	TpspBrowserVersion pulumi.StringPtrInput
	// Third party signal provider builtin dns client enable
	TpspBuiltinDnsClientEnabled pulumi.BoolPtrInput
	// Third party signal provider chrome remote desktop app blocked
	TpspChromeRemoteDesktopAppBlocked pulumi.BoolPtrInput
	// Third party signal provider crowdstrike agent id
	TpspCrowdStrikeAgentId pulumi.StringPtrInput
	// Third party signal provider crowdstrike user id
	TpspCrowdStrikeCustomerId pulumi.StringPtrInput
	// Third party signal provider device enrollment domain
	TpspDeviceEnrollmentDomain pulumi.StringPtrInput
	// Third party signal provider disk encrypted
	TpspDiskEncrypted pulumi.BoolPtrInput
	// Third party signal provider key trust level
	TpspKeyTrustLevel pulumi.StringPtrInput
	// Third party signal provider os firewall
	TpspOsFirewall pulumi.BoolPtrInput
	// Third party signal provider minimum os version
	TpspOsVersion pulumi.StringPtrInput
	// Third party signal provider password protection warning trigger
	TpspPasswordProctectionWarningTrigger pulumi.StringPtrInput
	// Third party signal provider realtime url check mode
	TpspRealtimeUrlCheckMode pulumi.BoolPtrInput
	// Third party signal provider safe browsing protection level
	TpspSafeBrowsingProtectionLevel pulumi.StringPtrInput
	// Third party signal provider screen lock secure
	TpspScreenLockSecured pulumi.BoolPtrInput
	// Third party signal provider secure boot enabled
	TpspSecureBootEnabled pulumi.BoolPtrInput
	// Third party signal provider site isolation enabled
	TpspSiteIsolationEnabled pulumi.BoolPtrInput
	// Third party signal provider third party blocking enabled
	TpspThirdPartyBlockingEnabled pulumi.BoolPtrInput
	// Third party signal provider windows machine domain
	TpspWindowsMachineDomain pulumi.StringPtrInput
	// Third party signal provider windows user domain
	TpspWindowsUserDomain pulumi.StringPtrInput
}

func (DeviceAssuranceWindowsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceAssuranceWindowsArgs)(nil)).Elem()
}

type DeviceAssuranceWindowsInput interface {
	pulumi.Input

	ToDeviceAssuranceWindowsOutput() DeviceAssuranceWindowsOutput
	ToDeviceAssuranceWindowsOutputWithContext(ctx context.Context) DeviceAssuranceWindowsOutput
}

func (*DeviceAssuranceWindows) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceAssuranceWindows)(nil)).Elem()
}

func (i *DeviceAssuranceWindows) ToDeviceAssuranceWindowsOutput() DeviceAssuranceWindowsOutput {
	return i.ToDeviceAssuranceWindowsOutputWithContext(context.Background())
}

func (i *DeviceAssuranceWindows) ToDeviceAssuranceWindowsOutputWithContext(ctx context.Context) DeviceAssuranceWindowsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceAssuranceWindowsOutput)
}

// DeviceAssuranceWindowsArrayInput is an input type that accepts DeviceAssuranceWindowsArray and DeviceAssuranceWindowsArrayOutput values.
// You can construct a concrete instance of `DeviceAssuranceWindowsArrayInput` via:
//
//	DeviceAssuranceWindowsArray{ DeviceAssuranceWindowsArgs{...} }
type DeviceAssuranceWindowsArrayInput interface {
	pulumi.Input

	ToDeviceAssuranceWindowsArrayOutput() DeviceAssuranceWindowsArrayOutput
	ToDeviceAssuranceWindowsArrayOutputWithContext(context.Context) DeviceAssuranceWindowsArrayOutput
}

type DeviceAssuranceWindowsArray []DeviceAssuranceWindowsInput

func (DeviceAssuranceWindowsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeviceAssuranceWindows)(nil)).Elem()
}

func (i DeviceAssuranceWindowsArray) ToDeviceAssuranceWindowsArrayOutput() DeviceAssuranceWindowsArrayOutput {
	return i.ToDeviceAssuranceWindowsArrayOutputWithContext(context.Background())
}

func (i DeviceAssuranceWindowsArray) ToDeviceAssuranceWindowsArrayOutputWithContext(ctx context.Context) DeviceAssuranceWindowsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceAssuranceWindowsArrayOutput)
}

// DeviceAssuranceWindowsMapInput is an input type that accepts DeviceAssuranceWindowsMap and DeviceAssuranceWindowsMapOutput values.
// You can construct a concrete instance of `DeviceAssuranceWindowsMapInput` via:
//
//	DeviceAssuranceWindowsMap{ "key": DeviceAssuranceWindowsArgs{...} }
type DeviceAssuranceWindowsMapInput interface {
	pulumi.Input

	ToDeviceAssuranceWindowsMapOutput() DeviceAssuranceWindowsMapOutput
	ToDeviceAssuranceWindowsMapOutputWithContext(context.Context) DeviceAssuranceWindowsMapOutput
}

type DeviceAssuranceWindowsMap map[string]DeviceAssuranceWindowsInput

func (DeviceAssuranceWindowsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeviceAssuranceWindows)(nil)).Elem()
}

func (i DeviceAssuranceWindowsMap) ToDeviceAssuranceWindowsMapOutput() DeviceAssuranceWindowsMapOutput {
	return i.ToDeviceAssuranceWindowsMapOutputWithContext(context.Background())
}

func (i DeviceAssuranceWindowsMap) ToDeviceAssuranceWindowsMapOutputWithContext(ctx context.Context) DeviceAssuranceWindowsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceAssuranceWindowsMapOutput)
}

type DeviceAssuranceWindowsOutput struct{ *pulumi.OutputState }

func (DeviceAssuranceWindowsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceAssuranceWindows)(nil)).Elem()
}

func (o DeviceAssuranceWindowsOutput) ToDeviceAssuranceWindowsOutput() DeviceAssuranceWindowsOutput {
	return o
}

func (o DeviceAssuranceWindowsOutput) ToDeviceAssuranceWindowsOutputWithContext(ctx context.Context) DeviceAssuranceWindowsOutput {
	return o
}

// Created by
func (o DeviceAssuranceWindowsOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// Created date
func (o DeviceAssuranceWindowsOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringOutput { return v.CreatedDate }).(pulumi.StringOutput)
}

// List of disk encryption type, can be ALL_INTERNAL_VOLUMES
func (o DeviceAssuranceWindowsOutput) DiskEncryptionTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringArrayOutput { return v.DiskEncryptionTypes }).(pulumi.StringArrayOutput)
}

// Last update
func (o DeviceAssuranceWindowsOutput) LastUpdate() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringOutput { return v.LastUpdate }).(pulumi.StringOutput)
}

// Last updated by
func (o DeviceAssuranceWindowsOutput) LastUpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringOutput { return v.LastUpdatedBy }).(pulumi.StringOutput)
}

// Policy device assurance name
func (o DeviceAssuranceWindowsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The device os minimum version
func (o DeviceAssuranceWindowsOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringPtrOutput { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// Policy device assurance platform
func (o DeviceAssuranceWindowsOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringOutput { return v.Platform }).(pulumi.StringOutput)
}

// List of screenlock type, can be BIOMETRIC or BIOMETRIC, PASSCODE
func (o DeviceAssuranceWindowsOutput) ScreenlockTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringArrayOutput { return v.ScreenlockTypes }).(pulumi.StringArrayOutput)
}

// Indicates if the device constains a secure hardware functionality
func (o DeviceAssuranceWindowsOutput) SecureHardwarePresent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.BoolPtrOutput { return v.SecureHardwarePresent }).(pulumi.BoolPtrOutput)
}

// Check to include third party signal provider
func (o DeviceAssuranceWindowsOutput) ThirdPartySignalProviders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.BoolPtrOutput { return v.ThirdPartySignalProviders }).(pulumi.BoolPtrOutput)
}

// Third party signal provider minimum browser version
func (o DeviceAssuranceWindowsOutput) TpspBrowserVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringPtrOutput { return v.TpspBrowserVersion }).(pulumi.StringPtrOutput)
}

// Third party signal provider builtin dns client enable
func (o DeviceAssuranceWindowsOutput) TpspBuiltinDnsClientEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.BoolPtrOutput { return v.TpspBuiltinDnsClientEnabled }).(pulumi.BoolPtrOutput)
}

// Third party signal provider chrome remote desktop app blocked
func (o DeviceAssuranceWindowsOutput) TpspChromeRemoteDesktopAppBlocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.BoolPtrOutput { return v.TpspChromeRemoteDesktopAppBlocked }).(pulumi.BoolPtrOutput)
}

// Third party signal provider crowdstrike agent id
func (o DeviceAssuranceWindowsOutput) TpspCrowdStrikeAgentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringPtrOutput { return v.TpspCrowdStrikeAgentId }).(pulumi.StringPtrOutput)
}

// Third party signal provider crowdstrike user id
func (o DeviceAssuranceWindowsOutput) TpspCrowdStrikeCustomerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringPtrOutput { return v.TpspCrowdStrikeCustomerId }).(pulumi.StringPtrOutput)
}

// Third party signal provider device enrollment domain
func (o DeviceAssuranceWindowsOutput) TpspDeviceEnrollmentDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringPtrOutput { return v.TpspDeviceEnrollmentDomain }).(pulumi.StringPtrOutput)
}

// Third party signal provider disk encrypted
func (o DeviceAssuranceWindowsOutput) TpspDiskEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.BoolPtrOutput { return v.TpspDiskEncrypted }).(pulumi.BoolPtrOutput)
}

// Third party signal provider key trust level
func (o DeviceAssuranceWindowsOutput) TpspKeyTrustLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringPtrOutput { return v.TpspKeyTrustLevel }).(pulumi.StringPtrOutput)
}

// Third party signal provider os firewall
func (o DeviceAssuranceWindowsOutput) TpspOsFirewall() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.BoolPtrOutput { return v.TpspOsFirewall }).(pulumi.BoolPtrOutput)
}

// Third party signal provider minimum os version
func (o DeviceAssuranceWindowsOutput) TpspOsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringPtrOutput { return v.TpspOsVersion }).(pulumi.StringPtrOutput)
}

// Third party signal provider password protection warning trigger
func (o DeviceAssuranceWindowsOutput) TpspPasswordProctectionWarningTrigger() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringPtrOutput { return v.TpspPasswordProctectionWarningTrigger }).(pulumi.StringPtrOutput)
}

// Third party signal provider realtime url check mode
func (o DeviceAssuranceWindowsOutput) TpspRealtimeUrlCheckMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.BoolPtrOutput { return v.TpspRealtimeUrlCheckMode }).(pulumi.BoolPtrOutput)
}

// Third party signal provider safe browsing protection level
func (o DeviceAssuranceWindowsOutput) TpspSafeBrowsingProtectionLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringPtrOutput { return v.TpspSafeBrowsingProtectionLevel }).(pulumi.StringPtrOutput)
}

// Third party signal provider screen lock secure
func (o DeviceAssuranceWindowsOutput) TpspScreenLockSecured() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.BoolPtrOutput { return v.TpspScreenLockSecured }).(pulumi.BoolPtrOutput)
}

// Third party signal provider secure boot enabled
func (o DeviceAssuranceWindowsOutput) TpspSecureBootEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.BoolPtrOutput { return v.TpspSecureBootEnabled }).(pulumi.BoolPtrOutput)
}

// Third party signal provider site isolation enabled
func (o DeviceAssuranceWindowsOutput) TpspSiteIsolationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.BoolPtrOutput { return v.TpspSiteIsolationEnabled }).(pulumi.BoolPtrOutput)
}

// Third party signal provider third party blocking enabled
func (o DeviceAssuranceWindowsOutput) TpspThirdPartyBlockingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.BoolPtrOutput { return v.TpspThirdPartyBlockingEnabled }).(pulumi.BoolPtrOutput)
}

// Third party signal provider windows machine domain
func (o DeviceAssuranceWindowsOutput) TpspWindowsMachineDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringPtrOutput { return v.TpspWindowsMachineDomain }).(pulumi.StringPtrOutput)
}

// Third party signal provider windows user domain
func (o DeviceAssuranceWindowsOutput) TpspWindowsUserDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAssuranceWindows) pulumi.StringPtrOutput { return v.TpspWindowsUserDomain }).(pulumi.StringPtrOutput)
}

type DeviceAssuranceWindowsArrayOutput struct{ *pulumi.OutputState }

func (DeviceAssuranceWindowsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeviceAssuranceWindows)(nil)).Elem()
}

func (o DeviceAssuranceWindowsArrayOutput) ToDeviceAssuranceWindowsArrayOutput() DeviceAssuranceWindowsArrayOutput {
	return o
}

func (o DeviceAssuranceWindowsArrayOutput) ToDeviceAssuranceWindowsArrayOutputWithContext(ctx context.Context) DeviceAssuranceWindowsArrayOutput {
	return o
}

func (o DeviceAssuranceWindowsArrayOutput) Index(i pulumi.IntInput) DeviceAssuranceWindowsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeviceAssuranceWindows {
		return vs[0].([]*DeviceAssuranceWindows)[vs[1].(int)]
	}).(DeviceAssuranceWindowsOutput)
}

type DeviceAssuranceWindowsMapOutput struct{ *pulumi.OutputState }

func (DeviceAssuranceWindowsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeviceAssuranceWindows)(nil)).Elem()
}

func (o DeviceAssuranceWindowsMapOutput) ToDeviceAssuranceWindowsMapOutput() DeviceAssuranceWindowsMapOutput {
	return o
}

func (o DeviceAssuranceWindowsMapOutput) ToDeviceAssuranceWindowsMapOutputWithContext(ctx context.Context) DeviceAssuranceWindowsMapOutput {
	return o
}

func (o DeviceAssuranceWindowsMapOutput) MapIndex(k pulumi.StringInput) DeviceAssuranceWindowsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeviceAssuranceWindows {
		return vs[0].(map[string]*DeviceAssuranceWindows)[vs[1].(string)]
	}).(DeviceAssuranceWindowsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceAssuranceWindowsInput)(nil)).Elem(), &DeviceAssuranceWindows{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceAssuranceWindowsArrayInput)(nil)).Elem(), DeviceAssuranceWindowsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceAssuranceWindowsMapInput)(nil)).Elem(), DeviceAssuranceWindowsMap{})
	pulumi.RegisterOutputType(DeviceAssuranceWindowsOutput{})
	pulumi.RegisterOutputType(DeviceAssuranceWindowsArrayOutput{})
	pulumi.RegisterOutputType(DeviceAssuranceWindowsMapOutput{})
}

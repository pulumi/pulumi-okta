// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package policy

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-okta/sdk/v3/go/okta"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "okta:policy/mfa:Mfa":
		r = &Mfa{}
	case "okta:policy/password:Password":
		r = &Password{}
	case "okta:policy/ruleIdpDiscovery:RuleIdpDiscovery":
		r = &RuleIdpDiscovery{}
	case "okta:policy/ruleMfa:RuleMfa":
		r = &RuleMfa{}
	case "okta:policy/rulePassword:RulePassword":
		r = &RulePassword{}
	case "okta:policy/ruleSignon:RuleSignon":
		r = &RuleSignon{}
	case "okta:policy/signon:Signon":
		r = &Signon{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := okta.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"okta",
		"policy/mfa",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"policy/password",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"policy/ruleIdpDiscovery",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"policy/ruleMfa",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"policy/rulePassword",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"policy/ruleSignon",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"policy/signon",
		&module{version},
	)
}

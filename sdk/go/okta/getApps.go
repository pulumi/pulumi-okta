// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetApps(ctx *pulumi.Context, args *GetAppsArgs, opts ...pulumi.InvokeOption) (*GetAppsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAppsResult
	err := ctx.Invoke("okta:index/getApps:getApps", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApps.
type GetAppsArgs struct {
	// Search only active applications.
	ActiveOnly *bool `pulumi:"activeOnly"`
	// Specifies whether to include non-active, but not deleted apps in the results.
	IncludeNonDeleted *bool `pulumi:"includeNonDeleted"`
	// Searches for applications whose label or name property matches this value exactly.
	Label *string `pulumi:"label"`
	// Searches for applications whose label or name property begins with this value. **Warning:** This might not work as intended and will be removed in the future release. Use `q` instead.
	//
	// Deprecated: Use `q` instead. This attribute will be removed in a future version.
	LabelPrefix *string `pulumi:"labelPrefix"`
	// Searches for apps with name or label properties that starts with the `q` value.
	Q *string `pulumi:"q"`
	// Specifies whether to use query optimization. If you specify `useOptimization=true` in the request query, the response contains a subset of app instance properties.
	UseOptimization *bool `pulumi:"useOptimization"`
}

// A collection of values returned by getApps.
type GetAppsResult struct {
	// Search only active applications.
	ActiveOnly *bool `pulumi:"activeOnly"`
	// The list of applications that match the search criteria.
	Apps []GetAppsApp `pulumi:"apps"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Specifies whether to include non-active, but not deleted apps in the results.
	IncludeNonDeleted *bool `pulumi:"includeNonDeleted"`
	// Searches for applications whose label or name property matches this value exactly.
	Label *string `pulumi:"label"`
	// Searches for applications whose label or name property begins with this value. **Warning:** This might not work as intended and will be removed in the future release. Use `q` instead.
	//
	// Deprecated: Use `q` instead. This attribute will be removed in a future version.
	LabelPrefix *string `pulumi:"labelPrefix"`
	// Searches for apps with name or label properties that starts with the `q` value.
	Q *string `pulumi:"q"`
	// Specifies whether to use query optimization. If you specify `useOptimization=true` in the request query, the response contains a subset of app instance properties.
	UseOptimization *bool `pulumi:"useOptimization"`
}

func GetAppsOutput(ctx *pulumi.Context, args GetAppsOutputArgs, opts ...pulumi.InvokeOption) GetAppsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAppsResultOutput, error) {
			args := v.(GetAppsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("okta:index/getApps:getApps", args, GetAppsResultOutput{}, options).(GetAppsResultOutput), nil
		}).(GetAppsResultOutput)
}

// A collection of arguments for invoking getApps.
type GetAppsOutputArgs struct {
	// Search only active applications.
	ActiveOnly pulumi.BoolPtrInput `pulumi:"activeOnly"`
	// Specifies whether to include non-active, but not deleted apps in the results.
	IncludeNonDeleted pulumi.BoolPtrInput `pulumi:"includeNonDeleted"`
	// Searches for applications whose label or name property matches this value exactly.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Searches for applications whose label or name property begins with this value. **Warning:** This might not work as intended and will be removed in the future release. Use `q` instead.
	//
	// Deprecated: Use `q` instead. This attribute will be removed in a future version.
	LabelPrefix pulumi.StringPtrInput `pulumi:"labelPrefix"`
	// Searches for apps with name or label properties that starts with the `q` value.
	Q pulumi.StringPtrInput `pulumi:"q"`
	// Specifies whether to use query optimization. If you specify `useOptimization=true` in the request query, the response contains a subset of app instance properties.
	UseOptimization pulumi.BoolPtrInput `pulumi:"useOptimization"`
}

func (GetAppsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppsArgs)(nil)).Elem()
}

// A collection of values returned by getApps.
type GetAppsResultOutput struct{ *pulumi.OutputState }

func (GetAppsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppsResult)(nil)).Elem()
}

func (o GetAppsResultOutput) ToGetAppsResultOutput() GetAppsResultOutput {
	return o
}

func (o GetAppsResultOutput) ToGetAppsResultOutputWithContext(ctx context.Context) GetAppsResultOutput {
	return o
}

// Search only active applications.
func (o GetAppsResultOutput) ActiveOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppsResult) *bool { return v.ActiveOnly }).(pulumi.BoolPtrOutput)
}

// The list of applications that match the search criteria.
func (o GetAppsResultOutput) Apps() GetAppsAppArrayOutput {
	return o.ApplyT(func(v GetAppsResult) []GetAppsApp { return v.Apps }).(GetAppsAppArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAppsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies whether to include non-active, but not deleted apps in the results.
func (o GetAppsResultOutput) IncludeNonDeleted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppsResult) *bool { return v.IncludeNonDeleted }).(pulumi.BoolPtrOutput)
}

// Searches for applications whose label or name property matches this value exactly.
func (o GetAppsResultOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppsResult) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Searches for applications whose label or name property begins with this value. **Warning:** This might not work as intended and will be removed in the future release. Use `q` instead.
//
// Deprecated: Use `q` instead. This attribute will be removed in a future version.
func (o GetAppsResultOutput) LabelPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppsResult) *string { return v.LabelPrefix }).(pulumi.StringPtrOutput)
}

// Searches for apps with name or label properties that starts with the `q` value.
func (o GetAppsResultOutput) Q() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppsResult) *string { return v.Q }).(pulumi.StringPtrOutput)
}

// Specifies whether to use query optimization. If you specify `useOptimization=true` in the request query, the response contains a subset of app instance properties.
func (o GetAppsResultOutput) UseOptimization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppsResult) *bool { return v.UseOptimization }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAppsResultOutput{})
}

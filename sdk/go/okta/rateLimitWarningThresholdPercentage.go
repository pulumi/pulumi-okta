// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Rate limit warning threshold percentage provides operations to manage threshold for warning notifications when the API's rate limit is exceeded.
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.NewRateLimitWarningThresholdPercentage(ctx, "example", &okta.RateLimitWarningThresholdPercentageArgs{
//				WarningThreshold: pulumi.Int(90),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import okta:index/rateLimitWarningThresholdPercentage:RateLimitWarningThresholdPercentage example .
// ```
type RateLimitWarningThresholdPercentage struct {
	pulumi.CustomResourceState

	// The threshold value (percentage) of a rate limit that, when exceeded, triggers a warning notification. By default, this value is 90 for Workforce orgs and 60 for CIAM orgs.
	WarningThreshold pulumi.IntOutput `pulumi:"warningThreshold"`
}

// NewRateLimitWarningThresholdPercentage registers a new resource with the given unique name, arguments, and options.
func NewRateLimitWarningThresholdPercentage(ctx *pulumi.Context,
	name string, args *RateLimitWarningThresholdPercentageArgs, opts ...pulumi.ResourceOption) (*RateLimitWarningThresholdPercentage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.WarningThreshold == nil {
		return nil, errors.New("invalid value for required argument 'WarningThreshold'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RateLimitWarningThresholdPercentage
	err := ctx.RegisterResource("okta:index/rateLimitWarningThresholdPercentage:RateLimitWarningThresholdPercentage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRateLimitWarningThresholdPercentage gets an existing RateLimitWarningThresholdPercentage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRateLimitWarningThresholdPercentage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RateLimitWarningThresholdPercentageState, opts ...pulumi.ResourceOption) (*RateLimitWarningThresholdPercentage, error) {
	var resource RateLimitWarningThresholdPercentage
	err := ctx.ReadResource("okta:index/rateLimitWarningThresholdPercentage:RateLimitWarningThresholdPercentage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RateLimitWarningThresholdPercentage resources.
type rateLimitWarningThresholdPercentageState struct {
	// The threshold value (percentage) of a rate limit that, when exceeded, triggers a warning notification. By default, this value is 90 for Workforce orgs and 60 for CIAM orgs.
	WarningThreshold *int `pulumi:"warningThreshold"`
}

type RateLimitWarningThresholdPercentageState struct {
	// The threshold value (percentage) of a rate limit that, when exceeded, triggers a warning notification. By default, this value is 90 for Workforce orgs and 60 for CIAM orgs.
	WarningThreshold pulumi.IntPtrInput
}

func (RateLimitWarningThresholdPercentageState) ElementType() reflect.Type {
	return reflect.TypeOf((*rateLimitWarningThresholdPercentageState)(nil)).Elem()
}

type rateLimitWarningThresholdPercentageArgs struct {
	// The threshold value (percentage) of a rate limit that, when exceeded, triggers a warning notification. By default, this value is 90 for Workforce orgs and 60 for CIAM orgs.
	WarningThreshold int `pulumi:"warningThreshold"`
}

// The set of arguments for constructing a RateLimitWarningThresholdPercentage resource.
type RateLimitWarningThresholdPercentageArgs struct {
	// The threshold value (percentage) of a rate limit that, when exceeded, triggers a warning notification. By default, this value is 90 for Workforce orgs and 60 for CIAM orgs.
	WarningThreshold pulumi.IntInput
}

func (RateLimitWarningThresholdPercentageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rateLimitWarningThresholdPercentageArgs)(nil)).Elem()
}

type RateLimitWarningThresholdPercentageInput interface {
	pulumi.Input

	ToRateLimitWarningThresholdPercentageOutput() RateLimitWarningThresholdPercentageOutput
	ToRateLimitWarningThresholdPercentageOutputWithContext(ctx context.Context) RateLimitWarningThresholdPercentageOutput
}

func (*RateLimitWarningThresholdPercentage) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitWarningThresholdPercentage)(nil)).Elem()
}

func (i *RateLimitWarningThresholdPercentage) ToRateLimitWarningThresholdPercentageOutput() RateLimitWarningThresholdPercentageOutput {
	return i.ToRateLimitWarningThresholdPercentageOutputWithContext(context.Background())
}

func (i *RateLimitWarningThresholdPercentage) ToRateLimitWarningThresholdPercentageOutputWithContext(ctx context.Context) RateLimitWarningThresholdPercentageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitWarningThresholdPercentageOutput)
}

// RateLimitWarningThresholdPercentageArrayInput is an input type that accepts RateLimitWarningThresholdPercentageArray and RateLimitWarningThresholdPercentageArrayOutput values.
// You can construct a concrete instance of `RateLimitWarningThresholdPercentageArrayInput` via:
//
//	RateLimitWarningThresholdPercentageArray{ RateLimitWarningThresholdPercentageArgs{...} }
type RateLimitWarningThresholdPercentageArrayInput interface {
	pulumi.Input

	ToRateLimitWarningThresholdPercentageArrayOutput() RateLimitWarningThresholdPercentageArrayOutput
	ToRateLimitWarningThresholdPercentageArrayOutputWithContext(context.Context) RateLimitWarningThresholdPercentageArrayOutput
}

type RateLimitWarningThresholdPercentageArray []RateLimitWarningThresholdPercentageInput

func (RateLimitWarningThresholdPercentageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RateLimitWarningThresholdPercentage)(nil)).Elem()
}

func (i RateLimitWarningThresholdPercentageArray) ToRateLimitWarningThresholdPercentageArrayOutput() RateLimitWarningThresholdPercentageArrayOutput {
	return i.ToRateLimitWarningThresholdPercentageArrayOutputWithContext(context.Background())
}

func (i RateLimitWarningThresholdPercentageArray) ToRateLimitWarningThresholdPercentageArrayOutputWithContext(ctx context.Context) RateLimitWarningThresholdPercentageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitWarningThresholdPercentageArrayOutput)
}

// RateLimitWarningThresholdPercentageMapInput is an input type that accepts RateLimitWarningThresholdPercentageMap and RateLimitWarningThresholdPercentageMapOutput values.
// You can construct a concrete instance of `RateLimitWarningThresholdPercentageMapInput` via:
//
//	RateLimitWarningThresholdPercentageMap{ "key": RateLimitWarningThresholdPercentageArgs{...} }
type RateLimitWarningThresholdPercentageMapInput interface {
	pulumi.Input

	ToRateLimitWarningThresholdPercentageMapOutput() RateLimitWarningThresholdPercentageMapOutput
	ToRateLimitWarningThresholdPercentageMapOutputWithContext(context.Context) RateLimitWarningThresholdPercentageMapOutput
}

type RateLimitWarningThresholdPercentageMap map[string]RateLimitWarningThresholdPercentageInput

func (RateLimitWarningThresholdPercentageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RateLimitWarningThresholdPercentage)(nil)).Elem()
}

func (i RateLimitWarningThresholdPercentageMap) ToRateLimitWarningThresholdPercentageMapOutput() RateLimitWarningThresholdPercentageMapOutput {
	return i.ToRateLimitWarningThresholdPercentageMapOutputWithContext(context.Background())
}

func (i RateLimitWarningThresholdPercentageMap) ToRateLimitWarningThresholdPercentageMapOutputWithContext(ctx context.Context) RateLimitWarningThresholdPercentageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitWarningThresholdPercentageMapOutput)
}

type RateLimitWarningThresholdPercentageOutput struct{ *pulumi.OutputState }

func (RateLimitWarningThresholdPercentageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitWarningThresholdPercentage)(nil)).Elem()
}

func (o RateLimitWarningThresholdPercentageOutput) ToRateLimitWarningThresholdPercentageOutput() RateLimitWarningThresholdPercentageOutput {
	return o
}

func (o RateLimitWarningThresholdPercentageOutput) ToRateLimitWarningThresholdPercentageOutputWithContext(ctx context.Context) RateLimitWarningThresholdPercentageOutput {
	return o
}

// The threshold value (percentage) of a rate limit that, when exceeded, triggers a warning notification. By default, this value is 90 for Workforce orgs and 60 for CIAM orgs.
func (o RateLimitWarningThresholdPercentageOutput) WarningThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *RateLimitWarningThresholdPercentage) pulumi.IntOutput { return v.WarningThreshold }).(pulumi.IntOutput)
}

type RateLimitWarningThresholdPercentageArrayOutput struct{ *pulumi.OutputState }

func (RateLimitWarningThresholdPercentageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RateLimitWarningThresholdPercentage)(nil)).Elem()
}

func (o RateLimitWarningThresholdPercentageArrayOutput) ToRateLimitWarningThresholdPercentageArrayOutput() RateLimitWarningThresholdPercentageArrayOutput {
	return o
}

func (o RateLimitWarningThresholdPercentageArrayOutput) ToRateLimitWarningThresholdPercentageArrayOutputWithContext(ctx context.Context) RateLimitWarningThresholdPercentageArrayOutput {
	return o
}

func (o RateLimitWarningThresholdPercentageArrayOutput) Index(i pulumi.IntInput) RateLimitWarningThresholdPercentageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RateLimitWarningThresholdPercentage {
		return vs[0].([]*RateLimitWarningThresholdPercentage)[vs[1].(int)]
	}).(RateLimitWarningThresholdPercentageOutput)
}

type RateLimitWarningThresholdPercentageMapOutput struct{ *pulumi.OutputState }

func (RateLimitWarningThresholdPercentageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RateLimitWarningThresholdPercentage)(nil)).Elem()
}

func (o RateLimitWarningThresholdPercentageMapOutput) ToRateLimitWarningThresholdPercentageMapOutput() RateLimitWarningThresholdPercentageMapOutput {
	return o
}

func (o RateLimitWarningThresholdPercentageMapOutput) ToRateLimitWarningThresholdPercentageMapOutputWithContext(ctx context.Context) RateLimitWarningThresholdPercentageMapOutput {
	return o
}

func (o RateLimitWarningThresholdPercentageMapOutput) MapIndex(k pulumi.StringInput) RateLimitWarningThresholdPercentageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RateLimitWarningThresholdPercentage {
		return vs[0].(map[string]*RateLimitWarningThresholdPercentage)[vs[1].(string)]
	}).(RateLimitWarningThresholdPercentageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RateLimitWarningThresholdPercentageInput)(nil)).Elem(), &RateLimitWarningThresholdPercentage{})
	pulumi.RegisterInputType(reflect.TypeOf((*RateLimitWarningThresholdPercentageArrayInput)(nil)).Elem(), RateLimitWarningThresholdPercentageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RateLimitWarningThresholdPercentageMapInput)(nil)).Elem(), RateLimitWarningThresholdPercentageMap{})
	pulumi.RegisterOutputType(RateLimitWarningThresholdPercentageOutput{})
	pulumi.RegisterOutputType(RateLimitWarningThresholdPercentageArrayOutput{})
	pulumi.RegisterOutputType(RateLimitWarningThresholdPercentageMapOutput{})
}

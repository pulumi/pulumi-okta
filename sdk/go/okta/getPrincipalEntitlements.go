// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the entitlements for a user and resource after evaluating all grants.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.GetPrincipalEntitlements(ctx, &okta.GetPrincipalEntitlementsArgs{
//				Parent: okta.GetPrincipalEntitlementsParent{
//					ExternalId: "<resource_id>",
//					Type:       "<resource_type>",
//				},
//				TargetPrincipal: okta.GetPrincipalEntitlementsTargetPrincipal{
//					ExternalId: "<principal_id>",
//					Type:       "<principal_type>",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Required:
//
// - `externalId` (String) The Okta user's email address.
// - `type` (String) The Okta user id.
//
// <a id="nestedblock--target_principal"></a>
// ### Nested Schema for `targetPrincipal`
// ## Required:
//
// - `externalId` (String) The Okta user id.
// - `type` (String) The type of principal. Enum: `OKTA_USER`.
//
// <a id="nestedblock--data"></a>
// ### Nested Schema for `data`
// ## Required:
//
// - `parent` (Object) Representation of a resource. (see below for nested schema)
// - `targetPrincipal` (Object) Representation of a principal. (see below for nested schema)
//
// ## Optional:
//
// - `dataType` (String) The data type of the entitlement property. Enum: `array`, `string`.
// - `description` (String) The Okta user id.
// - `externalValue` (String) The type of principal. Enum: `OKTA_USER`.
// - `id` (String) The unique identifier of the entitlement.
// - `multiValue` (Boolean) Indicates if the entitlement is multi-valued.
// - `name` (String) The name of the entitlement.
// - `parentResourceOrn` (String) The Okta app instance, in ORN format.
// - `required` (Boolean) Indicates if the entitlement is required.
// - `targetPrincipalOrn` (String) The Okta user id, in ORN format.
// - `values` (List of Objects) The values of the entitlement. (see below for nested schema)
//
// <a id="nestedblock--values"></a>
// ### Nested Schema for `values`
// - `description` (String) The description of the value.
// - `externalId` (String) The external ID of the value.
// - `externalValue` (String) The value of an entitlement property value.
// - `id` (String) The unique identifier of the value.
// - `name` (String) The name of the value.
func GetPrincipalEntitlements(ctx *pulumi.Context, args *GetPrincipalEntitlementsArgs, opts ...pulumi.InvokeOption) (*GetPrincipalEntitlementsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPrincipalEntitlementsResult
	err := ctx.Invoke("okta:index/getPrincipalEntitlements:getPrincipalEntitlements", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPrincipalEntitlements.
type GetPrincipalEntitlementsArgs struct {
	// Principal entitlements list.
	Datas []GetPrincipalEntitlementsData `pulumi:"datas"`
	// Representation of a resource.
	Parent *GetPrincipalEntitlementsParent `pulumi:"parent"`
	// Representation of a principal.
	TargetPrincipal *GetPrincipalEntitlementsTargetPrincipal `pulumi:"targetPrincipal"`
}

// A collection of values returned by getPrincipalEntitlements.
type GetPrincipalEntitlementsResult struct {
	// Principal entitlements list.
	Datas []GetPrincipalEntitlementsData `pulumi:"datas"`
	Id    string                         `pulumi:"id"`
	// Representation of a resource.
	Parent *GetPrincipalEntitlementsParent `pulumi:"parent"`
	// Representation of a principal.
	TargetPrincipal *GetPrincipalEntitlementsTargetPrincipal `pulumi:"targetPrincipal"`
}

func GetPrincipalEntitlementsOutput(ctx *pulumi.Context, args GetPrincipalEntitlementsOutputArgs, opts ...pulumi.InvokeOption) GetPrincipalEntitlementsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetPrincipalEntitlementsResultOutput, error) {
			args := v.(GetPrincipalEntitlementsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("okta:index/getPrincipalEntitlements:getPrincipalEntitlements", args, GetPrincipalEntitlementsResultOutput{}, options).(GetPrincipalEntitlementsResultOutput), nil
		}).(GetPrincipalEntitlementsResultOutput)
}

// A collection of arguments for invoking getPrincipalEntitlements.
type GetPrincipalEntitlementsOutputArgs struct {
	// Principal entitlements list.
	Datas GetPrincipalEntitlementsDataArrayInput `pulumi:"datas"`
	// Representation of a resource.
	Parent GetPrincipalEntitlementsParentPtrInput `pulumi:"parent"`
	// Representation of a principal.
	TargetPrincipal GetPrincipalEntitlementsTargetPrincipalPtrInput `pulumi:"targetPrincipal"`
}

func (GetPrincipalEntitlementsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrincipalEntitlementsArgs)(nil)).Elem()
}

// A collection of values returned by getPrincipalEntitlements.
type GetPrincipalEntitlementsResultOutput struct{ *pulumi.OutputState }

func (GetPrincipalEntitlementsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrincipalEntitlementsResult)(nil)).Elem()
}

func (o GetPrincipalEntitlementsResultOutput) ToGetPrincipalEntitlementsResultOutput() GetPrincipalEntitlementsResultOutput {
	return o
}

func (o GetPrincipalEntitlementsResultOutput) ToGetPrincipalEntitlementsResultOutputWithContext(ctx context.Context) GetPrincipalEntitlementsResultOutput {
	return o
}

// Principal entitlements list.
func (o GetPrincipalEntitlementsResultOutput) Datas() GetPrincipalEntitlementsDataArrayOutput {
	return o.ApplyT(func(v GetPrincipalEntitlementsResult) []GetPrincipalEntitlementsData { return v.Datas }).(GetPrincipalEntitlementsDataArrayOutput)
}

func (o GetPrincipalEntitlementsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrincipalEntitlementsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Representation of a resource.
func (o GetPrincipalEntitlementsResultOutput) Parent() GetPrincipalEntitlementsParentPtrOutput {
	return o.ApplyT(func(v GetPrincipalEntitlementsResult) *GetPrincipalEntitlementsParent { return v.Parent }).(GetPrincipalEntitlementsParentPtrOutput)
}

// Representation of a principal.
func (o GetPrincipalEntitlementsResultOutput) TargetPrincipal() GetPrincipalEntitlementsTargetPrincipalPtrOutput {
	return o.ApplyT(func(v GetPrincipalEntitlementsResult) *GetPrincipalEntitlementsTargetPrincipal {
		return v.TargetPrincipal
	}).(GetPrincipalEntitlementsTargetPrincipalPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPrincipalEntitlementsResultOutput{})
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package deprecated

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AuthLoginAppUser struct {
	Id       *string `pulumi:"id"`
	Password *string `pulumi:"password"`
	Scope    *string `pulumi:"scope"`
	Username *string `pulumi:"username"`
}

// AuthLoginAppUserInput is an input type that accepts AuthLoginAppUserArgs and AuthLoginAppUserOutput values.
// You can construct a concrete instance of `AuthLoginAppUserInput` via:
//
//          AuthLoginAppUserArgs{...}
type AuthLoginAppUserInput interface {
	pulumi.Input

	ToAuthLoginAppUserOutput() AuthLoginAppUserOutput
	ToAuthLoginAppUserOutputWithContext(context.Context) AuthLoginAppUserOutput
}

type AuthLoginAppUserArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Password pulumi.StringPtrInput `pulumi:"password"`
	Scope    pulumi.StringPtrInput `pulumi:"scope"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (AuthLoginAppUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthLoginAppUser)(nil)).Elem()
}

func (i AuthLoginAppUserArgs) ToAuthLoginAppUserOutput() AuthLoginAppUserOutput {
	return i.ToAuthLoginAppUserOutputWithContext(context.Background())
}

func (i AuthLoginAppUserArgs) ToAuthLoginAppUserOutputWithContext(ctx context.Context) AuthLoginAppUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthLoginAppUserOutput)
}

// AuthLoginAppUserArrayInput is an input type that accepts AuthLoginAppUserArray and AuthLoginAppUserArrayOutput values.
// You can construct a concrete instance of `AuthLoginAppUserArrayInput` via:
//
//          AuthLoginAppUserArray{ AuthLoginAppUserArgs{...} }
type AuthLoginAppUserArrayInput interface {
	pulumi.Input

	ToAuthLoginAppUserArrayOutput() AuthLoginAppUserArrayOutput
	ToAuthLoginAppUserArrayOutputWithContext(context.Context) AuthLoginAppUserArrayOutput
}

type AuthLoginAppUserArray []AuthLoginAppUserInput

func (AuthLoginAppUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthLoginAppUser)(nil)).Elem()
}

func (i AuthLoginAppUserArray) ToAuthLoginAppUserArrayOutput() AuthLoginAppUserArrayOutput {
	return i.ToAuthLoginAppUserArrayOutputWithContext(context.Background())
}

func (i AuthLoginAppUserArray) ToAuthLoginAppUserArrayOutputWithContext(ctx context.Context) AuthLoginAppUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthLoginAppUserArrayOutput)
}

type AuthLoginAppUserOutput struct{ *pulumi.OutputState }

func (AuthLoginAppUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthLoginAppUser)(nil)).Elem()
}

func (o AuthLoginAppUserOutput) ToAuthLoginAppUserOutput() AuthLoginAppUserOutput {
	return o
}

func (o AuthLoginAppUserOutput) ToAuthLoginAppUserOutputWithContext(ctx context.Context) AuthLoginAppUserOutput {
	return o
}

func (o AuthLoginAppUserOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthLoginAppUser) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o AuthLoginAppUserOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthLoginAppUser) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o AuthLoginAppUserOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthLoginAppUser) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o AuthLoginAppUserOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthLoginAppUser) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type AuthLoginAppUserArrayOutput struct{ *pulumi.OutputState }

func (AuthLoginAppUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthLoginAppUser)(nil)).Elem()
}

func (o AuthLoginAppUserArrayOutput) ToAuthLoginAppUserArrayOutput() AuthLoginAppUserArrayOutput {
	return o
}

func (o AuthLoginAppUserArrayOutput) ToAuthLoginAppUserArrayOutputWithContext(ctx context.Context) AuthLoginAppUserArrayOutput {
	return o
}

func (o AuthLoginAppUserArrayOutput) Index(i pulumi.IntInput) AuthLoginAppUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthLoginAppUser {
		return vs[0].([]AuthLoginAppUser)[vs[1].(int)]
	}).(AuthLoginAppUserOutput)
}

type BookmarkAppUser struct {
	Id       *string `pulumi:"id"`
	Password *string `pulumi:"password"`
	Scope    *string `pulumi:"scope"`
	Username *string `pulumi:"username"`
}

// BookmarkAppUserInput is an input type that accepts BookmarkAppUserArgs and BookmarkAppUserOutput values.
// You can construct a concrete instance of `BookmarkAppUserInput` via:
//
//          BookmarkAppUserArgs{...}
type BookmarkAppUserInput interface {
	pulumi.Input

	ToBookmarkAppUserOutput() BookmarkAppUserOutput
	ToBookmarkAppUserOutputWithContext(context.Context) BookmarkAppUserOutput
}

type BookmarkAppUserArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Password pulumi.StringPtrInput `pulumi:"password"`
	Scope    pulumi.StringPtrInput `pulumi:"scope"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (BookmarkAppUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BookmarkAppUser)(nil)).Elem()
}

func (i BookmarkAppUserArgs) ToBookmarkAppUserOutput() BookmarkAppUserOutput {
	return i.ToBookmarkAppUserOutputWithContext(context.Background())
}

func (i BookmarkAppUserArgs) ToBookmarkAppUserOutputWithContext(ctx context.Context) BookmarkAppUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BookmarkAppUserOutput)
}

// BookmarkAppUserArrayInput is an input type that accepts BookmarkAppUserArray and BookmarkAppUserArrayOutput values.
// You can construct a concrete instance of `BookmarkAppUserArrayInput` via:
//
//          BookmarkAppUserArray{ BookmarkAppUserArgs{...} }
type BookmarkAppUserArrayInput interface {
	pulumi.Input

	ToBookmarkAppUserArrayOutput() BookmarkAppUserArrayOutput
	ToBookmarkAppUserArrayOutputWithContext(context.Context) BookmarkAppUserArrayOutput
}

type BookmarkAppUserArray []BookmarkAppUserInput

func (BookmarkAppUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BookmarkAppUser)(nil)).Elem()
}

func (i BookmarkAppUserArray) ToBookmarkAppUserArrayOutput() BookmarkAppUserArrayOutput {
	return i.ToBookmarkAppUserArrayOutputWithContext(context.Background())
}

func (i BookmarkAppUserArray) ToBookmarkAppUserArrayOutputWithContext(ctx context.Context) BookmarkAppUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BookmarkAppUserArrayOutput)
}

type BookmarkAppUserOutput struct{ *pulumi.OutputState }

func (BookmarkAppUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BookmarkAppUser)(nil)).Elem()
}

func (o BookmarkAppUserOutput) ToBookmarkAppUserOutput() BookmarkAppUserOutput {
	return o
}

func (o BookmarkAppUserOutput) ToBookmarkAppUserOutputWithContext(ctx context.Context) BookmarkAppUserOutput {
	return o
}

func (o BookmarkAppUserOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BookmarkAppUser) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o BookmarkAppUserOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BookmarkAppUser) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o BookmarkAppUserOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BookmarkAppUser) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o BookmarkAppUserOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BookmarkAppUser) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type BookmarkAppUserArrayOutput struct{ *pulumi.OutputState }

func (BookmarkAppUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BookmarkAppUser)(nil)).Elem()
}

func (o BookmarkAppUserArrayOutput) ToBookmarkAppUserArrayOutput() BookmarkAppUserArrayOutput {
	return o
}

func (o BookmarkAppUserArrayOutput) ToBookmarkAppUserArrayOutputWithContext(ctx context.Context) BookmarkAppUserArrayOutput {
	return o
}

func (o BookmarkAppUserArrayOutput) Index(i pulumi.IntInput) BookmarkAppUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BookmarkAppUser {
		return vs[0].([]BookmarkAppUser)[vs[1].(int)]
	}).(BookmarkAppUserOutput)
}

type MfaPolicyRuleAppExclude struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
	Type string  `pulumi:"type"`
}

// MfaPolicyRuleAppExcludeInput is an input type that accepts MfaPolicyRuleAppExcludeArgs and MfaPolicyRuleAppExcludeOutput values.
// You can construct a concrete instance of `MfaPolicyRuleAppExcludeInput` via:
//
//          MfaPolicyRuleAppExcludeArgs{...}
type MfaPolicyRuleAppExcludeInput interface {
	pulumi.Input

	ToMfaPolicyRuleAppExcludeOutput() MfaPolicyRuleAppExcludeOutput
	ToMfaPolicyRuleAppExcludeOutputWithContext(context.Context) MfaPolicyRuleAppExcludeOutput
}

type MfaPolicyRuleAppExcludeArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
	Type pulumi.StringInput    `pulumi:"type"`
}

func (MfaPolicyRuleAppExcludeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaPolicyRuleAppExclude)(nil)).Elem()
}

func (i MfaPolicyRuleAppExcludeArgs) ToMfaPolicyRuleAppExcludeOutput() MfaPolicyRuleAppExcludeOutput {
	return i.ToMfaPolicyRuleAppExcludeOutputWithContext(context.Background())
}

func (i MfaPolicyRuleAppExcludeArgs) ToMfaPolicyRuleAppExcludeOutputWithContext(ctx context.Context) MfaPolicyRuleAppExcludeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaPolicyRuleAppExcludeOutput)
}

// MfaPolicyRuleAppExcludeArrayInput is an input type that accepts MfaPolicyRuleAppExcludeArray and MfaPolicyRuleAppExcludeArrayOutput values.
// You can construct a concrete instance of `MfaPolicyRuleAppExcludeArrayInput` via:
//
//          MfaPolicyRuleAppExcludeArray{ MfaPolicyRuleAppExcludeArgs{...} }
type MfaPolicyRuleAppExcludeArrayInput interface {
	pulumi.Input

	ToMfaPolicyRuleAppExcludeArrayOutput() MfaPolicyRuleAppExcludeArrayOutput
	ToMfaPolicyRuleAppExcludeArrayOutputWithContext(context.Context) MfaPolicyRuleAppExcludeArrayOutput
}

type MfaPolicyRuleAppExcludeArray []MfaPolicyRuleAppExcludeInput

func (MfaPolicyRuleAppExcludeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MfaPolicyRuleAppExclude)(nil)).Elem()
}

func (i MfaPolicyRuleAppExcludeArray) ToMfaPolicyRuleAppExcludeArrayOutput() MfaPolicyRuleAppExcludeArrayOutput {
	return i.ToMfaPolicyRuleAppExcludeArrayOutputWithContext(context.Background())
}

func (i MfaPolicyRuleAppExcludeArray) ToMfaPolicyRuleAppExcludeArrayOutputWithContext(ctx context.Context) MfaPolicyRuleAppExcludeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaPolicyRuleAppExcludeArrayOutput)
}

type MfaPolicyRuleAppExcludeOutput struct{ *pulumi.OutputState }

func (MfaPolicyRuleAppExcludeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaPolicyRuleAppExclude)(nil)).Elem()
}

func (o MfaPolicyRuleAppExcludeOutput) ToMfaPolicyRuleAppExcludeOutput() MfaPolicyRuleAppExcludeOutput {
	return o
}

func (o MfaPolicyRuleAppExcludeOutput) ToMfaPolicyRuleAppExcludeOutputWithContext(ctx context.Context) MfaPolicyRuleAppExcludeOutput {
	return o
}

func (o MfaPolicyRuleAppExcludeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaPolicyRuleAppExclude) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o MfaPolicyRuleAppExcludeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaPolicyRuleAppExclude) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MfaPolicyRuleAppExcludeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MfaPolicyRuleAppExclude) string { return v.Type }).(pulumi.StringOutput)
}

type MfaPolicyRuleAppExcludeArrayOutput struct{ *pulumi.OutputState }

func (MfaPolicyRuleAppExcludeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MfaPolicyRuleAppExclude)(nil)).Elem()
}

func (o MfaPolicyRuleAppExcludeArrayOutput) ToMfaPolicyRuleAppExcludeArrayOutput() MfaPolicyRuleAppExcludeArrayOutput {
	return o
}

func (o MfaPolicyRuleAppExcludeArrayOutput) ToMfaPolicyRuleAppExcludeArrayOutputWithContext(ctx context.Context) MfaPolicyRuleAppExcludeArrayOutput {
	return o
}

func (o MfaPolicyRuleAppExcludeArrayOutput) Index(i pulumi.IntInput) MfaPolicyRuleAppExcludeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MfaPolicyRuleAppExclude {
		return vs[0].([]MfaPolicyRuleAppExclude)[vs[1].(int)]
	}).(MfaPolicyRuleAppExcludeOutput)
}

type MfaPolicyRuleAppInclude struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
	Type string  `pulumi:"type"`
}

// MfaPolicyRuleAppIncludeInput is an input type that accepts MfaPolicyRuleAppIncludeArgs and MfaPolicyRuleAppIncludeOutput values.
// You can construct a concrete instance of `MfaPolicyRuleAppIncludeInput` via:
//
//          MfaPolicyRuleAppIncludeArgs{...}
type MfaPolicyRuleAppIncludeInput interface {
	pulumi.Input

	ToMfaPolicyRuleAppIncludeOutput() MfaPolicyRuleAppIncludeOutput
	ToMfaPolicyRuleAppIncludeOutputWithContext(context.Context) MfaPolicyRuleAppIncludeOutput
}

type MfaPolicyRuleAppIncludeArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
	Type pulumi.StringInput    `pulumi:"type"`
}

func (MfaPolicyRuleAppIncludeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaPolicyRuleAppInclude)(nil)).Elem()
}

func (i MfaPolicyRuleAppIncludeArgs) ToMfaPolicyRuleAppIncludeOutput() MfaPolicyRuleAppIncludeOutput {
	return i.ToMfaPolicyRuleAppIncludeOutputWithContext(context.Background())
}

func (i MfaPolicyRuleAppIncludeArgs) ToMfaPolicyRuleAppIncludeOutputWithContext(ctx context.Context) MfaPolicyRuleAppIncludeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaPolicyRuleAppIncludeOutput)
}

// MfaPolicyRuleAppIncludeArrayInput is an input type that accepts MfaPolicyRuleAppIncludeArray and MfaPolicyRuleAppIncludeArrayOutput values.
// You can construct a concrete instance of `MfaPolicyRuleAppIncludeArrayInput` via:
//
//          MfaPolicyRuleAppIncludeArray{ MfaPolicyRuleAppIncludeArgs{...} }
type MfaPolicyRuleAppIncludeArrayInput interface {
	pulumi.Input

	ToMfaPolicyRuleAppIncludeArrayOutput() MfaPolicyRuleAppIncludeArrayOutput
	ToMfaPolicyRuleAppIncludeArrayOutputWithContext(context.Context) MfaPolicyRuleAppIncludeArrayOutput
}

type MfaPolicyRuleAppIncludeArray []MfaPolicyRuleAppIncludeInput

func (MfaPolicyRuleAppIncludeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MfaPolicyRuleAppInclude)(nil)).Elem()
}

func (i MfaPolicyRuleAppIncludeArray) ToMfaPolicyRuleAppIncludeArrayOutput() MfaPolicyRuleAppIncludeArrayOutput {
	return i.ToMfaPolicyRuleAppIncludeArrayOutputWithContext(context.Background())
}

func (i MfaPolicyRuleAppIncludeArray) ToMfaPolicyRuleAppIncludeArrayOutputWithContext(ctx context.Context) MfaPolicyRuleAppIncludeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaPolicyRuleAppIncludeArrayOutput)
}

type MfaPolicyRuleAppIncludeOutput struct{ *pulumi.OutputState }

func (MfaPolicyRuleAppIncludeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaPolicyRuleAppInclude)(nil)).Elem()
}

func (o MfaPolicyRuleAppIncludeOutput) ToMfaPolicyRuleAppIncludeOutput() MfaPolicyRuleAppIncludeOutput {
	return o
}

func (o MfaPolicyRuleAppIncludeOutput) ToMfaPolicyRuleAppIncludeOutputWithContext(ctx context.Context) MfaPolicyRuleAppIncludeOutput {
	return o
}

func (o MfaPolicyRuleAppIncludeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaPolicyRuleAppInclude) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o MfaPolicyRuleAppIncludeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MfaPolicyRuleAppInclude) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MfaPolicyRuleAppIncludeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MfaPolicyRuleAppInclude) string { return v.Type }).(pulumi.StringOutput)
}

type MfaPolicyRuleAppIncludeArrayOutput struct{ *pulumi.OutputState }

func (MfaPolicyRuleAppIncludeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MfaPolicyRuleAppInclude)(nil)).Elem()
}

func (o MfaPolicyRuleAppIncludeArrayOutput) ToMfaPolicyRuleAppIncludeArrayOutput() MfaPolicyRuleAppIncludeArrayOutput {
	return o
}

func (o MfaPolicyRuleAppIncludeArrayOutput) ToMfaPolicyRuleAppIncludeArrayOutputWithContext(ctx context.Context) MfaPolicyRuleAppIncludeArrayOutput {
	return o
}

func (o MfaPolicyRuleAppIncludeArrayOutput) Index(i pulumi.IntInput) MfaPolicyRuleAppIncludeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MfaPolicyRuleAppInclude {
		return vs[0].([]MfaPolicyRuleAppInclude)[vs[1].(int)]
	}).(MfaPolicyRuleAppIncludeOutput)
}

type OauthAppGroupsClaim struct {
	FilterType *string `pulumi:"filterType"`
	Name       string  `pulumi:"name"`
	Type       string  `pulumi:"type"`
	Value      string  `pulumi:"value"`
}

// OauthAppGroupsClaimInput is an input type that accepts OauthAppGroupsClaimArgs and OauthAppGroupsClaimOutput values.
// You can construct a concrete instance of `OauthAppGroupsClaimInput` via:
//
//          OauthAppGroupsClaimArgs{...}
type OauthAppGroupsClaimInput interface {
	pulumi.Input

	ToOauthAppGroupsClaimOutput() OauthAppGroupsClaimOutput
	ToOauthAppGroupsClaimOutputWithContext(context.Context) OauthAppGroupsClaimOutput
}

type OauthAppGroupsClaimArgs struct {
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Type       pulumi.StringInput    `pulumi:"type"`
	Value      pulumi.StringInput    `pulumi:"value"`
}

func (OauthAppGroupsClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OauthAppGroupsClaim)(nil)).Elem()
}

func (i OauthAppGroupsClaimArgs) ToOauthAppGroupsClaimOutput() OauthAppGroupsClaimOutput {
	return i.ToOauthAppGroupsClaimOutputWithContext(context.Background())
}

func (i OauthAppGroupsClaimArgs) ToOauthAppGroupsClaimOutputWithContext(ctx context.Context) OauthAppGroupsClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OauthAppGroupsClaimOutput)
}

func (i OauthAppGroupsClaimArgs) ToOauthAppGroupsClaimPtrOutput() OauthAppGroupsClaimPtrOutput {
	return i.ToOauthAppGroupsClaimPtrOutputWithContext(context.Background())
}

func (i OauthAppGroupsClaimArgs) ToOauthAppGroupsClaimPtrOutputWithContext(ctx context.Context) OauthAppGroupsClaimPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OauthAppGroupsClaimOutput).ToOauthAppGroupsClaimPtrOutputWithContext(ctx)
}

// OauthAppGroupsClaimPtrInput is an input type that accepts OauthAppGroupsClaimArgs, OauthAppGroupsClaimPtr and OauthAppGroupsClaimPtrOutput values.
// You can construct a concrete instance of `OauthAppGroupsClaimPtrInput` via:
//
//          OauthAppGroupsClaimArgs{...}
//
//  or:
//
//          nil
type OauthAppGroupsClaimPtrInput interface {
	pulumi.Input

	ToOauthAppGroupsClaimPtrOutput() OauthAppGroupsClaimPtrOutput
	ToOauthAppGroupsClaimPtrOutputWithContext(context.Context) OauthAppGroupsClaimPtrOutput
}

type oauthAppGroupsClaimPtrType OauthAppGroupsClaimArgs

func OauthAppGroupsClaimPtr(v *OauthAppGroupsClaimArgs) OauthAppGroupsClaimPtrInput {
	return (*oauthAppGroupsClaimPtrType)(v)
}

func (*oauthAppGroupsClaimPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OauthAppGroupsClaim)(nil)).Elem()
}

func (i *oauthAppGroupsClaimPtrType) ToOauthAppGroupsClaimPtrOutput() OauthAppGroupsClaimPtrOutput {
	return i.ToOauthAppGroupsClaimPtrOutputWithContext(context.Background())
}

func (i *oauthAppGroupsClaimPtrType) ToOauthAppGroupsClaimPtrOutputWithContext(ctx context.Context) OauthAppGroupsClaimPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OauthAppGroupsClaimPtrOutput)
}

type OauthAppGroupsClaimOutput struct{ *pulumi.OutputState }

func (OauthAppGroupsClaimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OauthAppGroupsClaim)(nil)).Elem()
}

func (o OauthAppGroupsClaimOutput) ToOauthAppGroupsClaimOutput() OauthAppGroupsClaimOutput {
	return o
}

func (o OauthAppGroupsClaimOutput) ToOauthAppGroupsClaimOutputWithContext(ctx context.Context) OauthAppGroupsClaimOutput {
	return o
}

func (o OauthAppGroupsClaimOutput) ToOauthAppGroupsClaimPtrOutput() OauthAppGroupsClaimPtrOutput {
	return o.ToOauthAppGroupsClaimPtrOutputWithContext(context.Background())
}

func (o OauthAppGroupsClaimOutput) ToOauthAppGroupsClaimPtrOutputWithContext(ctx context.Context) OauthAppGroupsClaimPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OauthAppGroupsClaim) *OauthAppGroupsClaim {
		return &v
	}).(OauthAppGroupsClaimPtrOutput)
}

func (o OauthAppGroupsClaimOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OauthAppGroupsClaim) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o OauthAppGroupsClaimOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OauthAppGroupsClaim) string { return v.Name }).(pulumi.StringOutput)
}

func (o OauthAppGroupsClaimOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OauthAppGroupsClaim) string { return v.Type }).(pulumi.StringOutput)
}

func (o OauthAppGroupsClaimOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v OauthAppGroupsClaim) string { return v.Value }).(pulumi.StringOutput)
}

type OauthAppGroupsClaimPtrOutput struct{ *pulumi.OutputState }

func (OauthAppGroupsClaimPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OauthAppGroupsClaim)(nil)).Elem()
}

func (o OauthAppGroupsClaimPtrOutput) ToOauthAppGroupsClaimPtrOutput() OauthAppGroupsClaimPtrOutput {
	return o
}

func (o OauthAppGroupsClaimPtrOutput) ToOauthAppGroupsClaimPtrOutputWithContext(ctx context.Context) OauthAppGroupsClaimPtrOutput {
	return o
}

func (o OauthAppGroupsClaimPtrOutput) Elem() OauthAppGroupsClaimOutput {
	return o.ApplyT(func(v *OauthAppGroupsClaim) OauthAppGroupsClaim {
		if v != nil {
			return *v
		}
		var ret OauthAppGroupsClaim
		return ret
	}).(OauthAppGroupsClaimOutput)
}

func (o OauthAppGroupsClaimPtrOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OauthAppGroupsClaim) *string {
		if v == nil {
			return nil
		}
		return v.FilterType
	}).(pulumi.StringPtrOutput)
}

func (o OauthAppGroupsClaimPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OauthAppGroupsClaim) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o OauthAppGroupsClaimPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OauthAppGroupsClaim) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o OauthAppGroupsClaimPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OauthAppGroupsClaim) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type OauthAppJwk struct {
	E   *string `pulumi:"e"`
	Kid string  `pulumi:"kid"`
	Kty string  `pulumi:"kty"`
	N   *string `pulumi:"n"`
}

// OauthAppJwkInput is an input type that accepts OauthAppJwkArgs and OauthAppJwkOutput values.
// You can construct a concrete instance of `OauthAppJwkInput` via:
//
//          OauthAppJwkArgs{...}
type OauthAppJwkInput interface {
	pulumi.Input

	ToOauthAppJwkOutput() OauthAppJwkOutput
	ToOauthAppJwkOutputWithContext(context.Context) OauthAppJwkOutput
}

type OauthAppJwkArgs struct {
	E   pulumi.StringPtrInput `pulumi:"e"`
	Kid pulumi.StringInput    `pulumi:"kid"`
	Kty pulumi.StringInput    `pulumi:"kty"`
	N   pulumi.StringPtrInput `pulumi:"n"`
}

func (OauthAppJwkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OauthAppJwk)(nil)).Elem()
}

func (i OauthAppJwkArgs) ToOauthAppJwkOutput() OauthAppJwkOutput {
	return i.ToOauthAppJwkOutputWithContext(context.Background())
}

func (i OauthAppJwkArgs) ToOauthAppJwkOutputWithContext(ctx context.Context) OauthAppJwkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OauthAppJwkOutput)
}

// OauthAppJwkArrayInput is an input type that accepts OauthAppJwkArray and OauthAppJwkArrayOutput values.
// You can construct a concrete instance of `OauthAppJwkArrayInput` via:
//
//          OauthAppJwkArray{ OauthAppJwkArgs{...} }
type OauthAppJwkArrayInput interface {
	pulumi.Input

	ToOauthAppJwkArrayOutput() OauthAppJwkArrayOutput
	ToOauthAppJwkArrayOutputWithContext(context.Context) OauthAppJwkArrayOutput
}

type OauthAppJwkArray []OauthAppJwkInput

func (OauthAppJwkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OauthAppJwk)(nil)).Elem()
}

func (i OauthAppJwkArray) ToOauthAppJwkArrayOutput() OauthAppJwkArrayOutput {
	return i.ToOauthAppJwkArrayOutputWithContext(context.Background())
}

func (i OauthAppJwkArray) ToOauthAppJwkArrayOutputWithContext(ctx context.Context) OauthAppJwkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OauthAppJwkArrayOutput)
}

type OauthAppJwkOutput struct{ *pulumi.OutputState }

func (OauthAppJwkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OauthAppJwk)(nil)).Elem()
}

func (o OauthAppJwkOutput) ToOauthAppJwkOutput() OauthAppJwkOutput {
	return o
}

func (o OauthAppJwkOutput) ToOauthAppJwkOutputWithContext(ctx context.Context) OauthAppJwkOutput {
	return o
}

func (o OauthAppJwkOutput) E() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OauthAppJwk) *string { return v.E }).(pulumi.StringPtrOutput)
}

func (o OauthAppJwkOutput) Kid() pulumi.StringOutput {
	return o.ApplyT(func(v OauthAppJwk) string { return v.Kid }).(pulumi.StringOutput)
}

func (o OauthAppJwkOutput) Kty() pulumi.StringOutput {
	return o.ApplyT(func(v OauthAppJwk) string { return v.Kty }).(pulumi.StringOutput)
}

func (o OauthAppJwkOutput) N() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OauthAppJwk) *string { return v.N }).(pulumi.StringPtrOutput)
}

type OauthAppJwkArrayOutput struct{ *pulumi.OutputState }

func (OauthAppJwkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OauthAppJwk)(nil)).Elem()
}

func (o OauthAppJwkArrayOutput) ToOauthAppJwkArrayOutput() OauthAppJwkArrayOutput {
	return o
}

func (o OauthAppJwkArrayOutput) ToOauthAppJwkArrayOutputWithContext(ctx context.Context) OauthAppJwkArrayOutput {
	return o
}

func (o OauthAppJwkArrayOutput) Index(i pulumi.IntInput) OauthAppJwkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OauthAppJwk {
		return vs[0].([]OauthAppJwk)[vs[1].(int)]
	}).(OauthAppJwkOutput)
}

type OauthAppUser struct {
	Id       *string `pulumi:"id"`
	Password *string `pulumi:"password"`
	Scope    *string `pulumi:"scope"`
	Username *string `pulumi:"username"`
}

// OauthAppUserInput is an input type that accepts OauthAppUserArgs and OauthAppUserOutput values.
// You can construct a concrete instance of `OauthAppUserInput` via:
//
//          OauthAppUserArgs{...}
type OauthAppUserInput interface {
	pulumi.Input

	ToOauthAppUserOutput() OauthAppUserOutput
	ToOauthAppUserOutputWithContext(context.Context) OauthAppUserOutput
}

type OauthAppUserArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Password pulumi.StringPtrInput `pulumi:"password"`
	Scope    pulumi.StringPtrInput `pulumi:"scope"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (OauthAppUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OauthAppUser)(nil)).Elem()
}

func (i OauthAppUserArgs) ToOauthAppUserOutput() OauthAppUserOutput {
	return i.ToOauthAppUserOutputWithContext(context.Background())
}

func (i OauthAppUserArgs) ToOauthAppUserOutputWithContext(ctx context.Context) OauthAppUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OauthAppUserOutput)
}

// OauthAppUserArrayInput is an input type that accepts OauthAppUserArray and OauthAppUserArrayOutput values.
// You can construct a concrete instance of `OauthAppUserArrayInput` via:
//
//          OauthAppUserArray{ OauthAppUserArgs{...} }
type OauthAppUserArrayInput interface {
	pulumi.Input

	ToOauthAppUserArrayOutput() OauthAppUserArrayOutput
	ToOauthAppUserArrayOutputWithContext(context.Context) OauthAppUserArrayOutput
}

type OauthAppUserArray []OauthAppUserInput

func (OauthAppUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OauthAppUser)(nil)).Elem()
}

func (i OauthAppUserArray) ToOauthAppUserArrayOutput() OauthAppUserArrayOutput {
	return i.ToOauthAppUserArrayOutputWithContext(context.Background())
}

func (i OauthAppUserArray) ToOauthAppUserArrayOutputWithContext(ctx context.Context) OauthAppUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OauthAppUserArrayOutput)
}

type OauthAppUserOutput struct{ *pulumi.OutputState }

func (OauthAppUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OauthAppUser)(nil)).Elem()
}

func (o OauthAppUserOutput) ToOauthAppUserOutput() OauthAppUserOutput {
	return o
}

func (o OauthAppUserOutput) ToOauthAppUserOutputWithContext(ctx context.Context) OauthAppUserOutput {
	return o
}

func (o OauthAppUserOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OauthAppUser) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o OauthAppUserOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OauthAppUser) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o OauthAppUserOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OauthAppUser) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o OauthAppUserOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OauthAppUser) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type OauthAppUserArrayOutput struct{ *pulumi.OutputState }

func (OauthAppUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OauthAppUser)(nil)).Elem()
}

func (o OauthAppUserArrayOutput) ToOauthAppUserArrayOutput() OauthAppUserArrayOutput {
	return o
}

func (o OauthAppUserArrayOutput) ToOauthAppUserArrayOutputWithContext(ctx context.Context) OauthAppUserArrayOutput {
	return o
}

func (o OauthAppUserArrayOutput) Index(i pulumi.IntInput) OauthAppUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OauthAppUser {
		return vs[0].([]OauthAppUser)[vs[1].(int)]
	}).(OauthAppUserOutput)
}

type SamlAppAttributeStatement struct {
	FilterType  *string  `pulumi:"filterType"`
	FilterValue *string  `pulumi:"filterValue"`
	Name        string   `pulumi:"name"`
	Namespace   *string  `pulumi:"namespace"`
	Type        *string  `pulumi:"type"`
	Values      []string `pulumi:"values"`
}

// SamlAppAttributeStatementInput is an input type that accepts SamlAppAttributeStatementArgs and SamlAppAttributeStatementOutput values.
// You can construct a concrete instance of `SamlAppAttributeStatementInput` via:
//
//          SamlAppAttributeStatementArgs{...}
type SamlAppAttributeStatementInput interface {
	pulumi.Input

	ToSamlAppAttributeStatementOutput() SamlAppAttributeStatementOutput
	ToSamlAppAttributeStatementOutputWithContext(context.Context) SamlAppAttributeStatementOutput
}

type SamlAppAttributeStatementArgs struct {
	FilterType  pulumi.StringPtrInput   `pulumi:"filterType"`
	FilterValue pulumi.StringPtrInput   `pulumi:"filterValue"`
	Name        pulumi.StringInput      `pulumi:"name"`
	Namespace   pulumi.StringPtrInput   `pulumi:"namespace"`
	Type        pulumi.StringPtrInput   `pulumi:"type"`
	Values      pulumi.StringArrayInput `pulumi:"values"`
}

func (SamlAppAttributeStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlAppAttributeStatement)(nil)).Elem()
}

func (i SamlAppAttributeStatementArgs) ToSamlAppAttributeStatementOutput() SamlAppAttributeStatementOutput {
	return i.ToSamlAppAttributeStatementOutputWithContext(context.Background())
}

func (i SamlAppAttributeStatementArgs) ToSamlAppAttributeStatementOutputWithContext(ctx context.Context) SamlAppAttributeStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlAppAttributeStatementOutput)
}

// SamlAppAttributeStatementArrayInput is an input type that accepts SamlAppAttributeStatementArray and SamlAppAttributeStatementArrayOutput values.
// You can construct a concrete instance of `SamlAppAttributeStatementArrayInput` via:
//
//          SamlAppAttributeStatementArray{ SamlAppAttributeStatementArgs{...} }
type SamlAppAttributeStatementArrayInput interface {
	pulumi.Input

	ToSamlAppAttributeStatementArrayOutput() SamlAppAttributeStatementArrayOutput
	ToSamlAppAttributeStatementArrayOutputWithContext(context.Context) SamlAppAttributeStatementArrayOutput
}

type SamlAppAttributeStatementArray []SamlAppAttributeStatementInput

func (SamlAppAttributeStatementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlAppAttributeStatement)(nil)).Elem()
}

func (i SamlAppAttributeStatementArray) ToSamlAppAttributeStatementArrayOutput() SamlAppAttributeStatementArrayOutput {
	return i.ToSamlAppAttributeStatementArrayOutputWithContext(context.Background())
}

func (i SamlAppAttributeStatementArray) ToSamlAppAttributeStatementArrayOutputWithContext(ctx context.Context) SamlAppAttributeStatementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlAppAttributeStatementArrayOutput)
}

type SamlAppAttributeStatementOutput struct{ *pulumi.OutputState }

func (SamlAppAttributeStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlAppAttributeStatement)(nil)).Elem()
}

func (o SamlAppAttributeStatementOutput) ToSamlAppAttributeStatementOutput() SamlAppAttributeStatementOutput {
	return o
}

func (o SamlAppAttributeStatementOutput) ToSamlAppAttributeStatementOutputWithContext(ctx context.Context) SamlAppAttributeStatementOutput {
	return o
}

func (o SamlAppAttributeStatementOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppAttributeStatement) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o SamlAppAttributeStatementOutput) FilterValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppAttributeStatement) *string { return v.FilterValue }).(pulumi.StringPtrOutput)
}

func (o SamlAppAttributeStatementOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SamlAppAttributeStatement) string { return v.Name }).(pulumi.StringOutput)
}

func (o SamlAppAttributeStatementOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppAttributeStatement) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o SamlAppAttributeStatementOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppAttributeStatement) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o SamlAppAttributeStatementOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SamlAppAttributeStatement) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type SamlAppAttributeStatementArrayOutput struct{ *pulumi.OutputState }

func (SamlAppAttributeStatementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlAppAttributeStatement)(nil)).Elem()
}

func (o SamlAppAttributeStatementArrayOutput) ToSamlAppAttributeStatementArrayOutput() SamlAppAttributeStatementArrayOutput {
	return o
}

func (o SamlAppAttributeStatementArrayOutput) ToSamlAppAttributeStatementArrayOutputWithContext(ctx context.Context) SamlAppAttributeStatementArrayOutput {
	return o
}

func (o SamlAppAttributeStatementArrayOutput) Index(i pulumi.IntInput) SamlAppAttributeStatementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SamlAppAttributeStatement {
		return vs[0].([]SamlAppAttributeStatement)[vs[1].(int)]
	}).(SamlAppAttributeStatementOutput)
}

type SamlAppUser struct {
	Id       *string `pulumi:"id"`
	Password *string `pulumi:"password"`
	Scope    *string `pulumi:"scope"`
	Username *string `pulumi:"username"`
}

// SamlAppUserInput is an input type that accepts SamlAppUserArgs and SamlAppUserOutput values.
// You can construct a concrete instance of `SamlAppUserInput` via:
//
//          SamlAppUserArgs{...}
type SamlAppUserInput interface {
	pulumi.Input

	ToSamlAppUserOutput() SamlAppUserOutput
	ToSamlAppUserOutputWithContext(context.Context) SamlAppUserOutput
}

type SamlAppUserArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Password pulumi.StringPtrInput `pulumi:"password"`
	Scope    pulumi.StringPtrInput `pulumi:"scope"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (SamlAppUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlAppUser)(nil)).Elem()
}

func (i SamlAppUserArgs) ToSamlAppUserOutput() SamlAppUserOutput {
	return i.ToSamlAppUserOutputWithContext(context.Background())
}

func (i SamlAppUserArgs) ToSamlAppUserOutputWithContext(ctx context.Context) SamlAppUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlAppUserOutput)
}

// SamlAppUserArrayInput is an input type that accepts SamlAppUserArray and SamlAppUserArrayOutput values.
// You can construct a concrete instance of `SamlAppUserArrayInput` via:
//
//          SamlAppUserArray{ SamlAppUserArgs{...} }
type SamlAppUserArrayInput interface {
	pulumi.Input

	ToSamlAppUserArrayOutput() SamlAppUserArrayOutput
	ToSamlAppUserArrayOutputWithContext(context.Context) SamlAppUserArrayOutput
}

type SamlAppUserArray []SamlAppUserInput

func (SamlAppUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlAppUser)(nil)).Elem()
}

func (i SamlAppUserArray) ToSamlAppUserArrayOutput() SamlAppUserArrayOutput {
	return i.ToSamlAppUserArrayOutputWithContext(context.Background())
}

func (i SamlAppUserArray) ToSamlAppUserArrayOutputWithContext(ctx context.Context) SamlAppUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlAppUserArrayOutput)
}

type SamlAppUserOutput struct{ *pulumi.OutputState }

func (SamlAppUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlAppUser)(nil)).Elem()
}

func (o SamlAppUserOutput) ToSamlAppUserOutput() SamlAppUserOutput {
	return o
}

func (o SamlAppUserOutput) ToSamlAppUserOutputWithContext(ctx context.Context) SamlAppUserOutput {
	return o
}

func (o SamlAppUserOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppUser) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o SamlAppUserOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppUser) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o SamlAppUserOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppUser) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o SamlAppUserOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppUser) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type SamlAppUserArrayOutput struct{ *pulumi.OutputState }

func (SamlAppUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlAppUser)(nil)).Elem()
}

func (o SamlAppUserArrayOutput) ToSamlAppUserArrayOutput() SamlAppUserArrayOutput {
	return o
}

func (o SamlAppUserArrayOutput) ToSamlAppUserArrayOutputWithContext(ctx context.Context) SamlAppUserArrayOutput {
	return o
}

func (o SamlAppUserArrayOutput) Index(i pulumi.IntInput) SamlAppUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SamlAppUser {
		return vs[0].([]SamlAppUser)[vs[1].(int)]
	}).(SamlAppUserOutput)
}

type SecurePasswordStoreAppUser struct {
	Id       *string `pulumi:"id"`
	Password *string `pulumi:"password"`
	Scope    *string `pulumi:"scope"`
	Username *string `pulumi:"username"`
}

// SecurePasswordStoreAppUserInput is an input type that accepts SecurePasswordStoreAppUserArgs and SecurePasswordStoreAppUserOutput values.
// You can construct a concrete instance of `SecurePasswordStoreAppUserInput` via:
//
//          SecurePasswordStoreAppUserArgs{...}
type SecurePasswordStoreAppUserInput interface {
	pulumi.Input

	ToSecurePasswordStoreAppUserOutput() SecurePasswordStoreAppUserOutput
	ToSecurePasswordStoreAppUserOutputWithContext(context.Context) SecurePasswordStoreAppUserOutput
}

type SecurePasswordStoreAppUserArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Password pulumi.StringPtrInput `pulumi:"password"`
	Scope    pulumi.StringPtrInput `pulumi:"scope"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (SecurePasswordStoreAppUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurePasswordStoreAppUser)(nil)).Elem()
}

func (i SecurePasswordStoreAppUserArgs) ToSecurePasswordStoreAppUserOutput() SecurePasswordStoreAppUserOutput {
	return i.ToSecurePasswordStoreAppUserOutputWithContext(context.Background())
}

func (i SecurePasswordStoreAppUserArgs) ToSecurePasswordStoreAppUserOutputWithContext(ctx context.Context) SecurePasswordStoreAppUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurePasswordStoreAppUserOutput)
}

// SecurePasswordStoreAppUserArrayInput is an input type that accepts SecurePasswordStoreAppUserArray and SecurePasswordStoreAppUserArrayOutput values.
// You can construct a concrete instance of `SecurePasswordStoreAppUserArrayInput` via:
//
//          SecurePasswordStoreAppUserArray{ SecurePasswordStoreAppUserArgs{...} }
type SecurePasswordStoreAppUserArrayInput interface {
	pulumi.Input

	ToSecurePasswordStoreAppUserArrayOutput() SecurePasswordStoreAppUserArrayOutput
	ToSecurePasswordStoreAppUserArrayOutputWithContext(context.Context) SecurePasswordStoreAppUserArrayOutput
}

type SecurePasswordStoreAppUserArray []SecurePasswordStoreAppUserInput

func (SecurePasswordStoreAppUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurePasswordStoreAppUser)(nil)).Elem()
}

func (i SecurePasswordStoreAppUserArray) ToSecurePasswordStoreAppUserArrayOutput() SecurePasswordStoreAppUserArrayOutput {
	return i.ToSecurePasswordStoreAppUserArrayOutputWithContext(context.Background())
}

func (i SecurePasswordStoreAppUserArray) ToSecurePasswordStoreAppUserArrayOutputWithContext(ctx context.Context) SecurePasswordStoreAppUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurePasswordStoreAppUserArrayOutput)
}

type SecurePasswordStoreAppUserOutput struct{ *pulumi.OutputState }

func (SecurePasswordStoreAppUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurePasswordStoreAppUser)(nil)).Elem()
}

func (o SecurePasswordStoreAppUserOutput) ToSecurePasswordStoreAppUserOutput() SecurePasswordStoreAppUserOutput {
	return o
}

func (o SecurePasswordStoreAppUserOutput) ToSecurePasswordStoreAppUserOutputWithContext(ctx context.Context) SecurePasswordStoreAppUserOutput {
	return o
}

func (o SecurePasswordStoreAppUserOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurePasswordStoreAppUser) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o SecurePasswordStoreAppUserOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurePasswordStoreAppUser) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o SecurePasswordStoreAppUserOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurePasswordStoreAppUser) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o SecurePasswordStoreAppUserOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurePasswordStoreAppUser) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type SecurePasswordStoreAppUserArrayOutput struct{ *pulumi.OutputState }

func (SecurePasswordStoreAppUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurePasswordStoreAppUser)(nil)).Elem()
}

func (o SecurePasswordStoreAppUserArrayOutput) ToSecurePasswordStoreAppUserArrayOutput() SecurePasswordStoreAppUserArrayOutput {
	return o
}

func (o SecurePasswordStoreAppUserArrayOutput) ToSecurePasswordStoreAppUserArrayOutputWithContext(ctx context.Context) SecurePasswordStoreAppUserArrayOutput {
	return o
}

func (o SecurePasswordStoreAppUserArrayOutput) Index(i pulumi.IntInput) SecurePasswordStoreAppUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurePasswordStoreAppUser {
		return vs[0].([]SecurePasswordStoreAppUser)[vs[1].(int)]
	}).(SecurePasswordStoreAppUserOutput)
}

type SignonPolicyRuleFactorSequence struct {
	PrimaryCriteriaFactorType string                                            `pulumi:"primaryCriteriaFactorType"`
	PrimaryCriteriaProvider   string                                            `pulumi:"primaryCriteriaProvider"`
	SecondaryCriterias        []SignonPolicyRuleFactorSequenceSecondaryCriteria `pulumi:"secondaryCriterias"`
}

// SignonPolicyRuleFactorSequenceInput is an input type that accepts SignonPolicyRuleFactorSequenceArgs and SignonPolicyRuleFactorSequenceOutput values.
// You can construct a concrete instance of `SignonPolicyRuleFactorSequenceInput` via:
//
//          SignonPolicyRuleFactorSequenceArgs{...}
type SignonPolicyRuleFactorSequenceInput interface {
	pulumi.Input

	ToSignonPolicyRuleFactorSequenceOutput() SignonPolicyRuleFactorSequenceOutput
	ToSignonPolicyRuleFactorSequenceOutputWithContext(context.Context) SignonPolicyRuleFactorSequenceOutput
}

type SignonPolicyRuleFactorSequenceArgs struct {
	PrimaryCriteriaFactorType pulumi.StringInput                                        `pulumi:"primaryCriteriaFactorType"`
	PrimaryCriteriaProvider   pulumi.StringInput                                        `pulumi:"primaryCriteriaProvider"`
	SecondaryCriterias        SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayInput `pulumi:"secondaryCriterias"`
}

func (SignonPolicyRuleFactorSequenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SignonPolicyRuleFactorSequence)(nil)).Elem()
}

func (i SignonPolicyRuleFactorSequenceArgs) ToSignonPolicyRuleFactorSequenceOutput() SignonPolicyRuleFactorSequenceOutput {
	return i.ToSignonPolicyRuleFactorSequenceOutputWithContext(context.Background())
}

func (i SignonPolicyRuleFactorSequenceArgs) ToSignonPolicyRuleFactorSequenceOutputWithContext(ctx context.Context) SignonPolicyRuleFactorSequenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SignonPolicyRuleFactorSequenceOutput)
}

// SignonPolicyRuleFactorSequenceArrayInput is an input type that accepts SignonPolicyRuleFactorSequenceArray and SignonPolicyRuleFactorSequenceArrayOutput values.
// You can construct a concrete instance of `SignonPolicyRuleFactorSequenceArrayInput` via:
//
//          SignonPolicyRuleFactorSequenceArray{ SignonPolicyRuleFactorSequenceArgs{...} }
type SignonPolicyRuleFactorSequenceArrayInput interface {
	pulumi.Input

	ToSignonPolicyRuleFactorSequenceArrayOutput() SignonPolicyRuleFactorSequenceArrayOutput
	ToSignonPolicyRuleFactorSequenceArrayOutputWithContext(context.Context) SignonPolicyRuleFactorSequenceArrayOutput
}

type SignonPolicyRuleFactorSequenceArray []SignonPolicyRuleFactorSequenceInput

func (SignonPolicyRuleFactorSequenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SignonPolicyRuleFactorSequence)(nil)).Elem()
}

func (i SignonPolicyRuleFactorSequenceArray) ToSignonPolicyRuleFactorSequenceArrayOutput() SignonPolicyRuleFactorSequenceArrayOutput {
	return i.ToSignonPolicyRuleFactorSequenceArrayOutputWithContext(context.Background())
}

func (i SignonPolicyRuleFactorSequenceArray) ToSignonPolicyRuleFactorSequenceArrayOutputWithContext(ctx context.Context) SignonPolicyRuleFactorSequenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SignonPolicyRuleFactorSequenceArrayOutput)
}

type SignonPolicyRuleFactorSequenceOutput struct{ *pulumi.OutputState }

func (SignonPolicyRuleFactorSequenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SignonPolicyRuleFactorSequence)(nil)).Elem()
}

func (o SignonPolicyRuleFactorSequenceOutput) ToSignonPolicyRuleFactorSequenceOutput() SignonPolicyRuleFactorSequenceOutput {
	return o
}

func (o SignonPolicyRuleFactorSequenceOutput) ToSignonPolicyRuleFactorSequenceOutputWithContext(ctx context.Context) SignonPolicyRuleFactorSequenceOutput {
	return o
}

func (o SignonPolicyRuleFactorSequenceOutput) PrimaryCriteriaFactorType() pulumi.StringOutput {
	return o.ApplyT(func(v SignonPolicyRuleFactorSequence) string { return v.PrimaryCriteriaFactorType }).(pulumi.StringOutput)
}

func (o SignonPolicyRuleFactorSequenceOutput) PrimaryCriteriaProvider() pulumi.StringOutput {
	return o.ApplyT(func(v SignonPolicyRuleFactorSequence) string { return v.PrimaryCriteriaProvider }).(pulumi.StringOutput)
}

func (o SignonPolicyRuleFactorSequenceOutput) SecondaryCriterias() SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput {
	return o.ApplyT(func(v SignonPolicyRuleFactorSequence) []SignonPolicyRuleFactorSequenceSecondaryCriteria {
		return v.SecondaryCriterias
	}).(SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput)
}

type SignonPolicyRuleFactorSequenceArrayOutput struct{ *pulumi.OutputState }

func (SignonPolicyRuleFactorSequenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SignonPolicyRuleFactorSequence)(nil)).Elem()
}

func (o SignonPolicyRuleFactorSequenceArrayOutput) ToSignonPolicyRuleFactorSequenceArrayOutput() SignonPolicyRuleFactorSequenceArrayOutput {
	return o
}

func (o SignonPolicyRuleFactorSequenceArrayOutput) ToSignonPolicyRuleFactorSequenceArrayOutputWithContext(ctx context.Context) SignonPolicyRuleFactorSequenceArrayOutput {
	return o
}

func (o SignonPolicyRuleFactorSequenceArrayOutput) Index(i pulumi.IntInput) SignonPolicyRuleFactorSequenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SignonPolicyRuleFactorSequence {
		return vs[0].([]SignonPolicyRuleFactorSequence)[vs[1].(int)]
	}).(SignonPolicyRuleFactorSequenceOutput)
}

type SignonPolicyRuleFactorSequenceSecondaryCriteria struct {
	FactorType string `pulumi:"factorType"`
	Provider   string `pulumi:"provider"`
}

// SignonPolicyRuleFactorSequenceSecondaryCriteriaInput is an input type that accepts SignonPolicyRuleFactorSequenceSecondaryCriteriaArgs and SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput values.
// You can construct a concrete instance of `SignonPolicyRuleFactorSequenceSecondaryCriteriaInput` via:
//
//          SignonPolicyRuleFactorSequenceSecondaryCriteriaArgs{...}
type SignonPolicyRuleFactorSequenceSecondaryCriteriaInput interface {
	pulumi.Input

	ToSignonPolicyRuleFactorSequenceSecondaryCriteriaOutput() SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput
	ToSignonPolicyRuleFactorSequenceSecondaryCriteriaOutputWithContext(context.Context) SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput
}

type SignonPolicyRuleFactorSequenceSecondaryCriteriaArgs struct {
	FactorType pulumi.StringInput `pulumi:"factorType"`
	Provider   pulumi.StringInput `pulumi:"provider"`
}

func (SignonPolicyRuleFactorSequenceSecondaryCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SignonPolicyRuleFactorSequenceSecondaryCriteria)(nil)).Elem()
}

func (i SignonPolicyRuleFactorSequenceSecondaryCriteriaArgs) ToSignonPolicyRuleFactorSequenceSecondaryCriteriaOutput() SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput {
	return i.ToSignonPolicyRuleFactorSequenceSecondaryCriteriaOutputWithContext(context.Background())
}

func (i SignonPolicyRuleFactorSequenceSecondaryCriteriaArgs) ToSignonPolicyRuleFactorSequenceSecondaryCriteriaOutputWithContext(ctx context.Context) SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput)
}

// SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayInput is an input type that accepts SignonPolicyRuleFactorSequenceSecondaryCriteriaArray and SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput values.
// You can construct a concrete instance of `SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayInput` via:
//
//          SignonPolicyRuleFactorSequenceSecondaryCriteriaArray{ SignonPolicyRuleFactorSequenceSecondaryCriteriaArgs{...} }
type SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayInput interface {
	pulumi.Input

	ToSignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput() SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput
	ToSignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutputWithContext(context.Context) SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput
}

type SignonPolicyRuleFactorSequenceSecondaryCriteriaArray []SignonPolicyRuleFactorSequenceSecondaryCriteriaInput

func (SignonPolicyRuleFactorSequenceSecondaryCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SignonPolicyRuleFactorSequenceSecondaryCriteria)(nil)).Elem()
}

func (i SignonPolicyRuleFactorSequenceSecondaryCriteriaArray) ToSignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput() SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput {
	return i.ToSignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutputWithContext(context.Background())
}

func (i SignonPolicyRuleFactorSequenceSecondaryCriteriaArray) ToSignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutputWithContext(ctx context.Context) SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput)
}

type SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput struct{ *pulumi.OutputState }

func (SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SignonPolicyRuleFactorSequenceSecondaryCriteria)(nil)).Elem()
}

func (o SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput) ToSignonPolicyRuleFactorSequenceSecondaryCriteriaOutput() SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput {
	return o
}

func (o SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput) ToSignonPolicyRuleFactorSequenceSecondaryCriteriaOutputWithContext(ctx context.Context) SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput {
	return o
}

func (o SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput) FactorType() pulumi.StringOutput {
	return o.ApplyT(func(v SignonPolicyRuleFactorSequenceSecondaryCriteria) string { return v.FactorType }).(pulumi.StringOutput)
}

func (o SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v SignonPolicyRuleFactorSequenceSecondaryCriteria) string { return v.Provider }).(pulumi.StringOutput)
}

type SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput struct{ *pulumi.OutputState }

func (SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SignonPolicyRuleFactorSequenceSecondaryCriteria)(nil)).Elem()
}

func (o SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput) ToSignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput() SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput {
	return o
}

func (o SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput) ToSignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutputWithContext(ctx context.Context) SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput {
	return o
}

func (o SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput) Index(i pulumi.IntInput) SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SignonPolicyRuleFactorSequenceSecondaryCriteria {
		return vs[0].([]SignonPolicyRuleFactorSequenceSecondaryCriteria)[vs[1].(int)]
	}).(SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput)
}

type SwaAppUser struct {
	Id       *string `pulumi:"id"`
	Password *string `pulumi:"password"`
	Scope    *string `pulumi:"scope"`
	Username *string `pulumi:"username"`
}

// SwaAppUserInput is an input type that accepts SwaAppUserArgs and SwaAppUserOutput values.
// You can construct a concrete instance of `SwaAppUserInput` via:
//
//          SwaAppUserArgs{...}
type SwaAppUserInput interface {
	pulumi.Input

	ToSwaAppUserOutput() SwaAppUserOutput
	ToSwaAppUserOutputWithContext(context.Context) SwaAppUserOutput
}

type SwaAppUserArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Password pulumi.StringPtrInput `pulumi:"password"`
	Scope    pulumi.StringPtrInput `pulumi:"scope"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (SwaAppUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwaAppUser)(nil)).Elem()
}

func (i SwaAppUserArgs) ToSwaAppUserOutput() SwaAppUserOutput {
	return i.ToSwaAppUserOutputWithContext(context.Background())
}

func (i SwaAppUserArgs) ToSwaAppUserOutputWithContext(ctx context.Context) SwaAppUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwaAppUserOutput)
}

// SwaAppUserArrayInput is an input type that accepts SwaAppUserArray and SwaAppUserArrayOutput values.
// You can construct a concrete instance of `SwaAppUserArrayInput` via:
//
//          SwaAppUserArray{ SwaAppUserArgs{...} }
type SwaAppUserArrayInput interface {
	pulumi.Input

	ToSwaAppUserArrayOutput() SwaAppUserArrayOutput
	ToSwaAppUserArrayOutputWithContext(context.Context) SwaAppUserArrayOutput
}

type SwaAppUserArray []SwaAppUserInput

func (SwaAppUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwaAppUser)(nil)).Elem()
}

func (i SwaAppUserArray) ToSwaAppUserArrayOutput() SwaAppUserArrayOutput {
	return i.ToSwaAppUserArrayOutputWithContext(context.Background())
}

func (i SwaAppUserArray) ToSwaAppUserArrayOutputWithContext(ctx context.Context) SwaAppUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwaAppUserArrayOutput)
}

type SwaAppUserOutput struct{ *pulumi.OutputState }

func (SwaAppUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwaAppUser)(nil)).Elem()
}

func (o SwaAppUserOutput) ToSwaAppUserOutput() SwaAppUserOutput {
	return o
}

func (o SwaAppUserOutput) ToSwaAppUserOutputWithContext(ctx context.Context) SwaAppUserOutput {
	return o
}

func (o SwaAppUserOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwaAppUser) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o SwaAppUserOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwaAppUser) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o SwaAppUserOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwaAppUser) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o SwaAppUserOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwaAppUser) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type SwaAppUserArrayOutput struct{ *pulumi.OutputState }

func (SwaAppUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwaAppUser)(nil)).Elem()
}

func (o SwaAppUserArrayOutput) ToSwaAppUserArrayOutput() SwaAppUserArrayOutput {
	return o
}

func (o SwaAppUserArrayOutput) ToSwaAppUserArrayOutputWithContext(ctx context.Context) SwaAppUserArrayOutput {
	return o
}

func (o SwaAppUserArrayOutput) Index(i pulumi.IntInput) SwaAppUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwaAppUser {
		return vs[0].([]SwaAppUser)[vs[1].(int)]
	}).(SwaAppUserOutput)
}

type ThreeFieldAppUser struct {
	Id       *string `pulumi:"id"`
	Password *string `pulumi:"password"`
	Scope    *string `pulumi:"scope"`
	Username *string `pulumi:"username"`
}

// ThreeFieldAppUserInput is an input type that accepts ThreeFieldAppUserArgs and ThreeFieldAppUserOutput values.
// You can construct a concrete instance of `ThreeFieldAppUserInput` via:
//
//          ThreeFieldAppUserArgs{...}
type ThreeFieldAppUserInput interface {
	pulumi.Input

	ToThreeFieldAppUserOutput() ThreeFieldAppUserOutput
	ToThreeFieldAppUserOutputWithContext(context.Context) ThreeFieldAppUserOutput
}

type ThreeFieldAppUserArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Password pulumi.StringPtrInput `pulumi:"password"`
	Scope    pulumi.StringPtrInput `pulumi:"scope"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ThreeFieldAppUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreeFieldAppUser)(nil)).Elem()
}

func (i ThreeFieldAppUserArgs) ToThreeFieldAppUserOutput() ThreeFieldAppUserOutput {
	return i.ToThreeFieldAppUserOutputWithContext(context.Background())
}

func (i ThreeFieldAppUserArgs) ToThreeFieldAppUserOutputWithContext(ctx context.Context) ThreeFieldAppUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreeFieldAppUserOutput)
}

// ThreeFieldAppUserArrayInput is an input type that accepts ThreeFieldAppUserArray and ThreeFieldAppUserArrayOutput values.
// You can construct a concrete instance of `ThreeFieldAppUserArrayInput` via:
//
//          ThreeFieldAppUserArray{ ThreeFieldAppUserArgs{...} }
type ThreeFieldAppUserArrayInput interface {
	pulumi.Input

	ToThreeFieldAppUserArrayOutput() ThreeFieldAppUserArrayOutput
	ToThreeFieldAppUserArrayOutputWithContext(context.Context) ThreeFieldAppUserArrayOutput
}

type ThreeFieldAppUserArray []ThreeFieldAppUserInput

func (ThreeFieldAppUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreeFieldAppUser)(nil)).Elem()
}

func (i ThreeFieldAppUserArray) ToThreeFieldAppUserArrayOutput() ThreeFieldAppUserArrayOutput {
	return i.ToThreeFieldAppUserArrayOutputWithContext(context.Background())
}

func (i ThreeFieldAppUserArray) ToThreeFieldAppUserArrayOutputWithContext(ctx context.Context) ThreeFieldAppUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreeFieldAppUserArrayOutput)
}

type ThreeFieldAppUserOutput struct{ *pulumi.OutputState }

func (ThreeFieldAppUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreeFieldAppUser)(nil)).Elem()
}

func (o ThreeFieldAppUserOutput) ToThreeFieldAppUserOutput() ThreeFieldAppUserOutput {
	return o
}

func (o ThreeFieldAppUserOutput) ToThreeFieldAppUserOutputWithContext(ctx context.Context) ThreeFieldAppUserOutput {
	return o
}

func (o ThreeFieldAppUserOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreeFieldAppUser) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ThreeFieldAppUserOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreeFieldAppUser) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ThreeFieldAppUserOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreeFieldAppUser) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o ThreeFieldAppUserOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreeFieldAppUser) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ThreeFieldAppUserArrayOutput struct{ *pulumi.OutputState }

func (ThreeFieldAppUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreeFieldAppUser)(nil)).Elem()
}

func (o ThreeFieldAppUserArrayOutput) ToThreeFieldAppUserArrayOutput() ThreeFieldAppUserArrayOutput {
	return o
}

func (o ThreeFieldAppUserArrayOutput) ToThreeFieldAppUserArrayOutputWithContext(ctx context.Context) ThreeFieldAppUserArrayOutput {
	return o
}

func (o ThreeFieldAppUserArrayOutput) Index(i pulumi.IntInput) ThreeFieldAppUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreeFieldAppUser {
		return vs[0].([]ThreeFieldAppUser)[vs[1].(int)]
	}).(ThreeFieldAppUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthLoginAppUserInput)(nil)).Elem(), AuthLoginAppUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthLoginAppUserArrayInput)(nil)).Elem(), AuthLoginAppUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BookmarkAppUserInput)(nil)).Elem(), BookmarkAppUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BookmarkAppUserArrayInput)(nil)).Elem(), BookmarkAppUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MfaPolicyRuleAppExcludeInput)(nil)).Elem(), MfaPolicyRuleAppExcludeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MfaPolicyRuleAppExcludeArrayInput)(nil)).Elem(), MfaPolicyRuleAppExcludeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MfaPolicyRuleAppIncludeInput)(nil)).Elem(), MfaPolicyRuleAppIncludeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MfaPolicyRuleAppIncludeArrayInput)(nil)).Elem(), MfaPolicyRuleAppIncludeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OauthAppGroupsClaimInput)(nil)).Elem(), OauthAppGroupsClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OauthAppGroupsClaimPtrInput)(nil)).Elem(), OauthAppGroupsClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OauthAppJwkInput)(nil)).Elem(), OauthAppJwkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OauthAppJwkArrayInput)(nil)).Elem(), OauthAppJwkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OauthAppUserInput)(nil)).Elem(), OauthAppUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OauthAppUserArrayInput)(nil)).Elem(), OauthAppUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlAppAttributeStatementInput)(nil)).Elem(), SamlAppAttributeStatementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlAppAttributeStatementArrayInput)(nil)).Elem(), SamlAppAttributeStatementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlAppUserInput)(nil)).Elem(), SamlAppUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlAppUserArrayInput)(nil)).Elem(), SamlAppUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurePasswordStoreAppUserInput)(nil)).Elem(), SecurePasswordStoreAppUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurePasswordStoreAppUserArrayInput)(nil)).Elem(), SecurePasswordStoreAppUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SignonPolicyRuleFactorSequenceInput)(nil)).Elem(), SignonPolicyRuleFactorSequenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SignonPolicyRuleFactorSequenceArrayInput)(nil)).Elem(), SignonPolicyRuleFactorSequenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SignonPolicyRuleFactorSequenceSecondaryCriteriaInput)(nil)).Elem(), SignonPolicyRuleFactorSequenceSecondaryCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayInput)(nil)).Elem(), SignonPolicyRuleFactorSequenceSecondaryCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwaAppUserInput)(nil)).Elem(), SwaAppUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwaAppUserArrayInput)(nil)).Elem(), SwaAppUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreeFieldAppUserInput)(nil)).Elem(), ThreeFieldAppUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreeFieldAppUserArrayInput)(nil)).Elem(), ThreeFieldAppUserArray{})
	pulumi.RegisterOutputType(AuthLoginAppUserOutput{})
	pulumi.RegisterOutputType(AuthLoginAppUserArrayOutput{})
	pulumi.RegisterOutputType(BookmarkAppUserOutput{})
	pulumi.RegisterOutputType(BookmarkAppUserArrayOutput{})
	pulumi.RegisterOutputType(MfaPolicyRuleAppExcludeOutput{})
	pulumi.RegisterOutputType(MfaPolicyRuleAppExcludeArrayOutput{})
	pulumi.RegisterOutputType(MfaPolicyRuleAppIncludeOutput{})
	pulumi.RegisterOutputType(MfaPolicyRuleAppIncludeArrayOutput{})
	pulumi.RegisterOutputType(OauthAppGroupsClaimOutput{})
	pulumi.RegisterOutputType(OauthAppGroupsClaimPtrOutput{})
	pulumi.RegisterOutputType(OauthAppJwkOutput{})
	pulumi.RegisterOutputType(OauthAppJwkArrayOutput{})
	pulumi.RegisterOutputType(OauthAppUserOutput{})
	pulumi.RegisterOutputType(OauthAppUserArrayOutput{})
	pulumi.RegisterOutputType(SamlAppAttributeStatementOutput{})
	pulumi.RegisterOutputType(SamlAppAttributeStatementArrayOutput{})
	pulumi.RegisterOutputType(SamlAppUserOutput{})
	pulumi.RegisterOutputType(SamlAppUserArrayOutput{})
	pulumi.RegisterOutputType(SecurePasswordStoreAppUserOutput{})
	pulumi.RegisterOutputType(SecurePasswordStoreAppUserArrayOutput{})
	pulumi.RegisterOutputType(SignonPolicyRuleFactorSequenceOutput{})
	pulumi.RegisterOutputType(SignonPolicyRuleFactorSequenceArrayOutput{})
	pulumi.RegisterOutputType(SignonPolicyRuleFactorSequenceSecondaryCriteriaOutput{})
	pulumi.RegisterOutputType(SignonPolicyRuleFactorSequenceSecondaryCriteriaArrayOutput{})
	pulumi.RegisterOutputType(SwaAppUserOutput{})
	pulumi.RegisterOutputType(SwaAppUserArrayOutput{})
	pulumi.RegisterOutputType(ThreeFieldAppUserOutput{})
	pulumi.RegisterOutputType(ThreeFieldAppUserArrayOutput{})
}

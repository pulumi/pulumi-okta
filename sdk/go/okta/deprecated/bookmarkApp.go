// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package deprecated

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BookmarkApp struct {
	pulumi.CustomResourceState

	// Custom error page URL
	AccessibilityErrorRedirectUrl pulumi.StringPtrOutput `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page URL
	AccessibilityLoginRedirectUrl pulumi.StringPtrOutput `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self service
	AccessibilitySelfService pulumi.BoolPtrOutput `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote pulumi.StringPtrOutput `pulumi:"adminNote"`
	// Displays specific appLinks for the app
	AppLinksJson pulumi.StringPtrOutput `pulumi:"appLinksJson"`
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrOutput `pulumi:"autoSubmitToolbar"`
	// Application notes for end users.
	EnduserNote pulumi.StringPtrOutput `pulumi:"enduserNote"`
	// Groups associated with the application
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups pulumi.StringArrayOutput `pulumi:"groups"`
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrOutput `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrOutput `pulumi:"hideWeb"`
	// Pretty name of app.
	Label pulumi.StringOutput `pulumi:"label"`
	// Local path to logo of the application.
	Logo pulumi.StringPtrOutput `pulumi:"logo"`
	// URL of the application's logo
	LogoUrl pulumi.StringOutput `pulumi:"logoUrl"`
	// Name of the app.
	Name               pulumi.StringOutput  `pulumi:"name"`
	RequestIntegration pulumi.BoolPtrOutput `pulumi:"requestIntegration"`
	// Sign on mode of application.
	SignOnMode pulumi.StringOutput `pulumi:"signOnMode"`
	// Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources
	SkipGroups pulumi.BoolPtrOutput `pulumi:"skipGroups"`
	// Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources
	SkipUsers pulumi.BoolPtrOutput `pulumi:"skipUsers"`
	// Status of application.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	Url    pulumi.StringOutput    `pulumi:"url"`
	// Users associated with the application
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users BookmarkAppUserArrayOutput `pulumi:"users"`
}

// NewBookmarkApp registers a new resource with the given unique name, arguments, and options.
func NewBookmarkApp(ctx *pulumi.Context,
	name string, args *BookmarkAppArgs, opts ...pulumi.ResourceOption) (*BookmarkApp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	var resource BookmarkApp
	err := ctx.RegisterResource("okta:deprecated/bookmarkApp:BookmarkApp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBookmarkApp gets an existing BookmarkApp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBookmarkApp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BookmarkAppState, opts ...pulumi.ResourceOption) (*BookmarkApp, error) {
	var resource BookmarkApp
	err := ctx.ReadResource("okta:deprecated/bookmarkApp:BookmarkApp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BookmarkApp resources.
type bookmarkAppState struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page URL
	AccessibilityLoginRedirectUrl *string `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self service
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote *string `pulumi:"adminNote"`
	// Displays specific appLinks for the app
	AppLinksJson *string `pulumi:"appLinksJson"`
	// Display auto submit toolbar
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Application notes for end users.
	EnduserNote *string `pulumi:"enduserNote"`
	// Groups associated with the application
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups []string `pulumi:"groups"`
	// Do not display application icon on mobile app
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb *bool `pulumi:"hideWeb"`
	// Pretty name of app.
	Label *string `pulumi:"label"`
	// Local path to logo of the application.
	Logo *string `pulumi:"logo"`
	// URL of the application's logo
	LogoUrl *string `pulumi:"logoUrl"`
	// Name of the app.
	Name               *string `pulumi:"name"`
	RequestIntegration *bool   `pulumi:"requestIntegration"`
	// Sign on mode of application.
	SignOnMode *string `pulumi:"signOnMode"`
	// Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources
	SkipGroups *bool `pulumi:"skipGroups"`
	// Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources
	SkipUsers *bool `pulumi:"skipUsers"`
	// Status of application.
	Status *string `pulumi:"status"`
	Url    *string `pulumi:"url"`
	// Users associated with the application
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users []BookmarkAppUser `pulumi:"users"`
}

type BookmarkAppState struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Custom login page URL
	AccessibilityLoginRedirectUrl pulumi.StringPtrInput
	// Enable self service
	AccessibilitySelfService pulumi.BoolPtrInput
	// Application notes for admins.
	AdminNote pulumi.StringPtrInput
	// Displays specific appLinks for the app
	AppLinksJson pulumi.StringPtrInput
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Application notes for end users.
	EnduserNote pulumi.StringPtrInput
	// Groups associated with the application
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups pulumi.StringArrayInput
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrInput
	// Pretty name of app.
	Label pulumi.StringPtrInput
	// Local path to logo of the application.
	Logo pulumi.StringPtrInput
	// URL of the application's logo
	LogoUrl pulumi.StringPtrInput
	// Name of the app.
	Name               pulumi.StringPtrInput
	RequestIntegration pulumi.BoolPtrInput
	// Sign on mode of application.
	SignOnMode pulumi.StringPtrInput
	// Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources
	SkipGroups pulumi.BoolPtrInput
	// Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources
	SkipUsers pulumi.BoolPtrInput
	// Status of application.
	Status pulumi.StringPtrInput
	Url    pulumi.StringPtrInput
	// Users associated with the application
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users BookmarkAppUserArrayInput
}

func (BookmarkAppState) ElementType() reflect.Type {
	return reflect.TypeOf((*bookmarkAppState)(nil)).Elem()
}

type bookmarkAppArgs struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page URL
	AccessibilityLoginRedirectUrl *string `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self service
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote *string `pulumi:"adminNote"`
	// Displays specific appLinks for the app
	AppLinksJson *string `pulumi:"appLinksJson"`
	// Display auto submit toolbar
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Application notes for end users.
	EnduserNote *string `pulumi:"enduserNote"`
	// Groups associated with the application
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups []string `pulumi:"groups"`
	// Do not display application icon on mobile app
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb *bool `pulumi:"hideWeb"`
	// Pretty name of app.
	Label string `pulumi:"label"`
	// Local path to logo of the application.
	Logo               *string `pulumi:"logo"`
	RequestIntegration *bool   `pulumi:"requestIntegration"`
	// Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources
	SkipGroups *bool `pulumi:"skipGroups"`
	// Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources
	SkipUsers *bool `pulumi:"skipUsers"`
	// Status of application.
	Status *string `pulumi:"status"`
	Url    string  `pulumi:"url"`
	// Users associated with the application
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users []BookmarkAppUser `pulumi:"users"`
}

// The set of arguments for constructing a BookmarkApp resource.
type BookmarkAppArgs struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Custom login page URL
	AccessibilityLoginRedirectUrl pulumi.StringPtrInput
	// Enable self service
	AccessibilitySelfService pulumi.BoolPtrInput
	// Application notes for admins.
	AdminNote pulumi.StringPtrInput
	// Displays specific appLinks for the app
	AppLinksJson pulumi.StringPtrInput
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Application notes for end users.
	EnduserNote pulumi.StringPtrInput
	// Groups associated with the application
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups pulumi.StringArrayInput
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrInput
	// Pretty name of app.
	Label pulumi.StringInput
	// Local path to logo of the application.
	Logo               pulumi.StringPtrInput
	RequestIntegration pulumi.BoolPtrInput
	// Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources
	SkipGroups pulumi.BoolPtrInput
	// Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources
	SkipUsers pulumi.BoolPtrInput
	// Status of application.
	Status pulumi.StringPtrInput
	Url    pulumi.StringInput
	// Users associated with the application
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users BookmarkAppUserArrayInput
}

func (BookmarkAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bookmarkAppArgs)(nil)).Elem()
}

type BookmarkAppInput interface {
	pulumi.Input

	ToBookmarkAppOutput() BookmarkAppOutput
	ToBookmarkAppOutputWithContext(ctx context.Context) BookmarkAppOutput
}

func (*BookmarkApp) ElementType() reflect.Type {
	return reflect.TypeOf((*BookmarkApp)(nil))
}

func (i *BookmarkApp) ToBookmarkAppOutput() BookmarkAppOutput {
	return i.ToBookmarkAppOutputWithContext(context.Background())
}

func (i *BookmarkApp) ToBookmarkAppOutputWithContext(ctx context.Context) BookmarkAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BookmarkAppOutput)
}

func (i *BookmarkApp) ToBookmarkAppPtrOutput() BookmarkAppPtrOutput {
	return i.ToBookmarkAppPtrOutputWithContext(context.Background())
}

func (i *BookmarkApp) ToBookmarkAppPtrOutputWithContext(ctx context.Context) BookmarkAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BookmarkAppPtrOutput)
}

type BookmarkAppPtrInput interface {
	pulumi.Input

	ToBookmarkAppPtrOutput() BookmarkAppPtrOutput
	ToBookmarkAppPtrOutputWithContext(ctx context.Context) BookmarkAppPtrOutput
}

type bookmarkAppPtrType BookmarkAppArgs

func (*bookmarkAppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BookmarkApp)(nil))
}

func (i *bookmarkAppPtrType) ToBookmarkAppPtrOutput() BookmarkAppPtrOutput {
	return i.ToBookmarkAppPtrOutputWithContext(context.Background())
}

func (i *bookmarkAppPtrType) ToBookmarkAppPtrOutputWithContext(ctx context.Context) BookmarkAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BookmarkAppPtrOutput)
}

// BookmarkAppArrayInput is an input type that accepts BookmarkAppArray and BookmarkAppArrayOutput values.
// You can construct a concrete instance of `BookmarkAppArrayInput` via:
//
//          BookmarkAppArray{ BookmarkAppArgs{...} }
type BookmarkAppArrayInput interface {
	pulumi.Input

	ToBookmarkAppArrayOutput() BookmarkAppArrayOutput
	ToBookmarkAppArrayOutputWithContext(context.Context) BookmarkAppArrayOutput
}

type BookmarkAppArray []BookmarkAppInput

func (BookmarkAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BookmarkApp)(nil)).Elem()
}

func (i BookmarkAppArray) ToBookmarkAppArrayOutput() BookmarkAppArrayOutput {
	return i.ToBookmarkAppArrayOutputWithContext(context.Background())
}

func (i BookmarkAppArray) ToBookmarkAppArrayOutputWithContext(ctx context.Context) BookmarkAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BookmarkAppArrayOutput)
}

// BookmarkAppMapInput is an input type that accepts BookmarkAppMap and BookmarkAppMapOutput values.
// You can construct a concrete instance of `BookmarkAppMapInput` via:
//
//          BookmarkAppMap{ "key": BookmarkAppArgs{...} }
type BookmarkAppMapInput interface {
	pulumi.Input

	ToBookmarkAppMapOutput() BookmarkAppMapOutput
	ToBookmarkAppMapOutputWithContext(context.Context) BookmarkAppMapOutput
}

type BookmarkAppMap map[string]BookmarkAppInput

func (BookmarkAppMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BookmarkApp)(nil)).Elem()
}

func (i BookmarkAppMap) ToBookmarkAppMapOutput() BookmarkAppMapOutput {
	return i.ToBookmarkAppMapOutputWithContext(context.Background())
}

func (i BookmarkAppMap) ToBookmarkAppMapOutputWithContext(ctx context.Context) BookmarkAppMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BookmarkAppMapOutput)
}

type BookmarkAppOutput struct{ *pulumi.OutputState }

func (BookmarkAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BookmarkApp)(nil))
}

func (o BookmarkAppOutput) ToBookmarkAppOutput() BookmarkAppOutput {
	return o
}

func (o BookmarkAppOutput) ToBookmarkAppOutputWithContext(ctx context.Context) BookmarkAppOutput {
	return o
}

func (o BookmarkAppOutput) ToBookmarkAppPtrOutput() BookmarkAppPtrOutput {
	return o.ToBookmarkAppPtrOutputWithContext(context.Background())
}

func (o BookmarkAppOutput) ToBookmarkAppPtrOutputWithContext(ctx context.Context) BookmarkAppPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BookmarkApp) *BookmarkApp {
		return &v
	}).(BookmarkAppPtrOutput)
}

type BookmarkAppPtrOutput struct{ *pulumi.OutputState }

func (BookmarkAppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BookmarkApp)(nil))
}

func (o BookmarkAppPtrOutput) ToBookmarkAppPtrOutput() BookmarkAppPtrOutput {
	return o
}

func (o BookmarkAppPtrOutput) ToBookmarkAppPtrOutputWithContext(ctx context.Context) BookmarkAppPtrOutput {
	return o
}

func (o BookmarkAppPtrOutput) Elem() BookmarkAppOutput {
	return o.ApplyT(func(v *BookmarkApp) BookmarkApp {
		if v != nil {
			return *v
		}
		var ret BookmarkApp
		return ret
	}).(BookmarkAppOutput)
}

type BookmarkAppArrayOutput struct{ *pulumi.OutputState }

func (BookmarkAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BookmarkApp)(nil))
}

func (o BookmarkAppArrayOutput) ToBookmarkAppArrayOutput() BookmarkAppArrayOutput {
	return o
}

func (o BookmarkAppArrayOutput) ToBookmarkAppArrayOutputWithContext(ctx context.Context) BookmarkAppArrayOutput {
	return o
}

func (o BookmarkAppArrayOutput) Index(i pulumi.IntInput) BookmarkAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BookmarkApp {
		return vs[0].([]BookmarkApp)[vs[1].(int)]
	}).(BookmarkAppOutput)
}

type BookmarkAppMapOutput struct{ *pulumi.OutputState }

func (BookmarkAppMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BookmarkApp)(nil))
}

func (o BookmarkAppMapOutput) ToBookmarkAppMapOutput() BookmarkAppMapOutput {
	return o
}

func (o BookmarkAppMapOutput) ToBookmarkAppMapOutputWithContext(ctx context.Context) BookmarkAppMapOutput {
	return o
}

func (o BookmarkAppMapOutput) MapIndex(k pulumi.StringInput) BookmarkAppOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BookmarkApp {
		return vs[0].(map[string]BookmarkApp)[vs[1].(string)]
	}).(BookmarkAppOutput)
}

func init() {
	pulumi.RegisterOutputType(BookmarkAppOutput{})
	pulumi.RegisterOutputType(BookmarkAppPtrOutput{})
	pulumi.RegisterOutputType(BookmarkAppArrayOutput{})
	pulumi.RegisterOutputType(BookmarkAppMapOutput{})
}

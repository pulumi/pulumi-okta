// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package deprecated

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type BookmarkApp struct {
	pulumi.CustomResourceState

	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrOutput `pulumi:"autoSubmitToolbar"`
	// Groups associated with the application
	Groups pulumi.StringArrayOutput `pulumi:"groups"`
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrOutput `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrOutput `pulumi:"hideWeb"`
	// Pretty name of app.
	Label pulumi.StringOutput `pulumi:"label"`
	// name of app.
	Name               pulumi.StringOutput  `pulumi:"name"`
	RequestIntegration pulumi.BoolPtrOutput `pulumi:"requestIntegration"`
	// Sign on mode of application.
	SignOnMode pulumi.StringOutput `pulumi:"signOnMode"`
	// Status of application.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	Url    pulumi.StringOutput    `pulumi:"url"`
	// Users associated with the application
	Users BookmarkAppUserArrayOutput `pulumi:"users"`
}

// NewBookmarkApp registers a new resource with the given unique name, arguments, and options.
func NewBookmarkApp(ctx *pulumi.Context,
	name string, args *BookmarkAppArgs, opts ...pulumi.ResourceOption) (*BookmarkApp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	var resource BookmarkApp
	err := ctx.RegisterResource("okta:deprecated/bookmarkApp:BookmarkApp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBookmarkApp gets an existing BookmarkApp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBookmarkApp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BookmarkAppState, opts ...pulumi.ResourceOption) (*BookmarkApp, error) {
	var resource BookmarkApp
	err := ctx.ReadResource("okta:deprecated/bookmarkApp:BookmarkApp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BookmarkApp resources.
type bookmarkAppState struct {
	// Display auto submit toolbar
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Groups associated with the application
	Groups []string `pulumi:"groups"`
	// Do not display application icon on mobile app
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb *bool `pulumi:"hideWeb"`
	// Pretty name of app.
	Label *string `pulumi:"label"`
	// name of app.
	Name               *string `pulumi:"name"`
	RequestIntegration *bool   `pulumi:"requestIntegration"`
	// Sign on mode of application.
	SignOnMode *string `pulumi:"signOnMode"`
	// Status of application.
	Status *string `pulumi:"status"`
	Url    *string `pulumi:"url"`
	// Users associated with the application
	Users []BookmarkAppUser `pulumi:"users"`
}

type BookmarkAppState struct {
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Groups associated with the application
	Groups pulumi.StringArrayInput
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrInput
	// Pretty name of app.
	Label pulumi.StringPtrInput
	// name of app.
	Name               pulumi.StringPtrInput
	RequestIntegration pulumi.BoolPtrInput
	// Sign on mode of application.
	SignOnMode pulumi.StringPtrInput
	// Status of application.
	Status pulumi.StringPtrInput
	Url    pulumi.StringPtrInput
	// Users associated with the application
	Users BookmarkAppUserArrayInput
}

func (BookmarkAppState) ElementType() reflect.Type {
	return reflect.TypeOf((*bookmarkAppState)(nil)).Elem()
}

type bookmarkAppArgs struct {
	// Display auto submit toolbar
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Groups associated with the application
	Groups []string `pulumi:"groups"`
	// Do not display application icon on mobile app
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb *bool `pulumi:"hideWeb"`
	// Pretty name of app.
	Label              string `pulumi:"label"`
	RequestIntegration *bool  `pulumi:"requestIntegration"`
	// Status of application.
	Status *string `pulumi:"status"`
	Url    string  `pulumi:"url"`
	// Users associated with the application
	Users []BookmarkAppUser `pulumi:"users"`
}

// The set of arguments for constructing a BookmarkApp resource.
type BookmarkAppArgs struct {
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Groups associated with the application
	Groups pulumi.StringArrayInput
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrInput
	// Pretty name of app.
	Label              pulumi.StringInput
	RequestIntegration pulumi.BoolPtrInput
	// Status of application.
	Status pulumi.StringPtrInput
	Url    pulumi.StringInput
	// Users associated with the application
	Users BookmarkAppUserArrayInput
}

func (BookmarkAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bookmarkAppArgs)(nil)).Elem()
}

type BookmarkAppInput interface {
	pulumi.Input

	ToBookmarkAppOutput() BookmarkAppOutput
	ToBookmarkAppOutputWithContext(ctx context.Context) BookmarkAppOutput
}

func (*BookmarkApp) ElementType() reflect.Type {
	return reflect.TypeOf((*BookmarkApp)(nil))
}

func (i *BookmarkApp) ToBookmarkAppOutput() BookmarkAppOutput {
	return i.ToBookmarkAppOutputWithContext(context.Background())
}

func (i *BookmarkApp) ToBookmarkAppOutputWithContext(ctx context.Context) BookmarkAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BookmarkAppOutput)
}

type BookmarkAppOutput struct {
	*pulumi.OutputState
}

func (BookmarkAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BookmarkApp)(nil))
}

func (o BookmarkAppOutput) ToBookmarkAppOutput() BookmarkAppOutput {
	return o
}

func (o BookmarkAppOutput) ToBookmarkAppOutputWithContext(ctx context.Context) BookmarkAppOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(BookmarkAppOutput{})
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package deprecated

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SocialIdp struct {
	pulumi.CustomResourceState

	AccountLinkAction        pulumi.StringPtrOutput   `pulumi:"accountLinkAction"`
	AccountLinkGroupIncludes pulumi.StringArrayOutput `pulumi:"accountLinkGroupIncludes"`
	// The Key ID that you obtained from Apple when you created the private key for the client
	AppleKid pulumi.StringPtrOutput `pulumi:"appleKid"`
	// The PKCS #8 encoded private key that you created for the client and downloaded from Apple
	ApplePrivateKey pulumi.StringPtrOutput `pulumi:"applePrivateKey"`
	// The Team ID associated with your Apple developer account
	AppleTeamId          pulumi.StringPtrOutput   `pulumi:"appleTeamId"`
	AuthorizationBinding pulumi.StringOutput      `pulumi:"authorizationBinding"`
	AuthorizationUrl     pulumi.StringOutput      `pulumi:"authorizationUrl"`
	ClientId             pulumi.StringPtrOutput   `pulumi:"clientId"`
	ClientSecret         pulumi.StringPtrOutput   `pulumi:"clientSecret"`
	DeprovisionedAction  pulumi.StringPtrOutput   `pulumi:"deprovisionedAction"`
	GroupsAction         pulumi.StringPtrOutput   `pulumi:"groupsAction"`
	GroupsAssignments    pulumi.StringArrayOutput `pulumi:"groupsAssignments"`
	GroupsAttribute      pulumi.StringPtrOutput   `pulumi:"groupsAttribute"`
	GroupsFilters        pulumi.StringArrayOutput `pulumi:"groupsFilters"`
	// Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL
	IssuerMode pulumi.StringPtrOutput `pulumi:"issuerMode"`
	// Deprecated: This property was incorrectly added to this resource, you should use "subject_match_attribute"
	MatchAttribute pulumi.StringPtrOutput `pulumi:"matchAttribute"`
	// Deprecated: This property was incorrectly added to this resource, you should use "subject_match_type"
	MatchType    pulumi.StringPtrOutput `pulumi:"matchType"`
	MaxClockSkew pulumi.IntPtrOutput    `pulumi:"maxClockSkew"`
	// Name of the IdP
	Name               pulumi.StringOutput    `pulumi:"name"`
	ProfileMaster      pulumi.BoolPtrOutput   `pulumi:"profileMaster"`
	ProtocolType       pulumi.StringPtrOutput `pulumi:"protocolType"`
	ProvisioningAction pulumi.StringPtrOutput `pulumi:"provisioningAction"`
	// algorithm to use to sign requests
	RequestSignatureAlgorithm pulumi.StringPtrOutput `pulumi:"requestSignatureAlgorithm"`
	// algorithm to use to sign response
	RequestSignatureScope pulumi.StringPtrOutput `pulumi:"requestSignatureScope"`
	// algorithm to use to sign requests
	ResponseSignatureAlgorithm pulumi.StringPtrOutput `pulumi:"responseSignatureAlgorithm"`
	// algorithm to use to sign response
	ResponseSignatureScope pulumi.StringPtrOutput   `pulumi:"responseSignatureScope"`
	Scopes                 pulumi.StringArrayOutput `pulumi:"scopes"`
	Status                 pulumi.StringPtrOutput   `pulumi:"status"`
	SubjectMatchAttribute  pulumi.StringPtrOutput   `pulumi:"subjectMatchAttribute"`
	SubjectMatchType       pulumi.StringPtrOutput   `pulumi:"subjectMatchType"`
	SuspendedAction        pulumi.StringPtrOutput   `pulumi:"suspendedAction"`
	TokenBinding           pulumi.StringOutput      `pulumi:"tokenBinding"`
	TokenUrl               pulumi.StringOutput      `pulumi:"tokenUrl"`
	Type                   pulumi.StringOutput      `pulumi:"type"`
	UsernameTemplate       pulumi.StringPtrOutput   `pulumi:"usernameTemplate"`
}

// NewSocialIdp registers a new resource with the given unique name, arguments, and options.
func NewSocialIdp(ctx *pulumi.Context,
	name string, args *SocialIdpArgs, opts ...pulumi.ResourceOption) (*SocialIdp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Scopes == nil {
		return nil, errors.New("invalid value for required argument 'Scopes'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource SocialIdp
	err := ctx.RegisterResource("okta:deprecated/socialIdp:SocialIdp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSocialIdp gets an existing SocialIdp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSocialIdp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SocialIdpState, opts ...pulumi.ResourceOption) (*SocialIdp, error) {
	var resource SocialIdp
	err := ctx.ReadResource("okta:deprecated/socialIdp:SocialIdp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SocialIdp resources.
type socialIdpState struct {
	AccountLinkAction        *string  `pulumi:"accountLinkAction"`
	AccountLinkGroupIncludes []string `pulumi:"accountLinkGroupIncludes"`
	// The Key ID that you obtained from Apple when you created the private key for the client
	AppleKid *string `pulumi:"appleKid"`
	// The PKCS #8 encoded private key that you created for the client and downloaded from Apple
	ApplePrivateKey *string `pulumi:"applePrivateKey"`
	// The Team ID associated with your Apple developer account
	AppleTeamId          *string  `pulumi:"appleTeamId"`
	AuthorizationBinding *string  `pulumi:"authorizationBinding"`
	AuthorizationUrl     *string  `pulumi:"authorizationUrl"`
	ClientId             *string  `pulumi:"clientId"`
	ClientSecret         *string  `pulumi:"clientSecret"`
	DeprovisionedAction  *string  `pulumi:"deprovisionedAction"`
	GroupsAction         *string  `pulumi:"groupsAction"`
	GroupsAssignments    []string `pulumi:"groupsAssignments"`
	GroupsAttribute      *string  `pulumi:"groupsAttribute"`
	GroupsFilters        []string `pulumi:"groupsFilters"`
	// Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL
	IssuerMode *string `pulumi:"issuerMode"`
	// Deprecated: This property was incorrectly added to this resource, you should use "subject_match_attribute"
	MatchAttribute *string `pulumi:"matchAttribute"`
	// Deprecated: This property was incorrectly added to this resource, you should use "subject_match_type"
	MatchType    *string `pulumi:"matchType"`
	MaxClockSkew *int    `pulumi:"maxClockSkew"`
	// Name of the IdP
	Name               *string `pulumi:"name"`
	ProfileMaster      *bool   `pulumi:"profileMaster"`
	ProtocolType       *string `pulumi:"protocolType"`
	ProvisioningAction *string `pulumi:"provisioningAction"`
	// algorithm to use to sign requests
	RequestSignatureAlgorithm *string `pulumi:"requestSignatureAlgorithm"`
	// algorithm to use to sign response
	RequestSignatureScope *string `pulumi:"requestSignatureScope"`
	// algorithm to use to sign requests
	ResponseSignatureAlgorithm *string `pulumi:"responseSignatureAlgorithm"`
	// algorithm to use to sign response
	ResponseSignatureScope *string  `pulumi:"responseSignatureScope"`
	Scopes                 []string `pulumi:"scopes"`
	Status                 *string  `pulumi:"status"`
	SubjectMatchAttribute  *string  `pulumi:"subjectMatchAttribute"`
	SubjectMatchType       *string  `pulumi:"subjectMatchType"`
	SuspendedAction        *string  `pulumi:"suspendedAction"`
	TokenBinding           *string  `pulumi:"tokenBinding"`
	TokenUrl               *string  `pulumi:"tokenUrl"`
	Type                   *string  `pulumi:"type"`
	UsernameTemplate       *string  `pulumi:"usernameTemplate"`
}

type SocialIdpState struct {
	AccountLinkAction        pulumi.StringPtrInput
	AccountLinkGroupIncludes pulumi.StringArrayInput
	// The Key ID that you obtained from Apple when you created the private key for the client
	AppleKid pulumi.StringPtrInput
	// The PKCS #8 encoded private key that you created for the client and downloaded from Apple
	ApplePrivateKey pulumi.StringPtrInput
	// The Team ID associated with your Apple developer account
	AppleTeamId          pulumi.StringPtrInput
	AuthorizationBinding pulumi.StringPtrInput
	AuthorizationUrl     pulumi.StringPtrInput
	ClientId             pulumi.StringPtrInput
	ClientSecret         pulumi.StringPtrInput
	DeprovisionedAction  pulumi.StringPtrInput
	GroupsAction         pulumi.StringPtrInput
	GroupsAssignments    pulumi.StringArrayInput
	GroupsAttribute      pulumi.StringPtrInput
	GroupsFilters        pulumi.StringArrayInput
	// Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL
	IssuerMode pulumi.StringPtrInput
	// Deprecated: This property was incorrectly added to this resource, you should use "subject_match_attribute"
	MatchAttribute pulumi.StringPtrInput
	// Deprecated: This property was incorrectly added to this resource, you should use "subject_match_type"
	MatchType    pulumi.StringPtrInput
	MaxClockSkew pulumi.IntPtrInput
	// Name of the IdP
	Name               pulumi.StringPtrInput
	ProfileMaster      pulumi.BoolPtrInput
	ProtocolType       pulumi.StringPtrInput
	ProvisioningAction pulumi.StringPtrInput
	// algorithm to use to sign requests
	RequestSignatureAlgorithm pulumi.StringPtrInput
	// algorithm to use to sign response
	RequestSignatureScope pulumi.StringPtrInput
	// algorithm to use to sign requests
	ResponseSignatureAlgorithm pulumi.StringPtrInput
	// algorithm to use to sign response
	ResponseSignatureScope pulumi.StringPtrInput
	Scopes                 pulumi.StringArrayInput
	Status                 pulumi.StringPtrInput
	SubjectMatchAttribute  pulumi.StringPtrInput
	SubjectMatchType       pulumi.StringPtrInput
	SuspendedAction        pulumi.StringPtrInput
	TokenBinding           pulumi.StringPtrInput
	TokenUrl               pulumi.StringPtrInput
	Type                   pulumi.StringPtrInput
	UsernameTemplate       pulumi.StringPtrInput
}

func (SocialIdpState) ElementType() reflect.Type {
	return reflect.TypeOf((*socialIdpState)(nil)).Elem()
}

type socialIdpArgs struct {
	AccountLinkAction        *string  `pulumi:"accountLinkAction"`
	AccountLinkGroupIncludes []string `pulumi:"accountLinkGroupIncludes"`
	// The Key ID that you obtained from Apple when you created the private key for the client
	AppleKid *string `pulumi:"appleKid"`
	// The PKCS #8 encoded private key that you created for the client and downloaded from Apple
	ApplePrivateKey *string `pulumi:"applePrivateKey"`
	// The Team ID associated with your Apple developer account
	AppleTeamId         *string  `pulumi:"appleTeamId"`
	ClientId            *string  `pulumi:"clientId"`
	ClientSecret        *string  `pulumi:"clientSecret"`
	DeprovisionedAction *string  `pulumi:"deprovisionedAction"`
	GroupsAction        *string  `pulumi:"groupsAction"`
	GroupsAssignments   []string `pulumi:"groupsAssignments"`
	GroupsAttribute     *string  `pulumi:"groupsAttribute"`
	GroupsFilters       []string `pulumi:"groupsFilters"`
	// Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL
	IssuerMode *string `pulumi:"issuerMode"`
	// Deprecated: This property was incorrectly added to this resource, you should use "subject_match_attribute"
	MatchAttribute *string `pulumi:"matchAttribute"`
	// Deprecated: This property was incorrectly added to this resource, you should use "subject_match_type"
	MatchType    *string `pulumi:"matchType"`
	MaxClockSkew *int    `pulumi:"maxClockSkew"`
	// Name of the IdP
	Name               *string `pulumi:"name"`
	ProfileMaster      *bool   `pulumi:"profileMaster"`
	ProtocolType       *string `pulumi:"protocolType"`
	ProvisioningAction *string `pulumi:"provisioningAction"`
	// algorithm to use to sign requests
	RequestSignatureAlgorithm *string `pulumi:"requestSignatureAlgorithm"`
	// algorithm to use to sign response
	RequestSignatureScope *string `pulumi:"requestSignatureScope"`
	// algorithm to use to sign requests
	ResponseSignatureAlgorithm *string `pulumi:"responseSignatureAlgorithm"`
	// algorithm to use to sign response
	ResponseSignatureScope *string  `pulumi:"responseSignatureScope"`
	Scopes                 []string `pulumi:"scopes"`
	Status                 *string  `pulumi:"status"`
	SubjectMatchAttribute  *string  `pulumi:"subjectMatchAttribute"`
	SubjectMatchType       *string  `pulumi:"subjectMatchType"`
	SuspendedAction        *string  `pulumi:"suspendedAction"`
	Type                   string   `pulumi:"type"`
	UsernameTemplate       *string  `pulumi:"usernameTemplate"`
}

// The set of arguments for constructing a SocialIdp resource.
type SocialIdpArgs struct {
	AccountLinkAction        pulumi.StringPtrInput
	AccountLinkGroupIncludes pulumi.StringArrayInput
	// The Key ID that you obtained from Apple when you created the private key for the client
	AppleKid pulumi.StringPtrInput
	// The PKCS #8 encoded private key that you created for the client and downloaded from Apple
	ApplePrivateKey pulumi.StringPtrInput
	// The Team ID associated with your Apple developer account
	AppleTeamId         pulumi.StringPtrInput
	ClientId            pulumi.StringPtrInput
	ClientSecret        pulumi.StringPtrInput
	DeprovisionedAction pulumi.StringPtrInput
	GroupsAction        pulumi.StringPtrInput
	GroupsAssignments   pulumi.StringArrayInput
	GroupsAttribute     pulumi.StringPtrInput
	GroupsFilters       pulumi.StringArrayInput
	// Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL
	IssuerMode pulumi.StringPtrInput
	// Deprecated: This property was incorrectly added to this resource, you should use "subject_match_attribute"
	MatchAttribute pulumi.StringPtrInput
	// Deprecated: This property was incorrectly added to this resource, you should use "subject_match_type"
	MatchType    pulumi.StringPtrInput
	MaxClockSkew pulumi.IntPtrInput
	// Name of the IdP
	Name               pulumi.StringPtrInput
	ProfileMaster      pulumi.BoolPtrInput
	ProtocolType       pulumi.StringPtrInput
	ProvisioningAction pulumi.StringPtrInput
	// algorithm to use to sign requests
	RequestSignatureAlgorithm pulumi.StringPtrInput
	// algorithm to use to sign response
	RequestSignatureScope pulumi.StringPtrInput
	// algorithm to use to sign requests
	ResponseSignatureAlgorithm pulumi.StringPtrInput
	// algorithm to use to sign response
	ResponseSignatureScope pulumi.StringPtrInput
	Scopes                 pulumi.StringArrayInput
	Status                 pulumi.StringPtrInput
	SubjectMatchAttribute  pulumi.StringPtrInput
	SubjectMatchType       pulumi.StringPtrInput
	SuspendedAction        pulumi.StringPtrInput
	Type                   pulumi.StringInput
	UsernameTemplate       pulumi.StringPtrInput
}

func (SocialIdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*socialIdpArgs)(nil)).Elem()
}

type SocialIdpInput interface {
	pulumi.Input

	ToSocialIdpOutput() SocialIdpOutput
	ToSocialIdpOutputWithContext(ctx context.Context) SocialIdpOutput
}

func (*SocialIdp) ElementType() reflect.Type {
	return reflect.TypeOf((**SocialIdp)(nil)).Elem()
}

func (i *SocialIdp) ToSocialIdpOutput() SocialIdpOutput {
	return i.ToSocialIdpOutputWithContext(context.Background())
}

func (i *SocialIdp) ToSocialIdpOutputWithContext(ctx context.Context) SocialIdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SocialIdpOutput)
}

// SocialIdpArrayInput is an input type that accepts SocialIdpArray and SocialIdpArrayOutput values.
// You can construct a concrete instance of `SocialIdpArrayInput` via:
//
//          SocialIdpArray{ SocialIdpArgs{...} }
type SocialIdpArrayInput interface {
	pulumi.Input

	ToSocialIdpArrayOutput() SocialIdpArrayOutput
	ToSocialIdpArrayOutputWithContext(context.Context) SocialIdpArrayOutput
}

type SocialIdpArray []SocialIdpInput

func (SocialIdpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SocialIdp)(nil)).Elem()
}

func (i SocialIdpArray) ToSocialIdpArrayOutput() SocialIdpArrayOutput {
	return i.ToSocialIdpArrayOutputWithContext(context.Background())
}

func (i SocialIdpArray) ToSocialIdpArrayOutputWithContext(ctx context.Context) SocialIdpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SocialIdpArrayOutput)
}

// SocialIdpMapInput is an input type that accepts SocialIdpMap and SocialIdpMapOutput values.
// You can construct a concrete instance of `SocialIdpMapInput` via:
//
//          SocialIdpMap{ "key": SocialIdpArgs{...} }
type SocialIdpMapInput interface {
	pulumi.Input

	ToSocialIdpMapOutput() SocialIdpMapOutput
	ToSocialIdpMapOutputWithContext(context.Context) SocialIdpMapOutput
}

type SocialIdpMap map[string]SocialIdpInput

func (SocialIdpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SocialIdp)(nil)).Elem()
}

func (i SocialIdpMap) ToSocialIdpMapOutput() SocialIdpMapOutput {
	return i.ToSocialIdpMapOutputWithContext(context.Background())
}

func (i SocialIdpMap) ToSocialIdpMapOutputWithContext(ctx context.Context) SocialIdpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SocialIdpMapOutput)
}

type SocialIdpOutput struct{ *pulumi.OutputState }

func (SocialIdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SocialIdp)(nil)).Elem()
}

func (o SocialIdpOutput) ToSocialIdpOutput() SocialIdpOutput {
	return o
}

func (o SocialIdpOutput) ToSocialIdpOutputWithContext(ctx context.Context) SocialIdpOutput {
	return o
}

type SocialIdpArrayOutput struct{ *pulumi.OutputState }

func (SocialIdpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SocialIdp)(nil)).Elem()
}

func (o SocialIdpArrayOutput) ToSocialIdpArrayOutput() SocialIdpArrayOutput {
	return o
}

func (o SocialIdpArrayOutput) ToSocialIdpArrayOutputWithContext(ctx context.Context) SocialIdpArrayOutput {
	return o
}

func (o SocialIdpArrayOutput) Index(i pulumi.IntInput) SocialIdpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SocialIdp {
		return vs[0].([]*SocialIdp)[vs[1].(int)]
	}).(SocialIdpOutput)
}

type SocialIdpMapOutput struct{ *pulumi.OutputState }

func (SocialIdpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SocialIdp)(nil)).Elem()
}

func (o SocialIdpMapOutput) ToSocialIdpMapOutput() SocialIdpMapOutput {
	return o
}

func (o SocialIdpMapOutput) ToSocialIdpMapOutputWithContext(ctx context.Context) SocialIdpMapOutput {
	return o
}

func (o SocialIdpMapOutput) MapIndex(k pulumi.StringInput) SocialIdpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SocialIdp {
		return vs[0].(map[string]*SocialIdp)[vs[1].(string)]
	}).(SocialIdpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SocialIdpInput)(nil)).Elem(), &SocialIdp{})
	pulumi.RegisterInputType(reflect.TypeOf((*SocialIdpArrayInput)(nil)).Elem(), SocialIdpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SocialIdpMapInput)(nil)).Elem(), SocialIdpMap{})
	pulumi.RegisterOutputType(SocialIdpOutput{})
	pulumi.RegisterOutputType(SocialIdpArrayOutput{})
	pulumi.RegisterOutputType(SocialIdpMapOutput{})
}

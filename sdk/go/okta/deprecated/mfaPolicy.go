// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package deprecated

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type MfaPolicy struct {
	pulumi.CustomResourceState

	// Policy Description
	Description  pulumi.StringPtrOutput `pulumi:"description"`
	Duo          pulumi.StringMapOutput `pulumi:"duo"`
	FidoU2f      pulumi.StringMapOutput `pulumi:"fidoU2f"`
	FidoWebauthn pulumi.StringMapOutput `pulumi:"fidoWebauthn"`
	GoogleOtp    pulumi.StringMapOutput `pulumi:"googleOtp"`
	// List of Group IDs to Include
	GroupsIncludeds pulumi.StringArrayOutput `pulumi:"groupsIncludeds"`
	// Policy Name
	Name         pulumi.StringOutput    `pulumi:"name"`
	OktaCall     pulumi.StringMapOutput `pulumi:"oktaCall"`
	OktaOtp      pulumi.StringMapOutput `pulumi:"oktaOtp"`
	OktaPassword pulumi.StringMapOutput `pulumi:"oktaPassword"`
	OktaPush     pulumi.StringMapOutput `pulumi:"oktaPush"`
	OktaQuestion pulumi.StringMapOutput `pulumi:"oktaQuestion"`
	OktaSms      pulumi.StringMapOutput `pulumi:"oktaSms"`
	// Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid
	// priority is provided. API defaults it to the last/lowest if not there.
	Priority pulumi.IntPtrOutput    `pulumi:"priority"`
	RsaToken pulumi.StringMapOutput `pulumi:"rsaToken"`
	// Policy Status: ACTIVE or INACTIVE.
	Status       pulumi.StringPtrOutput `pulumi:"status"`
	SymantecVip  pulumi.StringMapOutput `pulumi:"symantecVip"`
	YubikeyToken pulumi.StringMapOutput `pulumi:"yubikeyToken"`
}

// NewMfaPolicy registers a new resource with the given unique name, arguments, and options.
func NewMfaPolicy(ctx *pulumi.Context,
	name string, args *MfaPolicyArgs, opts ...pulumi.ResourceOption) (*MfaPolicy, error) {
	if args == nil {
		args = &MfaPolicyArgs{}
	}

	var resource MfaPolicy
	err := ctx.RegisterResource("okta:deprecated/mfaPolicy:MfaPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMfaPolicy gets an existing MfaPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMfaPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MfaPolicyState, opts ...pulumi.ResourceOption) (*MfaPolicy, error) {
	var resource MfaPolicy
	err := ctx.ReadResource("okta:deprecated/mfaPolicy:MfaPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MfaPolicy resources.
type mfaPolicyState struct {
	// Policy Description
	Description  *string           `pulumi:"description"`
	Duo          map[string]string `pulumi:"duo"`
	FidoU2f      map[string]string `pulumi:"fidoU2f"`
	FidoWebauthn map[string]string `pulumi:"fidoWebauthn"`
	GoogleOtp    map[string]string `pulumi:"googleOtp"`
	// List of Group IDs to Include
	GroupsIncludeds []string `pulumi:"groupsIncludeds"`
	// Policy Name
	Name         *string           `pulumi:"name"`
	OktaCall     map[string]string `pulumi:"oktaCall"`
	OktaOtp      map[string]string `pulumi:"oktaOtp"`
	OktaPassword map[string]string `pulumi:"oktaPassword"`
	OktaPush     map[string]string `pulumi:"oktaPush"`
	OktaQuestion map[string]string `pulumi:"oktaQuestion"`
	OktaSms      map[string]string `pulumi:"oktaSms"`
	// Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid
	// priority is provided. API defaults it to the last/lowest if not there.
	Priority *int              `pulumi:"priority"`
	RsaToken map[string]string `pulumi:"rsaToken"`
	// Policy Status: ACTIVE or INACTIVE.
	Status       *string           `pulumi:"status"`
	SymantecVip  map[string]string `pulumi:"symantecVip"`
	YubikeyToken map[string]string `pulumi:"yubikeyToken"`
}

type MfaPolicyState struct {
	// Policy Description
	Description  pulumi.StringPtrInput
	Duo          pulumi.StringMapInput
	FidoU2f      pulumi.StringMapInput
	FidoWebauthn pulumi.StringMapInput
	GoogleOtp    pulumi.StringMapInput
	// List of Group IDs to Include
	GroupsIncludeds pulumi.StringArrayInput
	// Policy Name
	Name         pulumi.StringPtrInput
	OktaCall     pulumi.StringMapInput
	OktaOtp      pulumi.StringMapInput
	OktaPassword pulumi.StringMapInput
	OktaPush     pulumi.StringMapInput
	OktaQuestion pulumi.StringMapInput
	OktaSms      pulumi.StringMapInput
	// Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid
	// priority is provided. API defaults it to the last/lowest if not there.
	Priority pulumi.IntPtrInput
	RsaToken pulumi.StringMapInput
	// Policy Status: ACTIVE or INACTIVE.
	Status       pulumi.StringPtrInput
	SymantecVip  pulumi.StringMapInput
	YubikeyToken pulumi.StringMapInput
}

func (MfaPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*mfaPolicyState)(nil)).Elem()
}

type mfaPolicyArgs struct {
	// Policy Description
	Description  *string           `pulumi:"description"`
	Duo          map[string]string `pulumi:"duo"`
	FidoU2f      map[string]string `pulumi:"fidoU2f"`
	FidoWebauthn map[string]string `pulumi:"fidoWebauthn"`
	GoogleOtp    map[string]string `pulumi:"googleOtp"`
	// List of Group IDs to Include
	GroupsIncludeds []string `pulumi:"groupsIncludeds"`
	// Policy Name
	Name         *string           `pulumi:"name"`
	OktaCall     map[string]string `pulumi:"oktaCall"`
	OktaOtp      map[string]string `pulumi:"oktaOtp"`
	OktaPassword map[string]string `pulumi:"oktaPassword"`
	OktaPush     map[string]string `pulumi:"oktaPush"`
	OktaQuestion map[string]string `pulumi:"oktaQuestion"`
	OktaSms      map[string]string `pulumi:"oktaSms"`
	// Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid
	// priority is provided. API defaults it to the last/lowest if not there.
	Priority *int              `pulumi:"priority"`
	RsaToken map[string]string `pulumi:"rsaToken"`
	// Policy Status: ACTIVE or INACTIVE.
	Status       *string           `pulumi:"status"`
	SymantecVip  map[string]string `pulumi:"symantecVip"`
	YubikeyToken map[string]string `pulumi:"yubikeyToken"`
}

// The set of arguments for constructing a MfaPolicy resource.
type MfaPolicyArgs struct {
	// Policy Description
	Description  pulumi.StringPtrInput
	Duo          pulumi.StringMapInput
	FidoU2f      pulumi.StringMapInput
	FidoWebauthn pulumi.StringMapInput
	GoogleOtp    pulumi.StringMapInput
	// List of Group IDs to Include
	GroupsIncludeds pulumi.StringArrayInput
	// Policy Name
	Name         pulumi.StringPtrInput
	OktaCall     pulumi.StringMapInput
	OktaOtp      pulumi.StringMapInput
	OktaPassword pulumi.StringMapInput
	OktaPush     pulumi.StringMapInput
	OktaQuestion pulumi.StringMapInput
	OktaSms      pulumi.StringMapInput
	// Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid
	// priority is provided. API defaults it to the last/lowest if not there.
	Priority pulumi.IntPtrInput
	RsaToken pulumi.StringMapInput
	// Policy Status: ACTIVE or INACTIVE.
	Status       pulumi.StringPtrInput
	SymantecVip  pulumi.StringMapInput
	YubikeyToken pulumi.StringMapInput
}

func (MfaPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mfaPolicyArgs)(nil)).Elem()
}

type MfaPolicyInput interface {
	pulumi.Input

	ToMfaPolicyOutput() MfaPolicyOutput
	ToMfaPolicyOutputWithContext(ctx context.Context) MfaPolicyOutput
}

func (*MfaPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaPolicy)(nil))
}

func (i *MfaPolicy) ToMfaPolicyOutput() MfaPolicyOutput {
	return i.ToMfaPolicyOutputWithContext(context.Background())
}

func (i *MfaPolicy) ToMfaPolicyOutputWithContext(ctx context.Context) MfaPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MfaPolicyOutput)
}

type MfaPolicyOutput struct {
	*pulumi.OutputState
}

func (MfaPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MfaPolicy)(nil))
}

func (o MfaPolicyOutput) ToMfaPolicyOutput() MfaPolicyOutput {
	return o
}

func (o MfaPolicyOutput) ToMfaPolicyOutputWithContext(ctx context.Context) MfaPolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(MfaPolicyOutput{})
}

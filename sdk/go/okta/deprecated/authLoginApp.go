// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package deprecated

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AuthLoginApp struct {
	pulumi.CustomResourceState

	// Custom error page URL
	AccessibilityErrorRedirectUrl pulumi.StringPtrOutput `pulumi:"accessibilityErrorRedirectUrl"`
	// Enable self service
	AccessibilitySelfService pulumi.BoolPtrOutput `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote pulumi.StringPtrOutput `pulumi:"adminNote"`
	// Application settings in JSON format
	AppSettingsJson pulumi.StringPtrOutput `pulumi:"appSettingsJson"`
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrOutput `pulumi:"autoSubmitToolbar"`
	// Application credentials scheme
	CredentialsScheme pulumi.StringPtrOutput `pulumi:"credentialsScheme"`
	// Application notes for end users.
	EnduserNote pulumi.StringPtrOutput `pulumi:"enduserNote"`
	// Groups associated with the application
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups pulumi.StringArrayOutput `pulumi:"groups"`
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrOutput `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrOutput `pulumi:"hideWeb"`
	// Pretty name of app.
	Label pulumi.StringOutput `pulumi:"label"`
	// Logo of the application.
	Logo pulumi.StringPtrOutput `pulumi:"logo"`
	// URL of the application's logo
	LogoUrl pulumi.StringOutput `pulumi:"logoUrl"`
	// Name of the app.
	Name pulumi.StringOutput `pulumi:"name"`
	// Preconfigured app name
	PreconfiguredApp pulumi.StringPtrOutput `pulumi:"preconfiguredApp"`
	// Allow user to reveal password
	RevealPassword pulumi.BoolPtrOutput `pulumi:"revealPassword"`
	// Shared password, required for certain schemes.
	SharedPassword pulumi.StringPtrOutput `pulumi:"sharedPassword"`
	// Shared username, required for certain schemes.
	SharedUsername pulumi.StringPtrOutput `pulumi:"sharedUsername"`
	// Sign on mode of application.
	SignOnMode pulumi.StringOutput `pulumi:"signOnMode"`
	// Post login redirect URL
	SignOnRedirectUrl pulumi.StringPtrOutput `pulumi:"signOnRedirectUrl"`
	// Login URL
	SignOnUrl pulumi.StringPtrOutput `pulumi:"signOnUrl"`
	// Status of application.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// Username template
	UserNameTemplate pulumi.StringPtrOutput `pulumi:"userNameTemplate"`
	// Username template suffix
	UserNameTemplateSuffix pulumi.StringPtrOutput `pulumi:"userNameTemplateSuffix"`
	// Username template type
	UserNameTemplateType pulumi.StringPtrOutput `pulumi:"userNameTemplateType"`
	// Users associated with the application
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users AuthLoginAppUserArrayOutput `pulumi:"users"`
}

// NewAuthLoginApp registers a new resource with the given unique name, arguments, and options.
func NewAuthLoginApp(ctx *pulumi.Context,
	name string, args *AuthLoginAppArgs, opts ...pulumi.ResourceOption) (*AuthLoginApp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	var resource AuthLoginApp
	err := ctx.RegisterResource("okta:deprecated/authLoginApp:AuthLoginApp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthLoginApp gets an existing AuthLoginApp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthLoginApp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthLoginAppState, opts ...pulumi.ResourceOption) (*AuthLoginApp, error) {
	var resource AuthLoginApp
	err := ctx.ReadResource("okta:deprecated/authLoginApp:AuthLoginApp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthLoginApp resources.
type authLoginAppState struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Enable self service
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote *string `pulumi:"adminNote"`
	// Application settings in JSON format
	AppSettingsJson *string `pulumi:"appSettingsJson"`
	// Display auto submit toolbar
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Application credentials scheme
	CredentialsScheme *string `pulumi:"credentialsScheme"`
	// Application notes for end users.
	EnduserNote *string `pulumi:"enduserNote"`
	// Groups associated with the application
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups []string `pulumi:"groups"`
	// Do not display application icon on mobile app
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb *bool `pulumi:"hideWeb"`
	// Pretty name of app.
	Label *string `pulumi:"label"`
	// Logo of the application.
	Logo *string `pulumi:"logo"`
	// URL of the application's logo
	LogoUrl *string `pulumi:"logoUrl"`
	// Name of the app.
	Name *string `pulumi:"name"`
	// Preconfigured app name
	PreconfiguredApp *string `pulumi:"preconfiguredApp"`
	// Allow user to reveal password
	RevealPassword *bool `pulumi:"revealPassword"`
	// Shared password, required for certain schemes.
	SharedPassword *string `pulumi:"sharedPassword"`
	// Shared username, required for certain schemes.
	SharedUsername *string `pulumi:"sharedUsername"`
	// Sign on mode of application.
	SignOnMode *string `pulumi:"signOnMode"`
	// Post login redirect URL
	SignOnRedirectUrl *string `pulumi:"signOnRedirectUrl"`
	// Login URL
	SignOnUrl *string `pulumi:"signOnUrl"`
	// Status of application.
	Status *string `pulumi:"status"`
	// Username template
	UserNameTemplate *string `pulumi:"userNameTemplate"`
	// Username template suffix
	UserNameTemplateSuffix *string `pulumi:"userNameTemplateSuffix"`
	// Username template type
	UserNameTemplateType *string `pulumi:"userNameTemplateType"`
	// Users associated with the application
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users []AuthLoginAppUser `pulumi:"users"`
}

type AuthLoginAppState struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Enable self service
	AccessibilitySelfService pulumi.BoolPtrInput
	// Application notes for admins.
	AdminNote pulumi.StringPtrInput
	// Application settings in JSON format
	AppSettingsJson pulumi.StringPtrInput
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Application credentials scheme
	CredentialsScheme pulumi.StringPtrInput
	// Application notes for end users.
	EnduserNote pulumi.StringPtrInput
	// Groups associated with the application
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups pulumi.StringArrayInput
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrInput
	// Pretty name of app.
	Label pulumi.StringPtrInput
	// Logo of the application.
	Logo pulumi.StringPtrInput
	// URL of the application's logo
	LogoUrl pulumi.StringPtrInput
	// Name of the app.
	Name pulumi.StringPtrInput
	// Preconfigured app name
	PreconfiguredApp pulumi.StringPtrInput
	// Allow user to reveal password
	RevealPassword pulumi.BoolPtrInput
	// Shared password, required for certain schemes.
	SharedPassword pulumi.StringPtrInput
	// Shared username, required for certain schemes.
	SharedUsername pulumi.StringPtrInput
	// Sign on mode of application.
	SignOnMode pulumi.StringPtrInput
	// Post login redirect URL
	SignOnRedirectUrl pulumi.StringPtrInput
	// Login URL
	SignOnUrl pulumi.StringPtrInput
	// Status of application.
	Status pulumi.StringPtrInput
	// Username template
	UserNameTemplate pulumi.StringPtrInput
	// Username template suffix
	UserNameTemplateSuffix pulumi.StringPtrInput
	// Username template type
	UserNameTemplateType pulumi.StringPtrInput
	// Users associated with the application
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users AuthLoginAppUserArrayInput
}

func (AuthLoginAppState) ElementType() reflect.Type {
	return reflect.TypeOf((*authLoginAppState)(nil)).Elem()
}

type authLoginAppArgs struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Enable self service
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote *string `pulumi:"adminNote"`
	// Application settings in JSON format
	AppSettingsJson *string `pulumi:"appSettingsJson"`
	// Display auto submit toolbar
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Application credentials scheme
	CredentialsScheme *string `pulumi:"credentialsScheme"`
	// Application notes for end users.
	EnduserNote *string `pulumi:"enduserNote"`
	// Groups associated with the application
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups []string `pulumi:"groups"`
	// Do not display application icon on mobile app
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb *bool `pulumi:"hideWeb"`
	// Pretty name of app.
	Label string `pulumi:"label"`
	// Logo of the application.
	Logo *string `pulumi:"logo"`
	// Preconfigured app name
	PreconfiguredApp *string `pulumi:"preconfiguredApp"`
	// Allow user to reveal password
	RevealPassword *bool `pulumi:"revealPassword"`
	// Shared password, required for certain schemes.
	SharedPassword *string `pulumi:"sharedPassword"`
	// Shared username, required for certain schemes.
	SharedUsername *string `pulumi:"sharedUsername"`
	// Post login redirect URL
	SignOnRedirectUrl *string `pulumi:"signOnRedirectUrl"`
	// Login URL
	SignOnUrl *string `pulumi:"signOnUrl"`
	// Status of application.
	Status *string `pulumi:"status"`
	// Username template
	UserNameTemplate *string `pulumi:"userNameTemplate"`
	// Username template suffix
	UserNameTemplateSuffix *string `pulumi:"userNameTemplateSuffix"`
	// Username template type
	UserNameTemplateType *string `pulumi:"userNameTemplateType"`
	// Users associated with the application
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users []AuthLoginAppUser `pulumi:"users"`
}

// The set of arguments for constructing a AuthLoginApp resource.
type AuthLoginAppArgs struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Enable self service
	AccessibilitySelfService pulumi.BoolPtrInput
	// Application notes for admins.
	AdminNote pulumi.StringPtrInput
	// Application settings in JSON format
	AppSettingsJson pulumi.StringPtrInput
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Application credentials scheme
	CredentialsScheme pulumi.StringPtrInput
	// Application notes for end users.
	EnduserNote pulumi.StringPtrInput
	// Groups associated with the application
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups pulumi.StringArrayInput
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrInput
	// Pretty name of app.
	Label pulumi.StringInput
	// Logo of the application.
	Logo pulumi.StringPtrInput
	// Preconfigured app name
	PreconfiguredApp pulumi.StringPtrInput
	// Allow user to reveal password
	RevealPassword pulumi.BoolPtrInput
	// Shared password, required for certain schemes.
	SharedPassword pulumi.StringPtrInput
	// Shared username, required for certain schemes.
	SharedUsername pulumi.StringPtrInput
	// Post login redirect URL
	SignOnRedirectUrl pulumi.StringPtrInput
	// Login URL
	SignOnUrl pulumi.StringPtrInput
	// Status of application.
	Status pulumi.StringPtrInput
	// Username template
	UserNameTemplate pulumi.StringPtrInput
	// Username template suffix
	UserNameTemplateSuffix pulumi.StringPtrInput
	// Username template type
	UserNameTemplateType pulumi.StringPtrInput
	// Users associated with the application
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users AuthLoginAppUserArrayInput
}

func (AuthLoginAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authLoginAppArgs)(nil)).Elem()
}

type AuthLoginAppInput interface {
	pulumi.Input

	ToAuthLoginAppOutput() AuthLoginAppOutput
	ToAuthLoginAppOutputWithContext(ctx context.Context) AuthLoginAppOutput
}

func (*AuthLoginApp) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthLoginApp)(nil))
}

func (i *AuthLoginApp) ToAuthLoginAppOutput() AuthLoginAppOutput {
	return i.ToAuthLoginAppOutputWithContext(context.Background())
}

func (i *AuthLoginApp) ToAuthLoginAppOutputWithContext(ctx context.Context) AuthLoginAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthLoginAppOutput)
}

func (i *AuthLoginApp) ToAuthLoginAppPtrOutput() AuthLoginAppPtrOutput {
	return i.ToAuthLoginAppPtrOutputWithContext(context.Background())
}

func (i *AuthLoginApp) ToAuthLoginAppPtrOutputWithContext(ctx context.Context) AuthLoginAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthLoginAppPtrOutput)
}

type AuthLoginAppPtrInput interface {
	pulumi.Input

	ToAuthLoginAppPtrOutput() AuthLoginAppPtrOutput
	ToAuthLoginAppPtrOutputWithContext(ctx context.Context) AuthLoginAppPtrOutput
}

type authLoginAppPtrType AuthLoginAppArgs

func (*authLoginAppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthLoginApp)(nil))
}

func (i *authLoginAppPtrType) ToAuthLoginAppPtrOutput() AuthLoginAppPtrOutput {
	return i.ToAuthLoginAppPtrOutputWithContext(context.Background())
}

func (i *authLoginAppPtrType) ToAuthLoginAppPtrOutputWithContext(ctx context.Context) AuthLoginAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthLoginAppPtrOutput)
}

// AuthLoginAppArrayInput is an input type that accepts AuthLoginAppArray and AuthLoginAppArrayOutput values.
// You can construct a concrete instance of `AuthLoginAppArrayInput` via:
//
//          AuthLoginAppArray{ AuthLoginAppArgs{...} }
type AuthLoginAppArrayInput interface {
	pulumi.Input

	ToAuthLoginAppArrayOutput() AuthLoginAppArrayOutput
	ToAuthLoginAppArrayOutputWithContext(context.Context) AuthLoginAppArrayOutput
}

type AuthLoginAppArray []AuthLoginAppInput

func (AuthLoginAppArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AuthLoginApp)(nil))
}

func (i AuthLoginAppArray) ToAuthLoginAppArrayOutput() AuthLoginAppArrayOutput {
	return i.ToAuthLoginAppArrayOutputWithContext(context.Background())
}

func (i AuthLoginAppArray) ToAuthLoginAppArrayOutputWithContext(ctx context.Context) AuthLoginAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthLoginAppArrayOutput)
}

// AuthLoginAppMapInput is an input type that accepts AuthLoginAppMap and AuthLoginAppMapOutput values.
// You can construct a concrete instance of `AuthLoginAppMapInput` via:
//
//          AuthLoginAppMap{ "key": AuthLoginAppArgs{...} }
type AuthLoginAppMapInput interface {
	pulumi.Input

	ToAuthLoginAppMapOutput() AuthLoginAppMapOutput
	ToAuthLoginAppMapOutputWithContext(context.Context) AuthLoginAppMapOutput
}

type AuthLoginAppMap map[string]AuthLoginAppInput

func (AuthLoginAppMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AuthLoginApp)(nil))
}

func (i AuthLoginAppMap) ToAuthLoginAppMapOutput() AuthLoginAppMapOutput {
	return i.ToAuthLoginAppMapOutputWithContext(context.Background())
}

func (i AuthLoginAppMap) ToAuthLoginAppMapOutputWithContext(ctx context.Context) AuthLoginAppMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthLoginAppMapOutput)
}

type AuthLoginAppOutput struct {
	*pulumi.OutputState
}

func (AuthLoginAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthLoginApp)(nil))
}

func (o AuthLoginAppOutput) ToAuthLoginAppOutput() AuthLoginAppOutput {
	return o
}

func (o AuthLoginAppOutput) ToAuthLoginAppOutputWithContext(ctx context.Context) AuthLoginAppOutput {
	return o
}

func (o AuthLoginAppOutput) ToAuthLoginAppPtrOutput() AuthLoginAppPtrOutput {
	return o.ToAuthLoginAppPtrOutputWithContext(context.Background())
}

func (o AuthLoginAppOutput) ToAuthLoginAppPtrOutputWithContext(ctx context.Context) AuthLoginAppPtrOutput {
	return o.ApplyT(func(v AuthLoginApp) *AuthLoginApp {
		return &v
	}).(AuthLoginAppPtrOutput)
}

type AuthLoginAppPtrOutput struct {
	*pulumi.OutputState
}

func (AuthLoginAppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthLoginApp)(nil))
}

func (o AuthLoginAppPtrOutput) ToAuthLoginAppPtrOutput() AuthLoginAppPtrOutput {
	return o
}

func (o AuthLoginAppPtrOutput) ToAuthLoginAppPtrOutputWithContext(ctx context.Context) AuthLoginAppPtrOutput {
	return o
}

type AuthLoginAppArrayOutput struct{ *pulumi.OutputState }

func (AuthLoginAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthLoginApp)(nil))
}

func (o AuthLoginAppArrayOutput) ToAuthLoginAppArrayOutput() AuthLoginAppArrayOutput {
	return o
}

func (o AuthLoginAppArrayOutput) ToAuthLoginAppArrayOutputWithContext(ctx context.Context) AuthLoginAppArrayOutput {
	return o
}

func (o AuthLoginAppArrayOutput) Index(i pulumi.IntInput) AuthLoginAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthLoginApp {
		return vs[0].([]AuthLoginApp)[vs[1].(int)]
	}).(AuthLoginAppOutput)
}

type AuthLoginAppMapOutput struct{ *pulumi.OutputState }

func (AuthLoginAppMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AuthLoginApp)(nil))
}

func (o AuthLoginAppMapOutput) ToAuthLoginAppMapOutput() AuthLoginAppMapOutput {
	return o
}

func (o AuthLoginAppMapOutput) ToAuthLoginAppMapOutputWithContext(ctx context.Context) AuthLoginAppMapOutput {
	return o
}

func (o AuthLoginAppMapOutput) MapIndex(k pulumi.StringInput) AuthLoginAppOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AuthLoginApp {
		return vs[0].(map[string]AuthLoginApp)[vs[1].(string)]
	}).(AuthLoginAppOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthLoginAppOutput{})
	pulumi.RegisterOutputType(AuthLoginAppPtrOutput{})
	pulumi.RegisterOutputType(AuthLoginAppArrayOutput{})
	pulumi.RegisterOutputType(AuthLoginAppMapOutput{})
}

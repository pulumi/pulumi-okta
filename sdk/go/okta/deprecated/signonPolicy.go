// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package deprecated

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type SignonPolicy struct {
	pulumi.CustomResourceState

	// Policy Description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// List of Group IDs to Include
	GroupsIncludeds pulumi.StringArrayOutput `pulumi:"groupsIncludeds"`
	// Policy Name
	Name pulumi.StringOutput `pulumi:"name"`
	// Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid
	// priority is provided. API defaults it to the last/lowest if not there.
	Priority pulumi.IntPtrOutput `pulumi:"priority"`
	// Policy Status: ACTIVE or INACTIVE.
	Status pulumi.StringPtrOutput `pulumi:"status"`
}

// NewSignonPolicy registers a new resource with the given unique name, arguments, and options.
func NewSignonPolicy(ctx *pulumi.Context,
	name string, args *SignonPolicyArgs, opts ...pulumi.ResourceOption) (*SignonPolicy, error) {
	if args == nil {
		args = &SignonPolicyArgs{}
	}
	var resource SignonPolicy
	err := ctx.RegisterResource("okta:deprecated/signonPolicy:SignonPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSignonPolicy gets an existing SignonPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSignonPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SignonPolicyState, opts ...pulumi.ResourceOption) (*SignonPolicy, error) {
	var resource SignonPolicy
	err := ctx.ReadResource("okta:deprecated/signonPolicy:SignonPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SignonPolicy resources.
type signonPolicyState struct {
	// Policy Description
	Description *string `pulumi:"description"`
	// List of Group IDs to Include
	GroupsIncludeds []string `pulumi:"groupsIncludeds"`
	// Policy Name
	Name *string `pulumi:"name"`
	// Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid
	// priority is provided. API defaults it to the last/lowest if not there.
	Priority *int `pulumi:"priority"`
	// Policy Status: ACTIVE or INACTIVE.
	Status *string `pulumi:"status"`
}

type SignonPolicyState struct {
	// Policy Description
	Description pulumi.StringPtrInput
	// List of Group IDs to Include
	GroupsIncludeds pulumi.StringArrayInput
	// Policy Name
	Name pulumi.StringPtrInput
	// Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid
	// priority is provided. API defaults it to the last/lowest if not there.
	Priority pulumi.IntPtrInput
	// Policy Status: ACTIVE or INACTIVE.
	Status pulumi.StringPtrInput
}

func (SignonPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*signonPolicyState)(nil)).Elem()
}

type signonPolicyArgs struct {
	// Policy Description
	Description *string `pulumi:"description"`
	// List of Group IDs to Include
	GroupsIncludeds []string `pulumi:"groupsIncludeds"`
	// Policy Name
	Name *string `pulumi:"name"`
	// Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid
	// priority is provided. API defaults it to the last/lowest if not there.
	Priority *int `pulumi:"priority"`
	// Policy Status: ACTIVE or INACTIVE.
	Status *string `pulumi:"status"`
}

// The set of arguments for constructing a SignonPolicy resource.
type SignonPolicyArgs struct {
	// Policy Description
	Description pulumi.StringPtrInput
	// List of Group IDs to Include
	GroupsIncludeds pulumi.StringArrayInput
	// Policy Name
	Name pulumi.StringPtrInput
	// Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid
	// priority is provided. API defaults it to the last/lowest if not there.
	Priority pulumi.IntPtrInput
	// Policy Status: ACTIVE or INACTIVE.
	Status pulumi.StringPtrInput
}

func (SignonPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*signonPolicyArgs)(nil)).Elem()
}

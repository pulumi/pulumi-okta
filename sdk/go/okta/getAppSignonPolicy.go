// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a sign-on policy for the application.
//
// > **WARNING:** This feature is only available as a part of the
// Identity Engine. Contact support
// for further information.
//
// > Inside the product a sign-on policy is referenced as an _authentication
// policy_, in the public API the policy is of type
// [`ACCESS_POLICY`](https://developer.okta.com/docs/reference/api/policy/#policy-object).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.LookupAppSignonPolicy(ctx, &okta.LookupAppSignonPolicyArgs{
//				AppId: "app_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAppSignonPolicy(ctx *pulumi.Context, args *LookupAppSignonPolicyArgs, opts ...pulumi.InvokeOption) (*LookupAppSignonPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAppSignonPolicyResult
	err := ctx.Invoke("okta:index/getAppSignonPolicy:getAppSignonPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppSignonPolicy.
type LookupAppSignonPolicyArgs struct {
	// App ID
	AppId string `pulumi:"appId"`
}

// A collection of values returned by getAppSignonPolicy.
type LookupAppSignonPolicyResult struct {
	// App ID
	AppId string `pulumi:"appId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Policy name
	Name string `pulumi:"name"`
}

func LookupAppSignonPolicyOutput(ctx *pulumi.Context, args LookupAppSignonPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupAppSignonPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAppSignonPolicyResultOutput, error) {
			args := v.(LookupAppSignonPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("okta:index/getAppSignonPolicy:getAppSignonPolicy", args, LookupAppSignonPolicyResultOutput{}, options).(LookupAppSignonPolicyResultOutput), nil
		}).(LookupAppSignonPolicyResultOutput)
}

// A collection of arguments for invoking getAppSignonPolicy.
type LookupAppSignonPolicyOutputArgs struct {
	// App ID
	AppId pulumi.StringInput `pulumi:"appId"`
}

func (LookupAppSignonPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppSignonPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getAppSignonPolicy.
type LookupAppSignonPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupAppSignonPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppSignonPolicyResult)(nil)).Elem()
}

func (o LookupAppSignonPolicyResultOutput) ToLookupAppSignonPolicyResultOutput() LookupAppSignonPolicyResultOutput {
	return o
}

func (o LookupAppSignonPolicyResultOutput) ToLookupAppSignonPolicyResultOutputWithContext(ctx context.Context) LookupAppSignonPolicyResultOutput {
	return o
}

// App ID
func (o LookupAppSignonPolicyResultOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSignonPolicyResult) string { return v.AppId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAppSignonPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSignonPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// Policy name
func (o LookupAppSignonPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSignonPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAppSignonPolicyResultOutput{})
}

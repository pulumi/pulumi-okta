// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package index

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the well-known org metadata, which includes the id, configured custom domains, authentication pipeline, and various other org settings.
//
// - [Org Well Known Metadata Reference](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/OrgSetting/#tag/OrgSetting/operation/getWellknownOrgMetadata)
func GetOrgMetadata(ctx *pulumi.Context, args *GetOrgMetadataArgs, opts ...pulumi.InvokeOption) (*GetOrgMetadataResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOrgMetadataResult
	err := ctx.Invoke("okta:Index/getOrgMetadata:getOrgMetadata", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrgMetadata.
type GetOrgMetadataArgs struct {
	// The URIs for the org's configured domains.
	Domains *GetOrgMetadataDomains `pulumi:"domains"`
	// The wellknown org settings (safe for public consumption).
	Settings *GetOrgMetadataSettings `pulumi:"settings"`
}

// A collection of values returned by getOrgMetadata.
type GetOrgMetadataResult struct {
	// The URIs for the org's configured domains.
	Domains *GetOrgMetadataDomains `pulumi:"domains"`
	// The unique identifier of the Org.
	Id string `pulumi:"id"`
	// The authentication pipeline of the org. idx means the org is using the Identity Engine, while v1 means the org is using the Classic authentication pipeline.
	Pipeline string `pulumi:"pipeline"`
	// The wellknown org settings (safe for public consumption).
	Settings *GetOrgMetadataSettings `pulumi:"settings"`
}

func GetOrgMetadataOutput(ctx *pulumi.Context, args GetOrgMetadataOutputArgs, opts ...pulumi.InvokeOption) GetOrgMetadataResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOrgMetadataResult, error) {
			args := v.(GetOrgMetadataArgs)
			r, err := GetOrgMetadata(ctx, &args, opts...)
			var s GetOrgMetadataResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOrgMetadataResultOutput)
}

// A collection of arguments for invoking getOrgMetadata.
type GetOrgMetadataOutputArgs struct {
	// The URIs for the org's configured domains.
	Domains GetOrgMetadataDomainsPtrInput `pulumi:"domains"`
	// The wellknown org settings (safe for public consumption).
	Settings GetOrgMetadataSettingsPtrInput `pulumi:"settings"`
}

func (GetOrgMetadataOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgMetadataArgs)(nil)).Elem()
}

// A collection of values returned by getOrgMetadata.
type GetOrgMetadataResultOutput struct{ *pulumi.OutputState }

func (GetOrgMetadataResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgMetadataResult)(nil)).Elem()
}

func (o GetOrgMetadataResultOutput) ToGetOrgMetadataResultOutput() GetOrgMetadataResultOutput {
	return o
}

func (o GetOrgMetadataResultOutput) ToGetOrgMetadataResultOutputWithContext(ctx context.Context) GetOrgMetadataResultOutput {
	return o
}

func (o GetOrgMetadataResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetOrgMetadataResult] {
	return pulumix.Output[GetOrgMetadataResult]{
		OutputState: o.OutputState,
	}
}

// The URIs for the org's configured domains.
func (o GetOrgMetadataResultOutput) Domains() GetOrgMetadataDomainsPtrOutput {
	return o.ApplyT(func(v GetOrgMetadataResult) *GetOrgMetadataDomains { return v.Domains }).(GetOrgMetadataDomainsPtrOutput)
}

// The unique identifier of the Org.
func (o GetOrgMetadataResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgMetadataResult) string { return v.Id }).(pulumi.StringOutput)
}

// The authentication pipeline of the org. idx means the org is using the Identity Engine, while v1 means the org is using the Classic authentication pipeline.
func (o GetOrgMetadataResultOutput) Pipeline() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgMetadataResult) string { return v.Pipeline }).(pulumi.StringOutput)
}

// The wellknown org settings (safe for public consumption).
func (o GetOrgMetadataResultOutput) Settings() GetOrgMetadataSettingsPtrOutput {
	return o.ApplyT(func(v GetOrgMetadataResult) *GetOrgMetadataSettings { return v.Settings }).(GetOrgMetadataSettingsPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOrgMetadataResultOutput{})
}

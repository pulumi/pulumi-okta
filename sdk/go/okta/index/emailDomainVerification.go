// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package index

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type EmailDomainVerification struct {
	pulumi.CustomResourceState

	// Email domain ID
	EmailDomainId pulumi.StringOutput `pulumi:"emailDomainId"`
}

// NewEmailDomainVerification registers a new resource with the given unique name, arguments, and options.
func NewEmailDomainVerification(ctx *pulumi.Context,
	name string, args *EmailDomainVerificationArgs, opts ...pulumi.ResourceOption) (*EmailDomainVerification, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EmailDomainId == nil {
		return nil, errors.New("invalid value for required argument 'EmailDomainId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EmailDomainVerification
	err := ctx.RegisterResource("okta:Index/emailDomainVerification:EmailDomainVerification", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEmailDomainVerification gets an existing EmailDomainVerification resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEmailDomainVerification(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EmailDomainVerificationState, opts ...pulumi.ResourceOption) (*EmailDomainVerification, error) {
	var resource EmailDomainVerification
	err := ctx.ReadResource("okta:Index/emailDomainVerification:EmailDomainVerification", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EmailDomainVerification resources.
type emailDomainVerificationState struct {
	// Email domain ID
	EmailDomainId *string `pulumi:"emailDomainId"`
}

type EmailDomainVerificationState struct {
	// Email domain ID
	EmailDomainId pulumi.StringPtrInput
}

func (EmailDomainVerificationState) ElementType() reflect.Type {
	return reflect.TypeOf((*emailDomainVerificationState)(nil)).Elem()
}

type emailDomainVerificationArgs struct {
	// Email domain ID
	EmailDomainId string `pulumi:"emailDomainId"`
}

// The set of arguments for constructing a EmailDomainVerification resource.
type EmailDomainVerificationArgs struct {
	// Email domain ID
	EmailDomainId pulumi.StringInput
}

func (EmailDomainVerificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*emailDomainVerificationArgs)(nil)).Elem()
}

type EmailDomainVerificationInput interface {
	pulumi.Input

	ToEmailDomainVerificationOutput() EmailDomainVerificationOutput
	ToEmailDomainVerificationOutputWithContext(ctx context.Context) EmailDomainVerificationOutput
}

func (*EmailDomainVerification) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailDomainVerification)(nil)).Elem()
}

func (i *EmailDomainVerification) ToEmailDomainVerificationOutput() EmailDomainVerificationOutput {
	return i.ToEmailDomainVerificationOutputWithContext(context.Background())
}

func (i *EmailDomainVerification) ToEmailDomainVerificationOutputWithContext(ctx context.Context) EmailDomainVerificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailDomainVerificationOutput)
}

func (i *EmailDomainVerification) ToOutput(ctx context.Context) pulumix.Output[*EmailDomainVerification] {
	return pulumix.Output[*EmailDomainVerification]{
		OutputState: i.ToEmailDomainVerificationOutputWithContext(ctx).OutputState,
	}
}

// EmailDomainVerificationArrayInput is an input type that accepts EmailDomainVerificationArray and EmailDomainVerificationArrayOutput values.
// You can construct a concrete instance of `EmailDomainVerificationArrayInput` via:
//
//	EmailDomainVerificationArray{ EmailDomainVerificationArgs{...} }
type EmailDomainVerificationArrayInput interface {
	pulumi.Input

	ToEmailDomainVerificationArrayOutput() EmailDomainVerificationArrayOutput
	ToEmailDomainVerificationArrayOutputWithContext(context.Context) EmailDomainVerificationArrayOutput
}

type EmailDomainVerificationArray []EmailDomainVerificationInput

func (EmailDomainVerificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EmailDomainVerification)(nil)).Elem()
}

func (i EmailDomainVerificationArray) ToEmailDomainVerificationArrayOutput() EmailDomainVerificationArrayOutput {
	return i.ToEmailDomainVerificationArrayOutputWithContext(context.Background())
}

func (i EmailDomainVerificationArray) ToEmailDomainVerificationArrayOutputWithContext(ctx context.Context) EmailDomainVerificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailDomainVerificationArrayOutput)
}

func (i EmailDomainVerificationArray) ToOutput(ctx context.Context) pulumix.Output[[]*EmailDomainVerification] {
	return pulumix.Output[[]*EmailDomainVerification]{
		OutputState: i.ToEmailDomainVerificationArrayOutputWithContext(ctx).OutputState,
	}
}

// EmailDomainVerificationMapInput is an input type that accepts EmailDomainVerificationMap and EmailDomainVerificationMapOutput values.
// You can construct a concrete instance of `EmailDomainVerificationMapInput` via:
//
//	EmailDomainVerificationMap{ "key": EmailDomainVerificationArgs{...} }
type EmailDomainVerificationMapInput interface {
	pulumi.Input

	ToEmailDomainVerificationMapOutput() EmailDomainVerificationMapOutput
	ToEmailDomainVerificationMapOutputWithContext(context.Context) EmailDomainVerificationMapOutput
}

type EmailDomainVerificationMap map[string]EmailDomainVerificationInput

func (EmailDomainVerificationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EmailDomainVerification)(nil)).Elem()
}

func (i EmailDomainVerificationMap) ToEmailDomainVerificationMapOutput() EmailDomainVerificationMapOutput {
	return i.ToEmailDomainVerificationMapOutputWithContext(context.Background())
}

func (i EmailDomainVerificationMap) ToEmailDomainVerificationMapOutputWithContext(ctx context.Context) EmailDomainVerificationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailDomainVerificationMapOutput)
}

func (i EmailDomainVerificationMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*EmailDomainVerification] {
	return pulumix.Output[map[string]*EmailDomainVerification]{
		OutputState: i.ToEmailDomainVerificationMapOutputWithContext(ctx).OutputState,
	}
}

type EmailDomainVerificationOutput struct{ *pulumi.OutputState }

func (EmailDomainVerificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailDomainVerification)(nil)).Elem()
}

func (o EmailDomainVerificationOutput) ToEmailDomainVerificationOutput() EmailDomainVerificationOutput {
	return o
}

func (o EmailDomainVerificationOutput) ToEmailDomainVerificationOutputWithContext(ctx context.Context) EmailDomainVerificationOutput {
	return o
}

func (o EmailDomainVerificationOutput) ToOutput(ctx context.Context) pulumix.Output[*EmailDomainVerification] {
	return pulumix.Output[*EmailDomainVerification]{
		OutputState: o.OutputState,
	}
}

// Email domain ID
func (o EmailDomainVerificationOutput) EmailDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *EmailDomainVerification) pulumi.StringOutput { return v.EmailDomainId }).(pulumi.StringOutput)
}

type EmailDomainVerificationArrayOutput struct{ *pulumi.OutputState }

func (EmailDomainVerificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EmailDomainVerification)(nil)).Elem()
}

func (o EmailDomainVerificationArrayOutput) ToEmailDomainVerificationArrayOutput() EmailDomainVerificationArrayOutput {
	return o
}

func (o EmailDomainVerificationArrayOutput) ToEmailDomainVerificationArrayOutputWithContext(ctx context.Context) EmailDomainVerificationArrayOutput {
	return o
}

func (o EmailDomainVerificationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*EmailDomainVerification] {
	return pulumix.Output[[]*EmailDomainVerification]{
		OutputState: o.OutputState,
	}
}

func (o EmailDomainVerificationArrayOutput) Index(i pulumi.IntInput) EmailDomainVerificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EmailDomainVerification {
		return vs[0].([]*EmailDomainVerification)[vs[1].(int)]
	}).(EmailDomainVerificationOutput)
}

type EmailDomainVerificationMapOutput struct{ *pulumi.OutputState }

func (EmailDomainVerificationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EmailDomainVerification)(nil)).Elem()
}

func (o EmailDomainVerificationMapOutput) ToEmailDomainVerificationMapOutput() EmailDomainVerificationMapOutput {
	return o
}

func (o EmailDomainVerificationMapOutput) ToEmailDomainVerificationMapOutputWithContext(ctx context.Context) EmailDomainVerificationMapOutput {
	return o
}

func (o EmailDomainVerificationMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*EmailDomainVerification] {
	return pulumix.Output[map[string]*EmailDomainVerification]{
		OutputState: o.OutputState,
	}
}

func (o EmailDomainVerificationMapOutput) MapIndex(k pulumi.StringInput) EmailDomainVerificationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EmailDomainVerification {
		return vs[0].(map[string]*EmailDomainVerification)[vs[1].(string)]
	}).(EmailDomainVerificationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EmailDomainVerificationInput)(nil)).Elem(), &EmailDomainVerification{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailDomainVerificationArrayInput)(nil)).Elem(), EmailDomainVerificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailDomainVerificationMapInput)(nil)).Elem(), EmailDomainVerificationMap{})
	pulumi.RegisterOutputType(EmailDomainVerificationOutput{})
	pulumi.RegisterOutputType(EmailDomainVerificationArrayOutput{})
	pulumi.RegisterOutputType(EmailDomainVerificationMapOutput{})
}

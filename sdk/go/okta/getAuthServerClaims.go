// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve a list of authorization server claims from Okta.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.GetAuthServerClaims(ctx, &okta.GetAuthServerClaimsArgs{
//				AuthServerId: "default",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetAuthServerClaims(ctx *pulumi.Context, args *GetAuthServerClaimsArgs, opts ...pulumi.InvokeOption) (*GetAuthServerClaimsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAuthServerClaimsResult
	err := ctx.Invoke("okta:index/getAuthServerClaims:getAuthServerClaims", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuthServerClaims.
type GetAuthServerClaimsArgs struct {
	// Auth server ID.
	AuthServerId string `pulumi:"authServerId"`
}

// A collection of values returned by getAuthServerClaims.
type GetAuthServerClaimsResult struct {
	AuthServerId string `pulumi:"authServerId"`
	// collection of authorization server claims retrieved from Okta with the following properties.
	Claims []GetAuthServerClaimsClaim `pulumi:"claims"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetAuthServerClaimsOutput(ctx *pulumi.Context, args GetAuthServerClaimsOutputArgs, opts ...pulumi.InvokeOption) GetAuthServerClaimsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAuthServerClaimsResult, error) {
			args := v.(GetAuthServerClaimsArgs)
			r, err := GetAuthServerClaims(ctx, &args, opts...)
			var s GetAuthServerClaimsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAuthServerClaimsResultOutput)
}

// A collection of arguments for invoking getAuthServerClaims.
type GetAuthServerClaimsOutputArgs struct {
	// Auth server ID.
	AuthServerId pulumi.StringInput `pulumi:"authServerId"`
}

func (GetAuthServerClaimsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthServerClaimsArgs)(nil)).Elem()
}

// A collection of values returned by getAuthServerClaims.
type GetAuthServerClaimsResultOutput struct{ *pulumi.OutputState }

func (GetAuthServerClaimsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthServerClaimsResult)(nil)).Elem()
}

func (o GetAuthServerClaimsResultOutput) ToGetAuthServerClaimsResultOutput() GetAuthServerClaimsResultOutput {
	return o
}

func (o GetAuthServerClaimsResultOutput) ToGetAuthServerClaimsResultOutputWithContext(ctx context.Context) GetAuthServerClaimsResultOutput {
	return o
}

func (o GetAuthServerClaimsResultOutput) AuthServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthServerClaimsResult) string { return v.AuthServerId }).(pulumi.StringOutput)
}

// collection of authorization server claims retrieved from Okta with the following properties.
func (o GetAuthServerClaimsResultOutput) Claims() GetAuthServerClaimsClaimArrayOutput {
	return o.ApplyT(func(v GetAuthServerClaimsResult) []GetAuthServerClaimsClaim { return v.Claims }).(GetAuthServerClaimsClaimArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAuthServerClaimsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthServerClaimsResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAuthServerClaimsResultOutput{})
}

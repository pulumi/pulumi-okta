// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v3/go/okta"
//	"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myAppPolicy, err := okta.NewAppSignonPolicy(ctx, "myAppPolicy", &okta.AppSignonPolicyArgs{
//				Description: pulumi.String("Authentication Policy to be used on my app."),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = app.NewOAuth(ctx, "myApp", &app.OAuthArgs{
//				Label: pulumi.String("My App"),
//				Type:  pulumi.String("web"),
//				GrantTypes: pulumi.StringArray{
//					pulumi.String("authorization_code"),
//				},
//				RedirectUris: pulumi.StringArray{
//					pulumi.String("http://localhost:3000"),
//				},
//				PostLogoutRedirectUris: pulumi.StringArray{
//					pulumi.String("http://localhost:3000"),
//				},
//				ResponseTypes: pulumi.StringArray{
//					pulumi.String("code"),
//				},
//				AuthenticationPolicy: myAppPolicy.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// The created policy can be extended using `appSignonPolicyRules`.
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-okta/sdk/v3/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.NewAppSignonPolicy(ctx, "myAppPolicy", &okta.AppSignonPolicyArgs{
//				Description: pulumi.String("Authentication Policy to be used on my app."),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"knowledge": map[string]interface{}{
//					"types": []string{
//						"password",
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = okta.NewAppSignonPolicyRule(ctx, "someRule", &okta.AppSignonPolicyRuleArgs{
//				PolicyId:                  pulumi.Any(resource.Okta_app_signon_policy.My_app_policy.Id),
//				FactorMode:                pulumi.String("1FA"),
//				ReAuthenticationFrequency: pulumi.String("PT43800H"),
//				Constraints: pulumi.StringArray{
//					pulumi.String(json0),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AppSignonPolicy struct {
	pulumi.CustomResourceState

	// Description of the policy.
	Description pulumi.StringOutput `pulumi:"description"`
	// Name of the policy.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewAppSignonPolicy registers a new resource with the given unique name, arguments, and options.
func NewAppSignonPolicy(ctx *pulumi.Context,
	name string, args *AppSignonPolicyArgs, opts ...pulumi.ResourceOption) (*AppSignonPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	var resource AppSignonPolicy
	err := ctx.RegisterResource("okta:index/appSignonPolicy:AppSignonPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSignonPolicy gets an existing AppSignonPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSignonPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSignonPolicyState, opts ...pulumi.ResourceOption) (*AppSignonPolicy, error) {
	var resource AppSignonPolicy
	err := ctx.ReadResource("okta:index/appSignonPolicy:AppSignonPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSignonPolicy resources.
type appSignonPolicyState struct {
	// Description of the policy.
	Description *string `pulumi:"description"`
	// Name of the policy.
	Name *string `pulumi:"name"`
}

type AppSignonPolicyState struct {
	// Description of the policy.
	Description pulumi.StringPtrInput
	// Name of the policy.
	Name pulumi.StringPtrInput
}

func (AppSignonPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSignonPolicyState)(nil)).Elem()
}

type appSignonPolicyArgs struct {
	// Description of the policy.
	Description string `pulumi:"description"`
	// Name of the policy.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a AppSignonPolicy resource.
type AppSignonPolicyArgs struct {
	// Description of the policy.
	Description pulumi.StringInput
	// Name of the policy.
	Name pulumi.StringPtrInput
}

func (AppSignonPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSignonPolicyArgs)(nil)).Elem()
}

type AppSignonPolicyInput interface {
	pulumi.Input

	ToAppSignonPolicyOutput() AppSignonPolicyOutput
	ToAppSignonPolicyOutputWithContext(ctx context.Context) AppSignonPolicyOutput
}

func (*AppSignonPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSignonPolicy)(nil)).Elem()
}

func (i *AppSignonPolicy) ToAppSignonPolicyOutput() AppSignonPolicyOutput {
	return i.ToAppSignonPolicyOutputWithContext(context.Background())
}

func (i *AppSignonPolicy) ToAppSignonPolicyOutputWithContext(ctx context.Context) AppSignonPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSignonPolicyOutput)
}

// AppSignonPolicyArrayInput is an input type that accepts AppSignonPolicyArray and AppSignonPolicyArrayOutput values.
// You can construct a concrete instance of `AppSignonPolicyArrayInput` via:
//
//	AppSignonPolicyArray{ AppSignonPolicyArgs{...} }
type AppSignonPolicyArrayInput interface {
	pulumi.Input

	ToAppSignonPolicyArrayOutput() AppSignonPolicyArrayOutput
	ToAppSignonPolicyArrayOutputWithContext(context.Context) AppSignonPolicyArrayOutput
}

type AppSignonPolicyArray []AppSignonPolicyInput

func (AppSignonPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSignonPolicy)(nil)).Elem()
}

func (i AppSignonPolicyArray) ToAppSignonPolicyArrayOutput() AppSignonPolicyArrayOutput {
	return i.ToAppSignonPolicyArrayOutputWithContext(context.Background())
}

func (i AppSignonPolicyArray) ToAppSignonPolicyArrayOutputWithContext(ctx context.Context) AppSignonPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSignonPolicyArrayOutput)
}

// AppSignonPolicyMapInput is an input type that accepts AppSignonPolicyMap and AppSignonPolicyMapOutput values.
// You can construct a concrete instance of `AppSignonPolicyMapInput` via:
//
//	AppSignonPolicyMap{ "key": AppSignonPolicyArgs{...} }
type AppSignonPolicyMapInput interface {
	pulumi.Input

	ToAppSignonPolicyMapOutput() AppSignonPolicyMapOutput
	ToAppSignonPolicyMapOutputWithContext(context.Context) AppSignonPolicyMapOutput
}

type AppSignonPolicyMap map[string]AppSignonPolicyInput

func (AppSignonPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSignonPolicy)(nil)).Elem()
}

func (i AppSignonPolicyMap) ToAppSignonPolicyMapOutput() AppSignonPolicyMapOutput {
	return i.ToAppSignonPolicyMapOutputWithContext(context.Background())
}

func (i AppSignonPolicyMap) ToAppSignonPolicyMapOutputWithContext(ctx context.Context) AppSignonPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSignonPolicyMapOutput)
}

type AppSignonPolicyOutput struct{ *pulumi.OutputState }

func (AppSignonPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSignonPolicy)(nil)).Elem()
}

func (o AppSignonPolicyOutput) ToAppSignonPolicyOutput() AppSignonPolicyOutput {
	return o
}

func (o AppSignonPolicyOutput) ToAppSignonPolicyOutputWithContext(ctx context.Context) AppSignonPolicyOutput {
	return o
}

// Description of the policy.
func (o AppSignonPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSignonPolicy) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Name of the policy.
func (o AppSignonPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSignonPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type AppSignonPolicyArrayOutput struct{ *pulumi.OutputState }

func (AppSignonPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSignonPolicy)(nil)).Elem()
}

func (o AppSignonPolicyArrayOutput) ToAppSignonPolicyArrayOutput() AppSignonPolicyArrayOutput {
	return o
}

func (o AppSignonPolicyArrayOutput) ToAppSignonPolicyArrayOutputWithContext(ctx context.Context) AppSignonPolicyArrayOutput {
	return o
}

func (o AppSignonPolicyArrayOutput) Index(i pulumi.IntInput) AppSignonPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppSignonPolicy {
		return vs[0].([]*AppSignonPolicy)[vs[1].(int)]
	}).(AppSignonPolicyOutput)
}

type AppSignonPolicyMapOutput struct{ *pulumi.OutputState }

func (AppSignonPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSignonPolicy)(nil)).Elem()
}

func (o AppSignonPolicyMapOutput) ToAppSignonPolicyMapOutput() AppSignonPolicyMapOutput {
	return o
}

func (o AppSignonPolicyMapOutput) ToAppSignonPolicyMapOutputWithContext(ctx context.Context) AppSignonPolicyMapOutput {
	return o
}

func (o AppSignonPolicyMapOutput) MapIndex(k pulumi.StringInput) AppSignonPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppSignonPolicy {
		return vs[0].(map[string]*AppSignonPolicy)[vs[1].(string)]
	}).(AppSignonPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSignonPolicyInput)(nil)).Elem(), &AppSignonPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSignonPolicyArrayInput)(nil)).Elem(), AppSignonPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSignonPolicyMapInput)(nil)).Elem(), AppSignonPolicyMap{})
	pulumi.RegisterOutputType(AppSignonPolicyOutput{})
	pulumi.RegisterOutputType(AppSignonPolicyArrayOutput{})
	pulumi.RegisterOutputType(AppSignonPolicyMapOutput{})
}

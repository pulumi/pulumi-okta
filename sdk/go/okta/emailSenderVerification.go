// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// > **DEPRECATED** use `Index.EmailDomainVerification` instead.
//
// Verifies the email sender. The resource won't be created if the email sender could not be verified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.NewEmailSender(ctx, "exampleEmailSender", &okta.EmailSenderArgs{
//				FromName:    pulumi.String("Paul Atreides"),
//				FromAddress: pulumi.String("no-reply@caladan.planet"),
//				Subdomain:   pulumi.String("mail"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = okta.NewEmailSenderVerification(ctx, "exampleEmailSenderVerification", &okta.EmailSenderVerificationArgs{
//				SenderId: pulumi.Any(okta_email_sender.Valid.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// This resource does not support importing.
type EmailSenderVerification struct {
	pulumi.CustomResourceState

	// Email sender ID.
	SenderId pulumi.StringOutput `pulumi:"senderId"`
}

// NewEmailSenderVerification registers a new resource with the given unique name, arguments, and options.
func NewEmailSenderVerification(ctx *pulumi.Context,
	name string, args *EmailSenderVerificationArgs, opts ...pulumi.ResourceOption) (*EmailSenderVerification, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SenderId == nil {
		return nil, errors.New("invalid value for required argument 'SenderId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EmailSenderVerification
	err := ctx.RegisterResource("okta:index/emailSenderVerification:EmailSenderVerification", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEmailSenderVerification gets an existing EmailSenderVerification resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEmailSenderVerification(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EmailSenderVerificationState, opts ...pulumi.ResourceOption) (*EmailSenderVerification, error) {
	var resource EmailSenderVerification
	err := ctx.ReadResource("okta:index/emailSenderVerification:EmailSenderVerification", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EmailSenderVerification resources.
type emailSenderVerificationState struct {
	// Email sender ID.
	SenderId *string `pulumi:"senderId"`
}

type EmailSenderVerificationState struct {
	// Email sender ID.
	SenderId pulumi.StringPtrInput
}

func (EmailSenderVerificationState) ElementType() reflect.Type {
	return reflect.TypeOf((*emailSenderVerificationState)(nil)).Elem()
}

type emailSenderVerificationArgs struct {
	// Email sender ID.
	SenderId string `pulumi:"senderId"`
}

// The set of arguments for constructing a EmailSenderVerification resource.
type EmailSenderVerificationArgs struct {
	// Email sender ID.
	SenderId pulumi.StringInput
}

func (EmailSenderVerificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*emailSenderVerificationArgs)(nil)).Elem()
}

type EmailSenderVerificationInput interface {
	pulumi.Input

	ToEmailSenderVerificationOutput() EmailSenderVerificationOutput
	ToEmailSenderVerificationOutputWithContext(ctx context.Context) EmailSenderVerificationOutput
}

func (*EmailSenderVerification) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailSenderVerification)(nil)).Elem()
}

func (i *EmailSenderVerification) ToEmailSenderVerificationOutput() EmailSenderVerificationOutput {
	return i.ToEmailSenderVerificationOutputWithContext(context.Background())
}

func (i *EmailSenderVerification) ToEmailSenderVerificationOutputWithContext(ctx context.Context) EmailSenderVerificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSenderVerificationOutput)
}

func (i *EmailSenderVerification) ToOutput(ctx context.Context) pulumix.Output[*EmailSenderVerification] {
	return pulumix.Output[*EmailSenderVerification]{
		OutputState: i.ToEmailSenderVerificationOutputWithContext(ctx).OutputState,
	}
}

// EmailSenderVerificationArrayInput is an input type that accepts EmailSenderVerificationArray and EmailSenderVerificationArrayOutput values.
// You can construct a concrete instance of `EmailSenderVerificationArrayInput` via:
//
//	EmailSenderVerificationArray{ EmailSenderVerificationArgs{...} }
type EmailSenderVerificationArrayInput interface {
	pulumi.Input

	ToEmailSenderVerificationArrayOutput() EmailSenderVerificationArrayOutput
	ToEmailSenderVerificationArrayOutputWithContext(context.Context) EmailSenderVerificationArrayOutput
}

type EmailSenderVerificationArray []EmailSenderVerificationInput

func (EmailSenderVerificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EmailSenderVerification)(nil)).Elem()
}

func (i EmailSenderVerificationArray) ToEmailSenderVerificationArrayOutput() EmailSenderVerificationArrayOutput {
	return i.ToEmailSenderVerificationArrayOutputWithContext(context.Background())
}

func (i EmailSenderVerificationArray) ToEmailSenderVerificationArrayOutputWithContext(ctx context.Context) EmailSenderVerificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSenderVerificationArrayOutput)
}

func (i EmailSenderVerificationArray) ToOutput(ctx context.Context) pulumix.Output[[]*EmailSenderVerification] {
	return pulumix.Output[[]*EmailSenderVerification]{
		OutputState: i.ToEmailSenderVerificationArrayOutputWithContext(ctx).OutputState,
	}
}

// EmailSenderVerificationMapInput is an input type that accepts EmailSenderVerificationMap and EmailSenderVerificationMapOutput values.
// You can construct a concrete instance of `EmailSenderVerificationMapInput` via:
//
//	EmailSenderVerificationMap{ "key": EmailSenderVerificationArgs{...} }
type EmailSenderVerificationMapInput interface {
	pulumi.Input

	ToEmailSenderVerificationMapOutput() EmailSenderVerificationMapOutput
	ToEmailSenderVerificationMapOutputWithContext(context.Context) EmailSenderVerificationMapOutput
}

type EmailSenderVerificationMap map[string]EmailSenderVerificationInput

func (EmailSenderVerificationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EmailSenderVerification)(nil)).Elem()
}

func (i EmailSenderVerificationMap) ToEmailSenderVerificationMapOutput() EmailSenderVerificationMapOutput {
	return i.ToEmailSenderVerificationMapOutputWithContext(context.Background())
}

func (i EmailSenderVerificationMap) ToEmailSenderVerificationMapOutputWithContext(ctx context.Context) EmailSenderVerificationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSenderVerificationMapOutput)
}

func (i EmailSenderVerificationMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*EmailSenderVerification] {
	return pulumix.Output[map[string]*EmailSenderVerification]{
		OutputState: i.ToEmailSenderVerificationMapOutputWithContext(ctx).OutputState,
	}
}

type EmailSenderVerificationOutput struct{ *pulumi.OutputState }

func (EmailSenderVerificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailSenderVerification)(nil)).Elem()
}

func (o EmailSenderVerificationOutput) ToEmailSenderVerificationOutput() EmailSenderVerificationOutput {
	return o
}

func (o EmailSenderVerificationOutput) ToEmailSenderVerificationOutputWithContext(ctx context.Context) EmailSenderVerificationOutput {
	return o
}

func (o EmailSenderVerificationOutput) ToOutput(ctx context.Context) pulumix.Output[*EmailSenderVerification] {
	return pulumix.Output[*EmailSenderVerification]{
		OutputState: o.OutputState,
	}
}

// Email sender ID.
func (o EmailSenderVerificationOutput) SenderId() pulumi.StringOutput {
	return o.ApplyT(func(v *EmailSenderVerification) pulumi.StringOutput { return v.SenderId }).(pulumi.StringOutput)
}

type EmailSenderVerificationArrayOutput struct{ *pulumi.OutputState }

func (EmailSenderVerificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EmailSenderVerification)(nil)).Elem()
}

func (o EmailSenderVerificationArrayOutput) ToEmailSenderVerificationArrayOutput() EmailSenderVerificationArrayOutput {
	return o
}

func (o EmailSenderVerificationArrayOutput) ToEmailSenderVerificationArrayOutputWithContext(ctx context.Context) EmailSenderVerificationArrayOutput {
	return o
}

func (o EmailSenderVerificationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*EmailSenderVerification] {
	return pulumix.Output[[]*EmailSenderVerification]{
		OutputState: o.OutputState,
	}
}

func (o EmailSenderVerificationArrayOutput) Index(i pulumi.IntInput) EmailSenderVerificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EmailSenderVerification {
		return vs[0].([]*EmailSenderVerification)[vs[1].(int)]
	}).(EmailSenderVerificationOutput)
}

type EmailSenderVerificationMapOutput struct{ *pulumi.OutputState }

func (EmailSenderVerificationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EmailSenderVerification)(nil)).Elem()
}

func (o EmailSenderVerificationMapOutput) ToEmailSenderVerificationMapOutput() EmailSenderVerificationMapOutput {
	return o
}

func (o EmailSenderVerificationMapOutput) ToEmailSenderVerificationMapOutputWithContext(ctx context.Context) EmailSenderVerificationMapOutput {
	return o
}

func (o EmailSenderVerificationMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*EmailSenderVerification] {
	return pulumix.Output[map[string]*EmailSenderVerification]{
		OutputState: o.OutputState,
	}
}

func (o EmailSenderVerificationMapOutput) MapIndex(k pulumi.StringInput) EmailSenderVerificationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EmailSenderVerification {
		return vs[0].(map[string]*EmailSenderVerification)[vs[1].(string)]
	}).(EmailSenderVerificationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EmailSenderVerificationInput)(nil)).Elem(), &EmailSenderVerification{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailSenderVerificationArrayInput)(nil)).Elem(), EmailSenderVerificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailSenderVerificationMapInput)(nil)).Elem(), EmailSenderVerificationMap{})
	pulumi.RegisterOutputType(EmailSenderVerificationOutput{})
	pulumi.RegisterOutputType(EmailSenderVerificationArrayOutput{})
	pulumi.RegisterOutputType(EmailSenderVerificationMapOutput{})
}

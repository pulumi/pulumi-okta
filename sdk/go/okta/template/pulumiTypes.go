// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package template

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type EmailTranslation struct {
	// The language to map tthe template to.
	Language string `pulumi:"language"`
	// The email subject line.
	Subject string `pulumi:"subject"`
	// The email body.
	Template string `pulumi:"template"`
}

type EmailTranslationInput interface {
	pulumi.Input

	ToEmailTranslationOutput() EmailTranslationOutput
	ToEmailTranslationOutputWithContext(context.Context) EmailTranslationOutput
}

type EmailTranslationArgs struct {
	// The language to map tthe template to.
	Language pulumi.StringInput `pulumi:"language"`
	// The email subject line.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The email body.
	Template pulumi.StringInput `pulumi:"template"`
}

func (EmailTranslationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailTranslation)(nil)).Elem()
}

func (i EmailTranslationArgs) ToEmailTranslationOutput() EmailTranslationOutput {
	return i.ToEmailTranslationOutputWithContext(context.Background())
}

func (i EmailTranslationArgs) ToEmailTranslationOutputWithContext(ctx context.Context) EmailTranslationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailTranslationOutput)
}

type EmailTranslationArrayInput interface {
	pulumi.Input

	ToEmailTranslationArrayOutput() EmailTranslationArrayOutput
	ToEmailTranslationArrayOutputWithContext(context.Context) EmailTranslationArrayOutput
}

type EmailTranslationArray []EmailTranslationInput

func (EmailTranslationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailTranslation)(nil)).Elem()
}

func (i EmailTranslationArray) ToEmailTranslationArrayOutput() EmailTranslationArrayOutput {
	return i.ToEmailTranslationArrayOutputWithContext(context.Background())
}

func (i EmailTranslationArray) ToEmailTranslationArrayOutputWithContext(ctx context.Context) EmailTranslationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailTranslationArrayOutput)
}

type EmailTranslationOutput struct{ *pulumi.OutputState }

func (EmailTranslationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailTranslation)(nil)).Elem()
}

func (o EmailTranslationOutput) ToEmailTranslationOutput() EmailTranslationOutput {
	return o
}

func (o EmailTranslationOutput) ToEmailTranslationOutputWithContext(ctx context.Context) EmailTranslationOutput {
	return o
}

// The language to map tthe template to.
func (o EmailTranslationOutput) Language() pulumi.StringOutput {
	return o.ApplyT(func(v EmailTranslation) string { return v.Language }).(pulumi.StringOutput)
}

// The email subject line.
func (o EmailTranslationOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v EmailTranslation) string { return v.Subject }).(pulumi.StringOutput)
}

// The email body.
func (o EmailTranslationOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v EmailTranslation) string { return v.Template }).(pulumi.StringOutput)
}

type EmailTranslationArrayOutput struct{ *pulumi.OutputState }

func (EmailTranslationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailTranslation)(nil)).Elem()
}

func (o EmailTranslationArrayOutput) ToEmailTranslationArrayOutput() EmailTranslationArrayOutput {
	return o
}

func (o EmailTranslationArrayOutput) ToEmailTranslationArrayOutputWithContext(ctx context.Context) EmailTranslationArrayOutput {
	return o
}

func (o EmailTranslationArrayOutput) Index(i pulumi.IntInput) EmailTranslationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailTranslation {
		return vs[0].([]EmailTranslation)[vs[1].(int)]
	}).(EmailTranslationOutput)
}

func init() {
	pulumi.RegisterOutputType(EmailTranslationOutput{})
	pulumi.RegisterOutputType(EmailTranslationArrayOutput{})
}

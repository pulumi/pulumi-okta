// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the entitlements for a user and resource after evaluating all grants.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.LookupPrincipalRateLimits(ctx, &okta.LookupPrincipalRateLimitsArgs{
//				Id: "<principal_rate_limit_id>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPrincipalRateLimits(ctx *pulumi.Context, args *LookupPrincipalRateLimitsArgs, opts ...pulumi.InvokeOption) (*LookupPrincipalRateLimitsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPrincipalRateLimitsResult
	err := ctx.Invoke("okta:index/getPrincipalRateLimits:getPrincipalRateLimits", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPrincipalRateLimits.
type LookupPrincipalRateLimitsArgs struct {
	// The unique identifier of the principle rate limit entity.
	Id string `pulumi:"id"`
}

// A collection of values returned by getPrincipalRateLimits.
type LookupPrincipalRateLimitsResult struct {
	// The ID of the user who created the principal rate limit.
	CreatedBy string `pulumi:"createdBy"`
	// The date and time when the principal rate limit was created.
	CreatedDate string `pulumi:"createdDate"`
	// The default concurrency percentage for the principal rate limit.
	DefaultConcurrencyPercentage int `pulumi:"defaultConcurrencyPercentage"`
	// The default percentage for the principal rate limit.
	DefaultPercentage int `pulumi:"defaultPercentage"`
	// The unique identifier of the principle rate limit entity.
	Id         string `pulumi:"id"`
	LastUpdate string `pulumi:"lastUpdate"`
	// The ID of the user who last updated the principal rate limit.
	LastUpdatedBy string `pulumi:"lastUpdatedBy"`
	// The unique identifier of the Okta organization.
	OrgId string `pulumi:"orgId"`
	// The unique identifier of the principal. This is the ID of the API token or OAuth 2.0 app.
	PrincipalId string `pulumi:"principalId"`
	// The type of principal, either an API token or an OAuth 2.0 app.
	PrincipalType string `pulumi:"principalType"`
}

func LookupPrincipalRateLimitsOutput(ctx *pulumi.Context, args LookupPrincipalRateLimitsOutputArgs, opts ...pulumi.InvokeOption) LookupPrincipalRateLimitsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPrincipalRateLimitsResultOutput, error) {
			args := v.(LookupPrincipalRateLimitsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("okta:index/getPrincipalRateLimits:getPrincipalRateLimits", args, LookupPrincipalRateLimitsResultOutput{}, options).(LookupPrincipalRateLimitsResultOutput), nil
		}).(LookupPrincipalRateLimitsResultOutput)
}

// A collection of arguments for invoking getPrincipalRateLimits.
type LookupPrincipalRateLimitsOutputArgs struct {
	// The unique identifier of the principle rate limit entity.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupPrincipalRateLimitsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPrincipalRateLimitsArgs)(nil)).Elem()
}

// A collection of values returned by getPrincipalRateLimits.
type LookupPrincipalRateLimitsResultOutput struct{ *pulumi.OutputState }

func (LookupPrincipalRateLimitsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPrincipalRateLimitsResult)(nil)).Elem()
}

func (o LookupPrincipalRateLimitsResultOutput) ToLookupPrincipalRateLimitsResultOutput() LookupPrincipalRateLimitsResultOutput {
	return o
}

func (o LookupPrincipalRateLimitsResultOutput) ToLookupPrincipalRateLimitsResultOutputWithContext(ctx context.Context) LookupPrincipalRateLimitsResultOutput {
	return o
}

// The ID of the user who created the principal rate limit.
func (o LookupPrincipalRateLimitsResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrincipalRateLimitsResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The date and time when the principal rate limit was created.
func (o LookupPrincipalRateLimitsResultOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrincipalRateLimitsResult) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The default concurrency percentage for the principal rate limit.
func (o LookupPrincipalRateLimitsResultOutput) DefaultConcurrencyPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPrincipalRateLimitsResult) int { return v.DefaultConcurrencyPercentage }).(pulumi.IntOutput)
}

// The default percentage for the principal rate limit.
func (o LookupPrincipalRateLimitsResultOutput) DefaultPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPrincipalRateLimitsResult) int { return v.DefaultPercentage }).(pulumi.IntOutput)
}

// The unique identifier of the principle rate limit entity.
func (o LookupPrincipalRateLimitsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrincipalRateLimitsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPrincipalRateLimitsResultOutput) LastUpdate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrincipalRateLimitsResult) string { return v.LastUpdate }).(pulumi.StringOutput)
}

// The ID of the user who last updated the principal rate limit.
func (o LookupPrincipalRateLimitsResultOutput) LastUpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrincipalRateLimitsResult) string { return v.LastUpdatedBy }).(pulumi.StringOutput)
}

// The unique identifier of the Okta organization.
func (o LookupPrincipalRateLimitsResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrincipalRateLimitsResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// The unique identifier of the principal. This is the ID of the API token or OAuth 2.0 app.
func (o LookupPrincipalRateLimitsResultOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrincipalRateLimitsResult) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The type of principal, either an API token or an OAuth 2.0 app.
func (o LookupPrincipalRateLimitsResultOutput) PrincipalType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrincipalRateLimitsResult) string { return v.PrincipalType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPrincipalRateLimitsResultOutput{})
}

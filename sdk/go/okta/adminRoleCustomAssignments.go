// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource allows the assignment and unassignment of Custom Roles. The `members` field supports these type of resources:
//   - Groups
//   - Users
//
// > **NOTE:** This an `Early Access` feature.
//
// ## Import
//
// Okta Custom Admin Role Assignments can be imported via the Okta ID.
//
// ```sh
// $ pulumi import okta:index/adminRoleCustomAssignments:AdminRoleCustomAssignments example &#60;resource_set_id&#62;/&#60;custom_role_id&#62;
// ```
type AdminRoleCustomAssignments struct {
	pulumi.CustomResourceState

	// ID of the Custom Role.
	CustomRoleId pulumi.StringOutput `pulumi:"customRoleId"`
	// The hrefs that point to User(s) and/or Group(s) that receive the Role. At least one
	// permission must be specified when creating custom role.
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// ID of the target Resource Set.
	ResourceSetId pulumi.StringOutput `pulumi:"resourceSetId"`
}

// NewAdminRoleCustomAssignments registers a new resource with the given unique name, arguments, and options.
func NewAdminRoleCustomAssignments(ctx *pulumi.Context,
	name string, args *AdminRoleCustomAssignmentsArgs, opts ...pulumi.ResourceOption) (*AdminRoleCustomAssignments, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomRoleId == nil {
		return nil, errors.New("invalid value for required argument 'CustomRoleId'")
	}
	if args.ResourceSetId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceSetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AdminRoleCustomAssignments
	err := ctx.RegisterResource("okta:index/adminRoleCustomAssignments:AdminRoleCustomAssignments", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAdminRoleCustomAssignments gets an existing AdminRoleCustomAssignments resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAdminRoleCustomAssignments(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AdminRoleCustomAssignmentsState, opts ...pulumi.ResourceOption) (*AdminRoleCustomAssignments, error) {
	var resource AdminRoleCustomAssignments
	err := ctx.ReadResource("okta:index/adminRoleCustomAssignments:AdminRoleCustomAssignments", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AdminRoleCustomAssignments resources.
type adminRoleCustomAssignmentsState struct {
	// ID of the Custom Role.
	CustomRoleId *string `pulumi:"customRoleId"`
	// The hrefs that point to User(s) and/or Group(s) that receive the Role. At least one
	// permission must be specified when creating custom role.
	Members []string `pulumi:"members"`
	// ID of the target Resource Set.
	ResourceSetId *string `pulumi:"resourceSetId"`
}

type AdminRoleCustomAssignmentsState struct {
	// ID of the Custom Role.
	CustomRoleId pulumi.StringPtrInput
	// The hrefs that point to User(s) and/or Group(s) that receive the Role. At least one
	// permission must be specified when creating custom role.
	Members pulumi.StringArrayInput
	// ID of the target Resource Set.
	ResourceSetId pulumi.StringPtrInput
}

func (AdminRoleCustomAssignmentsState) ElementType() reflect.Type {
	return reflect.TypeOf((*adminRoleCustomAssignmentsState)(nil)).Elem()
}

type adminRoleCustomAssignmentsArgs struct {
	// ID of the Custom Role.
	CustomRoleId string `pulumi:"customRoleId"`
	// The hrefs that point to User(s) and/or Group(s) that receive the Role. At least one
	// permission must be specified when creating custom role.
	Members []string `pulumi:"members"`
	// ID of the target Resource Set.
	ResourceSetId string `pulumi:"resourceSetId"`
}

// The set of arguments for constructing a AdminRoleCustomAssignments resource.
type AdminRoleCustomAssignmentsArgs struct {
	// ID of the Custom Role.
	CustomRoleId pulumi.StringInput
	// The hrefs that point to User(s) and/or Group(s) that receive the Role. At least one
	// permission must be specified when creating custom role.
	Members pulumi.StringArrayInput
	// ID of the target Resource Set.
	ResourceSetId pulumi.StringInput
}

func (AdminRoleCustomAssignmentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*adminRoleCustomAssignmentsArgs)(nil)).Elem()
}

type AdminRoleCustomAssignmentsInput interface {
	pulumi.Input

	ToAdminRoleCustomAssignmentsOutput() AdminRoleCustomAssignmentsOutput
	ToAdminRoleCustomAssignmentsOutputWithContext(ctx context.Context) AdminRoleCustomAssignmentsOutput
}

func (*AdminRoleCustomAssignments) ElementType() reflect.Type {
	return reflect.TypeOf((**AdminRoleCustomAssignments)(nil)).Elem()
}

func (i *AdminRoleCustomAssignments) ToAdminRoleCustomAssignmentsOutput() AdminRoleCustomAssignmentsOutput {
	return i.ToAdminRoleCustomAssignmentsOutputWithContext(context.Background())
}

func (i *AdminRoleCustomAssignments) ToAdminRoleCustomAssignmentsOutputWithContext(ctx context.Context) AdminRoleCustomAssignmentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminRoleCustomAssignmentsOutput)
}

// AdminRoleCustomAssignmentsArrayInput is an input type that accepts AdminRoleCustomAssignmentsArray and AdminRoleCustomAssignmentsArrayOutput values.
// You can construct a concrete instance of `AdminRoleCustomAssignmentsArrayInput` via:
//
//	AdminRoleCustomAssignmentsArray{ AdminRoleCustomAssignmentsArgs{...} }
type AdminRoleCustomAssignmentsArrayInput interface {
	pulumi.Input

	ToAdminRoleCustomAssignmentsArrayOutput() AdminRoleCustomAssignmentsArrayOutput
	ToAdminRoleCustomAssignmentsArrayOutputWithContext(context.Context) AdminRoleCustomAssignmentsArrayOutput
}

type AdminRoleCustomAssignmentsArray []AdminRoleCustomAssignmentsInput

func (AdminRoleCustomAssignmentsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AdminRoleCustomAssignments)(nil)).Elem()
}

func (i AdminRoleCustomAssignmentsArray) ToAdminRoleCustomAssignmentsArrayOutput() AdminRoleCustomAssignmentsArrayOutput {
	return i.ToAdminRoleCustomAssignmentsArrayOutputWithContext(context.Background())
}

func (i AdminRoleCustomAssignmentsArray) ToAdminRoleCustomAssignmentsArrayOutputWithContext(ctx context.Context) AdminRoleCustomAssignmentsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminRoleCustomAssignmentsArrayOutput)
}

// AdminRoleCustomAssignmentsMapInput is an input type that accepts AdminRoleCustomAssignmentsMap and AdminRoleCustomAssignmentsMapOutput values.
// You can construct a concrete instance of `AdminRoleCustomAssignmentsMapInput` via:
//
//	AdminRoleCustomAssignmentsMap{ "key": AdminRoleCustomAssignmentsArgs{...} }
type AdminRoleCustomAssignmentsMapInput interface {
	pulumi.Input

	ToAdminRoleCustomAssignmentsMapOutput() AdminRoleCustomAssignmentsMapOutput
	ToAdminRoleCustomAssignmentsMapOutputWithContext(context.Context) AdminRoleCustomAssignmentsMapOutput
}

type AdminRoleCustomAssignmentsMap map[string]AdminRoleCustomAssignmentsInput

func (AdminRoleCustomAssignmentsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AdminRoleCustomAssignments)(nil)).Elem()
}

func (i AdminRoleCustomAssignmentsMap) ToAdminRoleCustomAssignmentsMapOutput() AdminRoleCustomAssignmentsMapOutput {
	return i.ToAdminRoleCustomAssignmentsMapOutputWithContext(context.Background())
}

func (i AdminRoleCustomAssignmentsMap) ToAdminRoleCustomAssignmentsMapOutputWithContext(ctx context.Context) AdminRoleCustomAssignmentsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminRoleCustomAssignmentsMapOutput)
}

type AdminRoleCustomAssignmentsOutput struct{ *pulumi.OutputState }

func (AdminRoleCustomAssignmentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdminRoleCustomAssignments)(nil)).Elem()
}

func (o AdminRoleCustomAssignmentsOutput) ToAdminRoleCustomAssignmentsOutput() AdminRoleCustomAssignmentsOutput {
	return o
}

func (o AdminRoleCustomAssignmentsOutput) ToAdminRoleCustomAssignmentsOutputWithContext(ctx context.Context) AdminRoleCustomAssignmentsOutput {
	return o
}

// ID of the Custom Role.
func (o AdminRoleCustomAssignmentsOutput) CustomRoleId() pulumi.StringOutput {
	return o.ApplyT(func(v *AdminRoleCustomAssignments) pulumi.StringOutput { return v.CustomRoleId }).(pulumi.StringOutput)
}

// The hrefs that point to User(s) and/or Group(s) that receive the Role. At least one
// permission must be specified when creating custom role.
func (o AdminRoleCustomAssignmentsOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AdminRoleCustomAssignments) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// ID of the target Resource Set.
func (o AdminRoleCustomAssignmentsOutput) ResourceSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *AdminRoleCustomAssignments) pulumi.StringOutput { return v.ResourceSetId }).(pulumi.StringOutput)
}

type AdminRoleCustomAssignmentsArrayOutput struct{ *pulumi.OutputState }

func (AdminRoleCustomAssignmentsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AdminRoleCustomAssignments)(nil)).Elem()
}

func (o AdminRoleCustomAssignmentsArrayOutput) ToAdminRoleCustomAssignmentsArrayOutput() AdminRoleCustomAssignmentsArrayOutput {
	return o
}

func (o AdminRoleCustomAssignmentsArrayOutput) ToAdminRoleCustomAssignmentsArrayOutputWithContext(ctx context.Context) AdminRoleCustomAssignmentsArrayOutput {
	return o
}

func (o AdminRoleCustomAssignmentsArrayOutput) Index(i pulumi.IntInput) AdminRoleCustomAssignmentsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AdminRoleCustomAssignments {
		return vs[0].([]*AdminRoleCustomAssignments)[vs[1].(int)]
	}).(AdminRoleCustomAssignmentsOutput)
}

type AdminRoleCustomAssignmentsMapOutput struct{ *pulumi.OutputState }

func (AdminRoleCustomAssignmentsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AdminRoleCustomAssignments)(nil)).Elem()
}

func (o AdminRoleCustomAssignmentsMapOutput) ToAdminRoleCustomAssignmentsMapOutput() AdminRoleCustomAssignmentsMapOutput {
	return o
}

func (o AdminRoleCustomAssignmentsMapOutput) ToAdminRoleCustomAssignmentsMapOutputWithContext(ctx context.Context) AdminRoleCustomAssignmentsMapOutput {
	return o
}

func (o AdminRoleCustomAssignmentsMapOutput) MapIndex(k pulumi.StringInput) AdminRoleCustomAssignmentsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AdminRoleCustomAssignments {
		return vs[0].(map[string]*AdminRoleCustomAssignments)[vs[1].(string)]
	}).(AdminRoleCustomAssignmentsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AdminRoleCustomAssignmentsInput)(nil)).Elem(), &AdminRoleCustomAssignments{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminRoleCustomAssignmentsArrayInput)(nil)).Elem(), AdminRoleCustomAssignmentsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminRoleCustomAssignmentsMapInput)(nil)).Elem(), AdminRoleCustomAssignmentsMap{})
	pulumi.RegisterOutputType(AdminRoleCustomAssignmentsOutput{})
	pulumi.RegisterOutputType(AdminRoleCustomAssignmentsArrayOutput{})
	pulumi.RegisterOutputType(AdminRoleCustomAssignmentsMapOutput{})
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OAuth struct {
	pulumi.CustomResourceState

	// Custom error page URL
	AccessibilityErrorRedirectUrl pulumi.StringPtrOutput `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page URL
	AccessibilityLoginRedirectUrl pulumi.StringPtrOutput `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self service
	AccessibilitySelfService pulumi.BoolPtrOutput `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote pulumi.StringPtrOutput `pulumi:"adminNote"`
	// Displays specific appLinks for the app
	AppLinksJson pulumi.StringPtrOutput `pulumi:"appLinksJson"`
	// Application settings in JSON format
	AppSettingsJson pulumi.StringPtrOutput `pulumi:"appSettingsJson"`
	// Id of this apps authentication policy
	AuthenticationPolicy pulumi.StringPtrOutput `pulumi:"authenticationPolicy"`
	// Requested key rotation mode.
	AutoKeyRotation pulumi.BoolPtrOutput `pulumi:"autoKeyRotation"`
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrOutput `pulumi:"autoSubmitToolbar"`
	// OAuth client secret key, this can be set when token*endpoint*auth*method is client*secret_basic.
	ClientBasicSecret pulumi.StringPtrOutput `pulumi:"clientBasicSecret"`
	// OAuth client ID. If set during creation, app is created with this id.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// OAuth client secret key. This will be in plain text in your statefile unless you set omitSecret above.
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	// URI to a web page providing information about the client.
	ClientUri pulumi.StringPtrOutput `pulumi:"clientUri"`
	// *Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED. Default value is TRUSTED
	ConsentMethod pulumi.StringPtrOutput `pulumi:"consentMethod"`
	// Application notes for end users.
	EnduserNote pulumi.StringPtrOutput `pulumi:"enduserNote"`
	// List of OAuth 2.0 grant types. Conditional validation params found here https://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per app type.
	GrantTypes pulumi.StringArrayOutput `pulumi:"grantTypes"`
	// Groups claim for an OpenID Connect client application (argument is ignored when API auth is done with OAuth 2.0 credentials)
	GroupsClaim OAuthGroupsClaimPtrOutput `pulumi:"groupsClaim"`
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrOutput `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrOutput `pulumi:"hideWeb"`
	// *Early Access Property*. Enable Federation Broker Mode.
	ImplicitAssignment pulumi.BoolPtrOutput `pulumi:"implicitAssignment"`
	// Issuer mode inherited from OAuth App
	IssuerMode pulumi.StringPtrOutput `pulumi:"issuerMode"`
	Jwks       OAuthJwkArrayOutput    `pulumi:"jwks"`
	// URL reference to JWKS
	JwksUri pulumi.StringPtrOutput `pulumi:"jwksUri"`
	// Pretty name of app.
	Label pulumi.StringOutput `pulumi:"label"`
	// The type of Idp-Initiated login that the client supports, if any
	LoginMode pulumi.StringPtrOutput `pulumi:"loginMode"`
	// List of scopes to use for the request
	LoginScopes pulumi.StringArrayOutput `pulumi:"loginScopes"`
	// URI that initiates login.
	LoginUri pulumi.StringPtrOutput `pulumi:"loginUri"`
	// Local path to logo of the application.
	Logo pulumi.StringPtrOutput `pulumi:"logo"`
	// URI that references a logo for the client.
	LogoUri pulumi.StringPtrOutput `pulumi:"logoUri"`
	// URL of the application's logo
	LogoUrl pulumi.StringOutput `pulumi:"logoUrl"`
	// Name of the claim that will be used in the token.
	Name pulumi.StringOutput `pulumi:"name"`
	// This tells the provider not to persist the application's secret to state. If this is ever changes from true => false your app will be recreated.
	OmitSecret pulumi.BoolPtrOutput `pulumi:"omitSecret"`
	// Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object
	PkceRequired pulumi.BoolPtrOutput `pulumi:"pkceRequired"`
	// URI to web page providing client policy document.
	PolicyUri pulumi.StringPtrOutput `pulumi:"policyUri"`
	// List of URIs for redirection after logout. Note: see okta*app*oauth*post*logout*redirect*uri for appending to this list in a decentralized way.
	PostLogoutRedirectUris pulumi.StringArrayOutput `pulumi:"postLogoutRedirectUris"`
	// Custom JSON that represents an OAuth application's profile
	Profile pulumi.StringPtrOutput `pulumi:"profile"`
	// List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see okta*app*oauth*redirect*uri for appending to this list in a decentralized way.
	RedirectUris pulumi.StringArrayOutput `pulumi:"redirectUris"`
	// *Early Access Property* Grace period for token rotation
	RefreshTokenLeeway pulumi.IntPtrOutput `pulumi:"refreshTokenLeeway"`
	// *Early Access Property* Refresh token rotation behavior
	RefreshTokenRotation pulumi.StringPtrOutput `pulumi:"refreshTokenRotation"`
	// List of OAuth 2.0 response type strings.
	ResponseTypes pulumi.StringArrayOutput `pulumi:"responseTypes"`
	// Sign on mode of application.
	SignOnMode pulumi.StringOutput `pulumi:"signOnMode"`
	// Status of application.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// Requested authentication method for the token endpoint.
	TokenEndpointAuthMethod pulumi.StringPtrOutput `pulumi:"tokenEndpointAuthMethod"`
	// URI to web page providing client tos (terms of service).
	TosUri pulumi.StringPtrOutput `pulumi:"tosUri"`
	// Groups claim type.
	Type pulumi.StringOutput `pulumi:"type"`
	// Username template
	UserNameTemplate pulumi.StringPtrOutput `pulumi:"userNameTemplate"`
	// Push username on update
	UserNameTemplatePushStatus pulumi.StringPtrOutput `pulumi:"userNameTemplatePushStatus"`
	// Username template suffix
	UserNameTemplateSuffix pulumi.StringPtrOutput `pulumi:"userNameTemplateSuffix"`
	// Username template type
	UserNameTemplateType pulumi.StringPtrOutput `pulumi:"userNameTemplateType"`
	// *Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris
	WildcardRedirect pulumi.StringPtrOutput `pulumi:"wildcardRedirect"`
}

// NewOAuth registers a new resource with the given unique name, arguments, and options.
func NewOAuth(ctx *pulumi.Context,
	name string, args *OAuthArgs, opts ...pulumi.ResourceOption) (*OAuth, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.ClientBasicSecret != nil {
		args.ClientBasicSecret = pulumi.ToSecret(args.ClientBasicSecret).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clientBasicSecret",
		"clientSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OAuth
	err := ctx.RegisterResource("okta:app/oAuth:OAuth", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOAuth gets an existing OAuth resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOAuth(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OAuthState, opts ...pulumi.ResourceOption) (*OAuth, error) {
	var resource OAuth
	err := ctx.ReadResource("okta:app/oAuth:OAuth", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OAuth resources.
type oauthState struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page URL
	AccessibilityLoginRedirectUrl *string `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self service
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote *string `pulumi:"adminNote"`
	// Displays specific appLinks for the app
	AppLinksJson *string `pulumi:"appLinksJson"`
	// Application settings in JSON format
	AppSettingsJson *string `pulumi:"appSettingsJson"`
	// Id of this apps authentication policy
	AuthenticationPolicy *string `pulumi:"authenticationPolicy"`
	// Requested key rotation mode.
	AutoKeyRotation *bool `pulumi:"autoKeyRotation"`
	// Display auto submit toolbar
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// OAuth client secret key, this can be set when token*endpoint*auth*method is client*secret_basic.
	ClientBasicSecret *string `pulumi:"clientBasicSecret"`
	// OAuth client ID. If set during creation, app is created with this id.
	ClientId *string `pulumi:"clientId"`
	// OAuth client secret key. This will be in plain text in your statefile unless you set omitSecret above.
	ClientSecret *string `pulumi:"clientSecret"`
	// URI to a web page providing information about the client.
	ClientUri *string `pulumi:"clientUri"`
	// *Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED. Default value is TRUSTED
	ConsentMethod *string `pulumi:"consentMethod"`
	// Application notes for end users.
	EnduserNote *string `pulumi:"enduserNote"`
	// List of OAuth 2.0 grant types. Conditional validation params found here https://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per app type.
	GrantTypes []string `pulumi:"grantTypes"`
	// Groups claim for an OpenID Connect client application (argument is ignored when API auth is done with OAuth 2.0 credentials)
	GroupsClaim *OAuthGroupsClaim `pulumi:"groupsClaim"`
	// Do not display application icon on mobile app
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb *bool `pulumi:"hideWeb"`
	// *Early Access Property*. Enable Federation Broker Mode.
	ImplicitAssignment *bool `pulumi:"implicitAssignment"`
	// Issuer mode inherited from OAuth App
	IssuerMode *string    `pulumi:"issuerMode"`
	Jwks       []OAuthJwk `pulumi:"jwks"`
	// URL reference to JWKS
	JwksUri *string `pulumi:"jwksUri"`
	// Pretty name of app.
	Label *string `pulumi:"label"`
	// The type of Idp-Initiated login that the client supports, if any
	LoginMode *string `pulumi:"loginMode"`
	// List of scopes to use for the request
	LoginScopes []string `pulumi:"loginScopes"`
	// URI that initiates login.
	LoginUri *string `pulumi:"loginUri"`
	// Local path to logo of the application.
	Logo *string `pulumi:"logo"`
	// URI that references a logo for the client.
	LogoUri *string `pulumi:"logoUri"`
	// URL of the application's logo
	LogoUrl *string `pulumi:"logoUrl"`
	// Name of the claim that will be used in the token.
	Name *string `pulumi:"name"`
	// This tells the provider not to persist the application's secret to state. If this is ever changes from true => false your app will be recreated.
	OmitSecret *bool `pulumi:"omitSecret"`
	// Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object
	PkceRequired *bool `pulumi:"pkceRequired"`
	// URI to web page providing client policy document.
	PolicyUri *string `pulumi:"policyUri"`
	// List of URIs for redirection after logout. Note: see okta*app*oauth*post*logout*redirect*uri for appending to this list in a decentralized way.
	PostLogoutRedirectUris []string `pulumi:"postLogoutRedirectUris"`
	// Custom JSON that represents an OAuth application's profile
	Profile *string `pulumi:"profile"`
	// List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see okta*app*oauth*redirect*uri for appending to this list in a decentralized way.
	RedirectUris []string `pulumi:"redirectUris"`
	// *Early Access Property* Grace period for token rotation
	RefreshTokenLeeway *int `pulumi:"refreshTokenLeeway"`
	// *Early Access Property* Refresh token rotation behavior
	RefreshTokenRotation *string `pulumi:"refreshTokenRotation"`
	// List of OAuth 2.0 response type strings.
	ResponseTypes []string `pulumi:"responseTypes"`
	// Sign on mode of application.
	SignOnMode *string `pulumi:"signOnMode"`
	// Status of application.
	Status *string `pulumi:"status"`
	// Requested authentication method for the token endpoint.
	TokenEndpointAuthMethod *string `pulumi:"tokenEndpointAuthMethod"`
	// URI to web page providing client tos (terms of service).
	TosUri *string `pulumi:"tosUri"`
	// Groups claim type.
	Type *string `pulumi:"type"`
	// Username template
	UserNameTemplate *string `pulumi:"userNameTemplate"`
	// Push username on update
	UserNameTemplatePushStatus *string `pulumi:"userNameTemplatePushStatus"`
	// Username template suffix
	UserNameTemplateSuffix *string `pulumi:"userNameTemplateSuffix"`
	// Username template type
	UserNameTemplateType *string `pulumi:"userNameTemplateType"`
	// *Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris
	WildcardRedirect *string `pulumi:"wildcardRedirect"`
}

type OAuthState struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Custom login page URL
	AccessibilityLoginRedirectUrl pulumi.StringPtrInput
	// Enable self service
	AccessibilitySelfService pulumi.BoolPtrInput
	// Application notes for admins.
	AdminNote pulumi.StringPtrInput
	// Displays specific appLinks for the app
	AppLinksJson pulumi.StringPtrInput
	// Application settings in JSON format
	AppSettingsJson pulumi.StringPtrInput
	// Id of this apps authentication policy
	AuthenticationPolicy pulumi.StringPtrInput
	// Requested key rotation mode.
	AutoKeyRotation pulumi.BoolPtrInput
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrInput
	// OAuth client secret key, this can be set when token*endpoint*auth*method is client*secret_basic.
	ClientBasicSecret pulumi.StringPtrInput
	// OAuth client ID. If set during creation, app is created with this id.
	ClientId pulumi.StringPtrInput
	// OAuth client secret key. This will be in plain text in your statefile unless you set omitSecret above.
	ClientSecret pulumi.StringPtrInput
	// URI to a web page providing information about the client.
	ClientUri pulumi.StringPtrInput
	// *Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED. Default value is TRUSTED
	ConsentMethod pulumi.StringPtrInput
	// Application notes for end users.
	EnduserNote pulumi.StringPtrInput
	// List of OAuth 2.0 grant types. Conditional validation params found here https://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per app type.
	GrantTypes pulumi.StringArrayInput
	// Groups claim for an OpenID Connect client application (argument is ignored when API auth is done with OAuth 2.0 credentials)
	GroupsClaim OAuthGroupsClaimPtrInput
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrInput
	// *Early Access Property*. Enable Federation Broker Mode.
	ImplicitAssignment pulumi.BoolPtrInput
	// Issuer mode inherited from OAuth App
	IssuerMode pulumi.StringPtrInput
	Jwks       OAuthJwkArrayInput
	// URL reference to JWKS
	JwksUri pulumi.StringPtrInput
	// Pretty name of app.
	Label pulumi.StringPtrInput
	// The type of Idp-Initiated login that the client supports, if any
	LoginMode pulumi.StringPtrInput
	// List of scopes to use for the request
	LoginScopes pulumi.StringArrayInput
	// URI that initiates login.
	LoginUri pulumi.StringPtrInput
	// Local path to logo of the application.
	Logo pulumi.StringPtrInput
	// URI that references a logo for the client.
	LogoUri pulumi.StringPtrInput
	// URL of the application's logo
	LogoUrl pulumi.StringPtrInput
	// Name of the claim that will be used in the token.
	Name pulumi.StringPtrInput
	// This tells the provider not to persist the application's secret to state. If this is ever changes from true => false your app will be recreated.
	OmitSecret pulumi.BoolPtrInput
	// Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object
	PkceRequired pulumi.BoolPtrInput
	// URI to web page providing client policy document.
	PolicyUri pulumi.StringPtrInput
	// List of URIs for redirection after logout. Note: see okta*app*oauth*post*logout*redirect*uri for appending to this list in a decentralized way.
	PostLogoutRedirectUris pulumi.StringArrayInput
	// Custom JSON that represents an OAuth application's profile
	Profile pulumi.StringPtrInput
	// List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see okta*app*oauth*redirect*uri for appending to this list in a decentralized way.
	RedirectUris pulumi.StringArrayInput
	// *Early Access Property* Grace period for token rotation
	RefreshTokenLeeway pulumi.IntPtrInput
	// *Early Access Property* Refresh token rotation behavior
	RefreshTokenRotation pulumi.StringPtrInput
	// List of OAuth 2.0 response type strings.
	ResponseTypes pulumi.StringArrayInput
	// Sign on mode of application.
	SignOnMode pulumi.StringPtrInput
	// Status of application.
	Status pulumi.StringPtrInput
	// Requested authentication method for the token endpoint.
	TokenEndpointAuthMethod pulumi.StringPtrInput
	// URI to web page providing client tos (terms of service).
	TosUri pulumi.StringPtrInput
	// Groups claim type.
	Type pulumi.StringPtrInput
	// Username template
	UserNameTemplate pulumi.StringPtrInput
	// Push username on update
	UserNameTemplatePushStatus pulumi.StringPtrInput
	// Username template suffix
	UserNameTemplateSuffix pulumi.StringPtrInput
	// Username template type
	UserNameTemplateType pulumi.StringPtrInput
	// *Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris
	WildcardRedirect pulumi.StringPtrInput
}

func (OAuthState) ElementType() reflect.Type {
	return reflect.TypeOf((*oauthState)(nil)).Elem()
}

type oauthArgs struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page URL
	AccessibilityLoginRedirectUrl *string `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self service
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote *string `pulumi:"adminNote"`
	// Displays specific appLinks for the app
	AppLinksJson *string `pulumi:"appLinksJson"`
	// Application settings in JSON format
	AppSettingsJson *string `pulumi:"appSettingsJson"`
	// Id of this apps authentication policy
	AuthenticationPolicy *string `pulumi:"authenticationPolicy"`
	// Requested key rotation mode.
	AutoKeyRotation *bool `pulumi:"autoKeyRotation"`
	// Display auto submit toolbar
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// OAuth client secret key, this can be set when token*endpoint*auth*method is client*secret_basic.
	ClientBasicSecret *string `pulumi:"clientBasicSecret"`
	// OAuth client ID. If set during creation, app is created with this id.
	ClientId *string `pulumi:"clientId"`
	// URI to a web page providing information about the client.
	ClientUri *string `pulumi:"clientUri"`
	// *Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED. Default value is TRUSTED
	ConsentMethod *string `pulumi:"consentMethod"`
	// Application notes for end users.
	EnduserNote *string `pulumi:"enduserNote"`
	// List of OAuth 2.0 grant types. Conditional validation params found here https://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per app type.
	GrantTypes []string `pulumi:"grantTypes"`
	// Groups claim for an OpenID Connect client application (argument is ignored when API auth is done with OAuth 2.0 credentials)
	GroupsClaim *OAuthGroupsClaim `pulumi:"groupsClaim"`
	// Do not display application icon on mobile app
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb *bool `pulumi:"hideWeb"`
	// *Early Access Property*. Enable Federation Broker Mode.
	ImplicitAssignment *bool `pulumi:"implicitAssignment"`
	// Issuer mode inherited from OAuth App
	IssuerMode *string    `pulumi:"issuerMode"`
	Jwks       []OAuthJwk `pulumi:"jwks"`
	// URL reference to JWKS
	JwksUri *string `pulumi:"jwksUri"`
	// Pretty name of app.
	Label string `pulumi:"label"`
	// The type of Idp-Initiated login that the client supports, if any
	LoginMode *string `pulumi:"loginMode"`
	// List of scopes to use for the request
	LoginScopes []string `pulumi:"loginScopes"`
	// URI that initiates login.
	LoginUri *string `pulumi:"loginUri"`
	// Local path to logo of the application.
	Logo *string `pulumi:"logo"`
	// URI that references a logo for the client.
	LogoUri *string `pulumi:"logoUri"`
	// This tells the provider not to persist the application's secret to state. If this is ever changes from true => false your app will be recreated.
	OmitSecret *bool `pulumi:"omitSecret"`
	// Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object
	PkceRequired *bool `pulumi:"pkceRequired"`
	// URI to web page providing client policy document.
	PolicyUri *string `pulumi:"policyUri"`
	// List of URIs for redirection after logout. Note: see okta*app*oauth*post*logout*redirect*uri for appending to this list in a decentralized way.
	PostLogoutRedirectUris []string `pulumi:"postLogoutRedirectUris"`
	// Custom JSON that represents an OAuth application's profile
	Profile *string `pulumi:"profile"`
	// List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see okta*app*oauth*redirect*uri for appending to this list in a decentralized way.
	RedirectUris []string `pulumi:"redirectUris"`
	// *Early Access Property* Grace period for token rotation
	RefreshTokenLeeway *int `pulumi:"refreshTokenLeeway"`
	// *Early Access Property* Refresh token rotation behavior
	RefreshTokenRotation *string `pulumi:"refreshTokenRotation"`
	// List of OAuth 2.0 response type strings.
	ResponseTypes []string `pulumi:"responseTypes"`
	// Status of application.
	Status *string `pulumi:"status"`
	// Requested authentication method for the token endpoint.
	TokenEndpointAuthMethod *string `pulumi:"tokenEndpointAuthMethod"`
	// URI to web page providing client tos (terms of service).
	TosUri *string `pulumi:"tosUri"`
	// Groups claim type.
	Type string `pulumi:"type"`
	// Username template
	UserNameTemplate *string `pulumi:"userNameTemplate"`
	// Push username on update
	UserNameTemplatePushStatus *string `pulumi:"userNameTemplatePushStatus"`
	// Username template suffix
	UserNameTemplateSuffix *string `pulumi:"userNameTemplateSuffix"`
	// Username template type
	UserNameTemplateType *string `pulumi:"userNameTemplateType"`
	// *Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris
	WildcardRedirect *string `pulumi:"wildcardRedirect"`
}

// The set of arguments for constructing a OAuth resource.
type OAuthArgs struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Custom login page URL
	AccessibilityLoginRedirectUrl pulumi.StringPtrInput
	// Enable self service
	AccessibilitySelfService pulumi.BoolPtrInput
	// Application notes for admins.
	AdminNote pulumi.StringPtrInput
	// Displays specific appLinks for the app
	AppLinksJson pulumi.StringPtrInput
	// Application settings in JSON format
	AppSettingsJson pulumi.StringPtrInput
	// Id of this apps authentication policy
	AuthenticationPolicy pulumi.StringPtrInput
	// Requested key rotation mode.
	AutoKeyRotation pulumi.BoolPtrInput
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrInput
	// OAuth client secret key, this can be set when token*endpoint*auth*method is client*secret_basic.
	ClientBasicSecret pulumi.StringPtrInput
	// OAuth client ID. If set during creation, app is created with this id.
	ClientId pulumi.StringPtrInput
	// URI to a web page providing information about the client.
	ClientUri pulumi.StringPtrInput
	// *Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED. Default value is TRUSTED
	ConsentMethod pulumi.StringPtrInput
	// Application notes for end users.
	EnduserNote pulumi.StringPtrInput
	// List of OAuth 2.0 grant types. Conditional validation params found here https://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per app type.
	GrantTypes pulumi.StringArrayInput
	// Groups claim for an OpenID Connect client application (argument is ignored when API auth is done with OAuth 2.0 credentials)
	GroupsClaim OAuthGroupsClaimPtrInput
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrInput
	// *Early Access Property*. Enable Federation Broker Mode.
	ImplicitAssignment pulumi.BoolPtrInput
	// Issuer mode inherited from OAuth App
	IssuerMode pulumi.StringPtrInput
	Jwks       OAuthJwkArrayInput
	// URL reference to JWKS
	JwksUri pulumi.StringPtrInput
	// Pretty name of app.
	Label pulumi.StringInput
	// The type of Idp-Initiated login that the client supports, if any
	LoginMode pulumi.StringPtrInput
	// List of scopes to use for the request
	LoginScopes pulumi.StringArrayInput
	// URI that initiates login.
	LoginUri pulumi.StringPtrInput
	// Local path to logo of the application.
	Logo pulumi.StringPtrInput
	// URI that references a logo for the client.
	LogoUri pulumi.StringPtrInput
	// This tells the provider not to persist the application's secret to state. If this is ever changes from true => false your app will be recreated.
	OmitSecret pulumi.BoolPtrInput
	// Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object
	PkceRequired pulumi.BoolPtrInput
	// URI to web page providing client policy document.
	PolicyUri pulumi.StringPtrInput
	// List of URIs for redirection after logout. Note: see okta*app*oauth*post*logout*redirect*uri for appending to this list in a decentralized way.
	PostLogoutRedirectUris pulumi.StringArrayInput
	// Custom JSON that represents an OAuth application's profile
	Profile pulumi.StringPtrInput
	// List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see okta*app*oauth*redirect*uri for appending to this list in a decentralized way.
	RedirectUris pulumi.StringArrayInput
	// *Early Access Property* Grace period for token rotation
	RefreshTokenLeeway pulumi.IntPtrInput
	// *Early Access Property* Refresh token rotation behavior
	RefreshTokenRotation pulumi.StringPtrInput
	// List of OAuth 2.0 response type strings.
	ResponseTypes pulumi.StringArrayInput
	// Status of application.
	Status pulumi.StringPtrInput
	// Requested authentication method for the token endpoint.
	TokenEndpointAuthMethod pulumi.StringPtrInput
	// URI to web page providing client tos (terms of service).
	TosUri pulumi.StringPtrInput
	// Groups claim type.
	Type pulumi.StringInput
	// Username template
	UserNameTemplate pulumi.StringPtrInput
	// Push username on update
	UserNameTemplatePushStatus pulumi.StringPtrInput
	// Username template suffix
	UserNameTemplateSuffix pulumi.StringPtrInput
	// Username template type
	UserNameTemplateType pulumi.StringPtrInput
	// *Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris
	WildcardRedirect pulumi.StringPtrInput
}

func (OAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*oauthArgs)(nil)).Elem()
}

type OAuthInput interface {
	pulumi.Input

	ToOAuthOutput() OAuthOutput
	ToOAuthOutputWithContext(ctx context.Context) OAuthOutput
}

func (*OAuth) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuth)(nil)).Elem()
}

func (i *OAuth) ToOAuthOutput() OAuthOutput {
	return i.ToOAuthOutputWithContext(context.Background())
}

func (i *OAuth) ToOAuthOutputWithContext(ctx context.Context) OAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuthOutput)
}

// OAuthArrayInput is an input type that accepts OAuthArray and OAuthArrayOutput values.
// You can construct a concrete instance of `OAuthArrayInput` via:
//
//	OAuthArray{ OAuthArgs{...} }
type OAuthArrayInput interface {
	pulumi.Input

	ToOAuthArrayOutput() OAuthArrayOutput
	ToOAuthArrayOutputWithContext(context.Context) OAuthArrayOutput
}

type OAuthArray []OAuthInput

func (OAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OAuth)(nil)).Elem()
}

func (i OAuthArray) ToOAuthArrayOutput() OAuthArrayOutput {
	return i.ToOAuthArrayOutputWithContext(context.Background())
}

func (i OAuthArray) ToOAuthArrayOutputWithContext(ctx context.Context) OAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuthArrayOutput)
}

// OAuthMapInput is an input type that accepts OAuthMap and OAuthMapOutput values.
// You can construct a concrete instance of `OAuthMapInput` via:
//
//	OAuthMap{ "key": OAuthArgs{...} }
type OAuthMapInput interface {
	pulumi.Input

	ToOAuthMapOutput() OAuthMapOutput
	ToOAuthMapOutputWithContext(context.Context) OAuthMapOutput
}

type OAuthMap map[string]OAuthInput

func (OAuthMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OAuth)(nil)).Elem()
}

func (i OAuthMap) ToOAuthMapOutput() OAuthMapOutput {
	return i.ToOAuthMapOutputWithContext(context.Background())
}

func (i OAuthMap) ToOAuthMapOutputWithContext(ctx context.Context) OAuthMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuthMapOutput)
}

type OAuthOutput struct{ *pulumi.OutputState }

func (OAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuth)(nil)).Elem()
}

func (o OAuthOutput) ToOAuthOutput() OAuthOutput {
	return o
}

func (o OAuthOutput) ToOAuthOutputWithContext(ctx context.Context) OAuthOutput {
	return o
}

// Custom error page URL
func (o OAuthOutput) AccessibilityErrorRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.AccessibilityErrorRedirectUrl }).(pulumi.StringPtrOutput)
}

// Custom login page URL
func (o OAuthOutput) AccessibilityLoginRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.AccessibilityLoginRedirectUrl }).(pulumi.StringPtrOutput)
}

// Enable self service
func (o OAuthOutput) AccessibilitySelfService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.BoolPtrOutput { return v.AccessibilitySelfService }).(pulumi.BoolPtrOutput)
}

// Application notes for admins.
func (o OAuthOutput) AdminNote() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.AdminNote }).(pulumi.StringPtrOutput)
}

// Displays specific appLinks for the app
func (o OAuthOutput) AppLinksJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.AppLinksJson }).(pulumi.StringPtrOutput)
}

// Application settings in JSON format
func (o OAuthOutput) AppSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.AppSettingsJson }).(pulumi.StringPtrOutput)
}

// Id of this apps authentication policy
func (o OAuthOutput) AuthenticationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.AuthenticationPolicy }).(pulumi.StringPtrOutput)
}

// Requested key rotation mode.
func (o OAuthOutput) AutoKeyRotation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.BoolPtrOutput { return v.AutoKeyRotation }).(pulumi.BoolPtrOutput)
}

// Display auto submit toolbar
func (o OAuthOutput) AutoSubmitToolbar() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.BoolPtrOutput { return v.AutoSubmitToolbar }).(pulumi.BoolPtrOutput)
}

// OAuth client secret key, this can be set when token*endpoint*auth*method is client*secret_basic.
func (o OAuthOutput) ClientBasicSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.ClientBasicSecret }).(pulumi.StringPtrOutput)
}

// OAuth client ID. If set during creation, app is created with this id.
func (o OAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// OAuth client secret key. This will be in plain text in your statefile unless you set omitSecret above.
func (o OAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringOutput { return v.ClientSecret }).(pulumi.StringOutput)
}

// URI to a web page providing information about the client.
func (o OAuthOutput) ClientUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.ClientUri }).(pulumi.StringPtrOutput)
}

// *Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED. Default value is TRUSTED
func (o OAuthOutput) ConsentMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.ConsentMethod }).(pulumi.StringPtrOutput)
}

// Application notes for end users.
func (o OAuthOutput) EnduserNote() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.EnduserNote }).(pulumi.StringPtrOutput)
}

// List of OAuth 2.0 grant types. Conditional validation params found here https://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per app type.
func (o OAuthOutput) GrantTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringArrayOutput { return v.GrantTypes }).(pulumi.StringArrayOutput)
}

// Groups claim for an OpenID Connect client application (argument is ignored when API auth is done with OAuth 2.0 credentials)
func (o OAuthOutput) GroupsClaim() OAuthGroupsClaimPtrOutput {
	return o.ApplyT(func(v *OAuth) OAuthGroupsClaimPtrOutput { return v.GroupsClaim }).(OAuthGroupsClaimPtrOutput)
}

// Do not display application icon on mobile app
func (o OAuthOutput) HideIos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.BoolPtrOutput { return v.HideIos }).(pulumi.BoolPtrOutput)
}

// Do not display application icon to users
func (o OAuthOutput) HideWeb() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.BoolPtrOutput { return v.HideWeb }).(pulumi.BoolPtrOutput)
}

// *Early Access Property*. Enable Federation Broker Mode.
func (o OAuthOutput) ImplicitAssignment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.BoolPtrOutput { return v.ImplicitAssignment }).(pulumi.BoolPtrOutput)
}

// Issuer mode inherited from OAuth App
func (o OAuthOutput) IssuerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.IssuerMode }).(pulumi.StringPtrOutput)
}

func (o OAuthOutput) Jwks() OAuthJwkArrayOutput {
	return o.ApplyT(func(v *OAuth) OAuthJwkArrayOutput { return v.Jwks }).(OAuthJwkArrayOutput)
}

// URL reference to JWKS
func (o OAuthOutput) JwksUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.JwksUri }).(pulumi.StringPtrOutput)
}

// Pretty name of app.
func (o OAuthOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringOutput { return v.Label }).(pulumi.StringOutput)
}

// The type of Idp-Initiated login that the client supports, if any
func (o OAuthOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.LoginMode }).(pulumi.StringPtrOutput)
}

// List of scopes to use for the request
func (o OAuthOutput) LoginScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringArrayOutput { return v.LoginScopes }).(pulumi.StringArrayOutput)
}

// URI that initiates login.
func (o OAuthOutput) LoginUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.LoginUri }).(pulumi.StringPtrOutput)
}

// Local path to logo of the application.
func (o OAuthOutput) Logo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.Logo }).(pulumi.StringPtrOutput)
}

// URI that references a logo for the client.
func (o OAuthOutput) LogoUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.LogoUri }).(pulumi.StringPtrOutput)
}

// URL of the application's logo
func (o OAuthOutput) LogoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringOutput { return v.LogoUrl }).(pulumi.StringOutput)
}

// Name of the claim that will be used in the token.
func (o OAuthOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// This tells the provider not to persist the application's secret to state. If this is ever changes from true => false your app will be recreated.
func (o OAuthOutput) OmitSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.BoolPtrOutput { return v.OmitSecret }).(pulumi.BoolPtrOutput)
}

// Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object
func (o OAuthOutput) PkceRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.BoolPtrOutput { return v.PkceRequired }).(pulumi.BoolPtrOutput)
}

// URI to web page providing client policy document.
func (o OAuthOutput) PolicyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.PolicyUri }).(pulumi.StringPtrOutput)
}

// List of URIs for redirection after logout. Note: see okta*app*oauth*post*logout*redirect*uri for appending to this list in a decentralized way.
func (o OAuthOutput) PostLogoutRedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringArrayOutput { return v.PostLogoutRedirectUris }).(pulumi.StringArrayOutput)
}

// Custom JSON that represents an OAuth application's profile
func (o OAuthOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.Profile }).(pulumi.StringPtrOutput)
}

// List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see okta*app*oauth*redirect*uri for appending to this list in a decentralized way.
func (o OAuthOutput) RedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringArrayOutput { return v.RedirectUris }).(pulumi.StringArrayOutput)
}

// *Early Access Property* Grace period for token rotation
func (o OAuthOutput) RefreshTokenLeeway() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.IntPtrOutput { return v.RefreshTokenLeeway }).(pulumi.IntPtrOutput)
}

// *Early Access Property* Refresh token rotation behavior
func (o OAuthOutput) RefreshTokenRotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.RefreshTokenRotation }).(pulumi.StringPtrOutput)
}

// List of OAuth 2.0 response type strings.
func (o OAuthOutput) ResponseTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringArrayOutput { return v.ResponseTypes }).(pulumi.StringArrayOutput)
}

// Sign on mode of application.
func (o OAuthOutput) SignOnMode() pulumi.StringOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringOutput { return v.SignOnMode }).(pulumi.StringOutput)
}

// Status of application.
func (o OAuthOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

// Requested authentication method for the token endpoint.
func (o OAuthOutput) TokenEndpointAuthMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.TokenEndpointAuthMethod }).(pulumi.StringPtrOutput)
}

// URI to web page providing client tos (terms of service).
func (o OAuthOutput) TosUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.TosUri }).(pulumi.StringPtrOutput)
}

// Groups claim type.
func (o OAuthOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Username template
func (o OAuthOutput) UserNameTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.UserNameTemplate }).(pulumi.StringPtrOutput)
}

// Push username on update
func (o OAuthOutput) UserNameTemplatePushStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.UserNameTemplatePushStatus }).(pulumi.StringPtrOutput)
}

// Username template suffix
func (o OAuthOutput) UserNameTemplateSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.UserNameTemplateSuffix }).(pulumi.StringPtrOutput)
}

// Username template type
func (o OAuthOutput) UserNameTemplateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.UserNameTemplateType }).(pulumi.StringPtrOutput)
}

// *Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris
func (o OAuthOutput) WildcardRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth) pulumi.StringPtrOutput { return v.WildcardRedirect }).(pulumi.StringPtrOutput)
}

type OAuthArrayOutput struct{ *pulumi.OutputState }

func (OAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OAuth)(nil)).Elem()
}

func (o OAuthArrayOutput) ToOAuthArrayOutput() OAuthArrayOutput {
	return o
}

func (o OAuthArrayOutput) ToOAuthArrayOutputWithContext(ctx context.Context) OAuthArrayOutput {
	return o
}

func (o OAuthArrayOutput) Index(i pulumi.IntInput) OAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OAuth {
		return vs[0].([]*OAuth)[vs[1].(int)]
	}).(OAuthOutput)
}

type OAuthMapOutput struct{ *pulumi.OutputState }

func (OAuthMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OAuth)(nil)).Elem()
}

func (o OAuthMapOutput) ToOAuthMapOutput() OAuthMapOutput {
	return o
}

func (o OAuthMapOutput) ToOAuthMapOutputWithContext(ctx context.Context) OAuthMapOutput {
	return o
}

func (o OAuthMapOutput) MapIndex(k pulumi.StringInput) OAuthOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OAuth {
		return vs[0].(map[string]*OAuth)[vs[1].(string)]
	}).(OAuthOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OAuthInput)(nil)).Elem(), &OAuth{})
	pulumi.RegisterInputType(reflect.TypeOf((*OAuthArrayInput)(nil)).Elem(), OAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OAuthMapInput)(nil)).Elem(), OAuthMap{})
	pulumi.RegisterOutputType(OAuthOutput{})
	pulumi.RegisterOutputType(OAuthArrayOutput{})
	pulumi.RegisterOutputType(OAuthMapOutput{})
}

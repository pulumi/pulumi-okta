// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource allows you to create and configure a SAML Application.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := app.NewSaml(ctx, "example", &app.SamlArgs{
// 			AttributeStatements: app.SamlAttributeStatementArray{
// 				&app.SamlAttributeStatementArgs{
// 					FilterType:  pulumi.String("REGEX"),
// 					FilterValue: pulumi.String(".*"),
// 					Name:        pulumi.String("groups"),
// 					Type:        pulumi.String("GROUP"),
// 				},
// 			},
// 			Audience:              pulumi.String("https://example.com/audience"),
// 			AuthnContextClassRef:  pulumi.String("urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport"),
// 			Destination:           pulumi.String("https://example.com"),
// 			DigestAlgorithm:       pulumi.String("SHA256"),
// 			HonorForceAuthn:       pulumi.Bool(false),
// 			Label:                 pulumi.String("example"),
// 			Recipient:             pulumi.String("https://example.com"),
// 			ResponseSigned:        pulumi.Bool(true),
// 			SignatureAlgorithm:    pulumi.String("RSA_SHA256"),
// 			SsoUrl:                pulumi.String("https://example.com"),
// 			SubjectNameIdFormat:   pulumi.String("urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"),
// 			SubjectNameIdTemplate: pulumi.Any(user.UserName),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ### With inline hook
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app"
// 	"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/inline"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		testHook, err := inline.NewHook(ctx, "testHook", &inline.HookArgs{
// 			Status:  pulumi.String("ACTIVE"),
// 			Type:    pulumi.String("com.okta.saml.tokens.transform"),
// 			Version: pulumi.String("1.0.2"),
// 			Channel: pulumi.StringMap{
// 				"type":    pulumi.String("HTTP"),
// 				"version": pulumi.String("1.0.0"),
// 				"uri":     pulumi.String("https://example.com/test1"),
// 				"method":  pulumi.String("POST"),
// 			},
// 			Auth: pulumi.StringMap{
// 				"key":   pulumi.String("Authorization"),
// 				"type":  pulumi.String("HEADER"),
// 				"value": pulumi.String("secret"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = app.NewSaml(ctx, "testSaml", &app.SamlArgs{
// 			Label:                 pulumi.String("testAcc_replace_with_uuid"),
// 			SsoUrl:                pulumi.String("https://google.com"),
// 			Recipient:             pulumi.String("https://here.com"),
// 			Destination:           pulumi.String("https://its-about-the-journey.com"),
// 			Audience:              pulumi.String("https://audience.com"),
// 			SubjectNameIdTemplate: pulumi.Any(user.UserName),
// 			SubjectNameIdFormat:   pulumi.String("urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"),
// 			ResponseSigned:        pulumi.Bool(true),
// 			SignatureAlgorithm:    pulumi.String("RSA_SHA256"),
// 			DigestAlgorithm:       pulumi.String("SHA256"),
// 			HonorForceAuthn:       pulumi.Bool(false),
// 			AuthnContextClassRef:  pulumi.String("urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport"),
// 			InlineHookId:          testHook.ID(),
// 			AttributeStatements: app.SamlAttributeStatementArray{
// 				&app.SamlAttributeStatementArgs{
// 					Type:        pulumi.String("GROUP"),
// 					Name:        pulumi.String("groups"),
// 					FilterType:  pulumi.String("REGEX"),
// 					FilterValue: pulumi.String(".*"),
// 				},
// 			},
// 		}, pulumi.DependsOn([]pulumi.Resource{
// 			testHook,
// 		}))
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ### Pre-configured app with SAML 1.1 sign-on mode
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := app.NewSaml(ctx, "test", &app.SamlArgs{
// 			AppSettingsJson:      pulumi.String(fmt.Sprintf("%v%v%v%v%v", "{\n", "    \"groupFilter\": \"app1.*\",\n", "    \"siteURL\": \"https://www.okta.com\"\n", "}\n", "\n")),
// 			Label:                pulumi.String("SharePoint (On-Premise)"),
// 			PreconfiguredApp:     pulumi.String("sharepoint_onpremise"),
// 			SamlVersion:          pulumi.String("1.1"),
// 			Status:               pulumi.String("ACTIVE"),
// 			UserNameTemplate:     pulumi.Any(source.Login),
// 			UserNameTemplateType: pulumi.String("BUILT_IN"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ### Pre-configured app with SAML 1.1 sign-on mode, `appSettingsJson` and `appLinksJson`
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := app.NewSaml(ctx, "office365", &app.SamlArgs{
// 			AppLinksJson:     pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v", "  {\n", "      \"calendar\": false,\n", "      \"crm\": false,\n", "      \"delve\": false,\n", "      \"excel\": false,\n", "      \"forms\": false,\n", "      \"mail\": false,\n", "      \"newsfeed\": false,\n", "      \"onedrive\": false,\n", "      \"people\": false,\n", "      \"planner\": false,\n", "      \"powerbi\": false,\n", "      \"powerpoint\": false,\n", "      \"sites\": false,\n", "      \"sway\": false,\n", "      \"tasks\": false,\n", "      \"teams\": false,\n", "      \"video\": false,\n", "      \"word\": false,\n", "      \"yammer\": false,\n", "      \"login\": true\n", "  }\n", "\n")),
// 			AppSettingsJson:  pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v%v", "    {\n", "       \"wsFedConfigureType\": \"AUTO\",\n", "       \"windowsTransportEnabled\": false,\n", "       \"domain\": \"okta.com\",\n", "       \"msftTenant\": \"okta\",\n", "       \"domains\": [],\n", "       \"requireAdminConsent\": false\n", "    }\n", "\n")),
// 			Label:            pulumi.String("Microsoft Office 365"),
// 			PreconfiguredApp: pulumi.String("office365"),
// 			SamlVersion:      pulumi.String("1.1"),
// 			Status:           pulumi.String("ACTIVE"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// A SAML App can be imported via the Okta ID.
//
// ```sh
//  $ pulumi import okta:app/saml:Saml example <app id>
// ```
//
//  It's also possible to import app without groups or/and users. In this case ID may look like this
//
// ```sh
//  $ pulumi import okta:app/saml:Saml example <app id>/skip_users
// ```
//
// ```sh
//  $ pulumi import okta:app/saml:Saml example <app id>/skip_users/skip_groups
// ```
//
// ```sh
//  $ pulumi import okta:app/saml:Saml example <app id>/skip_groups
// ```
type Saml struct {
	pulumi.CustomResourceState

	// Custom error page URL.
	AccessibilityErrorRedirectUrl pulumi.StringPtrOutput `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page for this application.
	AccessibilityLoginRedirectUrl pulumi.StringPtrOutput `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self-service. By default, it is `false`.
	AccessibilitySelfService pulumi.BoolPtrOutput `pulumi:"accessibilitySelfService"`
	// An array of ACS endpoints. You can configure a maximum of 100 endpoints.
	AcsEndpoints pulumi.StringArrayOutput `pulumi:"acsEndpoints"`
	// Application notes for admins.
	AdminNote pulumi.StringPtrOutput `pulumi:"adminNote"`
	// Displays specific appLinks for the app. The value for the link should be boolean.
	AppLinksJson pulumi.StringPtrOutput `pulumi:"appLinksJson"`
	// Application settings in JSON format.
	AppSettingsJson pulumi.StringPtrOutput `pulumi:"appSettingsJson"`
	// Determines whether the SAML assertion is digitally signed.
	AssertionSigned pulumi.BoolPtrOutput `pulumi:"assertionSigned"`
	// List of SAML Attribute statements.
	AttributeStatements SamlAttributeStatementArrayOutput `pulumi:"attributeStatements"`
	// Audience restriction.
	Audience pulumi.StringPtrOutput `pulumi:"audience"`
	// Identifies the SAML authentication context class for the assertionâ€™s authentication statement.
	AuthnContextClassRef pulumi.StringPtrOutput `pulumi:"authnContextClassRef"`
	// Display auto submit toolbar.
	AutoSubmitToolbar pulumi.BoolPtrOutput `pulumi:"autoSubmitToolbar"`
	// The raw signing certificate.
	Certificate pulumi.StringOutput `pulumi:"certificate"`
	// Identifies a specific application resource in an IDP initiated SSO scenario.
	DefaultRelayState pulumi.StringPtrOutput `pulumi:"defaultRelayState"`
	// Identifies the location where the SAML response is intended to be sent inside the SAML assertion.
	Destination pulumi.StringPtrOutput `pulumi:"destination"`
	// Determines the digest algorithm used to digitally sign the SAML assertion and response.
	DigestAlgorithm pulumi.StringPtrOutput `pulumi:"digestAlgorithm"`
	// Application notes for end users.
	EnduserNote pulumi.StringPtrOutput `pulumi:"enduserNote"`
	// Entity ID, the ID portion of the `entityUrl`.
	EntityKey pulumi.StringOutput `pulumi:"entityKey"`
	// Entity URL for instance [http://www.okta.com/exk1fcia6d6EMsf331d8](http://www.okta.com/exk1fcia6d6EMsf331d8).
	EntityUrl pulumi.StringOutput `pulumi:"entityUrl"`
	// features enabled. Notice: you can't currently configure provisioning features via the API.
	Features pulumi.StringArrayOutput `pulumi:"features"`
	// Groups associated with the application.
	// - `DEPRECATED`: Please replace usage with the `AppGroupAssignments` (or `app.GroupAssignment`) resource.
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups pulumi.StringArrayOutput `pulumi:"groups"`
	// Do not display application icon on mobile app.
	HideIos pulumi.BoolPtrOutput `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrOutput `pulumi:"hideWeb"`
	// Prompt user to re-authenticate if SP asks for it.
	HonorForceAuthn pulumi.BoolPtrOutput `pulumi:"honorForceAuthn"`
	// `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post` location from the SAML metadata.
	HttpPostBinding pulumi.StringOutput `pulumi:"httpPostBinding"`
	// `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect` location from the SAML metadata.
	HttpRedirectBinding pulumi.StringOutput `pulumi:"httpRedirectBinding"`
	// SAML issuer ID.
	IdpIssuer pulumi.StringPtrOutput `pulumi:"idpIssuer"`
	// *Early Access Property*. Enables Federation Broker Mode. When this mode is enabled, `users` and `groups` arguments are ignored.
	ImplicitAssignment pulumi.BoolPtrOutput `pulumi:"implicitAssignment"`
	// Saml Inline Hook associated with the application.
	InlineHookId pulumi.StringPtrOutput `pulumi:"inlineHookId"`
	// Certificate key ID.
	KeyId pulumi.StringOutput `pulumi:"keyId"`
	// Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with `keyYearsValid`.
	KeyName pulumi.StringPtrOutput `pulumi:"keyName"`
	// Number of years the certificate is valid (2 - 10 years).
	KeyYearsValid pulumi.IntPtrOutput `pulumi:"keyYearsValid"`
	// label of application.
	Label pulumi.StringOutput `pulumi:"label"`
	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo pulumi.StringPtrOutput `pulumi:"logo"`
	// Direct link of application logo.
	LogoUrl pulumi.StringOutput `pulumi:"logoUrl"`
	// The raw SAML metadata in XML.
	Metadata pulumi.StringOutput `pulumi:"metadata"`
	// SAML xml metadata URL.
	MetadataUrl pulumi.StringOutput `pulumi:"metadataUrl"`
	// The name of the attribute statement.
	Name pulumi.StringOutput `pulumi:"name"`
	// name of application from the Okta Integration Network, if not included a custom app will be created.
	PreconfiguredApp pulumi.StringPtrOutput `pulumi:"preconfiguredApp"`
	// The location where the app may present the SAML assertion.
	Recipient pulumi.StringPtrOutput `pulumi:"recipient"`
	// Denotes whether the request is compressed or not.
	RequestCompressed pulumi.BoolPtrOutput `pulumi:"requestCompressed"`
	// Determines whether the SAML auth response message is digitally signed.
	ResponseSigned pulumi.BoolPtrOutput `pulumi:"responseSigned"`
	// SAML version for the app's sign-on mode. Valid values are: `"2.0"` or `"1.1"`. Default is `"2.0"`.
	SamlVersion pulumi.StringPtrOutput `pulumi:"samlVersion"`
	// Sign-on mode of application.
	SignOnMode pulumi.StringOutput `pulumi:"signOnMode"`
	// Signature algorithm used ot digitally sign the assertion and response.
	SignatureAlgorithm pulumi.StringPtrOutput `pulumi:"signatureAlgorithm"`
	// x509 encoded certificate that the Service Provider uses to sign Single Logout requests.
	// Note: should be provided without `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`, see [official documentation](https://developer.okta.com/docs/reference/api/apps/#service-provider-certificate).
	SingleLogoutCertificate pulumi.StringPtrOutput `pulumi:"singleLogoutCertificate"`
	// The issuer of the Service Provider that generates the Single Logout request.
	SingleLogoutIssuer pulumi.StringPtrOutput `pulumi:"singleLogoutIssuer"`
	// The location where the logout response is sent.
	SingleLogoutUrl pulumi.StringPtrOutput `pulumi:"singleLogoutUrl"`
	// Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
	SkipGroups pulumi.BoolPtrOutput `pulumi:"skipGroups"`
	// Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
	SkipUsers pulumi.BoolPtrOutput `pulumi:"skipUsers"`
	// SAML service provider issuer.
	SpIssuer pulumi.StringPtrOutput `pulumi:"spIssuer"`
	// Single Sign-on Url.
	SsoUrl pulumi.StringPtrOutput `pulumi:"ssoUrl"`
	// status of application.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// Identifies the SAML processing rules.
	SubjectNameIdFormat pulumi.StringPtrOutput `pulumi:"subjectNameIdFormat"`
	// Template for app user's username when a user is assigned to the app.
	SubjectNameIdTemplate pulumi.StringPtrOutput `pulumi:"subjectNameIdTemplate"`
	// Username template. Default: `"${source.login}"`
	UserNameTemplate pulumi.StringPtrOutput `pulumi:"userNameTemplate"`
	// Push username on update. Valid values: `"PUSH"` and `"DONT_PUSH"`.
	UserNameTemplatePushStatus pulumi.StringPtrOutput `pulumi:"userNameTemplatePushStatus"`
	// Username template suffix.
	UserNameTemplateSuffix pulumi.StringPtrOutput `pulumi:"userNameTemplateSuffix"`
	// Username template type. Default: `"BUILT_IN"`.
	UserNameTemplateType pulumi.StringPtrOutput `pulumi:"userNameTemplateType"`
	// Users associated with the application.
	// - `DEPRECATED`: Please replace usage with the `app.User` resource.
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users SamlUserArrayOutput `pulumi:"users"`
}

// NewSaml registers a new resource with the given unique name, arguments, and options.
func NewSaml(ctx *pulumi.Context,
	name string, args *SamlArgs, opts ...pulumi.ResourceOption) (*Saml, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	var resource Saml
	err := ctx.RegisterResource("okta:app/saml:Saml", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSaml gets an existing Saml resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSaml(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SamlState, opts ...pulumi.ResourceOption) (*Saml, error) {
	var resource Saml
	err := ctx.ReadResource("okta:app/saml:Saml", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Saml resources.
type samlState struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page for this application.
	AccessibilityLoginRedirectUrl *string `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self-service. By default, it is `false`.
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// An array of ACS endpoints. You can configure a maximum of 100 endpoints.
	AcsEndpoints []string `pulumi:"acsEndpoints"`
	// Application notes for admins.
	AdminNote *string `pulumi:"adminNote"`
	// Displays specific appLinks for the app. The value for the link should be boolean.
	AppLinksJson *string `pulumi:"appLinksJson"`
	// Application settings in JSON format.
	AppSettingsJson *string `pulumi:"appSettingsJson"`
	// Determines whether the SAML assertion is digitally signed.
	AssertionSigned *bool `pulumi:"assertionSigned"`
	// List of SAML Attribute statements.
	AttributeStatements []SamlAttributeStatement `pulumi:"attributeStatements"`
	// Audience restriction.
	Audience *string `pulumi:"audience"`
	// Identifies the SAML authentication context class for the assertionâ€™s authentication statement.
	AuthnContextClassRef *string `pulumi:"authnContextClassRef"`
	// Display auto submit toolbar.
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// The raw signing certificate.
	Certificate *string `pulumi:"certificate"`
	// Identifies a specific application resource in an IDP initiated SSO scenario.
	DefaultRelayState *string `pulumi:"defaultRelayState"`
	// Identifies the location where the SAML response is intended to be sent inside the SAML assertion.
	Destination *string `pulumi:"destination"`
	// Determines the digest algorithm used to digitally sign the SAML assertion and response.
	DigestAlgorithm *string `pulumi:"digestAlgorithm"`
	// Application notes for end users.
	EnduserNote *string `pulumi:"enduserNote"`
	// Entity ID, the ID portion of the `entityUrl`.
	EntityKey *string `pulumi:"entityKey"`
	// Entity URL for instance [http://www.okta.com/exk1fcia6d6EMsf331d8](http://www.okta.com/exk1fcia6d6EMsf331d8).
	EntityUrl *string `pulumi:"entityUrl"`
	// features enabled. Notice: you can't currently configure provisioning features via the API.
	Features []string `pulumi:"features"`
	// Groups associated with the application.
	// - `DEPRECATED`: Please replace usage with the `AppGroupAssignments` (or `app.GroupAssignment`) resource.
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups []string `pulumi:"groups"`
	// Do not display application icon on mobile app.
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb *bool `pulumi:"hideWeb"`
	// Prompt user to re-authenticate if SP asks for it.
	HonorForceAuthn *bool `pulumi:"honorForceAuthn"`
	// `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post` location from the SAML metadata.
	HttpPostBinding *string `pulumi:"httpPostBinding"`
	// `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect` location from the SAML metadata.
	HttpRedirectBinding *string `pulumi:"httpRedirectBinding"`
	// SAML issuer ID.
	IdpIssuer *string `pulumi:"idpIssuer"`
	// *Early Access Property*. Enables Federation Broker Mode. When this mode is enabled, `users` and `groups` arguments are ignored.
	ImplicitAssignment *bool `pulumi:"implicitAssignment"`
	// Saml Inline Hook associated with the application.
	InlineHookId *string `pulumi:"inlineHookId"`
	// Certificate key ID.
	KeyId *string `pulumi:"keyId"`
	// Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with `keyYearsValid`.
	KeyName *string `pulumi:"keyName"`
	// Number of years the certificate is valid (2 - 10 years).
	KeyYearsValid *int `pulumi:"keyYearsValid"`
	// label of application.
	Label *string `pulumi:"label"`
	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo *string `pulumi:"logo"`
	// Direct link of application logo.
	LogoUrl *string `pulumi:"logoUrl"`
	// The raw SAML metadata in XML.
	Metadata *string `pulumi:"metadata"`
	// SAML xml metadata URL.
	MetadataUrl *string `pulumi:"metadataUrl"`
	// The name of the attribute statement.
	Name *string `pulumi:"name"`
	// name of application from the Okta Integration Network, if not included a custom app will be created.
	PreconfiguredApp *string `pulumi:"preconfiguredApp"`
	// The location where the app may present the SAML assertion.
	Recipient *string `pulumi:"recipient"`
	// Denotes whether the request is compressed or not.
	RequestCompressed *bool `pulumi:"requestCompressed"`
	// Determines whether the SAML auth response message is digitally signed.
	ResponseSigned *bool `pulumi:"responseSigned"`
	// SAML version for the app's sign-on mode. Valid values are: `"2.0"` or `"1.1"`. Default is `"2.0"`.
	SamlVersion *string `pulumi:"samlVersion"`
	// Sign-on mode of application.
	SignOnMode *string `pulumi:"signOnMode"`
	// Signature algorithm used ot digitally sign the assertion and response.
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
	// x509 encoded certificate that the Service Provider uses to sign Single Logout requests.
	// Note: should be provided without `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`, see [official documentation](https://developer.okta.com/docs/reference/api/apps/#service-provider-certificate).
	SingleLogoutCertificate *string `pulumi:"singleLogoutCertificate"`
	// The issuer of the Service Provider that generates the Single Logout request.
	SingleLogoutIssuer *string `pulumi:"singleLogoutIssuer"`
	// The location where the logout response is sent.
	SingleLogoutUrl *string `pulumi:"singleLogoutUrl"`
	// Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
	SkipGroups *bool `pulumi:"skipGroups"`
	// Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
	SkipUsers *bool `pulumi:"skipUsers"`
	// SAML service provider issuer.
	SpIssuer *string `pulumi:"spIssuer"`
	// Single Sign-on Url.
	SsoUrl *string `pulumi:"ssoUrl"`
	// status of application.
	Status *string `pulumi:"status"`
	// Identifies the SAML processing rules.
	SubjectNameIdFormat *string `pulumi:"subjectNameIdFormat"`
	// Template for app user's username when a user is assigned to the app.
	SubjectNameIdTemplate *string `pulumi:"subjectNameIdTemplate"`
	// Username template. Default: `"${source.login}"`
	UserNameTemplate *string `pulumi:"userNameTemplate"`
	// Push username on update. Valid values: `"PUSH"` and `"DONT_PUSH"`.
	UserNameTemplatePushStatus *string `pulumi:"userNameTemplatePushStatus"`
	// Username template suffix.
	UserNameTemplateSuffix *string `pulumi:"userNameTemplateSuffix"`
	// Username template type. Default: `"BUILT_IN"`.
	UserNameTemplateType *string `pulumi:"userNameTemplateType"`
	// Users associated with the application.
	// - `DEPRECATED`: Please replace usage with the `app.User` resource.
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users []SamlUser `pulumi:"users"`
}

type SamlState struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Custom login page for this application.
	AccessibilityLoginRedirectUrl pulumi.StringPtrInput
	// Enable self-service. By default, it is `false`.
	AccessibilitySelfService pulumi.BoolPtrInput
	// An array of ACS endpoints. You can configure a maximum of 100 endpoints.
	AcsEndpoints pulumi.StringArrayInput
	// Application notes for admins.
	AdminNote pulumi.StringPtrInput
	// Displays specific appLinks for the app. The value for the link should be boolean.
	AppLinksJson pulumi.StringPtrInput
	// Application settings in JSON format.
	AppSettingsJson pulumi.StringPtrInput
	// Determines whether the SAML assertion is digitally signed.
	AssertionSigned pulumi.BoolPtrInput
	// List of SAML Attribute statements.
	AttributeStatements SamlAttributeStatementArrayInput
	// Audience restriction.
	Audience pulumi.StringPtrInput
	// Identifies the SAML authentication context class for the assertionâ€™s authentication statement.
	AuthnContextClassRef pulumi.StringPtrInput
	// Display auto submit toolbar.
	AutoSubmitToolbar pulumi.BoolPtrInput
	// The raw signing certificate.
	Certificate pulumi.StringPtrInput
	// Identifies a specific application resource in an IDP initiated SSO scenario.
	DefaultRelayState pulumi.StringPtrInput
	// Identifies the location where the SAML response is intended to be sent inside the SAML assertion.
	Destination pulumi.StringPtrInput
	// Determines the digest algorithm used to digitally sign the SAML assertion and response.
	DigestAlgorithm pulumi.StringPtrInput
	// Application notes for end users.
	EnduserNote pulumi.StringPtrInput
	// Entity ID, the ID portion of the `entityUrl`.
	EntityKey pulumi.StringPtrInput
	// Entity URL for instance [http://www.okta.com/exk1fcia6d6EMsf331d8](http://www.okta.com/exk1fcia6d6EMsf331d8).
	EntityUrl pulumi.StringPtrInput
	// features enabled. Notice: you can't currently configure provisioning features via the API.
	Features pulumi.StringArrayInput
	// Groups associated with the application.
	// - `DEPRECATED`: Please replace usage with the `AppGroupAssignments` (or `app.GroupAssignment`) resource.
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups pulumi.StringArrayInput
	// Do not display application icon on mobile app.
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrInput
	// Prompt user to re-authenticate if SP asks for it.
	HonorForceAuthn pulumi.BoolPtrInput
	// `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post` location from the SAML metadata.
	HttpPostBinding pulumi.StringPtrInput
	// `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect` location from the SAML metadata.
	HttpRedirectBinding pulumi.StringPtrInput
	// SAML issuer ID.
	IdpIssuer pulumi.StringPtrInput
	// *Early Access Property*. Enables Federation Broker Mode. When this mode is enabled, `users` and `groups` arguments are ignored.
	ImplicitAssignment pulumi.BoolPtrInput
	// Saml Inline Hook associated with the application.
	InlineHookId pulumi.StringPtrInput
	// Certificate key ID.
	KeyId pulumi.StringPtrInput
	// Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with `keyYearsValid`.
	KeyName pulumi.StringPtrInput
	// Number of years the certificate is valid (2 - 10 years).
	KeyYearsValid pulumi.IntPtrInput
	// label of application.
	Label pulumi.StringPtrInput
	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo pulumi.StringPtrInput
	// Direct link of application logo.
	LogoUrl pulumi.StringPtrInput
	// The raw SAML metadata in XML.
	Metadata pulumi.StringPtrInput
	// SAML xml metadata URL.
	MetadataUrl pulumi.StringPtrInput
	// The name of the attribute statement.
	Name pulumi.StringPtrInput
	// name of application from the Okta Integration Network, if not included a custom app will be created.
	PreconfiguredApp pulumi.StringPtrInput
	// The location where the app may present the SAML assertion.
	Recipient pulumi.StringPtrInput
	// Denotes whether the request is compressed or not.
	RequestCompressed pulumi.BoolPtrInput
	// Determines whether the SAML auth response message is digitally signed.
	ResponseSigned pulumi.BoolPtrInput
	// SAML version for the app's sign-on mode. Valid values are: `"2.0"` or `"1.1"`. Default is `"2.0"`.
	SamlVersion pulumi.StringPtrInput
	// Sign-on mode of application.
	SignOnMode pulumi.StringPtrInput
	// Signature algorithm used ot digitally sign the assertion and response.
	SignatureAlgorithm pulumi.StringPtrInput
	// x509 encoded certificate that the Service Provider uses to sign Single Logout requests.
	// Note: should be provided without `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`, see [official documentation](https://developer.okta.com/docs/reference/api/apps/#service-provider-certificate).
	SingleLogoutCertificate pulumi.StringPtrInput
	// The issuer of the Service Provider that generates the Single Logout request.
	SingleLogoutIssuer pulumi.StringPtrInput
	// The location where the logout response is sent.
	SingleLogoutUrl pulumi.StringPtrInput
	// Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
	SkipGroups pulumi.BoolPtrInput
	// Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
	SkipUsers pulumi.BoolPtrInput
	// SAML service provider issuer.
	SpIssuer pulumi.StringPtrInput
	// Single Sign-on Url.
	SsoUrl pulumi.StringPtrInput
	// status of application.
	Status pulumi.StringPtrInput
	// Identifies the SAML processing rules.
	SubjectNameIdFormat pulumi.StringPtrInput
	// Template for app user's username when a user is assigned to the app.
	SubjectNameIdTemplate pulumi.StringPtrInput
	// Username template. Default: `"${source.login}"`
	UserNameTemplate pulumi.StringPtrInput
	// Push username on update. Valid values: `"PUSH"` and `"DONT_PUSH"`.
	UserNameTemplatePushStatus pulumi.StringPtrInput
	// Username template suffix.
	UserNameTemplateSuffix pulumi.StringPtrInput
	// Username template type. Default: `"BUILT_IN"`.
	UserNameTemplateType pulumi.StringPtrInput
	// Users associated with the application.
	// - `DEPRECATED`: Please replace usage with the `app.User` resource.
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users SamlUserArrayInput
}

func (SamlState) ElementType() reflect.Type {
	return reflect.TypeOf((*samlState)(nil)).Elem()
}

type samlArgs struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page for this application.
	AccessibilityLoginRedirectUrl *string `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self-service. By default, it is `false`.
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// An array of ACS endpoints. You can configure a maximum of 100 endpoints.
	AcsEndpoints []string `pulumi:"acsEndpoints"`
	// Application notes for admins.
	AdminNote *string `pulumi:"adminNote"`
	// Displays specific appLinks for the app. The value for the link should be boolean.
	AppLinksJson *string `pulumi:"appLinksJson"`
	// Application settings in JSON format.
	AppSettingsJson *string `pulumi:"appSettingsJson"`
	// Determines whether the SAML assertion is digitally signed.
	AssertionSigned *bool `pulumi:"assertionSigned"`
	// List of SAML Attribute statements.
	AttributeStatements []SamlAttributeStatement `pulumi:"attributeStatements"`
	// Audience restriction.
	Audience *string `pulumi:"audience"`
	// Identifies the SAML authentication context class for the assertionâ€™s authentication statement.
	AuthnContextClassRef *string `pulumi:"authnContextClassRef"`
	// Display auto submit toolbar.
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Identifies a specific application resource in an IDP initiated SSO scenario.
	DefaultRelayState *string `pulumi:"defaultRelayState"`
	// Identifies the location where the SAML response is intended to be sent inside the SAML assertion.
	Destination *string `pulumi:"destination"`
	// Determines the digest algorithm used to digitally sign the SAML assertion and response.
	DigestAlgorithm *string `pulumi:"digestAlgorithm"`
	// Application notes for end users.
	EnduserNote *string `pulumi:"enduserNote"`
	// features enabled. Notice: you can't currently configure provisioning features via the API.
	Features []string `pulumi:"features"`
	// Groups associated with the application.
	// - `DEPRECATED`: Please replace usage with the `AppGroupAssignments` (or `app.GroupAssignment`) resource.
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups []string `pulumi:"groups"`
	// Do not display application icon on mobile app.
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb *bool `pulumi:"hideWeb"`
	// Prompt user to re-authenticate if SP asks for it.
	HonorForceAuthn *bool `pulumi:"honorForceAuthn"`
	// SAML issuer ID.
	IdpIssuer *string `pulumi:"idpIssuer"`
	// *Early Access Property*. Enables Federation Broker Mode. When this mode is enabled, `users` and `groups` arguments are ignored.
	ImplicitAssignment *bool `pulumi:"implicitAssignment"`
	// Saml Inline Hook associated with the application.
	InlineHookId *string `pulumi:"inlineHookId"`
	// Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with `keyYearsValid`.
	KeyName *string `pulumi:"keyName"`
	// Number of years the certificate is valid (2 - 10 years).
	KeyYearsValid *int `pulumi:"keyYearsValid"`
	// label of application.
	Label string `pulumi:"label"`
	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo *string `pulumi:"logo"`
	// name of application from the Okta Integration Network, if not included a custom app will be created.
	PreconfiguredApp *string `pulumi:"preconfiguredApp"`
	// The location where the app may present the SAML assertion.
	Recipient *string `pulumi:"recipient"`
	// Denotes whether the request is compressed or not.
	RequestCompressed *bool `pulumi:"requestCompressed"`
	// Determines whether the SAML auth response message is digitally signed.
	ResponseSigned *bool `pulumi:"responseSigned"`
	// SAML version for the app's sign-on mode. Valid values are: `"2.0"` or `"1.1"`. Default is `"2.0"`.
	SamlVersion *string `pulumi:"samlVersion"`
	// Signature algorithm used ot digitally sign the assertion and response.
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
	// x509 encoded certificate that the Service Provider uses to sign Single Logout requests.
	// Note: should be provided without `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`, see [official documentation](https://developer.okta.com/docs/reference/api/apps/#service-provider-certificate).
	SingleLogoutCertificate *string `pulumi:"singleLogoutCertificate"`
	// The issuer of the Service Provider that generates the Single Logout request.
	SingleLogoutIssuer *string `pulumi:"singleLogoutIssuer"`
	// The location where the logout response is sent.
	SingleLogoutUrl *string `pulumi:"singleLogoutUrl"`
	// Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
	SkipGroups *bool `pulumi:"skipGroups"`
	// Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
	SkipUsers *bool `pulumi:"skipUsers"`
	// SAML service provider issuer.
	SpIssuer *string `pulumi:"spIssuer"`
	// Single Sign-on Url.
	SsoUrl *string `pulumi:"ssoUrl"`
	// status of application.
	Status *string `pulumi:"status"`
	// Identifies the SAML processing rules.
	SubjectNameIdFormat *string `pulumi:"subjectNameIdFormat"`
	// Template for app user's username when a user is assigned to the app.
	SubjectNameIdTemplate *string `pulumi:"subjectNameIdTemplate"`
	// Username template. Default: `"${source.login}"`
	UserNameTemplate *string `pulumi:"userNameTemplate"`
	// Push username on update. Valid values: `"PUSH"` and `"DONT_PUSH"`.
	UserNameTemplatePushStatus *string `pulumi:"userNameTemplatePushStatus"`
	// Username template suffix.
	UserNameTemplateSuffix *string `pulumi:"userNameTemplateSuffix"`
	// Username template type. Default: `"BUILT_IN"`.
	UserNameTemplateType *string `pulumi:"userNameTemplateType"`
	// Users associated with the application.
	// - `DEPRECATED`: Please replace usage with the `app.User` resource.
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users []SamlUser `pulumi:"users"`
}

// The set of arguments for constructing a Saml resource.
type SamlArgs struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Custom login page for this application.
	AccessibilityLoginRedirectUrl pulumi.StringPtrInput
	// Enable self-service. By default, it is `false`.
	AccessibilitySelfService pulumi.BoolPtrInput
	// An array of ACS endpoints. You can configure a maximum of 100 endpoints.
	AcsEndpoints pulumi.StringArrayInput
	// Application notes for admins.
	AdminNote pulumi.StringPtrInput
	// Displays specific appLinks for the app. The value for the link should be boolean.
	AppLinksJson pulumi.StringPtrInput
	// Application settings in JSON format.
	AppSettingsJson pulumi.StringPtrInput
	// Determines whether the SAML assertion is digitally signed.
	AssertionSigned pulumi.BoolPtrInput
	// List of SAML Attribute statements.
	AttributeStatements SamlAttributeStatementArrayInput
	// Audience restriction.
	Audience pulumi.StringPtrInput
	// Identifies the SAML authentication context class for the assertionâ€™s authentication statement.
	AuthnContextClassRef pulumi.StringPtrInput
	// Display auto submit toolbar.
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Identifies a specific application resource in an IDP initiated SSO scenario.
	DefaultRelayState pulumi.StringPtrInput
	// Identifies the location where the SAML response is intended to be sent inside the SAML assertion.
	Destination pulumi.StringPtrInput
	// Determines the digest algorithm used to digitally sign the SAML assertion and response.
	DigestAlgorithm pulumi.StringPtrInput
	// Application notes for end users.
	EnduserNote pulumi.StringPtrInput
	// features enabled. Notice: you can't currently configure provisioning features via the API.
	Features pulumi.StringArrayInput
	// Groups associated with the application.
	// - `DEPRECATED`: Please replace usage with the `AppGroupAssignments` (or `app.GroupAssignment`) resource.
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups pulumi.StringArrayInput
	// Do not display application icon on mobile app.
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrInput
	// Prompt user to re-authenticate if SP asks for it.
	HonorForceAuthn pulumi.BoolPtrInput
	// SAML issuer ID.
	IdpIssuer pulumi.StringPtrInput
	// *Early Access Property*. Enables Federation Broker Mode. When this mode is enabled, `users` and `groups` arguments are ignored.
	ImplicitAssignment pulumi.BoolPtrInput
	// Saml Inline Hook associated with the application.
	InlineHookId pulumi.StringPtrInput
	// Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with `keyYearsValid`.
	KeyName pulumi.StringPtrInput
	// Number of years the certificate is valid (2 - 10 years).
	KeyYearsValid pulumi.IntPtrInput
	// label of application.
	Label pulumi.StringInput
	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo pulumi.StringPtrInput
	// name of application from the Okta Integration Network, if not included a custom app will be created.
	PreconfiguredApp pulumi.StringPtrInput
	// The location where the app may present the SAML assertion.
	Recipient pulumi.StringPtrInput
	// Denotes whether the request is compressed or not.
	RequestCompressed pulumi.BoolPtrInput
	// Determines whether the SAML auth response message is digitally signed.
	ResponseSigned pulumi.BoolPtrInput
	// SAML version for the app's sign-on mode. Valid values are: `"2.0"` or `"1.1"`. Default is `"2.0"`.
	SamlVersion pulumi.StringPtrInput
	// Signature algorithm used ot digitally sign the assertion and response.
	SignatureAlgorithm pulumi.StringPtrInput
	// x509 encoded certificate that the Service Provider uses to sign Single Logout requests.
	// Note: should be provided without `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`, see [official documentation](https://developer.okta.com/docs/reference/api/apps/#service-provider-certificate).
	SingleLogoutCertificate pulumi.StringPtrInput
	// The issuer of the Service Provider that generates the Single Logout request.
	SingleLogoutIssuer pulumi.StringPtrInput
	// The location where the logout response is sent.
	SingleLogoutUrl pulumi.StringPtrInput
	// Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
	SkipGroups pulumi.BoolPtrInput
	// Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
	SkipUsers pulumi.BoolPtrInput
	// SAML service provider issuer.
	SpIssuer pulumi.StringPtrInput
	// Single Sign-on Url.
	SsoUrl pulumi.StringPtrInput
	// status of application.
	Status pulumi.StringPtrInput
	// Identifies the SAML processing rules.
	SubjectNameIdFormat pulumi.StringPtrInput
	// Template for app user's username when a user is assigned to the app.
	SubjectNameIdTemplate pulumi.StringPtrInput
	// Username template. Default: `"${source.login}"`
	UserNameTemplate pulumi.StringPtrInput
	// Push username on update. Valid values: `"PUSH"` and `"DONT_PUSH"`.
	UserNameTemplatePushStatus pulumi.StringPtrInput
	// Username template suffix.
	UserNameTemplateSuffix pulumi.StringPtrInput
	// Username template type. Default: `"BUILT_IN"`.
	UserNameTemplateType pulumi.StringPtrInput
	// Users associated with the application.
	// - `DEPRECATED`: Please replace usage with the `app.User` resource.
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users SamlUserArrayInput
}

func (SamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*samlArgs)(nil)).Elem()
}

type SamlInput interface {
	pulumi.Input

	ToSamlOutput() SamlOutput
	ToSamlOutputWithContext(ctx context.Context) SamlOutput
}

func (*Saml) ElementType() reflect.Type {
	return reflect.TypeOf((**Saml)(nil)).Elem()
}

func (i *Saml) ToSamlOutput() SamlOutput {
	return i.ToSamlOutputWithContext(context.Background())
}

func (i *Saml) ToSamlOutputWithContext(ctx context.Context) SamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlOutput)
}

// SamlArrayInput is an input type that accepts SamlArray and SamlArrayOutput values.
// You can construct a concrete instance of `SamlArrayInput` via:
//
//          SamlArray{ SamlArgs{...} }
type SamlArrayInput interface {
	pulumi.Input

	ToSamlArrayOutput() SamlArrayOutput
	ToSamlArrayOutputWithContext(context.Context) SamlArrayOutput
}

type SamlArray []SamlInput

func (SamlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Saml)(nil)).Elem()
}

func (i SamlArray) ToSamlArrayOutput() SamlArrayOutput {
	return i.ToSamlArrayOutputWithContext(context.Background())
}

func (i SamlArray) ToSamlArrayOutputWithContext(ctx context.Context) SamlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlArrayOutput)
}

// SamlMapInput is an input type that accepts SamlMap and SamlMapOutput values.
// You can construct a concrete instance of `SamlMapInput` via:
//
//          SamlMap{ "key": SamlArgs{...} }
type SamlMapInput interface {
	pulumi.Input

	ToSamlMapOutput() SamlMapOutput
	ToSamlMapOutputWithContext(context.Context) SamlMapOutput
}

type SamlMap map[string]SamlInput

func (SamlMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Saml)(nil)).Elem()
}

func (i SamlMap) ToSamlMapOutput() SamlMapOutput {
	return i.ToSamlMapOutputWithContext(context.Background())
}

func (i SamlMap) ToSamlMapOutputWithContext(ctx context.Context) SamlMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlMapOutput)
}

type SamlOutput struct{ *pulumi.OutputState }

func (SamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Saml)(nil)).Elem()
}

func (o SamlOutput) ToSamlOutput() SamlOutput {
	return o
}

func (o SamlOutput) ToSamlOutputWithContext(ctx context.Context) SamlOutput {
	return o
}

type SamlArrayOutput struct{ *pulumi.OutputState }

func (SamlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Saml)(nil)).Elem()
}

func (o SamlArrayOutput) ToSamlArrayOutput() SamlArrayOutput {
	return o
}

func (o SamlArrayOutput) ToSamlArrayOutputWithContext(ctx context.Context) SamlArrayOutput {
	return o
}

func (o SamlArrayOutput) Index(i pulumi.IntInput) SamlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Saml {
		return vs[0].([]*Saml)[vs[1].(int)]
	}).(SamlOutput)
}

type SamlMapOutput struct{ *pulumi.OutputState }

func (SamlMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Saml)(nil)).Elem()
}

func (o SamlMapOutput) ToSamlMapOutput() SamlMapOutput {
	return o
}

func (o SamlMapOutput) ToSamlMapOutputWithContext(ctx context.Context) SamlMapOutput {
	return o
}

func (o SamlMapOutput) MapIndex(k pulumi.StringInput) SamlOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Saml {
		return vs[0].(map[string]*Saml)[vs[1].(string)]
	}).(SamlOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SamlInput)(nil)).Elem(), &Saml{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlArrayInput)(nil)).Elem(), SamlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlMapInput)(nil)).Elem(), SamlMap{})
	pulumi.RegisterOutputType(SamlOutput{})
	pulumi.RegisterOutputType(SamlArrayOutput{})
	pulumi.RegisterOutputType(SamlMapOutput{})
}

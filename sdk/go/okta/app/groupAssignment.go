// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Assigns a group to an application.
//
// This resource allows you to create an App Group assignment.
//
// ## Import
//
// An application group assignment can be imported via the `app_id` and the `group_id`.
//
// ```sh
//  $ pulumi import okta:app/groupAssignment:GroupAssignment example <app_id>/<group_id>
// ```
type GroupAssignment struct {
	pulumi.CustomResourceState

	// The ID of the application to assign a group to.
	AppId pulumi.StringOutput `pulumi:"appId"`
	// The ID of the group to assign the app to.
	GroupId  pulumi.StringOutput `pulumi:"groupId"`
	Priority pulumi.IntPtrOutput `pulumi:"priority"`
	// JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)
	Profile pulumi.StringPtrOutput `pulumi:"profile"`
}

// NewGroupAssignment registers a new resource with the given unique name, arguments, and options.
func NewGroupAssignment(ctx *pulumi.Context,
	name string, args *GroupAssignmentArgs, opts ...pulumi.ResourceOption) (*GroupAssignment, error) {
	if args == nil || args.AppId == nil {
		return nil, errors.New("missing required argument 'AppId'")
	}
	if args == nil || args.GroupId == nil {
		return nil, errors.New("missing required argument 'GroupId'")
	}
	if args == nil {
		args = &GroupAssignmentArgs{}
	}
	var resource GroupAssignment
	err := ctx.RegisterResource("okta:app/groupAssignment:GroupAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGroupAssignment gets an existing GroupAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroupAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GroupAssignmentState, opts ...pulumi.ResourceOption) (*GroupAssignment, error) {
	var resource GroupAssignment
	err := ctx.ReadResource("okta:app/groupAssignment:GroupAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GroupAssignment resources.
type groupAssignmentState struct {
	// The ID of the application to assign a group to.
	AppId *string `pulumi:"appId"`
	// The ID of the group to assign the app to.
	GroupId  *string `pulumi:"groupId"`
	Priority *int    `pulumi:"priority"`
	// JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)
	Profile *string `pulumi:"profile"`
}

type GroupAssignmentState struct {
	// The ID of the application to assign a group to.
	AppId pulumi.StringPtrInput
	// The ID of the group to assign the app to.
	GroupId  pulumi.StringPtrInput
	Priority pulumi.IntPtrInput
	// JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)
	Profile pulumi.StringPtrInput
}

func (GroupAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*groupAssignmentState)(nil)).Elem()
}

type groupAssignmentArgs struct {
	// The ID of the application to assign a group to.
	AppId string `pulumi:"appId"`
	// The ID of the group to assign the app to.
	GroupId  string `pulumi:"groupId"`
	Priority *int   `pulumi:"priority"`
	// JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)
	Profile *string `pulumi:"profile"`
}

// The set of arguments for constructing a GroupAssignment resource.
type GroupAssignmentArgs struct {
	// The ID of the application to assign a group to.
	AppId pulumi.StringInput
	// The ID of the group to assign the app to.
	GroupId  pulumi.StringInput
	Priority pulumi.IntPtrInput
	// JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)
	Profile pulumi.StringPtrInput
}

func (GroupAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*groupAssignmentArgs)(nil)).Elem()
}

type GroupAssignmentInput interface {
	pulumi.Input

	ToGroupAssignmentOutput() GroupAssignmentOutput
	ToGroupAssignmentOutputWithContext(ctx context.Context) GroupAssignmentOutput
}

func (GroupAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupAssignment)(nil)).Elem()
}

func (i GroupAssignment) ToGroupAssignmentOutput() GroupAssignmentOutput {
	return i.ToGroupAssignmentOutputWithContext(context.Background())
}

func (i GroupAssignment) ToGroupAssignmentOutputWithContext(ctx context.Context) GroupAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupAssignmentOutput)
}

type GroupAssignmentOutput struct {
	*pulumi.OutputState
}

func (GroupAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupAssignmentOutput)(nil)).Elem()
}

func (o GroupAssignmentOutput) ToGroupAssignmentOutput() GroupAssignmentOutput {
	return o
}

func (o GroupAssignmentOutput) ToGroupAssignmentOutputWithContext(ctx context.Context) GroupAssignmentOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GroupAssignmentOutput{})
}

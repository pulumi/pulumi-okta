// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a Basic Auth Application.
//
// This resource allows you to create and configure a Basic Auth Application.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/app"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := app.NewBasicAuth(ctx, "example", &app.BasicAuthArgs{
// 			AuthUrl: pulumi.String("https://example.com/auth.html"),
// 			Label:   pulumi.String("Example"),
// 			Url:     pulumi.String("https://example.com/login.html"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// A Basic Auth App can be imported via the Okta ID.
//
// ```sh
//  $ pulumi import okta:app/basicAuth:BasicAuth example <app id>
// ```
//
//  It's also possible to import app without groups or/and users. In this case ID may look like this
//
// ```sh
//  $ pulumi import okta:app/basicAuth:BasicAuth example <app id>/skip_users
// ```
//
// ```sh
//  $ pulumi import okta:app/basicAuth:BasicAuth example <app id>/skip_users/skip_groups
// ```
//
// ```sh
//  $ pulumi import okta:app/basicAuth:BasicAuth example <app id>/skip_groups
// ```
type BasicAuth struct {
	pulumi.CustomResourceState

	// Custom error page URL.
	AccessibilityErrorRedirectUrl pulumi.StringPtrOutput `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page for this application.
	AccessibilityLoginRedirectUrl pulumi.StringPtrOutput `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self-service. By default, it is `false`.
	AccessibilitySelfService pulumi.BoolPtrOutput `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote pulumi.StringPtrOutput `pulumi:"adminNote"`
	// Displays specific appLinks for the app
	AppLinksJson pulumi.StringPtrOutput `pulumi:"appLinksJson"`
	// The URL of the authenticating site for this app.
	AuthUrl pulumi.StringOutput `pulumi:"authUrl"`
	// Display auto submit toolbar.
	AutoSubmitToolbar pulumi.BoolPtrOutput `pulumi:"autoSubmitToolbar"`
	// Application notes for end users.
	EnduserNote pulumi.StringPtrOutput `pulumi:"enduserNote"`
	// Groups associated with the application.
	// - `DEPRECATED`: Please replace usage with the `AppGroupAssignments` (or `app.GroupAssignment`) resource.
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups pulumi.StringArrayOutput `pulumi:"groups"`
	// Do not display application icon on mobile app.
	HideIos pulumi.BoolPtrOutput `pulumi:"hideIos"`
	// Do not display application icon to users.
	HideWeb pulumi.BoolPtrOutput `pulumi:"hideWeb"`
	// The Application's display name.
	Label pulumi.StringOutput `pulumi:"label"`
	// Local path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo pulumi.StringPtrOutput `pulumi:"logo"`
	// Direct link of application logo.
	LogoUrl pulumi.StringOutput `pulumi:"logoUrl"`
	// Name of the app.
	Name pulumi.StringOutput `pulumi:"name"`
	// Sign on mode of application.
	SignOnMode pulumi.StringOutput `pulumi:"signOnMode"`
	// Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
	SkipGroups pulumi.BoolPtrOutput `pulumi:"skipGroups"`
	// Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
	SkipUsers pulumi.BoolPtrOutput `pulumi:"skipUsers"`
	// Status of application. (`"ACTIVE"` or `"INACTIVE"`).
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// The URL of the sign-in page for this app.
	Url pulumi.StringOutput `pulumi:"url"`
	// Users associated with the application.
	// - `DEPRECATED`: Please replace usage with the `app.User` resource.
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users BasicAuthUserArrayOutput `pulumi:"users"`
}

// NewBasicAuth registers a new resource with the given unique name, arguments, and options.
func NewBasicAuth(ctx *pulumi.Context,
	name string, args *BasicAuthArgs, opts ...pulumi.ResourceOption) (*BasicAuth, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthUrl == nil {
		return nil, errors.New("invalid value for required argument 'AuthUrl'")
	}
	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	var resource BasicAuth
	err := ctx.RegisterResource("okta:app/basicAuth:BasicAuth", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBasicAuth gets an existing BasicAuth resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBasicAuth(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BasicAuthState, opts ...pulumi.ResourceOption) (*BasicAuth, error) {
	var resource BasicAuth
	err := ctx.ReadResource("okta:app/basicAuth:BasicAuth", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BasicAuth resources.
type basicAuthState struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page for this application.
	AccessibilityLoginRedirectUrl *string `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self-service. By default, it is `false`.
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote *string `pulumi:"adminNote"`
	// Displays specific appLinks for the app
	AppLinksJson *string `pulumi:"appLinksJson"`
	// The URL of the authenticating site for this app.
	AuthUrl *string `pulumi:"authUrl"`
	// Display auto submit toolbar.
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Application notes for end users.
	EnduserNote *string `pulumi:"enduserNote"`
	// Groups associated with the application.
	// - `DEPRECATED`: Please replace usage with the `AppGroupAssignments` (or `app.GroupAssignment`) resource.
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups []string `pulumi:"groups"`
	// Do not display application icon on mobile app.
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users.
	HideWeb *bool `pulumi:"hideWeb"`
	// The Application's display name.
	Label *string `pulumi:"label"`
	// Local path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo *string `pulumi:"logo"`
	// Direct link of application logo.
	LogoUrl *string `pulumi:"logoUrl"`
	// Name of the app.
	Name *string `pulumi:"name"`
	// Sign on mode of application.
	SignOnMode *string `pulumi:"signOnMode"`
	// Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
	SkipGroups *bool `pulumi:"skipGroups"`
	// Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
	SkipUsers *bool `pulumi:"skipUsers"`
	// Status of application. (`"ACTIVE"` or `"INACTIVE"`).
	Status *string `pulumi:"status"`
	// The URL of the sign-in page for this app.
	Url *string `pulumi:"url"`
	// Users associated with the application.
	// - `DEPRECATED`: Please replace usage with the `app.User` resource.
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users []BasicAuthUser `pulumi:"users"`
}

type BasicAuthState struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Custom login page for this application.
	AccessibilityLoginRedirectUrl pulumi.StringPtrInput
	// Enable self-service. By default, it is `false`.
	AccessibilitySelfService pulumi.BoolPtrInput
	// Application notes for admins.
	AdminNote pulumi.StringPtrInput
	// Displays specific appLinks for the app
	AppLinksJson pulumi.StringPtrInput
	// The URL of the authenticating site for this app.
	AuthUrl pulumi.StringPtrInput
	// Display auto submit toolbar.
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Application notes for end users.
	EnduserNote pulumi.StringPtrInput
	// Groups associated with the application.
	// - `DEPRECATED`: Please replace usage with the `AppGroupAssignments` (or `app.GroupAssignment`) resource.
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups pulumi.StringArrayInput
	// Do not display application icon on mobile app.
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users.
	HideWeb pulumi.BoolPtrInput
	// The Application's display name.
	Label pulumi.StringPtrInput
	// Local path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo pulumi.StringPtrInput
	// Direct link of application logo.
	LogoUrl pulumi.StringPtrInput
	// Name of the app.
	Name pulumi.StringPtrInput
	// Sign on mode of application.
	SignOnMode pulumi.StringPtrInput
	// Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
	SkipGroups pulumi.BoolPtrInput
	// Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
	SkipUsers pulumi.BoolPtrInput
	// Status of application. (`"ACTIVE"` or `"INACTIVE"`).
	Status pulumi.StringPtrInput
	// The URL of the sign-in page for this app.
	Url pulumi.StringPtrInput
	// Users associated with the application.
	// - `DEPRECATED`: Please replace usage with the `app.User` resource.
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users BasicAuthUserArrayInput
}

func (BasicAuthState) ElementType() reflect.Type {
	return reflect.TypeOf((*basicAuthState)(nil)).Elem()
}

type basicAuthArgs struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page for this application.
	AccessibilityLoginRedirectUrl *string `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self-service. By default, it is `false`.
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote *string `pulumi:"adminNote"`
	// Displays specific appLinks for the app
	AppLinksJson *string `pulumi:"appLinksJson"`
	// The URL of the authenticating site for this app.
	AuthUrl string `pulumi:"authUrl"`
	// Display auto submit toolbar.
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Application notes for end users.
	EnduserNote *string `pulumi:"enduserNote"`
	// Groups associated with the application.
	// - `DEPRECATED`: Please replace usage with the `AppGroupAssignments` (or `app.GroupAssignment`) resource.
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups []string `pulumi:"groups"`
	// Do not display application icon on mobile app.
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users.
	HideWeb *bool `pulumi:"hideWeb"`
	// The Application's display name.
	Label string `pulumi:"label"`
	// Local path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo *string `pulumi:"logo"`
	// Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
	SkipGroups *bool `pulumi:"skipGroups"`
	// Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
	SkipUsers *bool `pulumi:"skipUsers"`
	// Status of application. (`"ACTIVE"` or `"INACTIVE"`).
	Status *string `pulumi:"status"`
	// The URL of the sign-in page for this app.
	Url string `pulumi:"url"`
	// Users associated with the application.
	// - `DEPRECATED`: Please replace usage with the `app.User` resource.
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users []BasicAuthUser `pulumi:"users"`
}

// The set of arguments for constructing a BasicAuth resource.
type BasicAuthArgs struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Custom login page for this application.
	AccessibilityLoginRedirectUrl pulumi.StringPtrInput
	// Enable self-service. By default, it is `false`.
	AccessibilitySelfService pulumi.BoolPtrInput
	// Application notes for admins.
	AdminNote pulumi.StringPtrInput
	// Displays specific appLinks for the app
	AppLinksJson pulumi.StringPtrInput
	// The URL of the authenticating site for this app.
	AuthUrl pulumi.StringInput
	// Display auto submit toolbar.
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Application notes for end users.
	EnduserNote pulumi.StringPtrInput
	// Groups associated with the application.
	// - `DEPRECATED`: Please replace usage with the `AppGroupAssignments` (or `app.GroupAssignment`) resource.
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups pulumi.StringArrayInput
	// Do not display application icon on mobile app.
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users.
	HideWeb pulumi.BoolPtrInput
	// The Application's display name.
	Label pulumi.StringInput
	// Local path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo pulumi.StringPtrInput
	// Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
	SkipGroups pulumi.BoolPtrInput
	// Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
	SkipUsers pulumi.BoolPtrInput
	// Status of application. (`"ACTIVE"` or `"INACTIVE"`).
	Status pulumi.StringPtrInput
	// The URL of the sign-in page for this app.
	Url pulumi.StringInput
	// Users associated with the application.
	// - `DEPRECATED`: Please replace usage with the `app.User` resource.
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users BasicAuthUserArrayInput
}

func (BasicAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*basicAuthArgs)(nil)).Elem()
}

type BasicAuthInput interface {
	pulumi.Input

	ToBasicAuthOutput() BasicAuthOutput
	ToBasicAuthOutputWithContext(ctx context.Context) BasicAuthOutput
}

func (*BasicAuth) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicAuth)(nil))
}

func (i *BasicAuth) ToBasicAuthOutput() BasicAuthOutput {
	return i.ToBasicAuthOutputWithContext(context.Background())
}

func (i *BasicAuth) ToBasicAuthOutputWithContext(ctx context.Context) BasicAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicAuthOutput)
}

func (i *BasicAuth) ToBasicAuthPtrOutput() BasicAuthPtrOutput {
	return i.ToBasicAuthPtrOutputWithContext(context.Background())
}

func (i *BasicAuth) ToBasicAuthPtrOutputWithContext(ctx context.Context) BasicAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicAuthPtrOutput)
}

type BasicAuthPtrInput interface {
	pulumi.Input

	ToBasicAuthPtrOutput() BasicAuthPtrOutput
	ToBasicAuthPtrOutputWithContext(ctx context.Context) BasicAuthPtrOutput
}

type basicAuthPtrType BasicAuthArgs

func (*basicAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BasicAuth)(nil))
}

func (i *basicAuthPtrType) ToBasicAuthPtrOutput() BasicAuthPtrOutput {
	return i.ToBasicAuthPtrOutputWithContext(context.Background())
}

func (i *basicAuthPtrType) ToBasicAuthPtrOutputWithContext(ctx context.Context) BasicAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicAuthPtrOutput)
}

// BasicAuthArrayInput is an input type that accepts BasicAuthArray and BasicAuthArrayOutput values.
// You can construct a concrete instance of `BasicAuthArrayInput` via:
//
//          BasicAuthArray{ BasicAuthArgs{...} }
type BasicAuthArrayInput interface {
	pulumi.Input

	ToBasicAuthArrayOutput() BasicAuthArrayOutput
	ToBasicAuthArrayOutputWithContext(context.Context) BasicAuthArrayOutput
}

type BasicAuthArray []BasicAuthInput

func (BasicAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BasicAuth)(nil)).Elem()
}

func (i BasicAuthArray) ToBasicAuthArrayOutput() BasicAuthArrayOutput {
	return i.ToBasicAuthArrayOutputWithContext(context.Background())
}

func (i BasicAuthArray) ToBasicAuthArrayOutputWithContext(ctx context.Context) BasicAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicAuthArrayOutput)
}

// BasicAuthMapInput is an input type that accepts BasicAuthMap and BasicAuthMapOutput values.
// You can construct a concrete instance of `BasicAuthMapInput` via:
//
//          BasicAuthMap{ "key": BasicAuthArgs{...} }
type BasicAuthMapInput interface {
	pulumi.Input

	ToBasicAuthMapOutput() BasicAuthMapOutput
	ToBasicAuthMapOutputWithContext(context.Context) BasicAuthMapOutput
}

type BasicAuthMap map[string]BasicAuthInput

func (BasicAuthMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BasicAuth)(nil)).Elem()
}

func (i BasicAuthMap) ToBasicAuthMapOutput() BasicAuthMapOutput {
	return i.ToBasicAuthMapOutputWithContext(context.Background())
}

func (i BasicAuthMap) ToBasicAuthMapOutputWithContext(ctx context.Context) BasicAuthMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicAuthMapOutput)
}

type BasicAuthOutput struct{ *pulumi.OutputState }

func (BasicAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicAuth)(nil))
}

func (o BasicAuthOutput) ToBasicAuthOutput() BasicAuthOutput {
	return o
}

func (o BasicAuthOutput) ToBasicAuthOutputWithContext(ctx context.Context) BasicAuthOutput {
	return o
}

func (o BasicAuthOutput) ToBasicAuthPtrOutput() BasicAuthPtrOutput {
	return o.ToBasicAuthPtrOutputWithContext(context.Background())
}

func (o BasicAuthOutput) ToBasicAuthPtrOutputWithContext(ctx context.Context) BasicAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BasicAuth) *BasicAuth {
		return &v
	}).(BasicAuthPtrOutput)
}

type BasicAuthPtrOutput struct{ *pulumi.OutputState }

func (BasicAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BasicAuth)(nil))
}

func (o BasicAuthPtrOutput) ToBasicAuthPtrOutput() BasicAuthPtrOutput {
	return o
}

func (o BasicAuthPtrOutput) ToBasicAuthPtrOutputWithContext(ctx context.Context) BasicAuthPtrOutput {
	return o
}

func (o BasicAuthPtrOutput) Elem() BasicAuthOutput {
	return o.ApplyT(func(v *BasicAuth) BasicAuth {
		if v != nil {
			return *v
		}
		var ret BasicAuth
		return ret
	}).(BasicAuthOutput)
}

type BasicAuthArrayOutput struct{ *pulumi.OutputState }

func (BasicAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BasicAuth)(nil))
}

func (o BasicAuthArrayOutput) ToBasicAuthArrayOutput() BasicAuthArrayOutput {
	return o
}

func (o BasicAuthArrayOutput) ToBasicAuthArrayOutputWithContext(ctx context.Context) BasicAuthArrayOutput {
	return o
}

func (o BasicAuthArrayOutput) Index(i pulumi.IntInput) BasicAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BasicAuth {
		return vs[0].([]BasicAuth)[vs[1].(int)]
	}).(BasicAuthOutput)
}

type BasicAuthMapOutput struct{ *pulumi.OutputState }

func (BasicAuthMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BasicAuth)(nil))
}

func (o BasicAuthMapOutput) ToBasicAuthMapOutput() BasicAuthMapOutput {
	return o
}

func (o BasicAuthMapOutput) ToBasicAuthMapOutputWithContext(ctx context.Context) BasicAuthMapOutput {
	return o
}

func (o BasicAuthMapOutput) MapIndex(k pulumi.StringInput) BasicAuthOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BasicAuth {
		return vs[0].(map[string]BasicAuth)[vs[1].(string)]
	}).(BasicAuthOutput)
}

func init() {
	pulumi.RegisterOutputType(BasicAuthOutput{})
	pulumi.RegisterOutputType(BasicAuthPtrOutput{})
	pulumi.RegisterOutputType(BasicAuthArrayOutput{})
	pulumi.RegisterOutputType(BasicAuthMapOutput{})
}

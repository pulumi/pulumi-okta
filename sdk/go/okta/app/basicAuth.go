// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type BasicAuth struct {
	pulumi.CustomResourceState

	// Custom error page URL
	AccessibilityErrorRedirectUrl pulumi.StringPtrOutput `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page URL
	AccessibilityLoginRedirectUrl pulumi.StringPtrOutput `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self service
	AccessibilitySelfService pulumi.BoolPtrOutput `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote pulumi.StringPtrOutput `pulumi:"adminNote"`
	// Displays specific appLinks for the app
	AppLinksJson pulumi.StringPtrOutput `pulumi:"appLinksJson"`
	// Login button field
	AuthUrl pulumi.StringOutput `pulumi:"authUrl"`
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrOutput `pulumi:"autoSubmitToolbar"`
	// Application notes for end users.
	EnduserNote pulumi.StringPtrOutput `pulumi:"enduserNote"`
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrOutput `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrOutput `pulumi:"hideWeb"`
	// Pretty name of app.
	Label pulumi.StringOutput `pulumi:"label"`
	// Local path to logo of the application.
	Logo pulumi.StringPtrOutput `pulumi:"logo"`
	// URL of the application's logo
	LogoUrl pulumi.StringOutput `pulumi:"logoUrl"`
	// Name of the app.
	Name pulumi.StringOutput `pulumi:"name"`
	// Sign on mode of application.
	SignOnMode pulumi.StringOutput `pulumi:"signOnMode"`
	// Status of application.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// Login password field
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewBasicAuth registers a new resource with the given unique name, arguments, and options.
func NewBasicAuth(ctx *pulumi.Context,
	name string, args *BasicAuthArgs, opts ...pulumi.ResourceOption) (*BasicAuth, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthUrl == nil {
		return nil, errors.New("invalid value for required argument 'AuthUrl'")
	}
	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BasicAuth
	err := ctx.RegisterResource("okta:app/basicAuth:BasicAuth", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBasicAuth gets an existing BasicAuth resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBasicAuth(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BasicAuthState, opts ...pulumi.ResourceOption) (*BasicAuth, error) {
	var resource BasicAuth
	err := ctx.ReadResource("okta:app/basicAuth:BasicAuth", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BasicAuth resources.
type basicAuthState struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page URL
	AccessibilityLoginRedirectUrl *string `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self service
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote *string `pulumi:"adminNote"`
	// Displays specific appLinks for the app
	AppLinksJson *string `pulumi:"appLinksJson"`
	// Login button field
	AuthUrl *string `pulumi:"authUrl"`
	// Display auto submit toolbar
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Application notes for end users.
	EnduserNote *string `pulumi:"enduserNote"`
	// Do not display application icon on mobile app
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb *bool `pulumi:"hideWeb"`
	// Pretty name of app.
	Label *string `pulumi:"label"`
	// Local path to logo of the application.
	Logo *string `pulumi:"logo"`
	// URL of the application's logo
	LogoUrl *string `pulumi:"logoUrl"`
	// Name of the app.
	Name *string `pulumi:"name"`
	// Sign on mode of application.
	SignOnMode *string `pulumi:"signOnMode"`
	// Status of application.
	Status *string `pulumi:"status"`
	// Login password field
	Url *string `pulumi:"url"`
}

type BasicAuthState struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Custom login page URL
	AccessibilityLoginRedirectUrl pulumi.StringPtrInput
	// Enable self service
	AccessibilitySelfService pulumi.BoolPtrInput
	// Application notes for admins.
	AdminNote pulumi.StringPtrInput
	// Displays specific appLinks for the app
	AppLinksJson pulumi.StringPtrInput
	// Login button field
	AuthUrl pulumi.StringPtrInput
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Application notes for end users.
	EnduserNote pulumi.StringPtrInput
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrInput
	// Pretty name of app.
	Label pulumi.StringPtrInput
	// Local path to logo of the application.
	Logo pulumi.StringPtrInput
	// URL of the application's logo
	LogoUrl pulumi.StringPtrInput
	// Name of the app.
	Name pulumi.StringPtrInput
	// Sign on mode of application.
	SignOnMode pulumi.StringPtrInput
	// Status of application.
	Status pulumi.StringPtrInput
	// Login password field
	Url pulumi.StringPtrInput
}

func (BasicAuthState) ElementType() reflect.Type {
	return reflect.TypeOf((*basicAuthState)(nil)).Elem()
}

type basicAuthArgs struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page URL
	AccessibilityLoginRedirectUrl *string `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self service
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote *string `pulumi:"adminNote"`
	// Displays specific appLinks for the app
	AppLinksJson *string `pulumi:"appLinksJson"`
	// Login button field
	AuthUrl string `pulumi:"authUrl"`
	// Display auto submit toolbar
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Application notes for end users.
	EnduserNote *string `pulumi:"enduserNote"`
	// Do not display application icon on mobile app
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb *bool `pulumi:"hideWeb"`
	// Pretty name of app.
	Label string `pulumi:"label"`
	// Local path to logo of the application.
	Logo *string `pulumi:"logo"`
	// Status of application.
	Status *string `pulumi:"status"`
	// Login password field
	Url string `pulumi:"url"`
}

// The set of arguments for constructing a BasicAuth resource.
type BasicAuthArgs struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Custom login page URL
	AccessibilityLoginRedirectUrl pulumi.StringPtrInput
	// Enable self service
	AccessibilitySelfService pulumi.BoolPtrInput
	// Application notes for admins.
	AdminNote pulumi.StringPtrInput
	// Displays specific appLinks for the app
	AppLinksJson pulumi.StringPtrInput
	// Login button field
	AuthUrl pulumi.StringInput
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Application notes for end users.
	EnduserNote pulumi.StringPtrInput
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrInput
	// Pretty name of app.
	Label pulumi.StringInput
	// Local path to logo of the application.
	Logo pulumi.StringPtrInput
	// Status of application.
	Status pulumi.StringPtrInput
	// Login password field
	Url pulumi.StringInput
}

func (BasicAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*basicAuthArgs)(nil)).Elem()
}

type BasicAuthInput interface {
	pulumi.Input

	ToBasicAuthOutput() BasicAuthOutput
	ToBasicAuthOutputWithContext(ctx context.Context) BasicAuthOutput
}

func (*BasicAuth) ElementType() reflect.Type {
	return reflect.TypeOf((**BasicAuth)(nil)).Elem()
}

func (i *BasicAuth) ToBasicAuthOutput() BasicAuthOutput {
	return i.ToBasicAuthOutputWithContext(context.Background())
}

func (i *BasicAuth) ToBasicAuthOutputWithContext(ctx context.Context) BasicAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicAuthOutput)
}

func (i *BasicAuth) ToOutput(ctx context.Context) pulumix.Output[*BasicAuth] {
	return pulumix.Output[*BasicAuth]{
		OutputState: i.ToBasicAuthOutputWithContext(ctx).OutputState,
	}
}

// BasicAuthArrayInput is an input type that accepts BasicAuthArray and BasicAuthArrayOutput values.
// You can construct a concrete instance of `BasicAuthArrayInput` via:
//
//	BasicAuthArray{ BasicAuthArgs{...} }
type BasicAuthArrayInput interface {
	pulumi.Input

	ToBasicAuthArrayOutput() BasicAuthArrayOutput
	ToBasicAuthArrayOutputWithContext(context.Context) BasicAuthArrayOutput
}

type BasicAuthArray []BasicAuthInput

func (BasicAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BasicAuth)(nil)).Elem()
}

func (i BasicAuthArray) ToBasicAuthArrayOutput() BasicAuthArrayOutput {
	return i.ToBasicAuthArrayOutputWithContext(context.Background())
}

func (i BasicAuthArray) ToBasicAuthArrayOutputWithContext(ctx context.Context) BasicAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicAuthArrayOutput)
}

func (i BasicAuthArray) ToOutput(ctx context.Context) pulumix.Output[[]*BasicAuth] {
	return pulumix.Output[[]*BasicAuth]{
		OutputState: i.ToBasicAuthArrayOutputWithContext(ctx).OutputState,
	}
}

// BasicAuthMapInput is an input type that accepts BasicAuthMap and BasicAuthMapOutput values.
// You can construct a concrete instance of `BasicAuthMapInput` via:
//
//	BasicAuthMap{ "key": BasicAuthArgs{...} }
type BasicAuthMapInput interface {
	pulumi.Input

	ToBasicAuthMapOutput() BasicAuthMapOutput
	ToBasicAuthMapOutputWithContext(context.Context) BasicAuthMapOutput
}

type BasicAuthMap map[string]BasicAuthInput

func (BasicAuthMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BasicAuth)(nil)).Elem()
}

func (i BasicAuthMap) ToBasicAuthMapOutput() BasicAuthMapOutput {
	return i.ToBasicAuthMapOutputWithContext(context.Background())
}

func (i BasicAuthMap) ToBasicAuthMapOutputWithContext(ctx context.Context) BasicAuthMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicAuthMapOutput)
}

func (i BasicAuthMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*BasicAuth] {
	return pulumix.Output[map[string]*BasicAuth]{
		OutputState: i.ToBasicAuthMapOutputWithContext(ctx).OutputState,
	}
}

type BasicAuthOutput struct{ *pulumi.OutputState }

func (BasicAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BasicAuth)(nil)).Elem()
}

func (o BasicAuthOutput) ToBasicAuthOutput() BasicAuthOutput {
	return o
}

func (o BasicAuthOutput) ToBasicAuthOutputWithContext(ctx context.Context) BasicAuthOutput {
	return o
}

func (o BasicAuthOutput) ToOutput(ctx context.Context) pulumix.Output[*BasicAuth] {
	return pulumix.Output[*BasicAuth]{
		OutputState: o.OutputState,
	}
}

// Custom error page URL
func (o BasicAuthOutput) AccessibilityErrorRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.StringPtrOutput { return v.AccessibilityErrorRedirectUrl }).(pulumi.StringPtrOutput)
}

// Custom login page URL
func (o BasicAuthOutput) AccessibilityLoginRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.StringPtrOutput { return v.AccessibilityLoginRedirectUrl }).(pulumi.StringPtrOutput)
}

// Enable self service
func (o BasicAuthOutput) AccessibilitySelfService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.BoolPtrOutput { return v.AccessibilitySelfService }).(pulumi.BoolPtrOutput)
}

// Application notes for admins.
func (o BasicAuthOutput) AdminNote() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.StringPtrOutput { return v.AdminNote }).(pulumi.StringPtrOutput)
}

// Displays specific appLinks for the app
func (o BasicAuthOutput) AppLinksJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.StringPtrOutput { return v.AppLinksJson }).(pulumi.StringPtrOutput)
}

// Login button field
func (o BasicAuthOutput) AuthUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.StringOutput { return v.AuthUrl }).(pulumi.StringOutput)
}

// Display auto submit toolbar
func (o BasicAuthOutput) AutoSubmitToolbar() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.BoolPtrOutput { return v.AutoSubmitToolbar }).(pulumi.BoolPtrOutput)
}

// Application notes for end users.
func (o BasicAuthOutput) EnduserNote() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.StringPtrOutput { return v.EnduserNote }).(pulumi.StringPtrOutput)
}

// Do not display application icon on mobile app
func (o BasicAuthOutput) HideIos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.BoolPtrOutput { return v.HideIos }).(pulumi.BoolPtrOutput)
}

// Do not display application icon to users
func (o BasicAuthOutput) HideWeb() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.BoolPtrOutput { return v.HideWeb }).(pulumi.BoolPtrOutput)
}

// Pretty name of app.
func (o BasicAuthOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.StringOutput { return v.Label }).(pulumi.StringOutput)
}

// Local path to logo of the application.
func (o BasicAuthOutput) Logo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.StringPtrOutput { return v.Logo }).(pulumi.StringPtrOutput)
}

// URL of the application's logo
func (o BasicAuthOutput) LogoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.StringOutput { return v.LogoUrl }).(pulumi.StringOutput)
}

// Name of the app.
func (o BasicAuthOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Sign on mode of application.
func (o BasicAuthOutput) SignOnMode() pulumi.StringOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.StringOutput { return v.SignOnMode }).(pulumi.StringOutput)
}

// Status of application.
func (o BasicAuthOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

// Login password field
func (o BasicAuthOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *BasicAuth) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type BasicAuthArrayOutput struct{ *pulumi.OutputState }

func (BasicAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BasicAuth)(nil)).Elem()
}

func (o BasicAuthArrayOutput) ToBasicAuthArrayOutput() BasicAuthArrayOutput {
	return o
}

func (o BasicAuthArrayOutput) ToBasicAuthArrayOutputWithContext(ctx context.Context) BasicAuthArrayOutput {
	return o
}

func (o BasicAuthArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*BasicAuth] {
	return pulumix.Output[[]*BasicAuth]{
		OutputState: o.OutputState,
	}
}

func (o BasicAuthArrayOutput) Index(i pulumi.IntInput) BasicAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BasicAuth {
		return vs[0].([]*BasicAuth)[vs[1].(int)]
	}).(BasicAuthOutput)
}

type BasicAuthMapOutput struct{ *pulumi.OutputState }

func (BasicAuthMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BasicAuth)(nil)).Elem()
}

func (o BasicAuthMapOutput) ToBasicAuthMapOutput() BasicAuthMapOutput {
	return o
}

func (o BasicAuthMapOutput) ToBasicAuthMapOutputWithContext(ctx context.Context) BasicAuthMapOutput {
	return o
}

func (o BasicAuthMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*BasicAuth] {
	return pulumix.Output[map[string]*BasicAuth]{
		OutputState: o.OutputState,
	}
}

func (o BasicAuthMapOutput) MapIndex(k pulumi.StringInput) BasicAuthOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BasicAuth {
		return vs[0].(map[string]*BasicAuth)[vs[1].(string)]
	}).(BasicAuthOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BasicAuthInput)(nil)).Elem(), &BasicAuth{})
	pulumi.RegisterInputType(reflect.TypeOf((*BasicAuthArrayInput)(nil)).Elem(), BasicAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BasicAuthMapInput)(nil)).Elem(), BasicAuthMap{})
	pulumi.RegisterOutputType(BasicAuthOutput{})
	pulumi.RegisterOutputType(BasicAuthArrayOutput{})
	pulumi.RegisterOutputType(BasicAuthMapOutput{})
}

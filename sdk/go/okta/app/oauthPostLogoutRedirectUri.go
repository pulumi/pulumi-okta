// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource allows you to manage post logout redirection URI for use in redirect-based flows.
//
// > `app.OAuthPostLogoutRedirectUri` has been marked deprecated and will
// be removed in the v5 release of the provider. Operators should manage the post
// logout redirect URIs for an oauth app directly on that resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/app"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := app.NewOAuth(ctx, "test", &app.OAuthArgs{
//				Label: pulumi.String("testAcc_replace_with_uuid"),
//				Type:  pulumi.String("web"),
//				GrantTypes: pulumi.StringArray{
//					pulumi.String("authorization_code"),
//				},
//				ResponseTypes: pulumi.StringArray{
//					pulumi.String("code"),
//				},
//				RedirectUris: pulumi.StringArray{
//					pulumi.String("myapp://callback"),
//				},
//				PostLogoutRedirectUris: pulumi.StringArray{
//					pulumi.String("https://www.example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = app.NewOAuthPostLogoutRedirectUri(ctx, "test", &app.OAuthPostLogoutRedirectUriArgs{
//				AppId: test.ID(),
//				Uri:   pulumi.String("https://www.example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import okta:app/oAuthPostLogoutRedirectUri:OAuthPostLogoutRedirectUri example <app_id>/<uri>
// ```
type OAuthPostLogoutRedirectUri struct {
	pulumi.CustomResourceState

	// OAuth application ID.
	AppId pulumi.StringOutput `pulumi:"appId"`
	// Post Logout Redirect URI to append to Okta OIDC application.
	Uri pulumi.StringOutput `pulumi:"uri"`
}

// NewOAuthPostLogoutRedirectUri registers a new resource with the given unique name, arguments, and options.
func NewOAuthPostLogoutRedirectUri(ctx *pulumi.Context,
	name string, args *OAuthPostLogoutRedirectUriArgs, opts ...pulumi.ResourceOption) (*OAuthPostLogoutRedirectUri, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppId == nil {
		return nil, errors.New("invalid value for required argument 'AppId'")
	}
	if args.Uri == nil {
		return nil, errors.New("invalid value for required argument 'Uri'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OAuthPostLogoutRedirectUri
	err := ctx.RegisterResource("okta:app/oAuthPostLogoutRedirectUri:OAuthPostLogoutRedirectUri", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOAuthPostLogoutRedirectUri gets an existing OAuthPostLogoutRedirectUri resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOAuthPostLogoutRedirectUri(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OAuthPostLogoutRedirectUriState, opts ...pulumi.ResourceOption) (*OAuthPostLogoutRedirectUri, error) {
	var resource OAuthPostLogoutRedirectUri
	err := ctx.ReadResource("okta:app/oAuthPostLogoutRedirectUri:OAuthPostLogoutRedirectUri", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OAuthPostLogoutRedirectUri resources.
type oauthPostLogoutRedirectUriState struct {
	// OAuth application ID.
	AppId *string `pulumi:"appId"`
	// Post Logout Redirect URI to append to Okta OIDC application.
	Uri *string `pulumi:"uri"`
}

type OAuthPostLogoutRedirectUriState struct {
	// OAuth application ID.
	AppId pulumi.StringPtrInput
	// Post Logout Redirect URI to append to Okta OIDC application.
	Uri pulumi.StringPtrInput
}

func (OAuthPostLogoutRedirectUriState) ElementType() reflect.Type {
	return reflect.TypeOf((*oauthPostLogoutRedirectUriState)(nil)).Elem()
}

type oauthPostLogoutRedirectUriArgs struct {
	// OAuth application ID.
	AppId string `pulumi:"appId"`
	// Post Logout Redirect URI to append to Okta OIDC application.
	Uri string `pulumi:"uri"`
}

// The set of arguments for constructing a OAuthPostLogoutRedirectUri resource.
type OAuthPostLogoutRedirectUriArgs struct {
	// OAuth application ID.
	AppId pulumi.StringInput
	// Post Logout Redirect URI to append to Okta OIDC application.
	Uri pulumi.StringInput
}

func (OAuthPostLogoutRedirectUriArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*oauthPostLogoutRedirectUriArgs)(nil)).Elem()
}

type OAuthPostLogoutRedirectUriInput interface {
	pulumi.Input

	ToOAuthPostLogoutRedirectUriOutput() OAuthPostLogoutRedirectUriOutput
	ToOAuthPostLogoutRedirectUriOutputWithContext(ctx context.Context) OAuthPostLogoutRedirectUriOutput
}

func (*OAuthPostLogoutRedirectUri) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuthPostLogoutRedirectUri)(nil)).Elem()
}

func (i *OAuthPostLogoutRedirectUri) ToOAuthPostLogoutRedirectUriOutput() OAuthPostLogoutRedirectUriOutput {
	return i.ToOAuthPostLogoutRedirectUriOutputWithContext(context.Background())
}

func (i *OAuthPostLogoutRedirectUri) ToOAuthPostLogoutRedirectUriOutputWithContext(ctx context.Context) OAuthPostLogoutRedirectUriOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuthPostLogoutRedirectUriOutput)
}

// OAuthPostLogoutRedirectUriArrayInput is an input type that accepts OAuthPostLogoutRedirectUriArray and OAuthPostLogoutRedirectUriArrayOutput values.
// You can construct a concrete instance of `OAuthPostLogoutRedirectUriArrayInput` via:
//
//	OAuthPostLogoutRedirectUriArray{ OAuthPostLogoutRedirectUriArgs{...} }
type OAuthPostLogoutRedirectUriArrayInput interface {
	pulumi.Input

	ToOAuthPostLogoutRedirectUriArrayOutput() OAuthPostLogoutRedirectUriArrayOutput
	ToOAuthPostLogoutRedirectUriArrayOutputWithContext(context.Context) OAuthPostLogoutRedirectUriArrayOutput
}

type OAuthPostLogoutRedirectUriArray []OAuthPostLogoutRedirectUriInput

func (OAuthPostLogoutRedirectUriArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OAuthPostLogoutRedirectUri)(nil)).Elem()
}

func (i OAuthPostLogoutRedirectUriArray) ToOAuthPostLogoutRedirectUriArrayOutput() OAuthPostLogoutRedirectUriArrayOutput {
	return i.ToOAuthPostLogoutRedirectUriArrayOutputWithContext(context.Background())
}

func (i OAuthPostLogoutRedirectUriArray) ToOAuthPostLogoutRedirectUriArrayOutputWithContext(ctx context.Context) OAuthPostLogoutRedirectUriArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuthPostLogoutRedirectUriArrayOutput)
}

// OAuthPostLogoutRedirectUriMapInput is an input type that accepts OAuthPostLogoutRedirectUriMap and OAuthPostLogoutRedirectUriMapOutput values.
// You can construct a concrete instance of `OAuthPostLogoutRedirectUriMapInput` via:
//
//	OAuthPostLogoutRedirectUriMap{ "key": OAuthPostLogoutRedirectUriArgs{...} }
type OAuthPostLogoutRedirectUriMapInput interface {
	pulumi.Input

	ToOAuthPostLogoutRedirectUriMapOutput() OAuthPostLogoutRedirectUriMapOutput
	ToOAuthPostLogoutRedirectUriMapOutputWithContext(context.Context) OAuthPostLogoutRedirectUriMapOutput
}

type OAuthPostLogoutRedirectUriMap map[string]OAuthPostLogoutRedirectUriInput

func (OAuthPostLogoutRedirectUriMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OAuthPostLogoutRedirectUri)(nil)).Elem()
}

func (i OAuthPostLogoutRedirectUriMap) ToOAuthPostLogoutRedirectUriMapOutput() OAuthPostLogoutRedirectUriMapOutput {
	return i.ToOAuthPostLogoutRedirectUriMapOutputWithContext(context.Background())
}

func (i OAuthPostLogoutRedirectUriMap) ToOAuthPostLogoutRedirectUriMapOutputWithContext(ctx context.Context) OAuthPostLogoutRedirectUriMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuthPostLogoutRedirectUriMapOutput)
}

type OAuthPostLogoutRedirectUriOutput struct{ *pulumi.OutputState }

func (OAuthPostLogoutRedirectUriOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuthPostLogoutRedirectUri)(nil)).Elem()
}

func (o OAuthPostLogoutRedirectUriOutput) ToOAuthPostLogoutRedirectUriOutput() OAuthPostLogoutRedirectUriOutput {
	return o
}

func (o OAuthPostLogoutRedirectUriOutput) ToOAuthPostLogoutRedirectUriOutputWithContext(ctx context.Context) OAuthPostLogoutRedirectUriOutput {
	return o
}

// OAuth application ID.
func (o OAuthPostLogoutRedirectUriOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v *OAuthPostLogoutRedirectUri) pulumi.StringOutput { return v.AppId }).(pulumi.StringOutput)
}

// Post Logout Redirect URI to append to Okta OIDC application.
func (o OAuthPostLogoutRedirectUriOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v *OAuthPostLogoutRedirectUri) pulumi.StringOutput { return v.Uri }).(pulumi.StringOutput)
}

type OAuthPostLogoutRedirectUriArrayOutput struct{ *pulumi.OutputState }

func (OAuthPostLogoutRedirectUriArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OAuthPostLogoutRedirectUri)(nil)).Elem()
}

func (o OAuthPostLogoutRedirectUriArrayOutput) ToOAuthPostLogoutRedirectUriArrayOutput() OAuthPostLogoutRedirectUriArrayOutput {
	return o
}

func (o OAuthPostLogoutRedirectUriArrayOutput) ToOAuthPostLogoutRedirectUriArrayOutputWithContext(ctx context.Context) OAuthPostLogoutRedirectUriArrayOutput {
	return o
}

func (o OAuthPostLogoutRedirectUriArrayOutput) Index(i pulumi.IntInput) OAuthPostLogoutRedirectUriOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OAuthPostLogoutRedirectUri {
		return vs[0].([]*OAuthPostLogoutRedirectUri)[vs[1].(int)]
	}).(OAuthPostLogoutRedirectUriOutput)
}

type OAuthPostLogoutRedirectUriMapOutput struct{ *pulumi.OutputState }

func (OAuthPostLogoutRedirectUriMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OAuthPostLogoutRedirectUri)(nil)).Elem()
}

func (o OAuthPostLogoutRedirectUriMapOutput) ToOAuthPostLogoutRedirectUriMapOutput() OAuthPostLogoutRedirectUriMapOutput {
	return o
}

func (o OAuthPostLogoutRedirectUriMapOutput) ToOAuthPostLogoutRedirectUriMapOutputWithContext(ctx context.Context) OAuthPostLogoutRedirectUriMapOutput {
	return o
}

func (o OAuthPostLogoutRedirectUriMapOutput) MapIndex(k pulumi.StringInput) OAuthPostLogoutRedirectUriOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OAuthPostLogoutRedirectUri {
		return vs[0].(map[string]*OAuthPostLogoutRedirectUri)[vs[1].(string)]
	}).(OAuthPostLogoutRedirectUriOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OAuthPostLogoutRedirectUriInput)(nil)).Elem(), &OAuthPostLogoutRedirectUri{})
	pulumi.RegisterInputType(reflect.TypeOf((*OAuthPostLogoutRedirectUriArrayInput)(nil)).Elem(), OAuthPostLogoutRedirectUriArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OAuthPostLogoutRedirectUriMapInput)(nil)).Elem(), OAuthPostLogoutRedirectUriMap{})
	pulumi.RegisterOutputType(OAuthPostLogoutRedirectUriOutput{})
	pulumi.RegisterOutputType(OAuthPostLogoutRedirectUriArrayOutput{})
	pulumi.RegisterOutputType(OAuthPostLogoutRedirectUriMapOutput{})
}

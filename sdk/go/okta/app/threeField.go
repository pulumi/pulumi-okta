// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource allows you to create and configure a Three Field Application.
//
// ## Import
//
// A Three Field App can be imported via the Okta ID.
//
// ```sh
//  $ pulumi import okta:app/threeField:ThreeField example <app id>
// ```
//
//  It's also possible to import app without groups or/and users. In this case ID may look like this
//
// ```sh
//  $ pulumi import okta:app/threeField:ThreeField example <app id>/skip_users
// ```
//
// ```sh
//  $ pulumi import okta:app/threeField:ThreeField example <app id>/skip_users/skip_groups
// ```
//
// ```sh
//  $ pulumi import okta:app/threeField:ThreeField example <app id>/skip_groups
// ```
type ThreeField struct {
	pulumi.CustomResourceState

	// Custom error page URL.
	AccessibilityErrorRedirectUrl pulumi.StringPtrOutput `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page for this application.
	AccessibilityLoginRedirectUrl pulumi.StringPtrOutput `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self-service. By default, it is `false`.
	AccessibilitySelfService pulumi.BoolPtrOutput `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote pulumi.StringPtrOutput `pulumi:"adminNote"`
	// Displays specific appLinks for the app
	AppLinksJson pulumi.StringPtrOutput `pulumi:"appLinksJson"`
	// Display auto submit toolbar.
	AutoSubmitToolbar pulumi.BoolPtrOutput `pulumi:"autoSubmitToolbar"`
	// Login button field CSS selector.
	ButtonSelector pulumi.StringOutput `pulumi:"buttonSelector"`
	// Application credentials scheme. Can be set to `"EDIT_USERNAME_AND_PASSWORD"`, `"ADMIN_SETS_CREDENTIALS"`, `"EDIT_PASSWORD_ONLY"`, `"EXTERNAL_PASSWORD_SYNC"`, or `"SHARED_USERNAME_AND_PASSWORD"`.
	CredentialsScheme pulumi.StringPtrOutput `pulumi:"credentialsScheme"`
	// Application notes for end users.
	EnduserNote pulumi.StringPtrOutput `pulumi:"enduserNote"`
	// Extra field CSS selector.
	ExtraFieldSelector pulumi.StringOutput `pulumi:"extraFieldSelector"`
	// Value for extra form field.
	ExtraFieldValue pulumi.StringOutput `pulumi:"extraFieldValue"`
	// Groups associated with the application. See `app.GroupAssignment` for a more flexible approach.
	// - `DEPRECATED`: Please replace usage with the `AppGroupAssignments` (or `app.GroupAssignment`) resource.
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups pulumi.StringArrayOutput `pulumi:"groups"`
	// Do not display application icon on mobile app.
	HideIos pulumi.BoolPtrOutput `pulumi:"hideIos"`
	// Do not display application icon to users.
	HideWeb pulumi.BoolPtrOutput `pulumi:"hideWeb"`
	// The display name of the Application.
	Label pulumi.StringOutput `pulumi:"label"`
	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo pulumi.StringPtrOutput `pulumi:"logo"`
	// Direct link of application logo.
	LogoUrl pulumi.StringOutput `pulumi:"logoUrl"`
	// Name assigned to the application by Okta.
	Name pulumi.StringOutput `pulumi:"name"`
	// Login password field CSS selector.
	PasswordSelector pulumi.StringOutput `pulumi:"passwordSelector"`
	// Allow user to reveal password. It can not be set to `true` if `credentialsScheme` is `"ADMIN_SETS_CREDENTIALS"`, `"SHARED_USERNAME_AND_PASSWORD"` or `"EXTERNAL_PASSWORD_SYNC"`.
	RevealPassword pulumi.BoolPtrOutput `pulumi:"revealPassword"`
	// Shared password, required for certain schemes.
	SharedPassword pulumi.StringPtrOutput `pulumi:"sharedPassword"`
	// Shared username, required for certain schemes.
	SharedUsername pulumi.StringPtrOutput `pulumi:"sharedUsername"`
	// Sign-on mode of application.
	SignOnMode pulumi.StringOutput `pulumi:"signOnMode"`
	// Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
	SkipGroups pulumi.BoolPtrOutput `pulumi:"skipGroups"`
	// Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
	SkipUsers pulumi.BoolPtrOutput `pulumi:"skipUsers"`
	// Status of application. By default, it is `"ACTIVE"`.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// Login URL.
	Url pulumi.StringOutput `pulumi:"url"`
	// A regex that further restricts URL to the specified regex.
	UrlRegex pulumi.StringPtrOutput `pulumi:"urlRegex"`
	// Username template. Default: `"${source.login}"`
	UserNameTemplate pulumi.StringPtrOutput `pulumi:"userNameTemplate"`
	// Push username on update. Valid values: `"PUSH"` and `"DONT_PUSH"`.
	UserNameTemplatePushStatus pulumi.StringPtrOutput `pulumi:"userNameTemplatePushStatus"`
	// Username template suffix.
	UserNameTemplateSuffix pulumi.StringPtrOutput `pulumi:"userNameTemplateSuffix"`
	// Username template type. Default: `"BUILT_IN"`.
	UserNameTemplateType pulumi.StringPtrOutput `pulumi:"userNameTemplateType"`
	// Login username field CSS selector.
	UsernameSelector pulumi.StringOutput `pulumi:"usernameSelector"`
	// The users assigned to the application. See `app.User` for a more flexible approach.
	// - `DEPRECATED`: Please replace usage with the `app.User` resource.
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users ThreeFieldUserArrayOutput `pulumi:"users"`
}

// NewThreeField registers a new resource with the given unique name, arguments, and options.
func NewThreeField(ctx *pulumi.Context,
	name string, args *ThreeFieldArgs, opts ...pulumi.ResourceOption) (*ThreeField, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ButtonSelector == nil {
		return nil, errors.New("invalid value for required argument 'ButtonSelector'")
	}
	if args.ExtraFieldSelector == nil {
		return nil, errors.New("invalid value for required argument 'ExtraFieldSelector'")
	}
	if args.ExtraFieldValue == nil {
		return nil, errors.New("invalid value for required argument 'ExtraFieldValue'")
	}
	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	if args.PasswordSelector == nil {
		return nil, errors.New("invalid value for required argument 'PasswordSelector'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	if args.UsernameSelector == nil {
		return nil, errors.New("invalid value for required argument 'UsernameSelector'")
	}
	var resource ThreeField
	err := ctx.RegisterResource("okta:app/threeField:ThreeField", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetThreeField gets an existing ThreeField resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetThreeField(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ThreeFieldState, opts ...pulumi.ResourceOption) (*ThreeField, error) {
	var resource ThreeField
	err := ctx.ReadResource("okta:app/threeField:ThreeField", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ThreeField resources.
type threeFieldState struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page for this application.
	AccessibilityLoginRedirectUrl *string `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self-service. By default, it is `false`.
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote *string `pulumi:"adminNote"`
	// Displays specific appLinks for the app
	AppLinksJson *string `pulumi:"appLinksJson"`
	// Display auto submit toolbar.
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Login button field CSS selector.
	ButtonSelector *string `pulumi:"buttonSelector"`
	// Application credentials scheme. Can be set to `"EDIT_USERNAME_AND_PASSWORD"`, `"ADMIN_SETS_CREDENTIALS"`, `"EDIT_PASSWORD_ONLY"`, `"EXTERNAL_PASSWORD_SYNC"`, or `"SHARED_USERNAME_AND_PASSWORD"`.
	CredentialsScheme *string `pulumi:"credentialsScheme"`
	// Application notes for end users.
	EnduserNote *string `pulumi:"enduserNote"`
	// Extra field CSS selector.
	ExtraFieldSelector *string `pulumi:"extraFieldSelector"`
	// Value for extra form field.
	ExtraFieldValue *string `pulumi:"extraFieldValue"`
	// Groups associated with the application. See `app.GroupAssignment` for a more flexible approach.
	// - `DEPRECATED`: Please replace usage with the `AppGroupAssignments` (or `app.GroupAssignment`) resource.
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups []string `pulumi:"groups"`
	// Do not display application icon on mobile app.
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users.
	HideWeb *bool `pulumi:"hideWeb"`
	// The display name of the Application.
	Label *string `pulumi:"label"`
	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo *string `pulumi:"logo"`
	// Direct link of application logo.
	LogoUrl *string `pulumi:"logoUrl"`
	// Name assigned to the application by Okta.
	Name *string `pulumi:"name"`
	// Login password field CSS selector.
	PasswordSelector *string `pulumi:"passwordSelector"`
	// Allow user to reveal password. It can not be set to `true` if `credentialsScheme` is `"ADMIN_SETS_CREDENTIALS"`, `"SHARED_USERNAME_AND_PASSWORD"` or `"EXTERNAL_PASSWORD_SYNC"`.
	RevealPassword *bool `pulumi:"revealPassword"`
	// Shared password, required for certain schemes.
	SharedPassword *string `pulumi:"sharedPassword"`
	// Shared username, required for certain schemes.
	SharedUsername *string `pulumi:"sharedUsername"`
	// Sign-on mode of application.
	SignOnMode *string `pulumi:"signOnMode"`
	// Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
	SkipGroups *bool `pulumi:"skipGroups"`
	// Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
	SkipUsers *bool `pulumi:"skipUsers"`
	// Status of application. By default, it is `"ACTIVE"`.
	Status *string `pulumi:"status"`
	// Login URL.
	Url *string `pulumi:"url"`
	// A regex that further restricts URL to the specified regex.
	UrlRegex *string `pulumi:"urlRegex"`
	// Username template. Default: `"${source.login}"`
	UserNameTemplate *string `pulumi:"userNameTemplate"`
	// Push username on update. Valid values: `"PUSH"` and `"DONT_PUSH"`.
	UserNameTemplatePushStatus *string `pulumi:"userNameTemplatePushStatus"`
	// Username template suffix.
	UserNameTemplateSuffix *string `pulumi:"userNameTemplateSuffix"`
	// Username template type. Default: `"BUILT_IN"`.
	UserNameTemplateType *string `pulumi:"userNameTemplateType"`
	// Login username field CSS selector.
	UsernameSelector *string `pulumi:"usernameSelector"`
	// The users assigned to the application. See `app.User` for a more flexible approach.
	// - `DEPRECATED`: Please replace usage with the `app.User` resource.
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users []ThreeFieldUser `pulumi:"users"`
}

type ThreeFieldState struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Custom login page for this application.
	AccessibilityLoginRedirectUrl pulumi.StringPtrInput
	// Enable self-service. By default, it is `false`.
	AccessibilitySelfService pulumi.BoolPtrInput
	// Application notes for admins.
	AdminNote pulumi.StringPtrInput
	// Displays specific appLinks for the app
	AppLinksJson pulumi.StringPtrInput
	// Display auto submit toolbar.
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Login button field CSS selector.
	ButtonSelector pulumi.StringPtrInput
	// Application credentials scheme. Can be set to `"EDIT_USERNAME_AND_PASSWORD"`, `"ADMIN_SETS_CREDENTIALS"`, `"EDIT_PASSWORD_ONLY"`, `"EXTERNAL_PASSWORD_SYNC"`, or `"SHARED_USERNAME_AND_PASSWORD"`.
	CredentialsScheme pulumi.StringPtrInput
	// Application notes for end users.
	EnduserNote pulumi.StringPtrInput
	// Extra field CSS selector.
	ExtraFieldSelector pulumi.StringPtrInput
	// Value for extra form field.
	ExtraFieldValue pulumi.StringPtrInput
	// Groups associated with the application. See `app.GroupAssignment` for a more flexible approach.
	// - `DEPRECATED`: Please replace usage with the `AppGroupAssignments` (or `app.GroupAssignment`) resource.
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups pulumi.StringArrayInput
	// Do not display application icon on mobile app.
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users.
	HideWeb pulumi.BoolPtrInput
	// The display name of the Application.
	Label pulumi.StringPtrInput
	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo pulumi.StringPtrInput
	// Direct link of application logo.
	LogoUrl pulumi.StringPtrInput
	// Name assigned to the application by Okta.
	Name pulumi.StringPtrInput
	// Login password field CSS selector.
	PasswordSelector pulumi.StringPtrInput
	// Allow user to reveal password. It can not be set to `true` if `credentialsScheme` is `"ADMIN_SETS_CREDENTIALS"`, `"SHARED_USERNAME_AND_PASSWORD"` or `"EXTERNAL_PASSWORD_SYNC"`.
	RevealPassword pulumi.BoolPtrInput
	// Shared password, required for certain schemes.
	SharedPassword pulumi.StringPtrInput
	// Shared username, required for certain schemes.
	SharedUsername pulumi.StringPtrInput
	// Sign-on mode of application.
	SignOnMode pulumi.StringPtrInput
	// Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
	SkipGroups pulumi.BoolPtrInput
	// Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
	SkipUsers pulumi.BoolPtrInput
	// Status of application. By default, it is `"ACTIVE"`.
	Status pulumi.StringPtrInput
	// Login URL.
	Url pulumi.StringPtrInput
	// A regex that further restricts URL to the specified regex.
	UrlRegex pulumi.StringPtrInput
	// Username template. Default: `"${source.login}"`
	UserNameTemplate pulumi.StringPtrInput
	// Push username on update. Valid values: `"PUSH"` and `"DONT_PUSH"`.
	UserNameTemplatePushStatus pulumi.StringPtrInput
	// Username template suffix.
	UserNameTemplateSuffix pulumi.StringPtrInput
	// Username template type. Default: `"BUILT_IN"`.
	UserNameTemplateType pulumi.StringPtrInput
	// Login username field CSS selector.
	UsernameSelector pulumi.StringPtrInput
	// The users assigned to the application. See `app.User` for a more flexible approach.
	// - `DEPRECATED`: Please replace usage with the `app.User` resource.
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users ThreeFieldUserArrayInput
}

func (ThreeFieldState) ElementType() reflect.Type {
	return reflect.TypeOf((*threeFieldState)(nil)).Elem()
}

type threeFieldArgs struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page for this application.
	AccessibilityLoginRedirectUrl *string `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self-service. By default, it is `false`.
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote *string `pulumi:"adminNote"`
	// Displays specific appLinks for the app
	AppLinksJson *string `pulumi:"appLinksJson"`
	// Display auto submit toolbar.
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Login button field CSS selector.
	ButtonSelector string `pulumi:"buttonSelector"`
	// Application credentials scheme. Can be set to `"EDIT_USERNAME_AND_PASSWORD"`, `"ADMIN_SETS_CREDENTIALS"`, `"EDIT_PASSWORD_ONLY"`, `"EXTERNAL_PASSWORD_SYNC"`, or `"SHARED_USERNAME_AND_PASSWORD"`.
	CredentialsScheme *string `pulumi:"credentialsScheme"`
	// Application notes for end users.
	EnduserNote *string `pulumi:"enduserNote"`
	// Extra field CSS selector.
	ExtraFieldSelector string `pulumi:"extraFieldSelector"`
	// Value for extra form field.
	ExtraFieldValue string `pulumi:"extraFieldValue"`
	// Groups associated with the application. See `app.GroupAssignment` for a more flexible approach.
	// - `DEPRECATED`: Please replace usage with the `AppGroupAssignments` (or `app.GroupAssignment`) resource.
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups []string `pulumi:"groups"`
	// Do not display application icon on mobile app.
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users.
	HideWeb *bool `pulumi:"hideWeb"`
	// The display name of the Application.
	Label string `pulumi:"label"`
	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo *string `pulumi:"logo"`
	// Login password field CSS selector.
	PasswordSelector string `pulumi:"passwordSelector"`
	// Allow user to reveal password. It can not be set to `true` if `credentialsScheme` is `"ADMIN_SETS_CREDENTIALS"`, `"SHARED_USERNAME_AND_PASSWORD"` or `"EXTERNAL_PASSWORD_SYNC"`.
	RevealPassword *bool `pulumi:"revealPassword"`
	// Shared password, required for certain schemes.
	SharedPassword *string `pulumi:"sharedPassword"`
	// Shared username, required for certain schemes.
	SharedUsername *string `pulumi:"sharedUsername"`
	// Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
	SkipGroups *bool `pulumi:"skipGroups"`
	// Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
	SkipUsers *bool `pulumi:"skipUsers"`
	// Status of application. By default, it is `"ACTIVE"`.
	Status *string `pulumi:"status"`
	// Login URL.
	Url string `pulumi:"url"`
	// A regex that further restricts URL to the specified regex.
	UrlRegex *string `pulumi:"urlRegex"`
	// Username template. Default: `"${source.login}"`
	UserNameTemplate *string `pulumi:"userNameTemplate"`
	// Push username on update. Valid values: `"PUSH"` and `"DONT_PUSH"`.
	UserNameTemplatePushStatus *string `pulumi:"userNameTemplatePushStatus"`
	// Username template suffix.
	UserNameTemplateSuffix *string `pulumi:"userNameTemplateSuffix"`
	// Username template type. Default: `"BUILT_IN"`.
	UserNameTemplateType *string `pulumi:"userNameTemplateType"`
	// Login username field CSS selector.
	UsernameSelector string `pulumi:"usernameSelector"`
	// The users assigned to the application. See `app.User` for a more flexible approach.
	// - `DEPRECATED`: Please replace usage with the `app.User` resource.
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users []ThreeFieldUser `pulumi:"users"`
}

// The set of arguments for constructing a ThreeField resource.
type ThreeFieldArgs struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Custom login page for this application.
	AccessibilityLoginRedirectUrl pulumi.StringPtrInput
	// Enable self-service. By default, it is `false`.
	AccessibilitySelfService pulumi.BoolPtrInput
	// Application notes for admins.
	AdminNote pulumi.StringPtrInput
	// Displays specific appLinks for the app
	AppLinksJson pulumi.StringPtrInput
	// Display auto submit toolbar.
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Login button field CSS selector.
	ButtonSelector pulumi.StringInput
	// Application credentials scheme. Can be set to `"EDIT_USERNAME_AND_PASSWORD"`, `"ADMIN_SETS_CREDENTIALS"`, `"EDIT_PASSWORD_ONLY"`, `"EXTERNAL_PASSWORD_SYNC"`, or `"SHARED_USERNAME_AND_PASSWORD"`.
	CredentialsScheme pulumi.StringPtrInput
	// Application notes for end users.
	EnduserNote pulumi.StringPtrInput
	// Extra field CSS selector.
	ExtraFieldSelector pulumi.StringInput
	// Value for extra form field.
	ExtraFieldValue pulumi.StringInput
	// Groups associated with the application. See `app.GroupAssignment` for a more flexible approach.
	// - `DEPRECATED`: Please replace usage with the `AppGroupAssignments` (or `app.GroupAssignment`) resource.
	//
	// Deprecated: The direct configuration of groups in this app resource is deprecated, please ensure you use the resource `okta_app_group_assignments` for this functionality.
	Groups pulumi.StringArrayInput
	// Do not display application icon on mobile app.
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users.
	HideWeb pulumi.BoolPtrInput
	// The display name of the Application.
	Label pulumi.StringInput
	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo pulumi.StringPtrInput
	// Login password field CSS selector.
	PasswordSelector pulumi.StringInput
	// Allow user to reveal password. It can not be set to `true` if `credentialsScheme` is `"ADMIN_SETS_CREDENTIALS"`, `"SHARED_USERNAME_AND_PASSWORD"` or `"EXTERNAL_PASSWORD_SYNC"`.
	RevealPassword pulumi.BoolPtrInput
	// Shared password, required for certain schemes.
	SharedPassword pulumi.StringPtrInput
	// Shared username, required for certain schemes.
	SharedUsername pulumi.StringPtrInput
	// Indicator that allows the app to skip `groups` sync (it's also can be provided during import). Default is `false`.
	SkipGroups pulumi.BoolPtrInput
	// Indicator that allows the app to skip `users` sync (it's also can be provided during import). Default is `false`.
	SkipUsers pulumi.BoolPtrInput
	// Status of application. By default, it is `"ACTIVE"`.
	Status pulumi.StringPtrInput
	// Login URL.
	Url pulumi.StringInput
	// A regex that further restricts URL to the specified regex.
	UrlRegex pulumi.StringPtrInput
	// Username template. Default: `"${source.login}"`
	UserNameTemplate pulumi.StringPtrInput
	// Push username on update. Valid values: `"PUSH"` and `"DONT_PUSH"`.
	UserNameTemplatePushStatus pulumi.StringPtrInput
	// Username template suffix.
	UserNameTemplateSuffix pulumi.StringPtrInput
	// Username template type. Default: `"BUILT_IN"`.
	UserNameTemplateType pulumi.StringPtrInput
	// Login username field CSS selector.
	UsernameSelector pulumi.StringInput
	// The users assigned to the application. See `app.User` for a more flexible approach.
	// - `DEPRECATED`: Please replace usage with the `app.User` resource.
	//
	// Deprecated: The direct configuration of users in this app resource is deprecated, please ensure you use the resource `okta_app_user` for this functionality.
	Users ThreeFieldUserArrayInput
}

func (ThreeFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*threeFieldArgs)(nil)).Elem()
}

type ThreeFieldInput interface {
	pulumi.Input

	ToThreeFieldOutput() ThreeFieldOutput
	ToThreeFieldOutputWithContext(ctx context.Context) ThreeFieldOutput
}

func (*ThreeField) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreeField)(nil))
}

func (i *ThreeField) ToThreeFieldOutput() ThreeFieldOutput {
	return i.ToThreeFieldOutputWithContext(context.Background())
}

func (i *ThreeField) ToThreeFieldOutputWithContext(ctx context.Context) ThreeFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreeFieldOutput)
}

func (i *ThreeField) ToThreeFieldPtrOutput() ThreeFieldPtrOutput {
	return i.ToThreeFieldPtrOutputWithContext(context.Background())
}

func (i *ThreeField) ToThreeFieldPtrOutputWithContext(ctx context.Context) ThreeFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreeFieldPtrOutput)
}

type ThreeFieldPtrInput interface {
	pulumi.Input

	ToThreeFieldPtrOutput() ThreeFieldPtrOutput
	ToThreeFieldPtrOutputWithContext(ctx context.Context) ThreeFieldPtrOutput
}

type threeFieldPtrType ThreeFieldArgs

func (*threeFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThreeField)(nil))
}

func (i *threeFieldPtrType) ToThreeFieldPtrOutput() ThreeFieldPtrOutput {
	return i.ToThreeFieldPtrOutputWithContext(context.Background())
}

func (i *threeFieldPtrType) ToThreeFieldPtrOutputWithContext(ctx context.Context) ThreeFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreeFieldPtrOutput)
}

// ThreeFieldArrayInput is an input type that accepts ThreeFieldArray and ThreeFieldArrayOutput values.
// You can construct a concrete instance of `ThreeFieldArrayInput` via:
//
//          ThreeFieldArray{ ThreeFieldArgs{...} }
type ThreeFieldArrayInput interface {
	pulumi.Input

	ToThreeFieldArrayOutput() ThreeFieldArrayOutput
	ToThreeFieldArrayOutputWithContext(context.Context) ThreeFieldArrayOutput
}

type ThreeFieldArray []ThreeFieldInput

func (ThreeFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ThreeField)(nil)).Elem()
}

func (i ThreeFieldArray) ToThreeFieldArrayOutput() ThreeFieldArrayOutput {
	return i.ToThreeFieldArrayOutputWithContext(context.Background())
}

func (i ThreeFieldArray) ToThreeFieldArrayOutputWithContext(ctx context.Context) ThreeFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreeFieldArrayOutput)
}

// ThreeFieldMapInput is an input type that accepts ThreeFieldMap and ThreeFieldMapOutput values.
// You can construct a concrete instance of `ThreeFieldMapInput` via:
//
//          ThreeFieldMap{ "key": ThreeFieldArgs{...} }
type ThreeFieldMapInput interface {
	pulumi.Input

	ToThreeFieldMapOutput() ThreeFieldMapOutput
	ToThreeFieldMapOutputWithContext(context.Context) ThreeFieldMapOutput
}

type ThreeFieldMap map[string]ThreeFieldInput

func (ThreeFieldMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ThreeField)(nil)).Elem()
}

func (i ThreeFieldMap) ToThreeFieldMapOutput() ThreeFieldMapOutput {
	return i.ToThreeFieldMapOutputWithContext(context.Background())
}

func (i ThreeFieldMap) ToThreeFieldMapOutputWithContext(ctx context.Context) ThreeFieldMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreeFieldMapOutput)
}

type ThreeFieldOutput struct{ *pulumi.OutputState }

func (ThreeFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreeField)(nil))
}

func (o ThreeFieldOutput) ToThreeFieldOutput() ThreeFieldOutput {
	return o
}

func (o ThreeFieldOutput) ToThreeFieldOutputWithContext(ctx context.Context) ThreeFieldOutput {
	return o
}

func (o ThreeFieldOutput) ToThreeFieldPtrOutput() ThreeFieldPtrOutput {
	return o.ToThreeFieldPtrOutputWithContext(context.Background())
}

func (o ThreeFieldOutput) ToThreeFieldPtrOutputWithContext(ctx context.Context) ThreeFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThreeField) *ThreeField {
		return &v
	}).(ThreeFieldPtrOutput)
}

type ThreeFieldPtrOutput struct{ *pulumi.OutputState }

func (ThreeFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThreeField)(nil))
}

func (o ThreeFieldPtrOutput) ToThreeFieldPtrOutput() ThreeFieldPtrOutput {
	return o
}

func (o ThreeFieldPtrOutput) ToThreeFieldPtrOutputWithContext(ctx context.Context) ThreeFieldPtrOutput {
	return o
}

func (o ThreeFieldPtrOutput) Elem() ThreeFieldOutput {
	return o.ApplyT(func(v *ThreeField) ThreeField {
		if v != nil {
			return *v
		}
		var ret ThreeField
		return ret
	}).(ThreeFieldOutput)
}

type ThreeFieldArrayOutput struct{ *pulumi.OutputState }

func (ThreeFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreeField)(nil))
}

func (o ThreeFieldArrayOutput) ToThreeFieldArrayOutput() ThreeFieldArrayOutput {
	return o
}

func (o ThreeFieldArrayOutput) ToThreeFieldArrayOutputWithContext(ctx context.Context) ThreeFieldArrayOutput {
	return o
}

func (o ThreeFieldArrayOutput) Index(i pulumi.IntInput) ThreeFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreeField {
		return vs[0].([]ThreeField)[vs[1].(int)]
	}).(ThreeFieldOutput)
}

type ThreeFieldMapOutput struct{ *pulumi.OutputState }

func (ThreeFieldMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ThreeField)(nil))
}

func (o ThreeFieldMapOutput) ToThreeFieldMapOutput() ThreeFieldMapOutput {
	return o
}

func (o ThreeFieldMapOutput) ToThreeFieldMapOutputWithContext(ctx context.Context) ThreeFieldMapOutput {
	return o
}

func (o ThreeFieldMapOutput) MapIndex(k pulumi.StringInput) ThreeFieldOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ThreeField {
		return vs[0].(map[string]ThreeField)[vs[1].(string)]
	}).(ThreeFieldOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ThreeFieldInput)(nil)).Elem(), &ThreeField{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreeFieldPtrInput)(nil)).Elem(), &ThreeField{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreeFieldArrayInput)(nil)).Elem(), ThreeFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreeFieldMapInput)(nil)).Elem(), ThreeFieldMap{})
	pulumi.RegisterOutputType(ThreeFieldOutput{})
	pulumi.RegisterOutputType(ThreeFieldPtrOutput{})
	pulumi.RegisterOutputType(ThreeFieldArrayOutput{})
	pulumi.RegisterOutputType(ThreeFieldMapOutput{})
}

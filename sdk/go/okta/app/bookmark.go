// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a Bookmark Application.
//
// This resource allows you to create and configure a Bookmark Application.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-okta/sdk/v2/go/okta/app"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := app.NewBookmark(ctx, "example", &app.BookmarkArgs{
// 			Label: pulumi.String("Example"),
// 			Url:   pulumi.String("https://example.com"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// A Bookmark App can be imported via the Okta ID.
//
// ```sh
//  $ pulumi import okta:app/bookmark:Bookmark example <app id>
// ```
type Bookmark struct {
	pulumi.CustomResourceState

	// Display auto submit toolbar.
	AutoSubmitToolbar pulumi.BoolPtrOutput `pulumi:"autoSubmitToolbar"`
	// Groups associated with the application.
	Groups pulumi.StringArrayOutput `pulumi:"groups"`
	// Do not display application icon on mobile app.
	HideIos pulumi.BoolPtrOutput `pulumi:"hideIos"`
	// Do not display application icon to users.
	HideWeb pulumi.BoolPtrOutput `pulumi:"hideWeb"`
	// The Application's display name.
	Label pulumi.StringOutput `pulumi:"label"`
	// name of app.
	Name pulumi.StringOutput `pulumi:"name"`
	// Would you like Okta to add an integration for this app?
	RequestIntegration pulumi.BoolPtrOutput `pulumi:"requestIntegration"`
	// Sign on mode of application.
	SignOnMode pulumi.StringOutput `pulumi:"signOnMode"`
	// Status of application. (`"ACTIVE"` or `"INACTIVE"`).
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// The URL of the bookmark.
	Url pulumi.StringOutput `pulumi:"url"`
	// Users associated with the application.
	Users BookmarkUserArrayOutput `pulumi:"users"`
}

// NewBookmark registers a new resource with the given unique name, arguments, and options.
func NewBookmark(ctx *pulumi.Context,
	name string, args *BookmarkArgs, opts ...pulumi.ResourceOption) (*Bookmark, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	var resource Bookmark
	err := ctx.RegisterResource("okta:app/bookmark:Bookmark", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBookmark gets an existing Bookmark resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBookmark(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BookmarkState, opts ...pulumi.ResourceOption) (*Bookmark, error) {
	var resource Bookmark
	err := ctx.ReadResource("okta:app/bookmark:Bookmark", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Bookmark resources.
type bookmarkState struct {
	// Display auto submit toolbar.
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Groups associated with the application.
	Groups []string `pulumi:"groups"`
	// Do not display application icon on mobile app.
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users.
	HideWeb *bool `pulumi:"hideWeb"`
	// The Application's display name.
	Label *string `pulumi:"label"`
	// name of app.
	Name *string `pulumi:"name"`
	// Would you like Okta to add an integration for this app?
	RequestIntegration *bool `pulumi:"requestIntegration"`
	// Sign on mode of application.
	SignOnMode *string `pulumi:"signOnMode"`
	// Status of application. (`"ACTIVE"` or `"INACTIVE"`).
	Status *string `pulumi:"status"`
	// The URL of the bookmark.
	Url *string `pulumi:"url"`
	// Users associated with the application.
	Users []BookmarkUser `pulumi:"users"`
}

type BookmarkState struct {
	// Display auto submit toolbar.
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Groups associated with the application.
	Groups pulumi.StringArrayInput
	// Do not display application icon on mobile app.
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users.
	HideWeb pulumi.BoolPtrInput
	// The Application's display name.
	Label pulumi.StringPtrInput
	// name of app.
	Name pulumi.StringPtrInput
	// Would you like Okta to add an integration for this app?
	RequestIntegration pulumi.BoolPtrInput
	// Sign on mode of application.
	SignOnMode pulumi.StringPtrInput
	// Status of application. (`"ACTIVE"` or `"INACTIVE"`).
	Status pulumi.StringPtrInput
	// The URL of the bookmark.
	Url pulumi.StringPtrInput
	// Users associated with the application.
	Users BookmarkUserArrayInput
}

func (BookmarkState) ElementType() reflect.Type {
	return reflect.TypeOf((*bookmarkState)(nil)).Elem()
}

type bookmarkArgs struct {
	// Display auto submit toolbar.
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Groups associated with the application.
	Groups []string `pulumi:"groups"`
	// Do not display application icon on mobile app.
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users.
	HideWeb *bool `pulumi:"hideWeb"`
	// The Application's display name.
	Label string `pulumi:"label"`
	// Would you like Okta to add an integration for this app?
	RequestIntegration *bool `pulumi:"requestIntegration"`
	// Status of application. (`"ACTIVE"` or `"INACTIVE"`).
	Status *string `pulumi:"status"`
	// The URL of the bookmark.
	Url string `pulumi:"url"`
	// Users associated with the application.
	Users []BookmarkUser `pulumi:"users"`
}

// The set of arguments for constructing a Bookmark resource.
type BookmarkArgs struct {
	// Display auto submit toolbar.
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Groups associated with the application.
	Groups pulumi.StringArrayInput
	// Do not display application icon on mobile app.
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users.
	HideWeb pulumi.BoolPtrInput
	// The Application's display name.
	Label pulumi.StringInput
	// Would you like Okta to add an integration for this app?
	RequestIntegration pulumi.BoolPtrInput
	// Status of application. (`"ACTIVE"` or `"INACTIVE"`).
	Status pulumi.StringPtrInput
	// The URL of the bookmark.
	Url pulumi.StringInput
	// Users associated with the application.
	Users BookmarkUserArrayInput
}

func (BookmarkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bookmarkArgs)(nil)).Elem()
}

type BookmarkInput interface {
	pulumi.Input

	ToBookmarkOutput() BookmarkOutput
	ToBookmarkOutputWithContext(ctx context.Context) BookmarkOutput
}

func (Bookmark) ElementType() reflect.Type {
	return reflect.TypeOf((*Bookmark)(nil)).Elem()
}

func (i Bookmark) ToBookmarkOutput() BookmarkOutput {
	return i.ToBookmarkOutputWithContext(context.Background())
}

func (i Bookmark) ToBookmarkOutputWithContext(ctx context.Context) BookmarkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BookmarkOutput)
}

type BookmarkOutput struct {
	*pulumi.OutputState
}

func (BookmarkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BookmarkOutput)(nil)).Elem()
}

func (o BookmarkOutput) ToBookmarkOutput() BookmarkOutput {
	return o
}

func (o BookmarkOutput) ToBookmarkOutputWithContext(ctx context.Context) BookmarkOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(BookmarkOutput{})
}

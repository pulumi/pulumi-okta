// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages an Application User Base Schema property.
//
// This resource allows you to configure a base app user schema property.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-okta/sdk/v2/go/okta/app"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := app.NewUserBaseSchema(ctx, "example", &app.UserBaseSchemaArgs{
// 			AppId:  pulumi.String("<app id>"),
// 			Index:  pulumi.String("customPropertyName"),
// 			Master: pulumi.String("OKTA"),
// 			Title:  pulumi.String("customPropertyName"),
// 			Type:   pulumi.String("string"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type UserBaseSchema struct {
	pulumi.CustomResourceState

	// The Application's ID the user schema property should be assigned to.
	AppId pulumi.StringOutput `pulumi:"appId"`
	// The property name.
	Index pulumi.StringOutput `pulumi:"index"`
	// Master priority for the user schema property. It can be set to `"PROFILE_MASTER"` or `"OKTA"`.
	Master pulumi.StringPtrOutput `pulumi:"master"`
	// Access control permissions for the property. It can be set to `"READ_WRITE"`, `"READ_ONLY"`, `"HIDE"`.
	Permissions pulumi.StringPtrOutput `pulumi:"permissions"`
	// Whether the property is required for this application's users.
	Required pulumi.BoolPtrOutput `pulumi:"required"`
	// The property display name.
	Title pulumi.StringOutput `pulumi:"title"`
	// The type of the schema property. It can be `"string"`, `"boolean"`, `"number"`, `"integer"`, `"array"`, or `"object"`.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewUserBaseSchema registers a new resource with the given unique name, arguments, and options.
func NewUserBaseSchema(ctx *pulumi.Context,
	name string, args *UserBaseSchemaArgs, opts ...pulumi.ResourceOption) (*UserBaseSchema, error) {
	if args == nil || args.AppId == nil {
		return nil, errors.New("missing required argument 'AppId'")
	}
	if args == nil || args.Index == nil {
		return nil, errors.New("missing required argument 'Index'")
	}
	if args == nil || args.Title == nil {
		return nil, errors.New("missing required argument 'Title'")
	}
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil {
		args = &UserBaseSchemaArgs{}
	}
	var resource UserBaseSchema
	err := ctx.RegisterResource("okta:app/userBaseSchema:UserBaseSchema", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserBaseSchema gets an existing UserBaseSchema resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserBaseSchema(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserBaseSchemaState, opts ...pulumi.ResourceOption) (*UserBaseSchema, error) {
	var resource UserBaseSchema
	err := ctx.ReadResource("okta:app/userBaseSchema:UserBaseSchema", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserBaseSchema resources.
type userBaseSchemaState struct {
	// The Application's ID the user schema property should be assigned to.
	AppId *string `pulumi:"appId"`
	// The property name.
	Index *string `pulumi:"index"`
	// Master priority for the user schema property. It can be set to `"PROFILE_MASTER"` or `"OKTA"`.
	Master *string `pulumi:"master"`
	// Access control permissions for the property. It can be set to `"READ_WRITE"`, `"READ_ONLY"`, `"HIDE"`.
	Permissions *string `pulumi:"permissions"`
	// Whether the property is required for this application's users.
	Required *bool `pulumi:"required"`
	// The property display name.
	Title *string `pulumi:"title"`
	// The type of the schema property. It can be `"string"`, `"boolean"`, `"number"`, `"integer"`, `"array"`, or `"object"`.
	Type *string `pulumi:"type"`
}

type UserBaseSchemaState struct {
	// The Application's ID the user schema property should be assigned to.
	AppId pulumi.StringPtrInput
	// The property name.
	Index pulumi.StringPtrInput
	// Master priority for the user schema property. It can be set to `"PROFILE_MASTER"` or `"OKTA"`.
	Master pulumi.StringPtrInput
	// Access control permissions for the property. It can be set to `"READ_WRITE"`, `"READ_ONLY"`, `"HIDE"`.
	Permissions pulumi.StringPtrInput
	// Whether the property is required for this application's users.
	Required pulumi.BoolPtrInput
	// The property display name.
	Title pulumi.StringPtrInput
	// The type of the schema property. It can be `"string"`, `"boolean"`, `"number"`, `"integer"`, `"array"`, or `"object"`.
	Type pulumi.StringPtrInput
}

func (UserBaseSchemaState) ElementType() reflect.Type {
	return reflect.TypeOf((*userBaseSchemaState)(nil)).Elem()
}

type userBaseSchemaArgs struct {
	// The Application's ID the user schema property should be assigned to.
	AppId string `pulumi:"appId"`
	// The property name.
	Index string `pulumi:"index"`
	// Master priority for the user schema property. It can be set to `"PROFILE_MASTER"` or `"OKTA"`.
	Master *string `pulumi:"master"`
	// Access control permissions for the property. It can be set to `"READ_WRITE"`, `"READ_ONLY"`, `"HIDE"`.
	Permissions *string `pulumi:"permissions"`
	// Whether the property is required for this application's users.
	Required *bool `pulumi:"required"`
	// The property display name.
	Title string `pulumi:"title"`
	// The type of the schema property. It can be `"string"`, `"boolean"`, `"number"`, `"integer"`, `"array"`, or `"object"`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a UserBaseSchema resource.
type UserBaseSchemaArgs struct {
	// The Application's ID the user schema property should be assigned to.
	AppId pulumi.StringInput
	// The property name.
	Index pulumi.StringInput
	// Master priority for the user schema property. It can be set to `"PROFILE_MASTER"` or `"OKTA"`.
	Master pulumi.StringPtrInput
	// Access control permissions for the property. It can be set to `"READ_WRITE"`, `"READ_ONLY"`, `"HIDE"`.
	Permissions pulumi.StringPtrInput
	// Whether the property is required for this application's users.
	Required pulumi.BoolPtrInput
	// The property display name.
	Title pulumi.StringInput
	// The type of the schema property. It can be `"string"`, `"boolean"`, `"number"`, `"integer"`, `"array"`, or `"object"`.
	Type pulumi.StringInput
}

func (UserBaseSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userBaseSchemaArgs)(nil)).Elem()
}

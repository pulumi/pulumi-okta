// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource allows you to create and configure an Auto Login Okta Application.
//
// > During an apply if there is change in status the app will first be
// activated or deactivated in accordance with the status change. Then, all
// other arguments that changed will be applied.
//
// ## Import
//
// ```sh
// $ pulumi import okta:app/autoLogin:AutoLogin example <app_id>
// ```
type AutoLogin struct {
	pulumi.CustomResourceState

	// Custom error page URL
	AccessibilityErrorRedirectUrl pulumi.StringPtrOutput `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page URL
	AccessibilityLoginRedirectUrl pulumi.StringPtrOutput `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self service. Default is `false`
	AccessibilitySelfService pulumi.BoolPtrOutput `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote pulumi.StringPtrOutput `pulumi:"adminNote"`
	// Displays specific appLinks for the app. The value for each application link should be boolean.
	AppLinksJson pulumi.StringPtrOutput `pulumi:"appLinksJson"`
	// Application settings in JSON format
	AppSettingsJson pulumi.StringPtrOutput `pulumi:"appSettingsJson"`
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrOutput `pulumi:"autoSubmitToolbar"`
	// Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`
	CredentialsScheme pulumi.StringPtrOutput `pulumi:"credentialsScheme"`
	// Application notes for end users.
	EnduserNote pulumi.StringPtrOutput `pulumi:"enduserNote"`
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrOutput `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrOutput `pulumi:"hideWeb"`
	// The Application's display name.
	Label pulumi.StringOutput `pulumi:"label"`
	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo pulumi.StringPtrOutput `pulumi:"logo"`
	// URL of the application's logo
	LogoUrl pulumi.StringOutput `pulumi:"logoUrl"`
	// Name of the app.
	Name pulumi.StringOutput `pulumi:"name"`
	// Tells Okta to use an existing application in their application catalog, as opposed to a custom application.
	PreconfiguredApp pulumi.StringPtrOutput `pulumi:"preconfiguredApp"`
	// Allow user to reveal password. Default is false. It can not be set to true if credentials*scheme is "ADMIN*SETS*CREDENTIALS", "SHARED*USERNAME*AND*PASSWORD" or "EXTERNAL*PASSWORD*SYNC".
	RevealPassword pulumi.BoolPtrOutput `pulumi:"revealPassword"`
	// Shared password, required for certain schemes.
	SharedPassword pulumi.StringPtrOutput `pulumi:"sharedPassword"`
	// Shared username, required for certain schemes.
	SharedUsername pulumi.StringPtrOutput `pulumi:"sharedUsername"`
	// Sign on mode of application.
	SignOnMode pulumi.StringOutput `pulumi:"signOnMode"`
	// Post login redirect URL
	SignOnRedirectUrl pulumi.StringPtrOutput `pulumi:"signOnRedirectUrl"`
	// Login URL
	SignOnUrl pulumi.StringPtrOutput `pulumi:"signOnUrl"`
	// Status of application. By default, it is `ACTIVE`
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// Username template. Default: `${source.login}`
	UserNameTemplate pulumi.StringPtrOutput `pulumi:"userNameTemplate"`
	// Push username on update. Valid values: `PUSH` and `DONT_PUSH`
	UserNameTemplatePushStatus pulumi.StringPtrOutput `pulumi:"userNameTemplatePushStatus"`
	// Username template suffix
	UserNameTemplateSuffix pulumi.StringPtrOutput `pulumi:"userNameTemplateSuffix"`
	// Username template type. Default: `BUILT_IN`
	UserNameTemplateType pulumi.StringPtrOutput `pulumi:"userNameTemplateType"`
}

// NewAutoLogin registers a new resource with the given unique name, arguments, and options.
func NewAutoLogin(ctx *pulumi.Context,
	name string, args *AutoLoginArgs, opts ...pulumi.ResourceOption) (*AutoLogin, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AutoLogin
	err := ctx.RegisterResource("okta:app/autoLogin:AutoLogin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutoLogin gets an existing AutoLogin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutoLogin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutoLoginState, opts ...pulumi.ResourceOption) (*AutoLogin, error) {
	var resource AutoLogin
	err := ctx.ReadResource("okta:app/autoLogin:AutoLogin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutoLogin resources.
type autoLoginState struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page URL
	AccessibilityLoginRedirectUrl *string `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self service. Default is `false`
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote *string `pulumi:"adminNote"`
	// Displays specific appLinks for the app. The value for each application link should be boolean.
	AppLinksJson *string `pulumi:"appLinksJson"`
	// Application settings in JSON format
	AppSettingsJson *string `pulumi:"appSettingsJson"`
	// Display auto submit toolbar
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`
	CredentialsScheme *string `pulumi:"credentialsScheme"`
	// Application notes for end users.
	EnduserNote *string `pulumi:"enduserNote"`
	// Do not display application icon on mobile app
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb *bool `pulumi:"hideWeb"`
	// The Application's display name.
	Label *string `pulumi:"label"`
	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo *string `pulumi:"logo"`
	// URL of the application's logo
	LogoUrl *string `pulumi:"logoUrl"`
	// Name of the app.
	Name *string `pulumi:"name"`
	// Tells Okta to use an existing application in their application catalog, as opposed to a custom application.
	PreconfiguredApp *string `pulumi:"preconfiguredApp"`
	// Allow user to reveal password. Default is false. It can not be set to true if credentials*scheme is "ADMIN*SETS*CREDENTIALS", "SHARED*USERNAME*AND*PASSWORD" or "EXTERNAL*PASSWORD*SYNC".
	RevealPassword *bool `pulumi:"revealPassword"`
	// Shared password, required for certain schemes.
	SharedPassword *string `pulumi:"sharedPassword"`
	// Shared username, required for certain schemes.
	SharedUsername *string `pulumi:"sharedUsername"`
	// Sign on mode of application.
	SignOnMode *string `pulumi:"signOnMode"`
	// Post login redirect URL
	SignOnRedirectUrl *string `pulumi:"signOnRedirectUrl"`
	// Login URL
	SignOnUrl *string `pulumi:"signOnUrl"`
	// Status of application. By default, it is `ACTIVE`
	Status *string `pulumi:"status"`
	// Username template. Default: `${source.login}`
	UserNameTemplate *string `pulumi:"userNameTemplate"`
	// Push username on update. Valid values: `PUSH` and `DONT_PUSH`
	UserNameTemplatePushStatus *string `pulumi:"userNameTemplatePushStatus"`
	// Username template suffix
	UserNameTemplateSuffix *string `pulumi:"userNameTemplateSuffix"`
	// Username template type. Default: `BUILT_IN`
	UserNameTemplateType *string `pulumi:"userNameTemplateType"`
}

type AutoLoginState struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Custom login page URL
	AccessibilityLoginRedirectUrl pulumi.StringPtrInput
	// Enable self service. Default is `false`
	AccessibilitySelfService pulumi.BoolPtrInput
	// Application notes for admins.
	AdminNote pulumi.StringPtrInput
	// Displays specific appLinks for the app. The value for each application link should be boolean.
	AppLinksJson pulumi.StringPtrInput
	// Application settings in JSON format
	AppSettingsJson pulumi.StringPtrInput
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`
	CredentialsScheme pulumi.StringPtrInput
	// Application notes for end users.
	EnduserNote pulumi.StringPtrInput
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrInput
	// The Application's display name.
	Label pulumi.StringPtrInput
	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo pulumi.StringPtrInput
	// URL of the application's logo
	LogoUrl pulumi.StringPtrInput
	// Name of the app.
	Name pulumi.StringPtrInput
	// Tells Okta to use an existing application in their application catalog, as opposed to a custom application.
	PreconfiguredApp pulumi.StringPtrInput
	// Allow user to reveal password. Default is false. It can not be set to true if credentials*scheme is "ADMIN*SETS*CREDENTIALS", "SHARED*USERNAME*AND*PASSWORD" or "EXTERNAL*PASSWORD*SYNC".
	RevealPassword pulumi.BoolPtrInput
	// Shared password, required for certain schemes.
	SharedPassword pulumi.StringPtrInput
	// Shared username, required for certain schemes.
	SharedUsername pulumi.StringPtrInput
	// Sign on mode of application.
	SignOnMode pulumi.StringPtrInput
	// Post login redirect URL
	SignOnRedirectUrl pulumi.StringPtrInput
	// Login URL
	SignOnUrl pulumi.StringPtrInput
	// Status of application. By default, it is `ACTIVE`
	Status pulumi.StringPtrInput
	// Username template. Default: `${source.login}`
	UserNameTemplate pulumi.StringPtrInput
	// Push username on update. Valid values: `PUSH` and `DONT_PUSH`
	UserNameTemplatePushStatus pulumi.StringPtrInput
	// Username template suffix
	UserNameTemplateSuffix pulumi.StringPtrInput
	// Username template type. Default: `BUILT_IN`
	UserNameTemplateType pulumi.StringPtrInput
}

func (AutoLoginState) ElementType() reflect.Type {
	return reflect.TypeOf((*autoLoginState)(nil)).Elem()
}

type autoLoginArgs struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Custom login page URL
	AccessibilityLoginRedirectUrl *string `pulumi:"accessibilityLoginRedirectUrl"`
	// Enable self service. Default is `false`
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// Application notes for admins.
	AdminNote *string `pulumi:"adminNote"`
	// Displays specific appLinks for the app. The value for each application link should be boolean.
	AppLinksJson *string `pulumi:"appLinksJson"`
	// Application settings in JSON format
	AppSettingsJson *string `pulumi:"appSettingsJson"`
	// Display auto submit toolbar
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`
	CredentialsScheme *string `pulumi:"credentialsScheme"`
	// Application notes for end users.
	EnduserNote *string `pulumi:"enduserNote"`
	// Do not display application icon on mobile app
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users
	HideWeb *bool `pulumi:"hideWeb"`
	// The Application's display name.
	Label string `pulumi:"label"`
	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo *string `pulumi:"logo"`
	// Tells Okta to use an existing application in their application catalog, as opposed to a custom application.
	PreconfiguredApp *string `pulumi:"preconfiguredApp"`
	// Allow user to reveal password. Default is false. It can not be set to true if credentials*scheme is "ADMIN*SETS*CREDENTIALS", "SHARED*USERNAME*AND*PASSWORD" or "EXTERNAL*PASSWORD*SYNC".
	RevealPassword *bool `pulumi:"revealPassword"`
	// Shared password, required for certain schemes.
	SharedPassword *string `pulumi:"sharedPassword"`
	// Shared username, required for certain schemes.
	SharedUsername *string `pulumi:"sharedUsername"`
	// Post login redirect URL
	SignOnRedirectUrl *string `pulumi:"signOnRedirectUrl"`
	// Login URL
	SignOnUrl *string `pulumi:"signOnUrl"`
	// Status of application. By default, it is `ACTIVE`
	Status *string `pulumi:"status"`
	// Username template. Default: `${source.login}`
	UserNameTemplate *string `pulumi:"userNameTemplate"`
	// Push username on update. Valid values: `PUSH` and `DONT_PUSH`
	UserNameTemplatePushStatus *string `pulumi:"userNameTemplatePushStatus"`
	// Username template suffix
	UserNameTemplateSuffix *string `pulumi:"userNameTemplateSuffix"`
	// Username template type. Default: `BUILT_IN`
	UserNameTemplateType *string `pulumi:"userNameTemplateType"`
}

// The set of arguments for constructing a AutoLogin resource.
type AutoLoginArgs struct {
	// Custom error page URL
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Custom login page URL
	AccessibilityLoginRedirectUrl pulumi.StringPtrInput
	// Enable self service. Default is `false`
	AccessibilitySelfService pulumi.BoolPtrInput
	// Application notes for admins.
	AdminNote pulumi.StringPtrInput
	// Displays specific appLinks for the app. The value for each application link should be boolean.
	AppLinksJson pulumi.StringPtrInput
	// Application settings in JSON format
	AppSettingsJson pulumi.StringPtrInput
	// Display auto submit toolbar
	AutoSubmitToolbar pulumi.BoolPtrInput
	// Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`
	CredentialsScheme pulumi.StringPtrInput
	// Application notes for end users.
	EnduserNote pulumi.StringPtrInput
	// Do not display application icon on mobile app
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users
	HideWeb pulumi.BoolPtrInput
	// The Application's display name.
	Label pulumi.StringInput
	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	Logo pulumi.StringPtrInput
	// Tells Okta to use an existing application in their application catalog, as opposed to a custom application.
	PreconfiguredApp pulumi.StringPtrInput
	// Allow user to reveal password. Default is false. It can not be set to true if credentials*scheme is "ADMIN*SETS*CREDENTIALS", "SHARED*USERNAME*AND*PASSWORD" or "EXTERNAL*PASSWORD*SYNC".
	RevealPassword pulumi.BoolPtrInput
	// Shared password, required for certain schemes.
	SharedPassword pulumi.StringPtrInput
	// Shared username, required for certain schemes.
	SharedUsername pulumi.StringPtrInput
	// Post login redirect URL
	SignOnRedirectUrl pulumi.StringPtrInput
	// Login URL
	SignOnUrl pulumi.StringPtrInput
	// Status of application. By default, it is `ACTIVE`
	Status pulumi.StringPtrInput
	// Username template. Default: `${source.login}`
	UserNameTemplate pulumi.StringPtrInput
	// Push username on update. Valid values: `PUSH` and `DONT_PUSH`
	UserNameTemplatePushStatus pulumi.StringPtrInput
	// Username template suffix
	UserNameTemplateSuffix pulumi.StringPtrInput
	// Username template type. Default: `BUILT_IN`
	UserNameTemplateType pulumi.StringPtrInput
}

func (AutoLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoLoginArgs)(nil)).Elem()
}

type AutoLoginInput interface {
	pulumi.Input

	ToAutoLoginOutput() AutoLoginOutput
	ToAutoLoginOutputWithContext(ctx context.Context) AutoLoginOutput
}

func (*AutoLogin) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoLogin)(nil)).Elem()
}

func (i *AutoLogin) ToAutoLoginOutput() AutoLoginOutput {
	return i.ToAutoLoginOutputWithContext(context.Background())
}

func (i *AutoLogin) ToAutoLoginOutputWithContext(ctx context.Context) AutoLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoLoginOutput)
}

// AutoLoginArrayInput is an input type that accepts AutoLoginArray and AutoLoginArrayOutput values.
// You can construct a concrete instance of `AutoLoginArrayInput` via:
//
//	AutoLoginArray{ AutoLoginArgs{...} }
type AutoLoginArrayInput interface {
	pulumi.Input

	ToAutoLoginArrayOutput() AutoLoginArrayOutput
	ToAutoLoginArrayOutputWithContext(context.Context) AutoLoginArrayOutput
}

type AutoLoginArray []AutoLoginInput

func (AutoLoginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoLogin)(nil)).Elem()
}

func (i AutoLoginArray) ToAutoLoginArrayOutput() AutoLoginArrayOutput {
	return i.ToAutoLoginArrayOutputWithContext(context.Background())
}

func (i AutoLoginArray) ToAutoLoginArrayOutputWithContext(ctx context.Context) AutoLoginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoLoginArrayOutput)
}

// AutoLoginMapInput is an input type that accepts AutoLoginMap and AutoLoginMapOutput values.
// You can construct a concrete instance of `AutoLoginMapInput` via:
//
//	AutoLoginMap{ "key": AutoLoginArgs{...} }
type AutoLoginMapInput interface {
	pulumi.Input

	ToAutoLoginMapOutput() AutoLoginMapOutput
	ToAutoLoginMapOutputWithContext(context.Context) AutoLoginMapOutput
}

type AutoLoginMap map[string]AutoLoginInput

func (AutoLoginMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoLogin)(nil)).Elem()
}

func (i AutoLoginMap) ToAutoLoginMapOutput() AutoLoginMapOutput {
	return i.ToAutoLoginMapOutputWithContext(context.Background())
}

func (i AutoLoginMap) ToAutoLoginMapOutputWithContext(ctx context.Context) AutoLoginMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoLoginMapOutput)
}

type AutoLoginOutput struct{ *pulumi.OutputState }

func (AutoLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoLogin)(nil)).Elem()
}

func (o AutoLoginOutput) ToAutoLoginOutput() AutoLoginOutput {
	return o
}

func (o AutoLoginOutput) ToAutoLoginOutputWithContext(ctx context.Context) AutoLoginOutput {
	return o
}

// Custom error page URL
func (o AutoLoginOutput) AccessibilityErrorRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.AccessibilityErrorRedirectUrl }).(pulumi.StringPtrOutput)
}

// Custom login page URL
func (o AutoLoginOutput) AccessibilityLoginRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.AccessibilityLoginRedirectUrl }).(pulumi.StringPtrOutput)
}

// Enable self service. Default is `false`
func (o AutoLoginOutput) AccessibilitySelfService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.BoolPtrOutput { return v.AccessibilitySelfService }).(pulumi.BoolPtrOutput)
}

// Application notes for admins.
func (o AutoLoginOutput) AdminNote() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.AdminNote }).(pulumi.StringPtrOutput)
}

// Displays specific appLinks for the app. The value for each application link should be boolean.
func (o AutoLoginOutput) AppLinksJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.AppLinksJson }).(pulumi.StringPtrOutput)
}

// Application settings in JSON format
func (o AutoLoginOutput) AppSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.AppSettingsJson }).(pulumi.StringPtrOutput)
}

// Display auto submit toolbar
func (o AutoLoginOutput) AutoSubmitToolbar() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.BoolPtrOutput { return v.AutoSubmitToolbar }).(pulumi.BoolPtrOutput)
}

// Application credentials scheme. One of: `EDIT_USERNAME_AND_PASSWORD`, `ADMIN_SETS_CREDENTIALS`, `EDIT_PASSWORD_ONLY`, `EXTERNAL_PASSWORD_SYNC`, or `SHARED_USERNAME_AND_PASSWORD`
func (o AutoLoginOutput) CredentialsScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.CredentialsScheme }).(pulumi.StringPtrOutput)
}

// Application notes for end users.
func (o AutoLoginOutput) EnduserNote() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.EnduserNote }).(pulumi.StringPtrOutput)
}

// Do not display application icon on mobile app
func (o AutoLoginOutput) HideIos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.BoolPtrOutput { return v.HideIos }).(pulumi.BoolPtrOutput)
}

// Do not display application icon to users
func (o AutoLoginOutput) HideWeb() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.BoolPtrOutput { return v.HideWeb }).(pulumi.BoolPtrOutput)
}

// The Application's display name.
func (o AutoLoginOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringOutput { return v.Label }).(pulumi.StringOutput)
}

// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
func (o AutoLoginOutput) Logo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.Logo }).(pulumi.StringPtrOutput)
}

// URL of the application's logo
func (o AutoLoginOutput) LogoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringOutput { return v.LogoUrl }).(pulumi.StringOutput)
}

// Name of the app.
func (o AutoLoginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Tells Okta to use an existing application in their application catalog, as opposed to a custom application.
func (o AutoLoginOutput) PreconfiguredApp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.PreconfiguredApp }).(pulumi.StringPtrOutput)
}

// Allow user to reveal password. Default is false. It can not be set to true if credentials*scheme is "ADMIN*SETS*CREDENTIALS", "SHARED*USERNAME*AND*PASSWORD" or "EXTERNAL*PASSWORD*SYNC".
func (o AutoLoginOutput) RevealPassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.BoolPtrOutput { return v.RevealPassword }).(pulumi.BoolPtrOutput)
}

// Shared password, required for certain schemes.
func (o AutoLoginOutput) SharedPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.SharedPassword }).(pulumi.StringPtrOutput)
}

// Shared username, required for certain schemes.
func (o AutoLoginOutput) SharedUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.SharedUsername }).(pulumi.StringPtrOutput)
}

// Sign on mode of application.
func (o AutoLoginOutput) SignOnMode() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringOutput { return v.SignOnMode }).(pulumi.StringOutput)
}

// Post login redirect URL
func (o AutoLoginOutput) SignOnRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.SignOnRedirectUrl }).(pulumi.StringPtrOutput)
}

// Login URL
func (o AutoLoginOutput) SignOnUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.SignOnUrl }).(pulumi.StringPtrOutput)
}

// Status of application. By default, it is `ACTIVE`
func (o AutoLoginOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

// Username template. Default: `${source.login}`
func (o AutoLoginOutput) UserNameTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.UserNameTemplate }).(pulumi.StringPtrOutput)
}

// Push username on update. Valid values: `PUSH` and `DONT_PUSH`
func (o AutoLoginOutput) UserNameTemplatePushStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.UserNameTemplatePushStatus }).(pulumi.StringPtrOutput)
}

// Username template suffix
func (o AutoLoginOutput) UserNameTemplateSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.UserNameTemplateSuffix }).(pulumi.StringPtrOutput)
}

// Username template type. Default: `BUILT_IN`
func (o AutoLoginOutput) UserNameTemplateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoLogin) pulumi.StringPtrOutput { return v.UserNameTemplateType }).(pulumi.StringPtrOutput)
}

type AutoLoginArrayOutput struct{ *pulumi.OutputState }

func (AutoLoginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoLogin)(nil)).Elem()
}

func (o AutoLoginArrayOutput) ToAutoLoginArrayOutput() AutoLoginArrayOutput {
	return o
}

func (o AutoLoginArrayOutput) ToAutoLoginArrayOutputWithContext(ctx context.Context) AutoLoginArrayOutput {
	return o
}

func (o AutoLoginArrayOutput) Index(i pulumi.IntInput) AutoLoginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutoLogin {
		return vs[0].([]*AutoLogin)[vs[1].(int)]
	}).(AutoLoginOutput)
}

type AutoLoginMapOutput struct{ *pulumi.OutputState }

func (AutoLoginMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoLogin)(nil)).Elem()
}

func (o AutoLoginMapOutput) ToAutoLoginMapOutput() AutoLoginMapOutput {
	return o
}

func (o AutoLoginMapOutput) ToAutoLoginMapOutputWithContext(ctx context.Context) AutoLoginMapOutput {
	return o
}

func (o AutoLoginMapOutput) MapIndex(k pulumi.StringInput) AutoLoginOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutoLogin {
		return vs[0].(map[string]*AutoLogin)[vs[1].(string)]
	}).(AutoLoginOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutoLoginInput)(nil)).Elem(), &AutoLogin{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoLoginArrayInput)(nil)).Elem(), AutoLoginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoLoginMapInput)(nil)).Elem(), AutoLoginMap{})
	pulumi.RegisterOutputType(AutoLoginOutput{})
	pulumi.RegisterOutputType(AutoLoginArrayOutput{})
	pulumi.RegisterOutputType(AutoLoginMapOutput{})
}

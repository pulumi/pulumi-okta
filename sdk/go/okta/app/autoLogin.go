// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates an Auto Login Okta Application.
//
// This resource allows you to create and configure an Auto Login Okta Application.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-okta/sdk/v2/go/okta/app"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := app.NewAutoLogin(ctx, "example", &app.AutoLoginArgs{
// 			CredentialsScheme: pulumi.String("EDIT_USERNAME_AND_PASSWORD"),
// 			Label:             pulumi.String("Example App"),
// 			RevealPassword:    pulumi.Bool(true),
// 			SignOnRedirectUrl: pulumi.String("https://example.com"),
// 			SignOnUrl:         pulumi.String("https://example.com/login.html"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Okta Auto Login App can be imported via the Okta ID.
//
// ```sh
//  $ pulumi import okta:app/autoLogin:AutoLogin example <app id>
// ```
type AutoLogin struct {
	pulumi.CustomResourceState

	// Custom error page URL.
	AccessibilityErrorRedirectUrl pulumi.StringPtrOutput `pulumi:"accessibilityErrorRedirectUrl"`
	// Enable self service. By default it is `false`.
	AccessibilitySelfService pulumi.BoolPtrOutput `pulumi:"accessibilitySelfService"`
	// Display auto submit toolbar.
	AutoSubmitToolbar pulumi.BoolPtrOutput `pulumi:"autoSubmitToolbar"`
	// One of: `"EDIT_USERNAME_AND_PASSWORD"`, `"ADMIN_SETS_CREDENTIALS"`, `"EDIT_PASSWORD_ONLY"`, `"EXTERNAL_PASSWORD_SYNC"`, or `"SHARED_USERNAME_AND_PASSWORD"`.
	CredentialsScheme pulumi.StringPtrOutput `pulumi:"credentialsScheme"`
	// Groups associated with the application. See `app.GroupAssignment` for a more flexible approach.
	Groups pulumi.StringArrayOutput `pulumi:"groups"`
	// Do not display application icon on mobile app.
	HideIos pulumi.BoolPtrOutput `pulumi:"hideIos"`
	// Do not display application icon to users.
	HideWeb pulumi.BoolPtrOutput `pulumi:"hideWeb"`
	// The Application's display name.
	Label pulumi.StringOutput `pulumi:"label"`
	// Name assigned to the application by Okta.
	Name pulumi.StringOutput `pulumi:"name"`
	// Tells Okta to use an existing application in their application catalog, as opposed to a custom application.
	PreconfiguredApp pulumi.StringPtrOutput `pulumi:"preconfiguredApp"`
	// Allow user to reveal password
	RevealPassword pulumi.BoolPtrOutput `pulumi:"revealPassword"`
	// Shared password, required for certain schemes
	SharedPassword pulumi.StringPtrOutput `pulumi:"sharedPassword"`
	// Shared username, required for certain schemes
	SharedUsername pulumi.StringPtrOutput `pulumi:"sharedUsername"`
	// Sign on mode of application.
	SignOnMode pulumi.StringOutput `pulumi:"signOnMode"`
	// Redirect URL; if going to the login page URL redirects to another page, then enter that URL here
	SignOnRedirectUrl pulumi.StringPtrOutput `pulumi:"signOnRedirectUrl"`
	// Login URL
	SignOnUrl pulumi.StringPtrOutput `pulumi:"signOnUrl"`
	// The status of the application, by default it is `"ACTIVE"`.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// Username template. Default: `"${source.login}"`
	UserNameTemplate pulumi.StringPtrOutput `pulumi:"userNameTemplate"`
	// Username template suffix.
	UserNameTemplateSuffix pulumi.StringPtrOutput `pulumi:"userNameTemplateSuffix"`
	// Username template type. Default: `"BUILT_IN"`
	UserNameTemplateType pulumi.StringPtrOutput `pulumi:"userNameTemplateType"`
	// The users assigned to the application. See `app.User` for a more flexible approach.
	Users AutoLoginUserArrayOutput `pulumi:"users"`
}

// NewAutoLogin registers a new resource with the given unique name, arguments, and options.
func NewAutoLogin(ctx *pulumi.Context,
	name string, args *AutoLoginArgs, opts ...pulumi.ResourceOption) (*AutoLogin, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	var resource AutoLogin
	err := ctx.RegisterResource("okta:app/autoLogin:AutoLogin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutoLogin gets an existing AutoLogin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutoLogin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutoLoginState, opts ...pulumi.ResourceOption) (*AutoLogin, error) {
	var resource AutoLogin
	err := ctx.ReadResource("okta:app/autoLogin:AutoLogin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutoLogin resources.
type autoLoginState struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Enable self service. By default it is `false`.
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// Display auto submit toolbar.
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// One of: `"EDIT_USERNAME_AND_PASSWORD"`, `"ADMIN_SETS_CREDENTIALS"`, `"EDIT_PASSWORD_ONLY"`, `"EXTERNAL_PASSWORD_SYNC"`, or `"SHARED_USERNAME_AND_PASSWORD"`.
	CredentialsScheme *string `pulumi:"credentialsScheme"`
	// Groups associated with the application. See `app.GroupAssignment` for a more flexible approach.
	Groups []string `pulumi:"groups"`
	// Do not display application icon on mobile app.
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users.
	HideWeb *bool `pulumi:"hideWeb"`
	// The Application's display name.
	Label *string `pulumi:"label"`
	// Name assigned to the application by Okta.
	Name *string `pulumi:"name"`
	// Tells Okta to use an existing application in their application catalog, as opposed to a custom application.
	PreconfiguredApp *string `pulumi:"preconfiguredApp"`
	// Allow user to reveal password
	RevealPassword *bool `pulumi:"revealPassword"`
	// Shared password, required for certain schemes
	SharedPassword *string `pulumi:"sharedPassword"`
	// Shared username, required for certain schemes
	SharedUsername *string `pulumi:"sharedUsername"`
	// Sign on mode of application.
	SignOnMode *string `pulumi:"signOnMode"`
	// Redirect URL; if going to the login page URL redirects to another page, then enter that URL here
	SignOnRedirectUrl *string `pulumi:"signOnRedirectUrl"`
	// Login URL
	SignOnUrl *string `pulumi:"signOnUrl"`
	// The status of the application, by default it is `"ACTIVE"`.
	Status *string `pulumi:"status"`
	// Username template. Default: `"${source.login}"`
	UserNameTemplate *string `pulumi:"userNameTemplate"`
	// Username template suffix.
	UserNameTemplateSuffix *string `pulumi:"userNameTemplateSuffix"`
	// Username template type. Default: `"BUILT_IN"`
	UserNameTemplateType *string `pulumi:"userNameTemplateType"`
	// The users assigned to the application. See `app.User` for a more flexible approach.
	Users []AutoLoginUser `pulumi:"users"`
}

type AutoLoginState struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Enable self service. By default it is `false`.
	AccessibilitySelfService pulumi.BoolPtrInput
	// Display auto submit toolbar.
	AutoSubmitToolbar pulumi.BoolPtrInput
	// One of: `"EDIT_USERNAME_AND_PASSWORD"`, `"ADMIN_SETS_CREDENTIALS"`, `"EDIT_PASSWORD_ONLY"`, `"EXTERNAL_PASSWORD_SYNC"`, or `"SHARED_USERNAME_AND_PASSWORD"`.
	CredentialsScheme pulumi.StringPtrInput
	// Groups associated with the application. See `app.GroupAssignment` for a more flexible approach.
	Groups pulumi.StringArrayInput
	// Do not display application icon on mobile app.
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users.
	HideWeb pulumi.BoolPtrInput
	// The Application's display name.
	Label pulumi.StringPtrInput
	// Name assigned to the application by Okta.
	Name pulumi.StringPtrInput
	// Tells Okta to use an existing application in their application catalog, as opposed to a custom application.
	PreconfiguredApp pulumi.StringPtrInput
	// Allow user to reveal password
	RevealPassword pulumi.BoolPtrInput
	// Shared password, required for certain schemes
	SharedPassword pulumi.StringPtrInput
	// Shared username, required for certain schemes
	SharedUsername pulumi.StringPtrInput
	// Sign on mode of application.
	SignOnMode pulumi.StringPtrInput
	// Redirect URL; if going to the login page URL redirects to another page, then enter that URL here
	SignOnRedirectUrl pulumi.StringPtrInput
	// Login URL
	SignOnUrl pulumi.StringPtrInput
	// The status of the application, by default it is `"ACTIVE"`.
	Status pulumi.StringPtrInput
	// Username template. Default: `"${source.login}"`
	UserNameTemplate pulumi.StringPtrInput
	// Username template suffix.
	UserNameTemplateSuffix pulumi.StringPtrInput
	// Username template type. Default: `"BUILT_IN"`
	UserNameTemplateType pulumi.StringPtrInput
	// The users assigned to the application. See `app.User` for a more flexible approach.
	Users AutoLoginUserArrayInput
}

func (AutoLoginState) ElementType() reflect.Type {
	return reflect.TypeOf((*autoLoginState)(nil)).Elem()
}

type autoLoginArgs struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl *string `pulumi:"accessibilityErrorRedirectUrl"`
	// Enable self service. By default it is `false`.
	AccessibilitySelfService *bool `pulumi:"accessibilitySelfService"`
	// Display auto submit toolbar.
	AutoSubmitToolbar *bool `pulumi:"autoSubmitToolbar"`
	// One of: `"EDIT_USERNAME_AND_PASSWORD"`, `"ADMIN_SETS_CREDENTIALS"`, `"EDIT_PASSWORD_ONLY"`, `"EXTERNAL_PASSWORD_SYNC"`, or `"SHARED_USERNAME_AND_PASSWORD"`.
	CredentialsScheme *string `pulumi:"credentialsScheme"`
	// Groups associated with the application. See `app.GroupAssignment` for a more flexible approach.
	Groups []string `pulumi:"groups"`
	// Do not display application icon on mobile app.
	HideIos *bool `pulumi:"hideIos"`
	// Do not display application icon to users.
	HideWeb *bool `pulumi:"hideWeb"`
	// The Application's display name.
	Label string `pulumi:"label"`
	// Tells Okta to use an existing application in their application catalog, as opposed to a custom application.
	PreconfiguredApp *string `pulumi:"preconfiguredApp"`
	// Allow user to reveal password
	RevealPassword *bool `pulumi:"revealPassword"`
	// Shared password, required for certain schemes
	SharedPassword *string `pulumi:"sharedPassword"`
	// Shared username, required for certain schemes
	SharedUsername *string `pulumi:"sharedUsername"`
	// Redirect URL; if going to the login page URL redirects to another page, then enter that URL here
	SignOnRedirectUrl *string `pulumi:"signOnRedirectUrl"`
	// Login URL
	SignOnUrl *string `pulumi:"signOnUrl"`
	// The status of the application, by default it is `"ACTIVE"`.
	Status *string `pulumi:"status"`
	// Username template. Default: `"${source.login}"`
	UserNameTemplate *string `pulumi:"userNameTemplate"`
	// Username template suffix.
	UserNameTemplateSuffix *string `pulumi:"userNameTemplateSuffix"`
	// Username template type. Default: `"BUILT_IN"`
	UserNameTemplateType *string `pulumi:"userNameTemplateType"`
	// The users assigned to the application. See `app.User` for a more flexible approach.
	Users []AutoLoginUser `pulumi:"users"`
}

// The set of arguments for constructing a AutoLogin resource.
type AutoLoginArgs struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl pulumi.StringPtrInput
	// Enable self service. By default it is `false`.
	AccessibilitySelfService pulumi.BoolPtrInput
	// Display auto submit toolbar.
	AutoSubmitToolbar pulumi.BoolPtrInput
	// One of: `"EDIT_USERNAME_AND_PASSWORD"`, `"ADMIN_SETS_CREDENTIALS"`, `"EDIT_PASSWORD_ONLY"`, `"EXTERNAL_PASSWORD_SYNC"`, or `"SHARED_USERNAME_AND_PASSWORD"`.
	CredentialsScheme pulumi.StringPtrInput
	// Groups associated with the application. See `app.GroupAssignment` for a more flexible approach.
	Groups pulumi.StringArrayInput
	// Do not display application icon on mobile app.
	HideIos pulumi.BoolPtrInput
	// Do not display application icon to users.
	HideWeb pulumi.BoolPtrInput
	// The Application's display name.
	Label pulumi.StringInput
	// Tells Okta to use an existing application in their application catalog, as opposed to a custom application.
	PreconfiguredApp pulumi.StringPtrInput
	// Allow user to reveal password
	RevealPassword pulumi.BoolPtrInput
	// Shared password, required for certain schemes
	SharedPassword pulumi.StringPtrInput
	// Shared username, required for certain schemes
	SharedUsername pulumi.StringPtrInput
	// Redirect URL; if going to the login page URL redirects to another page, then enter that URL here
	SignOnRedirectUrl pulumi.StringPtrInput
	// Login URL
	SignOnUrl pulumi.StringPtrInput
	// The status of the application, by default it is `"ACTIVE"`.
	Status pulumi.StringPtrInput
	// Username template. Default: `"${source.login}"`
	UserNameTemplate pulumi.StringPtrInput
	// Username template suffix.
	UserNameTemplateSuffix pulumi.StringPtrInput
	// Username template type. Default: `"BUILT_IN"`
	UserNameTemplateType pulumi.StringPtrInput
	// The users assigned to the application. See `app.User` for a more flexible approach.
	Users AutoLoginUserArrayInput
}

func (AutoLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoLoginArgs)(nil)).Elem()
}

type AutoLoginInput interface {
	pulumi.Input

	ToAutoLoginOutput() AutoLoginOutput
	ToAutoLoginOutputWithContext(ctx context.Context) AutoLoginOutput
}

func (*AutoLogin) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoLogin)(nil))
}

func (i *AutoLogin) ToAutoLoginOutput() AutoLoginOutput {
	return i.ToAutoLoginOutputWithContext(context.Background())
}

func (i *AutoLogin) ToAutoLoginOutputWithContext(ctx context.Context) AutoLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoLoginOutput)
}

type AutoLoginOutput struct {
	*pulumi.OutputState
}

func (AutoLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoLogin)(nil))
}

func (o AutoLoginOutput) ToAutoLoginOutput() AutoLoginOutput {
	return o
}

func (o AutoLoginOutput) ToAutoLoginOutputWithContext(ctx context.Context) AutoLoginOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AutoLoginOutput{})
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates an Application User Schema property.
//
// This resource allows you to create and configure a custom user schema property and associate it with an application.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-okta/sdk/v2/go/okta/app"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := app.NewUserSchema(ctx, "example", &app.UserSchemaArgs{
// 			AppId:       pulumi.String("<app id>"),
// 			Description: pulumi.String("My custom property name"),
// 			Index:       pulumi.String("customPropertyName"),
// 			Master:      pulumi.String("OKTA"),
// 			Scope:       pulumi.String("SELF"),
// 			Title:       pulumi.String("customPropertyName"),
// 			Type:        pulumi.String("string"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type UserSchema struct {
	pulumi.CustomResourceState

	// The Application's ID the user custom schema property should be assigned to.
	AppId pulumi.StringOutput `pulumi:"appId"`
	// Array of values that an array property's items can be set to.
	ArrayEnums pulumi.StringArrayOutput `pulumi:"arrayEnums"`
	// Display name and value an enum array can be set to.
	ArrayOneOfs UserSchemaArrayOneOfArrayOutput `pulumi:"arrayOneOfs"`
	// The type of the array elements if `type` is set to `"array"`.
	ArrayType pulumi.StringPtrOutput `pulumi:"arrayType"`
	// The description of the user schema property.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Array of values a primitive property can be set to. See `arrayEnum` for arrays.
	Enums pulumi.StringArrayOutput `pulumi:"enums"`
	// External name of the user schema property.
	ExternalName pulumi.StringPtrOutput `pulumi:"externalName"`
	// The property name.
	Index pulumi.StringOutput `pulumi:"index"`
	// Master priority for the user schema property. It can be set to `"PROFILE_MASTER"` or `"OKTA"`.
	Master pulumi.StringPtrOutput `pulumi:"master"`
	// The maximum length of the user property value. Only applies to type `"string"`.
	MaxLength pulumi.IntPtrOutput `pulumi:"maxLength"`
	// The minimum length of the user property value. Only applies to type `"string"`.
	MinLength pulumi.IntPtrOutput `pulumi:"minLength"`
	// Array of maps containing a mapping for display name to enum value.
	OneOfs UserSchemaOneOfArrayOutput `pulumi:"oneOfs"`
	// Access control permissions for the property. It can be set to `"READ_WRITE"`, `"READ_ONLY"`, `"HIDE"`.
	Permissions pulumi.StringPtrOutput `pulumi:"permissions"`
	// Whether the property is required for this application's users.
	Required pulumi.BoolPtrOutput `pulumi:"required"`
	// determines whether an app user attribute can be set at the Individual or Group Level.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
	// display name for the enum value.
	Title pulumi.StringOutput `pulumi:"title"`
	// The type of the schema property. It can be `"string"`, `"boolean"`, `"number"`, `"integer"`, `"array"`, or `"object"`.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewUserSchema registers a new resource with the given unique name, arguments, and options.
func NewUserSchema(ctx *pulumi.Context,
	name string, args *UserSchemaArgs, opts ...pulumi.ResourceOption) (*UserSchema, error) {
	if args == nil || args.AppId == nil {
		return nil, errors.New("missing required argument 'AppId'")
	}
	if args == nil || args.Index == nil {
		return nil, errors.New("missing required argument 'Index'")
	}
	if args == nil || args.Title == nil {
		return nil, errors.New("missing required argument 'Title'")
	}
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil {
		args = &UserSchemaArgs{}
	}
	var resource UserSchema
	err := ctx.RegisterResource("okta:app/userSchema:UserSchema", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserSchema gets an existing UserSchema resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserSchema(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserSchemaState, opts ...pulumi.ResourceOption) (*UserSchema, error) {
	var resource UserSchema
	err := ctx.ReadResource("okta:app/userSchema:UserSchema", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserSchema resources.
type userSchemaState struct {
	// The Application's ID the user custom schema property should be assigned to.
	AppId *string `pulumi:"appId"`
	// Array of values that an array property's items can be set to.
	ArrayEnums []string `pulumi:"arrayEnums"`
	// Display name and value an enum array can be set to.
	ArrayOneOfs []UserSchemaArrayOneOf `pulumi:"arrayOneOfs"`
	// The type of the array elements if `type` is set to `"array"`.
	ArrayType *string `pulumi:"arrayType"`
	// The description of the user schema property.
	Description *string `pulumi:"description"`
	// Array of values a primitive property can be set to. See `arrayEnum` for arrays.
	Enums []string `pulumi:"enums"`
	// External name of the user schema property.
	ExternalName *string `pulumi:"externalName"`
	// The property name.
	Index *string `pulumi:"index"`
	// Master priority for the user schema property. It can be set to `"PROFILE_MASTER"` or `"OKTA"`.
	Master *string `pulumi:"master"`
	// The maximum length of the user property value. Only applies to type `"string"`.
	MaxLength *int `pulumi:"maxLength"`
	// The minimum length of the user property value. Only applies to type `"string"`.
	MinLength *int `pulumi:"minLength"`
	// Array of maps containing a mapping for display name to enum value.
	OneOfs []UserSchemaOneOf `pulumi:"oneOfs"`
	// Access control permissions for the property. It can be set to `"READ_WRITE"`, `"READ_ONLY"`, `"HIDE"`.
	Permissions *string `pulumi:"permissions"`
	// Whether the property is required for this application's users.
	Required *bool `pulumi:"required"`
	// determines whether an app user attribute can be set at the Individual or Group Level.
	Scope *string `pulumi:"scope"`
	// display name for the enum value.
	Title *string `pulumi:"title"`
	// The type of the schema property. It can be `"string"`, `"boolean"`, `"number"`, `"integer"`, `"array"`, or `"object"`.
	Type *string `pulumi:"type"`
}

type UserSchemaState struct {
	// The Application's ID the user custom schema property should be assigned to.
	AppId pulumi.StringPtrInput
	// Array of values that an array property's items can be set to.
	ArrayEnums pulumi.StringArrayInput
	// Display name and value an enum array can be set to.
	ArrayOneOfs UserSchemaArrayOneOfArrayInput
	// The type of the array elements if `type` is set to `"array"`.
	ArrayType pulumi.StringPtrInput
	// The description of the user schema property.
	Description pulumi.StringPtrInput
	// Array of values a primitive property can be set to. See `arrayEnum` for arrays.
	Enums pulumi.StringArrayInput
	// External name of the user schema property.
	ExternalName pulumi.StringPtrInput
	// The property name.
	Index pulumi.StringPtrInput
	// Master priority for the user schema property. It can be set to `"PROFILE_MASTER"` or `"OKTA"`.
	Master pulumi.StringPtrInput
	// The maximum length of the user property value. Only applies to type `"string"`.
	MaxLength pulumi.IntPtrInput
	// The minimum length of the user property value. Only applies to type `"string"`.
	MinLength pulumi.IntPtrInput
	// Array of maps containing a mapping for display name to enum value.
	OneOfs UserSchemaOneOfArrayInput
	// Access control permissions for the property. It can be set to `"READ_WRITE"`, `"READ_ONLY"`, `"HIDE"`.
	Permissions pulumi.StringPtrInput
	// Whether the property is required for this application's users.
	Required pulumi.BoolPtrInput
	// determines whether an app user attribute can be set at the Individual or Group Level.
	Scope pulumi.StringPtrInput
	// display name for the enum value.
	Title pulumi.StringPtrInput
	// The type of the schema property. It can be `"string"`, `"boolean"`, `"number"`, `"integer"`, `"array"`, or `"object"`.
	Type pulumi.StringPtrInput
}

func (UserSchemaState) ElementType() reflect.Type {
	return reflect.TypeOf((*userSchemaState)(nil)).Elem()
}

type userSchemaArgs struct {
	// The Application's ID the user custom schema property should be assigned to.
	AppId string `pulumi:"appId"`
	// Array of values that an array property's items can be set to.
	ArrayEnums []string `pulumi:"arrayEnums"`
	// Display name and value an enum array can be set to.
	ArrayOneOfs []UserSchemaArrayOneOf `pulumi:"arrayOneOfs"`
	// The type of the array elements if `type` is set to `"array"`.
	ArrayType *string `pulumi:"arrayType"`
	// The description of the user schema property.
	Description *string `pulumi:"description"`
	// Array of values a primitive property can be set to. See `arrayEnum` for arrays.
	Enums []string `pulumi:"enums"`
	// External name of the user schema property.
	ExternalName *string `pulumi:"externalName"`
	// The property name.
	Index string `pulumi:"index"`
	// Master priority for the user schema property. It can be set to `"PROFILE_MASTER"` or `"OKTA"`.
	Master *string `pulumi:"master"`
	// The maximum length of the user property value. Only applies to type `"string"`.
	MaxLength *int `pulumi:"maxLength"`
	// The minimum length of the user property value. Only applies to type `"string"`.
	MinLength *int `pulumi:"minLength"`
	// Array of maps containing a mapping for display name to enum value.
	OneOfs []UserSchemaOneOf `pulumi:"oneOfs"`
	// Access control permissions for the property. It can be set to `"READ_WRITE"`, `"READ_ONLY"`, `"HIDE"`.
	Permissions *string `pulumi:"permissions"`
	// Whether the property is required for this application's users.
	Required *bool `pulumi:"required"`
	// determines whether an app user attribute can be set at the Individual or Group Level.
	Scope *string `pulumi:"scope"`
	// display name for the enum value.
	Title string `pulumi:"title"`
	// The type of the schema property. It can be `"string"`, `"boolean"`, `"number"`, `"integer"`, `"array"`, or `"object"`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a UserSchema resource.
type UserSchemaArgs struct {
	// The Application's ID the user custom schema property should be assigned to.
	AppId pulumi.StringInput
	// Array of values that an array property's items can be set to.
	ArrayEnums pulumi.StringArrayInput
	// Display name and value an enum array can be set to.
	ArrayOneOfs UserSchemaArrayOneOfArrayInput
	// The type of the array elements if `type` is set to `"array"`.
	ArrayType pulumi.StringPtrInput
	// The description of the user schema property.
	Description pulumi.StringPtrInput
	// Array of values a primitive property can be set to. See `arrayEnum` for arrays.
	Enums pulumi.StringArrayInput
	// External name of the user schema property.
	ExternalName pulumi.StringPtrInput
	// The property name.
	Index pulumi.StringInput
	// Master priority for the user schema property. It can be set to `"PROFILE_MASTER"` or `"OKTA"`.
	Master pulumi.StringPtrInput
	// The maximum length of the user property value. Only applies to type `"string"`.
	MaxLength pulumi.IntPtrInput
	// The minimum length of the user property value. Only applies to type `"string"`.
	MinLength pulumi.IntPtrInput
	// Array of maps containing a mapping for display name to enum value.
	OneOfs UserSchemaOneOfArrayInput
	// Access control permissions for the property. It can be set to `"READ_WRITE"`, `"READ_ONLY"`, `"HIDE"`.
	Permissions pulumi.StringPtrInput
	// Whether the property is required for this application's users.
	Required pulumi.BoolPtrInput
	// determines whether an app user attribute can be set at the Individual or Group Level.
	Scope pulumi.StringPtrInput
	// display name for the enum value.
	Title pulumi.StringInput
	// The type of the schema property. It can be `"string"`, `"boolean"`, `"number"`, `"integer"`, `"array"`, or `"object"`.
	Type pulumi.StringInput
}

func (UserSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userSchemaArgs)(nil)).Elem()
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type OAuthRedirectUri struct {
	pulumi.CustomResourceState

	AppId pulumi.StringOutput `pulumi:"appId"`
	// Redirect URI to append to Okta OIDC application.
	Uri pulumi.StringOutput `pulumi:"uri"`
}

// NewOAuthRedirectUri registers a new resource with the given unique name, arguments, and options.
func NewOAuthRedirectUri(ctx *pulumi.Context,
	name string, args *OAuthRedirectUriArgs, opts ...pulumi.ResourceOption) (*OAuthRedirectUri, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppId == nil {
		return nil, errors.New("invalid value for required argument 'AppId'")
	}
	if args.Uri == nil {
		return nil, errors.New("invalid value for required argument 'Uri'")
	}
	var resource OAuthRedirectUri
	err := ctx.RegisterResource("okta:app/oAuthRedirectUri:OAuthRedirectUri", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOAuthRedirectUri gets an existing OAuthRedirectUri resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOAuthRedirectUri(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OAuthRedirectUriState, opts ...pulumi.ResourceOption) (*OAuthRedirectUri, error) {
	var resource OAuthRedirectUri
	err := ctx.ReadResource("okta:app/oAuthRedirectUri:OAuthRedirectUri", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OAuthRedirectUri resources.
type oauthRedirectUriState struct {
	AppId *string `pulumi:"appId"`
	// Redirect URI to append to Okta OIDC application.
	Uri *string `pulumi:"uri"`
}

type OAuthRedirectUriState struct {
	AppId pulumi.StringPtrInput
	// Redirect URI to append to Okta OIDC application.
	Uri pulumi.StringPtrInput
}

func (OAuthRedirectUriState) ElementType() reflect.Type {
	return reflect.TypeOf((*oauthRedirectUriState)(nil)).Elem()
}

type oauthRedirectUriArgs struct {
	AppId string `pulumi:"appId"`
	// Redirect URI to append to Okta OIDC application.
	Uri string `pulumi:"uri"`
}

// The set of arguments for constructing a OAuthRedirectUri resource.
type OAuthRedirectUriArgs struct {
	AppId pulumi.StringInput
	// Redirect URI to append to Okta OIDC application.
	Uri pulumi.StringInput
}

func (OAuthRedirectUriArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*oauthRedirectUriArgs)(nil)).Elem()
}

type OAuthRedirectUriInput interface {
	pulumi.Input

	ToOAuthRedirectUriOutput() OAuthRedirectUriOutput
	ToOAuthRedirectUriOutputWithContext(ctx context.Context) OAuthRedirectUriOutput
}

func (*OAuthRedirectUri) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuthRedirectUri)(nil))
}

func (i *OAuthRedirectUri) ToOAuthRedirectUriOutput() OAuthRedirectUriOutput {
	return i.ToOAuthRedirectUriOutputWithContext(context.Background())
}

func (i *OAuthRedirectUri) ToOAuthRedirectUriOutputWithContext(ctx context.Context) OAuthRedirectUriOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuthRedirectUriOutput)
}

type OAuthRedirectUriOutput struct {
	*pulumi.OutputState
}

func (OAuthRedirectUriOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuthRedirectUri)(nil))
}

func (o OAuthRedirectUriOutput) ToOAuthRedirectUriOutput() OAuthRedirectUriOutput {
	return o
}

func (o OAuthRedirectUriOutput) ToOAuthRedirectUriOutputWithContext(ctx context.Context) OAuthRedirectUriOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OAuthRedirectUriOutput{})
}

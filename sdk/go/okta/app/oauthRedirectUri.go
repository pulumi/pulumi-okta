// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OAuthRedirectUri struct {
	pulumi.CustomResourceState

	AppId pulumi.StringOutput `pulumi:"appId"`
	// Redirect URI to append to Okta OIDC application.
	Uri pulumi.StringOutput `pulumi:"uri"`
}

// NewOAuthRedirectUri registers a new resource with the given unique name, arguments, and options.
func NewOAuthRedirectUri(ctx *pulumi.Context,
	name string, args *OAuthRedirectUriArgs, opts ...pulumi.ResourceOption) (*OAuthRedirectUri, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppId == nil {
		return nil, errors.New("invalid value for required argument 'AppId'")
	}
	if args.Uri == nil {
		return nil, errors.New("invalid value for required argument 'Uri'")
	}
	var resource OAuthRedirectUri
	err := ctx.RegisterResource("okta:app/oAuthRedirectUri:OAuthRedirectUri", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOAuthRedirectUri gets an existing OAuthRedirectUri resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOAuthRedirectUri(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OAuthRedirectUriState, opts ...pulumi.ResourceOption) (*OAuthRedirectUri, error) {
	var resource OAuthRedirectUri
	err := ctx.ReadResource("okta:app/oAuthRedirectUri:OAuthRedirectUri", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OAuthRedirectUri resources.
type oauthRedirectUriState struct {
	AppId *string `pulumi:"appId"`
	// Redirect URI to append to Okta OIDC application.
	Uri *string `pulumi:"uri"`
}

type OAuthRedirectUriState struct {
	AppId pulumi.StringPtrInput
	// Redirect URI to append to Okta OIDC application.
	Uri pulumi.StringPtrInput
}

func (OAuthRedirectUriState) ElementType() reflect.Type {
	return reflect.TypeOf((*oauthRedirectUriState)(nil)).Elem()
}

type oauthRedirectUriArgs struct {
	AppId string `pulumi:"appId"`
	// Redirect URI to append to Okta OIDC application.
	Uri string `pulumi:"uri"`
}

// The set of arguments for constructing a OAuthRedirectUri resource.
type OAuthRedirectUriArgs struct {
	AppId pulumi.StringInput
	// Redirect URI to append to Okta OIDC application.
	Uri pulumi.StringInput
}

func (OAuthRedirectUriArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*oauthRedirectUriArgs)(nil)).Elem()
}

type OAuthRedirectUriInput interface {
	pulumi.Input

	ToOAuthRedirectUriOutput() OAuthRedirectUriOutput
	ToOAuthRedirectUriOutputWithContext(ctx context.Context) OAuthRedirectUriOutput
}

func (*OAuthRedirectUri) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuthRedirectUri)(nil))
}

func (i *OAuthRedirectUri) ToOAuthRedirectUriOutput() OAuthRedirectUriOutput {
	return i.ToOAuthRedirectUriOutputWithContext(context.Background())
}

func (i *OAuthRedirectUri) ToOAuthRedirectUriOutputWithContext(ctx context.Context) OAuthRedirectUriOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuthRedirectUriOutput)
}

func (i *OAuthRedirectUri) ToOAuthRedirectUriPtrOutput() OAuthRedirectUriPtrOutput {
	return i.ToOAuthRedirectUriPtrOutputWithContext(context.Background())
}

func (i *OAuthRedirectUri) ToOAuthRedirectUriPtrOutputWithContext(ctx context.Context) OAuthRedirectUriPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuthRedirectUriPtrOutput)
}

type OAuthRedirectUriPtrInput interface {
	pulumi.Input

	ToOAuthRedirectUriPtrOutput() OAuthRedirectUriPtrOutput
	ToOAuthRedirectUriPtrOutputWithContext(ctx context.Context) OAuthRedirectUriPtrOutput
}

type oauthRedirectUriPtrType OAuthRedirectUriArgs

func (*oauthRedirectUriPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuthRedirectUri)(nil))
}

func (i *oauthRedirectUriPtrType) ToOAuthRedirectUriPtrOutput() OAuthRedirectUriPtrOutput {
	return i.ToOAuthRedirectUriPtrOutputWithContext(context.Background())
}

func (i *oauthRedirectUriPtrType) ToOAuthRedirectUriPtrOutputWithContext(ctx context.Context) OAuthRedirectUriPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuthRedirectUriPtrOutput)
}

// OAuthRedirectUriArrayInput is an input type that accepts OAuthRedirectUriArray and OAuthRedirectUriArrayOutput values.
// You can construct a concrete instance of `OAuthRedirectUriArrayInput` via:
//
//          OAuthRedirectUriArray{ OAuthRedirectUriArgs{...} }
type OAuthRedirectUriArrayInput interface {
	pulumi.Input

	ToOAuthRedirectUriArrayOutput() OAuthRedirectUriArrayOutput
	ToOAuthRedirectUriArrayOutputWithContext(context.Context) OAuthRedirectUriArrayOutput
}

type OAuthRedirectUriArray []OAuthRedirectUriInput

func (OAuthRedirectUriArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OAuthRedirectUri)(nil)).Elem()
}

func (i OAuthRedirectUriArray) ToOAuthRedirectUriArrayOutput() OAuthRedirectUriArrayOutput {
	return i.ToOAuthRedirectUriArrayOutputWithContext(context.Background())
}

func (i OAuthRedirectUriArray) ToOAuthRedirectUriArrayOutputWithContext(ctx context.Context) OAuthRedirectUriArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuthRedirectUriArrayOutput)
}

// OAuthRedirectUriMapInput is an input type that accepts OAuthRedirectUriMap and OAuthRedirectUriMapOutput values.
// You can construct a concrete instance of `OAuthRedirectUriMapInput` via:
//
//          OAuthRedirectUriMap{ "key": OAuthRedirectUriArgs{...} }
type OAuthRedirectUriMapInput interface {
	pulumi.Input

	ToOAuthRedirectUriMapOutput() OAuthRedirectUriMapOutput
	ToOAuthRedirectUriMapOutputWithContext(context.Context) OAuthRedirectUriMapOutput
}

type OAuthRedirectUriMap map[string]OAuthRedirectUriInput

func (OAuthRedirectUriMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OAuthRedirectUri)(nil)).Elem()
}

func (i OAuthRedirectUriMap) ToOAuthRedirectUriMapOutput() OAuthRedirectUriMapOutput {
	return i.ToOAuthRedirectUriMapOutputWithContext(context.Background())
}

func (i OAuthRedirectUriMap) ToOAuthRedirectUriMapOutputWithContext(ctx context.Context) OAuthRedirectUriMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuthRedirectUriMapOutput)
}

type OAuthRedirectUriOutput struct{ *pulumi.OutputState }

func (OAuthRedirectUriOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuthRedirectUri)(nil))
}

func (o OAuthRedirectUriOutput) ToOAuthRedirectUriOutput() OAuthRedirectUriOutput {
	return o
}

func (o OAuthRedirectUriOutput) ToOAuthRedirectUriOutputWithContext(ctx context.Context) OAuthRedirectUriOutput {
	return o
}

func (o OAuthRedirectUriOutput) ToOAuthRedirectUriPtrOutput() OAuthRedirectUriPtrOutput {
	return o.ToOAuthRedirectUriPtrOutputWithContext(context.Background())
}

func (o OAuthRedirectUriOutput) ToOAuthRedirectUriPtrOutputWithContext(ctx context.Context) OAuthRedirectUriPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OAuthRedirectUri) *OAuthRedirectUri {
		return &v
	}).(OAuthRedirectUriPtrOutput)
}

type OAuthRedirectUriPtrOutput struct{ *pulumi.OutputState }

func (OAuthRedirectUriPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuthRedirectUri)(nil))
}

func (o OAuthRedirectUriPtrOutput) ToOAuthRedirectUriPtrOutput() OAuthRedirectUriPtrOutput {
	return o
}

func (o OAuthRedirectUriPtrOutput) ToOAuthRedirectUriPtrOutputWithContext(ctx context.Context) OAuthRedirectUriPtrOutput {
	return o
}

func (o OAuthRedirectUriPtrOutput) Elem() OAuthRedirectUriOutput {
	return o.ApplyT(func(v *OAuthRedirectUri) OAuthRedirectUri {
		if v != nil {
			return *v
		}
		var ret OAuthRedirectUri
		return ret
	}).(OAuthRedirectUriOutput)
}

type OAuthRedirectUriArrayOutput struct{ *pulumi.OutputState }

func (OAuthRedirectUriArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OAuthRedirectUri)(nil))
}

func (o OAuthRedirectUriArrayOutput) ToOAuthRedirectUriArrayOutput() OAuthRedirectUriArrayOutput {
	return o
}

func (o OAuthRedirectUriArrayOutput) ToOAuthRedirectUriArrayOutputWithContext(ctx context.Context) OAuthRedirectUriArrayOutput {
	return o
}

func (o OAuthRedirectUriArrayOutput) Index(i pulumi.IntInput) OAuthRedirectUriOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OAuthRedirectUri {
		return vs[0].([]OAuthRedirectUri)[vs[1].(int)]
	}).(OAuthRedirectUriOutput)
}

type OAuthRedirectUriMapOutput struct{ *pulumi.OutputState }

func (OAuthRedirectUriMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OAuthRedirectUri)(nil))
}

func (o OAuthRedirectUriMapOutput) ToOAuthRedirectUriMapOutput() OAuthRedirectUriMapOutput {
	return o
}

func (o OAuthRedirectUriMapOutput) ToOAuthRedirectUriMapOutputWithContext(ctx context.Context) OAuthRedirectUriMapOutput {
	return o
}

func (o OAuthRedirectUriMapOutput) MapIndex(k pulumi.StringInput) OAuthRedirectUriOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OAuthRedirectUri {
		return vs[0].(map[string]OAuthRedirectUri)[vs[1].(string)]
	}).(OAuthRedirectUriOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OAuthRedirectUriInput)(nil)).Elem(), &OAuthRedirectUri{})
	pulumi.RegisterInputType(reflect.TypeOf((*OAuthRedirectUriPtrInput)(nil)).Elem(), &OAuthRedirectUri{})
	pulumi.RegisterInputType(reflect.TypeOf((*OAuthRedirectUriArrayInput)(nil)).Elem(), OAuthRedirectUriArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OAuthRedirectUriMapInput)(nil)).Elem(), OAuthRedirectUriMap{})
	pulumi.RegisterOutputType(OAuthRedirectUriOutput{})
	pulumi.RegisterOutputType(OAuthRedirectUriPtrOutput{})
	pulumi.RegisterOutputType(OAuthRedirectUriArrayOutput{})
	pulumi.RegisterOutputType(OAuthRedirectUriMapOutput{})
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve a list of user's security questions.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-okta/sdk/v3/go/okta"
// 	"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/user"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleUser, err := user.NewUser(ctx, "exampleUser", &user.UserArgs{
// 			FirstName: pulumi.String("John"),
// 			LastName:  pulumi.String("Smith"),
// 			Login:     pulumi.String("john.smith@example.com"),
// 			Email:     pulumi.String("john.smith@example.com"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetUserSecurityQuestions(ctx *pulumi.Context, args *GetUserSecurityQuestionsArgs, opts ...pulumi.InvokeOption) (*GetUserSecurityQuestionsResult, error) {
	var rv GetUserSecurityQuestionsResult
	err := ctx.Invoke("okta:index/getUserSecurityQuestions:getUserSecurityQuestions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserSecurityQuestions.
type GetUserSecurityQuestionsArgs struct {
	// User ID.
	UserId string `pulumi:"userId"`
}

// A collection of values returned by getUserSecurityQuestions.
type GetUserSecurityQuestionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// collection of user's security question retrieved from Okta with the following properties:
	Questions []GetUserSecurityQuestionsQuestion `pulumi:"questions"`
	UserId    string                             `pulumi:"userId"`
}

func GetUserSecurityQuestionsOutput(ctx *pulumi.Context, args GetUserSecurityQuestionsOutputArgs, opts ...pulumi.InvokeOption) GetUserSecurityQuestionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUserSecurityQuestionsResult, error) {
			args := v.(GetUserSecurityQuestionsArgs)
			r, err := GetUserSecurityQuestions(ctx, &args, opts...)
			return *r, err
		}).(GetUserSecurityQuestionsResultOutput)
}

// A collection of arguments for invoking getUserSecurityQuestions.
type GetUserSecurityQuestionsOutputArgs struct {
	// User ID.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetUserSecurityQuestionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserSecurityQuestionsArgs)(nil)).Elem()
}

// A collection of values returned by getUserSecurityQuestions.
type GetUserSecurityQuestionsResultOutput struct{ *pulumi.OutputState }

func (GetUserSecurityQuestionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserSecurityQuestionsResult)(nil)).Elem()
}

func (o GetUserSecurityQuestionsResultOutput) ToGetUserSecurityQuestionsResultOutput() GetUserSecurityQuestionsResultOutput {
	return o
}

func (o GetUserSecurityQuestionsResultOutput) ToGetUserSecurityQuestionsResultOutputWithContext(ctx context.Context) GetUserSecurityQuestionsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserSecurityQuestionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserSecurityQuestionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// collection of user's security question retrieved from Okta with the following properties:
func (o GetUserSecurityQuestionsResultOutput) Questions() GetUserSecurityQuestionsQuestionArrayOutput {
	return o.ApplyT(func(v GetUserSecurityQuestionsResult) []GetUserSecurityQuestionsQuestion { return v.Questions }).(GetUserSecurityQuestionsQuestionArrayOutput)
}

func (o GetUserSecurityQuestionsResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserSecurityQuestionsResult) string { return v.UserId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserSecurityQuestionsResultOutput{})
}

// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v5/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupRealm(ctx *pulumi.Context, args *LookupRealmArgs, opts ...pulumi.InvokeOption) (*LookupRealmResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRealmResult
	err := ctx.Invoke("okta:index/getRealm:getRealm", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRealm.
type LookupRealmArgs struct {
	Id        *string `pulumi:"id"`
	Name      *string `pulumi:"name"`
	RealmType *string `pulumi:"realmType"`
}

// A collection of values returned by getRealm.
type LookupRealmResult struct {
	Id        string  `pulumi:"id"`
	IsDefault bool    `pulumi:"isDefault"`
	Name      string  `pulumi:"name"`
	RealmType *string `pulumi:"realmType"`
}

func LookupRealmOutput(ctx *pulumi.Context, args LookupRealmOutputArgs, opts ...pulumi.InvokeOption) LookupRealmResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRealmResultOutput, error) {
			args := v.(LookupRealmArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("okta:index/getRealm:getRealm", args, LookupRealmResultOutput{}, options).(LookupRealmResultOutput), nil
		}).(LookupRealmResultOutput)
}

// A collection of arguments for invoking getRealm.
type LookupRealmOutputArgs struct {
	Id        pulumi.StringPtrInput `pulumi:"id"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
	RealmType pulumi.StringPtrInput `pulumi:"realmType"`
}

func (LookupRealmOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRealmArgs)(nil)).Elem()
}

// A collection of values returned by getRealm.
type LookupRealmResultOutput struct{ *pulumi.OutputState }

func (LookupRealmResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRealmResult)(nil)).Elem()
}

func (o LookupRealmResultOutput) ToLookupRealmResultOutput() LookupRealmResultOutput {
	return o
}

func (o LookupRealmResultOutput) ToLookupRealmResultOutputWithContext(ctx context.Context) LookupRealmResultOutput {
	return o
}

func (o LookupRealmResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRealmResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRealmResultOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRealmResult) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

func (o LookupRealmResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRealmResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupRealmResultOutput) RealmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRealmResult) *string { return v.RealmType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRealmResultOutput{})
}

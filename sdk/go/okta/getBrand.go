// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to retrieve a [Brand](https://developer.okta.com/docs/reference/api/brands/#brand-object) from Okta.
func LookupBrand(ctx *pulumi.Context, args *LookupBrandArgs, opts ...pulumi.InvokeOption) (*LookupBrandResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBrandResult
	err := ctx.Invoke("okta:index/getBrand:getBrand", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBrand.
type LookupBrandArgs struct {
	// Brand ID. Setting `brandId` to `default` is equivalent to importing the default brand by its ID.
	BrandId string `pulumi:"brandId"`
}

// A collection of values returned by getBrand.
type LookupBrandResult struct {
	BrandId string `pulumi:"brandId"`
	// Custom privacy policy URL
	CustomPrivacyPolicyUrl string `pulumi:"customPrivacyPolicyUrl"`
	// Brand ID
	Id string `pulumi:"id"`
	// Link relations for this object - JSON HAL - Discoverable resources related to the brand
	Links string `pulumi:"links"`
	Name  string `pulumi:"name"`
	// Removes "Powered by Okta" from the Okta-hosted sign-in page, and "© 2021 Okta, Inc." from the Okta End-User Dashboard
	RemovePoweredByOkta bool `pulumi:"removePoweredByOkta"`
}

func LookupBrandOutput(ctx *pulumi.Context, args LookupBrandOutputArgs, opts ...pulumi.InvokeOption) LookupBrandResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBrandResult, error) {
			args := v.(LookupBrandArgs)
			r, err := LookupBrand(ctx, &args, opts...)
			var s LookupBrandResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBrandResultOutput)
}

// A collection of arguments for invoking getBrand.
type LookupBrandOutputArgs struct {
	// Brand ID. Setting `brandId` to `default` is equivalent to importing the default brand by its ID.
	BrandId pulumi.StringInput `pulumi:"brandId"`
}

func (LookupBrandOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBrandArgs)(nil)).Elem()
}

// A collection of values returned by getBrand.
type LookupBrandResultOutput struct{ *pulumi.OutputState }

func (LookupBrandResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBrandResult)(nil)).Elem()
}

func (o LookupBrandResultOutput) ToLookupBrandResultOutput() LookupBrandResultOutput {
	return o
}

func (o LookupBrandResultOutput) ToLookupBrandResultOutputWithContext(ctx context.Context) LookupBrandResultOutput {
	return o
}

func (o LookupBrandResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupBrandResult] {
	return pulumix.Output[LookupBrandResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupBrandResultOutput) BrandId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrandResult) string { return v.BrandId }).(pulumi.StringOutput)
}

// Custom privacy policy URL
func (o LookupBrandResultOutput) CustomPrivacyPolicyUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrandResult) string { return v.CustomPrivacyPolicyUrl }).(pulumi.StringOutput)
}

// Brand ID
func (o LookupBrandResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrandResult) string { return v.Id }).(pulumi.StringOutput)
}

// Link relations for this object - JSON HAL - Discoverable resources related to the brand
func (o LookupBrandResultOutput) Links() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrandResult) string { return v.Links }).(pulumi.StringOutput)
}

func (o LookupBrandResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrandResult) string { return v.Name }).(pulumi.StringOutput)
}

// Removes "Powered by Okta" from the Okta-hosted sign-in page, and "© 2021 Okta, Inc." from the Okta End-User Dashboard
func (o LookupBrandResultOutput) RemovePoweredByOkta() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBrandResult) bool { return v.RemovePoweredByOkta }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBrandResultOutput{})
}

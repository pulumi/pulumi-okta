// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manage the access request process. This resource allows you to create and read an Okta [request](https://developer.okta.com/docs/api/iga/openapi/governance.requests.admin.v2/tag/Requests/#tag/Requests).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.NewRequestV2(ctx, "test", &okta.RequestV2Args{
//				Requested: &okta.RequestV2RequestedArgs{
//					Type:    pulumi.String("CATALOG_ENTRY"),
//					EntryId: pulumi.String("<entry_id>"),
//				},
//				RequestedFor: &okta.RequestV2RequestedForArgs{
//					Type:       pulumi.String("OKTA_USER"),
//					ExternalId: pulumi.String("<user_id>"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import okta:index/requestV2:RequestV2 example <request_id>
// ```
type RequestV2 struct {
	pulumi.CustomResourceState

	// How long the requester retains access after their request is approved and fulfilled.
	AccessDuration pulumi.StringOutput `pulumi:"accessDuration"`
	// The date and time when the request condition was created.
	Created pulumi.StringOutput `pulumi:"created"`
	// The id of the user who created the request condition.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// The status of the granted access request.
	GrantStatus pulumi.StringOutput `pulumi:"grantStatus"`
	// The date the approved access was granted. Only set if request . Status is APPROVED.
	Granted pulumi.StringOutput `pulumi:"granted"`
	// The date and time when the request condition was last updated.
	LastUpdated pulumi.StringOutput `pulumi:"lastUpdated"`
	// The id of the user who last updated the request condition.
	LastUpdatedBy pulumi.StringOutput `pulumi:"lastUpdatedBy"`
	// A representation of a resource that can be requested for access.
	Requested RequestV2RequestedPtrOutput `pulumi:"requested"`
	// A representation of a principal.
	RequestedFor RequestV2RequestedForPtrOutput `pulumi:"requestedFor"`
	// The requester input fields required by the approval system.
	RequesterFieldValues RequestV2RequesterFieldValueArrayOutput `pulumi:"requesterFieldValues"`
	// The date the request was resolved.
	Resolved pulumi.StringOutput `pulumi:"resolved"`
	// The date the request was scheduled for revocation.
	RevocationScheduled pulumi.StringOutput `pulumi:"revocationScheduled"`
	// The revocation status of the request.
	RevocationStatus pulumi.StringOutput `pulumi:"revocationStatus"`
	// The date the granted access was revoked.
	Revoked pulumi.StringOutput `pulumi:"revoked"`
	// The status of the request.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewRequestV2 registers a new resource with the given unique name, arguments, and options.
func NewRequestV2(ctx *pulumi.Context,
	name string, args *RequestV2Args, opts ...pulumi.ResourceOption) (*RequestV2, error) {
	if args == nil {
		args = &RequestV2Args{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RequestV2
	err := ctx.RegisterResource("okta:index/requestV2:RequestV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRequestV2 gets an existing RequestV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRequestV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RequestV2State, opts ...pulumi.ResourceOption) (*RequestV2, error) {
	var resource RequestV2
	err := ctx.ReadResource("okta:index/requestV2:RequestV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RequestV2 resources.
type requestV2State struct {
	// How long the requester retains access after their request is approved and fulfilled.
	AccessDuration *string `pulumi:"accessDuration"`
	// The date and time when the request condition was created.
	Created *string `pulumi:"created"`
	// The id of the user who created the request condition.
	CreatedBy *string `pulumi:"createdBy"`
	// The status of the granted access request.
	GrantStatus *string `pulumi:"grantStatus"`
	// The date the approved access was granted. Only set if request . Status is APPROVED.
	Granted *string `pulumi:"granted"`
	// The date and time when the request condition was last updated.
	LastUpdated *string `pulumi:"lastUpdated"`
	// The id of the user who last updated the request condition.
	LastUpdatedBy *string `pulumi:"lastUpdatedBy"`
	// A representation of a resource that can be requested for access.
	Requested *RequestV2Requested `pulumi:"requested"`
	// A representation of a principal.
	RequestedFor *RequestV2RequestedFor `pulumi:"requestedFor"`
	// The requester input fields required by the approval system.
	RequesterFieldValues []RequestV2RequesterFieldValue `pulumi:"requesterFieldValues"`
	// The date the request was resolved.
	Resolved *string `pulumi:"resolved"`
	// The date the request was scheduled for revocation.
	RevocationScheduled *string `pulumi:"revocationScheduled"`
	// The revocation status of the request.
	RevocationStatus *string `pulumi:"revocationStatus"`
	// The date the granted access was revoked.
	Revoked *string `pulumi:"revoked"`
	// The status of the request.
	Status *string `pulumi:"status"`
}

type RequestV2State struct {
	// How long the requester retains access after their request is approved and fulfilled.
	AccessDuration pulumi.StringPtrInput
	// The date and time when the request condition was created.
	Created pulumi.StringPtrInput
	// The id of the user who created the request condition.
	CreatedBy pulumi.StringPtrInput
	// The status of the granted access request.
	GrantStatus pulumi.StringPtrInput
	// The date the approved access was granted. Only set if request . Status is APPROVED.
	Granted pulumi.StringPtrInput
	// The date and time when the request condition was last updated.
	LastUpdated pulumi.StringPtrInput
	// The id of the user who last updated the request condition.
	LastUpdatedBy pulumi.StringPtrInput
	// A representation of a resource that can be requested for access.
	Requested RequestV2RequestedPtrInput
	// A representation of a principal.
	RequestedFor RequestV2RequestedForPtrInput
	// The requester input fields required by the approval system.
	RequesterFieldValues RequestV2RequesterFieldValueArrayInput
	// The date the request was resolved.
	Resolved pulumi.StringPtrInput
	// The date the request was scheduled for revocation.
	RevocationScheduled pulumi.StringPtrInput
	// The revocation status of the request.
	RevocationStatus pulumi.StringPtrInput
	// The date the granted access was revoked.
	Revoked pulumi.StringPtrInput
	// The status of the request.
	Status pulumi.StringPtrInput
}

func (RequestV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*requestV2State)(nil)).Elem()
}

type requestV2Args struct {
	// A representation of a resource that can be requested for access.
	Requested *RequestV2Requested `pulumi:"requested"`
	// A representation of a principal.
	RequestedFor *RequestV2RequestedFor `pulumi:"requestedFor"`
	// The requester input fields required by the approval system.
	RequesterFieldValues []RequestV2RequesterFieldValue `pulumi:"requesterFieldValues"`
}

// The set of arguments for constructing a RequestV2 resource.
type RequestV2Args struct {
	// A representation of a resource that can be requested for access.
	Requested RequestV2RequestedPtrInput
	// A representation of a principal.
	RequestedFor RequestV2RequestedForPtrInput
	// The requester input fields required by the approval system.
	RequesterFieldValues RequestV2RequesterFieldValueArrayInput
}

func (RequestV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*requestV2Args)(nil)).Elem()
}

type RequestV2Input interface {
	pulumi.Input

	ToRequestV2Output() RequestV2Output
	ToRequestV2OutputWithContext(ctx context.Context) RequestV2Output
}

func (*RequestV2) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestV2)(nil)).Elem()
}

func (i *RequestV2) ToRequestV2Output() RequestV2Output {
	return i.ToRequestV2OutputWithContext(context.Background())
}

func (i *RequestV2) ToRequestV2OutputWithContext(ctx context.Context) RequestV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(RequestV2Output)
}

// RequestV2ArrayInput is an input type that accepts RequestV2Array and RequestV2ArrayOutput values.
// You can construct a concrete instance of `RequestV2ArrayInput` via:
//
//	RequestV2Array{ RequestV2Args{...} }
type RequestV2ArrayInput interface {
	pulumi.Input

	ToRequestV2ArrayOutput() RequestV2ArrayOutput
	ToRequestV2ArrayOutputWithContext(context.Context) RequestV2ArrayOutput
}

type RequestV2Array []RequestV2Input

func (RequestV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RequestV2)(nil)).Elem()
}

func (i RequestV2Array) ToRequestV2ArrayOutput() RequestV2ArrayOutput {
	return i.ToRequestV2ArrayOutputWithContext(context.Background())
}

func (i RequestV2Array) ToRequestV2ArrayOutputWithContext(ctx context.Context) RequestV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestV2ArrayOutput)
}

// RequestV2MapInput is an input type that accepts RequestV2Map and RequestV2MapOutput values.
// You can construct a concrete instance of `RequestV2MapInput` via:
//
//	RequestV2Map{ "key": RequestV2Args{...} }
type RequestV2MapInput interface {
	pulumi.Input

	ToRequestV2MapOutput() RequestV2MapOutput
	ToRequestV2MapOutputWithContext(context.Context) RequestV2MapOutput
}

type RequestV2Map map[string]RequestV2Input

func (RequestV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RequestV2)(nil)).Elem()
}

func (i RequestV2Map) ToRequestV2MapOutput() RequestV2MapOutput {
	return i.ToRequestV2MapOutputWithContext(context.Background())
}

func (i RequestV2Map) ToRequestV2MapOutputWithContext(ctx context.Context) RequestV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestV2MapOutput)
}

type RequestV2Output struct{ *pulumi.OutputState }

func (RequestV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestV2)(nil)).Elem()
}

func (o RequestV2Output) ToRequestV2Output() RequestV2Output {
	return o
}

func (o RequestV2Output) ToRequestV2OutputWithContext(ctx context.Context) RequestV2Output {
	return o
}

// How long the requester retains access after their request is approved and fulfilled.
func (o RequestV2Output) AccessDuration() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestV2) pulumi.StringOutput { return v.AccessDuration }).(pulumi.StringOutput)
}

// The date and time when the request condition was created.
func (o RequestV2Output) Created() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestV2) pulumi.StringOutput { return v.Created }).(pulumi.StringOutput)
}

// The id of the user who created the request condition.
func (o RequestV2Output) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestV2) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// The status of the granted access request.
func (o RequestV2Output) GrantStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestV2) pulumi.StringOutput { return v.GrantStatus }).(pulumi.StringOutput)
}

// The date the approved access was granted. Only set if request . Status is APPROVED.
func (o RequestV2Output) Granted() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestV2) pulumi.StringOutput { return v.Granted }).(pulumi.StringOutput)
}

// The date and time when the request condition was last updated.
func (o RequestV2Output) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestV2) pulumi.StringOutput { return v.LastUpdated }).(pulumi.StringOutput)
}

// The id of the user who last updated the request condition.
func (o RequestV2Output) LastUpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestV2) pulumi.StringOutput { return v.LastUpdatedBy }).(pulumi.StringOutput)
}

// A representation of a resource that can be requested for access.
func (o RequestV2Output) Requested() RequestV2RequestedPtrOutput {
	return o.ApplyT(func(v *RequestV2) RequestV2RequestedPtrOutput { return v.Requested }).(RequestV2RequestedPtrOutput)
}

// A representation of a principal.
func (o RequestV2Output) RequestedFor() RequestV2RequestedForPtrOutput {
	return o.ApplyT(func(v *RequestV2) RequestV2RequestedForPtrOutput { return v.RequestedFor }).(RequestV2RequestedForPtrOutput)
}

// The requester input fields required by the approval system.
func (o RequestV2Output) RequesterFieldValues() RequestV2RequesterFieldValueArrayOutput {
	return o.ApplyT(func(v *RequestV2) RequestV2RequesterFieldValueArrayOutput { return v.RequesterFieldValues }).(RequestV2RequesterFieldValueArrayOutput)
}

// The date the request was resolved.
func (o RequestV2Output) Resolved() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestV2) pulumi.StringOutput { return v.Resolved }).(pulumi.StringOutput)
}

// The date the request was scheduled for revocation.
func (o RequestV2Output) RevocationScheduled() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestV2) pulumi.StringOutput { return v.RevocationScheduled }).(pulumi.StringOutput)
}

// The revocation status of the request.
func (o RequestV2Output) RevocationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestV2) pulumi.StringOutput { return v.RevocationStatus }).(pulumi.StringOutput)
}

// The date the granted access was revoked.
func (o RequestV2Output) Revoked() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestV2) pulumi.StringOutput { return v.Revoked }).(pulumi.StringOutput)
}

// The status of the request.
func (o RequestV2Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestV2) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type RequestV2ArrayOutput struct{ *pulumi.OutputState }

func (RequestV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RequestV2)(nil)).Elem()
}

func (o RequestV2ArrayOutput) ToRequestV2ArrayOutput() RequestV2ArrayOutput {
	return o
}

func (o RequestV2ArrayOutput) ToRequestV2ArrayOutputWithContext(ctx context.Context) RequestV2ArrayOutput {
	return o
}

func (o RequestV2ArrayOutput) Index(i pulumi.IntInput) RequestV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RequestV2 {
		return vs[0].([]*RequestV2)[vs[1].(int)]
	}).(RequestV2Output)
}

type RequestV2MapOutput struct{ *pulumi.OutputState }

func (RequestV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RequestV2)(nil)).Elem()
}

func (o RequestV2MapOutput) ToRequestV2MapOutput() RequestV2MapOutput {
	return o
}

func (o RequestV2MapOutput) ToRequestV2MapOutputWithContext(ctx context.Context) RequestV2MapOutput {
	return o
}

func (o RequestV2MapOutput) MapIndex(k pulumi.StringInput) RequestV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RequestV2 {
		return vs[0].(map[string]*RequestV2)[vs[1].(string)]
	}).(RequestV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RequestV2Input)(nil)).Elem(), &RequestV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestV2ArrayInput)(nil)).Elem(), RequestV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestV2MapInput)(nil)).Elem(), RequestV2Map{})
	pulumi.RegisterOutputType(RequestV2Output{})
	pulumi.RegisterOutputType(RequestV2ArrayOutput{})
	pulumi.RegisterOutputType(RequestV2MapOutput{})
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "okta:index/adminRoleCustom:AdminRoleCustom":
		r = &AdminRoleCustom{}
	case "okta:index/adminRoleCustomAssignments:AdminRoleCustomAssignments":
		r = &AdminRoleCustomAssignments{}
	case "okta:index/adminRoleTargets:AdminRoleTargets":
		r = &AdminRoleTargets{}
	case "okta:index/appGroupAssignments:AppGroupAssignments":
		r = &AppGroupAssignments{}
	case "okta:index/appOauthApiScope:AppOauthApiScope":
		r = &AppOauthApiScope{}
	case "okta:index/appSamlAppSettings:AppSamlAppSettings":
		r = &AppSamlAppSettings{}
	case "okta:index/appSharedCredentials:AppSharedCredentials":
		r = &AppSharedCredentials{}
	case "okta:index/appSignonPolicy:AppSignonPolicy":
		r = &AppSignonPolicy{}
	case "okta:index/appSignonPolicyRule:AppSignonPolicyRule":
		r = &AppSignonPolicyRule{}
	case "okta:index/appUserBaseSchemaProperty:AppUserBaseSchemaProperty":
		r = &AppUserBaseSchemaProperty{}
	case "okta:index/appUserSchemaProperty:AppUserSchemaProperty":
		r = &AppUserSchemaProperty{}
	case "okta:index/authServerClaimDefault:AuthServerClaimDefault":
		r = &AuthServerClaimDefault{}
	case "okta:index/authServerDefault:AuthServerDefault":
		r = &AuthServerDefault{}
	case "okta:index/authenticator:Authenticator":
		r = &Authenticator{}
	case "okta:index/behaviour:Behaviour":
		r = &Behaviour{}
	case "okta:index/brand:Brand":
		r = &Brand{}
	case "okta:index/captcha:Captcha":
		r = &Captcha{}
	case "okta:index/captchaOrgWideSettings:CaptchaOrgWideSettings":
		r = &CaptchaOrgWideSettings{}
	case "okta:index/domain:Domain":
		r = &Domain{}
	case "okta:index/domainCertificate:DomainCertificate":
		r = &DomainCertificate{}
	case "okta:index/domainVerification:DomainVerification":
		r = &DomainVerification{}
	case "okta:index/emailCustomization:EmailCustomization":
		r = &EmailCustomization{}
	case "okta:index/emailSender:EmailSender":
		r = &EmailSender{}
	case "okta:index/emailSenderVerification:EmailSenderVerification":
		r = &EmailSenderVerification{}
	case "okta:index/eventHook:EventHook":
		r = &EventHook{}
	case "okta:index/eventHookVerification:EventHookVerification":
		r = &EventHookVerification{}
	case "okta:index/factorTotp:FactorTotp":
		r = &FactorTotp{}
	case "okta:index/groupMemberships:GroupMemberships":
		r = &GroupMemberships{}
	case "okta:index/groupSchemaProperty:GroupSchemaProperty":
		r = &GroupSchemaProperty{}
	case "okta:index/linkDefinition:LinkDefinition":
		r = &LinkDefinition{}
	case "okta:index/linkValue:LinkValue":
		r = &LinkValue{}
	case "okta:index/orgConfiguration:OrgConfiguration":
		r = &OrgConfiguration{}
	case "okta:index/orgSupport:OrgSupport":
		r = &OrgSupport{}
	case "okta:index/policyMfaDefault:PolicyMfaDefault":
		r = &PolicyMfaDefault{}
	case "okta:index/policyPasswordDefault:PolicyPasswordDefault":
		r = &PolicyPasswordDefault{}
	case "okta:index/policyProfileEnrollment:PolicyProfileEnrollment":
		r = &PolicyProfileEnrollment{}
	case "okta:index/policyProfileEnrollmentApps:PolicyProfileEnrollmentApps":
		r = &PolicyProfileEnrollmentApps{}
	case "okta:index/policyRuleProfileEnrollment:PolicyRuleProfileEnrollment":
		r = &PolicyRuleProfileEnrollment{}
	case "okta:index/rateLimiting:RateLimiting":
		r = &RateLimiting{}
	case "okta:index/resourceSet:ResourceSet":
		r = &ResourceSet{}
	case "okta:index/roleSubscription:RoleSubscription":
		r = &RoleSubscription{}
	case "okta:index/securityNotificationEmails:SecurityNotificationEmails":
		r = &SecurityNotificationEmails{}
	case "okta:index/templateSms:TemplateSms":
		r = &TemplateSms{}
	case "okta:index/theme:Theme":
		r = &Theme{}
	case "okta:index/threatInsightSettings:ThreatInsightSettings":
		r = &ThreatInsightSettings{}
	case "okta:index/userAdminRoles:UserAdminRoles":
		r = &UserAdminRoles{}
	case "okta:index/userBaseSchemaProperty:UserBaseSchemaProperty":
		r = &UserBaseSchemaProperty{}
	case "okta:index/userFactorQuestion:UserFactorQuestion":
		r = &UserFactorQuestion{}
	case "okta:index/userGroupMemberships:UserGroupMemberships":
		r = &UserGroupMemberships{}
	case "okta:index/userSchemaProperty:UserSchemaProperty":
		r = &UserSchemaProperty{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:okta" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, _ := PkgVersion()
	pulumi.RegisterResourceModule(
		"okta",
		"index/adminRoleCustom",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/adminRoleCustomAssignments",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/adminRoleTargets",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/appGroupAssignments",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/appOauthApiScope",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/appSamlAppSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/appSharedCredentials",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/appSignonPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/appSignonPolicyRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/appUserBaseSchemaProperty",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/appUserSchemaProperty",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/authServerClaimDefault",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/authServerDefault",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/authenticator",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/behaviour",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/brand",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/captcha",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/captchaOrgWideSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/domain",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/domainCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/domainVerification",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/emailCustomization",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/emailSender",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/emailSenderVerification",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/eventHook",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/eventHookVerification",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/factorTotp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/groupMemberships",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/groupSchemaProperty",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/linkDefinition",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/linkValue",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/orgConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/orgSupport",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/policyMfaDefault",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/policyPasswordDefault",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/policyProfileEnrollment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/policyProfileEnrollmentApps",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/policyRuleProfileEnrollment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/rateLimiting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/resourceSet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/roleSubscription",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/securityNotificationEmails",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/templateSms",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/theme",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/threatInsightSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/userAdminRoles",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/userBaseSchemaProperty",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/userFactorQuestion",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/userGroupMemberships",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"okta",
		"index/userSchemaProperty",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"okta",
		&pkg{version},
	)
}

// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a access request sequence referenced by the specified resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.LookupRequestSequence(ctx, &okta.LookupRequestSequenceArgs{
//				Id:         "<sequence_id>",
//				ResourceId: "<resource_id>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRequestSequence(ctx *pulumi.Context, args *LookupRequestSequenceArgs, opts ...pulumi.InvokeOption) (*LookupRequestSequenceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRequestSequenceResult
	err := ctx.Invoke("okta:index/getRequestSequence:getRequestSequence", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRequestSequence.
type LookupRequestSequenceArgs struct {
	// The id of the sequence.Must be of 24 characters length.
	Id string `pulumi:"id"`
	// The id of the resource in Okta ID format.
	ResourceId string `pulumi:"resourceId"`
}

// A collection of values returned by getRequestSequence.
type LookupRequestSequenceResult struct {
	// Enum: `APP`, `GROUP`.
	CompatibleResourceTypes []string `pulumi:"compatibleResourceTypes"`
	// The description of the request condition.
	Description string `pulumi:"description"`
	// The id of the sequence.Must be of 24 characters length.
	Id string `pulumi:"id"`
	// Link to edit the request sequence.
	Link string `pulumi:"link"`
	// The access duration settings for the request condition
	Name string `pulumi:"name"`
	// The id of the resource in Okta ID format.
	ResourceId string `pulumi:"resourceId"`
}

func LookupRequestSequenceOutput(ctx *pulumi.Context, args LookupRequestSequenceOutputArgs, opts ...pulumi.InvokeOption) LookupRequestSequenceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRequestSequenceResultOutput, error) {
			args := v.(LookupRequestSequenceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("okta:index/getRequestSequence:getRequestSequence", args, LookupRequestSequenceResultOutput{}, options).(LookupRequestSequenceResultOutput), nil
		}).(LookupRequestSequenceResultOutput)
}

// A collection of arguments for invoking getRequestSequence.
type LookupRequestSequenceOutputArgs struct {
	// The id of the sequence.Must be of 24 characters length.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of the resource in Okta ID format.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (LookupRequestSequenceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRequestSequenceArgs)(nil)).Elem()
}

// A collection of values returned by getRequestSequence.
type LookupRequestSequenceResultOutput struct{ *pulumi.OutputState }

func (LookupRequestSequenceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRequestSequenceResult)(nil)).Elem()
}

func (o LookupRequestSequenceResultOutput) ToLookupRequestSequenceResultOutput() LookupRequestSequenceResultOutput {
	return o
}

func (o LookupRequestSequenceResultOutput) ToLookupRequestSequenceResultOutputWithContext(ctx context.Context) LookupRequestSequenceResultOutput {
	return o
}

// Enum: `APP`, `GROUP`.
func (o LookupRequestSequenceResultOutput) CompatibleResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRequestSequenceResult) []string { return v.CompatibleResourceTypes }).(pulumi.StringArrayOutput)
}

// The description of the request condition.
func (o LookupRequestSequenceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRequestSequenceResult) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the sequence.Must be of 24 characters length.
func (o LookupRequestSequenceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRequestSequenceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Link to edit the request sequence.
func (o LookupRequestSequenceResultOutput) Link() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRequestSequenceResult) string { return v.Link }).(pulumi.StringOutput)
}

// The access duration settings for the request condition
func (o LookupRequestSequenceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRequestSequenceResult) string { return v.Name }).(pulumi.StringOutput)
}

// The id of the resource in Okta ID format.
func (o LookupRequestSequenceResultOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRequestSequenceResult) string { return v.ResourceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRequestSequenceResultOutput{})
}

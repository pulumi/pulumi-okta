// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a list of groups from Okta.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.GetGroups(ctx, &okta.GetGroupsArgs{
//				Q: pulumi.StringRef("Engineering - "),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGroups(ctx *pulumi.Context, args *GetGroupsArgs, opts ...pulumi.InvokeOption) (*GetGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGroupsResult
	err := ctx.Invoke("okta:index/getGroups:getGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroups.
type GetGroupsArgs struct {
	// The maximum number of groups returned by the Okta API, between 1 and 10000.
	Limit *int `pulumi:"limit"`
	// Searches the name property of groups for matching value
	Q *string `pulumi:"q"`
	// Searches for groups with a supported filtering expression for all attributes except for '*embedded', '*links', and 'objectClass'
	Search *string `pulumi:"search"`
	Type   *string `pulumi:"type"`
}

// A collection of values returned by getGroups.
type GetGroupsResult struct {
	Groups []GetGroupsGroup `pulumi:"groups"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The maximum number of groups returned by the Okta API, between 1 and 10000.
	Limit *int `pulumi:"limit"`
	// Searches the name property of groups for matching value
	Q *string `pulumi:"q"`
	// Searches for groups with a supported filtering expression for all attributes except for '*embedded', '*links', and 'objectClass'
	Search *string `pulumi:"search"`
	Type   *string `pulumi:"type"`
}

func GetGroupsOutput(ctx *pulumi.Context, args GetGroupsOutputArgs, opts ...pulumi.InvokeOption) GetGroupsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetGroupsResultOutput, error) {
			args := v.(GetGroupsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("okta:index/getGroups:getGroups", args, GetGroupsResultOutput{}, options).(GetGroupsResultOutput), nil
		}).(GetGroupsResultOutput)
}

// A collection of arguments for invoking getGroups.
type GetGroupsOutputArgs struct {
	// The maximum number of groups returned by the Okta API, between 1 and 10000.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// Searches the name property of groups for matching value
	Q pulumi.StringPtrInput `pulumi:"q"`
	// Searches for groups with a supported filtering expression for all attributes except for '*embedded', '*links', and 'objectClass'
	Search pulumi.StringPtrInput `pulumi:"search"`
	Type   pulumi.StringPtrInput `pulumi:"type"`
}

func (GetGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getGroups.
type GetGroupsResultOutput struct{ *pulumi.OutputState }

func (GetGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsResult)(nil)).Elem()
}

func (o GetGroupsResultOutput) ToGetGroupsResultOutput() GetGroupsResultOutput {
	return o
}

func (o GetGroupsResultOutput) ToGetGroupsResultOutputWithContext(ctx context.Context) GetGroupsResultOutput {
	return o
}

func (o GetGroupsResultOutput) Groups() GetGroupsGroupArrayOutput {
	return o.ApplyT(func(v GetGroupsResult) []GetGroupsGroup { return v.Groups }).(GetGroupsGroupArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The maximum number of groups returned by the Okta API, between 1 and 10000.
func (o GetGroupsResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetGroupsResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// Searches the name property of groups for matching value
func (o GetGroupsResultOutput) Q() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGroupsResult) *string { return v.Q }).(pulumi.StringPtrOutput)
}

// Searches for groups with a supported filtering expression for all attributes except for '*embedded', '*links', and 'objectClass'
func (o GetGroupsResultOutput) Search() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGroupsResult) *string { return v.Search }).(pulumi.StringPtrOutput)
}

func (o GetGroupsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGroupsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGroupsResultOutput{})
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package user

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type SchemaArrayOneOf struct {
	// value mapping to member of `enum`.
	Const string `pulumi:"const"`
	// display name for the enum value.
	Title string `pulumi:"title"`
}

type SchemaArrayOneOfInput interface {
	pulumi.Input

	ToSchemaArrayOneOfOutput() SchemaArrayOneOfOutput
	ToSchemaArrayOneOfOutputWithContext(context.Context) SchemaArrayOneOfOutput
}

type SchemaArrayOneOfArgs struct {
	// value mapping to member of `enum`.
	Const pulumi.StringInput `pulumi:"const"`
	// display name for the enum value.
	Title pulumi.StringInput `pulumi:"title"`
}

func (SchemaArrayOneOfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaArrayOneOf)(nil)).Elem()
}

func (i SchemaArrayOneOfArgs) ToSchemaArrayOneOfOutput() SchemaArrayOneOfOutput {
	return i.ToSchemaArrayOneOfOutputWithContext(context.Background())
}

func (i SchemaArrayOneOfArgs) ToSchemaArrayOneOfOutputWithContext(ctx context.Context) SchemaArrayOneOfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaArrayOneOfOutput)
}

type SchemaArrayOneOfArrayInput interface {
	pulumi.Input

	ToSchemaArrayOneOfArrayOutput() SchemaArrayOneOfArrayOutput
	ToSchemaArrayOneOfArrayOutputWithContext(context.Context) SchemaArrayOneOfArrayOutput
}

type SchemaArrayOneOfArray []SchemaArrayOneOfInput

func (SchemaArrayOneOfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchemaArrayOneOf)(nil)).Elem()
}

func (i SchemaArrayOneOfArray) ToSchemaArrayOneOfArrayOutput() SchemaArrayOneOfArrayOutput {
	return i.ToSchemaArrayOneOfArrayOutputWithContext(context.Background())
}

func (i SchemaArrayOneOfArray) ToSchemaArrayOneOfArrayOutputWithContext(ctx context.Context) SchemaArrayOneOfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaArrayOneOfArrayOutput)
}

type SchemaArrayOneOfOutput struct{ *pulumi.OutputState }

func (SchemaArrayOneOfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaArrayOneOf)(nil)).Elem()
}

func (o SchemaArrayOneOfOutput) ToSchemaArrayOneOfOutput() SchemaArrayOneOfOutput {
	return o
}

func (o SchemaArrayOneOfOutput) ToSchemaArrayOneOfOutputWithContext(ctx context.Context) SchemaArrayOneOfOutput {
	return o
}

// value mapping to member of `enum`.
func (o SchemaArrayOneOfOutput) Const() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaArrayOneOf) string { return v.Const }).(pulumi.StringOutput)
}

// display name for the enum value.
func (o SchemaArrayOneOfOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaArrayOneOf) string { return v.Title }).(pulumi.StringOutput)
}

type SchemaArrayOneOfArrayOutput struct{ *pulumi.OutputState }

func (SchemaArrayOneOfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchemaArrayOneOf)(nil)).Elem()
}

func (o SchemaArrayOneOfArrayOutput) ToSchemaArrayOneOfArrayOutput() SchemaArrayOneOfArrayOutput {
	return o
}

func (o SchemaArrayOneOfArrayOutput) ToSchemaArrayOneOfArrayOutputWithContext(ctx context.Context) SchemaArrayOneOfArrayOutput {
	return o
}

func (o SchemaArrayOneOfArrayOutput) Index(i pulumi.IntInput) SchemaArrayOneOfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SchemaArrayOneOf {
		return vs[0].([]SchemaArrayOneOf)[vs[1].(int)]
	}).(SchemaArrayOneOfOutput)
}

type SchemaOneOf struct {
	// value mapping to member of `enum`.
	Const string `pulumi:"const"`
	// display name for the enum value.
	Title string `pulumi:"title"`
}

type SchemaOneOfInput interface {
	pulumi.Input

	ToSchemaOneOfOutput() SchemaOneOfOutput
	ToSchemaOneOfOutputWithContext(context.Context) SchemaOneOfOutput
}

type SchemaOneOfArgs struct {
	// value mapping to member of `enum`.
	Const pulumi.StringInput `pulumi:"const"`
	// display name for the enum value.
	Title pulumi.StringInput `pulumi:"title"`
}

func (SchemaOneOfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaOneOf)(nil)).Elem()
}

func (i SchemaOneOfArgs) ToSchemaOneOfOutput() SchemaOneOfOutput {
	return i.ToSchemaOneOfOutputWithContext(context.Background())
}

func (i SchemaOneOfArgs) ToSchemaOneOfOutputWithContext(ctx context.Context) SchemaOneOfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaOneOfOutput)
}

type SchemaOneOfArrayInput interface {
	pulumi.Input

	ToSchemaOneOfArrayOutput() SchemaOneOfArrayOutput
	ToSchemaOneOfArrayOutputWithContext(context.Context) SchemaOneOfArrayOutput
}

type SchemaOneOfArray []SchemaOneOfInput

func (SchemaOneOfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchemaOneOf)(nil)).Elem()
}

func (i SchemaOneOfArray) ToSchemaOneOfArrayOutput() SchemaOneOfArrayOutput {
	return i.ToSchemaOneOfArrayOutputWithContext(context.Background())
}

func (i SchemaOneOfArray) ToSchemaOneOfArrayOutputWithContext(ctx context.Context) SchemaOneOfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaOneOfArrayOutput)
}

type SchemaOneOfOutput struct{ *pulumi.OutputState }

func (SchemaOneOfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaOneOf)(nil)).Elem()
}

func (o SchemaOneOfOutput) ToSchemaOneOfOutput() SchemaOneOfOutput {
	return o
}

func (o SchemaOneOfOutput) ToSchemaOneOfOutputWithContext(ctx context.Context) SchemaOneOfOutput {
	return o
}

// value mapping to member of `enum`.
func (o SchemaOneOfOutput) Const() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaOneOf) string { return v.Const }).(pulumi.StringOutput)
}

// display name for the enum value.
func (o SchemaOneOfOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaOneOf) string { return v.Title }).(pulumi.StringOutput)
}

type SchemaOneOfArrayOutput struct{ *pulumi.OutputState }

func (SchemaOneOfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchemaOneOf)(nil)).Elem()
}

func (o SchemaOneOfArrayOutput) ToSchemaOneOfArrayOutput() SchemaOneOfArrayOutput {
	return o
}

func (o SchemaOneOfArrayOutput) ToSchemaOneOfArrayOutputWithContext(ctx context.Context) SchemaOneOfArrayOutput {
	return o
}

func (o SchemaOneOfArrayOutput) Index(i pulumi.IntInput) SchemaOneOfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SchemaOneOf {
		return vs[0].([]SchemaOneOf)[vs[1].(int)]
	}).(SchemaOneOfOutput)
}

type GetUserSearch struct {
	// Comparison to use.
	Comparison *string `pulumi:"comparison"`
	// Name of property to search against.
	Name string `pulumi:"name"`
	// Value to compare with.
	Value string `pulumi:"value"`
}

type GetUserSearchInput interface {
	pulumi.Input

	ToGetUserSearchOutput() GetUserSearchOutput
	ToGetUserSearchOutputWithContext(context.Context) GetUserSearchOutput
}

type GetUserSearchArgs struct {
	// Comparison to use.
	Comparison pulumi.StringPtrInput `pulumi:"comparison"`
	// Name of property to search against.
	Name pulumi.StringInput `pulumi:"name"`
	// Value to compare with.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetUserSearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserSearch)(nil)).Elem()
}

func (i GetUserSearchArgs) ToGetUserSearchOutput() GetUserSearchOutput {
	return i.ToGetUserSearchOutputWithContext(context.Background())
}

func (i GetUserSearchArgs) ToGetUserSearchOutputWithContext(ctx context.Context) GetUserSearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserSearchOutput)
}

type GetUserSearchArrayInput interface {
	pulumi.Input

	ToGetUserSearchArrayOutput() GetUserSearchArrayOutput
	ToGetUserSearchArrayOutputWithContext(context.Context) GetUserSearchArrayOutput
}

type GetUserSearchArray []GetUserSearchInput

func (GetUserSearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserSearch)(nil)).Elem()
}

func (i GetUserSearchArray) ToGetUserSearchArrayOutput() GetUserSearchArrayOutput {
	return i.ToGetUserSearchArrayOutputWithContext(context.Background())
}

func (i GetUserSearchArray) ToGetUserSearchArrayOutputWithContext(ctx context.Context) GetUserSearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserSearchArrayOutput)
}

type GetUserSearchOutput struct{ *pulumi.OutputState }

func (GetUserSearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserSearch)(nil)).Elem()
}

func (o GetUserSearchOutput) ToGetUserSearchOutput() GetUserSearchOutput {
	return o
}

func (o GetUserSearchOutput) ToGetUserSearchOutputWithContext(ctx context.Context) GetUserSearchOutput {
	return o
}

// Comparison to use.
func (o GetUserSearchOutput) Comparison() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserSearch) *string { return v.Comparison }).(pulumi.StringPtrOutput)
}

// Name of property to search against.
func (o GetUserSearchOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserSearch) string { return v.Name }).(pulumi.StringOutput)
}

// Value to compare with.
func (o GetUserSearchOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserSearch) string { return v.Value }).(pulumi.StringOutput)
}

type GetUserSearchArrayOutput struct{ *pulumi.OutputState }

func (GetUserSearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserSearch)(nil)).Elem()
}

func (o GetUserSearchArrayOutput) ToGetUserSearchArrayOutput() GetUserSearchArrayOutput {
	return o
}

func (o GetUserSearchArrayOutput) ToGetUserSearchArrayOutputWithContext(ctx context.Context) GetUserSearchArrayOutput {
	return o
}

func (o GetUserSearchArrayOutput) Index(i pulumi.IntInput) GetUserSearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserSearch {
		return vs[0].([]GetUserSearch)[vs[1].(int)]
	}).(GetUserSearchOutput)
}

type GetUsersSearch struct {
	// Comparison to use.
	Comparison *string `pulumi:"comparison"`
	// Name of property to search against.
	Name string `pulumi:"name"`
	// Value to compare with.
	Value string `pulumi:"value"`
}

type GetUsersSearchInput interface {
	pulumi.Input

	ToGetUsersSearchOutput() GetUsersSearchOutput
	ToGetUsersSearchOutputWithContext(context.Context) GetUsersSearchOutput
}

type GetUsersSearchArgs struct {
	// Comparison to use.
	Comparison pulumi.StringPtrInput `pulumi:"comparison"`
	// Name of property to search against.
	Name pulumi.StringInput `pulumi:"name"`
	// Value to compare with.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetUsersSearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersSearch)(nil)).Elem()
}

func (i GetUsersSearchArgs) ToGetUsersSearchOutput() GetUsersSearchOutput {
	return i.ToGetUsersSearchOutputWithContext(context.Background())
}

func (i GetUsersSearchArgs) ToGetUsersSearchOutputWithContext(ctx context.Context) GetUsersSearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersSearchOutput)
}

type GetUsersSearchArrayInput interface {
	pulumi.Input

	ToGetUsersSearchArrayOutput() GetUsersSearchArrayOutput
	ToGetUsersSearchArrayOutputWithContext(context.Context) GetUsersSearchArrayOutput
}

type GetUsersSearchArray []GetUsersSearchInput

func (GetUsersSearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersSearch)(nil)).Elem()
}

func (i GetUsersSearchArray) ToGetUsersSearchArrayOutput() GetUsersSearchArrayOutput {
	return i.ToGetUsersSearchArrayOutputWithContext(context.Background())
}

func (i GetUsersSearchArray) ToGetUsersSearchArrayOutputWithContext(ctx context.Context) GetUsersSearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersSearchArrayOutput)
}

type GetUsersSearchOutput struct{ *pulumi.OutputState }

func (GetUsersSearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersSearch)(nil)).Elem()
}

func (o GetUsersSearchOutput) ToGetUsersSearchOutput() GetUsersSearchOutput {
	return o
}

func (o GetUsersSearchOutput) ToGetUsersSearchOutputWithContext(ctx context.Context) GetUsersSearchOutput {
	return o
}

// Comparison to use.
func (o GetUsersSearchOutput) Comparison() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersSearch) *string { return v.Comparison }).(pulumi.StringPtrOutput)
}

// Name of property to search against.
func (o GetUsersSearchOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersSearch) string { return v.Name }).(pulumi.StringOutput)
}

// Value to compare with.
func (o GetUsersSearchOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersSearch) string { return v.Value }).(pulumi.StringOutput)
}

type GetUsersSearchArrayOutput struct{ *pulumi.OutputState }

func (GetUsersSearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersSearch)(nil)).Elem()
}

func (o GetUsersSearchArrayOutput) ToGetUsersSearchArrayOutput() GetUsersSearchArrayOutput {
	return o
}

func (o GetUsersSearchArrayOutput) ToGetUsersSearchArrayOutputWithContext(ctx context.Context) GetUsersSearchArrayOutput {
	return o
}

func (o GetUsersSearchArrayOutput) Index(i pulumi.IntInput) GetUsersSearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersSearch {
		return vs[0].([]GetUsersSearch)[vs[1].(int)]
	}).(GetUsersSearchOutput)
}

type GetUsersUser struct {
	// Administrator roles assigned to user.
	AdminRoles []string `pulumi:"adminRoles"`
	// user profile property.
	City string `pulumi:"city"`
	// user profile property.
	CostCenter string `pulumi:"costCenter"`
	// user profile property.
	CountryCode string `pulumi:"countryCode"`
	// raw JSON containing all custom profile attributes.
	CustomProfileAttributes string `pulumi:"customProfileAttributes"`
	// user profile property.
	Department string `pulumi:"department"`
	// user profile property.
	DisplayName string `pulumi:"displayName"`
	// user profile property.
	Division string `pulumi:"division"`
	// user profile property.
	Email string `pulumi:"email"`
	// user profile property.
	EmployeeNumber string `pulumi:"employeeNumber"`
	// user profile property.
	FirstName string `pulumi:"firstName"`
	// user profile property.
	GroupMemberships []string `pulumi:"groupMemberships"`
	// user profile property.
	HonorificPrefix string `pulumi:"honorificPrefix"`
	// user profile property.
	HonorificSuffix string `pulumi:"honorificSuffix"`
	// user profile property.
	LastName string `pulumi:"lastName"`
	// user profile property.
	Locale string `pulumi:"locale"`
	// user profile property.
	Login string `pulumi:"login"`
	// user profile property.
	Manager string `pulumi:"manager"`
	// user profile property.
	ManagerId string `pulumi:"managerId"`
	// user profile property.
	MiddleName string `pulumi:"middleName"`
	// user profile property.
	MobilePhone string `pulumi:"mobilePhone"`
	// user profile property.
	NickName string `pulumi:"nickName"`
	// user profile property.
	Organization string `pulumi:"organization"`
	// user profile property.
	PostalAddress string `pulumi:"postalAddress"`
	// user profile property.
	PreferredLanguage string `pulumi:"preferredLanguage"`
	// user profile property.
	PrimaryPhone string `pulumi:"primaryPhone"`
	// user profile property.
	ProfileUrl string `pulumi:"profileUrl"`
	// user profile property.
	SecondEmail string `pulumi:"secondEmail"`
	// user profile property.
	State string `pulumi:"state"`
	// user profile property.
	Status string `pulumi:"status"`
	// user profile property.
	StreetAddress string `pulumi:"streetAddress"`
	// user profile property.
	Timezone string `pulumi:"timezone"`
	// user profile property.
	Title string `pulumi:"title"`
	// user profile property.
	UserType string `pulumi:"userType"`
	// user profile property.
	ZipCode string `pulumi:"zipCode"`
}

type GetUsersUserInput interface {
	pulumi.Input

	ToGetUsersUserOutput() GetUsersUserOutput
	ToGetUsersUserOutputWithContext(context.Context) GetUsersUserOutput
}

type GetUsersUserArgs struct {
	// Administrator roles assigned to user.
	AdminRoles pulumi.StringArrayInput `pulumi:"adminRoles"`
	// user profile property.
	City pulumi.StringInput `pulumi:"city"`
	// user profile property.
	CostCenter pulumi.StringInput `pulumi:"costCenter"`
	// user profile property.
	CountryCode pulumi.StringInput `pulumi:"countryCode"`
	// raw JSON containing all custom profile attributes.
	CustomProfileAttributes pulumi.StringInput `pulumi:"customProfileAttributes"`
	// user profile property.
	Department pulumi.StringInput `pulumi:"department"`
	// user profile property.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// user profile property.
	Division pulumi.StringInput `pulumi:"division"`
	// user profile property.
	Email pulumi.StringInput `pulumi:"email"`
	// user profile property.
	EmployeeNumber pulumi.StringInput `pulumi:"employeeNumber"`
	// user profile property.
	FirstName pulumi.StringInput `pulumi:"firstName"`
	// user profile property.
	GroupMemberships pulumi.StringArrayInput `pulumi:"groupMemberships"`
	// user profile property.
	HonorificPrefix pulumi.StringInput `pulumi:"honorificPrefix"`
	// user profile property.
	HonorificSuffix pulumi.StringInput `pulumi:"honorificSuffix"`
	// user profile property.
	LastName pulumi.StringInput `pulumi:"lastName"`
	// user profile property.
	Locale pulumi.StringInput `pulumi:"locale"`
	// user profile property.
	Login pulumi.StringInput `pulumi:"login"`
	// user profile property.
	Manager pulumi.StringInput `pulumi:"manager"`
	// user profile property.
	ManagerId pulumi.StringInput `pulumi:"managerId"`
	// user profile property.
	MiddleName pulumi.StringInput `pulumi:"middleName"`
	// user profile property.
	MobilePhone pulumi.StringInput `pulumi:"mobilePhone"`
	// user profile property.
	NickName pulumi.StringInput `pulumi:"nickName"`
	// user profile property.
	Organization pulumi.StringInput `pulumi:"organization"`
	// user profile property.
	PostalAddress pulumi.StringInput `pulumi:"postalAddress"`
	// user profile property.
	PreferredLanguage pulumi.StringInput `pulumi:"preferredLanguage"`
	// user profile property.
	PrimaryPhone pulumi.StringInput `pulumi:"primaryPhone"`
	// user profile property.
	ProfileUrl pulumi.StringInput `pulumi:"profileUrl"`
	// user profile property.
	SecondEmail pulumi.StringInput `pulumi:"secondEmail"`
	// user profile property.
	State pulumi.StringInput `pulumi:"state"`
	// user profile property.
	Status pulumi.StringInput `pulumi:"status"`
	// user profile property.
	StreetAddress pulumi.StringInput `pulumi:"streetAddress"`
	// user profile property.
	Timezone pulumi.StringInput `pulumi:"timezone"`
	// user profile property.
	Title pulumi.StringInput `pulumi:"title"`
	// user profile property.
	UserType pulumi.StringInput `pulumi:"userType"`
	// user profile property.
	ZipCode pulumi.StringInput `pulumi:"zipCode"`
}

func (GetUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArgs) ToGetUsersUserOutput() GetUsersUserOutput {
	return i.ToGetUsersUserOutputWithContext(context.Background())
}

func (i GetUsersUserArgs) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserOutput)
}

type GetUsersUserArrayInput interface {
	pulumi.Input

	ToGetUsersUserArrayOutput() GetUsersUserArrayOutput
	ToGetUsersUserArrayOutputWithContext(context.Context) GetUsersUserArrayOutput
}

type GetUsersUserArray []GetUsersUserInput

func (GetUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return i.ToGetUsersUserArrayOutputWithContext(context.Background())
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserArrayOutput)
}

type GetUsersUserOutput struct{ *pulumi.OutputState }

func (GetUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserOutput) ToGetUsersUserOutput() GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return o
}

// Administrator roles assigned to user.
func (o GetUsersUserOutput) AdminRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUsersUser) []string { return v.AdminRoles }).(pulumi.StringArrayOutput)
}

// user profile property.
func (o GetUsersUserOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.City }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) CostCenter() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.CostCenter }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.CountryCode }).(pulumi.StringOutput)
}

// raw JSON containing all custom profile attributes.
func (o GetUsersUserOutput) CustomProfileAttributes() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.CustomProfileAttributes }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) Department() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Department }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.DisplayName }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) Division() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Division }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Email }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) EmployeeNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.EmployeeNumber }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.FirstName }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) GroupMemberships() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUsersUser) []string { return v.GroupMemberships }).(pulumi.StringArrayOutput)
}

// user profile property.
func (o GetUsersUserOutput) HonorificPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.HonorificPrefix }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) HonorificSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.HonorificSuffix }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.LastName }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) Locale() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Locale }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) Login() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Login }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) Manager() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Manager }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) ManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.ManagerId }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) MiddleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.MiddleName }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) MobilePhone() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.MobilePhone }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) NickName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.NickName }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Organization }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) PostalAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.PostalAddress }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) PreferredLanguage() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.PreferredLanguage }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) PrimaryPhone() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.PrimaryPhone }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) ProfileUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.ProfileUrl }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) SecondEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.SecondEmail }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.State }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Status }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) StreetAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.StreetAddress }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Timezone }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Title }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) UserType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.UserType }).(pulumi.StringOutput)
}

// user profile property.
func (o GetUsersUserOutput) ZipCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.ZipCode }).(pulumi.StringOutput)
}

type GetUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) Index(i pulumi.IntInput) GetUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUser {
		return vs[0].([]GetUsersUser)[vs[1].(int)]
	}).(GetUsersUserOutput)
}

func init() {
	pulumi.RegisterOutputType(SchemaArrayOneOfOutput{})
	pulumi.RegisterOutputType(SchemaArrayOneOfArrayOutput{})
	pulumi.RegisterOutputType(SchemaOneOfOutput{})
	pulumi.RegisterOutputType(SchemaOneOfArrayOutput{})
	pulumi.RegisterOutputType(GetUserSearchOutput{})
	pulumi.RegisterOutputType(GetUserSearchArrayOutput{})
	pulumi.RegisterOutputType(GetUsersSearchOutput{})
	pulumi.RegisterOutputType(GetUsersSearchArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserOutput{})
	pulumi.RegisterOutputType(GetUsersUserArrayOutput{})
}

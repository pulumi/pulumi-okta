// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package user

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Use this data source to retrieve a user type from Okta.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-okta/sdk/v2/go/okta/user"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := user.LookupUserType(ctx, &user.LookupUserTypeArgs{
// 			Name: "example",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupUserType(ctx *pulumi.Context, args *LookupUserTypeArgs, opts ...pulumi.InvokeOption) (*LookupUserTypeResult, error) {
	var rv LookupUserTypeResult
	err := ctx.Invoke("okta:user/getUserType:getUserType", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserType.
type LookupUserTypeArgs struct {
	// description of user type.
	Description *string `pulumi:"description"`
	// display name of user type.
	DisplayName *string `pulumi:"displayName"`
	// name of user type to retrieve.
	Name string `pulumi:"name"`
}

// A collection of values returned by getUserType.
type LookupUserTypeResult struct {
	// description of user type.
	Description *string `pulumi:"description"`
	// display name of user type.
	DisplayName *string `pulumi:"displayName"`
	// id of user type.
	Id string `pulumi:"id"`
	// name of user type.
	Name string `pulumi:"name"`
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package auth

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve an authorization server policy from Okta.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-okta/sdk/v3/go/okta/auth"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := auth.LookupServerPolicy(ctx, &auth.LookupServerPolicyArgs{
// 			AuthServerId: "<auth server id>",
// 			Name:         "staff",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupServerPolicy(ctx *pulumi.Context, args *LookupServerPolicyArgs, opts ...pulumi.InvokeOption) (*LookupServerPolicyResult, error) {
	var rv LookupServerPolicyResult
	err := ctx.Invoke("okta:auth/getServerPolicy:getServerPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerPolicy.
type LookupServerPolicyArgs struct {
	// The ID of the Auth Server.
	AuthServerId string `pulumi:"authServerId"`
	// Name of policy to retrieve.
	Name string `pulumi:"name"`
}

// A collection of values returned by getServerPolicy.
type LookupServerPolicyResult struct {
	// list of clients this policy is assigned to. `["ALL_CLIENTS"]` is a special value when policy is assigned to all clients.
	AssignedClients []string `pulumi:"assignedClients"`
	AuthServerId    string   `pulumi:"authServerId"`
	// description of authorization server policy.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// the priority of the Auth Server Policy.
	Priority int `pulumi:"priority"`
}

func LookupServerPolicyOutput(ctx *pulumi.Context, args LookupServerPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupServerPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServerPolicyResult, error) {
			args := v.(LookupServerPolicyArgs)
			r, err := LookupServerPolicy(ctx, &args, opts...)
			var s LookupServerPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServerPolicyResultOutput)
}

// A collection of arguments for invoking getServerPolicy.
type LookupServerPolicyOutputArgs struct {
	// The ID of the Auth Server.
	AuthServerId pulumi.StringInput `pulumi:"authServerId"`
	// Name of policy to retrieve.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupServerPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getServerPolicy.
type LookupServerPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupServerPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerPolicyResult)(nil)).Elem()
}

func (o LookupServerPolicyResultOutput) ToLookupServerPolicyResultOutput() LookupServerPolicyResultOutput {
	return o
}

func (o LookupServerPolicyResultOutput) ToLookupServerPolicyResultOutputWithContext(ctx context.Context) LookupServerPolicyResultOutput {
	return o
}

// list of clients this policy is assigned to. `["ALL_CLIENTS"]` is a special value when policy is assigned to all clients.
func (o LookupServerPolicyResultOutput) AssignedClients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupServerPolicyResult) []string { return v.AssignedClients }).(pulumi.StringArrayOutput)
}

func (o LookupServerPolicyResultOutput) AuthServerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerPolicyResult) string { return v.AuthServerId }).(pulumi.StringOutput)
}

// description of authorization server policy.
func (o LookupServerPolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerPolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupServerPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupServerPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// the priority of the Auth Server Policy.
func (o LookupServerPolicyResultOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServerPolicyResult) int { return v.Priority }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerPolicyResultOutput{})
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package auth

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get an authorization server policy from Okta.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/auth"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := auth.LookupServerPolicy(ctx, &auth.LookupServerPolicyArgs{
//				AuthServerId: "<auth server id>",
//				Name:         "staff",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupServerPolicy(ctx *pulumi.Context, args *LookupServerPolicyArgs, opts ...pulumi.InvokeOption) (*LookupServerPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServerPolicyResult
	err := ctx.Invoke("okta:auth/getServerPolicy:getServerPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerPolicy.
type LookupServerPolicyArgs struct {
	// Auth server ID
	AuthServerId string `pulumi:"authServerId"`
	// Name of the policy
	Name string `pulumi:"name"`
}

// A collection of values returned by getServerPolicy.
type LookupServerPolicyResult struct {
	// List of clients this policy is assigned to. `[ALL_CLIENTS]` is a special value when policy is assigned to all clients.
	AssignedClients []string `pulumi:"assignedClients"`
	// Auth server ID
	AuthServerId string `pulumi:"authServerId"`
	// Description of authorization server policy.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of the policy
	Name string `pulumi:"name"`
	// Priority of the auth server policy
	Priority int `pulumi:"priority"`
}

func LookupServerPolicyOutput(ctx *pulumi.Context, args LookupServerPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupServerPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupServerPolicyResultOutput, error) {
			args := v.(LookupServerPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("okta:auth/getServerPolicy:getServerPolicy", args, LookupServerPolicyResultOutput{}, options).(LookupServerPolicyResultOutput), nil
		}).(LookupServerPolicyResultOutput)
}

// A collection of arguments for invoking getServerPolicy.
type LookupServerPolicyOutputArgs struct {
	// Auth server ID
	AuthServerId pulumi.StringInput `pulumi:"authServerId"`
	// Name of the policy
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupServerPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getServerPolicy.
type LookupServerPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupServerPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerPolicyResult)(nil)).Elem()
}

func (o LookupServerPolicyResultOutput) ToLookupServerPolicyResultOutput() LookupServerPolicyResultOutput {
	return o
}

func (o LookupServerPolicyResultOutput) ToLookupServerPolicyResultOutputWithContext(ctx context.Context) LookupServerPolicyResultOutput {
	return o
}

// List of clients this policy is assigned to. `[ALL_CLIENTS]` is a special value when policy is assigned to all clients.
func (o LookupServerPolicyResultOutput) AssignedClients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupServerPolicyResult) []string { return v.AssignedClients }).(pulumi.StringArrayOutput)
}

// Auth server ID
func (o LookupServerPolicyResultOutput) AuthServerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerPolicyResult) string { return v.AuthServerId }).(pulumi.StringOutput)
}

// Description of authorization server policy.
func (o LookupServerPolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerPolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupServerPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the policy
func (o LookupServerPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// Priority of the auth server policy
func (o LookupServerPolicyResultOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServerPolicyResult) int { return v.Priority }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerPolicyResultOutput{})
}

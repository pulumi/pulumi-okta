// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package auth

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Use this data source to retrieve a authorization server policy from Okta.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-okta/sdk/v2/go/okta/auth"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := auth.LookupServerPolicy(ctx, &auth.LookupServerPolicyArgs{
// 			AuthServerId: "<auth server id>",
// 			Name:         "staff",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupServerPolicy(ctx *pulumi.Context, args *LookupServerPolicyArgs, opts ...pulumi.InvokeOption) (*LookupServerPolicyResult, error) {
	var rv LookupServerPolicyResult
	err := ctx.Invoke("okta:auth/getServerPolicy:getServerPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerPolicy.
type LookupServerPolicyArgs struct {
	// The ID of the Auth Server.
	AuthServerId string `pulumi:"authServerId"`
	// Name of policy to retrieve.
	Name string `pulumi:"name"`
}

// A collection of values returned by getServerPolicy.
type LookupServerPolicyResult struct {
	// list of clients this policy is assigned to. `["ALL_CLIENTS"]` is a special value when policy is assigned to all clients.
	AssignedClients []string `pulumi:"assignedClients"`
	AuthServerId    string   `pulumi:"authServerId"`
	// description of authorization server policy.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

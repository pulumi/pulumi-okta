// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type EventHookHeader struct {
	// Key to use for authentication, usually the header name, for example `"Authorization"`.
	Key *string `pulumi:"key"`
	// Authentication secret.
	Value *string `pulumi:"value"`
}

// EventHookHeaderInput is an input type that accepts EventHookHeaderArgs and EventHookHeaderOutput values.
// You can construct a concrete instance of `EventHookHeaderInput` via:
//
//          EventHookHeaderArgs{...}
type EventHookHeaderInput interface {
	pulumi.Input

	ToEventHookHeaderOutput() EventHookHeaderOutput
	ToEventHookHeaderOutputWithContext(context.Context) EventHookHeaderOutput
}

type EventHookHeaderArgs struct {
	// Key to use for authentication, usually the header name, for example `"Authorization"`.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Authentication secret.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EventHookHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHookHeader)(nil)).Elem()
}

func (i EventHookHeaderArgs) ToEventHookHeaderOutput() EventHookHeaderOutput {
	return i.ToEventHookHeaderOutputWithContext(context.Background())
}

func (i EventHookHeaderArgs) ToEventHookHeaderOutputWithContext(ctx context.Context) EventHookHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHookHeaderOutput)
}

// EventHookHeaderArrayInput is an input type that accepts EventHookHeaderArray and EventHookHeaderArrayOutput values.
// You can construct a concrete instance of `EventHookHeaderArrayInput` via:
//
//          EventHookHeaderArray{ EventHookHeaderArgs{...} }
type EventHookHeaderArrayInput interface {
	pulumi.Input

	ToEventHookHeaderArrayOutput() EventHookHeaderArrayOutput
	ToEventHookHeaderArrayOutputWithContext(context.Context) EventHookHeaderArrayOutput
}

type EventHookHeaderArray []EventHookHeaderInput

func (EventHookHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventHookHeader)(nil)).Elem()
}

func (i EventHookHeaderArray) ToEventHookHeaderArrayOutput() EventHookHeaderArrayOutput {
	return i.ToEventHookHeaderArrayOutputWithContext(context.Background())
}

func (i EventHookHeaderArray) ToEventHookHeaderArrayOutputWithContext(ctx context.Context) EventHookHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHookHeaderArrayOutput)
}

type EventHookHeaderOutput struct{ *pulumi.OutputState }

func (EventHookHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHookHeader)(nil)).Elem()
}

func (o EventHookHeaderOutput) ToEventHookHeaderOutput() EventHookHeaderOutput {
	return o
}

func (o EventHookHeaderOutput) ToEventHookHeaderOutputWithContext(ctx context.Context) EventHookHeaderOutput {
	return o
}

// Key to use for authentication, usually the header name, for example `"Authorization"`.
func (o EventHookHeaderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHookHeader) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Authentication secret.
func (o EventHookHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHookHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EventHookHeaderArrayOutput struct{ *pulumi.OutputState }

func (EventHookHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventHookHeader)(nil)).Elem()
}

func (o EventHookHeaderArrayOutput) ToEventHookHeaderArrayOutput() EventHookHeaderArrayOutput {
	return o
}

func (o EventHookHeaderArrayOutput) ToEventHookHeaderArrayOutputWithContext(ctx context.Context) EventHookHeaderArrayOutput {
	return o
}

func (o EventHookHeaderArrayOutput) Index(i pulumi.IntInput) EventHookHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventHookHeader {
		return vs[0].([]EventHookHeader)[vs[1].(int)]
	}).(EventHookHeaderOutput)
}

type TemplateSmsTranslation struct {
	// The language to map the template to.
	Language string `pulumi:"language"`
	// The SMS message.
	Template string `pulumi:"template"`
}

// TemplateSmsTranslationInput is an input type that accepts TemplateSmsTranslationArgs and TemplateSmsTranslationOutput values.
// You can construct a concrete instance of `TemplateSmsTranslationInput` via:
//
//          TemplateSmsTranslationArgs{...}
type TemplateSmsTranslationInput interface {
	pulumi.Input

	ToTemplateSmsTranslationOutput() TemplateSmsTranslationOutput
	ToTemplateSmsTranslationOutputWithContext(context.Context) TemplateSmsTranslationOutput
}

type TemplateSmsTranslationArgs struct {
	// The language to map the template to.
	Language pulumi.StringInput `pulumi:"language"`
	// The SMS message.
	Template pulumi.StringInput `pulumi:"template"`
}

func (TemplateSmsTranslationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSmsTranslation)(nil)).Elem()
}

func (i TemplateSmsTranslationArgs) ToTemplateSmsTranslationOutput() TemplateSmsTranslationOutput {
	return i.ToTemplateSmsTranslationOutputWithContext(context.Background())
}

func (i TemplateSmsTranslationArgs) ToTemplateSmsTranslationOutputWithContext(ctx context.Context) TemplateSmsTranslationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSmsTranslationOutput)
}

// TemplateSmsTranslationArrayInput is an input type that accepts TemplateSmsTranslationArray and TemplateSmsTranslationArrayOutput values.
// You can construct a concrete instance of `TemplateSmsTranslationArrayInput` via:
//
//          TemplateSmsTranslationArray{ TemplateSmsTranslationArgs{...} }
type TemplateSmsTranslationArrayInput interface {
	pulumi.Input

	ToTemplateSmsTranslationArrayOutput() TemplateSmsTranslationArrayOutput
	ToTemplateSmsTranslationArrayOutputWithContext(context.Context) TemplateSmsTranslationArrayOutput
}

type TemplateSmsTranslationArray []TemplateSmsTranslationInput

func (TemplateSmsTranslationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSmsTranslation)(nil)).Elem()
}

func (i TemplateSmsTranslationArray) ToTemplateSmsTranslationArrayOutput() TemplateSmsTranslationArrayOutput {
	return i.ToTemplateSmsTranslationArrayOutputWithContext(context.Background())
}

func (i TemplateSmsTranslationArray) ToTemplateSmsTranslationArrayOutputWithContext(ctx context.Context) TemplateSmsTranslationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSmsTranslationArrayOutput)
}

type TemplateSmsTranslationOutput struct{ *pulumi.OutputState }

func (TemplateSmsTranslationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSmsTranslation)(nil)).Elem()
}

func (o TemplateSmsTranslationOutput) ToTemplateSmsTranslationOutput() TemplateSmsTranslationOutput {
	return o
}

func (o TemplateSmsTranslationOutput) ToTemplateSmsTranslationOutputWithContext(ctx context.Context) TemplateSmsTranslationOutput {
	return o
}

// The language to map the template to.
func (o TemplateSmsTranslationOutput) Language() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateSmsTranslation) string { return v.Language }).(pulumi.StringOutput)
}

// The SMS message.
func (o TemplateSmsTranslationOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateSmsTranslation) string { return v.Template }).(pulumi.StringOutput)
}

type TemplateSmsTranslationArrayOutput struct{ *pulumi.OutputState }

func (TemplateSmsTranslationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSmsTranslation)(nil)).Elem()
}

func (o TemplateSmsTranslationArrayOutput) ToTemplateSmsTranslationArrayOutput() TemplateSmsTranslationArrayOutput {
	return o
}

func (o TemplateSmsTranslationArrayOutput) ToTemplateSmsTranslationArrayOutputWithContext(ctx context.Context) TemplateSmsTranslationArrayOutput {
	return o
}

func (o TemplateSmsTranslationArrayOutput) Index(i pulumi.IntInput) TemplateSmsTranslationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateSmsTranslation {
		return vs[0].([]TemplateSmsTranslation)[vs[1].(int)]
	}).(TemplateSmsTranslationOutput)
}

func init() {
	pulumi.RegisterOutputType(EventHookHeaderOutput{})
	pulumi.RegisterOutputType(EventHookHeaderArrayOutput{})
	pulumi.RegisterOutputType(TemplateSmsTranslationOutput{})
	pulumi.RegisterOutputType(TemplateSmsTranslationArrayOutput{})
}

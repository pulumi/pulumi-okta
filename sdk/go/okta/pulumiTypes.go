// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppGroupAssignmentsGroup struct {
	// ID of the group to assign.
	Id string `pulumi:"id"`
	// Priority of group assignment
	Priority *int `pulumi:"priority"`
	// JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)
	Profile string `pulumi:"profile"`
}

// AppGroupAssignmentsGroupInput is an input type that accepts AppGroupAssignmentsGroupArgs and AppGroupAssignmentsGroupOutput values.
// You can construct a concrete instance of `AppGroupAssignmentsGroupInput` via:
//
//	AppGroupAssignmentsGroupArgs{...}
type AppGroupAssignmentsGroupInput interface {
	pulumi.Input

	ToAppGroupAssignmentsGroupOutput() AppGroupAssignmentsGroupOutput
	ToAppGroupAssignmentsGroupOutputWithContext(context.Context) AppGroupAssignmentsGroupOutput
}

type AppGroupAssignmentsGroupArgs struct {
	// ID of the group to assign.
	Id pulumi.StringInput `pulumi:"id"`
	// Priority of group assignment
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)
	Profile pulumi.StringInput `pulumi:"profile"`
}

func (AppGroupAssignmentsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppGroupAssignmentsGroup)(nil)).Elem()
}

func (i AppGroupAssignmentsGroupArgs) ToAppGroupAssignmentsGroupOutput() AppGroupAssignmentsGroupOutput {
	return i.ToAppGroupAssignmentsGroupOutputWithContext(context.Background())
}

func (i AppGroupAssignmentsGroupArgs) ToAppGroupAssignmentsGroupOutputWithContext(ctx context.Context) AppGroupAssignmentsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppGroupAssignmentsGroupOutput)
}

// AppGroupAssignmentsGroupArrayInput is an input type that accepts AppGroupAssignmentsGroupArray and AppGroupAssignmentsGroupArrayOutput values.
// You can construct a concrete instance of `AppGroupAssignmentsGroupArrayInput` via:
//
//	AppGroupAssignmentsGroupArray{ AppGroupAssignmentsGroupArgs{...} }
type AppGroupAssignmentsGroupArrayInput interface {
	pulumi.Input

	ToAppGroupAssignmentsGroupArrayOutput() AppGroupAssignmentsGroupArrayOutput
	ToAppGroupAssignmentsGroupArrayOutputWithContext(context.Context) AppGroupAssignmentsGroupArrayOutput
}

type AppGroupAssignmentsGroupArray []AppGroupAssignmentsGroupInput

func (AppGroupAssignmentsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppGroupAssignmentsGroup)(nil)).Elem()
}

func (i AppGroupAssignmentsGroupArray) ToAppGroupAssignmentsGroupArrayOutput() AppGroupAssignmentsGroupArrayOutput {
	return i.ToAppGroupAssignmentsGroupArrayOutputWithContext(context.Background())
}

func (i AppGroupAssignmentsGroupArray) ToAppGroupAssignmentsGroupArrayOutputWithContext(ctx context.Context) AppGroupAssignmentsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppGroupAssignmentsGroupArrayOutput)
}

type AppGroupAssignmentsGroupOutput struct{ *pulumi.OutputState }

func (AppGroupAssignmentsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppGroupAssignmentsGroup)(nil)).Elem()
}

func (o AppGroupAssignmentsGroupOutput) ToAppGroupAssignmentsGroupOutput() AppGroupAssignmentsGroupOutput {
	return o
}

func (o AppGroupAssignmentsGroupOutput) ToAppGroupAssignmentsGroupOutputWithContext(ctx context.Context) AppGroupAssignmentsGroupOutput {
	return o
}

// ID of the group to assign.
func (o AppGroupAssignmentsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AppGroupAssignmentsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// Priority of group assignment
func (o AppGroupAssignmentsGroupOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppGroupAssignmentsGroup) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)
func (o AppGroupAssignmentsGroupOutput) Profile() pulumi.StringOutput {
	return o.ApplyT(func(v AppGroupAssignmentsGroup) string { return v.Profile }).(pulumi.StringOutput)
}

type AppGroupAssignmentsGroupArrayOutput struct{ *pulumi.OutputState }

func (AppGroupAssignmentsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppGroupAssignmentsGroup)(nil)).Elem()
}

func (o AppGroupAssignmentsGroupArrayOutput) ToAppGroupAssignmentsGroupArrayOutput() AppGroupAssignmentsGroupArrayOutput {
	return o
}

func (o AppGroupAssignmentsGroupArrayOutput) ToAppGroupAssignmentsGroupArrayOutputWithContext(ctx context.Context) AppGroupAssignmentsGroupArrayOutput {
	return o
}

func (o AppGroupAssignmentsGroupArrayOutput) Index(i pulumi.IntInput) AppGroupAssignmentsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppGroupAssignmentsGroup {
		return vs[0].([]AppGroupAssignmentsGroup)[vs[1].(int)]
	}).(AppGroupAssignmentsGroupOutput)
}

type AppSharedCredentialsUser struct {
	// ID of an app.
	Id       *string `pulumi:"id"`
	Password *string `pulumi:"password"`
	Scope    *string `pulumi:"scope"`
	Username *string `pulumi:"username"`
}

// AppSharedCredentialsUserInput is an input type that accepts AppSharedCredentialsUserArgs and AppSharedCredentialsUserOutput values.
// You can construct a concrete instance of `AppSharedCredentialsUserInput` via:
//
//	AppSharedCredentialsUserArgs{...}
type AppSharedCredentialsUserInput interface {
	pulumi.Input

	ToAppSharedCredentialsUserOutput() AppSharedCredentialsUserOutput
	ToAppSharedCredentialsUserOutputWithContext(context.Context) AppSharedCredentialsUserOutput
}

type AppSharedCredentialsUserArgs struct {
	// ID of an app.
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Password pulumi.StringPtrInput `pulumi:"password"`
	Scope    pulumi.StringPtrInput `pulumi:"scope"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (AppSharedCredentialsUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSharedCredentialsUser)(nil)).Elem()
}

func (i AppSharedCredentialsUserArgs) ToAppSharedCredentialsUserOutput() AppSharedCredentialsUserOutput {
	return i.ToAppSharedCredentialsUserOutputWithContext(context.Background())
}

func (i AppSharedCredentialsUserArgs) ToAppSharedCredentialsUserOutputWithContext(ctx context.Context) AppSharedCredentialsUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSharedCredentialsUserOutput)
}

// AppSharedCredentialsUserArrayInput is an input type that accepts AppSharedCredentialsUserArray and AppSharedCredentialsUserArrayOutput values.
// You can construct a concrete instance of `AppSharedCredentialsUserArrayInput` via:
//
//	AppSharedCredentialsUserArray{ AppSharedCredentialsUserArgs{...} }
type AppSharedCredentialsUserArrayInput interface {
	pulumi.Input

	ToAppSharedCredentialsUserArrayOutput() AppSharedCredentialsUserArrayOutput
	ToAppSharedCredentialsUserArrayOutputWithContext(context.Context) AppSharedCredentialsUserArrayOutput
}

type AppSharedCredentialsUserArray []AppSharedCredentialsUserInput

func (AppSharedCredentialsUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSharedCredentialsUser)(nil)).Elem()
}

func (i AppSharedCredentialsUserArray) ToAppSharedCredentialsUserArrayOutput() AppSharedCredentialsUserArrayOutput {
	return i.ToAppSharedCredentialsUserArrayOutputWithContext(context.Background())
}

func (i AppSharedCredentialsUserArray) ToAppSharedCredentialsUserArrayOutputWithContext(ctx context.Context) AppSharedCredentialsUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSharedCredentialsUserArrayOutput)
}

type AppSharedCredentialsUserOutput struct{ *pulumi.OutputState }

func (AppSharedCredentialsUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSharedCredentialsUser)(nil)).Elem()
}

func (o AppSharedCredentialsUserOutput) ToAppSharedCredentialsUserOutput() AppSharedCredentialsUserOutput {
	return o
}

func (o AppSharedCredentialsUserOutput) ToAppSharedCredentialsUserOutputWithContext(ctx context.Context) AppSharedCredentialsUserOutput {
	return o
}

// ID of an app.
func (o AppSharedCredentialsUserOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSharedCredentialsUser) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o AppSharedCredentialsUserOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSharedCredentialsUser) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o AppSharedCredentialsUserOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSharedCredentialsUser) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o AppSharedCredentialsUserOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSharedCredentialsUser) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type AppSharedCredentialsUserArrayOutput struct{ *pulumi.OutputState }

func (AppSharedCredentialsUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSharedCredentialsUser)(nil)).Elem()
}

func (o AppSharedCredentialsUserArrayOutput) ToAppSharedCredentialsUserArrayOutput() AppSharedCredentialsUserArrayOutput {
	return o
}

func (o AppSharedCredentialsUserArrayOutput) ToAppSharedCredentialsUserArrayOutputWithContext(ctx context.Context) AppSharedCredentialsUserArrayOutput {
	return o
}

func (o AppSharedCredentialsUserArrayOutput) Index(i pulumi.IntInput) AppSharedCredentialsUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSharedCredentialsUser {
		return vs[0].([]AppSharedCredentialsUser)[vs[1].(int)]
	}).(AppSharedCredentialsUserOutput)
}

type AppSignonPolicyRulePlatformInclude struct {
	// Only available when using `osType = "OTHER"`
	OsExpression *string `pulumi:"osExpression"`
	// One of: `"ANY"`, `"IOS"`, `"WINDOWS"`, `"ANDROID"`, `"OTHER"`, `"OSX"`, `"MACOS"`
	OsType *string `pulumi:"osType"`
	// The Verification Method type. It can be set to `"ASSURANCE"`. Default is `"ASSURANCE"`.
	Type *string `pulumi:"type"`
}

// AppSignonPolicyRulePlatformIncludeInput is an input type that accepts AppSignonPolicyRulePlatformIncludeArgs and AppSignonPolicyRulePlatformIncludeOutput values.
// You can construct a concrete instance of `AppSignonPolicyRulePlatformIncludeInput` via:
//
//	AppSignonPolicyRulePlatformIncludeArgs{...}
type AppSignonPolicyRulePlatformIncludeInput interface {
	pulumi.Input

	ToAppSignonPolicyRulePlatformIncludeOutput() AppSignonPolicyRulePlatformIncludeOutput
	ToAppSignonPolicyRulePlatformIncludeOutputWithContext(context.Context) AppSignonPolicyRulePlatformIncludeOutput
}

type AppSignonPolicyRulePlatformIncludeArgs struct {
	// Only available when using `osType = "OTHER"`
	OsExpression pulumi.StringPtrInput `pulumi:"osExpression"`
	// One of: `"ANY"`, `"IOS"`, `"WINDOWS"`, `"ANDROID"`, `"OTHER"`, `"OSX"`, `"MACOS"`
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The Verification Method type. It can be set to `"ASSURANCE"`. Default is `"ASSURANCE"`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AppSignonPolicyRulePlatformIncludeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSignonPolicyRulePlatformInclude)(nil)).Elem()
}

func (i AppSignonPolicyRulePlatformIncludeArgs) ToAppSignonPolicyRulePlatformIncludeOutput() AppSignonPolicyRulePlatformIncludeOutput {
	return i.ToAppSignonPolicyRulePlatformIncludeOutputWithContext(context.Background())
}

func (i AppSignonPolicyRulePlatformIncludeArgs) ToAppSignonPolicyRulePlatformIncludeOutputWithContext(ctx context.Context) AppSignonPolicyRulePlatformIncludeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSignonPolicyRulePlatformIncludeOutput)
}

// AppSignonPolicyRulePlatformIncludeArrayInput is an input type that accepts AppSignonPolicyRulePlatformIncludeArray and AppSignonPolicyRulePlatformIncludeArrayOutput values.
// You can construct a concrete instance of `AppSignonPolicyRulePlatformIncludeArrayInput` via:
//
//	AppSignonPolicyRulePlatformIncludeArray{ AppSignonPolicyRulePlatformIncludeArgs{...} }
type AppSignonPolicyRulePlatformIncludeArrayInput interface {
	pulumi.Input

	ToAppSignonPolicyRulePlatformIncludeArrayOutput() AppSignonPolicyRulePlatformIncludeArrayOutput
	ToAppSignonPolicyRulePlatformIncludeArrayOutputWithContext(context.Context) AppSignonPolicyRulePlatformIncludeArrayOutput
}

type AppSignonPolicyRulePlatformIncludeArray []AppSignonPolicyRulePlatformIncludeInput

func (AppSignonPolicyRulePlatformIncludeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSignonPolicyRulePlatformInclude)(nil)).Elem()
}

func (i AppSignonPolicyRulePlatformIncludeArray) ToAppSignonPolicyRulePlatformIncludeArrayOutput() AppSignonPolicyRulePlatformIncludeArrayOutput {
	return i.ToAppSignonPolicyRulePlatformIncludeArrayOutputWithContext(context.Background())
}

func (i AppSignonPolicyRulePlatformIncludeArray) ToAppSignonPolicyRulePlatformIncludeArrayOutputWithContext(ctx context.Context) AppSignonPolicyRulePlatformIncludeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSignonPolicyRulePlatformIncludeArrayOutput)
}

type AppSignonPolicyRulePlatformIncludeOutput struct{ *pulumi.OutputState }

func (AppSignonPolicyRulePlatformIncludeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSignonPolicyRulePlatformInclude)(nil)).Elem()
}

func (o AppSignonPolicyRulePlatformIncludeOutput) ToAppSignonPolicyRulePlatformIncludeOutput() AppSignonPolicyRulePlatformIncludeOutput {
	return o
}

func (o AppSignonPolicyRulePlatformIncludeOutput) ToAppSignonPolicyRulePlatformIncludeOutputWithContext(ctx context.Context) AppSignonPolicyRulePlatformIncludeOutput {
	return o
}

// Only available when using `osType = "OTHER"`
func (o AppSignonPolicyRulePlatformIncludeOutput) OsExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSignonPolicyRulePlatformInclude) *string { return v.OsExpression }).(pulumi.StringPtrOutput)
}

// One of: `"ANY"`, `"IOS"`, `"WINDOWS"`, `"ANDROID"`, `"OTHER"`, `"OSX"`, `"MACOS"`
func (o AppSignonPolicyRulePlatformIncludeOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSignonPolicyRulePlatformInclude) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The Verification Method type. It can be set to `"ASSURANCE"`. Default is `"ASSURANCE"`.
func (o AppSignonPolicyRulePlatformIncludeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSignonPolicyRulePlatformInclude) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AppSignonPolicyRulePlatformIncludeArrayOutput struct{ *pulumi.OutputState }

func (AppSignonPolicyRulePlatformIncludeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSignonPolicyRulePlatformInclude)(nil)).Elem()
}

func (o AppSignonPolicyRulePlatformIncludeArrayOutput) ToAppSignonPolicyRulePlatformIncludeArrayOutput() AppSignonPolicyRulePlatformIncludeArrayOutput {
	return o
}

func (o AppSignonPolicyRulePlatformIncludeArrayOutput) ToAppSignonPolicyRulePlatformIncludeArrayOutputWithContext(ctx context.Context) AppSignonPolicyRulePlatformIncludeArrayOutput {
	return o
}

func (o AppSignonPolicyRulePlatformIncludeArrayOutput) Index(i pulumi.IntInput) AppSignonPolicyRulePlatformIncludeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSignonPolicyRulePlatformInclude {
		return vs[0].([]AppSignonPolicyRulePlatformInclude)[vs[1].(int)]
	}).(AppSignonPolicyRulePlatformIncludeOutput)
}

type AppUserSchemaPropertyArrayOneOf struct {
	// value mapping to member of `arrayEnum`.
	Const string `pulumi:"const"`
	// display name for the enum value.
	Title string `pulumi:"title"`
}

// AppUserSchemaPropertyArrayOneOfInput is an input type that accepts AppUserSchemaPropertyArrayOneOfArgs and AppUserSchemaPropertyArrayOneOfOutput values.
// You can construct a concrete instance of `AppUserSchemaPropertyArrayOneOfInput` via:
//
//	AppUserSchemaPropertyArrayOneOfArgs{...}
type AppUserSchemaPropertyArrayOneOfInput interface {
	pulumi.Input

	ToAppUserSchemaPropertyArrayOneOfOutput() AppUserSchemaPropertyArrayOneOfOutput
	ToAppUserSchemaPropertyArrayOneOfOutputWithContext(context.Context) AppUserSchemaPropertyArrayOneOfOutput
}

type AppUserSchemaPropertyArrayOneOfArgs struct {
	// value mapping to member of `arrayEnum`.
	Const pulumi.StringInput `pulumi:"const"`
	// display name for the enum value.
	Title pulumi.StringInput `pulumi:"title"`
}

func (AppUserSchemaPropertyArrayOneOfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppUserSchemaPropertyArrayOneOf)(nil)).Elem()
}

func (i AppUserSchemaPropertyArrayOneOfArgs) ToAppUserSchemaPropertyArrayOneOfOutput() AppUserSchemaPropertyArrayOneOfOutput {
	return i.ToAppUserSchemaPropertyArrayOneOfOutputWithContext(context.Background())
}

func (i AppUserSchemaPropertyArrayOneOfArgs) ToAppUserSchemaPropertyArrayOneOfOutputWithContext(ctx context.Context) AppUserSchemaPropertyArrayOneOfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppUserSchemaPropertyArrayOneOfOutput)
}

// AppUserSchemaPropertyArrayOneOfArrayInput is an input type that accepts AppUserSchemaPropertyArrayOneOfArray and AppUserSchemaPropertyArrayOneOfArrayOutput values.
// You can construct a concrete instance of `AppUserSchemaPropertyArrayOneOfArrayInput` via:
//
//	AppUserSchemaPropertyArrayOneOfArray{ AppUserSchemaPropertyArrayOneOfArgs{...} }
type AppUserSchemaPropertyArrayOneOfArrayInput interface {
	pulumi.Input

	ToAppUserSchemaPropertyArrayOneOfArrayOutput() AppUserSchemaPropertyArrayOneOfArrayOutput
	ToAppUserSchemaPropertyArrayOneOfArrayOutputWithContext(context.Context) AppUserSchemaPropertyArrayOneOfArrayOutput
}

type AppUserSchemaPropertyArrayOneOfArray []AppUserSchemaPropertyArrayOneOfInput

func (AppUserSchemaPropertyArrayOneOfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppUserSchemaPropertyArrayOneOf)(nil)).Elem()
}

func (i AppUserSchemaPropertyArrayOneOfArray) ToAppUserSchemaPropertyArrayOneOfArrayOutput() AppUserSchemaPropertyArrayOneOfArrayOutput {
	return i.ToAppUserSchemaPropertyArrayOneOfArrayOutputWithContext(context.Background())
}

func (i AppUserSchemaPropertyArrayOneOfArray) ToAppUserSchemaPropertyArrayOneOfArrayOutputWithContext(ctx context.Context) AppUserSchemaPropertyArrayOneOfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppUserSchemaPropertyArrayOneOfArrayOutput)
}

type AppUserSchemaPropertyArrayOneOfOutput struct{ *pulumi.OutputState }

func (AppUserSchemaPropertyArrayOneOfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppUserSchemaPropertyArrayOneOf)(nil)).Elem()
}

func (o AppUserSchemaPropertyArrayOneOfOutput) ToAppUserSchemaPropertyArrayOneOfOutput() AppUserSchemaPropertyArrayOneOfOutput {
	return o
}

func (o AppUserSchemaPropertyArrayOneOfOutput) ToAppUserSchemaPropertyArrayOneOfOutputWithContext(ctx context.Context) AppUserSchemaPropertyArrayOneOfOutput {
	return o
}

// value mapping to member of `arrayEnum`.
func (o AppUserSchemaPropertyArrayOneOfOutput) Const() pulumi.StringOutput {
	return o.ApplyT(func(v AppUserSchemaPropertyArrayOneOf) string { return v.Const }).(pulumi.StringOutput)
}

// display name for the enum value.
func (o AppUserSchemaPropertyArrayOneOfOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AppUserSchemaPropertyArrayOneOf) string { return v.Title }).(pulumi.StringOutput)
}

type AppUserSchemaPropertyArrayOneOfArrayOutput struct{ *pulumi.OutputState }

func (AppUserSchemaPropertyArrayOneOfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppUserSchemaPropertyArrayOneOf)(nil)).Elem()
}

func (o AppUserSchemaPropertyArrayOneOfArrayOutput) ToAppUserSchemaPropertyArrayOneOfArrayOutput() AppUserSchemaPropertyArrayOneOfArrayOutput {
	return o
}

func (o AppUserSchemaPropertyArrayOneOfArrayOutput) ToAppUserSchemaPropertyArrayOneOfArrayOutputWithContext(ctx context.Context) AppUserSchemaPropertyArrayOneOfArrayOutput {
	return o
}

func (o AppUserSchemaPropertyArrayOneOfArrayOutput) Index(i pulumi.IntInput) AppUserSchemaPropertyArrayOneOfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppUserSchemaPropertyArrayOneOf {
		return vs[0].([]AppUserSchemaPropertyArrayOneOf)[vs[1].(int)]
	}).(AppUserSchemaPropertyArrayOneOfOutput)
}

type AppUserSchemaPropertyOneOf struct {
	// value mapping to member of `arrayEnum`.
	Const string `pulumi:"const"`
	// display name for the enum value.
	Title string `pulumi:"title"`
}

// AppUserSchemaPropertyOneOfInput is an input type that accepts AppUserSchemaPropertyOneOfArgs and AppUserSchemaPropertyOneOfOutput values.
// You can construct a concrete instance of `AppUserSchemaPropertyOneOfInput` via:
//
//	AppUserSchemaPropertyOneOfArgs{...}
type AppUserSchemaPropertyOneOfInput interface {
	pulumi.Input

	ToAppUserSchemaPropertyOneOfOutput() AppUserSchemaPropertyOneOfOutput
	ToAppUserSchemaPropertyOneOfOutputWithContext(context.Context) AppUserSchemaPropertyOneOfOutput
}

type AppUserSchemaPropertyOneOfArgs struct {
	// value mapping to member of `arrayEnum`.
	Const pulumi.StringInput `pulumi:"const"`
	// display name for the enum value.
	Title pulumi.StringInput `pulumi:"title"`
}

func (AppUserSchemaPropertyOneOfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppUserSchemaPropertyOneOf)(nil)).Elem()
}

func (i AppUserSchemaPropertyOneOfArgs) ToAppUserSchemaPropertyOneOfOutput() AppUserSchemaPropertyOneOfOutput {
	return i.ToAppUserSchemaPropertyOneOfOutputWithContext(context.Background())
}

func (i AppUserSchemaPropertyOneOfArgs) ToAppUserSchemaPropertyOneOfOutputWithContext(ctx context.Context) AppUserSchemaPropertyOneOfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppUserSchemaPropertyOneOfOutput)
}

// AppUserSchemaPropertyOneOfArrayInput is an input type that accepts AppUserSchemaPropertyOneOfArray and AppUserSchemaPropertyOneOfArrayOutput values.
// You can construct a concrete instance of `AppUserSchemaPropertyOneOfArrayInput` via:
//
//	AppUserSchemaPropertyOneOfArray{ AppUserSchemaPropertyOneOfArgs{...} }
type AppUserSchemaPropertyOneOfArrayInput interface {
	pulumi.Input

	ToAppUserSchemaPropertyOneOfArrayOutput() AppUserSchemaPropertyOneOfArrayOutput
	ToAppUserSchemaPropertyOneOfArrayOutputWithContext(context.Context) AppUserSchemaPropertyOneOfArrayOutput
}

type AppUserSchemaPropertyOneOfArray []AppUserSchemaPropertyOneOfInput

func (AppUserSchemaPropertyOneOfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppUserSchemaPropertyOneOf)(nil)).Elem()
}

func (i AppUserSchemaPropertyOneOfArray) ToAppUserSchemaPropertyOneOfArrayOutput() AppUserSchemaPropertyOneOfArrayOutput {
	return i.ToAppUserSchemaPropertyOneOfArrayOutputWithContext(context.Background())
}

func (i AppUserSchemaPropertyOneOfArray) ToAppUserSchemaPropertyOneOfArrayOutputWithContext(ctx context.Context) AppUserSchemaPropertyOneOfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppUserSchemaPropertyOneOfArrayOutput)
}

type AppUserSchemaPropertyOneOfOutput struct{ *pulumi.OutputState }

func (AppUserSchemaPropertyOneOfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppUserSchemaPropertyOneOf)(nil)).Elem()
}

func (o AppUserSchemaPropertyOneOfOutput) ToAppUserSchemaPropertyOneOfOutput() AppUserSchemaPropertyOneOfOutput {
	return o
}

func (o AppUserSchemaPropertyOneOfOutput) ToAppUserSchemaPropertyOneOfOutputWithContext(ctx context.Context) AppUserSchemaPropertyOneOfOutput {
	return o
}

// value mapping to member of `arrayEnum`.
func (o AppUserSchemaPropertyOneOfOutput) Const() pulumi.StringOutput {
	return o.ApplyT(func(v AppUserSchemaPropertyOneOf) string { return v.Const }).(pulumi.StringOutput)
}

// display name for the enum value.
func (o AppUserSchemaPropertyOneOfOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AppUserSchemaPropertyOneOf) string { return v.Title }).(pulumi.StringOutput)
}

type AppUserSchemaPropertyOneOfArrayOutput struct{ *pulumi.OutputState }

func (AppUserSchemaPropertyOneOfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppUserSchemaPropertyOneOf)(nil)).Elem()
}

func (o AppUserSchemaPropertyOneOfArrayOutput) ToAppUserSchemaPropertyOneOfArrayOutput() AppUserSchemaPropertyOneOfArrayOutput {
	return o
}

func (o AppUserSchemaPropertyOneOfArrayOutput) ToAppUserSchemaPropertyOneOfArrayOutputWithContext(ctx context.Context) AppUserSchemaPropertyOneOfArrayOutput {
	return o
}

func (o AppUserSchemaPropertyOneOfArrayOutput) Index(i pulumi.IntInput) AppUserSchemaPropertyOneOfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppUserSchemaPropertyOneOf {
		return vs[0].([]AppUserSchemaPropertyOneOf)[vs[1].(int)]
	}).(AppUserSchemaPropertyOneOfOutput)
}

type DomainDnsRecord struct {
	// TXT record expiration.
	Expiration *string `pulumi:"expiration"`
	// DNS record name.
	Fqdn *string `pulumi:"fqdn"`
	// Record type can be TXT or CNAME.
	RecordType *string `pulumi:"recordType"`
	// DNS verification value
	Values []string `pulumi:"values"`
}

// DomainDnsRecordInput is an input type that accepts DomainDnsRecordArgs and DomainDnsRecordOutput values.
// You can construct a concrete instance of `DomainDnsRecordInput` via:
//
//	DomainDnsRecordArgs{...}
type DomainDnsRecordInput interface {
	pulumi.Input

	ToDomainDnsRecordOutput() DomainDnsRecordOutput
	ToDomainDnsRecordOutputWithContext(context.Context) DomainDnsRecordOutput
}

type DomainDnsRecordArgs struct {
	// TXT record expiration.
	Expiration pulumi.StringPtrInput `pulumi:"expiration"`
	// DNS record name.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Record type can be TXT or CNAME.
	RecordType pulumi.StringPtrInput `pulumi:"recordType"`
	// DNS verification value
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (DomainDnsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDnsRecord)(nil)).Elem()
}

func (i DomainDnsRecordArgs) ToDomainDnsRecordOutput() DomainDnsRecordOutput {
	return i.ToDomainDnsRecordOutputWithContext(context.Background())
}

func (i DomainDnsRecordArgs) ToDomainDnsRecordOutputWithContext(ctx context.Context) DomainDnsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDnsRecordOutput)
}

// DomainDnsRecordArrayInput is an input type that accepts DomainDnsRecordArray and DomainDnsRecordArrayOutput values.
// You can construct a concrete instance of `DomainDnsRecordArrayInput` via:
//
//	DomainDnsRecordArray{ DomainDnsRecordArgs{...} }
type DomainDnsRecordArrayInput interface {
	pulumi.Input

	ToDomainDnsRecordArrayOutput() DomainDnsRecordArrayOutput
	ToDomainDnsRecordArrayOutputWithContext(context.Context) DomainDnsRecordArrayOutput
}

type DomainDnsRecordArray []DomainDnsRecordInput

func (DomainDnsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainDnsRecord)(nil)).Elem()
}

func (i DomainDnsRecordArray) ToDomainDnsRecordArrayOutput() DomainDnsRecordArrayOutput {
	return i.ToDomainDnsRecordArrayOutputWithContext(context.Background())
}

func (i DomainDnsRecordArray) ToDomainDnsRecordArrayOutputWithContext(ctx context.Context) DomainDnsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDnsRecordArrayOutput)
}

type DomainDnsRecordOutput struct{ *pulumi.OutputState }

func (DomainDnsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDnsRecord)(nil)).Elem()
}

func (o DomainDnsRecordOutput) ToDomainDnsRecordOutput() DomainDnsRecordOutput {
	return o
}

func (o DomainDnsRecordOutput) ToDomainDnsRecordOutputWithContext(ctx context.Context) DomainDnsRecordOutput {
	return o
}

// TXT record expiration.
func (o DomainDnsRecordOutput) Expiration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainDnsRecord) *string { return v.Expiration }).(pulumi.StringPtrOutput)
}

// DNS record name.
func (o DomainDnsRecordOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainDnsRecord) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Record type can be TXT or CNAME.
func (o DomainDnsRecordOutput) RecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainDnsRecord) *string { return v.RecordType }).(pulumi.StringPtrOutput)
}

// DNS verification value
func (o DomainDnsRecordOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainDnsRecord) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type DomainDnsRecordArrayOutput struct{ *pulumi.OutputState }

func (DomainDnsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainDnsRecord)(nil)).Elem()
}

func (o DomainDnsRecordArrayOutput) ToDomainDnsRecordArrayOutput() DomainDnsRecordArrayOutput {
	return o
}

func (o DomainDnsRecordArrayOutput) ToDomainDnsRecordArrayOutputWithContext(ctx context.Context) DomainDnsRecordArrayOutput {
	return o
}

func (o DomainDnsRecordArrayOutput) Index(i pulumi.IntInput) DomainDnsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainDnsRecord {
		return vs[0].([]DomainDnsRecord)[vs[1].(int)]
	}).(DomainDnsRecordOutput)
}

type EmailSenderDnsRecord struct {
	// DNS record name.
	Fqdn *string `pulumi:"fqdn"`
	// Record type can be TXT or CNAME.
	RecordType *string `pulumi:"recordType"`
	// DNS verification value
	Value *string `pulumi:"value"`
}

// EmailSenderDnsRecordInput is an input type that accepts EmailSenderDnsRecordArgs and EmailSenderDnsRecordOutput values.
// You can construct a concrete instance of `EmailSenderDnsRecordInput` via:
//
//	EmailSenderDnsRecordArgs{...}
type EmailSenderDnsRecordInput interface {
	pulumi.Input

	ToEmailSenderDnsRecordOutput() EmailSenderDnsRecordOutput
	ToEmailSenderDnsRecordOutputWithContext(context.Context) EmailSenderDnsRecordOutput
}

type EmailSenderDnsRecordArgs struct {
	// DNS record name.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Record type can be TXT or CNAME.
	RecordType pulumi.StringPtrInput `pulumi:"recordType"`
	// DNS verification value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EmailSenderDnsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailSenderDnsRecord)(nil)).Elem()
}

func (i EmailSenderDnsRecordArgs) ToEmailSenderDnsRecordOutput() EmailSenderDnsRecordOutput {
	return i.ToEmailSenderDnsRecordOutputWithContext(context.Background())
}

func (i EmailSenderDnsRecordArgs) ToEmailSenderDnsRecordOutputWithContext(ctx context.Context) EmailSenderDnsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSenderDnsRecordOutput)
}

// EmailSenderDnsRecordArrayInput is an input type that accepts EmailSenderDnsRecordArray and EmailSenderDnsRecordArrayOutput values.
// You can construct a concrete instance of `EmailSenderDnsRecordArrayInput` via:
//
//	EmailSenderDnsRecordArray{ EmailSenderDnsRecordArgs{...} }
type EmailSenderDnsRecordArrayInput interface {
	pulumi.Input

	ToEmailSenderDnsRecordArrayOutput() EmailSenderDnsRecordArrayOutput
	ToEmailSenderDnsRecordArrayOutputWithContext(context.Context) EmailSenderDnsRecordArrayOutput
}

type EmailSenderDnsRecordArray []EmailSenderDnsRecordInput

func (EmailSenderDnsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailSenderDnsRecord)(nil)).Elem()
}

func (i EmailSenderDnsRecordArray) ToEmailSenderDnsRecordArrayOutput() EmailSenderDnsRecordArrayOutput {
	return i.ToEmailSenderDnsRecordArrayOutputWithContext(context.Background())
}

func (i EmailSenderDnsRecordArray) ToEmailSenderDnsRecordArrayOutputWithContext(ctx context.Context) EmailSenderDnsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSenderDnsRecordArrayOutput)
}

type EmailSenderDnsRecordOutput struct{ *pulumi.OutputState }

func (EmailSenderDnsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailSenderDnsRecord)(nil)).Elem()
}

func (o EmailSenderDnsRecordOutput) ToEmailSenderDnsRecordOutput() EmailSenderDnsRecordOutput {
	return o
}

func (o EmailSenderDnsRecordOutput) ToEmailSenderDnsRecordOutputWithContext(ctx context.Context) EmailSenderDnsRecordOutput {
	return o
}

// DNS record name.
func (o EmailSenderDnsRecordOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailSenderDnsRecord) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Record type can be TXT or CNAME.
func (o EmailSenderDnsRecordOutput) RecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailSenderDnsRecord) *string { return v.RecordType }).(pulumi.StringPtrOutput)
}

// DNS verification value
func (o EmailSenderDnsRecordOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailSenderDnsRecord) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EmailSenderDnsRecordArrayOutput struct{ *pulumi.OutputState }

func (EmailSenderDnsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailSenderDnsRecord)(nil)).Elem()
}

func (o EmailSenderDnsRecordArrayOutput) ToEmailSenderDnsRecordArrayOutput() EmailSenderDnsRecordArrayOutput {
	return o
}

func (o EmailSenderDnsRecordArrayOutput) ToEmailSenderDnsRecordArrayOutputWithContext(ctx context.Context) EmailSenderDnsRecordArrayOutput {
	return o
}

func (o EmailSenderDnsRecordArrayOutput) Index(i pulumi.IntInput) EmailSenderDnsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailSenderDnsRecord {
		return vs[0].([]EmailSenderDnsRecord)[vs[1].(int)]
	}).(EmailSenderDnsRecordOutput)
}

type EventHookHeader struct {
	// Key to use for authentication, usually the header name, for example `"Authorization"`.
	Key *string `pulumi:"key"`
	// Authentication secret.
	Value *string `pulumi:"value"`
}

// EventHookHeaderInput is an input type that accepts EventHookHeaderArgs and EventHookHeaderOutput values.
// You can construct a concrete instance of `EventHookHeaderInput` via:
//
//	EventHookHeaderArgs{...}
type EventHookHeaderInput interface {
	pulumi.Input

	ToEventHookHeaderOutput() EventHookHeaderOutput
	ToEventHookHeaderOutputWithContext(context.Context) EventHookHeaderOutput
}

type EventHookHeaderArgs struct {
	// Key to use for authentication, usually the header name, for example `"Authorization"`.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Authentication secret.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EventHookHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHookHeader)(nil)).Elem()
}

func (i EventHookHeaderArgs) ToEventHookHeaderOutput() EventHookHeaderOutput {
	return i.ToEventHookHeaderOutputWithContext(context.Background())
}

func (i EventHookHeaderArgs) ToEventHookHeaderOutputWithContext(ctx context.Context) EventHookHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHookHeaderOutput)
}

// EventHookHeaderArrayInput is an input type that accepts EventHookHeaderArray and EventHookHeaderArrayOutput values.
// You can construct a concrete instance of `EventHookHeaderArrayInput` via:
//
//	EventHookHeaderArray{ EventHookHeaderArgs{...} }
type EventHookHeaderArrayInput interface {
	pulumi.Input

	ToEventHookHeaderArrayOutput() EventHookHeaderArrayOutput
	ToEventHookHeaderArrayOutputWithContext(context.Context) EventHookHeaderArrayOutput
}

type EventHookHeaderArray []EventHookHeaderInput

func (EventHookHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventHookHeader)(nil)).Elem()
}

func (i EventHookHeaderArray) ToEventHookHeaderArrayOutput() EventHookHeaderArrayOutput {
	return i.ToEventHookHeaderArrayOutputWithContext(context.Background())
}

func (i EventHookHeaderArray) ToEventHookHeaderArrayOutputWithContext(ctx context.Context) EventHookHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHookHeaderArrayOutput)
}

type EventHookHeaderOutput struct{ *pulumi.OutputState }

func (EventHookHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHookHeader)(nil)).Elem()
}

func (o EventHookHeaderOutput) ToEventHookHeaderOutput() EventHookHeaderOutput {
	return o
}

func (o EventHookHeaderOutput) ToEventHookHeaderOutputWithContext(ctx context.Context) EventHookHeaderOutput {
	return o
}

// Key to use for authentication, usually the header name, for example `"Authorization"`.
func (o EventHookHeaderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHookHeader) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Authentication secret.
func (o EventHookHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHookHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EventHookHeaderArrayOutput struct{ *pulumi.OutputState }

func (EventHookHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventHookHeader)(nil)).Elem()
}

func (o EventHookHeaderArrayOutput) ToEventHookHeaderArrayOutput() EventHookHeaderArrayOutput {
	return o
}

func (o EventHookHeaderArrayOutput) ToEventHookHeaderArrayOutputWithContext(ctx context.Context) EventHookHeaderArrayOutput {
	return o
}

func (o EventHookHeaderArrayOutput) Index(i pulumi.IntInput) EventHookHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventHookHeader {
		return vs[0].([]EventHookHeader)[vs[1].(int)]
	}).(EventHookHeaderOutput)
}

type GroupSchemaPropertyArrayOneOf struct {
	// value mapping to member of `enum`.
	Const string `pulumi:"const"`
	// display name for the enum value.
	Title string `pulumi:"title"`
}

// GroupSchemaPropertyArrayOneOfInput is an input type that accepts GroupSchemaPropertyArrayOneOfArgs and GroupSchemaPropertyArrayOneOfOutput values.
// You can construct a concrete instance of `GroupSchemaPropertyArrayOneOfInput` via:
//
//	GroupSchemaPropertyArrayOneOfArgs{...}
type GroupSchemaPropertyArrayOneOfInput interface {
	pulumi.Input

	ToGroupSchemaPropertyArrayOneOfOutput() GroupSchemaPropertyArrayOneOfOutput
	ToGroupSchemaPropertyArrayOneOfOutputWithContext(context.Context) GroupSchemaPropertyArrayOneOfOutput
}

type GroupSchemaPropertyArrayOneOfArgs struct {
	// value mapping to member of `enum`.
	Const pulumi.StringInput `pulumi:"const"`
	// display name for the enum value.
	Title pulumi.StringInput `pulumi:"title"`
}

func (GroupSchemaPropertyArrayOneOfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSchemaPropertyArrayOneOf)(nil)).Elem()
}

func (i GroupSchemaPropertyArrayOneOfArgs) ToGroupSchemaPropertyArrayOneOfOutput() GroupSchemaPropertyArrayOneOfOutput {
	return i.ToGroupSchemaPropertyArrayOneOfOutputWithContext(context.Background())
}

func (i GroupSchemaPropertyArrayOneOfArgs) ToGroupSchemaPropertyArrayOneOfOutputWithContext(ctx context.Context) GroupSchemaPropertyArrayOneOfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSchemaPropertyArrayOneOfOutput)
}

// GroupSchemaPropertyArrayOneOfArrayInput is an input type that accepts GroupSchemaPropertyArrayOneOfArray and GroupSchemaPropertyArrayOneOfArrayOutput values.
// You can construct a concrete instance of `GroupSchemaPropertyArrayOneOfArrayInput` via:
//
//	GroupSchemaPropertyArrayOneOfArray{ GroupSchemaPropertyArrayOneOfArgs{...} }
type GroupSchemaPropertyArrayOneOfArrayInput interface {
	pulumi.Input

	ToGroupSchemaPropertyArrayOneOfArrayOutput() GroupSchemaPropertyArrayOneOfArrayOutput
	ToGroupSchemaPropertyArrayOneOfArrayOutputWithContext(context.Context) GroupSchemaPropertyArrayOneOfArrayOutput
}

type GroupSchemaPropertyArrayOneOfArray []GroupSchemaPropertyArrayOneOfInput

func (GroupSchemaPropertyArrayOneOfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupSchemaPropertyArrayOneOf)(nil)).Elem()
}

func (i GroupSchemaPropertyArrayOneOfArray) ToGroupSchemaPropertyArrayOneOfArrayOutput() GroupSchemaPropertyArrayOneOfArrayOutput {
	return i.ToGroupSchemaPropertyArrayOneOfArrayOutputWithContext(context.Background())
}

func (i GroupSchemaPropertyArrayOneOfArray) ToGroupSchemaPropertyArrayOneOfArrayOutputWithContext(ctx context.Context) GroupSchemaPropertyArrayOneOfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSchemaPropertyArrayOneOfArrayOutput)
}

type GroupSchemaPropertyArrayOneOfOutput struct{ *pulumi.OutputState }

func (GroupSchemaPropertyArrayOneOfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSchemaPropertyArrayOneOf)(nil)).Elem()
}

func (o GroupSchemaPropertyArrayOneOfOutput) ToGroupSchemaPropertyArrayOneOfOutput() GroupSchemaPropertyArrayOneOfOutput {
	return o
}

func (o GroupSchemaPropertyArrayOneOfOutput) ToGroupSchemaPropertyArrayOneOfOutputWithContext(ctx context.Context) GroupSchemaPropertyArrayOneOfOutput {
	return o
}

// value mapping to member of `enum`.
func (o GroupSchemaPropertyArrayOneOfOutput) Const() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSchemaPropertyArrayOneOf) string { return v.Const }).(pulumi.StringOutput)
}

// display name for the enum value.
func (o GroupSchemaPropertyArrayOneOfOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSchemaPropertyArrayOneOf) string { return v.Title }).(pulumi.StringOutput)
}

type GroupSchemaPropertyArrayOneOfArrayOutput struct{ *pulumi.OutputState }

func (GroupSchemaPropertyArrayOneOfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupSchemaPropertyArrayOneOf)(nil)).Elem()
}

func (o GroupSchemaPropertyArrayOneOfArrayOutput) ToGroupSchemaPropertyArrayOneOfArrayOutput() GroupSchemaPropertyArrayOneOfArrayOutput {
	return o
}

func (o GroupSchemaPropertyArrayOneOfArrayOutput) ToGroupSchemaPropertyArrayOneOfArrayOutputWithContext(ctx context.Context) GroupSchemaPropertyArrayOneOfArrayOutput {
	return o
}

func (o GroupSchemaPropertyArrayOneOfArrayOutput) Index(i pulumi.IntInput) GroupSchemaPropertyArrayOneOfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupSchemaPropertyArrayOneOf {
		return vs[0].([]GroupSchemaPropertyArrayOneOf)[vs[1].(int)]
	}).(GroupSchemaPropertyArrayOneOfOutput)
}

type GroupSchemaPropertyMasterOverridePriority struct {
	// Type of profile source.
	Type *string `pulumi:"type"`
	// ID of profile source.
	Value string `pulumi:"value"`
}

// GroupSchemaPropertyMasterOverridePriorityInput is an input type that accepts GroupSchemaPropertyMasterOverridePriorityArgs and GroupSchemaPropertyMasterOverridePriorityOutput values.
// You can construct a concrete instance of `GroupSchemaPropertyMasterOverridePriorityInput` via:
//
//	GroupSchemaPropertyMasterOverridePriorityArgs{...}
type GroupSchemaPropertyMasterOverridePriorityInput interface {
	pulumi.Input

	ToGroupSchemaPropertyMasterOverridePriorityOutput() GroupSchemaPropertyMasterOverridePriorityOutput
	ToGroupSchemaPropertyMasterOverridePriorityOutputWithContext(context.Context) GroupSchemaPropertyMasterOverridePriorityOutput
}

type GroupSchemaPropertyMasterOverridePriorityArgs struct {
	// Type of profile source.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// ID of profile source.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GroupSchemaPropertyMasterOverridePriorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSchemaPropertyMasterOverridePriority)(nil)).Elem()
}

func (i GroupSchemaPropertyMasterOverridePriorityArgs) ToGroupSchemaPropertyMasterOverridePriorityOutput() GroupSchemaPropertyMasterOverridePriorityOutput {
	return i.ToGroupSchemaPropertyMasterOverridePriorityOutputWithContext(context.Background())
}

func (i GroupSchemaPropertyMasterOverridePriorityArgs) ToGroupSchemaPropertyMasterOverridePriorityOutputWithContext(ctx context.Context) GroupSchemaPropertyMasterOverridePriorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSchemaPropertyMasterOverridePriorityOutput)
}

// GroupSchemaPropertyMasterOverridePriorityArrayInput is an input type that accepts GroupSchemaPropertyMasterOverridePriorityArray and GroupSchemaPropertyMasterOverridePriorityArrayOutput values.
// You can construct a concrete instance of `GroupSchemaPropertyMasterOverridePriorityArrayInput` via:
//
//	GroupSchemaPropertyMasterOverridePriorityArray{ GroupSchemaPropertyMasterOverridePriorityArgs{...} }
type GroupSchemaPropertyMasterOverridePriorityArrayInput interface {
	pulumi.Input

	ToGroupSchemaPropertyMasterOverridePriorityArrayOutput() GroupSchemaPropertyMasterOverridePriorityArrayOutput
	ToGroupSchemaPropertyMasterOverridePriorityArrayOutputWithContext(context.Context) GroupSchemaPropertyMasterOverridePriorityArrayOutput
}

type GroupSchemaPropertyMasterOverridePriorityArray []GroupSchemaPropertyMasterOverridePriorityInput

func (GroupSchemaPropertyMasterOverridePriorityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupSchemaPropertyMasterOverridePriority)(nil)).Elem()
}

func (i GroupSchemaPropertyMasterOverridePriorityArray) ToGroupSchemaPropertyMasterOverridePriorityArrayOutput() GroupSchemaPropertyMasterOverridePriorityArrayOutput {
	return i.ToGroupSchemaPropertyMasterOverridePriorityArrayOutputWithContext(context.Background())
}

func (i GroupSchemaPropertyMasterOverridePriorityArray) ToGroupSchemaPropertyMasterOverridePriorityArrayOutputWithContext(ctx context.Context) GroupSchemaPropertyMasterOverridePriorityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSchemaPropertyMasterOverridePriorityArrayOutput)
}

type GroupSchemaPropertyMasterOverridePriorityOutput struct{ *pulumi.OutputState }

func (GroupSchemaPropertyMasterOverridePriorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSchemaPropertyMasterOverridePriority)(nil)).Elem()
}

func (o GroupSchemaPropertyMasterOverridePriorityOutput) ToGroupSchemaPropertyMasterOverridePriorityOutput() GroupSchemaPropertyMasterOverridePriorityOutput {
	return o
}

func (o GroupSchemaPropertyMasterOverridePriorityOutput) ToGroupSchemaPropertyMasterOverridePriorityOutputWithContext(ctx context.Context) GroupSchemaPropertyMasterOverridePriorityOutput {
	return o
}

// Type of profile source.
func (o GroupSchemaPropertyMasterOverridePriorityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSchemaPropertyMasterOverridePriority) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// ID of profile source.
func (o GroupSchemaPropertyMasterOverridePriorityOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSchemaPropertyMasterOverridePriority) string { return v.Value }).(pulumi.StringOutput)
}

type GroupSchemaPropertyMasterOverridePriorityArrayOutput struct{ *pulumi.OutputState }

func (GroupSchemaPropertyMasterOverridePriorityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupSchemaPropertyMasterOverridePriority)(nil)).Elem()
}

func (o GroupSchemaPropertyMasterOverridePriorityArrayOutput) ToGroupSchemaPropertyMasterOverridePriorityArrayOutput() GroupSchemaPropertyMasterOverridePriorityArrayOutput {
	return o
}

func (o GroupSchemaPropertyMasterOverridePriorityArrayOutput) ToGroupSchemaPropertyMasterOverridePriorityArrayOutputWithContext(ctx context.Context) GroupSchemaPropertyMasterOverridePriorityArrayOutput {
	return o
}

func (o GroupSchemaPropertyMasterOverridePriorityArrayOutput) Index(i pulumi.IntInput) GroupSchemaPropertyMasterOverridePriorityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupSchemaPropertyMasterOverridePriority {
		return vs[0].([]GroupSchemaPropertyMasterOverridePriority)[vs[1].(int)]
	}).(GroupSchemaPropertyMasterOverridePriorityOutput)
}

type GroupSchemaPropertyOneOf struct {
	// value mapping to member of `enum`.
	Const string `pulumi:"const"`
	// display name for the enum value.
	Title string `pulumi:"title"`
}

// GroupSchemaPropertyOneOfInput is an input type that accepts GroupSchemaPropertyOneOfArgs and GroupSchemaPropertyOneOfOutput values.
// You can construct a concrete instance of `GroupSchemaPropertyOneOfInput` via:
//
//	GroupSchemaPropertyOneOfArgs{...}
type GroupSchemaPropertyOneOfInput interface {
	pulumi.Input

	ToGroupSchemaPropertyOneOfOutput() GroupSchemaPropertyOneOfOutput
	ToGroupSchemaPropertyOneOfOutputWithContext(context.Context) GroupSchemaPropertyOneOfOutput
}

type GroupSchemaPropertyOneOfArgs struct {
	// value mapping to member of `enum`.
	Const pulumi.StringInput `pulumi:"const"`
	// display name for the enum value.
	Title pulumi.StringInput `pulumi:"title"`
}

func (GroupSchemaPropertyOneOfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSchemaPropertyOneOf)(nil)).Elem()
}

func (i GroupSchemaPropertyOneOfArgs) ToGroupSchemaPropertyOneOfOutput() GroupSchemaPropertyOneOfOutput {
	return i.ToGroupSchemaPropertyOneOfOutputWithContext(context.Background())
}

func (i GroupSchemaPropertyOneOfArgs) ToGroupSchemaPropertyOneOfOutputWithContext(ctx context.Context) GroupSchemaPropertyOneOfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSchemaPropertyOneOfOutput)
}

// GroupSchemaPropertyOneOfArrayInput is an input type that accepts GroupSchemaPropertyOneOfArray and GroupSchemaPropertyOneOfArrayOutput values.
// You can construct a concrete instance of `GroupSchemaPropertyOneOfArrayInput` via:
//
//	GroupSchemaPropertyOneOfArray{ GroupSchemaPropertyOneOfArgs{...} }
type GroupSchemaPropertyOneOfArrayInput interface {
	pulumi.Input

	ToGroupSchemaPropertyOneOfArrayOutput() GroupSchemaPropertyOneOfArrayOutput
	ToGroupSchemaPropertyOneOfArrayOutputWithContext(context.Context) GroupSchemaPropertyOneOfArrayOutput
}

type GroupSchemaPropertyOneOfArray []GroupSchemaPropertyOneOfInput

func (GroupSchemaPropertyOneOfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupSchemaPropertyOneOf)(nil)).Elem()
}

func (i GroupSchemaPropertyOneOfArray) ToGroupSchemaPropertyOneOfArrayOutput() GroupSchemaPropertyOneOfArrayOutput {
	return i.ToGroupSchemaPropertyOneOfArrayOutputWithContext(context.Background())
}

func (i GroupSchemaPropertyOneOfArray) ToGroupSchemaPropertyOneOfArrayOutputWithContext(ctx context.Context) GroupSchemaPropertyOneOfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSchemaPropertyOneOfArrayOutput)
}

type GroupSchemaPropertyOneOfOutput struct{ *pulumi.OutputState }

func (GroupSchemaPropertyOneOfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSchemaPropertyOneOf)(nil)).Elem()
}

func (o GroupSchemaPropertyOneOfOutput) ToGroupSchemaPropertyOneOfOutput() GroupSchemaPropertyOneOfOutput {
	return o
}

func (o GroupSchemaPropertyOneOfOutput) ToGroupSchemaPropertyOneOfOutputWithContext(ctx context.Context) GroupSchemaPropertyOneOfOutput {
	return o
}

// value mapping to member of `enum`.
func (o GroupSchemaPropertyOneOfOutput) Const() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSchemaPropertyOneOf) string { return v.Const }).(pulumi.StringOutput)
}

// display name for the enum value.
func (o GroupSchemaPropertyOneOfOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSchemaPropertyOneOf) string { return v.Title }).(pulumi.StringOutput)
}

type GroupSchemaPropertyOneOfArrayOutput struct{ *pulumi.OutputState }

func (GroupSchemaPropertyOneOfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupSchemaPropertyOneOf)(nil)).Elem()
}

func (o GroupSchemaPropertyOneOfArrayOutput) ToGroupSchemaPropertyOneOfArrayOutput() GroupSchemaPropertyOneOfArrayOutput {
	return o
}

func (o GroupSchemaPropertyOneOfArrayOutput) ToGroupSchemaPropertyOneOfArrayOutputWithContext(ctx context.Context) GroupSchemaPropertyOneOfArrayOutput {
	return o
}

func (o GroupSchemaPropertyOneOfArrayOutput) Index(i pulumi.IntInput) GroupSchemaPropertyOneOfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupSchemaPropertyOneOf {
		return vs[0].([]GroupSchemaPropertyOneOf)[vs[1].(int)]
	}).(GroupSchemaPropertyOneOfOutput)
}

type PolicyRuleProfileEnrollmentProfileAttribute struct {
	// A display-friendly label for this property
	Label string `pulumi:"label"`
	// The name of a User Profile property
	Name string `pulumi:"name"`
	// Indicates if this property is required for enrollment. Default is `false`.
	Required *bool `pulumi:"required"`
}

// PolicyRuleProfileEnrollmentProfileAttributeInput is an input type that accepts PolicyRuleProfileEnrollmentProfileAttributeArgs and PolicyRuleProfileEnrollmentProfileAttributeOutput values.
// You can construct a concrete instance of `PolicyRuleProfileEnrollmentProfileAttributeInput` via:
//
//	PolicyRuleProfileEnrollmentProfileAttributeArgs{...}
type PolicyRuleProfileEnrollmentProfileAttributeInput interface {
	pulumi.Input

	ToPolicyRuleProfileEnrollmentProfileAttributeOutput() PolicyRuleProfileEnrollmentProfileAttributeOutput
	ToPolicyRuleProfileEnrollmentProfileAttributeOutputWithContext(context.Context) PolicyRuleProfileEnrollmentProfileAttributeOutput
}

type PolicyRuleProfileEnrollmentProfileAttributeArgs struct {
	// A display-friendly label for this property
	Label pulumi.StringInput `pulumi:"label"`
	// The name of a User Profile property
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates if this property is required for enrollment. Default is `false`.
	Required pulumi.BoolPtrInput `pulumi:"required"`
}

func (PolicyRuleProfileEnrollmentProfileAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyRuleProfileEnrollmentProfileAttribute)(nil)).Elem()
}

func (i PolicyRuleProfileEnrollmentProfileAttributeArgs) ToPolicyRuleProfileEnrollmentProfileAttributeOutput() PolicyRuleProfileEnrollmentProfileAttributeOutput {
	return i.ToPolicyRuleProfileEnrollmentProfileAttributeOutputWithContext(context.Background())
}

func (i PolicyRuleProfileEnrollmentProfileAttributeArgs) ToPolicyRuleProfileEnrollmentProfileAttributeOutputWithContext(ctx context.Context) PolicyRuleProfileEnrollmentProfileAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRuleProfileEnrollmentProfileAttributeOutput)
}

// PolicyRuleProfileEnrollmentProfileAttributeArrayInput is an input type that accepts PolicyRuleProfileEnrollmentProfileAttributeArray and PolicyRuleProfileEnrollmentProfileAttributeArrayOutput values.
// You can construct a concrete instance of `PolicyRuleProfileEnrollmentProfileAttributeArrayInput` via:
//
//	PolicyRuleProfileEnrollmentProfileAttributeArray{ PolicyRuleProfileEnrollmentProfileAttributeArgs{...} }
type PolicyRuleProfileEnrollmentProfileAttributeArrayInput interface {
	pulumi.Input

	ToPolicyRuleProfileEnrollmentProfileAttributeArrayOutput() PolicyRuleProfileEnrollmentProfileAttributeArrayOutput
	ToPolicyRuleProfileEnrollmentProfileAttributeArrayOutputWithContext(context.Context) PolicyRuleProfileEnrollmentProfileAttributeArrayOutput
}

type PolicyRuleProfileEnrollmentProfileAttributeArray []PolicyRuleProfileEnrollmentProfileAttributeInput

func (PolicyRuleProfileEnrollmentProfileAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyRuleProfileEnrollmentProfileAttribute)(nil)).Elem()
}

func (i PolicyRuleProfileEnrollmentProfileAttributeArray) ToPolicyRuleProfileEnrollmentProfileAttributeArrayOutput() PolicyRuleProfileEnrollmentProfileAttributeArrayOutput {
	return i.ToPolicyRuleProfileEnrollmentProfileAttributeArrayOutputWithContext(context.Background())
}

func (i PolicyRuleProfileEnrollmentProfileAttributeArray) ToPolicyRuleProfileEnrollmentProfileAttributeArrayOutputWithContext(ctx context.Context) PolicyRuleProfileEnrollmentProfileAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRuleProfileEnrollmentProfileAttributeArrayOutput)
}

type PolicyRuleProfileEnrollmentProfileAttributeOutput struct{ *pulumi.OutputState }

func (PolicyRuleProfileEnrollmentProfileAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyRuleProfileEnrollmentProfileAttribute)(nil)).Elem()
}

func (o PolicyRuleProfileEnrollmentProfileAttributeOutput) ToPolicyRuleProfileEnrollmentProfileAttributeOutput() PolicyRuleProfileEnrollmentProfileAttributeOutput {
	return o
}

func (o PolicyRuleProfileEnrollmentProfileAttributeOutput) ToPolicyRuleProfileEnrollmentProfileAttributeOutputWithContext(ctx context.Context) PolicyRuleProfileEnrollmentProfileAttributeOutput {
	return o
}

// A display-friendly label for this property
func (o PolicyRuleProfileEnrollmentProfileAttributeOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyRuleProfileEnrollmentProfileAttribute) string { return v.Label }).(pulumi.StringOutput)
}

// The name of a User Profile property
func (o PolicyRuleProfileEnrollmentProfileAttributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyRuleProfileEnrollmentProfileAttribute) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates if this property is required for enrollment. Default is `false`.
func (o PolicyRuleProfileEnrollmentProfileAttributeOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyRuleProfileEnrollmentProfileAttribute) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

type PolicyRuleProfileEnrollmentProfileAttributeArrayOutput struct{ *pulumi.OutputState }

func (PolicyRuleProfileEnrollmentProfileAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyRuleProfileEnrollmentProfileAttribute)(nil)).Elem()
}

func (o PolicyRuleProfileEnrollmentProfileAttributeArrayOutput) ToPolicyRuleProfileEnrollmentProfileAttributeArrayOutput() PolicyRuleProfileEnrollmentProfileAttributeArrayOutput {
	return o
}

func (o PolicyRuleProfileEnrollmentProfileAttributeArrayOutput) ToPolicyRuleProfileEnrollmentProfileAttributeArrayOutputWithContext(ctx context.Context) PolicyRuleProfileEnrollmentProfileAttributeArrayOutput {
	return o
}

func (o PolicyRuleProfileEnrollmentProfileAttributeArrayOutput) Index(i pulumi.IntInput) PolicyRuleProfileEnrollmentProfileAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyRuleProfileEnrollmentProfileAttribute {
		return vs[0].([]PolicyRuleProfileEnrollmentProfileAttribute)[vs[1].(int)]
	}).(PolicyRuleProfileEnrollmentProfileAttributeOutput)
}

type TemplateSmsTranslation struct {
	// The language to map the template to.
	Language string `pulumi:"language"`
	// The SMS message.
	Template string `pulumi:"template"`
}

// TemplateSmsTranslationInput is an input type that accepts TemplateSmsTranslationArgs and TemplateSmsTranslationOutput values.
// You can construct a concrete instance of `TemplateSmsTranslationInput` via:
//
//	TemplateSmsTranslationArgs{...}
type TemplateSmsTranslationInput interface {
	pulumi.Input

	ToTemplateSmsTranslationOutput() TemplateSmsTranslationOutput
	ToTemplateSmsTranslationOutputWithContext(context.Context) TemplateSmsTranslationOutput
}

type TemplateSmsTranslationArgs struct {
	// The language to map the template to.
	Language pulumi.StringInput `pulumi:"language"`
	// The SMS message.
	Template pulumi.StringInput `pulumi:"template"`
}

func (TemplateSmsTranslationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSmsTranslation)(nil)).Elem()
}

func (i TemplateSmsTranslationArgs) ToTemplateSmsTranslationOutput() TemplateSmsTranslationOutput {
	return i.ToTemplateSmsTranslationOutputWithContext(context.Background())
}

func (i TemplateSmsTranslationArgs) ToTemplateSmsTranslationOutputWithContext(ctx context.Context) TemplateSmsTranslationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSmsTranslationOutput)
}

// TemplateSmsTranslationArrayInput is an input type that accepts TemplateSmsTranslationArray and TemplateSmsTranslationArrayOutput values.
// You can construct a concrete instance of `TemplateSmsTranslationArrayInput` via:
//
//	TemplateSmsTranslationArray{ TemplateSmsTranslationArgs{...} }
type TemplateSmsTranslationArrayInput interface {
	pulumi.Input

	ToTemplateSmsTranslationArrayOutput() TemplateSmsTranslationArrayOutput
	ToTemplateSmsTranslationArrayOutputWithContext(context.Context) TemplateSmsTranslationArrayOutput
}

type TemplateSmsTranslationArray []TemplateSmsTranslationInput

func (TemplateSmsTranslationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSmsTranslation)(nil)).Elem()
}

func (i TemplateSmsTranslationArray) ToTemplateSmsTranslationArrayOutput() TemplateSmsTranslationArrayOutput {
	return i.ToTemplateSmsTranslationArrayOutputWithContext(context.Background())
}

func (i TemplateSmsTranslationArray) ToTemplateSmsTranslationArrayOutputWithContext(ctx context.Context) TemplateSmsTranslationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSmsTranslationArrayOutput)
}

type TemplateSmsTranslationOutput struct{ *pulumi.OutputState }

func (TemplateSmsTranslationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSmsTranslation)(nil)).Elem()
}

func (o TemplateSmsTranslationOutput) ToTemplateSmsTranslationOutput() TemplateSmsTranslationOutput {
	return o
}

func (o TemplateSmsTranslationOutput) ToTemplateSmsTranslationOutputWithContext(ctx context.Context) TemplateSmsTranslationOutput {
	return o
}

// The language to map the template to.
func (o TemplateSmsTranslationOutput) Language() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateSmsTranslation) string { return v.Language }).(pulumi.StringOutput)
}

// The SMS message.
func (o TemplateSmsTranslationOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateSmsTranslation) string { return v.Template }).(pulumi.StringOutput)
}

type TemplateSmsTranslationArrayOutput struct{ *pulumi.OutputState }

func (TemplateSmsTranslationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSmsTranslation)(nil)).Elem()
}

func (o TemplateSmsTranslationArrayOutput) ToTemplateSmsTranslationArrayOutput() TemplateSmsTranslationArrayOutput {
	return o
}

func (o TemplateSmsTranslationArrayOutput) ToTemplateSmsTranslationArrayOutputWithContext(ctx context.Context) TemplateSmsTranslationArrayOutput {
	return o
}

func (o TemplateSmsTranslationArrayOutput) Index(i pulumi.IntInput) TemplateSmsTranslationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateSmsTranslation {
		return vs[0].([]TemplateSmsTranslation)[vs[1].(int)]
	}).(TemplateSmsTranslationOutput)
}

type UserSchemaPropertyArrayOneOf struct {
	// value mapping to member of `enum`.
	Const string `pulumi:"const"`
	// display name for the enum value.
	Title string `pulumi:"title"`
}

// UserSchemaPropertyArrayOneOfInput is an input type that accepts UserSchemaPropertyArrayOneOfArgs and UserSchemaPropertyArrayOneOfOutput values.
// You can construct a concrete instance of `UserSchemaPropertyArrayOneOfInput` via:
//
//	UserSchemaPropertyArrayOneOfArgs{...}
type UserSchemaPropertyArrayOneOfInput interface {
	pulumi.Input

	ToUserSchemaPropertyArrayOneOfOutput() UserSchemaPropertyArrayOneOfOutput
	ToUserSchemaPropertyArrayOneOfOutputWithContext(context.Context) UserSchemaPropertyArrayOneOfOutput
}

type UserSchemaPropertyArrayOneOfArgs struct {
	// value mapping to member of `enum`.
	Const pulumi.StringInput `pulumi:"const"`
	// display name for the enum value.
	Title pulumi.StringInput `pulumi:"title"`
}

func (UserSchemaPropertyArrayOneOfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSchemaPropertyArrayOneOf)(nil)).Elem()
}

func (i UserSchemaPropertyArrayOneOfArgs) ToUserSchemaPropertyArrayOneOfOutput() UserSchemaPropertyArrayOneOfOutput {
	return i.ToUserSchemaPropertyArrayOneOfOutputWithContext(context.Background())
}

func (i UserSchemaPropertyArrayOneOfArgs) ToUserSchemaPropertyArrayOneOfOutputWithContext(ctx context.Context) UserSchemaPropertyArrayOneOfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSchemaPropertyArrayOneOfOutput)
}

// UserSchemaPropertyArrayOneOfArrayInput is an input type that accepts UserSchemaPropertyArrayOneOfArray and UserSchemaPropertyArrayOneOfArrayOutput values.
// You can construct a concrete instance of `UserSchemaPropertyArrayOneOfArrayInput` via:
//
//	UserSchemaPropertyArrayOneOfArray{ UserSchemaPropertyArrayOneOfArgs{...} }
type UserSchemaPropertyArrayOneOfArrayInput interface {
	pulumi.Input

	ToUserSchemaPropertyArrayOneOfArrayOutput() UserSchemaPropertyArrayOneOfArrayOutput
	ToUserSchemaPropertyArrayOneOfArrayOutputWithContext(context.Context) UserSchemaPropertyArrayOneOfArrayOutput
}

type UserSchemaPropertyArrayOneOfArray []UserSchemaPropertyArrayOneOfInput

func (UserSchemaPropertyArrayOneOfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSchemaPropertyArrayOneOf)(nil)).Elem()
}

func (i UserSchemaPropertyArrayOneOfArray) ToUserSchemaPropertyArrayOneOfArrayOutput() UserSchemaPropertyArrayOneOfArrayOutput {
	return i.ToUserSchemaPropertyArrayOneOfArrayOutputWithContext(context.Background())
}

func (i UserSchemaPropertyArrayOneOfArray) ToUserSchemaPropertyArrayOneOfArrayOutputWithContext(ctx context.Context) UserSchemaPropertyArrayOneOfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSchemaPropertyArrayOneOfArrayOutput)
}

type UserSchemaPropertyArrayOneOfOutput struct{ *pulumi.OutputState }

func (UserSchemaPropertyArrayOneOfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSchemaPropertyArrayOneOf)(nil)).Elem()
}

func (o UserSchemaPropertyArrayOneOfOutput) ToUserSchemaPropertyArrayOneOfOutput() UserSchemaPropertyArrayOneOfOutput {
	return o
}

func (o UserSchemaPropertyArrayOneOfOutput) ToUserSchemaPropertyArrayOneOfOutputWithContext(ctx context.Context) UserSchemaPropertyArrayOneOfOutput {
	return o
}

// value mapping to member of `enum`.
func (o UserSchemaPropertyArrayOneOfOutput) Const() pulumi.StringOutput {
	return o.ApplyT(func(v UserSchemaPropertyArrayOneOf) string { return v.Const }).(pulumi.StringOutput)
}

// display name for the enum value.
func (o UserSchemaPropertyArrayOneOfOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v UserSchemaPropertyArrayOneOf) string { return v.Title }).(pulumi.StringOutput)
}

type UserSchemaPropertyArrayOneOfArrayOutput struct{ *pulumi.OutputState }

func (UserSchemaPropertyArrayOneOfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSchemaPropertyArrayOneOf)(nil)).Elem()
}

func (o UserSchemaPropertyArrayOneOfArrayOutput) ToUserSchemaPropertyArrayOneOfArrayOutput() UserSchemaPropertyArrayOneOfArrayOutput {
	return o
}

func (o UserSchemaPropertyArrayOneOfArrayOutput) ToUserSchemaPropertyArrayOneOfArrayOutputWithContext(ctx context.Context) UserSchemaPropertyArrayOneOfArrayOutput {
	return o
}

func (o UserSchemaPropertyArrayOneOfArrayOutput) Index(i pulumi.IntInput) UserSchemaPropertyArrayOneOfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserSchemaPropertyArrayOneOf {
		return vs[0].([]UserSchemaPropertyArrayOneOf)[vs[1].(int)]
	}).(UserSchemaPropertyArrayOneOfOutput)
}

type UserSchemaPropertyMasterOverridePriority struct {
	// Type of profile source.
	Type *string `pulumi:"type"`
	// ID of profile source.
	Value string `pulumi:"value"`
}

// UserSchemaPropertyMasterOverridePriorityInput is an input type that accepts UserSchemaPropertyMasterOverridePriorityArgs and UserSchemaPropertyMasterOverridePriorityOutput values.
// You can construct a concrete instance of `UserSchemaPropertyMasterOverridePriorityInput` via:
//
//	UserSchemaPropertyMasterOverridePriorityArgs{...}
type UserSchemaPropertyMasterOverridePriorityInput interface {
	pulumi.Input

	ToUserSchemaPropertyMasterOverridePriorityOutput() UserSchemaPropertyMasterOverridePriorityOutput
	ToUserSchemaPropertyMasterOverridePriorityOutputWithContext(context.Context) UserSchemaPropertyMasterOverridePriorityOutput
}

type UserSchemaPropertyMasterOverridePriorityArgs struct {
	// Type of profile source.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// ID of profile source.
	Value pulumi.StringInput `pulumi:"value"`
}

func (UserSchemaPropertyMasterOverridePriorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSchemaPropertyMasterOverridePriority)(nil)).Elem()
}

func (i UserSchemaPropertyMasterOverridePriorityArgs) ToUserSchemaPropertyMasterOverridePriorityOutput() UserSchemaPropertyMasterOverridePriorityOutput {
	return i.ToUserSchemaPropertyMasterOverridePriorityOutputWithContext(context.Background())
}

func (i UserSchemaPropertyMasterOverridePriorityArgs) ToUserSchemaPropertyMasterOverridePriorityOutputWithContext(ctx context.Context) UserSchemaPropertyMasterOverridePriorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSchemaPropertyMasterOverridePriorityOutput)
}

// UserSchemaPropertyMasterOverridePriorityArrayInput is an input type that accepts UserSchemaPropertyMasterOverridePriorityArray and UserSchemaPropertyMasterOverridePriorityArrayOutput values.
// You can construct a concrete instance of `UserSchemaPropertyMasterOverridePriorityArrayInput` via:
//
//	UserSchemaPropertyMasterOverridePriorityArray{ UserSchemaPropertyMasterOverridePriorityArgs{...} }
type UserSchemaPropertyMasterOverridePriorityArrayInput interface {
	pulumi.Input

	ToUserSchemaPropertyMasterOverridePriorityArrayOutput() UserSchemaPropertyMasterOverridePriorityArrayOutput
	ToUserSchemaPropertyMasterOverridePriorityArrayOutputWithContext(context.Context) UserSchemaPropertyMasterOverridePriorityArrayOutput
}

type UserSchemaPropertyMasterOverridePriorityArray []UserSchemaPropertyMasterOverridePriorityInput

func (UserSchemaPropertyMasterOverridePriorityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSchemaPropertyMasterOverridePriority)(nil)).Elem()
}

func (i UserSchemaPropertyMasterOverridePriorityArray) ToUserSchemaPropertyMasterOverridePriorityArrayOutput() UserSchemaPropertyMasterOverridePriorityArrayOutput {
	return i.ToUserSchemaPropertyMasterOverridePriorityArrayOutputWithContext(context.Background())
}

func (i UserSchemaPropertyMasterOverridePriorityArray) ToUserSchemaPropertyMasterOverridePriorityArrayOutputWithContext(ctx context.Context) UserSchemaPropertyMasterOverridePriorityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSchemaPropertyMasterOverridePriorityArrayOutput)
}

type UserSchemaPropertyMasterOverridePriorityOutput struct{ *pulumi.OutputState }

func (UserSchemaPropertyMasterOverridePriorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSchemaPropertyMasterOverridePriority)(nil)).Elem()
}

func (o UserSchemaPropertyMasterOverridePriorityOutput) ToUserSchemaPropertyMasterOverridePriorityOutput() UserSchemaPropertyMasterOverridePriorityOutput {
	return o
}

func (o UserSchemaPropertyMasterOverridePriorityOutput) ToUserSchemaPropertyMasterOverridePriorityOutputWithContext(ctx context.Context) UserSchemaPropertyMasterOverridePriorityOutput {
	return o
}

// Type of profile source.
func (o UserSchemaPropertyMasterOverridePriorityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSchemaPropertyMasterOverridePriority) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// ID of profile source.
func (o UserSchemaPropertyMasterOverridePriorityOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v UserSchemaPropertyMasterOverridePriority) string { return v.Value }).(pulumi.StringOutput)
}

type UserSchemaPropertyMasterOverridePriorityArrayOutput struct{ *pulumi.OutputState }

func (UserSchemaPropertyMasterOverridePriorityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSchemaPropertyMasterOverridePriority)(nil)).Elem()
}

func (o UserSchemaPropertyMasterOverridePriorityArrayOutput) ToUserSchemaPropertyMasterOverridePriorityArrayOutput() UserSchemaPropertyMasterOverridePriorityArrayOutput {
	return o
}

func (o UserSchemaPropertyMasterOverridePriorityArrayOutput) ToUserSchemaPropertyMasterOverridePriorityArrayOutputWithContext(ctx context.Context) UserSchemaPropertyMasterOverridePriorityArrayOutput {
	return o
}

func (o UserSchemaPropertyMasterOverridePriorityArrayOutput) Index(i pulumi.IntInput) UserSchemaPropertyMasterOverridePriorityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserSchemaPropertyMasterOverridePriority {
		return vs[0].([]UserSchemaPropertyMasterOverridePriority)[vs[1].(int)]
	}).(UserSchemaPropertyMasterOverridePriorityOutput)
}

type UserSchemaPropertyOneOf struct {
	// value mapping to member of `enum`.
	Const string `pulumi:"const"`
	// display name for the enum value.
	Title string `pulumi:"title"`
}

// UserSchemaPropertyOneOfInput is an input type that accepts UserSchemaPropertyOneOfArgs and UserSchemaPropertyOneOfOutput values.
// You can construct a concrete instance of `UserSchemaPropertyOneOfInput` via:
//
//	UserSchemaPropertyOneOfArgs{...}
type UserSchemaPropertyOneOfInput interface {
	pulumi.Input

	ToUserSchemaPropertyOneOfOutput() UserSchemaPropertyOneOfOutput
	ToUserSchemaPropertyOneOfOutputWithContext(context.Context) UserSchemaPropertyOneOfOutput
}

type UserSchemaPropertyOneOfArgs struct {
	// value mapping to member of `enum`.
	Const pulumi.StringInput `pulumi:"const"`
	// display name for the enum value.
	Title pulumi.StringInput `pulumi:"title"`
}

func (UserSchemaPropertyOneOfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSchemaPropertyOneOf)(nil)).Elem()
}

func (i UserSchemaPropertyOneOfArgs) ToUserSchemaPropertyOneOfOutput() UserSchemaPropertyOneOfOutput {
	return i.ToUserSchemaPropertyOneOfOutputWithContext(context.Background())
}

func (i UserSchemaPropertyOneOfArgs) ToUserSchemaPropertyOneOfOutputWithContext(ctx context.Context) UserSchemaPropertyOneOfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSchemaPropertyOneOfOutput)
}

// UserSchemaPropertyOneOfArrayInput is an input type that accepts UserSchemaPropertyOneOfArray and UserSchemaPropertyOneOfArrayOutput values.
// You can construct a concrete instance of `UserSchemaPropertyOneOfArrayInput` via:
//
//	UserSchemaPropertyOneOfArray{ UserSchemaPropertyOneOfArgs{...} }
type UserSchemaPropertyOneOfArrayInput interface {
	pulumi.Input

	ToUserSchemaPropertyOneOfArrayOutput() UserSchemaPropertyOneOfArrayOutput
	ToUserSchemaPropertyOneOfArrayOutputWithContext(context.Context) UserSchemaPropertyOneOfArrayOutput
}

type UserSchemaPropertyOneOfArray []UserSchemaPropertyOneOfInput

func (UserSchemaPropertyOneOfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSchemaPropertyOneOf)(nil)).Elem()
}

func (i UserSchemaPropertyOneOfArray) ToUserSchemaPropertyOneOfArrayOutput() UserSchemaPropertyOneOfArrayOutput {
	return i.ToUserSchemaPropertyOneOfArrayOutputWithContext(context.Background())
}

func (i UserSchemaPropertyOneOfArray) ToUserSchemaPropertyOneOfArrayOutputWithContext(ctx context.Context) UserSchemaPropertyOneOfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSchemaPropertyOneOfArrayOutput)
}

type UserSchemaPropertyOneOfOutput struct{ *pulumi.OutputState }

func (UserSchemaPropertyOneOfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSchemaPropertyOneOf)(nil)).Elem()
}

func (o UserSchemaPropertyOneOfOutput) ToUserSchemaPropertyOneOfOutput() UserSchemaPropertyOneOfOutput {
	return o
}

func (o UserSchemaPropertyOneOfOutput) ToUserSchemaPropertyOneOfOutputWithContext(ctx context.Context) UserSchemaPropertyOneOfOutput {
	return o
}

// value mapping to member of `enum`.
func (o UserSchemaPropertyOneOfOutput) Const() pulumi.StringOutput {
	return o.ApplyT(func(v UserSchemaPropertyOneOf) string { return v.Const }).(pulumi.StringOutput)
}

// display name for the enum value.
func (o UserSchemaPropertyOneOfOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v UserSchemaPropertyOneOf) string { return v.Title }).(pulumi.StringOutput)
}

type UserSchemaPropertyOneOfArrayOutput struct{ *pulumi.OutputState }

func (UserSchemaPropertyOneOfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSchemaPropertyOneOf)(nil)).Elem()
}

func (o UserSchemaPropertyOneOfArrayOutput) ToUserSchemaPropertyOneOfArrayOutput() UserSchemaPropertyOneOfArrayOutput {
	return o
}

func (o UserSchemaPropertyOneOfArrayOutput) ToUserSchemaPropertyOneOfArrayOutputWithContext(ctx context.Context) UserSchemaPropertyOneOfArrayOutput {
	return o
}

func (o UserSchemaPropertyOneOfArrayOutput) Index(i pulumi.IntInput) UserSchemaPropertyOneOfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserSchemaPropertyOneOf {
		return vs[0].([]UserSchemaPropertyOneOf)[vs[1].(int)]
	}).(UserSchemaPropertyOneOfOutput)
}

type GetAuthServerClaimsClaim struct {
	// Specifies whether to include Claims in the token.
	AlwaysIncludeInToken bool `pulumi:"alwaysIncludeInToken"`
	// Specifies whether the Claim is for an access token (`"RESOURCE"`) or ID token (`"IDENTITY"`).
	ClaimType string `pulumi:"claimType"`
	// ID of the claim.
	Id string `pulumi:"id"`
	// Name of the claim.
	Name string `pulumi:"name"`
	// Specifies the scopes for this Claim.
	Scopes []string `pulumi:"scopes"`
	// Status of the claim.
	Status string `pulumi:"status"`
	// Value of the claim
	Value string `pulumi:"value"`
	// Specifies whether the Claim is an Okta EL expression (`"EXPRESSION"`), a set of groups (`"GROUPS"`), or a system claim (`"SYSTEM"`)
	ValueType string `pulumi:"valueType"`
}

// GetAuthServerClaimsClaimInput is an input type that accepts GetAuthServerClaimsClaimArgs and GetAuthServerClaimsClaimOutput values.
// You can construct a concrete instance of `GetAuthServerClaimsClaimInput` via:
//
//	GetAuthServerClaimsClaimArgs{...}
type GetAuthServerClaimsClaimInput interface {
	pulumi.Input

	ToGetAuthServerClaimsClaimOutput() GetAuthServerClaimsClaimOutput
	ToGetAuthServerClaimsClaimOutputWithContext(context.Context) GetAuthServerClaimsClaimOutput
}

type GetAuthServerClaimsClaimArgs struct {
	// Specifies whether to include Claims in the token.
	AlwaysIncludeInToken pulumi.BoolInput `pulumi:"alwaysIncludeInToken"`
	// Specifies whether the Claim is for an access token (`"RESOURCE"`) or ID token (`"IDENTITY"`).
	ClaimType pulumi.StringInput `pulumi:"claimType"`
	// ID of the claim.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the claim.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the scopes for this Claim.
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
	// Status of the claim.
	Status pulumi.StringInput `pulumi:"status"`
	// Value of the claim
	Value pulumi.StringInput `pulumi:"value"`
	// Specifies whether the Claim is an Okta EL expression (`"EXPRESSION"`), a set of groups (`"GROUPS"`), or a system claim (`"SYSTEM"`)
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (GetAuthServerClaimsClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthServerClaimsClaim)(nil)).Elem()
}

func (i GetAuthServerClaimsClaimArgs) ToGetAuthServerClaimsClaimOutput() GetAuthServerClaimsClaimOutput {
	return i.ToGetAuthServerClaimsClaimOutputWithContext(context.Background())
}

func (i GetAuthServerClaimsClaimArgs) ToGetAuthServerClaimsClaimOutputWithContext(ctx context.Context) GetAuthServerClaimsClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthServerClaimsClaimOutput)
}

// GetAuthServerClaimsClaimArrayInput is an input type that accepts GetAuthServerClaimsClaimArray and GetAuthServerClaimsClaimArrayOutput values.
// You can construct a concrete instance of `GetAuthServerClaimsClaimArrayInput` via:
//
//	GetAuthServerClaimsClaimArray{ GetAuthServerClaimsClaimArgs{...} }
type GetAuthServerClaimsClaimArrayInput interface {
	pulumi.Input

	ToGetAuthServerClaimsClaimArrayOutput() GetAuthServerClaimsClaimArrayOutput
	ToGetAuthServerClaimsClaimArrayOutputWithContext(context.Context) GetAuthServerClaimsClaimArrayOutput
}

type GetAuthServerClaimsClaimArray []GetAuthServerClaimsClaimInput

func (GetAuthServerClaimsClaimArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthServerClaimsClaim)(nil)).Elem()
}

func (i GetAuthServerClaimsClaimArray) ToGetAuthServerClaimsClaimArrayOutput() GetAuthServerClaimsClaimArrayOutput {
	return i.ToGetAuthServerClaimsClaimArrayOutputWithContext(context.Background())
}

func (i GetAuthServerClaimsClaimArray) ToGetAuthServerClaimsClaimArrayOutputWithContext(ctx context.Context) GetAuthServerClaimsClaimArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthServerClaimsClaimArrayOutput)
}

type GetAuthServerClaimsClaimOutput struct{ *pulumi.OutputState }

func (GetAuthServerClaimsClaimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthServerClaimsClaim)(nil)).Elem()
}

func (o GetAuthServerClaimsClaimOutput) ToGetAuthServerClaimsClaimOutput() GetAuthServerClaimsClaimOutput {
	return o
}

func (o GetAuthServerClaimsClaimOutput) ToGetAuthServerClaimsClaimOutputWithContext(ctx context.Context) GetAuthServerClaimsClaimOutput {
	return o
}

// Specifies whether to include Claims in the token.
func (o GetAuthServerClaimsClaimOutput) AlwaysIncludeInToken() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthServerClaimsClaim) bool { return v.AlwaysIncludeInToken }).(pulumi.BoolOutput)
}

// Specifies whether the Claim is for an access token (`"RESOURCE"`) or ID token (`"IDENTITY"`).
func (o GetAuthServerClaimsClaimOutput) ClaimType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthServerClaimsClaim) string { return v.ClaimType }).(pulumi.StringOutput)
}

// ID of the claim.
func (o GetAuthServerClaimsClaimOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthServerClaimsClaim) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the claim.
func (o GetAuthServerClaimsClaimOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthServerClaimsClaim) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the scopes for this Claim.
func (o GetAuthServerClaimsClaimOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAuthServerClaimsClaim) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// Status of the claim.
func (o GetAuthServerClaimsClaimOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthServerClaimsClaim) string { return v.Status }).(pulumi.StringOutput)
}

// Value of the claim
func (o GetAuthServerClaimsClaimOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthServerClaimsClaim) string { return v.Value }).(pulumi.StringOutput)
}

// Specifies whether the Claim is an Okta EL expression (`"EXPRESSION"`), a set of groups (`"GROUPS"`), or a system claim (`"SYSTEM"`)
func (o GetAuthServerClaimsClaimOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthServerClaimsClaim) string { return v.ValueType }).(pulumi.StringOutput)
}

type GetAuthServerClaimsClaimArrayOutput struct{ *pulumi.OutputState }

func (GetAuthServerClaimsClaimArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthServerClaimsClaim)(nil)).Elem()
}

func (o GetAuthServerClaimsClaimArrayOutput) ToGetAuthServerClaimsClaimArrayOutput() GetAuthServerClaimsClaimArrayOutput {
	return o
}

func (o GetAuthServerClaimsClaimArrayOutput) ToGetAuthServerClaimsClaimArrayOutputWithContext(ctx context.Context) GetAuthServerClaimsClaimArrayOutput {
	return o
}

func (o GetAuthServerClaimsClaimArrayOutput) Index(i pulumi.IntInput) GetAuthServerClaimsClaimOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthServerClaimsClaim {
		return vs[0].([]GetAuthServerClaimsClaim)[vs[1].(int)]
	}).(GetAuthServerClaimsClaimOutput)
}

type GetBehavioursBehavior struct {
	// Behavior ID.
	Id string `pulumi:"id"`
	// Behavior name.
	Name string `pulumi:"name"`
	// Map of behavior settings.
	Settings map[string]string `pulumi:"settings"`
	// Behavior status.
	Status string `pulumi:"status"`
	// Behavior type.
	Type string `pulumi:"type"`
}

// GetBehavioursBehaviorInput is an input type that accepts GetBehavioursBehaviorArgs and GetBehavioursBehaviorOutput values.
// You can construct a concrete instance of `GetBehavioursBehaviorInput` via:
//
//	GetBehavioursBehaviorArgs{...}
type GetBehavioursBehaviorInput interface {
	pulumi.Input

	ToGetBehavioursBehaviorOutput() GetBehavioursBehaviorOutput
	ToGetBehavioursBehaviorOutputWithContext(context.Context) GetBehavioursBehaviorOutput
}

type GetBehavioursBehaviorArgs struct {
	// Behavior ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Behavior name.
	Name pulumi.StringInput `pulumi:"name"`
	// Map of behavior settings.
	Settings pulumi.StringMapInput `pulumi:"settings"`
	// Behavior status.
	Status pulumi.StringInput `pulumi:"status"`
	// Behavior type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetBehavioursBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBehavioursBehavior)(nil)).Elem()
}

func (i GetBehavioursBehaviorArgs) ToGetBehavioursBehaviorOutput() GetBehavioursBehaviorOutput {
	return i.ToGetBehavioursBehaviorOutputWithContext(context.Background())
}

func (i GetBehavioursBehaviorArgs) ToGetBehavioursBehaviorOutputWithContext(ctx context.Context) GetBehavioursBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBehavioursBehaviorOutput)
}

// GetBehavioursBehaviorArrayInput is an input type that accepts GetBehavioursBehaviorArray and GetBehavioursBehaviorArrayOutput values.
// You can construct a concrete instance of `GetBehavioursBehaviorArrayInput` via:
//
//	GetBehavioursBehaviorArray{ GetBehavioursBehaviorArgs{...} }
type GetBehavioursBehaviorArrayInput interface {
	pulumi.Input

	ToGetBehavioursBehaviorArrayOutput() GetBehavioursBehaviorArrayOutput
	ToGetBehavioursBehaviorArrayOutputWithContext(context.Context) GetBehavioursBehaviorArrayOutput
}

type GetBehavioursBehaviorArray []GetBehavioursBehaviorInput

func (GetBehavioursBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBehavioursBehavior)(nil)).Elem()
}

func (i GetBehavioursBehaviorArray) ToGetBehavioursBehaviorArrayOutput() GetBehavioursBehaviorArrayOutput {
	return i.ToGetBehavioursBehaviorArrayOutputWithContext(context.Background())
}

func (i GetBehavioursBehaviorArray) ToGetBehavioursBehaviorArrayOutputWithContext(ctx context.Context) GetBehavioursBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBehavioursBehaviorArrayOutput)
}

type GetBehavioursBehaviorOutput struct{ *pulumi.OutputState }

func (GetBehavioursBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBehavioursBehavior)(nil)).Elem()
}

func (o GetBehavioursBehaviorOutput) ToGetBehavioursBehaviorOutput() GetBehavioursBehaviorOutput {
	return o
}

func (o GetBehavioursBehaviorOutput) ToGetBehavioursBehaviorOutputWithContext(ctx context.Context) GetBehavioursBehaviorOutput {
	return o
}

// Behavior ID.
func (o GetBehavioursBehaviorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBehavioursBehavior) string { return v.Id }).(pulumi.StringOutput)
}

// Behavior name.
func (o GetBehavioursBehaviorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBehavioursBehavior) string { return v.Name }).(pulumi.StringOutput)
}

// Map of behavior settings.
func (o GetBehavioursBehaviorOutput) Settings() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetBehavioursBehavior) map[string]string { return v.Settings }).(pulumi.StringMapOutput)
}

// Behavior status.
func (o GetBehavioursBehaviorOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBehavioursBehavior) string { return v.Status }).(pulumi.StringOutput)
}

// Behavior type.
func (o GetBehavioursBehaviorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBehavioursBehavior) string { return v.Type }).(pulumi.StringOutput)
}

type GetBehavioursBehaviorArrayOutput struct{ *pulumi.OutputState }

func (GetBehavioursBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBehavioursBehavior)(nil)).Elem()
}

func (o GetBehavioursBehaviorArrayOutput) ToGetBehavioursBehaviorArrayOutput() GetBehavioursBehaviorArrayOutput {
	return o
}

func (o GetBehavioursBehaviorArrayOutput) ToGetBehavioursBehaviorArrayOutputWithContext(ctx context.Context) GetBehavioursBehaviorArrayOutput {
	return o
}

func (o GetBehavioursBehaviorArrayOutput) Index(i pulumi.IntInput) GetBehavioursBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBehavioursBehavior {
		return vs[0].([]GetBehavioursBehavior)[vs[1].(int)]
	}).(GetBehavioursBehaviorOutput)
}

type GetBrandsBrand struct {
	CustomPrivacyPolicyUrl string `pulumi:"customPrivacyPolicyUrl"`
	Id                     string `pulumi:"id"`
	Links                  string `pulumi:"links"`
	RemovePoweredByOkta    bool   `pulumi:"removePoweredByOkta"`
}

// GetBrandsBrandInput is an input type that accepts GetBrandsBrandArgs and GetBrandsBrandOutput values.
// You can construct a concrete instance of `GetBrandsBrandInput` via:
//
//	GetBrandsBrandArgs{...}
type GetBrandsBrandInput interface {
	pulumi.Input

	ToGetBrandsBrandOutput() GetBrandsBrandOutput
	ToGetBrandsBrandOutputWithContext(context.Context) GetBrandsBrandOutput
}

type GetBrandsBrandArgs struct {
	CustomPrivacyPolicyUrl pulumi.StringInput `pulumi:"customPrivacyPolicyUrl"`
	Id                     pulumi.StringInput `pulumi:"id"`
	Links                  pulumi.StringInput `pulumi:"links"`
	RemovePoweredByOkta    pulumi.BoolInput   `pulumi:"removePoweredByOkta"`
}

func (GetBrandsBrandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandsBrand)(nil)).Elem()
}

func (i GetBrandsBrandArgs) ToGetBrandsBrandOutput() GetBrandsBrandOutput {
	return i.ToGetBrandsBrandOutputWithContext(context.Background())
}

func (i GetBrandsBrandArgs) ToGetBrandsBrandOutputWithContext(ctx context.Context) GetBrandsBrandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandsBrandOutput)
}

// GetBrandsBrandArrayInput is an input type that accepts GetBrandsBrandArray and GetBrandsBrandArrayOutput values.
// You can construct a concrete instance of `GetBrandsBrandArrayInput` via:
//
//	GetBrandsBrandArray{ GetBrandsBrandArgs{...} }
type GetBrandsBrandArrayInput interface {
	pulumi.Input

	ToGetBrandsBrandArrayOutput() GetBrandsBrandArrayOutput
	ToGetBrandsBrandArrayOutputWithContext(context.Context) GetBrandsBrandArrayOutput
}

type GetBrandsBrandArray []GetBrandsBrandInput

func (GetBrandsBrandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandsBrand)(nil)).Elem()
}

func (i GetBrandsBrandArray) ToGetBrandsBrandArrayOutput() GetBrandsBrandArrayOutput {
	return i.ToGetBrandsBrandArrayOutputWithContext(context.Background())
}

func (i GetBrandsBrandArray) ToGetBrandsBrandArrayOutputWithContext(ctx context.Context) GetBrandsBrandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandsBrandArrayOutput)
}

type GetBrandsBrandOutput struct{ *pulumi.OutputState }

func (GetBrandsBrandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandsBrand)(nil)).Elem()
}

func (o GetBrandsBrandOutput) ToGetBrandsBrandOutput() GetBrandsBrandOutput {
	return o
}

func (o GetBrandsBrandOutput) ToGetBrandsBrandOutputWithContext(ctx context.Context) GetBrandsBrandOutput {
	return o
}

func (o GetBrandsBrandOutput) CustomPrivacyPolicyUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandsBrand) string { return v.CustomPrivacyPolicyUrl }).(pulumi.StringOutput)
}

func (o GetBrandsBrandOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandsBrand) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBrandsBrandOutput) Links() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandsBrand) string { return v.Links }).(pulumi.StringOutput)
}

func (o GetBrandsBrandOutput) RemovePoweredByOkta() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBrandsBrand) bool { return v.RemovePoweredByOkta }).(pulumi.BoolOutput)
}

type GetBrandsBrandArrayOutput struct{ *pulumi.OutputState }

func (GetBrandsBrandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandsBrand)(nil)).Elem()
}

func (o GetBrandsBrandArrayOutput) ToGetBrandsBrandArrayOutput() GetBrandsBrandArrayOutput {
	return o
}

func (o GetBrandsBrandArrayOutput) ToGetBrandsBrandArrayOutputWithContext(ctx context.Context) GetBrandsBrandArrayOutput {
	return o
}

func (o GetBrandsBrandArrayOutput) Index(i pulumi.IntInput) GetBrandsBrandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrandsBrand {
		return vs[0].([]GetBrandsBrand)[vs[1].(int)]
	}).(GetBrandsBrandOutput)
}

type GetEmailCustomizationsEmailCustomization struct {
	Body      string `pulumi:"body"`
	Id        string `pulumi:"id"`
	IsDefault bool   `pulumi:"isDefault"`
	Language  string `pulumi:"language"`
	Links     string `pulumi:"links"`
	Subject   string `pulumi:"subject"`
}

// GetEmailCustomizationsEmailCustomizationInput is an input type that accepts GetEmailCustomizationsEmailCustomizationArgs and GetEmailCustomizationsEmailCustomizationOutput values.
// You can construct a concrete instance of `GetEmailCustomizationsEmailCustomizationInput` via:
//
//	GetEmailCustomizationsEmailCustomizationArgs{...}
type GetEmailCustomizationsEmailCustomizationInput interface {
	pulumi.Input

	ToGetEmailCustomizationsEmailCustomizationOutput() GetEmailCustomizationsEmailCustomizationOutput
	ToGetEmailCustomizationsEmailCustomizationOutputWithContext(context.Context) GetEmailCustomizationsEmailCustomizationOutput
}

type GetEmailCustomizationsEmailCustomizationArgs struct {
	Body      pulumi.StringInput `pulumi:"body"`
	Id        pulumi.StringInput `pulumi:"id"`
	IsDefault pulumi.BoolInput   `pulumi:"isDefault"`
	Language  pulumi.StringInput `pulumi:"language"`
	Links     pulumi.StringInput `pulumi:"links"`
	Subject   pulumi.StringInput `pulumi:"subject"`
}

func (GetEmailCustomizationsEmailCustomizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEmailCustomizationsEmailCustomization)(nil)).Elem()
}

func (i GetEmailCustomizationsEmailCustomizationArgs) ToGetEmailCustomizationsEmailCustomizationOutput() GetEmailCustomizationsEmailCustomizationOutput {
	return i.ToGetEmailCustomizationsEmailCustomizationOutputWithContext(context.Background())
}

func (i GetEmailCustomizationsEmailCustomizationArgs) ToGetEmailCustomizationsEmailCustomizationOutputWithContext(ctx context.Context) GetEmailCustomizationsEmailCustomizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEmailCustomizationsEmailCustomizationOutput)
}

// GetEmailCustomizationsEmailCustomizationArrayInput is an input type that accepts GetEmailCustomizationsEmailCustomizationArray and GetEmailCustomizationsEmailCustomizationArrayOutput values.
// You can construct a concrete instance of `GetEmailCustomizationsEmailCustomizationArrayInput` via:
//
//	GetEmailCustomizationsEmailCustomizationArray{ GetEmailCustomizationsEmailCustomizationArgs{...} }
type GetEmailCustomizationsEmailCustomizationArrayInput interface {
	pulumi.Input

	ToGetEmailCustomizationsEmailCustomizationArrayOutput() GetEmailCustomizationsEmailCustomizationArrayOutput
	ToGetEmailCustomizationsEmailCustomizationArrayOutputWithContext(context.Context) GetEmailCustomizationsEmailCustomizationArrayOutput
}

type GetEmailCustomizationsEmailCustomizationArray []GetEmailCustomizationsEmailCustomizationInput

func (GetEmailCustomizationsEmailCustomizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEmailCustomizationsEmailCustomization)(nil)).Elem()
}

func (i GetEmailCustomizationsEmailCustomizationArray) ToGetEmailCustomizationsEmailCustomizationArrayOutput() GetEmailCustomizationsEmailCustomizationArrayOutput {
	return i.ToGetEmailCustomizationsEmailCustomizationArrayOutputWithContext(context.Background())
}

func (i GetEmailCustomizationsEmailCustomizationArray) ToGetEmailCustomizationsEmailCustomizationArrayOutputWithContext(ctx context.Context) GetEmailCustomizationsEmailCustomizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEmailCustomizationsEmailCustomizationArrayOutput)
}

type GetEmailCustomizationsEmailCustomizationOutput struct{ *pulumi.OutputState }

func (GetEmailCustomizationsEmailCustomizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEmailCustomizationsEmailCustomization)(nil)).Elem()
}

func (o GetEmailCustomizationsEmailCustomizationOutput) ToGetEmailCustomizationsEmailCustomizationOutput() GetEmailCustomizationsEmailCustomizationOutput {
	return o
}

func (o GetEmailCustomizationsEmailCustomizationOutput) ToGetEmailCustomizationsEmailCustomizationOutputWithContext(ctx context.Context) GetEmailCustomizationsEmailCustomizationOutput {
	return o
}

func (o GetEmailCustomizationsEmailCustomizationOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmailCustomizationsEmailCustomization) string { return v.Body }).(pulumi.StringOutput)
}

func (o GetEmailCustomizationsEmailCustomizationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmailCustomizationsEmailCustomization) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEmailCustomizationsEmailCustomizationOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEmailCustomizationsEmailCustomization) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

func (o GetEmailCustomizationsEmailCustomizationOutput) Language() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmailCustomizationsEmailCustomization) string { return v.Language }).(pulumi.StringOutput)
}

func (o GetEmailCustomizationsEmailCustomizationOutput) Links() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmailCustomizationsEmailCustomization) string { return v.Links }).(pulumi.StringOutput)
}

func (o GetEmailCustomizationsEmailCustomizationOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmailCustomizationsEmailCustomization) string { return v.Subject }).(pulumi.StringOutput)
}

type GetEmailCustomizationsEmailCustomizationArrayOutput struct{ *pulumi.OutputState }

func (GetEmailCustomizationsEmailCustomizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEmailCustomizationsEmailCustomization)(nil)).Elem()
}

func (o GetEmailCustomizationsEmailCustomizationArrayOutput) ToGetEmailCustomizationsEmailCustomizationArrayOutput() GetEmailCustomizationsEmailCustomizationArrayOutput {
	return o
}

func (o GetEmailCustomizationsEmailCustomizationArrayOutput) ToGetEmailCustomizationsEmailCustomizationArrayOutputWithContext(ctx context.Context) GetEmailCustomizationsEmailCustomizationArrayOutput {
	return o
}

func (o GetEmailCustomizationsEmailCustomizationArrayOutput) Index(i pulumi.IntInput) GetEmailCustomizationsEmailCustomizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEmailCustomizationsEmailCustomization {
		return vs[0].([]GetEmailCustomizationsEmailCustomization)[vs[1].(int)]
	}).(GetEmailCustomizationsEmailCustomizationOutput)
}

type GetGroupsGroup struct {
	// raw JSON containing all custom profile attributes. Likely only useful on groups of type `APP_GROUP`.
	CustomProfileAttributes string `pulumi:"customProfileAttributes"`
	// Group description.
	Description string `pulumi:"description"`
	// Group ID.
	Id string `pulumi:"id"`
	// Group name.
	Name string `pulumi:"name"`
	// type of the group to retrieve. Can only be one of `OKTA_GROUP` (Native Okta Groups), `APP_GROUP`
	// (Imported App Groups), or `BUILT_IN` (Okta System Groups).
	Type string `pulumi:"type"`
}

// GetGroupsGroupInput is an input type that accepts GetGroupsGroupArgs and GetGroupsGroupOutput values.
// You can construct a concrete instance of `GetGroupsGroupInput` via:
//
//	GetGroupsGroupArgs{...}
type GetGroupsGroupInput interface {
	pulumi.Input

	ToGetGroupsGroupOutput() GetGroupsGroupOutput
	ToGetGroupsGroupOutputWithContext(context.Context) GetGroupsGroupOutput
}

type GetGroupsGroupArgs struct {
	// raw JSON containing all custom profile attributes. Likely only useful on groups of type `APP_GROUP`.
	CustomProfileAttributes pulumi.StringInput `pulumi:"customProfileAttributes"`
	// Group description.
	Description pulumi.StringInput `pulumi:"description"`
	// Group ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
	// type of the group to retrieve. Can only be one of `OKTA_GROUP` (Native Okta Groups), `APP_GROUP`
	// (Imported App Groups), or `BUILT_IN` (Okta System Groups).
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsGroup)(nil)).Elem()
}

func (i GetGroupsGroupArgs) ToGetGroupsGroupOutput() GetGroupsGroupOutput {
	return i.ToGetGroupsGroupOutputWithContext(context.Background())
}

func (i GetGroupsGroupArgs) ToGetGroupsGroupOutputWithContext(ctx context.Context) GetGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupsGroupOutput)
}

// GetGroupsGroupArrayInput is an input type that accepts GetGroupsGroupArray and GetGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetGroupsGroupArrayInput` via:
//
//	GetGroupsGroupArray{ GetGroupsGroupArgs{...} }
type GetGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput
	ToGetGroupsGroupArrayOutputWithContext(context.Context) GetGroupsGroupArrayOutput
}

type GetGroupsGroupArray []GetGroupsGroupInput

func (GetGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupsGroup)(nil)).Elem()
}

func (i GetGroupsGroupArray) ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput {
	return i.ToGetGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetGroupsGroupArray) ToGetGroupsGroupArrayOutputWithContext(ctx context.Context) GetGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupsGroupArrayOutput)
}

type GetGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsGroup)(nil)).Elem()
}

func (o GetGroupsGroupOutput) ToGetGroupsGroupOutput() GetGroupsGroupOutput {
	return o
}

func (o GetGroupsGroupOutput) ToGetGroupsGroupOutputWithContext(ctx context.Context) GetGroupsGroupOutput {
	return o
}

// raw JSON containing all custom profile attributes. Likely only useful on groups of type `APP_GROUP`.
func (o GetGroupsGroupOutput) CustomProfileAttributes() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.CustomProfileAttributes }).(pulumi.StringOutput)
}

// Group description.
func (o GetGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// Group ID.
func (o GetGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// Group name.
func (o GetGroupsGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Name }).(pulumi.StringOutput)
}

// type of the group to retrieve. Can only be one of `OKTA_GROUP` (Native Okta Groups), `APP_GROUP`
// (Imported App Groups), or `BUILT_IN` (Okta System Groups).
func (o GetGroupsGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Type }).(pulumi.StringOutput)
}

type GetGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupsGroup)(nil)).Elem()
}

func (o GetGroupsGroupArrayOutput) ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput {
	return o
}

func (o GetGroupsGroupArrayOutput) ToGetGroupsGroupArrayOutputWithContext(ctx context.Context) GetGroupsGroupArrayOutput {
	return o
}

func (o GetGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupsGroup {
		return vs[0].([]GetGroupsGroup)[vs[1].(int)]
	}).(GetGroupsGroupOutput)
}

type GetTemplatesEmailTemplate struct {
	Links string `pulumi:"links"`
	Name  string `pulumi:"name"`
}

// GetTemplatesEmailTemplateInput is an input type that accepts GetTemplatesEmailTemplateArgs and GetTemplatesEmailTemplateOutput values.
// You can construct a concrete instance of `GetTemplatesEmailTemplateInput` via:
//
//	GetTemplatesEmailTemplateArgs{...}
type GetTemplatesEmailTemplateInput interface {
	pulumi.Input

	ToGetTemplatesEmailTemplateOutput() GetTemplatesEmailTemplateOutput
	ToGetTemplatesEmailTemplateOutputWithContext(context.Context) GetTemplatesEmailTemplateOutput
}

type GetTemplatesEmailTemplateArgs struct {
	Links pulumi.StringInput `pulumi:"links"`
	Name  pulumi.StringInput `pulumi:"name"`
}

func (GetTemplatesEmailTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplatesEmailTemplate)(nil)).Elem()
}

func (i GetTemplatesEmailTemplateArgs) ToGetTemplatesEmailTemplateOutput() GetTemplatesEmailTemplateOutput {
	return i.ToGetTemplatesEmailTemplateOutputWithContext(context.Background())
}

func (i GetTemplatesEmailTemplateArgs) ToGetTemplatesEmailTemplateOutputWithContext(ctx context.Context) GetTemplatesEmailTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplatesEmailTemplateOutput)
}

// GetTemplatesEmailTemplateArrayInput is an input type that accepts GetTemplatesEmailTemplateArray and GetTemplatesEmailTemplateArrayOutput values.
// You can construct a concrete instance of `GetTemplatesEmailTemplateArrayInput` via:
//
//	GetTemplatesEmailTemplateArray{ GetTemplatesEmailTemplateArgs{...} }
type GetTemplatesEmailTemplateArrayInput interface {
	pulumi.Input

	ToGetTemplatesEmailTemplateArrayOutput() GetTemplatesEmailTemplateArrayOutput
	ToGetTemplatesEmailTemplateArrayOutputWithContext(context.Context) GetTemplatesEmailTemplateArrayOutput
}

type GetTemplatesEmailTemplateArray []GetTemplatesEmailTemplateInput

func (GetTemplatesEmailTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplatesEmailTemplate)(nil)).Elem()
}

func (i GetTemplatesEmailTemplateArray) ToGetTemplatesEmailTemplateArrayOutput() GetTemplatesEmailTemplateArrayOutput {
	return i.ToGetTemplatesEmailTemplateArrayOutputWithContext(context.Background())
}

func (i GetTemplatesEmailTemplateArray) ToGetTemplatesEmailTemplateArrayOutputWithContext(ctx context.Context) GetTemplatesEmailTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplatesEmailTemplateArrayOutput)
}

type GetTemplatesEmailTemplateOutput struct{ *pulumi.OutputState }

func (GetTemplatesEmailTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplatesEmailTemplate)(nil)).Elem()
}

func (o GetTemplatesEmailTemplateOutput) ToGetTemplatesEmailTemplateOutput() GetTemplatesEmailTemplateOutput {
	return o
}

func (o GetTemplatesEmailTemplateOutput) ToGetTemplatesEmailTemplateOutputWithContext(ctx context.Context) GetTemplatesEmailTemplateOutput {
	return o
}

func (o GetTemplatesEmailTemplateOutput) Links() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesEmailTemplate) string { return v.Links }).(pulumi.StringOutput)
}

func (o GetTemplatesEmailTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesEmailTemplate) string { return v.Name }).(pulumi.StringOutput)
}

type GetTemplatesEmailTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetTemplatesEmailTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplatesEmailTemplate)(nil)).Elem()
}

func (o GetTemplatesEmailTemplateArrayOutput) ToGetTemplatesEmailTemplateArrayOutput() GetTemplatesEmailTemplateArrayOutput {
	return o
}

func (o GetTemplatesEmailTemplateArrayOutput) ToGetTemplatesEmailTemplateArrayOutputWithContext(ctx context.Context) GetTemplatesEmailTemplateArrayOutput {
	return o
}

func (o GetTemplatesEmailTemplateArrayOutput) Index(i pulumi.IntInput) GetTemplatesEmailTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplatesEmailTemplate {
		return vs[0].([]GetTemplatesEmailTemplate)[vs[1].(int)]
	}).(GetTemplatesEmailTemplateOutput)
}

type GetThemesTheme struct {
	BackgroundImageUrl                string `pulumi:"backgroundImageUrl"`
	EmailTemplateTouchPointVariant    string `pulumi:"emailTemplateTouchPointVariant"`
	EndUserDashboardTouchPointVariant string `pulumi:"endUserDashboardTouchPointVariant"`
	ErrorPageTouchPointVariant        string `pulumi:"errorPageTouchPointVariant"`
	FaviconUrl                        string `pulumi:"faviconUrl"`
	Id                                string `pulumi:"id"`
	Links                             string `pulumi:"links"`
	LogoUrl                           string `pulumi:"logoUrl"`
	PrimaryColorContrastHex           string `pulumi:"primaryColorContrastHex"`
	PrimaryColorHex                   string `pulumi:"primaryColorHex"`
	SecondaryColorContrastHex         string `pulumi:"secondaryColorContrastHex"`
	SecondaryColorHex                 string `pulumi:"secondaryColorHex"`
	SignInPageTouchPointVariant       string `pulumi:"signInPageTouchPointVariant"`
}

// GetThemesThemeInput is an input type that accepts GetThemesThemeArgs and GetThemesThemeOutput values.
// You can construct a concrete instance of `GetThemesThemeInput` via:
//
//	GetThemesThemeArgs{...}
type GetThemesThemeInput interface {
	pulumi.Input

	ToGetThemesThemeOutput() GetThemesThemeOutput
	ToGetThemesThemeOutputWithContext(context.Context) GetThemesThemeOutput
}

type GetThemesThemeArgs struct {
	BackgroundImageUrl                pulumi.StringInput `pulumi:"backgroundImageUrl"`
	EmailTemplateTouchPointVariant    pulumi.StringInput `pulumi:"emailTemplateTouchPointVariant"`
	EndUserDashboardTouchPointVariant pulumi.StringInput `pulumi:"endUserDashboardTouchPointVariant"`
	ErrorPageTouchPointVariant        pulumi.StringInput `pulumi:"errorPageTouchPointVariant"`
	FaviconUrl                        pulumi.StringInput `pulumi:"faviconUrl"`
	Id                                pulumi.StringInput `pulumi:"id"`
	Links                             pulumi.StringInput `pulumi:"links"`
	LogoUrl                           pulumi.StringInput `pulumi:"logoUrl"`
	PrimaryColorContrastHex           pulumi.StringInput `pulumi:"primaryColorContrastHex"`
	PrimaryColorHex                   pulumi.StringInput `pulumi:"primaryColorHex"`
	SecondaryColorContrastHex         pulumi.StringInput `pulumi:"secondaryColorContrastHex"`
	SecondaryColorHex                 pulumi.StringInput `pulumi:"secondaryColorHex"`
	SignInPageTouchPointVariant       pulumi.StringInput `pulumi:"signInPageTouchPointVariant"`
}

func (GetThemesThemeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetThemesTheme)(nil)).Elem()
}

func (i GetThemesThemeArgs) ToGetThemesThemeOutput() GetThemesThemeOutput {
	return i.ToGetThemesThemeOutputWithContext(context.Background())
}

func (i GetThemesThemeArgs) ToGetThemesThemeOutputWithContext(ctx context.Context) GetThemesThemeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetThemesThemeOutput)
}

// GetThemesThemeArrayInput is an input type that accepts GetThemesThemeArray and GetThemesThemeArrayOutput values.
// You can construct a concrete instance of `GetThemesThemeArrayInput` via:
//
//	GetThemesThemeArray{ GetThemesThemeArgs{...} }
type GetThemesThemeArrayInput interface {
	pulumi.Input

	ToGetThemesThemeArrayOutput() GetThemesThemeArrayOutput
	ToGetThemesThemeArrayOutputWithContext(context.Context) GetThemesThemeArrayOutput
}

type GetThemesThemeArray []GetThemesThemeInput

func (GetThemesThemeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetThemesTheme)(nil)).Elem()
}

func (i GetThemesThemeArray) ToGetThemesThemeArrayOutput() GetThemesThemeArrayOutput {
	return i.ToGetThemesThemeArrayOutputWithContext(context.Background())
}

func (i GetThemesThemeArray) ToGetThemesThemeArrayOutputWithContext(ctx context.Context) GetThemesThemeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetThemesThemeArrayOutput)
}

type GetThemesThemeOutput struct{ *pulumi.OutputState }

func (GetThemesThemeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetThemesTheme)(nil)).Elem()
}

func (o GetThemesThemeOutput) ToGetThemesThemeOutput() GetThemesThemeOutput {
	return o
}

func (o GetThemesThemeOutput) ToGetThemesThemeOutputWithContext(ctx context.Context) GetThemesThemeOutput {
	return o
}

func (o GetThemesThemeOutput) BackgroundImageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetThemesTheme) string { return v.BackgroundImageUrl }).(pulumi.StringOutput)
}

func (o GetThemesThemeOutput) EmailTemplateTouchPointVariant() pulumi.StringOutput {
	return o.ApplyT(func(v GetThemesTheme) string { return v.EmailTemplateTouchPointVariant }).(pulumi.StringOutput)
}

func (o GetThemesThemeOutput) EndUserDashboardTouchPointVariant() pulumi.StringOutput {
	return o.ApplyT(func(v GetThemesTheme) string { return v.EndUserDashboardTouchPointVariant }).(pulumi.StringOutput)
}

func (o GetThemesThemeOutput) ErrorPageTouchPointVariant() pulumi.StringOutput {
	return o.ApplyT(func(v GetThemesTheme) string { return v.ErrorPageTouchPointVariant }).(pulumi.StringOutput)
}

func (o GetThemesThemeOutput) FaviconUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetThemesTheme) string { return v.FaviconUrl }).(pulumi.StringOutput)
}

func (o GetThemesThemeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetThemesTheme) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetThemesThemeOutput) Links() pulumi.StringOutput {
	return o.ApplyT(func(v GetThemesTheme) string { return v.Links }).(pulumi.StringOutput)
}

func (o GetThemesThemeOutput) LogoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetThemesTheme) string { return v.LogoUrl }).(pulumi.StringOutput)
}

func (o GetThemesThemeOutput) PrimaryColorContrastHex() pulumi.StringOutput {
	return o.ApplyT(func(v GetThemesTheme) string { return v.PrimaryColorContrastHex }).(pulumi.StringOutput)
}

func (o GetThemesThemeOutput) PrimaryColorHex() pulumi.StringOutput {
	return o.ApplyT(func(v GetThemesTheme) string { return v.PrimaryColorHex }).(pulumi.StringOutput)
}

func (o GetThemesThemeOutput) SecondaryColorContrastHex() pulumi.StringOutput {
	return o.ApplyT(func(v GetThemesTheme) string { return v.SecondaryColorContrastHex }).(pulumi.StringOutput)
}

func (o GetThemesThemeOutput) SecondaryColorHex() pulumi.StringOutput {
	return o.ApplyT(func(v GetThemesTheme) string { return v.SecondaryColorHex }).(pulumi.StringOutput)
}

func (o GetThemesThemeOutput) SignInPageTouchPointVariant() pulumi.StringOutput {
	return o.ApplyT(func(v GetThemesTheme) string { return v.SignInPageTouchPointVariant }).(pulumi.StringOutput)
}

type GetThemesThemeArrayOutput struct{ *pulumi.OutputState }

func (GetThemesThemeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetThemesTheme)(nil)).Elem()
}

func (o GetThemesThemeArrayOutput) ToGetThemesThemeArrayOutput() GetThemesThemeArrayOutput {
	return o
}

func (o GetThemesThemeArrayOutput) ToGetThemesThemeArrayOutputWithContext(ctx context.Context) GetThemesThemeArrayOutput {
	return o
}

func (o GetThemesThemeArrayOutput) Index(i pulumi.IntInput) GetThemesThemeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetThemesTheme {
		return vs[0].([]GetThemesTheme)[vs[1].(int)]
	}).(GetThemesThemeOutput)
}

type GetTrustedOriginsTrustedOrigin struct {
	// Whether the Trusted Origin is active or not - can only be issued post-creation
	Active bool `pulumi:"active"`
	// The ID of the Trusted Origin.
	Id string `pulumi:"id"`
	// Unique name for this trusted origin.
	Name string `pulumi:"name"`
	// Unique origin URL for this trusted origin.
	Origin string `pulumi:"origin"`
	// Scopes of the Trusted Origin
	Scopes []string `pulumi:"scopes"`
}

// GetTrustedOriginsTrustedOriginInput is an input type that accepts GetTrustedOriginsTrustedOriginArgs and GetTrustedOriginsTrustedOriginOutput values.
// You can construct a concrete instance of `GetTrustedOriginsTrustedOriginInput` via:
//
//	GetTrustedOriginsTrustedOriginArgs{...}
type GetTrustedOriginsTrustedOriginInput interface {
	pulumi.Input

	ToGetTrustedOriginsTrustedOriginOutput() GetTrustedOriginsTrustedOriginOutput
	ToGetTrustedOriginsTrustedOriginOutputWithContext(context.Context) GetTrustedOriginsTrustedOriginOutput
}

type GetTrustedOriginsTrustedOriginArgs struct {
	// Whether the Trusted Origin is active or not - can only be issued post-creation
	Active pulumi.BoolInput `pulumi:"active"`
	// The ID of the Trusted Origin.
	Id pulumi.StringInput `pulumi:"id"`
	// Unique name for this trusted origin.
	Name pulumi.StringInput `pulumi:"name"`
	// Unique origin URL for this trusted origin.
	Origin pulumi.StringInput `pulumi:"origin"`
	// Scopes of the Trusted Origin
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
}

func (GetTrustedOriginsTrustedOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrustedOriginsTrustedOrigin)(nil)).Elem()
}

func (i GetTrustedOriginsTrustedOriginArgs) ToGetTrustedOriginsTrustedOriginOutput() GetTrustedOriginsTrustedOriginOutput {
	return i.ToGetTrustedOriginsTrustedOriginOutputWithContext(context.Background())
}

func (i GetTrustedOriginsTrustedOriginArgs) ToGetTrustedOriginsTrustedOriginOutputWithContext(ctx context.Context) GetTrustedOriginsTrustedOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrustedOriginsTrustedOriginOutput)
}

// GetTrustedOriginsTrustedOriginArrayInput is an input type that accepts GetTrustedOriginsTrustedOriginArray and GetTrustedOriginsTrustedOriginArrayOutput values.
// You can construct a concrete instance of `GetTrustedOriginsTrustedOriginArrayInput` via:
//
//	GetTrustedOriginsTrustedOriginArray{ GetTrustedOriginsTrustedOriginArgs{...} }
type GetTrustedOriginsTrustedOriginArrayInput interface {
	pulumi.Input

	ToGetTrustedOriginsTrustedOriginArrayOutput() GetTrustedOriginsTrustedOriginArrayOutput
	ToGetTrustedOriginsTrustedOriginArrayOutputWithContext(context.Context) GetTrustedOriginsTrustedOriginArrayOutput
}

type GetTrustedOriginsTrustedOriginArray []GetTrustedOriginsTrustedOriginInput

func (GetTrustedOriginsTrustedOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrustedOriginsTrustedOrigin)(nil)).Elem()
}

func (i GetTrustedOriginsTrustedOriginArray) ToGetTrustedOriginsTrustedOriginArrayOutput() GetTrustedOriginsTrustedOriginArrayOutput {
	return i.ToGetTrustedOriginsTrustedOriginArrayOutputWithContext(context.Background())
}

func (i GetTrustedOriginsTrustedOriginArray) ToGetTrustedOriginsTrustedOriginArrayOutputWithContext(ctx context.Context) GetTrustedOriginsTrustedOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrustedOriginsTrustedOriginArrayOutput)
}

type GetTrustedOriginsTrustedOriginOutput struct{ *pulumi.OutputState }

func (GetTrustedOriginsTrustedOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrustedOriginsTrustedOrigin)(nil)).Elem()
}

func (o GetTrustedOriginsTrustedOriginOutput) ToGetTrustedOriginsTrustedOriginOutput() GetTrustedOriginsTrustedOriginOutput {
	return o
}

func (o GetTrustedOriginsTrustedOriginOutput) ToGetTrustedOriginsTrustedOriginOutputWithContext(ctx context.Context) GetTrustedOriginsTrustedOriginOutput {
	return o
}

// Whether the Trusted Origin is active or not - can only be issued post-creation
func (o GetTrustedOriginsTrustedOriginOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTrustedOriginsTrustedOrigin) bool { return v.Active }).(pulumi.BoolOutput)
}

// The ID of the Trusted Origin.
func (o GetTrustedOriginsTrustedOriginOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrustedOriginsTrustedOrigin) string { return v.Id }).(pulumi.StringOutput)
}

// Unique name for this trusted origin.
func (o GetTrustedOriginsTrustedOriginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrustedOriginsTrustedOrigin) string { return v.Name }).(pulumi.StringOutput)
}

// Unique origin URL for this trusted origin.
func (o GetTrustedOriginsTrustedOriginOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrustedOriginsTrustedOrigin) string { return v.Origin }).(pulumi.StringOutput)
}

// Scopes of the Trusted Origin
func (o GetTrustedOriginsTrustedOriginOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTrustedOriginsTrustedOrigin) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type GetTrustedOriginsTrustedOriginArrayOutput struct{ *pulumi.OutputState }

func (GetTrustedOriginsTrustedOriginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrustedOriginsTrustedOrigin)(nil)).Elem()
}

func (o GetTrustedOriginsTrustedOriginArrayOutput) ToGetTrustedOriginsTrustedOriginArrayOutput() GetTrustedOriginsTrustedOriginArrayOutput {
	return o
}

func (o GetTrustedOriginsTrustedOriginArrayOutput) ToGetTrustedOriginsTrustedOriginArrayOutputWithContext(ctx context.Context) GetTrustedOriginsTrustedOriginArrayOutput {
	return o
}

func (o GetTrustedOriginsTrustedOriginArrayOutput) Index(i pulumi.IntInput) GetTrustedOriginsTrustedOriginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrustedOriginsTrustedOrigin {
		return vs[0].([]GetTrustedOriginsTrustedOrigin)[vs[1].(int)]
	}).(GetTrustedOriginsTrustedOriginOutput)
}

type GetUserSecurityQuestionsQuestion struct {
	// Security question unique key.
	Key string `pulumi:"key"`
	// Display text for security question.
	Text string `pulumi:"text"`
}

// GetUserSecurityQuestionsQuestionInput is an input type that accepts GetUserSecurityQuestionsQuestionArgs and GetUserSecurityQuestionsQuestionOutput values.
// You can construct a concrete instance of `GetUserSecurityQuestionsQuestionInput` via:
//
//	GetUserSecurityQuestionsQuestionArgs{...}
type GetUserSecurityQuestionsQuestionInput interface {
	pulumi.Input

	ToGetUserSecurityQuestionsQuestionOutput() GetUserSecurityQuestionsQuestionOutput
	ToGetUserSecurityQuestionsQuestionOutputWithContext(context.Context) GetUserSecurityQuestionsQuestionOutput
}

type GetUserSecurityQuestionsQuestionArgs struct {
	// Security question unique key.
	Key pulumi.StringInput `pulumi:"key"`
	// Display text for security question.
	Text pulumi.StringInput `pulumi:"text"`
}

func (GetUserSecurityQuestionsQuestionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserSecurityQuestionsQuestion)(nil)).Elem()
}

func (i GetUserSecurityQuestionsQuestionArgs) ToGetUserSecurityQuestionsQuestionOutput() GetUserSecurityQuestionsQuestionOutput {
	return i.ToGetUserSecurityQuestionsQuestionOutputWithContext(context.Background())
}

func (i GetUserSecurityQuestionsQuestionArgs) ToGetUserSecurityQuestionsQuestionOutputWithContext(ctx context.Context) GetUserSecurityQuestionsQuestionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserSecurityQuestionsQuestionOutput)
}

// GetUserSecurityQuestionsQuestionArrayInput is an input type that accepts GetUserSecurityQuestionsQuestionArray and GetUserSecurityQuestionsQuestionArrayOutput values.
// You can construct a concrete instance of `GetUserSecurityQuestionsQuestionArrayInput` via:
//
//	GetUserSecurityQuestionsQuestionArray{ GetUserSecurityQuestionsQuestionArgs{...} }
type GetUserSecurityQuestionsQuestionArrayInput interface {
	pulumi.Input

	ToGetUserSecurityQuestionsQuestionArrayOutput() GetUserSecurityQuestionsQuestionArrayOutput
	ToGetUserSecurityQuestionsQuestionArrayOutputWithContext(context.Context) GetUserSecurityQuestionsQuestionArrayOutput
}

type GetUserSecurityQuestionsQuestionArray []GetUserSecurityQuestionsQuestionInput

func (GetUserSecurityQuestionsQuestionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserSecurityQuestionsQuestion)(nil)).Elem()
}

func (i GetUserSecurityQuestionsQuestionArray) ToGetUserSecurityQuestionsQuestionArrayOutput() GetUserSecurityQuestionsQuestionArrayOutput {
	return i.ToGetUserSecurityQuestionsQuestionArrayOutputWithContext(context.Background())
}

func (i GetUserSecurityQuestionsQuestionArray) ToGetUserSecurityQuestionsQuestionArrayOutputWithContext(ctx context.Context) GetUserSecurityQuestionsQuestionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserSecurityQuestionsQuestionArrayOutput)
}

type GetUserSecurityQuestionsQuestionOutput struct{ *pulumi.OutputState }

func (GetUserSecurityQuestionsQuestionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserSecurityQuestionsQuestion)(nil)).Elem()
}

func (o GetUserSecurityQuestionsQuestionOutput) ToGetUserSecurityQuestionsQuestionOutput() GetUserSecurityQuestionsQuestionOutput {
	return o
}

func (o GetUserSecurityQuestionsQuestionOutput) ToGetUserSecurityQuestionsQuestionOutputWithContext(ctx context.Context) GetUserSecurityQuestionsQuestionOutput {
	return o
}

// Security question unique key.
func (o GetUserSecurityQuestionsQuestionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserSecurityQuestionsQuestion) string { return v.Key }).(pulumi.StringOutput)
}

// Display text for security question.
func (o GetUserSecurityQuestionsQuestionOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserSecurityQuestionsQuestion) string { return v.Text }).(pulumi.StringOutput)
}

type GetUserSecurityQuestionsQuestionArrayOutput struct{ *pulumi.OutputState }

func (GetUserSecurityQuestionsQuestionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserSecurityQuestionsQuestion)(nil)).Elem()
}

func (o GetUserSecurityQuestionsQuestionArrayOutput) ToGetUserSecurityQuestionsQuestionArrayOutput() GetUserSecurityQuestionsQuestionArrayOutput {
	return o
}

func (o GetUserSecurityQuestionsQuestionArrayOutput) ToGetUserSecurityQuestionsQuestionArrayOutputWithContext(ctx context.Context) GetUserSecurityQuestionsQuestionArrayOutput {
	return o
}

func (o GetUserSecurityQuestionsQuestionArrayOutput) Index(i pulumi.IntInput) GetUserSecurityQuestionsQuestionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserSecurityQuestionsQuestion {
		return vs[0].([]GetUserSecurityQuestionsQuestion)[vs[1].(int)]
	}).(GetUserSecurityQuestionsQuestionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppGroupAssignmentsGroupInput)(nil)).Elem(), AppGroupAssignmentsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppGroupAssignmentsGroupArrayInput)(nil)).Elem(), AppGroupAssignmentsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSharedCredentialsUserInput)(nil)).Elem(), AppSharedCredentialsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSharedCredentialsUserArrayInput)(nil)).Elem(), AppSharedCredentialsUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSignonPolicyRulePlatformIncludeInput)(nil)).Elem(), AppSignonPolicyRulePlatformIncludeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSignonPolicyRulePlatformIncludeArrayInput)(nil)).Elem(), AppSignonPolicyRulePlatformIncludeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppUserSchemaPropertyArrayOneOfInput)(nil)).Elem(), AppUserSchemaPropertyArrayOneOfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppUserSchemaPropertyArrayOneOfArrayInput)(nil)).Elem(), AppUserSchemaPropertyArrayOneOfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppUserSchemaPropertyOneOfInput)(nil)).Elem(), AppUserSchemaPropertyOneOfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppUserSchemaPropertyOneOfArrayInput)(nil)).Elem(), AppUserSchemaPropertyOneOfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainDnsRecordInput)(nil)).Elem(), DomainDnsRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainDnsRecordArrayInput)(nil)).Elem(), DomainDnsRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailSenderDnsRecordInput)(nil)).Elem(), EmailSenderDnsRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailSenderDnsRecordArrayInput)(nil)).Elem(), EmailSenderDnsRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventHookHeaderInput)(nil)).Elem(), EventHookHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventHookHeaderArrayInput)(nil)).Elem(), EventHookHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupSchemaPropertyArrayOneOfInput)(nil)).Elem(), GroupSchemaPropertyArrayOneOfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupSchemaPropertyArrayOneOfArrayInput)(nil)).Elem(), GroupSchemaPropertyArrayOneOfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupSchemaPropertyMasterOverridePriorityInput)(nil)).Elem(), GroupSchemaPropertyMasterOverridePriorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupSchemaPropertyMasterOverridePriorityArrayInput)(nil)).Elem(), GroupSchemaPropertyMasterOverridePriorityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupSchemaPropertyOneOfInput)(nil)).Elem(), GroupSchemaPropertyOneOfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupSchemaPropertyOneOfArrayInput)(nil)).Elem(), GroupSchemaPropertyOneOfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyRuleProfileEnrollmentProfileAttributeInput)(nil)).Elem(), PolicyRuleProfileEnrollmentProfileAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyRuleProfileEnrollmentProfileAttributeArrayInput)(nil)).Elem(), PolicyRuleProfileEnrollmentProfileAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSmsTranslationInput)(nil)).Elem(), TemplateSmsTranslationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSmsTranslationArrayInput)(nil)).Elem(), TemplateSmsTranslationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSchemaPropertyArrayOneOfInput)(nil)).Elem(), UserSchemaPropertyArrayOneOfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSchemaPropertyArrayOneOfArrayInput)(nil)).Elem(), UserSchemaPropertyArrayOneOfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSchemaPropertyMasterOverridePriorityInput)(nil)).Elem(), UserSchemaPropertyMasterOverridePriorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSchemaPropertyMasterOverridePriorityArrayInput)(nil)).Elem(), UserSchemaPropertyMasterOverridePriorityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSchemaPropertyOneOfInput)(nil)).Elem(), UserSchemaPropertyOneOfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSchemaPropertyOneOfArrayInput)(nil)).Elem(), UserSchemaPropertyOneOfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthServerClaimsClaimInput)(nil)).Elem(), GetAuthServerClaimsClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthServerClaimsClaimArrayInput)(nil)).Elem(), GetAuthServerClaimsClaimArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBehavioursBehaviorInput)(nil)).Elem(), GetBehavioursBehaviorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBehavioursBehaviorArrayInput)(nil)).Elem(), GetBehavioursBehaviorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandsBrandInput)(nil)).Elem(), GetBrandsBrandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandsBrandArrayInput)(nil)).Elem(), GetBrandsBrandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEmailCustomizationsEmailCustomizationInput)(nil)).Elem(), GetEmailCustomizationsEmailCustomizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEmailCustomizationsEmailCustomizationArrayInput)(nil)).Elem(), GetEmailCustomizationsEmailCustomizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupsGroupInput)(nil)).Elem(), GetGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupsGroupArrayInput)(nil)).Elem(), GetGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplatesEmailTemplateInput)(nil)).Elem(), GetTemplatesEmailTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplatesEmailTemplateArrayInput)(nil)).Elem(), GetTemplatesEmailTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetThemesThemeInput)(nil)).Elem(), GetThemesThemeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetThemesThemeArrayInput)(nil)).Elem(), GetThemesThemeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrustedOriginsTrustedOriginInput)(nil)).Elem(), GetTrustedOriginsTrustedOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrustedOriginsTrustedOriginArrayInput)(nil)).Elem(), GetTrustedOriginsTrustedOriginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserSecurityQuestionsQuestionInput)(nil)).Elem(), GetUserSecurityQuestionsQuestionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserSecurityQuestionsQuestionArrayInput)(nil)).Elem(), GetUserSecurityQuestionsQuestionArray{})
	pulumi.RegisterOutputType(AppGroupAssignmentsGroupOutput{})
	pulumi.RegisterOutputType(AppGroupAssignmentsGroupArrayOutput{})
	pulumi.RegisterOutputType(AppSharedCredentialsUserOutput{})
	pulumi.RegisterOutputType(AppSharedCredentialsUserArrayOutput{})
	pulumi.RegisterOutputType(AppSignonPolicyRulePlatformIncludeOutput{})
	pulumi.RegisterOutputType(AppSignonPolicyRulePlatformIncludeArrayOutput{})
	pulumi.RegisterOutputType(AppUserSchemaPropertyArrayOneOfOutput{})
	pulumi.RegisterOutputType(AppUserSchemaPropertyArrayOneOfArrayOutput{})
	pulumi.RegisterOutputType(AppUserSchemaPropertyOneOfOutput{})
	pulumi.RegisterOutputType(AppUserSchemaPropertyOneOfArrayOutput{})
	pulumi.RegisterOutputType(DomainDnsRecordOutput{})
	pulumi.RegisterOutputType(DomainDnsRecordArrayOutput{})
	pulumi.RegisterOutputType(EmailSenderDnsRecordOutput{})
	pulumi.RegisterOutputType(EmailSenderDnsRecordArrayOutput{})
	pulumi.RegisterOutputType(EventHookHeaderOutput{})
	pulumi.RegisterOutputType(EventHookHeaderArrayOutput{})
	pulumi.RegisterOutputType(GroupSchemaPropertyArrayOneOfOutput{})
	pulumi.RegisterOutputType(GroupSchemaPropertyArrayOneOfArrayOutput{})
	pulumi.RegisterOutputType(GroupSchemaPropertyMasterOverridePriorityOutput{})
	pulumi.RegisterOutputType(GroupSchemaPropertyMasterOverridePriorityArrayOutput{})
	pulumi.RegisterOutputType(GroupSchemaPropertyOneOfOutput{})
	pulumi.RegisterOutputType(GroupSchemaPropertyOneOfArrayOutput{})
	pulumi.RegisterOutputType(PolicyRuleProfileEnrollmentProfileAttributeOutput{})
	pulumi.RegisterOutputType(PolicyRuleProfileEnrollmentProfileAttributeArrayOutput{})
	pulumi.RegisterOutputType(TemplateSmsTranslationOutput{})
	pulumi.RegisterOutputType(TemplateSmsTranslationArrayOutput{})
	pulumi.RegisterOutputType(UserSchemaPropertyArrayOneOfOutput{})
	pulumi.RegisterOutputType(UserSchemaPropertyArrayOneOfArrayOutput{})
	pulumi.RegisterOutputType(UserSchemaPropertyMasterOverridePriorityOutput{})
	pulumi.RegisterOutputType(UserSchemaPropertyMasterOverridePriorityArrayOutput{})
	pulumi.RegisterOutputType(UserSchemaPropertyOneOfOutput{})
	pulumi.RegisterOutputType(UserSchemaPropertyOneOfArrayOutput{})
	pulumi.RegisterOutputType(GetAuthServerClaimsClaimOutput{})
	pulumi.RegisterOutputType(GetAuthServerClaimsClaimArrayOutput{})
	pulumi.RegisterOutputType(GetBehavioursBehaviorOutput{})
	pulumi.RegisterOutputType(GetBehavioursBehaviorArrayOutput{})
	pulumi.RegisterOutputType(GetBrandsBrandOutput{})
	pulumi.RegisterOutputType(GetBrandsBrandArrayOutput{})
	pulumi.RegisterOutputType(GetEmailCustomizationsEmailCustomizationOutput{})
	pulumi.RegisterOutputType(GetEmailCustomizationsEmailCustomizationArrayOutput{})
	pulumi.RegisterOutputType(GetGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetTemplatesEmailTemplateOutput{})
	pulumi.RegisterOutputType(GetTemplatesEmailTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetThemesThemeOutput{})
	pulumi.RegisterOutputType(GetThemesThemeArrayOutput{})
	pulumi.RegisterOutputType(GetTrustedOriginsTrustedOriginOutput{})
	pulumi.RegisterOutputType(GetTrustedOriginsTrustedOriginArrayOutput{})
	pulumi.RegisterOutputType(GetUserSecurityQuestionsQuestionOutput{})
	pulumi.RegisterOutputType(GetUserSecurityQuestionsQuestionArrayOutput{})
}

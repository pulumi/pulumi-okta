// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-okta/sdk/v4/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type AppSamlAppSettings struct {
	pulumi.CustomResourceState

	// Application ID
	AppId pulumi.StringOutput `pulumi:"appId"`
	// Application settings in JSON format
	Settings pulumi.StringOutput `pulumi:"settings"`
}

// NewAppSamlAppSettings registers a new resource with the given unique name, arguments, and options.
func NewAppSamlAppSettings(ctx *pulumi.Context,
	name string, args *AppSamlAppSettingsArgs, opts ...pulumi.ResourceOption) (*AppSamlAppSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppId == nil {
		return nil, errors.New("invalid value for required argument 'AppId'")
	}
	if args.Settings == nil {
		return nil, errors.New("invalid value for required argument 'Settings'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppSamlAppSettings
	err := ctx.RegisterResource("okta:index/appSamlAppSettings:AppSamlAppSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSamlAppSettings gets an existing AppSamlAppSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSamlAppSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSamlAppSettingsState, opts ...pulumi.ResourceOption) (*AppSamlAppSettings, error) {
	var resource AppSamlAppSettings
	err := ctx.ReadResource("okta:index/appSamlAppSettings:AppSamlAppSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSamlAppSettings resources.
type appSamlAppSettingsState struct {
	// Application ID
	AppId *string `pulumi:"appId"`
	// Application settings in JSON format
	Settings *string `pulumi:"settings"`
}

type AppSamlAppSettingsState struct {
	// Application ID
	AppId pulumi.StringPtrInput
	// Application settings in JSON format
	Settings pulumi.StringPtrInput
}

func (AppSamlAppSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSamlAppSettingsState)(nil)).Elem()
}

type appSamlAppSettingsArgs struct {
	// Application ID
	AppId string `pulumi:"appId"`
	// Application settings in JSON format
	Settings string `pulumi:"settings"`
}

// The set of arguments for constructing a AppSamlAppSettings resource.
type AppSamlAppSettingsArgs struct {
	// Application ID
	AppId pulumi.StringInput
	// Application settings in JSON format
	Settings pulumi.StringInput
}

func (AppSamlAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSamlAppSettingsArgs)(nil)).Elem()
}

type AppSamlAppSettingsInput interface {
	pulumi.Input

	ToAppSamlAppSettingsOutput() AppSamlAppSettingsOutput
	ToAppSamlAppSettingsOutputWithContext(ctx context.Context) AppSamlAppSettingsOutput
}

func (*AppSamlAppSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSamlAppSettings)(nil)).Elem()
}

func (i *AppSamlAppSettings) ToAppSamlAppSettingsOutput() AppSamlAppSettingsOutput {
	return i.ToAppSamlAppSettingsOutputWithContext(context.Background())
}

func (i *AppSamlAppSettings) ToAppSamlAppSettingsOutputWithContext(ctx context.Context) AppSamlAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSamlAppSettingsOutput)
}

func (i *AppSamlAppSettings) ToOutput(ctx context.Context) pulumix.Output[*AppSamlAppSettings] {
	return pulumix.Output[*AppSamlAppSettings]{
		OutputState: i.ToAppSamlAppSettingsOutputWithContext(ctx).OutputState,
	}
}

// AppSamlAppSettingsArrayInput is an input type that accepts AppSamlAppSettingsArray and AppSamlAppSettingsArrayOutput values.
// You can construct a concrete instance of `AppSamlAppSettingsArrayInput` via:
//
//	AppSamlAppSettingsArray{ AppSamlAppSettingsArgs{...} }
type AppSamlAppSettingsArrayInput interface {
	pulumi.Input

	ToAppSamlAppSettingsArrayOutput() AppSamlAppSettingsArrayOutput
	ToAppSamlAppSettingsArrayOutputWithContext(context.Context) AppSamlAppSettingsArrayOutput
}

type AppSamlAppSettingsArray []AppSamlAppSettingsInput

func (AppSamlAppSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSamlAppSettings)(nil)).Elem()
}

func (i AppSamlAppSettingsArray) ToAppSamlAppSettingsArrayOutput() AppSamlAppSettingsArrayOutput {
	return i.ToAppSamlAppSettingsArrayOutputWithContext(context.Background())
}

func (i AppSamlAppSettingsArray) ToAppSamlAppSettingsArrayOutputWithContext(ctx context.Context) AppSamlAppSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSamlAppSettingsArrayOutput)
}

func (i AppSamlAppSettingsArray) ToOutput(ctx context.Context) pulumix.Output[[]*AppSamlAppSettings] {
	return pulumix.Output[[]*AppSamlAppSettings]{
		OutputState: i.ToAppSamlAppSettingsArrayOutputWithContext(ctx).OutputState,
	}
}

// AppSamlAppSettingsMapInput is an input type that accepts AppSamlAppSettingsMap and AppSamlAppSettingsMapOutput values.
// You can construct a concrete instance of `AppSamlAppSettingsMapInput` via:
//
//	AppSamlAppSettingsMap{ "key": AppSamlAppSettingsArgs{...} }
type AppSamlAppSettingsMapInput interface {
	pulumi.Input

	ToAppSamlAppSettingsMapOutput() AppSamlAppSettingsMapOutput
	ToAppSamlAppSettingsMapOutputWithContext(context.Context) AppSamlAppSettingsMapOutput
}

type AppSamlAppSettingsMap map[string]AppSamlAppSettingsInput

func (AppSamlAppSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSamlAppSettings)(nil)).Elem()
}

func (i AppSamlAppSettingsMap) ToAppSamlAppSettingsMapOutput() AppSamlAppSettingsMapOutput {
	return i.ToAppSamlAppSettingsMapOutputWithContext(context.Background())
}

func (i AppSamlAppSettingsMap) ToAppSamlAppSettingsMapOutputWithContext(ctx context.Context) AppSamlAppSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSamlAppSettingsMapOutput)
}

func (i AppSamlAppSettingsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*AppSamlAppSettings] {
	return pulumix.Output[map[string]*AppSamlAppSettings]{
		OutputState: i.ToAppSamlAppSettingsMapOutputWithContext(ctx).OutputState,
	}
}

type AppSamlAppSettingsOutput struct{ *pulumi.OutputState }

func (AppSamlAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSamlAppSettings)(nil)).Elem()
}

func (o AppSamlAppSettingsOutput) ToAppSamlAppSettingsOutput() AppSamlAppSettingsOutput {
	return o
}

func (o AppSamlAppSettingsOutput) ToAppSamlAppSettingsOutputWithContext(ctx context.Context) AppSamlAppSettingsOutput {
	return o
}

func (o AppSamlAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[*AppSamlAppSettings] {
	return pulumix.Output[*AppSamlAppSettings]{
		OutputState: o.OutputState,
	}
}

// Application ID
func (o AppSamlAppSettingsOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSamlAppSettings) pulumi.StringOutput { return v.AppId }).(pulumi.StringOutput)
}

// Application settings in JSON format
func (o AppSamlAppSettingsOutput) Settings() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSamlAppSettings) pulumi.StringOutput { return v.Settings }).(pulumi.StringOutput)
}

type AppSamlAppSettingsArrayOutput struct{ *pulumi.OutputState }

func (AppSamlAppSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSamlAppSettings)(nil)).Elem()
}

func (o AppSamlAppSettingsArrayOutput) ToAppSamlAppSettingsArrayOutput() AppSamlAppSettingsArrayOutput {
	return o
}

func (o AppSamlAppSettingsArrayOutput) ToAppSamlAppSettingsArrayOutputWithContext(ctx context.Context) AppSamlAppSettingsArrayOutput {
	return o
}

func (o AppSamlAppSettingsArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*AppSamlAppSettings] {
	return pulumix.Output[[]*AppSamlAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o AppSamlAppSettingsArrayOutput) Index(i pulumi.IntInput) AppSamlAppSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppSamlAppSettings {
		return vs[0].([]*AppSamlAppSettings)[vs[1].(int)]
	}).(AppSamlAppSettingsOutput)
}

type AppSamlAppSettingsMapOutput struct{ *pulumi.OutputState }

func (AppSamlAppSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSamlAppSettings)(nil)).Elem()
}

func (o AppSamlAppSettingsMapOutput) ToAppSamlAppSettingsMapOutput() AppSamlAppSettingsMapOutput {
	return o
}

func (o AppSamlAppSettingsMapOutput) ToAppSamlAppSettingsMapOutputWithContext(ctx context.Context) AppSamlAppSettingsMapOutput {
	return o
}

func (o AppSamlAppSettingsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*AppSamlAppSettings] {
	return pulumix.Output[map[string]*AppSamlAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o AppSamlAppSettingsMapOutput) MapIndex(k pulumi.StringInput) AppSamlAppSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppSamlAppSettings {
		return vs[0].(map[string]*AppSamlAppSettings)[vs[1].(string)]
	}).(AppSamlAppSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSamlAppSettingsInput)(nil)).Elem(), &AppSamlAppSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSamlAppSettingsArrayInput)(nil)).Elem(), AppSamlAppSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSamlAppSettingsMapInput)(nil)).Elem(), AppSamlAppSettingsMap{})
	pulumi.RegisterOutputType(AppSamlAppSettingsOutput{})
	pulumi.RegisterOutputType(AppSamlAppSettingsArrayOutput{})
	pulumi.RegisterOutputType(AppSamlAppSettingsMapOutput{})
}

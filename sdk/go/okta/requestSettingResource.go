// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages request settings. This resource allows you to read and configure an Okta [request-setting](https://developer.okta.com/docs/api/iga/openapi/governance.requests.admin.v2/tag/Request-Settings/#tag/Request-Settings/operation/getRequestSettingsV2).
//
// ## Import
//
// ```sh
// $ pulumi import okta:index/requestSettingResource:RequestSettingResource example "<resource_id>"
// ```
type RequestSettingResource struct {
	pulumi.CustomResourceState

	// The id of the resource in Okta ID format.
	IdProperty pulumi.StringOutput `pulumi:"idProperty"`
	// Specifies if and for whom a requester may request the resource for.
	RequestOnBehalfOfSettings RequestSettingResourceRequestOnBehalfOfSettingsPtrOutput `pulumi:"requestOnBehalfOfSettings"`
	// Risk settings for the resource.
	RiskSettings RequestSettingResourceRiskSettingsPtrOutput `pulumi:"riskSettings"`
}

// NewRequestSettingResource registers a new resource with the given unique name, arguments, and options.
func NewRequestSettingResource(ctx *pulumi.Context,
	name string, args *RequestSettingResourceArgs, opts ...pulumi.ResourceOption) (*RequestSettingResource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdProperty == nil {
		return nil, errors.New("invalid value for required argument 'IdProperty'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RequestSettingResource
	err := ctx.RegisterResource("okta:index/requestSettingResource:RequestSettingResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRequestSettingResource gets an existing RequestSettingResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRequestSettingResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RequestSettingResourceState, opts ...pulumi.ResourceOption) (*RequestSettingResource, error) {
	var resource RequestSettingResource
	err := ctx.ReadResource("okta:index/requestSettingResource:RequestSettingResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RequestSettingResource resources.
type requestSettingResourceState struct {
	// The id of the resource in Okta ID format.
	IdProperty *string `pulumi:"idProperty"`
	// Specifies if and for whom a requester may request the resource for.
	RequestOnBehalfOfSettings *RequestSettingResourceRequestOnBehalfOfSettings `pulumi:"requestOnBehalfOfSettings"`
	// Risk settings for the resource.
	RiskSettings *RequestSettingResourceRiskSettings `pulumi:"riskSettings"`
}

type RequestSettingResourceState struct {
	// The id of the resource in Okta ID format.
	IdProperty pulumi.StringPtrInput
	// Specifies if and for whom a requester may request the resource for.
	RequestOnBehalfOfSettings RequestSettingResourceRequestOnBehalfOfSettingsPtrInput
	// Risk settings for the resource.
	RiskSettings RequestSettingResourceRiskSettingsPtrInput
}

func (RequestSettingResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*requestSettingResourceState)(nil)).Elem()
}

type requestSettingResourceArgs struct {
	// The id of the resource in Okta ID format.
	IdProperty string `pulumi:"idProperty"`
	// Specifies if and for whom a requester may request the resource for.
	RequestOnBehalfOfSettings *RequestSettingResourceRequestOnBehalfOfSettings `pulumi:"requestOnBehalfOfSettings"`
	// Risk settings for the resource.
	RiskSettings *RequestSettingResourceRiskSettings `pulumi:"riskSettings"`
}

// The set of arguments for constructing a RequestSettingResource resource.
type RequestSettingResourceArgs struct {
	// The id of the resource in Okta ID format.
	IdProperty pulumi.StringInput
	// Specifies if and for whom a requester may request the resource for.
	RequestOnBehalfOfSettings RequestSettingResourceRequestOnBehalfOfSettingsPtrInput
	// Risk settings for the resource.
	RiskSettings RequestSettingResourceRiskSettingsPtrInput
}

func (RequestSettingResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*requestSettingResourceArgs)(nil)).Elem()
}

type RequestSettingResourceInput interface {
	pulumi.Input

	ToRequestSettingResourceOutput() RequestSettingResourceOutput
	ToRequestSettingResourceOutputWithContext(ctx context.Context) RequestSettingResourceOutput
}

func (*RequestSettingResource) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestSettingResource)(nil)).Elem()
}

func (i *RequestSettingResource) ToRequestSettingResourceOutput() RequestSettingResourceOutput {
	return i.ToRequestSettingResourceOutputWithContext(context.Background())
}

func (i *RequestSettingResource) ToRequestSettingResourceOutputWithContext(ctx context.Context) RequestSettingResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestSettingResourceOutput)
}

// RequestSettingResourceArrayInput is an input type that accepts RequestSettingResourceArray and RequestSettingResourceArrayOutput values.
// You can construct a concrete instance of `RequestSettingResourceArrayInput` via:
//
//	RequestSettingResourceArray{ RequestSettingResourceArgs{...} }
type RequestSettingResourceArrayInput interface {
	pulumi.Input

	ToRequestSettingResourceArrayOutput() RequestSettingResourceArrayOutput
	ToRequestSettingResourceArrayOutputWithContext(context.Context) RequestSettingResourceArrayOutput
}

type RequestSettingResourceArray []RequestSettingResourceInput

func (RequestSettingResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RequestSettingResource)(nil)).Elem()
}

func (i RequestSettingResourceArray) ToRequestSettingResourceArrayOutput() RequestSettingResourceArrayOutput {
	return i.ToRequestSettingResourceArrayOutputWithContext(context.Background())
}

func (i RequestSettingResourceArray) ToRequestSettingResourceArrayOutputWithContext(ctx context.Context) RequestSettingResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestSettingResourceArrayOutput)
}

// RequestSettingResourceMapInput is an input type that accepts RequestSettingResourceMap and RequestSettingResourceMapOutput values.
// You can construct a concrete instance of `RequestSettingResourceMapInput` via:
//
//	RequestSettingResourceMap{ "key": RequestSettingResourceArgs{...} }
type RequestSettingResourceMapInput interface {
	pulumi.Input

	ToRequestSettingResourceMapOutput() RequestSettingResourceMapOutput
	ToRequestSettingResourceMapOutputWithContext(context.Context) RequestSettingResourceMapOutput
}

type RequestSettingResourceMap map[string]RequestSettingResourceInput

func (RequestSettingResourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RequestSettingResource)(nil)).Elem()
}

func (i RequestSettingResourceMap) ToRequestSettingResourceMapOutput() RequestSettingResourceMapOutput {
	return i.ToRequestSettingResourceMapOutputWithContext(context.Background())
}

func (i RequestSettingResourceMap) ToRequestSettingResourceMapOutputWithContext(ctx context.Context) RequestSettingResourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestSettingResourceMapOutput)
}

type RequestSettingResourceOutput struct{ *pulumi.OutputState }

func (RequestSettingResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestSettingResource)(nil)).Elem()
}

func (o RequestSettingResourceOutput) ToRequestSettingResourceOutput() RequestSettingResourceOutput {
	return o
}

func (o RequestSettingResourceOutput) ToRequestSettingResourceOutputWithContext(ctx context.Context) RequestSettingResourceOutput {
	return o
}

// The id of the resource in Okta ID format.
func (o RequestSettingResourceOutput) IdProperty() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestSettingResource) pulumi.StringOutput { return v.IdProperty }).(pulumi.StringOutput)
}

// Specifies if and for whom a requester may request the resource for.
func (o RequestSettingResourceOutput) RequestOnBehalfOfSettings() RequestSettingResourceRequestOnBehalfOfSettingsPtrOutput {
	return o.ApplyT(func(v *RequestSettingResource) RequestSettingResourceRequestOnBehalfOfSettingsPtrOutput {
		return v.RequestOnBehalfOfSettings
	}).(RequestSettingResourceRequestOnBehalfOfSettingsPtrOutput)
}

// Risk settings for the resource.
func (o RequestSettingResourceOutput) RiskSettings() RequestSettingResourceRiskSettingsPtrOutput {
	return o.ApplyT(func(v *RequestSettingResource) RequestSettingResourceRiskSettingsPtrOutput { return v.RiskSettings }).(RequestSettingResourceRiskSettingsPtrOutput)
}

type RequestSettingResourceArrayOutput struct{ *pulumi.OutputState }

func (RequestSettingResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RequestSettingResource)(nil)).Elem()
}

func (o RequestSettingResourceArrayOutput) ToRequestSettingResourceArrayOutput() RequestSettingResourceArrayOutput {
	return o
}

func (o RequestSettingResourceArrayOutput) ToRequestSettingResourceArrayOutputWithContext(ctx context.Context) RequestSettingResourceArrayOutput {
	return o
}

func (o RequestSettingResourceArrayOutput) Index(i pulumi.IntInput) RequestSettingResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RequestSettingResource {
		return vs[0].([]*RequestSettingResource)[vs[1].(int)]
	}).(RequestSettingResourceOutput)
}

type RequestSettingResourceMapOutput struct{ *pulumi.OutputState }

func (RequestSettingResourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RequestSettingResource)(nil)).Elem()
}

func (o RequestSettingResourceMapOutput) ToRequestSettingResourceMapOutput() RequestSettingResourceMapOutput {
	return o
}

func (o RequestSettingResourceMapOutput) ToRequestSettingResourceMapOutputWithContext(ctx context.Context) RequestSettingResourceMapOutput {
	return o
}

func (o RequestSettingResourceMapOutput) MapIndex(k pulumi.StringInput) RequestSettingResourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RequestSettingResource {
		return vs[0].(map[string]*RequestSettingResource)[vs[1].(string)]
	}).(RequestSettingResourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RequestSettingResourceInput)(nil)).Elem(), &RequestSettingResource{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestSettingResourceArrayInput)(nil)).Elem(), RequestSettingResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestSettingResourceMapInput)(nil)).Elem(), RequestSettingResourceMap{})
	pulumi.RegisterOutputType(RequestSettingResourceOutput{})
	pulumi.RegisterOutputType(RequestSettingResourceArrayOutput{})
	pulumi.RegisterOutputType(RequestSettingResourceMapOutput{})
}

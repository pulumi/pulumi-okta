// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages request sequence. This resource allows you to read and delete an Okta [request-sequence](https://developer.okta.com/docs/api/iga/openapi/governance.requests.admin.v2/tag/Request-Sequences/#tag/Request-Sequences).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-okta/sdk/v6/go/okta"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := okta.NewRequestSequence(ctx, "test", &okta.RequestSequenceArgs{
//				IdProperty: pulumi.String("<sequence_id>"),
//				ResourceId: pulumi.String("<resource_id>"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import okta:index/requestSequence:RequestSequence example <resource_id>/<id>
// ```
type RequestSequence struct {
	pulumi.CustomResourceState

	// Enum: `APP`, `GROUP`.
	CompatibleResourceTypes pulumi.StringArrayOutput `pulumi:"compatibleResourceTypes"`
	// The description of the request condition.
	Description pulumi.StringOutput `pulumi:"description"`
	// The id of the sequence.Must be of 24 characters length.
	IdProperty pulumi.StringOutput `pulumi:"idProperty"`
	// Link to edit the request sequence.
	Link pulumi.StringOutput `pulumi:"link"`
	// The access duration settings for the request condition
	Name pulumi.StringOutput `pulumi:"name"`
	// The id of the resource in Okta ID format.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
}

// NewRequestSequence registers a new resource with the given unique name, arguments, and options.
func NewRequestSequence(ctx *pulumi.Context,
	name string, args *RequestSequenceArgs, opts ...pulumi.ResourceOption) (*RequestSequence, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdProperty == nil {
		return nil, errors.New("invalid value for required argument 'IdProperty'")
	}
	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RequestSequence
	err := ctx.RegisterResource("okta:index/requestSequence:RequestSequence", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRequestSequence gets an existing RequestSequence resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRequestSequence(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RequestSequenceState, opts ...pulumi.ResourceOption) (*RequestSequence, error) {
	var resource RequestSequence
	err := ctx.ReadResource("okta:index/requestSequence:RequestSequence", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RequestSequence resources.
type requestSequenceState struct {
	// Enum: `APP`, `GROUP`.
	CompatibleResourceTypes []string `pulumi:"compatibleResourceTypes"`
	// The description of the request condition.
	Description *string `pulumi:"description"`
	// The id of the sequence.Must be of 24 characters length.
	IdProperty *string `pulumi:"idProperty"`
	// Link to edit the request sequence.
	Link *string `pulumi:"link"`
	// The access duration settings for the request condition
	Name *string `pulumi:"name"`
	// The id of the resource in Okta ID format.
	ResourceId *string `pulumi:"resourceId"`
}

type RequestSequenceState struct {
	// Enum: `APP`, `GROUP`.
	CompatibleResourceTypes pulumi.StringArrayInput
	// The description of the request condition.
	Description pulumi.StringPtrInput
	// The id of the sequence.Must be of 24 characters length.
	IdProperty pulumi.StringPtrInput
	// Link to edit the request sequence.
	Link pulumi.StringPtrInput
	// The access duration settings for the request condition
	Name pulumi.StringPtrInput
	// The id of the resource in Okta ID format.
	ResourceId pulumi.StringPtrInput
}

func (RequestSequenceState) ElementType() reflect.Type {
	return reflect.TypeOf((*requestSequenceState)(nil)).Elem()
}

type requestSequenceArgs struct {
	// The id of the sequence.Must be of 24 characters length.
	IdProperty string `pulumi:"idProperty"`
	// The id of the resource in Okta ID format.
	ResourceId string `pulumi:"resourceId"`
}

// The set of arguments for constructing a RequestSequence resource.
type RequestSequenceArgs struct {
	// The id of the sequence.Must be of 24 characters length.
	IdProperty pulumi.StringInput
	// The id of the resource in Okta ID format.
	ResourceId pulumi.StringInput
}

func (RequestSequenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*requestSequenceArgs)(nil)).Elem()
}

type RequestSequenceInput interface {
	pulumi.Input

	ToRequestSequenceOutput() RequestSequenceOutput
	ToRequestSequenceOutputWithContext(ctx context.Context) RequestSequenceOutput
}

func (*RequestSequence) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestSequence)(nil)).Elem()
}

func (i *RequestSequence) ToRequestSequenceOutput() RequestSequenceOutput {
	return i.ToRequestSequenceOutputWithContext(context.Background())
}

func (i *RequestSequence) ToRequestSequenceOutputWithContext(ctx context.Context) RequestSequenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestSequenceOutput)
}

// RequestSequenceArrayInput is an input type that accepts RequestSequenceArray and RequestSequenceArrayOutput values.
// You can construct a concrete instance of `RequestSequenceArrayInput` via:
//
//	RequestSequenceArray{ RequestSequenceArgs{...} }
type RequestSequenceArrayInput interface {
	pulumi.Input

	ToRequestSequenceArrayOutput() RequestSequenceArrayOutput
	ToRequestSequenceArrayOutputWithContext(context.Context) RequestSequenceArrayOutput
}

type RequestSequenceArray []RequestSequenceInput

func (RequestSequenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RequestSequence)(nil)).Elem()
}

func (i RequestSequenceArray) ToRequestSequenceArrayOutput() RequestSequenceArrayOutput {
	return i.ToRequestSequenceArrayOutputWithContext(context.Background())
}

func (i RequestSequenceArray) ToRequestSequenceArrayOutputWithContext(ctx context.Context) RequestSequenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestSequenceArrayOutput)
}

// RequestSequenceMapInput is an input type that accepts RequestSequenceMap and RequestSequenceMapOutput values.
// You can construct a concrete instance of `RequestSequenceMapInput` via:
//
//	RequestSequenceMap{ "key": RequestSequenceArgs{...} }
type RequestSequenceMapInput interface {
	pulumi.Input

	ToRequestSequenceMapOutput() RequestSequenceMapOutput
	ToRequestSequenceMapOutputWithContext(context.Context) RequestSequenceMapOutput
}

type RequestSequenceMap map[string]RequestSequenceInput

func (RequestSequenceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RequestSequence)(nil)).Elem()
}

func (i RequestSequenceMap) ToRequestSequenceMapOutput() RequestSequenceMapOutput {
	return i.ToRequestSequenceMapOutputWithContext(context.Background())
}

func (i RequestSequenceMap) ToRequestSequenceMapOutputWithContext(ctx context.Context) RequestSequenceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestSequenceMapOutput)
}

type RequestSequenceOutput struct{ *pulumi.OutputState }

func (RequestSequenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestSequence)(nil)).Elem()
}

func (o RequestSequenceOutput) ToRequestSequenceOutput() RequestSequenceOutput {
	return o
}

func (o RequestSequenceOutput) ToRequestSequenceOutputWithContext(ctx context.Context) RequestSequenceOutput {
	return o
}

// Enum: `APP`, `GROUP`.
func (o RequestSequenceOutput) CompatibleResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequestSequence) pulumi.StringArrayOutput { return v.CompatibleResourceTypes }).(pulumi.StringArrayOutput)
}

// The description of the request condition.
func (o RequestSequenceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestSequence) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The id of the sequence.Must be of 24 characters length.
func (o RequestSequenceOutput) IdProperty() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestSequence) pulumi.StringOutput { return v.IdProperty }).(pulumi.StringOutput)
}

// Link to edit the request sequence.
func (o RequestSequenceOutput) Link() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestSequence) pulumi.StringOutput { return v.Link }).(pulumi.StringOutput)
}

// The access duration settings for the request condition
func (o RequestSequenceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestSequence) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The id of the resource in Okta ID format.
func (o RequestSequenceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestSequence) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

type RequestSequenceArrayOutput struct{ *pulumi.OutputState }

func (RequestSequenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RequestSequence)(nil)).Elem()
}

func (o RequestSequenceArrayOutput) ToRequestSequenceArrayOutput() RequestSequenceArrayOutput {
	return o
}

func (o RequestSequenceArrayOutput) ToRequestSequenceArrayOutputWithContext(ctx context.Context) RequestSequenceArrayOutput {
	return o
}

func (o RequestSequenceArrayOutput) Index(i pulumi.IntInput) RequestSequenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RequestSequence {
		return vs[0].([]*RequestSequence)[vs[1].(int)]
	}).(RequestSequenceOutput)
}

type RequestSequenceMapOutput struct{ *pulumi.OutputState }

func (RequestSequenceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RequestSequence)(nil)).Elem()
}

func (o RequestSequenceMapOutput) ToRequestSequenceMapOutput() RequestSequenceMapOutput {
	return o
}

func (o RequestSequenceMapOutput) ToRequestSequenceMapOutputWithContext(ctx context.Context) RequestSequenceMapOutput {
	return o
}

func (o RequestSequenceMapOutput) MapIndex(k pulumi.StringInput) RequestSequenceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RequestSequence {
		return vs[0].(map[string]*RequestSequence)[vs[1].(string)]
	}).(RequestSequenceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RequestSequenceInput)(nil)).Elem(), &RequestSequence{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestSequenceArrayInput)(nil)).Elem(), RequestSequenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestSequenceMapInput)(nil)).Elem(), RequestSequenceMap{})
	pulumi.RegisterOutputType(RequestSequenceOutput{})
	pulumi.RegisterOutputType(RequestSequenceArrayOutput{})
	pulumi.RegisterOutputType(RequestSequenceMapOutput{})
}

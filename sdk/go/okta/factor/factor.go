// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package factor

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Allows you to manage the activation of Okta MFA methods.
//
// This resource allows you to manage Okta MFA methods.
//
// > This content is derived from https://github.com/articulate/terraform-provider-okta/blob/master/website/docs/r/factor.html.markdown.
type Factor struct {
	pulumi.CustomResourceState

	// Whether or not to activate the provider, by default it is set to `true`.
	Active pulumi.BoolPtrOutput `pulumi:"active"`
	// Factor provider ID
	ProviderId pulumi.StringOutput `pulumi:"providerId"`
}

// NewFactor registers a new resource with the given unique name, arguments, and options.
func NewFactor(ctx *pulumi.Context,
	name string, args *FactorArgs, opts ...pulumi.ResourceOption) (*Factor, error) {
	if args == nil || args.ProviderId == nil {
		return nil, errors.New("missing required argument 'ProviderId'")
	}
	if args == nil {
		args = &FactorArgs{}
	}
	var resource Factor
	err := ctx.RegisterResource("okta:factor/factor:Factor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFactor gets an existing Factor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFactor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FactorState, opts ...pulumi.ResourceOption) (*Factor, error) {
	var resource Factor
	err := ctx.ReadResource("okta:factor/factor:Factor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Factor resources.
type factorState struct {
	// Whether or not to activate the provider, by default it is set to `true`.
	Active *bool `pulumi:"active"`
	// Factor provider ID
	ProviderId *string `pulumi:"providerId"`
}

type FactorState struct {
	// Whether or not to activate the provider, by default it is set to `true`.
	Active pulumi.BoolPtrInput
	// Factor provider ID
	ProviderId pulumi.StringPtrInput
}

func (FactorState) ElementType() reflect.Type {
	return reflect.TypeOf((*factorState)(nil)).Elem()
}

type factorArgs struct {
	// Whether or not to activate the provider, by default it is set to `true`.
	Active *bool `pulumi:"active"`
	// Factor provider ID
	ProviderId string `pulumi:"providerId"`
}

// The set of arguments for constructing a Factor resource.
type FactorArgs struct {
	// Whether or not to activate the provider, by default it is set to `true`.
	Active pulumi.BoolPtrInput
	// Factor provider ID
	ProviderId pulumi.StringInput
}

func (FactorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*factorArgs)(nil)).Elem()
}
